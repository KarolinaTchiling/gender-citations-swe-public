FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Lesoil, L
   Acher, M
   Blouin, A
   Jézéquel, JM
AF Lesoil, Luc
   Acher, Mathieu
   Blouin, Arnaud
   Jezequel, Jean-Marc
TI Input sensitivity on the performance of configurable systems an
   empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Configurable systems; Input sensitivity; Performance prediction
ID PREDICTION; SELECTION
AB Widely used software systems such as video encoders are by necessity highly configurable, with hundreds or even thousands of options to choose from. Their users often have a hard time finding suitable values for these options (i.e., finding a proper configuration of the software system) to meet their goals for the tasks at hand, e.g., compress a video down to a certain size. One dimension of the problem is of course that performance depends on the input data: e.g., a video as input to an encoder like x264 or a file fed to a tool like xz. To achieve good performance, users should therefore take into account both dimensions of (1) software variability and (2) input data. This paper details a large study over 8 configurable systems that quantifies the existing interactions between input data and configurations of software systems. The results exhibit that (1) inputs fed to software systems can interact with their configuration options in non-monotonous ways, significantly impacting their performance properties (2) input sensitivity can challenge our knowledge of software variability and question the relevance of performance predictive models for a field deployment. Given the results of our study, we call researchers to address the problem of input sensitivity when tuning, predicting, understanding, and benchmarking configurable systems.Please refer to https://www.sciencedirect.com/science/article/pii/S0164121221002168 as an exam-ple of where to place this statement. "Editor s note: Open Science material was validated by the Journal of Systems and Software Open Science Board."(c) 2023 Published by Elsevier Inc.
C1 [Lesoil, Luc; Acher, Mathieu; Blouin, Arnaud] Univ Rennes, Inria, INSA Rennes, CNRS,IRISA, Rennes, France.
C3 Inria; Universite de Rennes; Centre National de la Recherche
   Scientifique (CNRS); Institut National des Sciences Appliquees de Rennes
RP Lesoil, L (corresponding author), Univ Rennes, Inria, INSA Rennes, CNRS,IRISA, Rennes, France.
EM lesoil.luc.ensai@gmail.com
OI Lesoil, Luc/0000-0002-8967-8154; Blouin, Arnaud/0000-0002-5974-9601
FU  [ANR-17-CE25-0010-01]
FX Acknowledgments This research was funded by the ANR-17-CE25-0010-01
   Vary-Vary project.
CR Acher M, 2017, ACM INT CONF PR SER, P83, DOI 10.1145/3168365.3168372
   Alipourfard O, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P469
   Amand B, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302338
   Atlam H F., 2013, International Journal of Computer Applications, V78, P9, DOI DOI 10.5120/13605-1387
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen JJ, 2021, PROC INT CONF SOFTW, P1198, DOI 10.1109/ICSE43902.2021.00110
   Chen T, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P157, DOI 10.1109/SEAMS.2019.00029
   Coppa Emilio, 2014, P CGO 14, V230, P239, DOI DOI 10.1145/2581122.2544143
   Couto M, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P84, DOI 10.1145/3106195.3106214
   De Cock J., 2016, LARGE SCALE COMP 264
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Deorowicz S., 2003, THESIS SILESIAN U TE
   Ding Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P728, DOI 10.1145/3468264.3468603
   Ding YF, 2015, ACM SIGPLAN NOTICES, V50, P379, DOI [10.1145/2813885.2737969, 10.1145/2737924.2737969]
   Dorn J., 2020, P VAMOS 20
   Dorn J, 2020, IEEE INT CONF AUTOM, P684, DOI 10.1145/3324884.3416620
   Duarte F, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P196, DOI 10.1145/3194133.3194138
   El Afia A, 2017, PROCEEDINGS OF 2017 3RD INTERNATIONAL CONFERENCE OF CLOUD COMPUTING TECHNOLOGIES AND APPLICATIONS (CLOUDTECH), P17
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   Falkner S, 2015, LECT NOTES COMPUT SC, V9340, P215, DOI 10.1007/978-3-319-24318-4_16
   Fu S, 2021, PROCEEDINGS OF THE 18TH USENIX SYMPOSIUM ON NETWORKED SYSTEM DESIGN AND IMPLEMENTATION, P763
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Ghamizi S, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P119, DOI 10.1145/3336294.3336306
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Grebhahn A, 2017, Concurrency and Computation: Practice and Experience, V29
   Guizzo G, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1127, DOI 10.1145/3368089.3409742
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Ha H, 2019, PROC IEEE INT CONF S, P470, DOI 10.1109/ICSME.2019.00080
   Han X, 2020, Arxiv, DOI arXiv:2010.01397
   Han X, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P1, DOI 10.1145/3427921.3450255
   Heule M., 2018, Department of Computer Science Series of Publications B, V2018
   HUMMEL RA, 1987, COMPUT VISION GRAPH, V38, P66, DOI 10.1016/S0734-189X(87)80153-6
   Incerto E, 2017, IEEE INT CONF AUTOM, P485, DOI 10.1109/ASE.2017.8115660
   Iorio F, 2019, INT CONF CLOUD COMP, P9, DOI 10.1109/CloudCom.2019.00015
   Kilgard MJ, 2020, Arxiv, DOI arXiv:2007.12254
   Jamshidi Pooyan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P31, DOI 10.1109/SEAMS.2017.11
   Jamshidi P, 2016, Arxiv, DOI arXiv:1606.06543
   Jamshidi P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P71, DOI 10.1145/3236024.3236074
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kendall M. G., 1948, Rank correlation methods.
   Koc U., 2021, SATUNE STUDY DRIVEN
   Kolesnikov S, 2018, Arxiv, DOI arXiv:1712.07440
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Krishna R, 2021, IEEE T SOFTWARE ENG, V47, P2956, DOI 10.1109/TSE.2020.2983927
   Larsson H, 2021, 2021 IFIP NETWORKING CONFERENCE AND WORKSHOPS (IFIP NETWORKING), DOI [10.23919/IFIPNetworking52078.2021.9472818, 10.23919/IFIPNETWORKING52078.2021.9472818]
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Lesoil L., 2022, P 16 INT WORK C VAR, P1
   Lesoil L, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442402
   Lillack M., 2013, SOFT ENG, V1, P1
   Liu F, 2020, 17TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS 2020 (CF 2020), P182, DOI 10.1145/3387902.3392633
   Maiorca D, 2019, IEEE SECUR PRIV, V17, P63, DOI 10.1109/MSEC.2018.2875879
   Martin H, 2022, IEEE T SOFTWARE ENG, V48, P4274, DOI 10.1109/TSE.2021.3116768
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Maxiaguine A, 2004, EMB SYST REAL TIME M, P41
   Molnar C., 2020, Interpretable machine learning.
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Murwantara IM, 2014, 16TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS 2014), P224, DOI 10.1145/2684200.2684314
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Nelson T., 2014, TECHNICALLY ORIENTED
   Nielsen Frank, 2016, INTRO HPC MPI DATA S, V1, P195
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Pereira JA, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111044
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Petkovich J., 2017, P 8 ACM SPEC INT C P, P39, DOI [10.1145/3030207.3030216, DOI 10.1145/3030207.3030216]
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Plotnikov D, 2013, PROCEDIA COMPUT SCI, V18, P1312, DOI 10.1016/j.procs.2013.05.298
   Poess M, 2000, SIGMOD RECORD, V29, P64, DOI 10.1145/369275.369291
   Pongnumkul S, 2017, 2017 26TH INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATION AND NETWORKS (ICCCN 2017)
   Pouchet Louis-Noel, 2012, Polybench: The polyhedral benchmark suite, P1
   Saleem MS, 2015, IEEE T SERV COMPUT, V8, P727, DOI 10.1109/TSC.2014.2377724
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Seber G. A., 2012, Linear regression analysis, V329
   Shu Y., 2020, ESEM 20 ACM IEEE INT, P1, DOI 10.1145/3382494.3410677
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Sinha Urjoshi, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P137, DOI 10.1007/978-3-030-59762-7_10
   Smitha M.L., 2016, INT ADV RES J SCI EN, V3, P108, DOI [10.17148/iarjset.2016, DOI 10.17148/IARJSET.2016]
   Still M., 2006, IMAGEMAGICK
   Sun HY, 2018, CC'18: PROCEEDINGS OF THE 27TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P196, DOI 10.1145/3178372.3179527
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Svogor I, 2019, INFORM SOFTWARE TECH, V105, P30, DOI 10.1016/j.infsof.2018.08.003
   Tavana MK, 2019, INT PARALL DISTRIB P, P664, DOI 10.1109/IPDPS.2019.00075
   Temple P, Research Report
   Temple P, 2018, Arxiv, DOI arXiv:1805.12021
   Temple P, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2017.4121211
   Temple Paul, 2016, P 20 INT SYST SOFTW, P209
   Thornton C, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P847, DOI 10.1145/2487575.2487629
   Valov P, 2015, P 19 INT C SOFTW PRO, P186, DOI [10.1145/2791060.2791069, DOI 10.1145/2791060.2791069]
   Valov P, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P12, DOI 10.1145/3358960.3379127
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Velez M, 2021, Arxiv, DOI arXiv:2101.05362
   Wang YL, 2019, IEEE INT WORKSH MULT, DOI 10.1109/mmsp.2019.8901772
   Weber M, 2021, Arxiv, DOI arXiv:2102.06395
   Weckesser M., 2018, P SPLC 18
   Westermann D, 2012, IEEE INT CONF AUTOM, P190, DOI 10.1145/2351676.2351703
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Zhang Y., 2016, SOC PETROLEUM ENG, P2, DOI [DOI 10.2118/182285-MS, 10.1145/2934466.2934469, DOI 10.1145/2934466.2934469]
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
   Zuluaga M, 2016, J MACH LEARN RES, V17
NR 108
TC 3
Z9 3
U1 1
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2023
VL 201
AR 111671
DI 10.1016/j.jss.2023.111671
EA APR 2023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F1IX6
UT WOS:000979963800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pasqua, M
   Benini, A
   Contro, F
   Crosara, M
   Dalla Preda, M
   Ceccato, M
AF Pasqua, Michele
   Benini, Andrea
   Contro, Filippo
   Crosara, Marco
   Dalla Preda, Mila
   Ceccato, Mariano
TI Enhancing Ethereum smart-contracts static analysis by computing a
   precise Control-Flow Graph of Ethereum bytecode
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Reverse engineering; Static analysis; Smart -contract; Ethereum
AB The immutable nature of Ethereum transactions, and consequently Ethereum smart-contracts, has stimulated the proliferation of many approaches aiming at detecting defects and security issues before the deployment of smart-contracts on the blockchain. Indeed, the actions performed by smart-contracts instantiated on the blockchain, possibly involving substantial financial value, cannot be undone.Unfortunately, smart-contracts source code is not always available, hence approaches based on static analysis have very often to face the problem of inspecting the compiled Ethereum Virtual Machine (EVM) bytecode, retrieved directly from the blockchain. However, due to the intrinsic complexity of EVM bytecode (especially in jumps address resolution), the state-of-the-art static analysis-based solutions have poor accuracy in the automated detection of Ethereum smart-contracts programming defects and vulnerabilities. This paper presents a novel approach based on symbolic execution of the EVM operands stack that allows to resolve jumps address in the EVM bytecode and to construct a precise Control-Flow Graph (CFG) of compiled smart-contracts. Many static analysis techniques are based on a CFG-based representation of the smart-contract to validate, and would therefore benefit from our approach. We have implemented the CFG reconstruction algorithm in a tool called EtherSolve. Then, we have validated the tool on a large dataset of real-world Ethereum smart-contracts, showing that EtherSolve extracts more precise CFGs, w.r.t. state-of-the-art available approaches. Finally, we have extended EtherSolve with two detectors for two of the most prominent Ethereum smart-contracts vulnerabilities (Reentrancy and Tx.origin). Experimental results show that exploiting the proposed CFG reconstruction static analysis, leads to more accurate vulnerabilities detection, w.r.t. state-of-the-art security tools.Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.(c) 2023 Elsevier Inc. All rights reserved.
C1 [Pasqua, Michele; Benini, Andrea; Contro, Filippo; Crosara, Marco; Dalla Preda, Mila; Ceccato, Mariano] Univ Verona, Str Grazie 15, I-37134 Verona, Verona, Italy.
C3 University of Verona
RP Pasqua, M; Ceccato, M (corresponding author), Univ Verona, Str Grazie 15, I-37134 Verona, Verona, Italy.
EM michele.pasqua@univr.it; andrea.benini@studenti.univr.it;
   filippo.contro_01@studenti.univr.it; marco.crosara@studenti.univr.it;
   mila.dallapreda@univr.it; mariano.ceccato@univr.it
RI PASQUA, MICHELE/ABB-9133-2021
OI PASQUA, MICHELE/0000-0002-9475-4836; Benini, Andrea/0000-0001-5931-2584;
   Crosara, Marco/0000-0002-2172-7669; Dalla Preda,
   Mila/0000-0003-2761-4347; Ceccato, Mariano/0000-0001-7325-0316
CR Albert E, 2020, Arxiv, DOI arXiv:2004.14437
   Albert E, 2018, LECT NOTES COMPUT SC, V11138, P513, DOI 10.1007/978-3-030-01090-4_30
   Albert E, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110923
   [Anonymous], 2014, ETHEREUM NEXT GENERA
   Antonopoulos A. M., 2017, Mastering Bitcoin: Programming the Open Blockchain, V2nd
   Antonopoulos Andreas M, 2018, Mastering Ethereum: Building Smart Contracts and DApps
   Baliga A., 2017, Persistent, V4, P14
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Chambers C., 2020, FORBES
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Coindesk, 2020, SOAR DEFI US DRIV ET
   Comaeio, 2020, GITH POR
   ConsenSys, 2020, GITH MYTHR
   Consensys, 2020, MYTHX SMART CONTR SE
   Contro F, 2021, INT C PROGRAM COMPRE, P127, DOI 10.1109/ICPC52881.2021.00021
   costa-group, 2020, GITH ETHIR
   Crytic, 2020, SLITH SOL SOURC AN
   Crytic, 2020, EVM CFG BUILD
   Crytic, ETH
   Crytic, 2020, ECH FAST SMART CONTR
   Crytic.io, 2020, CRYT CONT ASS SMART
   Dannen C., 2017, INTRO ETHEREUM SOLID, DOI [10.1007/978-1-4842-2535-6, DOI 10.1007/978-1-4842-2535-6]
   Dika A, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P955, DOI 10.1109/Cybermatics_2018.2018.00182
   Docker.com, 2020, DOCK
   Ethereum, 2020, SOL DOC
   Etherscan, 2020, LIST VER CONTR ADDR
   etherscan.io, 2020, Etherscan
   Eveem.org, 2020, PAN
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grech N, 2020, COMMUN ACM, V63, P87, DOI 10.1145/3416262
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   Li XQ, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P273, DOI 10.1109/QRS51102.2020.00045
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mueller B., 2020, SMASHING ETHEREUM SM
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Praitheeshan P, 2020, Arxiv, DOI arXiv:1908.08605
   Prisco G., 2020, DAO RAISES MORE 117
   Pulse D., 2021, DEFI TOTAL VALUE LOC
   Software E., 2020, JEB ETHEREUM CONTRAC
   Swende M.H., 2020, EIP 1884 REPRICING T
   Tabora V., 2020, ETHEREUM VIRTUAL MAC
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Trail of Bits, 2020, MANT
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Usyd-blockchain, 2020, GITH VAND
   Ventuzelo P., 2020, GITHUB OCTOPUS
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Z3Prover, 2020, GITH Z3
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
NR 53
TC 5
Z9 5
U1 1
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2023
VL 200
AR 111653
DI 10.1016/j.jss.2023.111653
EA MAR 2023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A8NC3
UT WOS:000957619500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Martou, P
   Mens, K
   Duhoux, B
   Legay, A
AF Martou, Pierre
   Mens, Kim
   Duhoux, Benoit
   Legay, Axel
TI Test scenario generation for feature-based context-oriented software
   systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Context-oriented programming; Feature modelling; Dynamic software
   product lines; Software testing; Combinatorial interaction testing;
   Satisfiability checking (SAT)
ID PRIORITIZATION
AB Feature-based context-oriented programming reconciles ideas from context-oriented programming, feature modelling and dynamic software product lines. It offers a programming language, architecture, tools and methodology to develop software systems consisting of contexts and features that can become active at run-time to offer the most appropriate behaviour depending on the actual context of use. Due to their high run-time adaptivity, dedicated tool support to test such systems is needed. Building upon a pairwise combinatorial interaction testing approach from the domain of software product lines, we implement an algorithm to generate automatically a small set of relevant test scenarios, ordered to minimise the number of context activations between tests. We also explore how the generated scenarios can be enhanced incrementally when the software evolves, and how useful the proposed testing approach is in practice. (c) 2022 Elsevier Inc. All rights reserved.
C1 [Martou, Pierre; Mens, Kim; Duhoux, Benoit; Legay, Axel] UCLouvain, ICTEAM, Louvain La Neuve, Belgium.
C3 Universite Catholique Louvain
RP Martou, P (corresponding author), UCLouvain, ICTEAM, Louvain La Neuve, Belgium.
EM pierre.martou@uclouvain.be; kim.mens@uclouvain.be;
   benoit.duhoux@uclouvain.be; axel.legay@uclouvain.be
OI Martou, Pierre/0000-0001-7966-0252; Mens, Kim/0000-0003-0303-1630
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Acher M., 2009, PROC 4 INT WORKSHOP, P10
   Al-Hajjaji M, 2019, SOFTW SYST MODEL, V18, P499, DOI 10.1007/s10270-016-0569-2
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Baranov E, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1114, DOI 10.1145/3368089.3409744
   Baresi L, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P57, DOI 10.1109/SEAMS.2015.24
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bencomo N., 2008, P 12 INT C SOFTWARE, V2, P23
   Bencomo Nelly, 2010, DYNAMIC IS YOUR DYNA
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Capilla R, 2014, COMPUTER, V47, P85, DOI 10.1109/MC.2014.33
   Capilla Rafael, 2015, P 9 INT WORKSHOP VAR, P43
   Cardozo Nicolas, 2014, P 8 INT WORKSH VAR M, p18:1
   Cardozo Nicolas, 2011, P INT C SOFTWARE ENG, P130
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cordy M., 2013, Lecture Notes in Computer Science, V7740, P1, DOI [DOI 10.1007/978-3-642-36249, 10.1007/978-3-642-36249-1_1, DOI 10.1007/978-3-642-36249-1_1]
   Cordy M, 2021, FORM ASP COMPUT, V33, P1147, DOI 10.1007/s00165-021-00563-2
   Cordy M, 2013, FME WORKS FORM, P64, DOI 10.1109/FormaliSE.2013.6612279
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference (SPLC'12), P66, DOI DOI 10.1145/2362536
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Costanza P., 2008, P 12 INT C SOFTW PRO, P9
   Coutaz J, 2005, COMMUN ACM, V48, P49, DOI 10.1145/1047671.1047703
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Desmet B, 2007, LECT NOTES ARTIF INT, V4635, P178
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Dinkelaker T., 2010, P 1 WORKSH COMP VAR
   Dubslaff Clemens, 2014, MODULARITY 14 MODULA, P169, DOI [10.1145/2577080.2577095, DOI 10.1145/2577080.2577095]
   Duhoux B., 2016, P 8 INT WORKSHOP CON, P7
   DUHOUX B, 2018, INT WORKSH CONT OR P, P15
   Duhoux B., 2019, P SEM SER ADV TECHN, V2510, P1
   Duhoux B, 2019, PROCEEDINGS OF THE WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING (COP'19), P9, DOI 10.1145/3340671.3343357
   Duhoux Benoit, 2022, THESIS U CATHOLIQUE
   Fernandes P, 2011, J UNIVERS COMPUT SCI, V17, P807
   González S, 2011, LECT NOTES COMPUT SC, V6563, P246, DOI 10.1007/978-3-642-19440-5_15
   Gottmann Hendrik, 2020, P 24 ACM C SYSTEMS S, DOI [10.1145/3382025.3414945, DOI 10.1145/3382025.3414945]
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Hierons RM, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3361146
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hirschfeld R, 2008, LECT NOTES COMPUT SC, V5235, P396, DOI 10.1007/978-3-540-88643-3_9
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2013, Generative and Transformational Techniques in Software Engineering IV, P346
   Kotsiantis Sotiris., 2006, Discretization techniques: A recent survey
   Kowal M, 2017, ACM SIGPLAN NOTICES, V52, P132, DOI [10.1145/3093335.2993248, 10.1145/2993236.2993248]
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Lity S., 2017, P 11 INT WORKSH VAR, P60, DOI DOI 10.1145/3023956.3023961
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Martelletti P, 2021, PAIN THER, V10, P777, DOI 10.1007/s40122-021-00278-5
   Mauro J, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442405
   Mauro J, 2018, SCI COMPUT PROGRAM, V163, P139, DOI 10.1016/j.scico.2018.05.002
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mens K, 2017, IEEE SOFTWARE, V34, P58, DOI 10.1109/MS.2017.4121225
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Reuling D., 2015, P 19 INT SOFTWARE PR, P131
   Rosenmüller M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P3
   Salvaneschi G, 2012, J SYST SOFTWARE, V85, P1801, DOI 10.1016/j.jss.2012.03.024
   Salvaneschi Guido, 2011, P 3 INT WORKSH CONT, p4:1
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
   Srikanth Hema, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P61, DOI 10.1109/ISSRE.2009.26
   ter Beek MH, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302349
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   Thevenin D, 1999, HUMAN-COMPUTER INTERACTION - INTERACT '99, P110
NR 70
TC 2
Z9 2
U1 1
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111570
DI 10.1016/j.jss.2022.111570
EA DEC 2022
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7I5DU
UT WOS:000903909200001
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Pinto, M
   Fuentes, L
AF Horcas, Jose-Miguel
   Pinto, Monica
   Fuentes, Lidia
TI A modular metamodel and refactoring rules to achieve software product
   line interoperability
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Variability modeling language; Modular metamodel; Model refactoring;
   Model specialization; Interoperability; Edge computing
ID VARIABILITY; LANGUAGE; SYSTEMS; SEMANTICS; MODELS; TOOLS
AB Emergent application domains, such as cyber-physical systems, edge computing or industry 4.0. present a high variability in software and hardware infrastructures. However, no single variability modeling language supports all language extensions required by these application domains (i.e., attributes, group cardinalities, clonables, complex constraints). This limitation is an open challenge that should be tackled by the software engineering field, and specifically by the software product line (SPL) community. A possible solution could be to define a completely new language, but this has a high cost in terms of adoption time and development of new tools. A more viable alternative is the definition of refactoring and specialization rules that allow interoperability between existing variability languages. However, with this approach, these rules cannot be reused across languages because each language uses a different set of modeling concepts and a different concrete syntax. Our approach relies on a modular and extensible metamodel that defines a common abstract syntax for existing variability modeling extensions. We map existing feature modeling languages in the SPL community to our common abstract syntax. Using our abstract syntax, we define refactoring rules at the language construct level that help to achieve interoperability between variability modeling languages.(c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Horcas, Jose-Miguel; Pinto, Monica; Fuentes, Lidia] Univ Malaga, Andalucia Tech, ITIS Software, Malaga, Spain.
C3 Universidad de Malaga
RP Horcas, JM (corresponding author), Univ Malaga, Andalucia Tech, ITIS Software, Malaga, Spain.
EM horcas@lcc.uma.es; pinto@lcc.uma.es; lff@lcc.uma.es
RI Pinto, Monica/G-1891-2015; Horcas Aguilera, José Miguel/R-3564-2018;
   Fuentes, Lidia/M-5580-2014
OI Pinto, Monica/0000-0002-5376-742X; Horcas Aguilera, José
   Miguel/0000-0002-7771-0575; Fuentes, Lidia/0000-0002-5677-7156
FU MEDEA [RTI2018-099213-B-I00, IRIS PID2021-122812OB-I00]; FEDER funds,
   Rhea [P18-FR-1081]; LEIA [UMA18-FEDERIA-157]; DAEMON [H2020-101017109];
   Universidad de Malaga/CBUA
FX Work supported by the projects MEDEA RTI2018-099213-B-I00, IRIS
   PID2021-122812OB-I00 (co-financed by FEDER funds), Rhea P18-FR-1081
   (MCI/AEI/FEDER, UE) , LEIA UMA18-FEDERIA-157, and DAEMON
   H2020-101017109. We would also like to thank Miguel de la Morena Perez
   who worked on the implementation of this study as part of the Rhea
   project and his Master Dissertation. Funding for open access:
   Universidad de Malaga/CBUA.
CR Abele Andreas., 2010, Proceedings of the 4th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'10), V37, P101
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Al-Azzawi A.F, 2018, INT J SOFTWARE ENG A, V9, P41, DOI [10.5121/ijsea.2018.9104, DOI 10.5121/IJSEA.2018.9104]
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides David, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P365, DOI 10.1007/978-3-030-30985-5_21
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D., 2019, 23 INT SYSTEMS SOFTW, VA, DOI [10.1145/3336294.3342364, DOI 10.1145/3336294.3342364]
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P174, DOI 10.1145/3307630.3342403
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Butting A, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P65, DOI 10.1145/3233027.3233037
   Butting A, 2017, ACM INT CONF PR SER, P75, DOI 10.1145/3168365.3168368
   Canete Angel, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P79, DOI 10.1145/3382026.3425772
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Eichelberger Holger, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P32, DOI 10.1007/978-3-642-38977-1_3
   Fadhlillah HS, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P123, DOI 10.1145/3461002.3473941
   Feichtinger K, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P18, DOI 10.1145/3461002.3473069
   Feichtinger K, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P69, DOI 10.1145/3461002.3473945
   Feichtinger K, 2020, EUROMICRO CONF PROC, P179, DOI 10.1109/SEAA51224.2020.00037
   Feichtinger Kevin, 2021, P 15 INT WORK C VAR
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gheyi R, 2011, J UNIVERS COMPUT SCI, V17, P684
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Heradio R, 2016, FRONT ARTIF INTEL AP, V286, P139, DOI 10.3233/978-1-61499-674-3-139
   Heymans P., 2007, SOFTWARE SERVICES VA
   Horcas Jose-Miguel, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414959
   Horcas JM, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111551
   Juodisius Paulius., 2019, ART SCI ENG PROGRAM, V3, P2, DOI [DOI 10.22152/PROGRAMMINGJOURNAL.ORG/2019/3/2, 10.22152/programming-journal.org/2019/3/2, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2019/3/2]
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KANG KC, 1990, CMUSEI90TR21 SOFTW E
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P237, DOI 10.1145/3106195.3106217
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   Liu F, 2019, P IEEE, V107, P1537, DOI 10.1109/JPROC.2019.2920341
   Ma ZY, 2014, CHINESE J ELECTRON, V23, P219
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Meixner K, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P49, DOI 10.1145/3307630.3342411
   Merenda M, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20092533
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Munoz DJ, 2021, LECT NOTES COMPUT SC, V12751, P397, DOI 10.1007/978-3-030-79382-1_24
   Munoz DJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P289, DOI 10.1145/3336294.3336297
   Object Management Group (OMG), 2016, MET OBJ FAC MOF V2 5
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Romero D, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P80, DOI 10.1145/3461002.3473949
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Schmid K, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P306, DOI 10.1145/3233027.3233057
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schmitt A, 2018, ADV TRANSDISCIPL ENG, V7, P665, DOI 10.3233/978-1-61499-898-3-665
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Seidl Christoph, 2016, Modellierung 2016, P157
   Sepúlveda S, 2016, INFORM SOFTWARE TECH, V69, P16, DOI 10.1016/j.infsof.2015.08.007
   Sepulveda Samuel., 2012, Proceedings of the 7th Iberian Conference on Information Systems and Technologies (CISTI'12), P1
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sundermann C, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471145
   Sundermann C, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377025
   Tanhaei M, 2016, INFORM SOFTWARE TECH, V80, P138, DOI 10.1016/j.infsof.2016.08.011
   ter Beek MH, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P151, DOI 10.1145/3307630.3342398
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thüm T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P158, DOI 10.1145/3307630.3342404
   Urli S., 2012, P 6 INT WORKSH MOD E, P2126, DOI [10.1145/2523599.2523604, DOI 10.1145/2523599.2523604]
   Villota A, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P162, DOI 10.1145/3307630.3342401
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
NR 77
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111579
DI 10.1016/j.jss.2022.111579
EA DEC 2022
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8Q1PA
UT WOS:000926985500006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Li, XZ
   Moreschini, S
   Zhang, ZY
   Taibi, D
AF Li, Xiaozhou
   Moreschini, Sergio
   Zhang, Zheying
   Taibi, Davide
TI Exploring factors and metrics to select open source software components
   for integration: An empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Open source; Software selection; Open source adoption
ID REPUTATION; QUALITY
AB Context: Open Source Software (OSS) is nowadays used and integrated in most of the commercial products. However, the selection of OSS projects for integration is not a simple process, mainly due to a of lack of clear selection models and lack of information from the OSS portals.& nbsp;Objective: We investigate the factors and metrics that practitioners currently consider when selecting OSS. We also investigate the source of information and portals that can be used to assess the factors, as well as the possibility to automatically extract such information with APIs.& nbsp;Method: We elicited the factors and the metrics adopted to assess and compare OSS performing a survey among 23 experienced developers who often integrate OSS in the software they develop. Moreover, we investigated the APIs of the portals adopted to assess OSS extracting information for the most starred 100K projects in GitHub.& nbsp;Result: We identified a set consisting of 8 main factors and 74 sub-factors, together with 170 related metrics that companies can use to select OSS to be integrated in their software projects. Unexpectedly, only a small part of the factors can be evaluated automatically, and out of 170 metrics, only 40 are available, of which only 22 returned information for all the 100K projects. Therefore, we recommend project maintainers and project repositories to pay attention to provide information for the project they are hosting, so as to increase the likelihood of being adopted.& nbsp;Conclusion: OSS selection can be partially automated, by extracting the information needed for the selection from portal APIs. OSS producers can benefit from our results by checking if they are providing all the information commonly required by potential adopters. Developers can benefit from our results, using the list of factors we selected as a checklist during the selection of OSS, or using the APIs we developed to automatically extract the data from OSS projects. (C) 2022 The Author(s). Published by Elsevier Inc.& nbsp;
C1 [Li, Xiaozhou; Moreschini, Sergio; Zhang, Zheying; Taibi, Davide] Tampere Univ, Tampere, Finland.
C3 Tampere University
RP Taibi, D (corresponding author), Tampere Univ, Tampere, Finland.
EM xiaozhou.li@tuni.fi; sergio.moreschini@tuni.fi; zheying.zhang@tuni.fi;
   davide.taibi@tuni.fi
RI Li, Xiaozhou/ITT-4444-2023; Taibi, Davide/E-4935-2015
OI Li, Xiaozhou/0000-0002-3767-2527; Taibi, Davide/0000-0002-3210-3990;
   Zhang, Zheying/0000-0002-6205-4210; Moreschini,
   Sergio/0000-0002-5582-9487
CR Allen J., 2009, OHLOH WEB SITE API
   [Anonymous], 2020, Common vulnerabilities and exposures
   [Anonymous], 2020, COMMON WEAKNESS ENUM
   [Anonymous], 2020, KIUWAN END TO END AP
   [Anonymous], 2020, GH TORRENT PORTAL
   [Anonymous], 2020, SOURGE FORGE RES DAT
   [Anonymous], 2012, OPEN SOURCE SYSTEMS
   [Anonymous], 2021, Replication Package
   [Anonymous], 2020, FREE LIBRE OPEN SOUR
   [Anonymous], 2010, P 3 INT WORKSH EM TR
   [Anonymous], 2020, WHITEHAT SECURITY AP
   [Anonymous], 2020, REPOGRAMS
   [Anonymous], 2020, SYNOPSYS EDA TOOLS S
   [Anonymous], 2020, National vulnerability database
   Avgeriou P., 2020, IEEE SOFTWARE
   Battaglia M.P., 2008, ENCY SURVEY RES METH, P523, DOI DOI 10.4135/9781412963947
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruntink M., 2014, ELECT COMMUN EUR ASS, V65
   Cai YF, 2016, DECIS SUPPORT SYST, V91, P103, DOI 10.1016/j.dss.2016.08.004
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   del Bianco V, 2009, INT FED INFO PROC, V299, P199
   Di Cosmo Roberto, 2017, IPRES 2017, P1
   Dixon M., 2016, GOOGLE PATENTS
   Duijnhouwer F. W., 2003, CAPGEMINI EXPERT LET
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Golden B, 2008, OPEN SOURCE BUS RESO
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hu DN, 2012, DECIS SUPPORT SYST, V53, P526, DOI 10.1016/j.dss.2012.02.005
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Kamei Y, 2018, IEICE T INF SYST, VE101D, P2744, DOI 10.1587/transinf.2018EDP7163
   Kilamo T., 2020, Open Source Systems, P141
   Lenarduzzi V, 2020, EUROMICRO CONF PROC, P437, DOI 10.1109/SEAA51224.2020.00076
   MADEY G, 2008, SOURCEFORGE RES DATA
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Petrinja E, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P37, DOI 10.1109/FLOSS.2009.5071358
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Robles G, 2019, IEEE SOFTWARE, V36, P12, DOI 10.1109/MS.2019.2933672
   Rocco J.D., 2021, ABS210306987 CORR
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Rozenberg D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P109, DOI [10.1109/MSR.2016.020, 10.1145/2901739.2901768]
   Sbai N, 2018, INFORM SOFTWARE TECH, V104, P104, DOI 10.1016/j.infsof.2018.07.009
   Semeteys, 2008, METHOD QUALIFICATION
   Soto M, 2009, INT SYMP EMP SOFTWAR, P499
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Taibi D, 2015, EMPIRICAL INVESTIGAT
   Taibi D, 2007, INT FED INFO PROC, V234, P173
   Wasserman A.I., 2006, BUSINESS READINESS R
   Wasserman AI., 2017, OSSpal: finding and evaluating open source software, P193
   Wuetherick B., 2010, CAN J U CONTINUING E, V36
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 53
TC 11
Z9 12
U1 3
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2022
VL 188
AR 111255
DI 10.1016/j.jss.2022.111255
EA FEB 2022
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N9EY
UT WOS:000783133900005
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Parizi, R
   Prestes, M
   Marczak, S
   Conte, T
AF Parizi, Rafael
   Prestes, Matheus
   Marczak, Sabrina
   Conte, Tayana
TI How has design thinking being used and integrated into software
   development activities? A systematic mapping
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software development; User-centered design; Design thinking; Literature
   review; Systematic mapping study
ID REQUIREMENTS; AGREEMENT; INNODEV
AB Software companies have been using Design Thinking (DT) as a user-centered design approach, putting the user at the center of the software development process. In this article, we report a Systematic Mapping Study to investigate the use of DT in software development. We evaluated 127 papers from 2010 to 2021. We analyzed how DT is integrated in software development, what are the models and techniques, what are the criteria used for selecting DT techniques, and what are the key points that DT practitioners should be aware of when using DT. As a result, we identified 3 strategies to integrate DT in software development, 16 models, and 85 techniques. We also found that the selection of techniques is related to the models' working spaces being performed, and identified 7 criteria used for selecting DT techniques. Furthermore, we summarized 16 key points that DT practitioners should pay attention when using DT, and we proposed 4 takeaways for applying DT in software development Thus, our study contributes to DT practitioners by providing information to be used either as a starting point, or to integrate it into activities already performed by teams, or as a strategy to foster changes in the entire organization's mindset. (C)& nbsp;2022 Elsevier Inc. All rights reserved.
C1 [Parizi, Rafael; Prestes, Matheus; Marczak, Sabrina] Pontif Catholic Univ Rio Grande do Sul PUCRS, Porto Alegre, RS, Brazil.
   [Conte, Tayana] Fed Univ Amazonas UFAM, Inst Comp IComp, Inst Comp, Manaus, Amazonas, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; Universidade
   Federal de Amazonas
RP Parizi, R (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Ipiranga Ave 6681 Partenon, BR-90619900 Porto Alegre, RS, Brazil.
EM rafael.parizi@edu.pucrs.br; matheus.plautz@edu.pucrs.br;
   sabrina.marczak@pucrs.br; tayana@icomp.ufam.edu.br
OI Baldiati Parizi, Rafael/0000-0001-8550-1135; Conte,
   Tayana/0000-0001-6436-3773
FU PUCRS BPA [1/2019, 1/2020, 1/2021]; CNPq PIBIC; CNPq, Brazil
   [314174/2020-6, 307177/2018-1]; FAPEAM [062.00150/2020]; CAPES, Brazil
   (Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil)
   [001]
FX We thank PUCRS BPA 2019, 2020 and 2021 projects (Programa de Bolsas
   Pesquisa Alunos da PUCRS/Chamada Geral 1/2019, 1/2020 and 1/2021) and
   CNPq PIBIC 2019/2020 project (Programa Institucional de Bolsas de
   Iniciacao Cientifica do CNPq) for the undergraduate research assistant
   scholarships. Tayana Conte thanks CNPq, Brazil (Grant 314174/2020-6) and
   FAPEAM (Grant 062.00150/2020). Sabrina Marczak thanks CNPq, Brazil
   (Grant 307177/2018-1). We thank CAPES, Brazil (Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior - Brasil) for the financial
   support (Code 001).
CR Adikari S, 2016, LECT NOTES COMPUT SC, V9746, P3, DOI 10.1007/978-3-319-40409-7_1
   Ahmad Rohiza, 2014, 2014 IEEE Conference on e-Learning, e-Management and e-Services (IC3e), P64, DOI 10.1109/IC3e.2014.7081243
   Ahmed B, 2018, COMPUT SCI ELECTR, P11, DOI 10.1109/CEEC.2018.8674234
   Alhazmi Alhejab, 2020, CSSE '20: Proceedings of the 3rd International Conference on Computer Science and Software Engineering, P33, DOI 10.1145/3403746.3403902
   [Anonymous], 2013, DESIGN USER EXPERIEN, DOI DOI 10.1007/978-3-642-39229-0_1
   [Anonymous], 2016, INT C BIOMETRICS ICB
   [Anonymous], 2013, P BRAZ S INF SYST
   Araújo R, 2015, 2015 15TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P82, DOI 10.1109/ICCSA.2015.25
   Arbieto-Batallanos CE, 2019, CEUR WORKSHOP PROCEE, V2555, P257
   Asante Geanie, 2018, Design Management Review, V29, P10, DOI 10.1111/drev.12122
   Avalos M., 2017, P INT SMART CIT C, P1
   Azab A., 2016, P PAC AS C INF SYST, P1
   Bargh MS, 2019, 2019 FIRST IEEE INTERNATIONAL CONFERENCE ON TRUST, PRIVACY AND SECURITY IN INTELLIGENT SYSTEMS AND APPLICATIONS (TPS-ISA 2019), P196, DOI 10.1109/TPS-ISA48467.2019.00032
   Berger A, 2011, PROBAB SURV, V8, P1, DOI 10.1214/11-PS175
   Bordin S, 2016, HUMAN COMPU, P137, DOI 10.1007/978-3-319-32165-3_6
   Brad S, 2019, IFIP ADV INF COMM TE, V572, P400, DOI 10.1007/978-3-030-32497-1_32
   Brenner W., 2016, Design thinking for innovation: research and practice, P3
   Brown T, 2008, HARVARD BUS REV, V86, P84
   Brown Tim., 2010, Stanford Social Innovation Review, DOI DOI 10.1596/1020-797X_12_1_29
   Buchanan R., 1992, Design Issues, V8, P5, DOI [10.2307/1511637, DOI 10.2307/1511637]
   Budiarto A, 2018, 2018 INDONESIAN ASSOCIATION FOR PATTERN RECOGNITION INTERNATIONAL CONFERENCE (INAPR), P172, DOI 10.1109/INAPR.2018.8627034
   Burchardt C, 2018, PROCEDIA MANUF, V25, P202, DOI 10.1016/j.promfg.2018.06.075
   Canedo E.D., 2019, P IEEE FRONT ED C FI, P1
   Canedo ED, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P217, DOI 10.5220/0009387502170224
   Edna DCB, 2018, LECT NOTES COMPUT SC, V10918, P642, DOI 10.1007/978-3-319-91797-9_45
   Carell A., 2018, USING DESIGN THINKIN, P107
   Carlgren L, 2016, CREAT INNOV MANAG, V25, P38, DOI 10.1111/caim.12153
   Carroll N, 2016, 2016 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING IN HEALTHCARE SYSTEMS (SEHS), P1, DOI 10.1109/SEHS.2016.009
   Chai-Arayalert S, 2020, INT J EMERG TECHNOL, V15, P29, DOI 10.3991/ijet.v15i11.12585
   Challiol Cecilia, 2019, 2019 International Conference on Information Systems and Computer Science (INCISCOS). Proceedings, P339, DOI 10.1109/INCISCOS49368.2019.00060
   Chasanidou D., 2015, P DES US EXP US DES, P1
   Chongwatpol J, 2020, DECIS SCI-J INNOV ED, V18, P409, DOI 10.1111/dsji.12217
   Corral L, 2018, SIGITE'18: PROCEEDINGS OF THE 19TH ANNUAL SIG CONFERENCE ON INFORMATION TECHNOLOGY EDUCATION, P26, DOI 10.1145/3241815.3241864
   Valentim NMC, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P77, DOI 10.1109/ICSE-SEET.2017.10
   Coutinho E. F., 2016, 2016 8 EURO AM C TEL, P1
   Cruzes Daniela S., 2010, P INT S EMP SOFTW EN, P1
   da Cruz Junior G.G, 2016, AN C REG TECN ED CEU, P1
   Daniëls NEM, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.02782
   Darrin MAG, 2017, ANN IEEE SYST CONF, P426
   de Paula TR, 2020, IEEE SOFTWARE, V37, P49, DOI 10.1109/MS.2019.2959473
   De Suman, 2020, 2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC), P31, DOI 10.1109/PDGC50313.2020.9315844
   De S., 2019, INT J ED MANAG ENG, V9, p1?26
   de Sa Araujo Carlos Magno Mendonca, 2019, Design, User Experience, and Usability. Design Philosophy and Theory, P291
   Depan D, 2018, POLYM COMPOSITE, V39, P192, DOI 10.1002/pc.23919
   Design Council, 1944, DES PROC WHAT IS DOU
   Diaz Intal Grace Lorraine, 2020, ICSEB 2020: 2020 4th International Conference on Software and e-Business, P7, DOI 10.1145/3446569.3446587
   Diaz P., 2014, P WORKSH ADV VIS INT, P1
   Dobrigkeit F, 2019, DESIGN THINKING RES, P199, DOI DOI 10.1007/978-3-319-97082-0_11
   Dobrigkeit F., DESIGN THINKING RES, P201
   Dobrigkeit F., 2018, P NORDDESIGN, P1
   Dobrigkeit F, 2017, INT CONF ENG DES, P319
   Dobrigkeit F, 2020, CONF SOFTW ENG EDUC, P189, DOI 10.1109/cseet49119.2020.9206184
   Dobrigkeit F, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1059, DOI 10.1145/3338906.3340451
   dos Santos Braz R., 2019, Design, User Experience, P179
   Dunne D, 2006, ACAD MANAG LEARN EDU, V5, P512, DOI 10.5465/AMLE.2006.23473212
   El-Sharkawy S., 2011, P INT C REQ ENG FDN, P1
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Ferreira B, 2018, IET SOFTW, V12, P280, DOI 10.1049/iet-sen.2017.0313
   Ferreira B, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P80, DOI 10.1109/SBES.2015.14
   Gama K., 2018, 2018 IEEE FRONTIERS, P1
   Gama K., 2018, 2018 IEEE FRONT ED C, P1
   Gamble MT, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P14, DOI [10.1109/Bridge.2016.012, 10.1145/2896935.2896937]
   Genzorova T, 2019, TRANSP RES PROC, V40, P1053, DOI 10.1016/j.trpro.2019.07.147
   Glomann L., 2017, P INT C APPL HUM FAC, P1
   Gonzalez C., 2010, PLoS Neglected Tropical Diseases, P1
   Gonzalez C.S.G., 2015, P IEEE GLOB ENG ED C, P989
   Goodspeed R, 2016, MAR POLICY, V69, P134, DOI 10.1016/j.marpol.2016.04.017
   Goudsouzian LK, 2018, BIOCHEM MOL BIOL EDU, V46, P361, DOI 10.1002/bmb.21133
   Guinan PJ, 2019, BUS HORIZONS, V62, P717, DOI 10.1016/j.bushor.2019.07.005
   Gurdur D., 2018, PROC IEEE C TECHNOL, P1
   Gurusamy K., 2016, P INT C DES US EXP U, P1
   Hasso-Plattner-Institute D -School, 2020, HASS PLATTN I SCH DE
   Hehn J., 2018, P MULT WIR, P1
   Hehn J, 2020, IEEE SOFTWARE, V37, P25, DOI 10.1109/MS.2019.2957715
   Hehn J, 2018, INT REQUIR ENG CONF, P400, DOI 10.1109/RE.2018.00-18
   Hiremath M, 2013, LECT NOTES COMPUT SC, V8119, P780
   Jensen M.B., 2016, P INT C PROD FOC SOF, P1
   Jolak R, 2020, INT CONF GLOBAL SOFT, P106, DOI 10.1145/3372787.3390438
   Kah-Hoe Wang S.M., 2014, P INT L C APPL SYST, P247
   Kahan E, 2019, QUALITY INFORM COMMU, V12, P79
   Kasper H, 2019, KMIS: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT, VOL 3: KMIS, P83, DOI 10.5220/0008161900830091
   Kawano A, 2019, PROCEEDINGS OF 2019 7TH INTERNATIONAL CONFERENCE ON INFORMATION AND EDUCATION TECHNOLOGY (ICIET 2019), P151, DOI 10.1145/3323771.3323789
   Keighran H., 2016, P INT C DES US EXP U, P1
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V2, P512
   Kloeckner A.P., 2017, P 2017 19 EUR C POW, P1, DOI DOI 10.23919/EPE17ECCEEUROPE.2017.8099321
   Kongot A, 2017, LECT NOTES COMPUT SC, V10516, P189, DOI 10.1007/978-3-319-68059-0_12
   Kuula S, 2020, IEEE SOFTWARE, V37, P41, DOI 10.1109/MS.2019.2958012
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Larsen LJ, 2018, EDUC MEDIA INT, V55, P231, DOI 10.1080/09523987.2018.1512445
   Lee WS, 2019, DECIS SUPPORT SYST, V116, P102, DOI 10.1016/j.dss.2018.10.013
   Levy M, 2019, INT REQUIR ENG CONF, P351, DOI 10.1109/RE.2019.00044
   Levy M, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P156, DOI 10.1109/REW.2017.29
   Levy Meira, 2018, CEUR Workshop Proceedings, V2075, P1
   Liikkanen L.A., 2014, P NORD C HUM COMP IN, P1
   Lucena P., 2016, P BRAZ WORKSH AG MET, P1
   Luchs MG, 2016, DESIGN THINKING: NEW PRODUCT DEVELOPMENT ESSENTIALS FROM THE PDMA, P1
   Luedeke T.F., 2018, P NORDDESIGN, P1
   Magare A., 2020, P INT C DAT SCI INT, P527
   Mahe N, 2020, IEEE SOFTWARE, V37, P32, DOI 10.1109/MS.2019.2958646
   Malins J., 2016, REAL VIRTUAL DEV IMP, P337
   Marques Queiros Leandro, 2016, Journal of the Brazilian Computer Society, V22, DOI 10.1186/s13173-016-0043-6
   Martins HF, 2019, INFORMATION, V10, DOI 10.3390/info10120371
   Matz A., 2016, P INT C LEARN COLL T, P1
   McMahon E., 2014, P INT C AM SOC ENG M, P1
   Murugesan L.K., 2017, P INT WORKSH DES INN, P1
   Mutuku L.N., 2012, P INT C THEOR PRACT, P1
   Nalepa G, 2019, COMM COM INF SC, V1060, P495, DOI 10.1007/978-3-030-28005-5_38
   Nedeltcheva G., 2018, P INT C TELECOM, V53, P42
   Nedeltcheva G.N., 2017, P INT C BIG DAT INT, P1
   Newman P., 2015, P INT C SOFTW ENG, P1
   Ortiz-Rojas M, 2020, 2019 XIV LATIN AMERICAN CONFERENCE ON LEARNING TECHNOLOGIES (LACLO 2019), P116, DOI 10.1109/LACLO49268.2019.00029
   Palacin-Silva M, 2017, CONF SOFTW ENG EDUC, P212, DOI 10.1109/CSEET.2017.41
   Parizotto R, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110355
   Park J, 2020, CREAT INNOV MANAG, V29, P224, DOI 10.1111/caim.12368
   Pendse A, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172890
   Penzenstadler B, 2020, IEEE SOFTWARE, V37, P6, DOI 10.1109/MS.2019.2958263
   Péraire C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P38, DOI 10.1109/ICSE-SEET.2019.00013
   Pereira JC, 2018, PROCEDIA COMPUT SCI, V138, P775, DOI 10.1016/j.procs.2018.10.101
   Pereira Lauriane, 2021, SAC '21: Proceedings of the 36th Annual ACM Symposium on Applied Computing, P1338, DOI 10.1145/3412841.3442008
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pham Y.D., 2018, P INT WORKSH SOFTW E, P8
   Piras L, 2019, INT CONF RES CHAL, P81, DOI 10.1109/rcis.2019.8876973
   Prasad WMDR, 2018, 2018 MORATUWA ENGINEERING RESEARCH CONFERENCE (MERCON) 4TH INTERNATIONAL MULTIDISCIPLINARY ENGINEERING RESEARCH CONFERENCE, P471, DOI 10.1109/MERCon.2018.8422006
   Puad N. H. M., 2019, J MARK INF SYST, V2, P1
   Pusca D., 2018, GLOB J ENG ED, V20, P1
   Reddy PC, 2017, PROCEEDINGS OF THE 2017 IEEE SECOND INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER AND COMMUNICATION TECHNOLOGIES (ICECCT)
   Rhinow H., 2014, DESIGN THINKING RES, P239
   Sandino D., 2013, P INT C DES US EXP U, P1
   Santos H.R.M., 2017, P INT C ENT INF SYST, P12
   Sarbazhosseini H., 2016, P INT C DES US EXP U, P1
   School Stanford, 2004, DES THINK BOOTC BOOT
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   sel A., 2016, ARE WE READY DISRUPT, P77
   Senapathi M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2322
   Senft B., 2019, P INT C HUM COMP INT, P366
   Snowden DJ, 2007, HARVARD BUS REV, V85, P68
   Sohaib O, 2019, J AMB INTEL HUM COMP, V10, P2497, DOI 10.1007/s12652-018-0932-y
   Sosnin P., 2017, P 1 INT C SMART SYST, P1
   Souza A.F., 2017, 2017 INT SMART CITIE, P1, DOI DOI 10.1109/ISC2.2017.8090820
   Souza A, 2020, IET SOFTW, V14, P693, DOI 10.1049/iet-sen.2019.0300
   Souza C.L.d.C., 2014, P WORKSH REQ ENG, P1
   Souza Cynara, 2015, CLEI ELECT J, V18, P1
   Suzianti Amalia, 2020, APIT 2020: Proceedings of the 2020 2nd Asia Pacific Information Technology Conference, P29, DOI 10.1145/3379310.3379324
   Tannian MF, 2020, FUTURE OF SOFTWARE QUALITY ASSURANCE, P161, DOI 10.1007/978-3-030-29509-7_13
   Tellioglu H., 2016, P INT C INT HUM COMP, P1
   Unnikrishnan R., 2005, P WORKSH APPL COMP V, P1
   Vetterli C, 2013, IEEE INTERNET COMPUT, V17, P91, DOI 10.1109/MIC.2013.32
   Vianna M., 2012, DESIGN THINKING INOV
   Viera AJ, 2005, FAM MED, V37, P360
   Waidelich L., 2018, 2018 IEEE International Conference on Engineering, Technology and Innovation (ICE/ITMC), P1, DOI DOI 10.1109/ICE.2018.8436281
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
NR 153
TC 7
Z9 7
U1 4
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2022
VL 187
AR 111217
DI 10.1016/j.jss.2022.111217
EA JAN 2022
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0M8TE
UT WOS:000782420300003
DA 2024-07-18
ER

PT J
AU Garba, S
   Mohamad, R
   Saadon, NA
AF Garba, Salisu
   Mohamad, Radziah
   Saadon, Nor Azizah
TI Self-adaptive mobile web service discovery framework for Dynamic Mobile
   Environment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Self-adaptive; Mobile web service; Service discovery; Negative Selection
   Algorithm; Dynamic Mobile Environment
ID MATCHMAKER; MANAGEMENT; SELECTION; ONTOLOGY; SEARCH
AB This paper proposes a self-adaptive mobile web service (MWS) discovery framework for a dynamic mobile environment (DME) to deal with MWS proliferation, dynamic context, and irrelevant MWS discovery challenges. The main contribution of this research includes an improvement of the matchmaking algorithm, enhanced MWS categorization approach, and extensible meta-context ontology that represents the context information in DME. This was achieved by enabling the self-adaptive matchmaker to learn MWS relevance using a Modified-Negative Selection Algorithm (M-NSA) and retrieve the most relevant MWS based on the current context of the discovery. To assess the proposed framework, series of experiments was carried out using publicly-available datasets. The performance of the framework is evaluated against the state-of-the-art frameworks. It was found that the proposed framework is more effective and attained better binary and graded relevance when subjected to context variations which are prevalent in DME. This is useful for service-based application designers and other MWS clients. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Garba, Salisu; Mohamad, Radziah; Saadon, Nor Azizah] Univ Teknol Malaysia, Fac Engn, Sch Comp, Skudai 81310, Johor, Malaysia.
C3 Universiti Teknologi Malaysia
RP Garba, S (corresponding author), Univ Teknol Malaysia, Fac Engn, Sch Comp, Skudai 81310, Johor, Malaysia.
EM salisu.garba@graduate.utm.my; radziahm@utm.my; azizahsaadon@utm.my
RI Garba, Salisu/KFB-1523-2024; Mohamad, Radziah/F-8422-2011
OI Mohamad, Radziah/0000-0003-4075-9604; Garba, Salisu/0000-0003-4338-6209
FU Ministry of Higher Education (MOHE) through Fundamental Research Grant
   Scheme [FRGS/1/2021/ICT01/UTM/02/1]
FX This research has been supported by Ministry of Higher Education (MOHE)
   through Fundamental Research Grant Scheme (FRGS/1/2021/ICT01/UTM/02/1) .
CR Abid A, 2018, IEEE SYST J, V12, P2960, DOI 10.1109/JSYST.2017.2753851
   Aguilar Jose, 2018, Applied Computing and Informatics, V14, P202, DOI 10.1016/j.aci.2017.08.001
   Andreini D., 2017, BUSINESS MODEL INNOV, P1
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2016, PERSPECT SCI, DOI DOI 10.1016/J.PISC.2016.06.068
   Barakat L, 2018, FUTURE GENER COMP SY, V80, P215, DOI 10.1016/j.future.2016.12.003
   Blakeslee M.W., 2012, Segmented normal fault evolution: Interpretation of relay zone deformation and seismic hazard analysis, P1, DOI 10.1007/978-3-642-28735-0
   Bobek S, 2017, FUTURE GENER COMP SY, V66, P110, DOI 10.1016/j.future.2016.06.007
   Bouguettaya A, 2017, COMMUN ACM, V60, P64, DOI 10.1145/2983528
   Buqing Cao, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P99, DOI 10.1109/ICWS.2013.23
   Cabrera O, 2017, DATA KNOWL ENG, V110, P24, DOI 10.1016/j.datak.2017.03.008
   Cao BQ, 2019, J PARALLEL DISTR COM, V132, P177, DOI 10.1016/j.jpdc.2018.04.002
   Cao BQ, 2017, INFORM SOFTWARE TECH, V90, P40, DOI 10.1016/j.infsof.2017.05.001
   Cao BQ, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P212, DOI 10.1109/ICWS.2016.35
   Chen FZ, 2017, ENTERP INF SYST-UK, V11, P452, DOI 10.1080/17517575.2015.1081987
   Chen L, 2011, LECT NOTES COMPUT SC, V7084, P204, DOI 10.1007/978-3-642-25535-9_14
   Cheng B, 2021, IEEE T SERV COMPUT, V14, P864, DOI 10.1109/TSC.2018.2831678
   Cheniki N, 2016, COMPUT ELECTR ENG, V52, P49, DOI 10.1016/j.compeleceng.2016.02.016
   Chouiref Z, 2016, APPL SOFT COMPUT, V41, P51, DOI 10.1016/j.asoc.2015.12.011
   De Nicola A, 2016, COMMUN ACM, V59, P79, DOI 10.1145/2818359
   Elgazzar K, 2014, PERVASIVE MOB COMPUT, V13, P67, DOI 10.1016/j.pmcj.2013.10.015
   Erik G.O, 2021, PHILOS T R SOC A, V379
   Fantechi A, 2019, CEUR WORKSHOP PROC
   Garba S, 2020, ADV INTELL SYST COMP, V1073, P1111, DOI 10.1007/978-3-030-33582-3_104
   Hamdan N. M., 2012, INTEGRATED METHOD SY
   He XN, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P173, DOI 10.1145/3038912.3052569
   Jiang B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P265, DOI 10.1109/SCC.2017.41
   Ke CB, 2012, KNOWL-BASED SYST, V35, P41, DOI 10.1016/j.knosys.2012.04.018
   Klusch M, 2016, KUNSTL INTELL, V30, P139, DOI 10.1007/s13218-015-0415-7
   Klusch M, 2012, J WEB SEMANT, V15, P1, DOI 10.1016/j.websem.2012.07.003
   Kotekar S, 2018, ADV INTELL SYST, V719, P393, DOI 10.1007/978-981-10-3376-6_43
   Liang TT, 2014, IEEE INT CONF SERV, P215, DOI 10.1109/SOCA.2014.27
   Lu ZJ, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY PROCEEDINGS - CYBERC 2016, P128, DOI 10.1109/CyberC.2016.34
   Garcia JM, 2010, LECT NOTES COMPUT SC, V6089, P1, DOI [10.1007/978-3-642-13489-0_1, 10.1109/SENSORDEVICES.2010.8]
   Mezni H, 2015, IEEE INT CONF SERV, P85, DOI 10.1109/SOCA.2015.17
   Musen Mark A, 2015, AI Matters, V1, P4
   Pahlevan A, 2015, FUTURE INTERNET, V7, P110, DOI 10.3390/fi7020110
   Poveda-Villalon M., 2010, CEUR WORKSH P
   Rupasingha RAHM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P744, DOI 10.1109/ICWS.2017.134
   Ruta M, 2015, IEEE INT CONF MO, P336, DOI 10.1109/MobServ.2015.76
   Saadon N. A., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P70, DOI 10.1109/MySEC.2011.6140646
   Saadon NA, 2015, J TEKNOL, V77
   Scioscia F, 2014, INT J SEMANT WEB INF, V10, P77, DOI 10.4018/ijswis.2014100104
   Sellami M, 2013, J SYST SOFTWARE, V86, P835, DOI 10.1016/j.jss.2012.11.019
   Shi M, 2018, P IEEE I C SERV COMP, P1, DOI 10.1109/SCC.2018.00008
   Stavropoulos TG, 2016, IEEE T SERV COMPUT, V9, P954, DOI 10.1109/TSC.2015.2430328
   Taylor M, 2018, J PEASANT STUD, V45, P89, DOI 10.1080/03066150.2017.1312355
   Tian G, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5195
   Tian G, 2019, IEEE ACCESS, V7, P88231, DOI 10.1109/ACCESS.2019.2926559
   Verma R, 2018, PEER PEER NETW APPL, V11, P409, DOI 10.1007/s12083-016-0540-6
   Win N.N.H., 2019, WORLD MALARIA REPORT, P822, DOI DOI 10.4018/978-1-5225-7501-6.CH045
   Wu J, 2014, KNOWL INF SYST, V38, P207, DOI 10.1007/s10115-013-0623-0
   Xie F, 2019, EXPERT SYST APPL, V123, P178, DOI 10.1016/j.eswa.2019.01.025
   Xiong RB, 2018, EXPERT SYST APPL, V110, P191, DOI 10.1016/j.eswa.2018.05.039
   Zaki M.Z.M., 2014, INT J ADV SOFT COMPU, V5, P1
   Zhang N, 2018, J SYST SOFTWARE, V142, P73, DOI 10.1016/j.jss.2018.04.046
   Zhao XC, 2019, CAAI T INTELL TECHNO, V4, P159, DOI 10.1049/trit.2019.0018
   Zhao XC, 2014, KNOWL INF SYST, V40, P349, DOI 10.1007/s10115-013-0642-x
NR 58
TC 0
Z9 0
U1 1
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2022
VL 184
AR 111120
DI 10.1016/j.jss.2021.111120
EA OCT 2021
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WR4OU
UT WOS:000714481800002
DA 2024-07-18
ER

PT J
AU Bucaioni, A
   Becker, M
AF Bucaioni, Alessio
   Becker, Matthias
TI Enabling automated integration of architectural languages: An experience
   report from the automotive domain
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architecture languages; Model-based development; Timing verification
ID RESPONSE-TIME; FRAMEWORK; MODEL
AB Modern automotive software systems consist of hundreds of heterogeneous software applications, belonging to separated function domains and often developed within distributed automotive ecosystems consisting of original equipment manufactures, tier-1 and tier-2 companies. Hence, the development of modern automotive software systems is a formidable challenge. A well-known instrument for coping with the tremendous heterogeneity and complexity of modern automotive software systems is the use of architectural languages as a way of enabling different and specific views over these systems. However, the use of different architectural languages might come with the cost of reduced interoperability and automation as different languages might have weak to no integration. In this article, we tackle the challenge of integrating two architectural languages heavily used in the automotive domain for the design and timing analysis of automotive software systems: AMALTHEA and Rubus Component Model. The main contributions of this paper are (i) a mapping scheme for the translation of an AMALTHEA architecture into a Rubus Component Model architecture where highprecision timing analysis can be run, and the back annotation of the analysis results on the starting AMALTHEA architecture; (ii) the implementation of the proposed scheme, which uses the concept of model transformations for enabling a full-fledged automated integration; (iii) the application of such automation on three industrial automotive systems being the brake-by-wire, the full blown engine management system and the engine management system. We discuss and evaluate the proposed contributions using an online, experts survey and the above-mentioned use cases. Based on the evaluation results, we conclude that the proposed automation mechanism is correct and applicable in industrial contexts. Besides, we observe that the performance of the automation mechanism does not degrade when translating large models with several thousands of elements. Eventually, we conclude that experts in this field find the proposed contribution industrially relevant. (C) 2021 The Author(s). Published by Elsevier Inc.
C1 [Bucaioni, Alessio] Malardalen Univ, Box 883, S-72123 Vasteras, Sweden.
   [Becker, Matthias] KTH Royal Inst Technol, Stockholm, Sweden.
C3 Malardalen University; Royal Institute of Technology
RP Bucaioni, A (corresponding author), Malardalen Univ, Box 883, S-72123 Vasteras, Sweden.
EM alessio.bucaioni@mdh.se; mabecker@kth.se
OI Bucaioni, Alessio/0000-0002-8027-0611; Becker,
   Matthias/0000-0002-1276-3609
FU Swedish Knowledge Foundation (KKS), through the project A-CPS; Swedish
   Governmental Agency for Innovation Systems (VINNOVA), through the
   project PANORAMA
FX The work in this paper is supported by the Swedish Knowledge Foundation
   (KKS) , through the project A-CPS, and by the Swedish Governmental
   Agency for Innovation Systems (VINNOVA) , through the project PANORAMA.
   The authors would like to thank the industrial partners, especially
   Robert Bosch, Arcticus Systems and Volvo, for their valuable inputs.
CR [Anonymous], 2012, PANORAMA BOOSTING DE
   [Anonymous], 2012, P 8 INT ACM SIGSOFT
   [Anonymous], 2012, TIMING AUGMENTED DES
   [Anonymous], 2017, RUBUS ICE INTEGRATED
   [Anonymous], 2012, INTRO APP4MC
   [Anonymous], 2010, E ADL DOMAIN MODEL S
   [Anonymous], 2012, ITEA 3 AMALTHEA PROJ
   [Anonymous], 2012, 2626212011 ISO
   [Anonymous], 2016, AUTOSAR TECHINCAL OV
   [Anonymous], 2012, MULTEX SOFTWARE DEV
   [Anonymous], 2017, WATERS industrial challenge
   [Anonymous], 2012, ITEA 3 AMALTHEA4PUBL
   Becker M, 2021, Zenodo, DOI 10.5281/zenodo.5529656
   Becker M, 2017, J SYST ARCHITECT, V80, P104, DOI 10.1016/j.sysarc.2017.09.004
   Behere S, 2016, INFORM SOFTWARE TECH, V73, P136, DOI 10.1016/j.infsof.2015.12.008
   Broy M, 2009, COMPUTER, V42, P98, DOI 10.1109/MC.2009.413
   Bucaioni A., STAF COLOCATED EVENT, P15
   Bucaioni A, 2019, JUNIOR RES COMMUNITY
   Bucaioni A., 2016, J IEEE ACCESS, V5, P1
   Bucaioni A, 2020, EUROMICRO CONF PROC, P537, DOI 10.1109/SEAA51224.2020.00089
   Bucaioni A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P46, DOI 10.1109/ICSA47634.2020.00013
   Charette RN, 2009, IEEE SPECTRUM, V46, P7, DOI 10.1109/MSPEC.2009.5340234
   Cuenot P, 2008, DEV AUTOMOTIVE PRODU
   Dziurzanski P., 2016, P 2 INT WORKSH DYN R
   Enoiu EP, 2012, IEEE INT C ENG COMP, P328, DOI 10.1109/ICECCS.2012.42
   Eramo R., 2013, ELECT COMMUN EASST, V57
   Feiertag N., 2008, CRTS WORKSH DEC
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Frey P., 2011, THESIS U ULM
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Giese H., 2009, MBEES, P155
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hank P, 2013, DES AUT TEST EUROPE, P1735
   Hansson H.A., 1997, ENG COMPLEX REAL TIM, P223
   HILLIARD R, 2012, 42010 ISOIECIEEE
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kang EY, 2013, IEEE INT CONF CON AU, P1890
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   Lundback, 2011, 3 IEEE INT S IND EMB
   Maki-Turja J., 2004, REAL TIM EMB COMP SY
   Maki-Turja J., 2011, 32 IEEE REAL TIM SYS, P1
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mubeen S., 2017, SOFTW SYST MODEL, P1
   Mubeen S, 2019, EUROMICRO CONF PROC, P131, DOI 10.1109/SEAA.2019.00029
   Mubeen S, 2017, 2017 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2017), P3, DOI 10.1109/SER-IP.2017..1
   Mubeen S, 2015, J SYST SOFTWARE, V99, P66, DOI 10.1016/j.jss.2014.09.005
   Mubeen S, 2014, J SYST ARCHITECT, V60, P207, DOI 10.1016/j.sysarc.2013.10.008
   Mubeen S, 2013, COMPUT SCI INF SYST, V10, P453, DOI 10.2298/CSIS120614011M
   NXP, 2017, MPC5744P DAT SHEET 3
   Pelliccione P, 2017, J SYST ARCHITECT, V77, P83, DOI 10.1016/j.sysarc.2017.02.005
   Qureshi TN, 2011, LECT NOTES COMPUT SC, V6903, P328, DOI 10.1007/978-3-642-23798-0_35
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saidi S., 2018, 2018 INT C SMART COM, P1
   Sailer A, 2016, ARCS 2016, P1
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
NR 58
TC 1
Z9 1
U1 2
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2022
VL 184
AR 111106
DI 10.1016/j.jss.2021.111106
EA OCT 2021
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WR4OU
UT WOS:000714481800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Barisic, A
   Ruchkin, I
   Savic, D
   Mohamed, MA
   Al-Ali, R
   Li, LW
   Mkaouar, H
   Eslampanah, R
   Challenger, M
   Blouin, D
   Nikiforova, O
   Cicchetti, A
AF Barisic, Ankica
   Ruchkin, Ivan
   Savic, Dusan
   Mohamed, Mustafa Abshir
   Al-Ali, Rima
   Li, Letitia W.
   Mkaouar, Hana
   Eslampanah, Raheleh
   Challenger, Moharram
   Blouin, Dominique
   Nikiforova, Oksana
   Cicchetti, Antonio
TI Multi-paradigm modeling for cyber-physical systems: A systematic mapping
   review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Cyber-Physical System; Model; Formalism; Development process; Modeling
   paradigm; Systematic review
ID DESIGN; VERIFICATION; SECURITY; INTEGRATION; SAFETY; TOOL
AB Cyber-Physical Systems (CPS) are heterogeneous and require cross-domain expertise to model. The complexity of these systems leads to questions about prevalent modeling approaches, their ability to integrate heterogeneous models, and their relevance to the application domains and stakeholders. The methodology for Multi-Paradigm Modeling (MPM) of CPS is not yet fully established and standardized, and researchers apply existing methods for modeling of complex systems and introducing their own. No systematic review has been previously performed to create an overview of the field on the methods used for MPM of CPS. In this paper, we present a systematic mapping study that determines the models, formalisms, and development processes used over the last decade. Additionally, to determine the knowledge necessary for developing CPS, our review studied the background of actors involved in modeling and authors of surveyed studies. The results of the survey show a tendency to reuse multiple existing formalisms and their associated paradigms, in addition to a tendency towards applying transformations between models. These findings suggest that MPM is becoming a essential approach to model CPS, and highlight the importance of future integration of models, standardization of development process and education. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Barisic, Ankica] Univ Cote dAzur, INRIA, CNRS, Sophia Antipolis, France.
   [Barisic, Ankica] Univ Nova Lisboa, NOVA LINCS, Lisbon, Portugal.
   [Ruchkin, Ivan] Univ Penn, Philadelphia, PA 19104 USA.
   [Savic, Dusan] Fac Org Sci, Belgrade, Serbia.
   [Mohamed, Mustafa Abshir] Ege Univ, Izmir, Turkey.
   [Al-Ali, Rima] Charles Univ Prague, Prague, Czech Republic.
   [Li, Letitia W.] BAE Syst, FAST Labs, Falls Church, VA USA.
   [Mkaouar, Hana; Blouin, Dominique] Telecom Paris, Inst Polytech Paris, LTCI, Paris, France.
   [Eslampanah, Raheleh; Challenger, Moharram] Univ Antwerp, Antwerp, Belgium.
   [Eslampanah, Raheleh; Challenger, Moharram] Flanders Make, Lommel, Belgium.
   [Nikiforova, Oksana] Riga Tech Univ, Riga, Latvia.
   [Cicchetti, Antonio] Malardalen Univ, Vasteras, Sweden.
C3 Inria; Centre National de la Recherche Scientifique (CNRS); Universite
   Cote d'Azur; Universidade Nova de Lisboa; University of Pennsylvania;
   University of Belgrade; Ege University; Charles University Prague; Bae
   Systems; IMT - Institut Mines-Telecom; Institut Polytechnique de Paris;
   Telecom Paris; University of Antwerp; Riga Technical University;
   Malardalen University
RP Barisic, A (corresponding author), Univ Cote dAzur, INRIA, CNRS, Sophia Antipolis, France.
EM a.barisic@campus.fct.unl.pt; iruchkin@cis.upenn.edu;
   dusan.savic@fon.bg.ac.rs; mustafaxoodiye@gmail.com;
   alali@d3s.mff.cuni.cz; letitia.li@baesystems.com;
   hana.mkaouar@telecom-paris.fr; raheleh.eslampanah@uantwerpen.be;
   moharram.challenger@unatwerpen.be; dominique.blouin@telecom-paris.fr;
   oksana.nikiforova@rtu.lv; antonio.cicchetti@mdh.se
RI Barisic, Ankica/AHA-2556-2022; Ruchkin, Ivan/AGN-9734-2022; Challenger,
   Moharram/E-2164-2014
OI Barisic, Ankica/0000-0001-7513-7907; Ruchkin, Ivan/0000-0003-3546-414X;
   Challenger, Moharram/0000-0002-5436-6070; Nikiforova,
   Oksana/0000-0001-7983-3088
FU MPM4CPS IC1404 COST action; NOVA LINCS; FCT Portuguese national funds
   [UID/CEC/04516/2019]; Knowledge Foundation in Sweden [20170133,
   20190021]
FX This work was supported by MPM4CPS IC1404 COST action and partially
   supported by NOVA LINCS with the support of FCT Portuguese national
   funds (UID/CEC/04516/2019) and the Knowledge Foundation in Sweden
   through the MINEStrA (nr. 20170133) and SACSys (nr. 20190021) projects.
CR Abdallah R, 2015, COMM COM INF SC, V580, P278, DOI 10.1007/978-3-319-27869-8_16
   Al-Ali R., 2017, STATE ART CURRENT FO
   Al-Ali R., 2017, FED C COMP SCI INF S, P187
   Amrani M, 2021, SOFTW SYST MODEL, V20, P611, DOI 10.1007/s10270-021-00876-z
   Amrani M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P419, DOI 10.1109/MODELS-C.2019.00067
   [Anonymous], IC14 ICT COST
   [Anonymous], 2017, Cyber-Physical System Design from an Architecture Analysis Viewpoint, DOI DOI 10.1007/978-981-10-4436-66
   [Anonymous], 2020, Google Scholar
   Apvrille L, 2015, COMM COM INF SC, V580, P293, DOI 10.1007/978-3-319-27869-8_17
   Araújo-de-Oliveira P, 2021, SOFTWARE PRACT EXPER, V51, P1387, DOI 10.1002/spe.2962
   Balasubramaniyan S, 2016, MICROPROCESS MICROSY, V42, P37, DOI 10.1016/j.micpro.2015.12.006
   Banerjee A, 2012, P IEEE, V100, P283, DOI 10.1109/JPROC.2011.2165689
   Barbierato E, 2019, SIMUL MODEL PRACT TH, V93, P133, DOI 10.1016/j.simpat.2018.09.018
   Barbierato E, 2013, ELECTRON NOTES THEOR, V296, P61, DOI 10.1016/j.entcs.2013.07.005
   Barbierato E, 2011, ELECTRON NOTES THEOR, V275, P37, DOI 10.1016/j.entcs.2011.09.004
   Barisic A., 2018, IC1404 EU COST, DOI [10.5281/zenodo, DOI 10.5281/ZENODO]
   Barisic A., DATA BRIEF J
   Barisic A., 2017, SUSTAINABILITY MODEL, DOI [10.5281/ZENODO.1481946, DOI 10.5281/ZENODO.1481946]
   Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Bigendako B., REV LIT SYSTEMATIQUE
   Bigendako B, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P552, DOI 10.5220/0006664405520559
   Bliudze S, 2019, SOFTW SYST MODEL, V18, P1613, DOI 10.1007/s10270-017-0642-5
   Bloomfield RE, 2017, RELIAB ENG SYST SAFE, V167, P198, DOI 10.1016/j.ress.2017.05.030
   Broman D, 2013, J INDIAN I SCI, V93, P389
   Broman David., 2012, MPM MODELS 12 MULTIP, P49, DOI DOI 10.1145/2508443.2508452
   Bucaioni A, 2020, SOFTW SYST MODEL, V19, P1283, DOI 10.1007/s10270-020-00795-5
   Chadli M, 2018, INT J SOFTW TOOLS TE, V20, P397, DOI 10.1007/s10009-017-0466-1
   Challenger M., 2020, MOM4CPS COST, DOI [10.5281/zenodo.2528953, DOI 10.5281/ZENODO.2528953]
   Challenger M., 2021, Multi-Paradigm Modelling Approaches for Cyber-Physical Systems, DOI 10.1016/B978-0-12- 819105- 7.00013- 1
   Chun I, 2011, COMM COM INF SC, V150, P156
   Cicirelli F, 2017, ADV ENG INFORM, V33, P274, DOI 10.1016/j.aei.2016.11.005
   CORE, 2020, 2018 RANK
   Courtney T, 2009, I C DEPEND SYS NETWO, P353, DOI 10.1109/DSN.2009.5270318
   David I., 2016, P 1 INT WORKSHOP COL, P35
   David I., 2016, SRC MODELS
   Dávid I, 2018, SOFTW SYST MODEL, V17, P135, DOI 10.1007/s10270-016-0533-1
   Denil J, 2017, SIMUL-T SOC MOD SIM, V93, P489, DOI 10.1177/0037549716684552
   Derksen C, 2015, ENG APPL ARTIF INTEL, V41, P310, DOI 10.1016/j.engappai.2014.10.005
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Drago A, 2019, SOFTW SYST MODEL, V18, P523, DOI 10.1007/s10270-016-0572-7
   Dragomir I, 2017, SOFTW SYST MODEL, V16, P587, DOI 10.1007/s10270-015-0481-1
   Eusgeld I, 2011, RELIAB ENG SYST SAFE, V96, P679, DOI 10.1016/j.ress.2010.12.010
   Falkner K, 2018, SOFTW SYST MODEL, V17, P415, DOI 10.1007/s10270-016-0547-8
   Fitzgerald J., 2014, HDB RES EMBEDDED SYS, P1, DOI 10.4018/978-1-4666-6194-3.ch001
   Casas PFI, 2017, SUSTAINABILITY-BASEL, V9, DOI 10.3390/su9061004
   Francalanza E, 2017, COMPUT IND, V84, P39, DOI 10.1016/j.compind.2016.08.001
   Garcia HE, 2012, PROG NUCL ENERG, V54, P96, DOI 10.1016/j.pnucene.2011.07.007
   Grüttner K, 2013, MICROPROCESS MICROSY, V37, P966, DOI 10.1016/j.micpro.2013.09.001
   Gunes V, 2014, KSII T INTERNET INF, V8, P4242, DOI 10.3837/tiis.2014.12.001
   HAILPERN B, 1986, IEEE SOFTWARE, V3, P6, DOI 10.1109/MS.1986.232426
   Hartmann T, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P180, DOI 10.1109/MODELS.2017.32
   Hecht M, 2016, IEEE INT SYMP SOFTW, P25, DOI 10.1109/ISSREW.2016.51
   Hehenberger P, 2016, COMPUT IND, V82, P273, DOI 10.1016/j.compind.2016.05.006
   Heinze H., 2012, MODEL BASED ENG EMBE, P215, DOI [10.1007/978-3-642-34614-9-_}15, DOI 10.1007/978-3-642-34614-9_15]
   Herzig SJI, 2017, AEROSP CONF PROC
   Huang J, 2014, MICROPROCESS MICROSY, V38, P539, DOI 10.1016/j.micpro.2014.02.007
   Isasa JAE, 2017, LECT NOTES COMPUT SC, V9062, P44, DOI 10.1007/978-3-319-63194-3_4
   Jafer S., 2017, INT WORKSH MOD SIM A, P92
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kleppe AnnekeG., 2003, MDA explained: the model driven architecture : practice and promise, P1
   Koubeissi A., 2019, ACIT 2018 19 INT AR, DOI [10.1109/ACIT.2018.8672676, DOI 10.1109/ACIT.2018.8672676]
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Larsen MEV, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P186, DOI 10.1109/MODELS.2015.7338249
   Larsen PG, 2016, LECT NOTES COMPUT SC, V9953, P171, DOI 10.1007/978-3-319-47169-3_13
   Lee EA, 2015, SENSORS-BASEL, V15, P4837, DOI 10.3390/s150304837
   Lee EA, 2010, LECT NOTES COMPUT SC, V6395, P273
   Lerm Rafael, 2015, IFAC - Papers Online, V48, P93, DOI 10.1016/j.ifacol.2015.08.114
   Lun YZ, 2019, J SYST SOFTWARE, V149, P174, DOI 10.1016/j.jss.2018.12.006
   Man Zhang, 2019, Software & Systems Modeling, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Marrone S, 2015, COMPUT ELECTR ENG, V47, P275, DOI 10.1016/j.compeleceng.2015.07.011
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Moscato F, 2012, IEEE T AUTOM SCI ENG, V9, P83, DOI 10.1109/TASE.2011.2161981
   Müller A, 2014, LECT NOTES ARTIF INT, V8793, P368, DOI 10.1007/978-3-319-12096-6_33
   Murguzur A, 2013, IEEE INT CONF SERV, P25, DOI 10.1109/SOCA.2013.40
   Oakes B.J., HINT BASED CONFIGURA
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Ragavan SKV, 2015, ROBOT AUTON SYST, V72, P114, DOI 10.1016/j.robot.2015.05.003
   Schlingloff Bernd-Holger, 2016, Engineering Trustworthy Software Systems. First International School, SETSS 2014. Tutorial Lectures: LNCS 9506, P256, DOI 10.1007/978-3-319-29628-9_5
   Scimago ranking, 2020, SCIM RANK
   Seiger R, 2018, SOFTW SYST MODEL, V17, P551, DOI 10.1007/s10270-016-0551-z
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sumblauskas D, 2017, EXPERT SYST APPL, V90, P303, DOI 10.1016/j.eswa.2017.08.025
   Sztipanovits J, 2017, ADV TOP INF SECUR, P15, DOI 10.1016/B978-0-12-803773-7.00002-4
   Technische Universitat Wien Institute of Electrical and Electronics Engineers and IEEE Industrial Electronics Society, MOD BAS PERF EV POD
   Tolk A, 2021, EUR J OPER RES, V291, P1075, DOI 10.1016/j.ejor.2020.10.010
   Tóth G, 2012, J COMPUT PHYS, V231, P870, DOI 10.1016/j.jcp.2011.02.006
   Tröls M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2308
   Tsigkanos C, 2016, COMPUTING, V98, P1011, DOI 10.1007/s00607-016-0509-6
   Vangheluwe H., 2002, AI, P9
   Vangheluwe H.L., SIMULATION FUTURE PR
   Vanherpen K., 2015, P S THEOR MOD SIM D, P55
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Vellaithurai CB, 2017, IEEE SYST J, V11, P2192, DOI 10.1109/JSYST.2015.2476367
   Wang C, 2021, IEEE ACCESS, V9, P40388, DOI 10.1109/ACCESS.2021.3064249
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
   Zeigler B.P., 2017, INT J SIMULAT P MODE, V12, P2, DOI 10.1504/IJSPM.2017.082781
   Zhang LC, 2013, 2013 IEEE 11TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC), P296, DOI 10.1109/DASC.2013.78
NR 99
TC 14
Z9 14
U1 9
U2 29
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2022
VL 183
AR 111081
DI 10.1016/j.jss.2021.111081
EA OCT 2021
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WR5FG
UT WOS:000714524600005
OA Green Submitted, Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Blasi, A
   Stulova, N
   Gorla, A
   Nierstrasz, O
AF Blasi, Arianna
   Stulova, Nataliia
   Gorla, Alessandra
   Nierstrasz, Oscar
TI RepliComment: Identifying clones in code comments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code comments; Software quality; Clones; Bad smell
AB Code comments are the primary means to document implementation and facilitate program comprehension. Thus, their quality should be a primary concern to improve program maintenance. While much effort has been dedicated to detecting bad smells, such as clones in code, little work has focused on comments. In this paper we present our solution to detect clones in comments that developers should fix. RepliComment can automatically analyze Java projects and report instances of copy-and paste errors in comments, and can point developers to which comments should be fixed. Moreover, it can report when clones are signs of poorly written comments. Developers should fix these instances too in order to improve the quality of the code documentation. Our evaluation of 10 well-known open source Java projects identified over 11K instances of comment clones, and over 1,300 of them are potentially critical. We improve on our own previous work Blasi and Gorla (2018), which could only find 36 issues in the same dataset. Our manual inspection of 412 issues reported by RepliComment reveals that it achieves a precision of 79% in reporting critical comment clones. The manual inspection of 200 additional comment clones that RepliComment filters out as being legitimate, could not evince any false negative. (C) 2021 The Authors. Published by Elsevier Inc.
C1 [Blasi, Arianna] USI Univ Svizzera Italiana, Lugano, Switzerland.
   [Gorla, Alessandra] IMDEA Software Inst, Pozuelo De Alarcon, Spain.
   [Stulova, Nataliia; Nierstrasz, Oscar] Univ Bern, Bern, Switzerland.
C3 Universita della Svizzera Italiana; IMDEA Software Institute; University
   of Bern
RP Blasi, A (corresponding author), USI Univ Svizzera Italiana, Lugano, Switzerland.
EM arianna.blasi@usi.ch
OI Blasi, Arianna/0000-0002-9635-2400; Stulova,
   Nataliia/0000-0002-6804-2253; Nierstrasz, Oscar/0000-0002-9975-9791
FU Swiss National Science Foundation [SNF-200021_178742, 200020-181973];
   Swiss National Science Foundation (SNF) [200020_181973, 200021_178742]
   Funding Source: Swiss National Science Foundation (SNF)
FX This work is primarily supported by the Swiss National Science
   Foundation in the context of the project SNF-200021_178742 "ASTERIx:
   Automatic System TEsting of inteRactive software ap-plIcations". Oscar
   Nierstrasz gratefully acknowledges the financial support of the Swiss
   National Science Foundation for the project "Agile Software Assistance"
   (SNSF project No. 200020-181973) .
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   ARNAOUDOVA V., 2010, Proceedings of the International Conference on Software Maintenance (ICSM) - ERA Track, P1
   Blasi A, 2018, INT C PROGRAM COMPRE, P320, DOI 10.1145/3196321.3196360
   Corazza Anna, 2018, Software Quality Journal, V26, P751, DOI 10.1007/s11219-016-9347-1
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C., 2006, DAGSTUHL SEMINAR P, V06301
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Luciv DV, 2018, PROGRAM COMPUT SOFT+, V44, P335, DOI 10.1134/S0361768818050079
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marcus A., 2011, ASE 2011 P 26 ANN IN, P107, DOI [10.1109/ASE.2001.989796, DOI 10.1109/ASE.2001.989796]
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Nafi KW, 2018, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2018.00023
   Newman CD, 2019, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSME.2019.00041
   Oumaziz MA, 2017, LECT NOTES COMPUT SC, V10221, P12, DOI 10.1007/978-3-319-56856-0_2
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Stulova N, 2020, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM51674.2020.00012
   Zhai J, 2016, PROC INT CONF SOFTW, P380, DOI 10.1145/2884781.2884881
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 26
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2021
VL 182
AR 111069
DI 10.1016/j.jss.2021.111069
EA SEP 2021
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WC1XH
UT WOS:000704056400006
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Arvanitou, EM
   Ampatzoglou, A
   Chatzigeorgiou, A
   Carver, JC
AF Arvanitou, Elvira-Maria
   Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Carver, Jeffrey C.
TI Software engineering practices for scientific software development: A
   systematic mapping study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering practices; High performance computing; Scientific
   computing
ID DESIGN
AB Background: The development of scientific software applications is far from trivial, due to the constant increase in the necessary complexity of these applications, their increasing size, and their need for intensive maintenance and reuse.
   Aim: To this end, developers of scientific software (who usually lack a formal computer science background) need to use appropriate software engineering (SE) practices. This paper describes the results of a systematic mapping study on the use of SE for scientific application development and their impact on software quality.
   Method: To achieve this goal we have performed a systematic mapping study on 359 papers. We first describe a catalog of SE practices used in scientific software development. Then, we discuss the quality attributes of interest that drive the application of these practices, as well as tentative side-effects of applying the practices on qualities.
   Results: The main findings indicate that scientific software developers are focusing on practices that improve implementation productivity, such as code reuse, use of third-party libraries, and the application of "good"programming techniques. In addition, apart from the finding that performance is a key-driver for many of these applications, scientific software developers also find maintainability and productivity to be important.
   Conclusions: The results of the study are compared to existing literature, are interpreted under a software engineering prism, and various implications for researchers and practitioners are provided. One of the key findings of the study, which is considered as important for driving future research endeavors is the lack of evidence on the trade-offs that need to be made when applying a software practice, i.e., negative (indirect) effects on other quality attributes. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Arvanitou, Elvira-Maria; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Macedonia; University of Alabama System; University of
   Alabama Tuscaloosa
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM e.arvanitou@uom.edu.gr; a.ampatzoglou@uom.edu.gr; achat@uom.gr;
   carver@cs.ua.edu
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
FU European Union's Horizon 2020 research and innovation programme [801015
   -EXA2PRO]
FX This work has received funding from the European Union's Horizon 2020
   research and innovation programme under grant agreement No 801015
   -EXA2PRO (https://exa2pro.eu)
CR Abdullin A., 2017, INT C TOOLS METHODS, V779, P1
   Amaral V, 2020, PARALLEL COMPUT, V91, DOI 10.1016/j.parco.2019.102584
   Ampatzoglou A., 2019, INF SOFTW TECHNOL, V106
   Ampatzoglou A, 2011, J SYST SOFTWARE, V84, P2265, DOI 10.1016/j.jss.2011.06.047
   Ampatzoglou A, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106412
   Ampatzoglou Areti., 2015, Proceedings of the Fifth International Symposium on Business Modeling and Software Design - Volume 1: BMSD, P75, DOI DOI 10.5220/0005885700750085
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   Assiroj P., 2018, IND ASS PATT REC INT
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BIRDSALL C., 2018, Plasma physics via computer simulation, DOI [10.1201/9781315275048, DOI 10.1201/9781315275048]
   Carver J., 2019, URSSI CONCEPTUALIZAT
   Charalampidou S., 2017, P 32 ACM SIGAPP S AP, P1231, DOI DOI 10.1145/3019612.3019781
   Charalampidou S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2294
   Costa GCB, 2015, J BIOMED INFORM, V56, P239, DOI 10.1016/j.jbi.2015.05.014
   Damartzis T, 2018, CHEM ENG RES DES, V131, P414, DOI 10.1016/j.cherd.2018.01.017
   De Magalhaes C. V., 2014, P 18 INT C EV ASS SO, P37
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Faulk S, 2009, COMPUT SCI ENG, V11, P30, DOI 10.1109/MCSE.2009.205
   Feitosa D., 2015, QUALITY SOFTWARE ARC
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Howison J., 2011, COMPUTER SUPPORTED C
   Hummel M, 2014, P ANN HICSS, P4712, DOI 10.1109/HICSS.2014.579
   Johanson A., 2018, COMPUT SCI ENG
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Lampropoulos A, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P251, DOI 10.1109/QUATIC.2018.00044
   Llorca C, 2013, TRANSPORT RES REC, P3, DOI 10.3141/2358-01
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Méndez M, 2014, PROCEEDINGS OF SEHPCCSE 2014: SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR HIGH PERFORMANCE COMPUTING IN COMPUTATIONAL SCIENCE AND ENGINEERING, P6, DOI 10.1109/SE-HPCCSE.2014.7
   Molléri JS, 2019, INFORM SOFTWARE TECH, V105, P117, DOI 10.1016/j.infsof.2018.08.008
   Nangia Udit, 2017, WORKSH SUST SOFTW SC
   Naughton T., 2018, BALANCING PERFORMANC, P130
   Odun-Ayo I., 2018, ARPN J ENG APPL SCI, V13
   Omar C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P524, DOI 10.1145/2591062.2591129
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pflueger D, 2016, PROCEEDINGS OF SE-HPCCSE 2016: 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING OR HIGH PERFORMANCE COMPUTING IN COMPUTATIONAL SCIENCE AND ENGINEERING, P26, DOI [10.1109/SE-HPCCSE.2016.008, 10.1109/SE-HPCCSE.2016.8]
   Queiroz F., 2016, INT J DES MANAGE PRO, V10
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sapuan F, 2018, COMPUT SCI ENG, V20, P33, DOI 10.1109/MCSE.2018.108163116
   Schmidberger M., 2012, 11 INT S PAR DISTR C
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Sletholt M.T., 2011, 4 INT WORKSH SOFTW E
   Sletholt MT, 2012, COMPUT SCI ENG, V14, P24, DOI 10.1109/MCSE.2011.113
   Spencer D., 2009, CARD SORTING DESIGNI
   Stol KJ, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P19, DOI 10.1109/FLOSS.2009.5071355
   Unhelkar B., 2013, The art of agile practice: A composite approach for projects and organizations
   Watson G., 2006, P IEEE INT C CLUST C, P1
   Wilson G, 2006, COMPUT SCI ENG, V8, P66, DOI 10.1109/MCSE.2006.122
   Zaimi A., 2015, 7 BALK C INF BCI 15
NR 54
TC 15
Z9 15
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2021
VL 172
AR 110848
DI 10.1016/j.jss.2020.110848
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PC2RX
UT WOS:000596855400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Golzadeh, M
   Decan, A
   Legay, D
   Mens, T
AF Golzadeh, Mehdi
   Decan, Alexandre
   Legay, Damien
   Mens, Tom
TI A ground-truth dataset and classification model for detecting bots in
   GitHub issue and PR comments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Distributed software development; Bot identification; GitHub
   repositories; Text similarity; Classification model
ID TREE
AB Bots are frequently used in Github repositories to automate repetitive activities that are part of the distributed software development process. They communicate with human actors through comments. While detecting their presence is important for many reasons, no large and representative ground-truth dataset is available, nor are classification models to detect and validate bots on the basis of such a dataset. This paper proposes a ground-truth dataset, based on a manual analysis with high interrater agreement, of pull request and issue comments in 5,000 distinct Github accounts of which 527 have been identified as bots. Using this dataset we propose an automated classification model to detect bots, taking as main features the number of empty and non-empty comments of each account, the number of comment patterns, and the inequality between comments within comment patterns. We obtained a very high weighted average precision, recall and F1-score of 0.98 on a test set containing 40% of the data. We integrated the classification model into an open source command-line tool to allow practitioners to detect which accounts in a given Github repository actually correspond to bots. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Golzadeh, Mehdi; Decan, Alexandre; Legay, Damien; Mens, Tom] Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
C3 University of Mons
RP Golzadeh, M (corresponding author), Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
EM mehdi.golzadeh@umons.ac.be; alexandre.decan@umons.ac.be;
   damien.legay@umons.ac.be; tom.mens@umons.ac.be
RI Golzadeh, Mehdi/AAX-4048-2021; Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020; Legay, Damien/0000-0001-6811-6585;
   Golzadeh, Mehdi/0000-0003-1041-439X
FU Fonds de la Recherche Scientifique - FNRS [T.0017.18, O.0157.18F-RG43,
   J.0151.20]
FX This work is supported by the Fonds de la Recherche Scientifique - FNRS
   [Grants number T.0017.18, O.0157.18F-RG43 and J.0151.20]. Editor: [BURAK
   TURHAN].
CR Abokhodair N, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P839, DOI 10.1145/2675133.2675208
   Agarwal R., 2017, INT C INF SYST ICIS
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Amleshwaram AA, 2013, INT CONF COMMUN SYST
   [Anonymous], 1950, MIND, DOI 10.1093/mind/LIX.236.433
   [Anonymous], P INT JOINT C ART IN
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Basic B.D., 2013, WORKSH SOFTW QUAL AN, V1053
   Ben Mimoun MS, 2017, INFORM MANAGE-AMSTER, V54, P545, DOI 10.1016/j.im.2016.11.008
   Benotti Luciana., 2014, P 2014 C INNOVATION, P63, DOI [10.1145/2591708.2591728, DOI 10.1145/2591708.2591728]
   Beschastnikh I, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P35, DOI 10.1109/ICSE-NIER.2017.17
   Breiman L., 2001, Mach. Learn., V45, P5
   Brereton RG, 2010, ANALYST, V135, P230, DOI 10.1039/b918972f
   Brown T.B., 2020, ADV NEURAL INFORM PR
   Burridge J., 1991, J R STAT SOC A STAT, V154, P361
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cosley D, 2007, 2007 INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P32
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dale R, 2016, NAT LANG ENG, V22, P811, DOI 10.1017/S1351324916000243
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dominic J., 2020, CONVERSATIONAL BOT N, DOI [10.1145/3387940.3391534, DOI 10.1145/3387940.3391534]
   DORFMAN R, 1979, REV ECON STAT, V61, P146, DOI 10.2307/1924845
   Efthimion P., 2018, SMU DATA SCI REV, V1
   Erlenhov L., 2020, INT WORKSH BOTS SOFT, DOI [10.1145/3387940, DOI 10.1145/3387940]
   Erlenhov L, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P445, DOI 10.1145/3368089.3409680
   Erlenhov L, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P7, DOI 10.1109/BotSE.2019.00009
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Farooq Umer, 2016, interactions, V23, P26, DOI [10.1145/3001896, DOI 10.1145/3001896]
   Frank Eibe, 2001, EUR C MACH LEARN, P145, DOI 10.1007/3-540-44795-413
   Fryer LK, 2017, COMPUT HUM BEHAV, V75, P461, DOI 10.1016/j.chb.2017.05.045
   Geiger R. Stuart, 2013, P 2013 C COMP SUPP C, P51, DOI [10.1145/2441955.2441970, DOI 10.1145/2441955.2441970]
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Golzadeh M., 2019, CEUR WORKSHOP PROC, V2605
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hofmann H., 2017, LETT VALUE PLOTS BOX, DOI [10.1080/10618600, DOI 10.1080/10618600]
   Hu ZW, 2019, PROC FRONT EDUC CONF, DOI 10.1109/fie43999.2019.9028685
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jain M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174042
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Katz J, 2018, LIBRARIESIO OPEN SOU, DOI DOI 10.5281/ZENODO.2536573
   Kerly A, 2009, APPLICATIONS AND INNOVATIONS IN INTELLIGENT SYSTEMS XVI, P169
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lebeuf C., 2017, SOFTWARE DEV MITIGAT
   Lebeuf C.R., 2018, A taxonomy of software bots: Towards a deeper understanding of software bot characteristics
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Lin C.-T., 2020, P 2 INT WORKSH BOTS, P36
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Minnich Amanda, 2017, 2017 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P467, DOI 10.1145/3110025.3110163
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pérez-Soler S, 2017, IEEE INT CONF AUTOM, P723, DOI 10.1109/ASE.2017.8115683
   Rebai S, 2019, IEEE INT WORK C SO, P152, DOI 10.1109/SCAM.2019.00026
   Rodríguez-Ruiz J, 2020, COMPUT SECUR, V91, DOI 10.1016/j.cose.2020.101715
   Romano J., 2006, P ANN M SO ASS I RES
   Romero R, 2020, P IEEE ACM 42 INT C, P66, DOI DOI 10.1145/3387940.3391505
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Thomas NT, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2740, DOI 10.1109/ICACCI.2016.7732476
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Wessel M., 2018, ACM INT C HUM COMP I
   Wessel M., 2020, Proceedings of the 42nd International Conference on Software Engineering Workshops (ICSEW'20), P51, DOI [10.1145/3387940.3391504, DOI 10.1145/3387940.3391504]
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C., 2012, Experimentation in Software Engineering
NR 73
TC 41
Z9 43
U1 1
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2021
VL 175
AR 110911
DI 10.1016/j.jss.2021.110911
EA JAN 2021
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QO4FV
UT WOS:000623099500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shin, SY
   Chaouch, K
   Nejati, S
   Sabetzadeh, M
   Briand, LC
   Zimmer, F
AF Shin, Seung Yeob
   Chaouch, Karim
   Nejati, Shiva
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
   Zimmer, Frank
TI Uncertainty-aware specification and analysis for hardware-in-the-loop
   testing of cyber-physical systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Test case specification and analysis; Cyber-physical systems; UML
   profile; Simulation; Model checking; Machine learning
ID MODEL CHECKING; GENERATION
AB Hardware-in-the-loop (HiL) testing is important for developing cyber-physical systems (CPS). HiL test cases manipulate hardware, are time-consuming and their behaviors are impacted by the uncertainties in the CPS environment. To mitigate the risks associated with HiL testing, engineers have to ensure that (1) test cases are well-behaved, e.g., they do not damage hardware, and (2) test cases can execute within a time budget. Leveraging the UML profile mechanism, we develop a domain-specific language, HITECS, for HiL test case specification. Using HITECS, we provide uncertainty-aware analysis methods to check the well-behavedness of HiL test cases. In addition, we provide a method to estimate the execution times of HiL test cases before the actual HiL testing. We apply HITECS to an industrial case study from the satellite domain. Our results show that: (1) HITECS helps engineers define more effective assertions to check HiL test cases, compared to the assertions defined without any systematic guidance; (2) HITECS verifies in practical time that HiL test cases are well-behaved; (3) HITECS is able to resolve uncertain parameters of HiL test cases by synthesizing conditions under which test cases are guaranteed to be well-behaved; and (4) HITECS accurately estimates HiL test case execution times. (c) 2020 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Shin, Seung Yeob; Chaouch, Karim; Nejati, Shiva; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Luxembourg, Luxembourg.
   [Nejati, Shiva; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Zimmer, Frank] SES Networks, Luxembourg, Luxembourg.
C3 University of Luxembourg; University of Ottawa
RP Shin, SY (corresponding author), Univ Luxembourg, 9 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
EM seungyeob.shin@uni.lu; karim.chaouch@uni.lu; snejati@uottawa.ca;
   m.sabetzadeh@uottawa.ca; lionel.briand@uni.lu; frank.zimmer@ses.com
RI Shin, Seung Yeob/ACP-8090-2022; Nejati, Shiva/KBT-7650-2024
OI Shin, Seung Yeob/0000-0001-9025-7173; 
FU SES, Luxembourg; Luxembourg National Research Fund
   [C-16PPP/IS/11270448]; European Research Council (ERC) under the
   European Union's Horizon 2020 research and innovation programme
   [694277]; NSERC of Canada under the Discovery, Discovery Accelerator;
   CRC programs
FX This project has received funding from SES, Luxembourg, the Luxembourg
   National Research Fund under the grant C-16PPP/IS/11270448, the European
   Research Council (ERC) under the European Union's Horizon 2020 research
   and innovation programme (grant agreement No. 694277) and NSERC of
   Canada under the Discovery, Discovery Accelerator, and CRC programs.
CR Adiego BF, 2015, IEEE T IND INFORM, V11, P1400, DOI 10.1109/TII.2015.2489184
   Ali S., 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), P1
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2017, SEM FDN SUBS EX UML
   [Anonymous], 1959, Statistical Methods and Scientific Inference
   [Anonymous], 2017, UML TEST PROF UTP VE
   Aranha Eduardo, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P107
   Arrieta A, 2017, SOFTWARE QUAL J, V25, P1041, DOI 10.1007/s11219-016-9341-7
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Bagnato A, 2013, EUR CON SFTWR MTNCE, P457, DOI 10.1109/CSMR.2013.71
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bettaieb S, 2019, LECT NOTES COMPUT SC, V11412, P3, DOI 10.1007/978-3-030-15538-4_1
   Biere A, 2003, ADV COMPUT, V58, P117
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Bruns G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P274
   Ciccozzi F., 2016, SOFTWARE SYSTEMS MOD, P1
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Clarke EM, 1999, MODEL CHECKING, P1
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Elaasar M, 2016, LECT NOTES COMPUT SC, V9953, P50, DOI 10.1007/978-3-319-47169-3_5
   Elbert B, 2008, Introduction to satellite communication, V3rd
   Enoiu EP, 2016, INT J SOFTW TOOLS TE, V18, P335, DOI 10.1007/s10009-014-0355-9
   ETSI, 2017, 2018731 ETSI ES
   ETSI, 2018, 103119 ETSI TR
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Greiner S, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P15
   Grumberg Orna., 2008, 25 Years of Model Checking: History, Achievements, Perspectives
   Iber Johannes, 2015, 2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD), P1
   Jensen JC, 2011, INT WIREL COMMUN, P1666, DOI 10.1109/IWCMC.2011.5982785
   Jeruchim M., 2000, Simulation of communication systems-Modeling, methodology, and techniques, V2nd ed.
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lindstrom G, 2005, LECT NOTES COMPUT SC, V3707, P444
   Liu B, 2019, EMPIR SOFTW ENG, V24, P444, DOI 10.1007/s10664-018-9611-z
   Luke S., 2013, Essentials of Metaheuristics
   Man Zhang, 2019, Software & Systems Modeling, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   Meng C, 2020, DES AUT CON, DOI 10.1109/dac18072.2020.9218627
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P5, DOI 10.1007/s10270-015-0469-x
   NAIK K, 1993, FORM METHOD SYST DES, V2, P277, DOI 10.1007/BF01384135
   Nejati S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1015, DOI 10.1145/3338906.3340444
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   OMG, 2011, OMG UN MOD LANG OMG
   OMG, 2017, ACT LANG FOUND UML A
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   SALEH AAM, 1981, IEEE T COMMUN, V29, P1715, DOI 10.1109/TCOM.1981.1094911
   Sampson A, 2014, ACM SIGPLAN NOTICES, V49, P112, DOI [10.1145/2666356.2594294, 10.1145/2594291.2594294]
   Schieferdecker I, 2003, LECT NOTES COMPUT SC, V2644, P79
   Schwitter R, 2002, 13TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P228
   Seidewitz E., 2015, P 15 INT WORKSH OCL, V1512, P105
   Seidewitz E, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P217, DOI 10.1145/3136014.3136028
   Shin S.Y., 2019, CASE STUDY DATA UNCE
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Shin SY, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P357, DOI 10.1145/3239372.3239382
   Shin S, 2020, IEEE ICCE, P745, DOI 10.1109/icce46568.2020.9043030
   Thacker R.A., 2010, Proceedings of the 1st ACM/IEEE International Conference on Cyber-Physical Systems, ICCPS '10, P12, DOI [10.1145/1795194.1795197, DOI 10.1145/1795194.1795197]
   Ul Haq F, 2020, IEEE INT CONF SOFTW, P85, DOI 10.1109/ICST46399.2020.00019
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2004, P 2004 ACM SIGSOFT I, P97, DOI [DOI 10.1145/1007512.1007526, 10.1145/1007512.1007526]
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Witten IH, 2011, MOR KAUF D, P1
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Zhang M., 2017, Signal Processing Advances in Wireless Communications (SPAWC), 2017 IEEE 18th International Workshop on, P1
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
   Zheng X, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P15, DOI 10.1109/SEsCPS.2015.11
NR 77
TC 16
Z9 16
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2021
VL 171
AR 110813
DI 10.1016/j.jss.2020.110813
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV9DC
UT WOS:000592500400006
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, BJ
   Lee, SW
AF Kim, Bong-Jae
   Lee, Seok-Won
TI Understanding and recommending security requirements from problem domain
   ontology: A cognitive three-layered approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Security; Requirements engineering; Ontology
ID TROPOS
AB Socio-technical systems (STS) are inherently complex due to the heterogeneity of its intertwined components. Therefore, ensuring STS security continues to pose significant challenges. Persistent security issues in STS are extremely critical to address as threats to security can affect entire enterprises, resulting in significant recovery costs. A profound understanding of the problems across multiple dimensions of STS is the key in addressing such security issues. However, we lack a systematic acquisition of the scattered knowledge related to design, development, and execution of STS. In this work, we methodologically analyze security issues from a requirements engineering perspective. We propose a cognitive three-layered framework integrating various modeling methodologies and knowledge sources related to security. This framework helps in understanding essential components of security and making recommendations of security requirements regarding threat analyses and risk assessments using Problem Domain Ontology (PDO) knowledge base. We also provide tool support for our framework. With the goal-oriented security reference model, we demonstrate how security requirements are recommended based on PDO, with the help of the tool. The organized acquisition of knowledge from SME groups and the domain working group provides rich context of security requirements, and also enhances the re-usability of the knowledge set. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Kim, Bong-Jae] Ajou Univ, Dept Network Centr Warfare, Suwon 443749, South Korea.
   [Lee, Seok-Won] Ajou Univ, Dept Software & Comp Engn, Suwon 443749, South Korea.
C3 Ajou University; Ajou University
RP Lee, SW (corresponding author), Ajou Univ, Dept Software & Comp Engn, Suwon 443749, South Korea.
EM leesw@ajou.ac.kr
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Science and ICT [NRF-2020R1F1A1075605];
   National Research Foundation of Korea [22A20130011085] Funding Source:
   Korea Institute of Science & Technology Information (KISTI), National
   Science & Technology Information Service (NTIS)
FX This research was supported by the Basic Science Research Program
   through the National Research Foundation of Korea (NRF) funded by the
   Ministry of Science and ICT (NRF-2020R1F1A1075605). The authors would
   like to thank anonymous reviewers for their valuable comments. We are
   also immensely grateful to Sangeeta Dey and Sihn Hye Park for their help
   on the manuscript.
CR Alberts C., 2003, TECH REP
   [Anonymous], 2018, 27005 ISOIEC
   [Anonymous], 2005, Secure Systems Development with UML
   Anton AI, 2001, E COMMERCE SECURITY, P67, DOI [10.1007/978-1-4615-1467-1_5, DOI 10.1007/978-1-4615-1467-1_5]
   Asnar Y, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P19
   Bass L., 2012, SOFTWARE ARCHITECTUR, P63
   Baxter G, 2011, INTERACT COMPUT, V23, P4, DOI 10.1016/j.intcom.2010.07.003
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Butler R.W., 2008, PRIMER ARCHITECTURAL
   Caralli R. A., 2007, Tech. Rep.
   Collopy P., 2012, RES AGENDA COMING RE, P799
   Common Criteria, 2012, COMMON CRITERIA INFO, P43
   Elahi G., 2009, TECH REP
   Elahi G, 2007, LECT NOTES COMPUT SC, V4801, P375
   Elahi G, 2011, P INT COMP SOFTW APP, P314, DOI 10.1109/COMPSAC.2011.48
   Fabian B, 2010, REQUIR ENG, V15, P7, DOI 10.1007/s00766-009-0092-x
   FireEye Inc, 2020, FIREEYE MAND M TREND
   FireEye Inc, 2019, FIREEYE MAND M TREND
   Ford D., 2010, OODA LOOP
   Grant K.A., 2007, EJOURNAL KNOWLEDGE M, V5, P173
   Gurses S., 2006, Workshop on Ubiquitous Knowledge Discovery for users, P51
   Horridge Matthew., 2011, PRACTICAL GUIDE BUIL
   Kim BJ, 2015, COMM COM INF SC, V558, P135, DOI 10.1007/978-3-662-48634-4_10
   Korea Internet and Security Agency, 2004, TECH REP
   Korea Internet and Security Agency, 2013, TECH REP
   Lee S., 2006, Proceedings of the 2006 international workshop on Software engineering for secure systems, SESS '06, P43
   Lee S. W., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Lee S.W., 2004, P 16 INT C SOFTWARE, P117
   Li T, 2014, INTERNATIONAL CONFERENCE ON CONTROL ENGINEERING AND AUTOMATION (ICCEA 2014), P285
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Looker Anne C, 2012, NCHS Data Brief, P1
   Lund M.S, 2006, SINTEF, V12, P15
   Mead N.R., 2005, Software Engineering for Secure Systems (SESS), P1, DOI 10.1145/1082983.1083214
   Mellado D, 2006, LECT NOTES COMPUT SC, V4189, P192
   Ministry of Government Legislation, 2016, NAT LAW INF CTR
   Mitre, 2020, COMM VULN EXP
   MITRE Corporation, 2014, COMM PLATF EN
   MITRE Corporation, 2020, COMM ATT PATT EN CLA
   MITREcorporation, 2020, COMM WEAKN EN CWE
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Naver Corporation, 2016, NAVER KOR DICT
   Paja E, 2015, DATA KNOWL ENG, V98, P123, DOI 10.1016/j.datak.2015.07.007
   Pennock MJ, 2015, PROCEDIA COMPUT SCI, V44, P147, DOI 10.1016/j.procs.2015.03.033
   Ponemon L., 2011, TECH REP
   Prud'hommeaux E., 2007, SPARQL QUERY LANGUAG
   Sindre G., 2001, NORSK INFORMATIKKONF
   Smith EA, 2006, SECUR CHALL, V2, P43
   Symantec Security Response, 2015, TECH REP
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 50
TC 13
Z9 14
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2020
VL 169
AR 110695
DI 10.1016/j.jss.2020.110695
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NL6FO
UT WOS:000567509300008
DA 2024-07-18
ER

PT J
AU Taipalus, T
   Seppänen, V
   Pirhonen, M
AF Taipalus, Toni
   Seppanen, Ville
   Pirhonen, Maritta
TI Uncertainty in information system development: Causes, effects, and
   coping mechanisms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Uncertainty; Risk; Information system development; Cause; Effect; Coping
   mechanism
ID SOFTWARE-DEVELOPMENT TEAMS; REQUIREMENTS-UNCERTAINTY; COMPLEXITY;
   CONTEXT; SUCCESS; RISK
AB Information system development (ISD) projects are an ever-growing field of project management (PM) with their unique features, and project failures in ISD are relatively common. In the broader context of PM, uncertainty is a studied, yet mercurial phenomenon. By contrast, uncertainty in ISD projects has received relatively little attention from scholars, and PM literature has not systematically focused on uncertainty in ISD from a viewpoint other than that of project managers. In order to understand uncertainties in ISD projects, we need to first understand the causes behind them, their effects on everyday ISD work, and share coping mechanisms utilized among industry professionals. In the context of ISD projects, we set out to explore what causes uncertainty, what are the effects of uncertainty, and how software industry professionals cope with uncertainty. We conducted eleven semi-structured interviews with a diverse range of ISD professionals, and analyzed the interviews using conventional content analysis. Our results extend and complement current knowledge on the causes, effects, and coping mechanisms of uncertainty, especially in the context of ISD. Additionally, we present practical considerations on how to implement our findings into ISD industry and education. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Taipalus, Toni; Seppanen, Ville; Pirhonen, Maritta] Univ Jyvaskyla, Jyvaskyla, Finland.
C3 University of Jyvaskyla
RP Taipalus, T (corresponding author), Univ Jyvaskyla, Fac Informat Technol, POB 35, FI-40014 Jyvaskyla, Finland.
EM toni.taipalus@jyu.fi
OI Seppanen, Ville/0000-0003-3843-4843; Taipalus, Toni/0000-0003-4060-3431
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   [Anonymous], 2013, GUIDE PROJECT MANAGE, V5
   Badampudi D, 2017, INT SYMP EMP SOFTWAR, P205, DOI 10.1109/ESEM.2017.32
   Bell S., 2010, The Clearing House: A Journal of Educational Strategies, Issues and Ideas, V83, P39, DOI [10.1080/00098650903505415, DOI 10.1080/00098650903505415]
   Bernard H.Russell., 1988, RES METHODS CULTURAL
   Boehm B., 2003, BALANCING AGILITY DI
   BUDNER S, 1962, J PERS, V30, P29
   Chu WH, 2015, SYSTEM, V49, P1, DOI 10.1016/j.system.2014.10.015
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Crawford L., 2006, International Journal of Project Management, V24, P687, DOI 10.1016/j.ijproman.2006.09.011
   DiCicco-Bloom B, 2006, MED EDUC, V40, P314, DOI 10.1111/j.1365-2929.2006.02418.x
   Dönmez D, 2018, INFORM SOFTWARE TECH, V93, P94, DOI 10.1016/j.infsof.2017.08.015
   Ebert C, 2005, PROC INT CONF SOFTW, P553
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Giezen M, 2012, INT J PROJ MANAG, V30, P781, DOI 10.1016/j.ijproman.2012.01.010
   Grote G, 2015, SAFETY SCI, V71, P71, DOI 10.1016/j.ssci.2014.02.010
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Johansen A, 2016, ADM SCI, V6, DOI 10.3390/admsci6030011
   Jurison J., 1999, COMMUN AIS, V2, P2, DOI DOI 10.17705/1CAIS.00217
   Karasneh Y, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT 2009), P1, DOI 10.1109/ICADIWT.2009.5273926
   Knight F. H., 1921, RISK UNCERTAINTY PRO, V31
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Lipshitz R, 1997, ORGAN BEHAV HUM DEC, V69, P149, DOI 10.1006/obhd.1997.2679
   Little T, 2005, IEEE SOFTWARE, V22, P28, DOI 10.1109/MS.2005.60
   Liu J, 2011, INT J PROJ MANAG, V29, P923, DOI 10.1016/j.ijproman.2010.11.002
   Luqi Cooke D.E., 1992, 16 ANN INT COMP SOFT, P381, DOI [10.1109/CMPSAC.1992.217575, DOI 10.1109/CMPSAC.1992.217575]
   MacCormack A, 2003, J PROD INNOVAT MANAG, V20, P217, DOI 10.1111/1540-5885.2003004
   Madsen S., 2009, P 15 AM C INF SYST A, P119
   Marinho M.L.M., 2014, CORR
   Mehta N, 2014, INFORM MANAGE-AMSTER, V51, P417, DOI 10.1016/j.im.2014.02.007
   Moynihan T, 2000, J SYST SOFTWARE, V53, P99, DOI 10.1016/S0164-1212(00)00049-2
   Na KS, 2004, J SYST SOFTWARE, V70, P155, DOI 10.1016/S0164-1212(03)00014-1
   Perminova Olga, 2008, International Journal of Project Management, V26, P73, DOI 10.1016/j.ijproman.2007.08.005
   Petit Y, 2010, PROJ MANAG J, V41, P46, DOI 10.1002/pmj.20201
   Rodriguez-Repiso L, 2007, EXPERT SYST APPL, V32, P543, DOI 10.1016/j.eswa.2006.01.032
   Royce W.W., 1970, Proceedings of WESCON, P1
   Sanderson J, 2012, INT J PROJ MANAG, V30, P432, DOI 10.1016/j.ijproman.2011.11.002
   Schwaber K., 2001, Agile software development with scrum
   Schwalbe K., 2010, Managing Information Technology Projects, V6th
   Simangunsong E, 2012, INT J PROD RES, V50, P4493, DOI 10.1080/00207543.2011.613864
   Siponen M, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6260
   Standish Group, 2013, CHAOS REP
   Taipalus T., 2018, Journal of Information Systems Education, V29, P117
   Thomé AMT, 2016, INT J PROJ MANAG, V34, P1328, DOI 10.1016/j.ijproman.2015.10.012
   Thurmond VA, 2001, J NURS SCHOLARSHIP, V33, P253, DOI 10.1111/j.1547-5069.2001.00253.x
   Ward S., 2003, INT J PROJ MANAG, V21, P97, DOI DOI 10.1016/S0263-7863(01)00080-1
   Zmud RW, 1980, MIS QUART, V4, P45, DOI 10.2307/249336
NR 49
TC 6
Z9 6
U1 1
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2020
VL 168
AR 110655
DI 10.1016/j.jss.2020.110655
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA MX6ZZ
UT WOS:000557871300013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Avritzer, A
   Ferme, V
   Janes, A
   Russo, B
   van Hoorn, A
   Schulz, H
   Menasché, D
   Rufino, V
AF Avritzer, Alberto
   Ferme, Vincenzo
   Janes, Andrea
   Russo, Barbara
   van Hoorn, Andre
   Schulz, Henning
   Menasche, Daniel
   Rufino, Vilc
TI Scalability Assessment of Microservice Architecture Deployment
   Configurations: A Domain-based Approach Leveraging Operational Profiles
   and Load Tests
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID PERFORMANCE
AB Microservices have emerged as an architectural style for developing distributed applications. Assessing the performance of architecture deployment configurations - e.g., with respect to deployment alternatives - is challenging and must be aligned with the system usage in the production environment. In this paper, we introduce an approach for using operational profiles to generate load tests to automatically assess scalability pass/fail criteria of microservice configuration alternatives. The approach provides a Domain-based metric for each alternative that can, for instance, be applied to make informed decisions about the selection of alternatives and to conduct production monitoring regarding performance-related system properties, e.g., anomaly detection.
   We have evaluated our approach using extensive experiments in a large bare metal host environment and a virtualized environment. First, the data presented in this paper supports the need to carefully evaluate the impact of increasing the level of computing resources on performance. Specifically, for the experiments presented in this paper, we observed that the evaluated Domain-based metric is a non-increasing function of the number of CPU resources for one of the environments under study. In a subsequent series of experiments, we investigate the application of the approach to assess the impact of security attacks on the performance of architecture deployment configurations. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Janes, Andrea; Russo, Barbara] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Avritzer, Alberto] EsulabSolutions Inc, Princeton, NJ USA.
   [Schulz, Henning] Novatec Consulting GmbH, Leinfelden Echterdingen, Germany.
   [van Hoorn, Andre] Univ Stuttgart, Stuttgart, Germany.
   [Menasche, Daniel; Rufino, Vilc] Fed Univ Rio de Janeiro UFRJ, Rio De Janeiro, Brazil.
   [Ferme, Vincenzo] Kiratech SpA, Lugano, Switzerland.
C3 Free University of Bozen-Bolzano; University of Stuttgart; Universidade
   Federal do Rio de Janeiro
RP Russo, B (corresponding author), Free Univ Bozen Bolzano, Bolzano, Italy.; van Hoorn, A (corresponding author), Univ Stuttgart, Stuttgart, Germany.
EM van.hoorn@informatik.uni-stuttgart.de
RI Russo, Barbara/AAA-8850-2019; Janes, Andrea/B-5388-2015; Janes,
   Andrea/IVV-0008-2023
OI Russo, Barbara/0000-0003-3737-9264; Janes, Andrea/0000-0002-1423-6773;
   Janes, Andrea/0000-0002-1423-6773
FU EsulabSolutions, Inc.; German Federal Ministry of Education and Research
   [01IS17010]; European Union's Horizon 2020 research and innovation
   programme [825040]; GAUSS national research project - MIUR under thePRIN
   2015 program [2015KWREMX]; Swiss National Science Foundation [178653];
   Open Access Publishing Fund of the Free University of Bozen-Bolzano
FX This work has been partly supported by EsulabSolutions, Inc., the German
   Federal Ministry of Education and Research (grant no. 01IS17010,
   ContinuITy), the European Union's Horizon 2020 research and innovation
   programme (grant no. 825040, RADON), the GAUSS national research
   project, which has been funded by the MIUR under thePRIN 2015program
   (Contract 2015KWREMX), and by the Swiss National Science Foundation
   (project no. 178653). The authors would like to thank the HPI Future SOC
   Lab for providing the infrastructure. This work was supported by the
   Open Access Publishing Fund of the Free University of Bozen-Bolzano.
CR Aderaldo Carlos M., 2017, 2017 IEEE/ACM 1st International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P8, DOI 10.1109/ECASE.2017.4
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], [No title captured]
   [Anonymous], 2016, MIRAI DDOS SOURCE CO
   [Anonymous], [No title captured]
   Antonakakis M, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1093
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   Avritzer A., 2010, P 1 JOINT WOSPSIPEW, P93
   Avritzer A, 2018, LECT NOTES COMPUT SC, V11048, P159, DOI 10.1007/978-3-030-00761-4_11
   Avritzer A, 2019, COMPANION OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P39, DOI 10.1145/3302541.3311961
   DENNING PJ, 1978, COMPUT SURV, V10, P225, DOI 10.1145/356733.356735
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Ferme V, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P261, DOI 10.1145/3184407.3184417
   Heger C., 2017, P 8 ACMSPEC INT C PE, P429
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kambourakis G, 2017, IEEE MILIT COMMUN C, P267, DOI 10.1109/MILCOM.2017.8170867
   Milenkoski A, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2808691
   Newman S., 2015, BUILDING MICROSERVIC
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Ueda T, 2016, I S WORKL CHAR PROC, P85, DOI 10.1109/IISWC.2016.7581269
   Vögele C, 2018, SOFTW SYST MODEL, V17, P443, DOI 10.1007/s10270-016-0566-5
   Weyuker EJ, 2002, IBM SYST J, V41, P45, DOI 10.1147/sj.411.0045
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
NR 24
TC 21
Z9 22
U1 2
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110564
DI 10.1016/j.jss.2020.110564
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LJ5DR
UT WOS:000530186500010
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Agh, H
   Garcia, F
   Piattini, M
   Ramsin, R
AF Agh, Halimeh
   Garcia, Felix
   Piattini, Mario
   Ramsin, Raman
TI Requirements for adopting software process lines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software Process Lines; Method Tailoring; Systematic Mapping Study;
   Empirical Study
ID AGILE PRACTICES; PROCESS IMPROVEMENT; SUCCESS FACTORS; EXPERIENCE;
   CRITERIA; IMPACT
AB A Software Process Line (SPrL) is potentially suitable for constructing software development methodologies by reusing core assets. However, adopting this approach without prior assessment of its suitability can lead to failure. The aim of this paper is to identify a set of requirements that can be used for deciding whether to adopt the SPrL approach in an organization. Identification of the requirements was accomplished in two stages: the characteristics important in method tailoring were first identified via a Systematic Mapping Study (SMS) that focused on analyzing 43 primary studies; the degree of importance of the identified characteristics was then determined using a questionnaire survey in which 31 experts participated. By analyzing the results of the SMS and the survey, we have identified 12 product-related, 22 project-related, and 10 organization-related requirements. In addition to these requirements, we have also identified two relevant requirements by studying previous research on Software Product Lines (SPL) and Business Process Lines (BPL). The requirements thus identified can help organizations decide on whether to adopt the SPrL approach: the more an organization satisfies the requirements, the more frequently method tailoring occurs in that organization, and hence, the more justified it is to adopt the SPrL approach. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Agh, Halimeh; Ramsin, Raman] Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
   [Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Informat Technol & Syst Inst, Alarcos Res Grp, Ciudad Real, Spain.
C3 Sharif University of Technology; Universidad de Castilla-La Mancha
RP Ramsin, R (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
EM agh@ce.sharif.edu; felix.garcia@uclm.es; mario.piattini@uclm.es;
   ramsin@sharif.edu
RI Piattini, Mario/F-6271-2013; Ramsin, Raman/G-8455-2017; Garcia,
   Felix/D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Ramsin, Raman/0000-0003-1996-9906;
   Garcia, Felix/0000-0001-6460-0353
FU Ministry of Science, Research, and Technology of Iran; Ministerio de
   Economia, Industria y Competitividad (MINECO) y el Fondo Europeo de
   Desarrollo Regional (FEDER) [RTI2018098309-B-C31]; Model Engineering for
   Government and Management of Global Software Development
   [SBPLY/17/180501/000150]; GEMA (Generation and Evaluation of Models for
   dAta Quality), Consejeria de Educacion y Ciencia, Junta de Comunidades
   de Castilla-La Mancha
FX This work was supported by the Ministry of Science, Research, and
   Technology of Iran; BIZDEVOPS-Global [grant number RTI2018098309-B-C31],
   Ministerio de Economia, Industria y Competitividad (MINECO) y el Fondo
   Europeo de Desarrollo Regional (FEDER); G3Soft [grant number
   SBPLY/17/180501/000150 Model Engineering for Government and Management
   of Global Software Development] and GEMA (Generation and Evaluation of
   Models for dAta Quality), Consejeria de Educacion y Ciencia, Junta de
   Comunidades de Castilla-La Mancha.
CR Acuna S. T., 2000, HDB SOFTWARE ENG KNO, P193, DOI DOI 10.1142/9789812389718_0011
   Agh H, 2017, PROCEEDINGS OF THE FIFTH EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS (ECBS 2017), DOI 10.1145/3123779.3123810
   Agh H, 2016, INFORM SOFTWARE TECH, V78, P95, DOI 10.1016/j.infsof.2016.05.010
   Akbar R., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P914, DOI 10.1109/ICCISci.2012.6297156
   Akbar R, 2011, COMM COM INF SC, V181, P571
   Alegria J. A. H., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P170, DOI 10.1109/ICSSP.2012.6225962
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 1990, BASICS GROUNDED THEO
   [Anonymous], [No title captured]
   [Anonymous], 2011, 15 INTERNA TIONAL C
   [Anonymous], [No title captured]
   [Anonymous], 2002, PRINCIPLES SURVEY 1
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Hurtado JA, 2013, J SYST SOFTWARE, V86, P1153, DOI 10.1016/j.jss.2012.09.033
   Armbrust Ove, 2009, Software Process: Improvement and Practice, V14, P181, DOI 10.1002/spip.412
   Armbrust Ove, 2008, Software Process: Improvement and Practice, V13, P5, DOI 10.1002/spip.391
   Armbrust O, 2008, LECT NOTES COMPUT SC, V5007, P160, DOI 10.1007/978-3-540-79588-9_15
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Bastos J.F., 2015, P 3 INT WORKSH COND, P35
   Bastos JF, 2017, J SYST SOFTWARE, V131, P112, DOI 10.1016/j.jss.2017.05.052
   Batra D, 2009, COMMUN ACM, V52, P143, DOI 10.1145/1562164.1562200
   Campanelli AS, 2018, J SYST SOFTWARE, V137, P366, DOI 10.1016/j.jss.2017.12.012
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chiam YK, 2009, COMM COM INF SC, V42, P173
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Cordeiro L., 2008, SIGSOFT SOFTW ENG NO, V33, P1
   de Cesare Sergio, 2008, Journal of Computing and Information Technology - CIT, V16, P157, DOI 10.2498/cit.1000898
   Diebold Philipp, 2014, P INT S EMP SOFTW EN, DOI [10.1145/2652524.2652552, DOI 10.1145/2652524.2652552]
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Donzelli P, 2003, J SOFTW MAINT EVOL-R, V15, P27, DOI 10.1002/smr.266
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fontoura Lisandra M., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P179
   Hanssen GK, 2007, LECT NOTES COMPUT SC, V4764, P7
   Hanssen GK, 2005, LECT NOTES COMPUT SC, V3547, P314
   Hong N, 2010, ASIA PAC SOFWR ENG, P310, DOI 10.1109/APSEC.2010.43
   Alegría JAH, 2014, J SOFTW-EVOL PROC, V26, P386, DOI 10.1002/smr.1576
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jaufman O, 2005, LECT NOTES COMPUT SC, V3547, P328
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Law Amy., 2005, P 2005 WORKSHOP HUMA, P1
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Martinez-Ruiz Tomas, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P128, DOI 10.1007/978-3-642-21843-9_12
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Mohagheghi P, 2017, INFORM SOFTWARE TECH, V88, P96, DOI 10.1016/j.infsof.2017.04.002
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Ocampo A., 2005, Software Process Improvement and Practice, V10, P273, DOI 10.1002/spip.229
   Ortega D, 2012, P INT C CHIL COMPUT, P29, DOI 10.1109/SCCC.2012.11
   Park S, 2006, EXPERT SYST APPL, V30, P179, DOI 10.1016/j.eswa.2005.06.023
   Peng Xu, 2008, IT Professional, V10, P39, DOI 10.1109/MITP.2008.81
   Pereira E.B., 2007, INT C SYSTEMS ENG MO, P71
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Pikkarainen M, 2012, EMPIR SOFTW ENG, V17, P675, DOI 10.1007/s10664-011-9185-5
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Rashid N, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1927
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schoknecht A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092694
   Siebel NT, 2003, J SOFTW MAINT EVOL-R, V15, P9, DOI 10.1002/smr.264
   Tao JL, 2008, PROCEEDINGS OF THE 27TH CHINESE CONTROL CONFERENCE, VOL 5, P38, DOI 10.1109/CHICC.2008.4605454
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   Washizaki H, 2006, LECT NOTES COMPUT SC, V4034, P415
   Westerheim H, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P196
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Yan ZQ, 2010, LECT NOTES COMPUT SC, V6426, P60
NR 78
TC 3
Z9 3
U1 2
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2020
VL 164
AR 110546
DI 10.1016/j.jss.2020.110546
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LF2YS
UT WOS:000527289100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Chi, JL
   Qu, Y
   Zheng, QH
   Yang, ZJ
   Jin, WX
   Cui, D
   Liu, T
AF Chi, Jianlei
   Qu, Yu
   Zheng, Qinghua
   Yang, Zijiang
   Jin, Wuxia
   Cui, Di
   Liu, Ting
TI Relation-based test case prioritization for regression testing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Test case prioritization; Dynamic call sequence
ID MUTATION
AB Test case prioritization (TCP), which aims at detecting faults as early as possible is broadly used in program regression testing. Most existing TCP techniques exploit coverage information with the hypothesis that higher coverage has more chance to catch bugs. Static structure information such as function and statement are frequently employed as coverage granularity. However, the former consumes less costs but presents lower capability to detect faults, the latter typically incurs more overhead.
   In this paper, dynamic function call sequences are argued that can guide TCP effectively. Same set of functions/statements can exhibit very different execution behaviors. Therefore, mapping program behaviors to unit-based (function/statement) coverage may not be enough to predict fault detection capability. We propose a new approach AGC (Additional Greedy method Call sequence). Our approach leverages dynamic relation-based coverage as measurement to extend the original additional greedy coverage algorithm in TCP techniques.
   We conduct our experiments on eight real-world java open source projects and systematically compare AGC against 22 state-of-the-art TCP techniques with different granularities. Results show that AGC outperforms existing techniques on large programs in terms of bug detection capability, and also achieves the highest mean APFD value. The performance demonstrates a growth trend as the size of the program increases. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Chi, Jianlei; Zheng, Qinghua; Jin, Wuxia; Cui, Di; Liu, Ting] Xi An Jiao Tong Univ, Minist Educ, Key Lab Intelligent Network & Network Secur, Xian 710049, Shaanxi, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 48167 USA.
   [Qu, Yu] Univ Calif Riverside, Dept Comp Sci & Engn, 900 Univ Ave, Riverside, CA 92521 USA.
C3 Xi'an Jiaotong University; Western Michigan University; University of
   California System; University of California Riverside
RP Qu, Y (corresponding author), Univ Calif Riverside, Dept Comp Sci & Engn, 900 Univ Ave, Riverside, CA 92521 USA.
EM chijianlei@stu.xjtu.edu.cn; yqu@sei.xjtu.edu.cn; qhzhengg@xjtu.edu.cn;
   zijiang.yang@wmich.edu; wx_jin@sei.xjtu.edu.cn; cuidi@sei.xjtu.edu.cn;
   tliu@sei.xjtu.edu.cn
RI Qu, Yu/AAD-9426-2020; Qu, Yu/GQA-5775-2022
OI Qu, Yu/0000-0002-1400-6740; 
FU National Key R&D Program of China [2016YFB1000903]; National Natural
   Science Foundation of China [61632015, 61772408, U1766215, 61721002,
   61532015, 61833015]; Ministry of Education Innovation Research Team
   [IRT_17R86]; Project of China Knowledge Centre for Engineering Science
   and Technology
FX This work was supported by National Key R&D Program of China
   (2016YFB1000903), National Natural Science Foundation of China
   (61632015, 61772408, U1766215, 61721002, 61532015, 61833015), Ministry
   of Education Innovation Research Team (IRT_17R86), and Project of China
   Knowledge Centre for Engineering Science and Technology.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   Dianxiang Xu, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P265, DOI 10.1109/ICST.2010.14
   Dickinson W., 2001, Software Engineering Notes, V26, P246, DOI 10.1145/503271.503243
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Eghbali S, 2016, IEEE T SOFTWARE ENG, V42, P1178, DOI 10.1109/TSE.2016.2550441
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Prioritizing test cases for regression testing, V25
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Hao D, 2016, FRONT COMPUT SCI-CHI, V10, P769, DOI 10.1007/s11704-016-6112-3
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hoffmann M., 2016, Jacoco code coverage tool
   Holland I.H., 1975, ADAPTATION NATURAL A
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaner C., 1997, SOFTWARE QA, V4
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kinable J, 2011, J COMPUT VIROL HACKI, V7, P233, DOI 10.1007/s11416-011-0151-y
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Mondal D, 2015, IEEE ICST WORKSHOP
   Rosero RH, 2016, INT J SOFTW ENG KNOW, V26, P675, DOI 10.1142/S0218194016300013
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shali Yan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P147, DOI 10.1109/ICST.2010.47
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   Wang RC, 2015, IET SOFTW, V9, P29, DOI 10.1049/iet-sen.2014.0008
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu Qu, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI 10.1145/2693208.2693223
   Zhang QQ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL WORKSHOP ON DIFFUSE POLLUTION-MANAGEMENT MEASURES AND CONTROL TECHNIQUE, P171, DOI 10.1109/QSIC.2010.16
NR 51
TC 30
Z9 32
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2020
VL 163
AR 110539
DI 10.1016/j.jss.2020.110539
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT2WS
UT WOS:000518876900009
DA 2024-07-18
ER

PT J
AU Jiang, JJ
   Klein, G
   Chang, JYT
AF Jiang, James J.
   Klein, Gary
   Chang, Jamie Y. T.
TI Teamwork behaviors in implementing enterprise systems with multiple
   projects: Results from Chinese firms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multiple projects; Enterprise systems; Inter-teamwork; ES integration
   team; Goal interdependence
ID GOAL INTERDEPENDENCE; TAXONOMY; PROGRAM; SUCCESS; QUALITY; IMPACT; TASK;
   ADAPTABILITY; INTEGRATION; MANAGEMENT
AB Enterprise system (ES) implementations are unique in their scope to encompass information transfer and standardization across an entire organization. The ES has become a ubiquitous software product essential for many organizations. A successful ES implementation requires integrating multiple projects, over a wide time span, led by managers across diverse functions and interests. The single project principles proven useful for the development of less complex systems require an upgrade to account for the need to integrate the activities and outputs of the multiple projects in an ES implementation. In particular, the set of goals must move all projects to deliver the ES scope while expending only the allocated resources available to an organization. Based on the literature of social interdependence theory, we develop a model to examine teamwork behaviors in the context of an ES implementation. Specifically, goal interdependence among the multiple ES projects fosters promotive interteam behaviors of monitoring across ES project teams and ES project team adaptability, which, in turn, lead to higher levels of implementation performance. The model holds true according to data from a sample of key participants in recent ES implementations in small to medium Chinese enterprises. Interdependent goals allow for a degree of functional independence while pursuing goals important to the organization as a whole. (C) 2019 Published by Elsevier Inc.
C1 [Jiang, James J.] Natl Taiwan Univ, Coll Business & Adm, Taipei, Taiwan.
   [Klein, Gary] Univ Colorado, Coll Business & Adm, 1420 Austin Bluffs Pkwy, Colorado Springs, CO 80918 USA.
   [Chang, Jamie Y. T.] Tunghai Univ, Dept Informat Management, Taichung 40704, Taiwan.
C3 National Taiwan University; University of Colorado System; University of
   Colorado at Colorado Springs; Tunghai University
RP Chang, JYT (corresponding author), Tunghai Univ, Dept Informat Management, Taichung 40704, Taiwan.
EM jjjiang@ntu.edu.tw; gklein@uccs.edu; jamie@thu.edu.tw
RI Chang, Jamie/IQW-4646-2023; Jiang, James/JPK-7730-2023
OI Chang, Jamie/0000-0003-4811-9847
FU Ministry of Science and Technology, ROC [MOST 106-2410-H-029 -017 -MY2]
FX The author gratefully acknowledges the sponsorship of the Ministry of
   Science and Technology, ROC, under the project MOST 106-2410-H-029 -017
   -MY2.
CR Armstrong CP, 1999, INFORM SYST RES, V10, P304, DOI 10.1287/isre.10.4.304
   Avritzer A, 2010, J SYST SOFTWARE, V83, P1881, DOI 10.1016/j.jss.2010.05.070
   Black W., 1998, Multivariate data analysis: With readings
   Blomquist T., 2004, PMI RES C
   Burke CS, 2006, J APPL PSYCHOL, V91, P1189, DOI 10.1037/0021-9010.91.6.1189
   Campbell DT, 1955, AM J SOCIOL, V60, P339, DOI 10.1086/221565
   Cannon-Bowers J.A., 1995, Team effectiveness and decision making in organizations, P333
   Chang JYT, 2017, PROJ MANAG J, V48, P100, DOI 10.1177/875697281704800107
   Chang JYT, 2014, INFORM MANAGE-AMSTER, V51, P465, DOI 10.1016/j.im.2014.03.004
   Chang JYT, 2013, J SYST SOFTWARE, V86, P1453, DOI 10.1016/j.jss.2013.01.030
   Chen MJ, 2011, ACAD MANAGE PERSPECT, V25, P6, DOI 10.5465/AMP.2011.63886526
   Chen YF, 2005, INT J INTERCULT REL, V29, P429, DOI 10.1016/j.inintrel.2005.05.010
   Davison R, 2002, COMMUN ACM, V45, P109
   Deutsch M., 2011, Handbook of theories of social psychology, V2, P275
   Drach-Zahavy A, 2013, J SERV MANAGE, V24, P151, DOI 10.1108/09564231311323944
   Eden R, 2014, COMMUN ASSOC INF SYS, V35, P39
   Elbanna A, 2010, J STRATEGIC INF SYST, V19, P39, DOI 10.1016/j.jsis.2010.02.005
   Erez M., 2013, New developments in goal setting and task performance, P509
   Fransen J, 2011, COMPUT HUM BEHAV, V27, P1103, DOI 10.1016/j.chb.2010.05.017
   Galy E, 2014, INFORM MANAGE-AMSTER, V51, P310, DOI 10.1016/j.im.2014.02.002
   Gefen D, 2005, COMMUN ASSOC INF SYS, V16, P91, DOI 10.17705/1CAIS.01605
   Gracia E, 2010, GROUP ORGAN MANAGE, V35, P276, DOI 10.1177/1059601110370783
   Gregor S, 2014, J ASSOC INF SYST, V15, pI
   Hair JF, 2013, LONG RANGE PLANN, V46, P1, DOI 10.1016/j.lrp.2013.01.001
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hong WY, 2014, INFORM SYST RES, V25, P111, DOI 10.1287/isre.2013.0501
   Jiang J, 2018, J ASSOC INF SYST, V19, P40, DOI 10.17705/1jais.00480
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Jiang JJ, 2014, J MANAGE INFORM SYST, V31, P79, DOI 10.2753/MIS0742-1222310104
   JOHN G, 1982, J MARKETING RES, V19, P517, DOI 10.2307/3151724
   Johns G, 2006, ACAD MANAGE REV, V31, P386, DOI 10.5465/amr.2006.20208687
   Johnson D.W., 1989, COOPERATION COMPETIT
   JOHNSON DW, 1985, J PSYCHOL, V119, P405, DOI 10.1080/00223980.1985.10542911
   Koh SCL, 2011, J STRATEGIC INF SYST, V20, P385, DOI 10.1016/j.jsis.2011.07.001
   KUMAR N, 1993, ACAD MANAGE J, V36, P1633, DOI 10.5465/256824
   LePine JA, 2008, PERS PSYCHOL, V61, P273, DOI 10.1111/j.1744-6570.2008.00114.x
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   McBride T, 2008, J SYST SOFTWARE, V81, P2386, DOI 10.1016/j.jss.2008.06.015
   Murphy K, 2016, P ANN HICSS, P4942, DOI 10.1109/HICSS.2016.613
   Neuman S. L. W., 2002, SOCIAL RES METHODS Q
   Parolia N, 2011, INT J PROJ MANAG, V29, P313, DOI 10.1016/j.ijproman.2010.03.004
   Pee LG, 2010, J ASSOC INF SYST, V11, P550
   Porter COLH, 2010, J APPL PSYCHOL, V95, P935, DOI 10.1037/a0019637
   Porter COLH, 2003, J APPL PSYCHOL, V88, P391, DOI 10.1037/0021-9010.88.3.391
   Preston DS, 2009, INFORM SYST RES, V20, P159, DOI 10.1287/isre.1070.0159
   Pulakos ED, 2000, J APPL PSYCHOL, V85, P612, DOI 10.1037/0021-9010.85.4.612
   Ramaseshan B, 2006, J SERV RES-US, V9, P195, DOI 10.1177/1094670506293574
   Ranganathan C, 2006, INFORM SYST RES, V17, P145, DOI 10.1287/isre.1060.0084
   Ranjan Shree, 2016, International Journal of Business Information Systems, V21, P388
   Rousseau V, 2006, SMALL GR RES, V37, P540, DOI 10.1177/1046496406293125
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Sarker S, 2003, INFORM MANAGE-AMSTER, V40, P813, DOI 10.1016/S0378-7206(02)00103-9
   Seddon PB, 2010, MIS QUART, V34, P305
   Sherman JD, 2011, ORGAN SCI, V22, P245, DOI 10.1287/orsc.1090.0506
   Strong DM, 2010, MIS QUART, V34, P731
   Suprapto M, 2015, INT J PROJ MANAG, V33, P1347, DOI 10.1016/j.ijproman.2015.03.015
   Tan FTC, 2017, INFORM MANAGE-AMSTER, V54, P292, DOI 10.1016/j.im.2016.08.001
   Taras V, 2010, J APPL PSYCHOL, V95, P405, DOI 10.1037/a0018938
   Tasa K, 2007, J APPL PSYCHOL, V92, P17, DOI 10.1037/0021-9010.92.1.17
   Tjosvold D, 1998, APPL PSYCHOL-INT REV, V47, P285, DOI 10.1080/026999498377818
   Tjosvold D, 2004, GROUP ORGAN MANAGE, V29, P540, DOI 10.1177/1059601103254911
   Van der Vegt GS, 2003, J MANAGE, V29, P729, DOI 10.1016/S0149-2063(03)00033-3
   Wageman R, 1997, J ORGAN BEHAV, V18, P139, DOI 10.1002/(SICI)1099-1379(199703)18:2<139::AID-JOB791>3.0.CO;2-R
   Wang ETG, 2008, J SYST SOFTWARE, V81, P1609, DOI 10.1016/j.jss.2007.11.722
   Webber S., 2002, Journal of Management Development, V21, P201, DOI [10.1108/02621710210420273, DOI 10.1108/02621710210420273]
   Wong A, 2005, J APPL PSYCHOL, V90, P782, DOI 10.1037/0021-9010.90.4.782
   Zhao XD, 2006, J OPER MANAG, V24, P621, DOI 10.1016/j.jom.2005.07.003
NR 67
TC 7
Z9 9
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2019
VL 157
AR 110392
DI 10.1016/j.jss.2019.110392
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JA8YP
UT WOS:000488137500006
DA 2024-07-18
ER

PT J
AU Sneed, H
   Verhoef, C
AF Sneed, Harry
   Verhoef, Chris
TI Re-implementing a legacy system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software migration; Reverse engineering; Software re-implementation;
   Code refactoring; Code rewriting; Data renaming
ID SOFTWARE
AB Re-implementation is one of the alternatives to migrate a legacy software system next to conversion, wrapping and redevelopment. It is a compromise solution between automated conversion and complete redevelopment. The technical architecture can be revised and the code replaced, but the functional architecture - the use cases remains as it was. The challenge of this approach is to preserve the functionality while changing the technical implementation. This approach is taken when conversion is not feasible and redevelopment is too expensive or too great a risk. It entails more than a 1:1 transformation but less than a total rewrite. The same components remain with different contents. In this paper the case for reimple-mentation is presented and the process described. The tools required to support the process are identified and their use illustrated. Finally, two industrial case studies are presented, one with a VisualAge/PL/I-DB2 system and one with a COBOL-IMS application. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Sneed, Harry] Tech Univ Dresden, Dresden, Germany.
   [Verhoef, Chris] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 Technische Universitat Dresden; Vrije Universiteit Amsterdam
RP Sneed, H (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM harry.sneed@t-online.de; x@cs.vu.nl
OI Sneed, Harry/0000-0003-4869-0269
CR Adolph S., 1996, IEEE SOFTW, V41
   Andriole SJ, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1125944.1125946
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   Beck K., 2003, TEST DRIVEN DEV, P121
   Bianchi A, 2003, IEEE T SOFTWARE ENG, V29, P225, DOI 10.1109/TSE.2003.1183932
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   Booch G., 2004, OBJECT ORIENTED ANAL, P29
   Brodie M., 1995, MIGRATING LEGACY SYS
   Buckley J., 2009, IEEE COMPUT, V106
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   deBalbine G., 2019, AFIPS NATL COMPUTER, V44, P319
   DEMILLO RA, 1979, COMMUN ACM, V22, P271, DOI 10.1145/359104.359106
   Eierman MA, 2007, J SOFTW MAINT EVOL-R, V19, P33, DOI 10.1002/smr.343
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Fairley R., 2005, IEEE COMPUT MAG, V34
   Feijs L, 1998, COMMUN ACM, V41, P72, DOI 10.1145/290133.290151
   Flyvbjerg B, 2011, HARVARD BUS REV, V89, P23, DOI 10.2139/ssrn.2229735
   Henrard J, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P211, DOI 10.1109/WCRE.2002.1173079
   Humble J., 2011, CONTINUOUS DELIVERY, P28
   Jonas J., 2003, P 10 C PATT LANG PRO
   KlBsch R., 1995, OBJECT ORIENTED REVE, P91
   Klusener AS, 2005, SCI COMPUT PROGRAM, V54, P143, DOI 10.1016/j.scico.2004.03.012
   KOZACZYNSKI W, 1992, IEEE T SOFTWARE ENG, V18, P1065, DOI 10.1109/32.184761
   Lano K., 1989, Z US WORKSH, P151
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Liskov B., 1986, ABSTRACTION SPECIFIC, P21
   Nassi I., 1973, SIGPLAN NOTICES
   Onoma AK, 1998, COMMUN ACM, V41, P81, DOI 10.1145/274946.274960
   Prywes N., 1996, IEEE SOFTW, V109
   Rhagozar M., 2003, J SOFTW MAINTEN EVOL, V15, P325
   ROBSON DJ, 1991, J SYST SOFTWARE, V14, P79, DOI 10.1016/0164-1212(91)90092-K
   Sellink A, 1999, PROG COMPREHEN, P38, DOI 10.1109/WPC.1999.777742
   Silver B., 2011, BPMN METHOD STYLE IM
   Sneed H., 1984, IEEE SOFTW MAG, V56
   Sneed H., 2010, P ICSM2010 SEPT, P192
   Sneed H. M., 1994, Software Testing, Verification and Reliability, V4, P33, DOI 10.1002/stvr.4370040105
   Sneed H. M., 2015, IEEE INT C SOFTW MAI
   Sneed H. M., 1999, OBJEKTORIENTIERTE SO
   Sneed H. M., 2000, ANN SOFTW ENG, V9, P113
   Sneed HM, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P3, DOI 10.1109/WSE.2004.10011
   Sneed HM, 1995, J SOFTW MAINT-RES PR, V7, P405, DOI 10.1002/smr.4360070604
   Sneed R. H., 1993, IEEE P 1 WSRE BALT
   Strassman P., 1998, IT CUTTER J, V11, P3
   Stroustrup B., 2008, PROGRAMMING PRINCIPL, P999
   TEICHROEW D, 1977, IEEE T SOFTWARE ENG, V3, P41, DOI 10.1109/TSE.1977.229902
   Terekhov A., 2000, IEEE SOFTW, V111
   van Zuylen HJ., 1993, REDO COMPENDIUM REVE, P225
   Veerman N, 2006, SOFTWARE PRACT EXPER, V36, P1605, DOI 10.1002/spe.745
   WARD MP, 1995, J SOFTW MAINT-RES PR, V7, P203, DOI 10.1002/smr.4360070305
   Warmer J., 2003, OBJECT CONSTRAINT LA, P15
   WATERS RC, 1988, IEEE T SOFTWARE ENG, V14, P1207, DOI 10.1109/32.7629
   Weinburg G., 1971, PSYCHOL COMPUTER PTO, P141
   Xie T, 2005, IEEE T SOFTWARE ENG, V31, P869, DOI 10.1109/TSE.2005.107
   [No title captured]
NR 55
TC 11
Z9 14
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2019
VL 155
BP 162
EP 184
DI 10.1016/j.jss.2019.05.012
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE9IN
UT WOS:000472688200010
OA Green Published
DA 2024-07-18
ER

PT J
AU Rocha, T
   Borba, P
   Santos, JP
AF Rocha, Thais
   Borba, Paulo
   Santos, Joao Pedro
TI Using acceptance tests to predict files changed by programming tasks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Collaborative development; Task scheduling; Behaviour-driven
   development; File change prediction
ID SOFTWARE; CODE
AB In a collaborative development context, conflicting code changes might compromise software quality and developers productivity. To reduce conflicts, one could avoid the parallel execution of potentially conflicting tasks. Although hopeful, this strategy is challenging because it relies on the prediction of the required file changes to complete a task. As predicting such file changes is hard, we investigate its feasibility for BDD (Behaviour-Driven Development) projects, which write automated acceptance tests before implementing features. We develop a tool that, for a given task, statically analyzes Cucumber tests and infers test-based interfaces (files that could be executed by the tests), approximating files that would be changed by the task. To assess the accuracy of this approximation, we measure precision and recall of test-based interfaces of 513 tasks from 18 Rails projects on GitHub. We also compare such interfaces with randomly defined interfaces, interfaces obtained by textual similarity of test specifications with past tasks, and interfaces computed by executing tests. Our results give evidence that, in the specific context of BDD, Cucumber tests might help to predict files changed by tasks. We find that the better the test coverage, the better the predictive power. A hybrid approach for computing test-based interfaces is promising. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Rocha, Thais; Borba, Paulo; Santos, Joao Pedro] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Rocha, T (corresponding author), Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
EM tabr@cin.ufpe.br; phmb@cin.ufpe.br; jpms2@cin.ufpe.br
RI Borba, Paulo/C-5617-2013; Rocha, Thais/KIL-6816-2024
OI Borba, Paulo/0000-0002-0381-2843; 
FU INES (National Software Engineering Institute); CNPq [309741/2013-0];
   FACEPE [IBPG-0546-1.03/15, APQ/0388-1.03/14]; CAPES
FX For partially supporting this work, we would like to thank INES
   (National Software Engineering Institute) and the Brazilian research
   funding agencies CNPq (grant 309741/2013-0), FACEPE (grants
   IBPG-0546-1.03/15 and APQ/0388-1.03/14), and CAPES.
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Almeida JC, 2018, LECT NOTES COMPUT SC, V10856, P26, DOI 10.1007/978-3-319-96151-4_3
   [Anonymous], 1964, Some rapid approximate statistical procedures
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Bailey M, 2012, P 50 ANN SE REGIONAL, P106, DOI [10.1145/2184512.2184538, DOI 10.1145/2184512.2184538]
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Binamungu LP, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P6, DOI 10.1109/VST.2018.8327149
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CHAVES R, 2017, QUANTUM-AUSTRIA, V1, DOI DOI 10.22331/Q-2017-08-04-23
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Denninger O., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P78, DOI 10.1109/RSSE.2012.6233416
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Fowler M., 2016, TECHNICAL REPORT
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Griffiths A, 2007, TRADING PLACES - SMES IN THE GLOBAL ECONOMY: A CRITICAL RESEARCH HANDBOOK, P11
   Grinter R. E., 1996, COMPUT SUPPORTED COO
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Henderson F., 2017, CORR
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hodgson P., 2017, TECHNICAL REPORT
   Hodgson P, 2017, Feature toggles (aka Feature Flags)
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Shen XN, 2016, IEEE T SOFTWARE ENG, V42, P658, DOI 10.1109/TSE.2015.2512266
   Smart J.F., 2014, BDD ACTION BEHAV DRI
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Wynne M., 2012, PRAGMATIC BOOKSHELF
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 46
TC 10
Z9 11
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2019
VL 154
BP 176
EP 195
DI 10.1016/j.jss.2019.04.060
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC4NT
UT WOS:000470943300012
DA 2024-07-18
ER

PT J
AU Xu, Z
   Li, S
   Luo, XP
   Liu, J
   Zhang, T
   Tang, YT
   Xu, J
   Yuan, PP
   Keung, J
AF Xu, Zhou
   Li, Shuai
   Luo, Xiapu
   Liu, Jin
   Zhang, Tao
   Tang, Yutian
   Xu, Jun
   Yuan, Peipei
   Keung, Jacky
TI TSTSS: A two-stage training subset selection framework for cross version
   defect prediction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cross version defect prediction; Spare modeling; Training subset
   selection; Weighted extreme learning machine
ID EXTREME LEARNING-MACHINE; MODELS; CODE
AB Cross Version Defect Prediction (CVDP) is a practical scenario by training the classification model on the historical data of the prior version and then predicting the defect labels of modules in the current version. Unfortunately, the differences of data distribution across versions may hinder the effectiveness of the trained CVDP model. Thus, it is not trivial to select a suitable training subset from the prior version to promote the CVDP performance. In this paper, we propose a novel method, called Two-Stage Training Subset Selection (TSTSS), to address this challenging issue. In the first stage, TSTSS utilizes a sparse modeling representative selection method to select an initial module subset from the prior version which can well reconstruct the data of the prior version. In the second stage, TSTSS leverages a dissimilarity-based sparse subset selection method to further refine the selected module subset, which enables the selected modules to well represent the modules of the current version. Finally, we use a novel weighted extreme learning machine classifier to construct the CVDP model. We evaluate the CVDP performance of TSTSS on 50 cross-version pairs using 6 indicators. The experiments show that TSTSS can efficiently improve the CVDP performance compared with 11 baseline methods. (C) 2019 Published by Elsevier Inc.
C1 [Xu, Zhou; Liu, Jin] Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.
   [Xu, Zhou; Li, Shuai; Luo, Xiapu; Tang, Yutian] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Liu, Jin] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
   [Liu, Jin] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
   [Zhang, Tao] Harbin Engn Univ, Coll Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
   [Xu, Jun] Incept Inst Artificial Intelligence, Abu Dhabi, U Arab Emirates.
   [Yuan, Peipei] Huazhong Univ Sci & Technol, Sch Elect Informat & Commun, Wuhan, Hubei, Peoples R China.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Xu, Zhou] Huazhong Agr Univ, Coll Informat, Wuhan, Hubei, Peoples R China.
C3 Wuhan University; Hong Kong Polytechnic University; Chinese Academy of
   Sciences; Institute of Information Engineering, CAS; Guilin University
   of Electronic Technology; Harbin Engineering University; Huazhong
   University of Science & Technology; City University of Hong Kong;
   Huazhong Agricultural University
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.; Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.; Liu, J (corresponding author), Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.; Liu, J (corresponding author), Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
EM csxluo@comp.polyu.edu.hk; jinliu@whu.edu.cn
RI Keung, Jacky/ABA-7089-2020; Zhang, Tao/E-5634-2012; Tang,
   Yutian/L-8327-2019
OI Zhang, Tao/0000-0002-6272-4069; Tang, Yutian/0000-0001-5677-4564; Keung,
   Jacky/0000-0002-3803-9600
FU National Key RAMP;D Program of China [2018YFC1604000]; National Natural
   Science Foundation of China [61572374, U163620068, U1135005, U1636220,
   61572371, 61772525, 61472423, 61602258]; Open Fund of Key Laboratory of
   Network Assessment Technology from CAS; Guangxi Key Laboratory of
   Trusted Software [kx201607]; Academic Team Building Plan for Young
   Scholars from Wuhan University [WHU2016012]; National Science Foundation
   [DGE-1522883]; Hong Kong GRC Project [PolyU 152223/17E, PolyU
   152239/18E, CityU C1008-16G]; China Postdoctoral Science Foundation
   [2017M621247]
FX The authors would like to acknowledge the support provided by National
   Key R&D Program of China (2018YFC1604000), the grands of the National
   Natural Science Foundation of China (61572374, U163620068, U1135005,
   U1636220, 61572371, 61772525, 61472423, 61602258), the Open Fund of Key
   Laboratory of Network Assessment Technology from CAS, Guangxi Key
   Laboratory of Trusted Software (kx201607), the Academic Team Building
   Plan for Young Scholars from Wuhan University (WHU2016012), the National
   Science Foundation (DGE-1522883), Hong Kong GRC Project (PolyU
   152223/17E, PolyU 152239/18E, CityU C1008-16G), and the China
   Postdoctoral Science Foundation (2017M621247).
CR Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bin Y, 2017, INT SYMP EMP SOFTWAR, P354, DOI 10.1109/ESEM.2017.49
   Bouckaert R. R., 2009, WEKA MANUAL VERSION, P1
   Boyd Stephen, 2010, Foundations and Trends in Machine Learning, V3, P1, DOI 10.1561/2200000016
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Elhamifar Ehsan, 2009, 2009 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), P2790, DOI 10.1109/CVPRW.2009.5206547
   Elhamifar E, 2016, IEEE T PATTERN ANAL, V38, P2182, DOI 10.1109/TPAMI.2015.2511748
   Elhamifar E, 2012, PROC CVPR IEEE, P1600, DOI 10.1109/CVPR.2012.6247852
   Fletcher Roger., 1980, PRACTICAL METHODS OP
   Gabay D., 1976, Computers & Mathematics with Applications, V2, P17, DOI 10.1016/0898-1221(76)90003-1
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold Steffen, 2017, IEEE Transactions on Software Engineering
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Huang GB, 2004, IEEE IJCNN, P985
   Huang GB, 2006, NEUROCOMPUTING, V70, P489, DOI 10.1016/j.neucom.2005.12.126
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huang SJ, 2014, IEEE T PATTERN ANAL, V36, P1936, DOI 10.1109/TPAMI.2014.2307881
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawata K, 2016, STUD COMPUT INTELL, V619, P1, DOI 10.1007/978-3-319-26396-0_1
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li X, 2013, PROC CVPR IEEE, P859, DOI 10.1109/CVPR.2013.116
   Li YT, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2018), P122, DOI 10.1145/3180374.3181331
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Moha N., 2007, ACM SIGPLAN C OBJ OR, P949
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   PRASAD KM, 1992, LINEAR ALGEBRA APPL, V165, P59
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Shukla S, 2018, SOFT COMPUT, V22, P1959, DOI 10.1007/s00500-016-2456-8
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tantithamthavorn C., 2018, T SOFTWARE ENG TSE
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Wang YT, 2016, RES SPORTS MED, V24, P157, DOI 10.1080/15438627.2016.1191487
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z., 2018, P 26 INT C PROGR COM
   Xu Z., 2018, P 25 INT C SOFTW AN
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yu X, 2017, P 29 INT C SOFTW ENG, P392, DOI DOI 10.18293/SEKE2017-043
   Zar J.H, 2010, Biostatistical Analysis
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zong WW, 2013, NEUROCOMPUTING, V101, P229, DOI 10.1016/j.neucom.2012.08.010
NR 75
TC 24
Z9 27
U1 2
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2019
VL 154
BP 59
EP 78
DI 10.1016/j.jss.2019.03.027
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC4NT
UT WOS:000470943300004
OA Bronze
DA 2024-07-18
ER

PT J
AU Pascarella, L
   Palomba, F
   Bacchelli, A
AF Pascarella, Luca
   Palomba, Fabio
   Bacchelli, Alberto
TI Fine-grained just-in-time defect prediction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Just-in-time defect prediction; Empirical Software Engineering; Mining
   software repositories
ID CODE CHURN; SOFTWARE; IMPACT; QUALITY; METRICS; VALIDATION; FAULTS
AB Defect prediction models focus on identifying defect-prone code elements, for example to allow practitioners to allocate testing resources on specific subsystems and to provide assistance during code reviews. While the research community has been highly active in proposing metrics and methods to predict defects on long-term periods (i.e.,at release time), a recent trend is represented by the so-called short-term defect prediction (i.e.,at commit-level). Indeed, this strategy represents an effective alternative in terms of effort required to inspect files likely affected by defects. Nevertheless, the granularity considered by such models might be still too coarse. Indeed, existing commit-level models highlight an entire commit as defective even in cases where only specific files actually contain defects.
   In this paper, we first investigate to what extent commits are partially defective; then, we propose a novel fine-grained just-in-time defect prediction model to predict the specific files, contained in a commit, that are defective. Finally, we evaluate our model in terms of (i) performance and (ii) the extent to which it decreases the effort required to diagnose a defect. Our study highlights that: (1) defective commits are frequently composed of a mixture of defective and non-defective files, (2) our fine-grained model can accurately predict defective files with an AUC-ROC up to 82% and (3) our model would allow practitioners to save inspection efforts with respect to standard just-in-time techniques. (C) 2018 Published by Elsevier Inc.
C1 [Pascarella, Luca] Delft Univ Technol, Delft, Netherlands.
   [Palomba, Fabio; Bacchelli, Alberto] Univ Zurich, Zurich, Switzerland.
C3 Delft University of Technology; University of Zurich
RP Palomba, F (corresponding author), Univ Zurich, Zurich, Switzerland.
EM l.pascarella@tudelft.nl; palomba@ifi.uzh.ch; bacchelli@ifi.uzh.ch
RI Pascarella, Luca/HKO-7228-2023; Pascarella, Luca/AFM-2533-2022;
   Bacchelli, Alberto/ABG-5379-2020
OI Pascarella, Luca/0000-0001-8289-7736; Pascarella,
   Luca/0000-0001-8289-7736; Bacchelli, Alberto/0000-0003-0193-6823;
   Palomba, Fabio/0000-0001-9337-5116
CR [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], IEEE SPECTR
   [Anonymous], 2006, SOFTWARE ENG UPDATE
   [Anonymous], 2018, P INT C SOFTW MAINT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], P 2008 INT WORK C MI
   [Anonymous], P 32 INT C SOFTW MAI
   [Anonymous], 2007, ENCY MEASUREMENT STA, DOI DOI 10.4135/9781412952644
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Barnett JG, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P496, DOI [10.1109/MSR.2016.063, 10.1145/2901739.2903496]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Devijver P. A., 1982, PATTERN RECOGNITION, V265
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-21606-5
   Grabmeier J. L., 2007, International Journal of Business Intelligence and Data Mining, V2, P213, DOI 10.1504/IJBIDM.2007.013938
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Madeyski L, 2017, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR.2017.46
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba Fabio, 2017, IEEE T SOFTWARE ENG
   Panichella A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1077, DOI 10.1145/2908812.2908938
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Robnik-Sikonja M, 2004, LECT NOTES COMPUT SC, V3201, P359
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Van DerMalsburg C, 1986, BRAIN THEORY, P245, DOI DOI 10.1007/978-3-642-70911-1_20
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
NR 85
TC 85
Z9 92
U1 0
U2 23
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2019
VL 150
BP 22
EP 36
DI 10.1016/j.jss.2018.12.001
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3HF
UT WOS:000459363700003
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Czibula, IG
   Czibula, G
   Miholca, DL
   Onet-Marian, Z
AF Czibula, Istvan Gergely
   Czibula, Gabriela
   Miholca, Diana-Lucia
   Onet-Marian, Zsuzsanna
TI An aggregated coupling measure for the analysis of object-oriented
   software systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Coupling measure; Structural coupling; Conceptual coupling; Unsupervised
   learning
ID SELF-ORGANIZING MAPS; DEPENDENCIES; METRICS
AB Coupling is a fundamental property of software systems which is strongly connected with the quality of software design and has high impact on program understanding. The coupling between software components influences software maintenance and evolution as well. In order to ease the maintenance and evolution processes it is essential to estimate the impact of changes made in the software system, coupling indicating such a possible impact. This paper introduces a new aggregated coupling measurement which captures both the structural and the conceptual characteristics of coupling between the software components. The proposed measure combines the textual information contained in the source code with the structural relationships between software components. We conduct several experiments which underline that the proposed aggregated coupling measure reveals new characteristics of coupling and is also effective for change impact analysis. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Czibula, Istvan Gergely; Czibula, Gabriela; Miholca, Diana-Lucia; Onet-Marian, Zsuzsanna] Babes Bolyai Univ, Dept Comp Sci, 1 M Kogalniceanu St, Cluj Napoca 400084, Romania.
C3 Babes Bolyai University from Cluj
RP Czibula, G (corresponding author), Babes Bolyai Univ, Dept Comp Sci, 1 M Kogalniceanu St, Cluj Napoca 400084, Romania.
EM istvanc@cs.ubbcluj.ro; gabis@cs.ubbcluj.ro; diana@cs.ubbcluj.ro;
   marianzsu@cs.ubbcluj.ro
RI Onet-Marian, Zsuzsanna/I-9382-2019; Miholca, Diana-Lucia/ABB-1867-2020;
   Czibula, Gabriela/C-3332-2012
OI Onet-Marian, Zsuzsanna/0000-0001-9006-0389; Miholca,
   Diana-Lucia/0000-0002-3832-7848; 
CR Ajienka N, 2017, J SYST SOFTWARE, V134, P120, DOI 10.1016/j.jss.2017.08.042
   [Anonymous], P FESMA 99 AMST NETH
   [Anonymous], 2014, P INT C INT C MACH L
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   de Leon DC, 2006, IEEE T SOFTWARE ENG, V32, P790, DOI 10.1109/TSE.2006.103
   Crivei LM, 2018, STUD U BABES BOLYAI, V63, P102, DOI DOI 10.24193/subbi.2018.2.07
   Czibula IG, 2006, INT J COMPUT SCI NET, V6, P40
   Czibula IG, 2016, STUD INFORM CONTROL, V25, P207
   Elfelly N, 2008, INT J COMPUT COMMUN, V3, P149, DOI 10.15837/ijccc.2008.2.2383
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kaski S., 1996, Neural Networks in Financial Engineering. Proceedings of the Third International Conference on Neural Networks in the Capital Markets, P498
   Kirbas S., 2014, P 8 ACM IEEE INT S E
   LEE Y, 1995, P INT C SOFTW QUAL M
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   Mitchell A, 2006, SCI COMPUT PROGRAM, V59, P4, DOI 10.1016/j.scico.2005.07.002
   Moldovan G.S., 2006, Proceedings of towards evaluation of aspect mining(team), ecoop, P13
   Mount NJ, 2011, PATTERN ANAL APPL, V14, P139, DOI 10.1007/s10044-011-0210-5
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Somervuo P, 1999, NEURAL PROCESS LETT, V10, P151, DOI 10.1023/A:1018741720065
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tuffry S., 2011, Data Mining and Statistics for Decision Making, V1st
   Vanciu R., 2010, Proceedings of IEEE International Conference on Software Maintenance, P1
   White L, 2008, J SOFTW MAINT EVOL-R, V20, P419, DOI 10.1002/smr.371
   Yang HY, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/ASWEC.2007.28
   Yang HY, 2005, 2005 Australian Software Engineering Conference, Proceedings, P212
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 48
TC 7
Z9 8
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2019
VL 148
BP 1
EP 20
DI 10.1016/j.jss.2018.10.052
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HG4TC
UT WOS:000454966900001
DA 2024-07-18
ER

PT J
AU Batra, D
AF Batra, Dinesh
TI Agile values or plan-driven aspects: Which factor contributes more
   toward the success of data warehousing, business intelligence, and
   analytics project development?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Agile values; Plan-driven; Top management commitment; Shared
   understanding; Business intelligence; Analytics
ID SOFTWARE-DEVELOPMENT; UNOBSERVED HETEROGENEITY; SYSTEMS-DEVELOPMENT;
   DECISION-MAKING; COMMON BELIEFS; PLS; CHALLENGES; COMMUNICATION;
   MANAGEMENT; SEM
AB Practically all organizations are developing data warehousing, business intelligence, and analytics (DW/BIA) projects for achieving customer value. A DW/BIA development project may be characterized by both agile and plan-driven aspects. The reported study investigated two research questions: (1) Which factor, agile values or plan-driven aspects, contributes more toward the success of DW/BIA? (2) What are the significant antecedents of agile values and plan-driven aspects? 124 respondents engaged in DW/BIA development filled a 30-item questionnaire on seven constructs. The partial least squares structural equation modeling (PLS-SEM) method was used to determine the strength of the relationships among the following factors: technological capability, shared understanding, top management commitment, and complexity as antecedents; agile values and plan-driven aspects as mediating; and project success as the dependent construct. Based on a prediction-oriented segmentation (PLS-POS) analysis, the findings indicate that there are two groups, agile-plan balanced and agile-heavy, which represent different approaches to DW/BIA development. Top management commitment and shared understanding emerge as strong antecedents to agile values and plan-driven aspects. Overall, the factor agile values contributes more toward the success of DW/BIA development. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Batra, Dinesh] Florida Int Univ, Coll Business Adm, Informat Syst & Business Analyt, Miami, FL 33199 USA.
C3 State University System of Florida; Florida International University
RP Batra, D (corresponding author), Florida Int Univ, Coll Business Adm, Informat Syst & Business Analyt, Miami, FL 33199 USA.
EM batra@fiu.edu
RI Harrison, Dylan/AFP-8142-2022
OI Batra, Dinesh/0000-0003-1598-3305
CR Abbasi A, 2016, J ASSOC INF SYST, V17, pI
   Ambler S.W., 2009, The Agile scaling model (ASM): Adapting Agile methods for complex environments
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2008, Marketing ZFP
   Ariyachandra T, 2010, DECIS SUPPORT SYST, V49, P200, DOI 10.1016/j.dss.2010.02.006
   Avison D. E., 2003, Communications of the ACM, V46, P79, DOI 10.1145/602421.602423
   Batra D, 2017, J DATABASE MANAGE, V28, P1, DOI 10.4018/JDM.2017100101
   Batra D, 2016, J DATABASE MANAGE, V27, P1, DOI 10.4018/JDM.2016010101
   Batra D, 2011, J DATABASE MANAGE, V22, P73, DOI 10.4018/jdm.2011100104
   Becker, 2015, SMARTPLS 3
   Becker JM, 2013, MIS QUART, V37, P665, DOI 10.25300/MISQ/2013/37.3.01
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Boehm S. W., 2004, BALANCING AGILITY DI
   Cassel C, 1999, J APPL STAT, V26, P435, DOI 10.1080/02664769922322
   Chen HC, 2012, MIS QUART, V36, P1165
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Collier K., 2012, AGILE ANAL VALUE DRI
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Coughlan J, 2003, INFORM SOFTWARE TECH, V45, P525, DOI [10.1016/S0950-5849(03)00032-6, 10.1016/SO950-5849(03)00032-6]
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Davenport T. H., 2007, Competing on analytics: The new science of winning
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Diamantopoulos A.Siguaw., 2000, INTRO LISREL
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fowler M., 2001, Software Development, V9, P28
   Gefen D, 2000, Communications of the Association for Information Systems, V4, P7, DOI [10.1016/j.emj.2021.07.010, DOI 10.1016/J.EMJ.2021.07.010, DOI 10.17705/1CAIS.00407]
   Hair JF, 2012, J ACAD MARKET SCI, V40, P414, DOI 10.1007/s11747-011-0261-6
   Hair JF, 2011, J MARKET THEORY PRAC, V19, P139, DOI 10.2753/MTP1069-6679190202
   Heck P., 2016, SOFTW QUAL J, P1
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Henseler J, 2014, ORGAN RES METHODS, V17, P182, DOI 10.1177/1094428114526928
   Hsu SH, 2006, TOTAL QUAL MANAG BUS, V17, P355, DOI 10.1080/14783360500451465
   Hughes R., 2012, Agile Data Warehousing Project Management: Business Intelligence Systems Using Scrum
   Hughes R., 2008, Agile data warehousing
   Huisman M., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P134
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   Humphrey W S, 1995, A discipline for software engineering
   Hwang BG, 2013, INT J PROJ MANAG, V31, P272, DOI 10.1016/j.ijproman.2012.05.004
   Karhatsu H., 2010, 2 INT C SOFTW TECHN
   Ketchen DJ, 2013, LONG RANGE PLANN, V46, P184, DOI 10.1016/j.lrp.2013.01.002
   Knaster R., 2017, SAFe 4.0 Distilled: Applying the Scaled Agile Framework for Lean Software and Systems Engineering
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Lowry PB, 2014, IEEE T PROF COMMUN, V57, P123, DOI 10.1109/TPC.2014.2312452
   Mao JY, 2008, INFORM MANAGE-AMSTER, V45, P482, DOI 10.1016/j.im.2008.07.003
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   McLeod L, 2012, PROJ MANAG J, V43, P68, DOI 10.1002/pmj.21290
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Mishra D, 2012, INFORM SOFTWARE TECH, V54, P1067, DOI 10.1016/j.infsof.2012.04.002
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Munns A. K., 1996, International Journal of Project Management, V14, P81, DOI [10.1016/0263-7863(95)00057-7, DOI 10.1016/0263-7863(95)00057-7]
   Murphy B., 2013, 2013 ACM IEEE INT S
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Papke-Shields KE, 2010, INT J PROJ MANAG, V28, P650, DOI 10.1016/j.ijproman.2009.11.002
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Richter NF, 2016, EUR MANAG J, V34, P589, DOI 10.1016/j.emj.2016.08.001
   Ronkko M., 2012, ECIS 2012 C
   Rönkkö M, 2013, ORGAN RES METHODS, V16, P425, DOI 10.1177/1094428112474693
   Rose K. H., 2013, GUIDE PROJECT MANAGE
   Ryan S, 2013, INFORM SOFTWARE TECH, V55, P1614, DOI 10.1016/j.infsof.2013.02.013
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sarstedt M., 2011, Schmalenbach Business Review, V63, P34, DOI DOI 10.1007/BF03396886
   Sarstedt M, 2016, J BUS RES, V69, P3998, DOI 10.1016/j.jbusres.2016.06.007
   Sarstedt M, 2010, J APPL STAT, V37, P1299, DOI 10.1080/02664760903030213
   Schwaber K., 2007, The enterprise and Scrum
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Senapathi M, 2012, J SYST SOFTWARE, V85, P1255, DOI 10.1016/j.jss.2012.02.025
   Sharda R., 2016, BUSINESS INTELLIGENC
   Siau K, 2010, J DATABASE MANAGE, V21, P80, DOI 10.4018/jdm.2010112304
   Siegel E., 2016, Predictive Analytics: The Power to Predict Who Will Click, Buy, Lie, or Die
   Tan T., 2009, 3 INT S EMP SOFTW EN
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1, DOI DOI 10.3998/3336451.0011.104
   Vinzi V.E., 2010, Handbook of partial least squares, P47, DOI [10.1007/978-3-540-32827-8, DOI 10.1007/978-3-540-32827-8, 10.1007/978-3-540-32827-8_3]
   Vlietland J, 2015, INFORM SOFTWARE TECH, V57, P52, DOI 10.1016/j.infsof.2014.08.008
   Voorhees CM, 2016, J ACAD MARKET SCI, V44, P119, DOI 10.1007/s11747-015-0455-4
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Xia WD, 2005, J MANAGE INFORM SYST, V22, P45, DOI 10.1080/07421222.2003.11045831
NR 87
TC 8
Z9 12
U1 4
U2 45
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2018
VL 146
BP 249
EP 262
DI 10.1016/j.jss.2018.09.081
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HC0LE
UT WOS:000451488900017
DA 2024-07-18
ER

PT J
AU Xu, CY
   Sun, XB
   Li, B
   Lu, XT
   Guo, HJ
AF Xu, Congying
   Sun, Xiaobing
   Li, Bin
   Lu, Xintong
   Guo, Hongjing
TI MULAPI: Improving API method recommendation with API usage location
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE API method recommendation; API usage location; Feature request; Feature
   location
ID INFORMATION
AB During the evolution of a software system, a large number of feature requests are continuously proposed by users. To implement these feature requests, developers often utilize existing third-party libraries and make use of Application Programming Interfaces (APIs) to accelerate the feature implementation process. However, it is not always obvious which API methods are suitable and where these API methods can be used in the target program.
   In this paper, we propose an approach, MULAPI (Method Usage and Location for API), to recommend API methods and figure out the API usage location where these API methods would be used. MULAPI employs feature location to identify feature related files as API usage location. Further, these feature related files are taken into account to recommend API methods by exploring the source code repository and API libraries as well. We evaluate MULAPI on more than 1000 feature requests of eight Java projects (Axis/Java, CXF, Hadoop Common, Hbase, Struts2, Hadoop HDFS, Hive and Hadoop Map/Reduce), and recommend API methods from ten third party libraries. The empirical results show that MULAPI can accurately recommend API methods and usage location, and moreover, MULAPI improves the effectiveness of API method recommendation, compared with the state-of-the-art approach.
C1 [Xu, Congying; Sun, Xiaobing; Li, Bin; Lu, Xintong; Guo, Hongjing] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Sun, Xiaobing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Yangzhou University; Nanjing University
RP Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
EM xbsun@yzu.edu.cn
RI Sun, Xiaobing/L-7423-2019
OI Sun, Xiaobing/0000-0001-5165-5080
FU Natural Science Foundation of China [61472344, 61611540347, 61402396];
   Open Funds of State Key Laboratory for Novel Software Technology of
   Nanjing University [KFKT2016B21]; Jiangsu Qin Lan Project; China
   Postdoctoral Science Foundation [2015M571489]; Natural Science
   Foundation of Yangzhou City [YZ2017113]
FX This work is supported partially by Natural Science Foundation of China
   under Grant No. 61472344, No. 61611540347 and No. 61402396, partially by
   the Open Funds of State Key Laboratory for Novel Software Technology of
   Nanjing University under Grant no. KFKT2016B21, partially by the Jiangsu
   Qin Lan Project, partially by the China Postdoctoral Science Foundation
   under Grant No. 2015M571489, and partially by the Natural Science
   Foundation of Yangzhou City under Grant No. YZ2017113.
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2014, P 22 INT C PROGR COM
   [Anonymous], 2017, FEATURE SQUEEZING DE
   Asaduzzaman M, 2015, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSM.2015.7332473
   CASELLA G, 1992, AM STAT, V46, P167, DOI 10.2307/2685208
   CHAN WK, 2012, P ACM SIGSOFT 20 INT, P1
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Long F, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P203, DOI 10.1145/1595696.1595727
   Lv C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P596, DOI 10.1145/2591062.2591133
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rajaraman Anand., 2011, Mining of Massive Datasets, DOI DOI 10.1017/CBO9781139058452
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Santos AL, 2017, J SYST SOFTWARE, V131, P461, DOI 10.1016/j.jss.2016.06.063
   Schutze Hinrich, 2008, P INT COMM ASS COMP, P260
   Shi W, 2015, 2015 THIRD INTERNATIONAL CONFERENCE ON ADVANCED CLOUD AND BIG DATA, P296, DOI 10.1109/CBD.2015.55
   Sun C., 2011, MORE ACCURATE RETRIE, P253, DOI [10.1109/ICCV.2017.411, DOI 10.1109/ICCV.2017.411]
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun XB, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9419-x
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P32, DOI 10.1145/2627508.2627514
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Sun X, 2016, EVID-BASED COMPL ALT, V2016, DOI 10.1155/2016/3281968
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang Xiaoyin, 2009, P 30 INT C SOFTW ENG, P461, DOI DOI 10.1145/1368088.1368151
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xu WY, 2017, PROC IEEE INT CONF S, P648, DOI 10.1109/ICSME.2017.20
   Yu HB, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P45, DOI 10.1145/2993717.2993727
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
NR 44
TC 32
Z9 37
U1 0
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2018
VL 142
BP 195
EP 205
DI 10.1016/j.jss.2018.04.060
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL3LS
UT WOS:000437037200011
DA 2024-07-18
ER

PT J
AU Zhong, H
   Mei, H
AF Zhong, Hao
   Mei, Hong
TI Mining repair model for exception-related bug
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Repair models; Exception-related bugs; Benchmark
AB It has long been a hot research topic to detect and to repair bugs automatically. As a common practice, researchers propose approaches for specific bugs, and their approaches typically are limited in handling the variety among bugs. Recently, researchers start to explore automatic program repair. With predefined repair operators and test cases, test-based repair approaches use search algorithms to generate patches for a bug, until a patch passes all the test cases. To improve the effectiveness to generate patches, Martinez and Monperrus (2013b) proposed an approach that mines repair models from past fixes. Although their approach produces positive results, we argue that it can be feasible to further improve their approach, if we mine repair models for bug categories, instead of all bugs. However, the benefits are still unclear, since existing benchmarks do not classify bugs into categories and existing approaches cannot mine repair models for bug categories. In this paper, we implement a tool, called ExFI, that classifies bugs into categories based on their related exceptions. With its support, we construct a benchmark, in which bug categories are marked. Furthermore, we propose an approach, called MIMo, that mines a repair model for each exception. We compared the general repair model with our mined repair models. Our results show that our mined models are all significantly different from the general model. Outside of the projects where our models are mined, we selected 59 real bugs. For each bug, we used our models and the general model to generate correct repair shapes for these bugs. The results show that for 43 out of 59 bugs, our models found faster a correct shape than the general repair model (Martinez and Monperrus, 2013b), and for 5 bugs, our models were able to find correct shapes that were not found by the compared model. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Zhong, Hao; Mei, Hong] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
C3 Shanghai Jiao Tong University
RP Zhong, H (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM zhonghao@sjtu.edu.cn
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
FU National Basic Research Program of China (973 Program) [2015CB352203];
   National Nature Science Foundation of China [61572313]; grant of Science
   and Technology Commission of Shanghai Municipality [15DZ1100305]
FX We appreciate the anonymous reviewers for their constructive comments.
   This work is sponsored by the National Basic Research Program of China
   (973 Program) no. 2015CB352203, the National Nature Science Foundation
   of China no. 61572313, and the grant of Science and Technology
   Commission of Shanghai Municipality no. 15DZ1100305.
CR [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 1992, APPL MULTIVARIATE ST
   [Anonymous], 2016, EMPIR SOFTW ENG
   [Anonymous], TECHNICAL REPORT
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bacchelli A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P476, DOI 10.1109/ASE.2011.6100103
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Campos E. C., 2017, P OF ESEM
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cornu B, 2015, INFORM SOFTWARE TECH, V57, P66, DOI 10.1016/j.infsof.2014.08.004
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Demsky B, 2003, ACM SIGPLAN NOTICES, V38, P78, DOI 10.1145/949343.949314
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Ding R, 2012, IEEE INT CONF AUTOM, P318, DOI 10.1145/2351676.2351735
   Elkarablieh Bassem., 2007, ASE 07 P 22 IEEEACM, P64
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Eyolfson J, 2014, EMPIR SOFTW ENG, V19, P1009, DOI 10.1007/s10664-013-9245-0
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   Hassan F., 2018, P OF ICSE
   Hassan F., 2017, P OF ESEM
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Huang G, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4926-2
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jooyong Yi, 2018, Empirical Software Engineering, V23, P2948, DOI 10.1007/s10664-017-9552-y
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Lin ZY, 2015, IEEE INT CONF AUTOM, P178, DOI 10.1109/ASE.2015.87
   Liu X., 2018, P OF ICSE
   Liu X., 2018, P OF SANER
   Long F., 2015, P ESEC FSE
   Long F., 2016, P OF ICSE
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Mechtaev S., 2016, P OF ICSE
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Milkowski M, 2010, SOFTWARE PRACT EXPER, V40, P543, DOI 10.1002/spe.971
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   MUDHOLKAR GS, 1995, COMMUN STAT-THEOR M, V24, P953, DOI 10.1080/03610929508831533
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Novark G, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1250734.1250736
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Prabhu P, 2011, LECT NOTES COMPUT SC, V6813, P583, DOI 10.1007/978-3-642-22655-7_27
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Ray B., 2016, P OF ICSE
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shi H, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4920-8
   Sidiroglou S, 2005, LECT NOTES COMPUT SC, V3650, P1
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tan S. H., 2015, P OF ICSE, P913
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tufano M., 2017, J SOFTW, V29
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Wei Y., 2010, P 19 INT S SOFTW TES, P61, DOI DOI 10.1145/1831708.1831716
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yang DH, 2017, PROC IEEE INT CONF S, P504, DOI 10.1109/ICSME.2017.37
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhong H., 2018, EMPIR SOFTW ENG
   Zhong H., 2018, IEEE T SOFTW ENG
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 96
TC 8
Z9 13
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2018
VL 141
BP 16
EP 31
DI 10.1016/j.jss.2018.03.046
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG7MC
UT WOS:000432881400002
DA 2024-07-18
ER

PT J
AU Brogi, A
   Canciani, A
   Soldani, J
AF Brogi, Antonio
   Canciani, Andrea
   Soldani, Jacopo
TI Fault-aware management protocols for multi-component applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
AB Nowadays, applications are composed by multiple heterogeneous components, whose management must be suitably coordinated by taking into account inter-component dependencies and potential failures. In this paper, we first present fault-aware management protocols, which allow to model the management behaviour of application components, and we then illustrate how such protocols can be composed to analyse and automate the overall management of a multi-component application. We also show how to recover applications that got stuck because a fault was not handled properly, or because a component is behaving differently than expected. To illustrate the feasibility of our approach, we present BARREL, a proof-of-concept application that permits editing and analysing fault-aware management protocols in multi-component applications. We also discuss the usefulness of BARREL by showing how it was fruitfully exploited it in a concrete case study and in a controlled experiment. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Brogi, Antonio; Canciani, Andrea; Soldani, Jacopo] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 University of Pisa
RP Soldani, J (corresponding author), Univ Pisa, Dept Comp Sci, Pisa, Italy.
EM soldani@di.unipi.it
RI Soldani, Jacopo/O-5057-2019; Brogi, Antonio/HLQ-2040-2023
OI Soldani, Jacopo/0000-0002-2435-3543; Brogi, Antonio/0000-0003-2048-2468
CR Alhosban A, 2015, ACM T INTERNET TECHN, V15, DOI 10.1145/2739045
   Andrikopoulos V, 2014, LECT NOTES COMPUT SC, V8745, P148, DOI 10.1007/978-3-662-44879-3_11
   [Anonymous], 2014, P 6 CENTR EUR WORKSH
   [Anonymous], 1998, How complex systems fail (Revision D)
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Binz T., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P742, DOI 10.1109/CLOUD.2012.143
   Binz T., 2014, Advanced Web Services, P527
   Binz T, 2013, LECT NOTES COMPUT SC, V8274, P692, DOI 10.1007/978-3-642-45005-1_62
   Boyer F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P13, DOI 10.1109/ICSE.2013.6606547
   Brogi A, 2016, LECT NOTES COMPUT SC, V9846, P219, DOI 10.1007/978-3-319-44482-6_14
   Brogi A, 2015, LECT NOTES COMPUT SC, V9306, P19, DOI 10.1007/978-3-319-24072-5_2
   Brogi A, 2014, LECT NOTES COMPUT SC, V8745, P171, DOI 10.1007/978-3-662-44879-3_13
   Butler M., 2006, LECT NOTES COMPUTER, V4157, DOI [10.1007/11916246, DOI 10.1007/11916246]
   Can AB, 2007, AUTOMAT SOFTW ENG, V14, P129, DOI 10.1007/s10515-007-0008-2
   Candea E, 2004, COMPUTER, V37, P60
   Chen LK, 2015, IEEE PHOTONICS J, V7, DOI 10.1109/JPHOT.2015.2418264
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Lemos R., 2002, Proceedings Workshop on Self-healing Systems, P39, DOI DOI 10.1145/582128.582136
   Di Cosmo R, 2014, INFORM COMPUT, V239, P100, DOI 10.1016/j.ic.2014.11.002
   Durán F, 2016, J SYST SOFTWARE, V122, P524, DOI 10.1016/j.jss.2015.09.020
   Etchevers X, 2017, SOFTWARE PRACT EXPER, V47, P3, DOI 10.1002/spe.2400
   Fischer J, 2012, ACM SIGPLAN NOTICES, V47, P263, DOI 10.1145/2345156.2254096
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Friedrich G, 2010, IEEE T SOFTWARE ENG, V36, P198, DOI 10.1109/TSE.2010.8
   Gray J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P3
   Grunske L, 2005, LECT NOTES COMPUT SC, V3489, P33
   Hajisheykhi R, 2015, LECT NOTES COMPUT SC, V9058, P429, DOI 10.1007/978-3-319-17524-9_32
   Johnsen EB, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P223, DOI 10.1109/APAQS.2001.990023
   Kaiser Bernhard., 2003, Safety Critical Systems and Software 2003, Eigth Australian Workshop on Safety-Related Programmable Systems, V33, P37
   Kopp O, 2013, LECT NOTES COMPUT SC, V8274, P700, DOI 10.1007/978-3-642-45005-1_64
   Leymann F, 2011, IT-INF TECHNOL, V53, P163, DOI 10.1524/itit.2011.9070
   Liggesmeyer P, 1998, DIG PAP INT SYMP FAU, P90, DOI 10.1109/FTCS.1998.689458
   Nagatou N., 2014, AS PAC BUS PROC MAN, V181, P117, DOI DOI 10.1007/978-3-319-08222-6_9
   OASIS, 2013, Topology and Orchestration Specification for Cloud Applications Version 1.0 OASIS Standard
   Qiang W, 2015, LECT NOTES COMPUT SC, V9409, P277, DOI 10.1007/978-3-319-25942-0_18
NR 35
TC 19
Z9 19
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2018
VL 139
BP 189
EP 210
DI 10.1016/j.jss.2018.02.005
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA7CU
UT WOS:000428493000011
DA 2024-07-18
ER

PT J
AU Faragardi, HR
   Lisper, B
   Sandström, K
   Nolte, T
AF Faragardi, Hamid Reza
   Lisper, Bjorn
   Sandstrom, Kristian
   Nolte, Thomas
TI A resource efficient framework to run automotive embedded software on
   multi-core ECUs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID PERIODIC TASKS; TIME
AB The increasing functionality and complexity of automotive applications requires not only the use of more powerful hardware, e.g., multi-core processors, but also efficient methods and tools to support design decisions. Component-based software engineering proved to be a promising solution for managing software complexity and allowing for reuse. However, there are several challenges inherent in the intersection of resource efficiency and predictability of multi-core processors when it comes to running component-based embedded software. In this paper, we present a software design framework addressing these challenges. The framework includes both mapping of software components onto executable tasks, and the partitioning of the generated task set onto the cores of a multi-core processor. This paper aims at enhancing resource efficiency by optimizing the software design with respect to: 1) the inter-software components communication cost, 2) the cost of synchronization among dependent transactions of software components, and 3) the interaction of software components with the basic software services. An engine management system, one of the most complex automotive sub-systems, is considered as a use case, and the experimental results show a reduction of up to 11.2% total CPU usage on a quad-core processor, in comparison with the common framework in the literature. (c) 2018 Elsevier Inc. All rights reserved.
C1 [Faragardi, Hamid Reza; Lisper, Bjorn; Nolte, Thomas] Malardalen Univ, MRTC, POB 883, SE-72123 Vasteras, Sweden.
   [Sandstrom, Kristian] RISE SICS, SE-72178 Vasteras, Sweden.
C3 Malardalen University; RISE Research Institutes of Sweden
RP Faragardi, HR (corresponding author), Malardalen Univ, MRTC, POB 883, SE-72123 Vasteras, Sweden.
EM hamid.faragardi@mdh.se; bjorn.lisper@mdh.se; kristian.sandstrom@ri.se;
   thomas.nolte@mdh.se
RI Faragardi, Hamid Reza/AAL-4056-2020
OI Faragardi, Hamid Reza/0000-0002-1384-5323; Nolte,
   Thomas/0000-0001-6132-7945
FU Malardalen University; Vinnova via the FFI initiative "AUTOSAR for
   Multicore in Automotive and Automation Industries"
FX The work presented in this paper has been supported by Malardalen
   University and Vinnova via the FFI initiative "AUTOSAR for Multicore in
   Automotive and Automation Industries".
CR [Anonymous], AUTOSAR METH
   [Anonymous], WORKSH COMP REAL TIM
   [Anonymous], METAHEURISTICS DESIG
   [Anonymous], SCOPES 12
   [Anonymous], 2010, INT FORUM STRATEGIC
   AUTOSAR Consortium, 2009, AUTOSAR REL 4 0 SPEC
   Bambagini M, 2013, 2013 4TH ANNUAL INTERNATIONAL CONFERENCE ON ENERGY AWARE COMPUTING SYSTEMS AND APPLICATIONS (ICEAC), P69, DOI 10.1109/ICEAC.2013.6737640
   Bertout A., 2014, P 29 ANN ACM S APPL, P1431, DOI [10.1145/2554850.2554958, DOI 10.1145/2554850.2554958]
   Bertout A., 2014, 22 INT C REAL TIME N, P23
   Bohm N., 2010, P WORK IN PROGR SESS, P1
   Briceño LD, 2013, J PARALLEL DISTR COM, V73, P1705, DOI 10.1016/j.jpdc.2013.08.007
   Bril RJ, 2004, J SCHEDULING, V7, P133, DOI 10.1023/B:JOSH.0000014069.63823.e7
   Chang JM, 2000, IEEE T COMPUT AID D, V19, P732, DOI 10.1109/43.851989
   Colin A., 2014, Embedded and Real-Time Computing Systems and Applications (RTCSA), 2014 IEEE 20th International Conference on, P1
   Davare A, 2007, DES AUT CON, P278, DOI 10.1109/DAC.2007.375172
   DHALL SK, 1978, OPER RES, V26, P127, DOI 10.1287/opre.26.1.127
   Dziurzanski P., 2016, ARXIV160103708
   Faragardi H.R., 2013, 2013 IEEE 18th Conference on Emerging Technologies Factory Automation (ETFA), P1, DOI [DOI 10.1109/ETFA.2013.6648168.CITED, 10.1109/ETFA.2013.6648168. Cited]
   Faragardi H. R, 2014, INT WORKSH DES SPAC, P11
   Faragardi HR, 2013, 2013 IEEE/ACIS 12TH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS), P513, DOI 10.1109/ICIS.2013.6607891
   Feiertag N., 2008, WORKSH COMP THEOR TE, P1
   Feljan J., 2013, 8 INT C SOFTW ENG AD, P402
   Ferrari A, 2009, DES AUT TEST EUROPE, P864
   Gai P, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P73, DOI 10.1109/REAL.2001.990598
   Guo CH, 2016, IEEE T PARALL DISTR, V27, P1303, DOI 10.1109/TPDS.2015.2437379
   Han J, 2012, MOR KAUF D, P1
   Kehr S., 2015, ANN DES AUT C, P42
   Kehr S, 2016, DES AUT TEST EUROPE, P25
   Klobedanz K, 2010, DES AUT TEST EUROPE, P642
   Kramer S., 2015, INT WORKSH AN TOOLS, P16
   Lakshmanan K.S, 2011, TECHNICAL REPORT
   Langston TS, 2017, IDEOLOGUES AND PRESIDENTS, P1
   LEUNG JYT, 1982, PERFORM EVALUATION, V2, P237, DOI 10.1016/0166-5316(82)90024-4
   Lisper B., 2014, P IEEE EM TECHN FACT, P1
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Monot A, 2012, IEEE T IND ELECTRON, V59, P3934, DOI 10.1109/TIE.2012.2185913
   Nemati F, 2011, EUROMICRO, P251, DOI 10.1109/ECRTS.2011.31
   OH YF, 1995, REAL-TIME SYST, V9, P207, DOI 10.1007/BF01088806
   Panic M., 2014, International Conference on Hardware/Software Codesign and System Synthesis, page, P29
   Paolieri M, 2009, CONF PROC INT SYMP C, P57, DOI 10.1145/1555815.1555764
   Peng DT, 1997, IEEE T SOFTWARE ENG, V23, P745, DOI 10.1109/32.637388
   Ran Z, 2017, INT J AUTO TECH-KOR, V18, P1109, DOI 10.1007/s12239-017-0108-3
   Redell O, 2002, EUROMICRO, P165, DOI 10.1109/EMRTS.2002.1019196
   Rivas JM, 2011, EUROMICRO, P195, DOI 10.1109/ECRTS.2011.26
   Saha S, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P984, DOI 10.1109/ICACCCT.2014.7019241
   Saifullah A, 2013, REAL-TIME SYST, V49, P404, DOI 10.1007/s11241-012-9166-9
   Schliecker S, 2009, IEEE T COMPUT AID D, V28, P979, DOI 10.1109/TCAD.2009.2013286
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
   TINDELL KW, 1992, REAL-TIME SYST, V4, P145, DOI 10.1007/BF00365407
   Wozniak E., 2013, 2013 IEEE 18 C EM TE, P1
   Yang Y., 2012, THESIS
   Yomsi Patrick Meumeu, 2008, THESIS
   Zhu Q, 2012, ACM T EMBED COMPUT S, V11, DOI 10.1145/2362336.2362352
NR 54
TC 5
Z9 5
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2018
VL 139
BP 64
EP 83
DI 10.1016/j.jss.2018.01.040
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA7CU
UT WOS:000428493000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lourenço, JR
   Cabral, B
   Bernardino, J
AF Lourenco, Joao Ricardo
   Cabral, Bruno
   Bernardino, Jorge
TI PreX: A predictive model to prevent exceptions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Exception handling; Proactive; Failure prediction; Self-healing;
   Preventive; Predictive
ID COMPUTING SYSTEMS
AB The exception handling mechanism has been one of the most used reliability tools in programming languages in the last decades. However, this model has not changed much with time, in spite of advances in programming languages, which include concurrent programming and a shift towards more reactive paradigms, the basic principle remains the same - an exception occurs, and the mechanism reacts. We propose a new paradigm, inspired by Online Failure Prediction (OFP), to predict exceptions and possibly avert them by triggering the execution of preventive actions. The proposed model - PreX - is, thus, proactive, operating in a much finer-grained level than any other form of online failure prediction. OFP has shown promising results in predicting failures at a higher level, but has never been available to the developer, being mainly a system level technique. Thus, PreX will offer developers a new range of revitalization strategies. In this work, we describe the model and evaluate its performance by applying it to a real e-commerce solution, demonstrating how it is capable of predicting and preventing exceptions at run-time. Furthermore, we also show that PreX increases the overall availability and performance of the system under the same conditions. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Lourenco, Joao Ricardo; Cabral, Bruno; Bernardino, Jorge] Univ Coimbra, FCTUC, Ctr Informat & Syst, P-3030290 Coimbra, Portugal.
   [Bernardino, Jorge] Coimbra Polytech Inst Coimbra, Super Inst Engn, P-3030190 Coimbra, Portugal.
C3 Universidade de Coimbra
RP Lourenço, JR (corresponding author), Univ Coimbra, FCTUC, Ctr Informat & Syst, P-3030290 Coimbra, Portugal.
EM joaoml@student.dei.uc.pt; bcabral@dei.uc.pt; jorge@isec.pt
RI Bernardino, Jorge/K-6437-2014
OI Bernardino, Jorge/0000-0001-9660-2011; Cabral, Bruno/0000-0001-9699-1133
CR Andrzejak A, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P159, DOI 10.1109/INM.2007.374780
   [Anonymous], 2016, WEKA PROJECT
   [Anonymous], 5 IEEE S REL DISTR S
   Apache jmeter, 2016, APACHE JMETER
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bodík P, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P89
   Cabral B., 2009, THESIS
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Chang H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522923
   Chen X, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P341, DOI 10.1109/ISSREW.2014.105
   CSENKI A, 1990, IEEE T RELIAB, V39, P177, DOI 10.1109/24.55879
   Dietterich T. G., 2002, Structural, Syntactic, and Statistical Pattern Recognition. Joint IAPR International Workshops SSPR 2002 and SPR 2002 (Lecture Notes in Computer Science Vol. 2396), P15
   Domeniconi C., 2002, Principles of Data Mining and Knowledge Discovery. 6th European Conference, PKDD 2002. Proceedings (Lecture Notes in Artificial Intelligence Vol.2431), P125
   Garg S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P283, DOI 10.1109/ISSRE.1998.730892
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Hamerly G, 2001, P 18 INT C MACH LEAR, P202, DOI DOI 10.5555/645530.655825
   Harrold M.J., 2008, Proceedings of the 4th International Workshop on Exception Handling, P62, DOI DOI 10.1145/1454268.1454277
   Hoffmann G.A., 2006, Failure Prediction in Complex Computer Systems: A Probabilistic Approach
   Hoffmann G.A., 2004, Advanced Failure Prediction in Complex Software Systems
   Hoffmann GA, 2007, IEEE T RELIAB, V56, P615, DOI 10.1109/TR.2007.909764
   Hughes GF, 2002, IEEE T RELIAB, V51, P350, DOI 10.1109/TR.2002.802886
   Irrera I., 2010, Proceedings 2010 IEEE 16th Pacific Rim International Symposium on Dependable Computing (PRDC 2010), P3, DOI 10.1109/PRDC.2010.51
   Irrera I, 2015, IEEE HI ASS SYS ENGR, P142, DOI 10.1109/HASE.2015.29
   Irrera I, 2013, LAT-AM SYMP DEP COMP, P86, DOI 10.1109/LADC.2013.25
   Kim K, 2011, EXPERT SYST APPL, V38, P394, DOI 10.1016/j.eswa.2010.06.078
   Li L, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P91, DOI 10.1109/ISESE.2002.1166929
   Liang YL, 2006, I C DEPEND SYS NETWO, P425
   Lourenço JR, 2016, ADV INTELL SYST, V444, P767, DOI 10.1007/978-3-319-31232-3_72
   Magalhaes JP, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2700325
   Murray J. F., 2003, P ICANN ICONIP CIT
   Psaier H., 2011, BEHAV MONITORING SEL
   Ramirez AJ, 2011, CLUSTER COMPUT, V14, P229, DOI 10.1007/s10586-010-0122-y
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Schneider C., 2014, SURVEY SELF HEALING
   Turnbull D., 2003, TECHNICAL REPORT
   Vaidyanathan K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P84, DOI 10.1109/ISSRE.1999.809313
   Vilalta R, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P474, DOI 10.1109/ICDM.2002.1183991
   Ward A., 1998, Performance Evaluation Review, V26, P38, DOI 10.1145/306225.306237
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   YEMINI S, 1985, ACM T PROGR LANG SYS, V7, P214, DOI 10.1145/3318.3320
NR 40
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2018
VL 137
BP 652
EP 668
DI 10.1016/j.jss.2017.07.026
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8HN
UT WOS:000425572400041
DA 2024-07-18
ER

PT J
AU Vanhanen, J
   Lehtinen, TOA
   Lassenius, C
AF Vanhanen, Jari
   Lehtinen, Timo O. A.
   Lassenius, Casper
TI Software engineering problems and their relationship to perceived
   learning and customer satisfaction on a software capstone project
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Capstone project; Education; Learning; Customer satisfaction; Problems;
   Software engineering
AB In educational projects, having students encounter problems is desirable, if it increases learning. However, in capstone projects with industrial customers, negative effects problems can have on customer satisfaction must be considered. We conducted a survey in a capstone project course in order to study problems, learning and customer satisfaction related to eleven software engineering topics. On the average, students working in the managerial roles learned quite a lot about each topic, and the developers learned moderately, but the degree of learning varied a lot among the teams, and among the team members. The most extensively encountered problems were related to testing, task management, effort estimation and technology skills. The developers contributed quite a lot to solving problems with technology skills, but only moderately or less with other topics, whereas the managers contributed quite a lot with most of the topics. Contributing to solving problems increased learning moderately for most of the topics. The increases were highest with maintaining motivation and technology skills. Encountering problems with task management, customer expectations and customer communication affected customer satisfaction very negatively. When considering both learning and customer satisfaction, the best topics to encounter problems in were effort estimation, testing, and technology skills. (C) 2017 The Authors. Published by Elsevier Inc.
C1 [Vanhanen, Jari; Lassenius, Casper] Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Aalto, Finland.
   [Lehtinen, Timo O. A.] Acad Finland, POB 131, FI-00531 Helsinki, Finland.
C3 Aalto University; Research Council of Finland
RP Vanhanen, J (corresponding author), Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Aalto, Finland.
EM jari.vanhanen@aalto.fi; casper.lassenius@aalto.fi
RI Lassenius, Casper C/A-4339-2013
CR ACM/IEEE CS Joint Task Force on Computing Cutricula, 2015, SOFTW ENG 2014 CURR
   Ahtee T, 2009, CONF SOFTW ENG EDUC, P154, DOI 10.1109/CSEET.2009.31
   Broman D, 2012, IEEE T EDUC, V55, P445, DOI 10.1109/TE.2012.2187208
   Bruegge B, 2015, ACM T COMPUT EDUC, V15, DOI 10.1145/2732155
   Clark N., 2005, 7 AUSTR C COMP ED, P21
   Dawson R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P209, DOI 10.1109/ICSE.2000.870412
   Dugan RF, 2011, COMPUT SCI EDUC, V21, P201, DOI 10.1080/08993408.2011.606118
   Fincher S., 2001, Computer Science ProjectWork: Principles and Pragmatics
   Foddy W., 1993, CONSTRUCTING QUESTIO
   Goold A., 2003, SIGCSE Bulletin, V35, P26, DOI 10.1145/961290.961522
   IBM Corp. Released, 2015, IBM SPSS Statistics for Windows, Version 23.0
   Koolmanojwong S, 2013, CONF SOFTW ENG EDUC, P21, DOI 10.1109/CSEET.2013.6595233
   Mahnic V, 2012, IEEE T EDUC, V55, P99, DOI 10.1109/TE.2011.2142311
   POURNAGHSHBAND H, 1990, SIGCSE BULL, V22, P44, DOI 10.1145/319059.319079
   Pyster A., 2009, GRADUATE SOFTWARE EN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stehle S, 2012, RES HIGH EDUC, V53, P888, DOI 10.1007/s11162-012-9260-9
   Todd R., 1995, Journal of Engineering Education, V85, P165, DOI DOI 10.1002/J.2168-9830.1995.TB00163.X
   Vanhanen J, 2014, INT J ENG EDUC, V30, P1461
   Zell E, 2014, PERSPECT PSYCHOL SCI, V9, P111, DOI 10.1177/1745691613518075
NR 20
TC 11
Z9 12
U1 2
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2018
VL 137
BP 50
EP 66
DI 10.1016/j.jss.2017.11.021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8HN
UT WOS:000425572400004
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, FL
   Khoo, SC
   Su, XH
AF Zhang, Fanlong
   Khoo, Siau-cheng
   Su, Xiaohong
TI Predicting change consistency in a clone group
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software reuse; Clone maintenance; Code clones; Consistency-requirement
   prediction; Bayesian network; Clone attributes
ID CODE
AB Code cloning has been accepted as one of the general code reuse methods in software development, thanks to the increasing demand in rapid software production. The introduction of clone groups and clone genealogies enable software developers to be aware of the presence of and changes to clones as a collective group; they also allow developers to understand how clone groups evolve throughout software life cycle. Due to similarity in codes within a clone group, a change in one piece of the code may require developers to make consistent change to other clones in the group. Failure in making such consistent change to a clone group when necessary is commonly known as "clone consistency-defect", which can adversely impact software reusability.
   In this work, we propose an approach to predict the need for making consistent change in clones within a clone group at the time when changes have been made to one of its clones. We build a variant of clone genealogies to collect all consistent/inconsistent changes to clone groups, and extract three attribute sets from clone groups as input for predicting the need for consistent clone change. These three attribute sets are code attributes, context attributes and evolution attributes respectively. Together, they provide a holistic view about clone changes. We conduct experiments on four open source projects. Our experiments show that our approach has reasonable precision and recall in predicting whether a clone group requires (or is free of) consistent change. This holistic approach can aid developers in maintaining clone changes, and avoid potential consistency-defect, which can improve software quality and reusability. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Zhang, Fanlong; Su, Xiaohong] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
   [Khoo, Siau-cheng] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 Harbin Institute of Technology; National University of Singapore
RP Su, XH (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
EM hitzhangfanlong@gmail.com; khoosc@nus.edu.sg; sxh@hit.edu.cn
FU 13th Five-Year National Science and Technology Major Project of China
   [2017YFC0702204]; National Natural Science Foundation of China
   [61672191, 61173021]
FX We would like to thank the anonymous reviewers for their valuable and
   thorough comments. This work is supported by the 13th Five-Year National
   Science and Technology Major Project of China (Grant no. 2017YFC0702204)
   and the National Natural Science Foundation of China (Grant no. 61672191
   and 61173021).
CR [Anonymous], 2007, QUEENS SCH COMPUT T
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Bakota Tibor, 2007, 2007 IEEE International Conference on Software Maintenance, P24, DOI 10.1109/ICSM.2007.4362615
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Ci M, 2013, INT CONF INSTR MEAS, P848, DOI 10.1109/IMCCC.2013.189
   Duala-Ekoko E, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767754
   Duala-Ekoko E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P843, DOI 10.1145/1368088.1368218
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Harder Jan, 2013, Journal of Software: Evolution and Process, V25, P1063, DOI 10.1002/smr.1551
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R., 2007, P DUPLICATION REDUND
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Krishnan GP, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P104, DOI 10.1109/CSMR-WCRE.2014.6747160
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Pearl J., 1985, BAYESIAN NETWORKS MO
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Tairas R.A., 2010, THESIS
   Wang J., 2017, J OF SOFTWARE ENG, P266
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   Zhang FL, 2016, PROC INT SYMP SOFTW, P353, DOI 10.1109/ISSRE.2016.11
NR 38
TC 12
Z9 14
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2017
VL 134
BP 105
EP 119
DI 10.1016/j.jss.2017.08.045
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FN3OR
UT WOS:000415909200007
DA 2024-07-18
ER

PT J
AU Szoke, G
   Antal, G
   Nagy, C
   Ferenc, R
   Gyimóthy, T
AF Szoke, Gabor
   Antal, Gabor
   Nagy, Csaba
   Ferenc, Rudolf
   Gyimothy, Tibor
TI Empirical study on refactoring large-scale industrial systems and its
   effects on maintainability
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Refactoring; Software quality; Maintainability; Coding issues;
   Antipatterns; ISO/IEC 25010
ID CODE SMELLS; MAINTENANCE PROBLEMS
AB Software evolves continuously, it gets modified, enhanced, and new requirements always arise. If we do not spend time occasionally on improving our source code, its maintainability will inevitably decrease. The literature tells us that we can improve the maintainability of a software system by regularly refactoring it. But does refactoring really increase software maintainability? Can it happen that refactoring decreases the maintainability? Empirical studies show contradicting answers to these questions and there have been only a few studies which were performed in a large-scale, industrial context. In our paper, we assess these questions in an in vivo context, where we analyzed the source code and measured the maintainability of 6 large-scale, proprietary software systems in their manual refactoring phase. We analyzed 2.5 million lines of code and studied the effects on maintainability of 315 refactoring commits which fixed 1273 coding issues. We found that single refactorings only make a very little difference (sometimes even decrease maintainability), but a whole refactoring period, in general, can significantly increase maintainability, which can result not only in the local, but also in the global improvement of the code. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Szoke, Gabor; Antal, Gabor; Nagy, Csaba; Ferenc, Rudolf; Gyimothy, Tibor] Univ Szeged, Dept Software Engn, Szeged, Hungary.
C3 Szeged University
RP Ferenc, R (corresponding author), Univ Szeged, Dept Software Engn, Szeged, Hungary.
EM gabor.szoke@inf.u-szeged.hu; antal@inf.u-szeged.hu;
   ncsaba@inf.u-szeged.hu; ferenc@inf.u-szeged.hu; gyimi@inf.u-szeged.hu
RI Nagy, Csaba/B-7109-2014; Antal, Gabor/ABB-5374-2021; Gyimothy,
   Tibor/M-3705-2018; Ferenc, Rudolf/A-1317-2008
OI Gyimothy, Tibor/0000-0002-2123-7387; Ferenc, Rudolf/0000-0001-8897-7403;
   Antal, Gabor/0000-0002-3002-8624
FU Hungarian national grant [GOP-1.2.1-11-2011-0002]; EU FP7 project REPARA
   [609666]
FX This research work was partially supported by the Hungarian national
   grant GOP-1.2.1-11-2011-0002 and the EU FP7 project REPARA (project
   number: 609666). Here, we would also like to thank all the participants
   of this project for their help and cooperation.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 2005, 250002005 ISOIEC
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Bakota T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P316, DOI 10.1109/ICSM.2012.6405288
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Demeyer S, 2005, PROC IEEE INT CONF S, P627
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Du Bois B., 2006, THESIS
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Geppert B., 2005, IEEE METRICS, P13
   Gorg Carsten., 2005, MSR 05, P1, DOI DOI 10.1145/1083142.1083148
   Guimaraes E, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P82, DOI 10.1109/MiSE.2013.6595301
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Meananeatra P, 2012, IEEE INT CONF AUTOM, P406, DOI 10.1145/2351676.2351760
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Opdyke W.F., 1992, REFACTORING OBJECT O
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Pinto G. H., 2013, What programmers say about refactoring tools? An empirical investigation of stack overflow, P33
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Ratzinger J., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083155
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Szoke G., 2014, P COMP SCI ITS APPL
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tahvildari L, 2003, J SYST SOFTWARE, V66, P225, DOI 10.1016/S0164-1212(02)00082-1
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Wake W.C., 2003, Refactoring Workbook, V1st
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yu YQ, 2003, SMCIA/03: PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL WORKSHOP ON SOFT COMPUTING IN INDUSTRIAL APPLICATIONS, P7
NR 53
TC 20
Z9 21
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2017
VL 129
BP 107
EP 126
DI 10.1016/j.jss.2016.08.071
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX2AU
UT WOS:000403028700007
DA 2024-07-18
ER

PT J
AU Morales, R
   Soh, Z
   Khomh, F
   Antoniol, G
   Chicano, F
AF Morales, Rodrigo
   Soh, Zephyrin
   Khomh, Foutse
   Antoniol, Giuliano
   Chicano, Francisco
TI On the use of developers' context for automatic refactoring of software
   anti-patterns
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT IEEE/ACM 37th IEEE International Conference on Software Engineering
   (ICSE)
CY MAY 16-24, 2015
CL Florence, ITALY
SP IEEE Comp Soc, ACM
DE Software maintenance; Automatic refactoring; Task context; Interaction
   traces; Anti-patterns; Metaheuristics
ID VARIABLE NEIGHBORHOOD SEARCH; GENETIC ALGORITHM; DEFECTS DETECTION;
   CODE-SMELLS; DESIGN; OPTIMIZATION; EVOLUTION; IMPACT
AB Anti-patterns are poor solutions to design problems that make software systems hard to understand and extend. Entities involved in anti-patterns are reported to be consistently related to high change and fault rates. Refactorings, which are behavior preserving changes are often performed to remove anti-patterns from software systems. Developers are advised to interleave refactoring activities with their regular coding tasks to remove anti-patterns, and consequently improve software design quality. However, because the number of anti-patterns in a software system can be very large, and their interactions can require a solution in a set of conflicting objectives, the process of manual refactoring can be overwhelming. To automate this process, previous works have modeled anti-patterns refactoring as a batch process where a program provides a solution for the total number of classes in a system, and the developer has to examine a long list of refactorings, which is not feasible in most situations. Moreover, these proposed solutions often require that developers modify classes on which they never worked before (i.e., classes on which they have little or no knowledge). To improve on these limitations, this paper proposes an automated refactoring approach, ReCon (Refactoring approach based on task Context), that leverages information about a developer's task (i.e., the list of code entities relevant to the developer's task) and metaheuristics techniques to compute the best sequence of refactorings that affects only entities in the developer's context. We mine 1705 task contexts (collected using the Eclipse plug-in Mylyn) and 1013 code snapshots from three open-source software projects (Mylyn, PDE, Eclipse Platform) to assess the performance of our proposed approach. Results show that ReCon can remove more than 50% of anti-patterns in a software system, using fewer resources than the traditional approaches from the literature. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Morales, Rodrigo; Soh, Zephyrin; Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Antoniol, Giuliano] Polytech Montreal, Soccer Lab, Montreal, PQ, Canada.
   [Chicano, Francisco] Univ Malaga, Dept Lenguajes & Ciencias Comp, Malaga, Spain.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; Universidad de Malaga
RP Morales, R (corresponding author), Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
EM rodrigomorales2@acm.org; zephyrin.soh@polymtl.ca;
   foutse.khomh@polymtl.ca; giuliano.antoniol@polymtl.ca;
   chicano@lcc.uma.es
RI Alvarado, Rodrigo Morales/AAR-2780-2021; Chicano, Francisco/I-5650-2015
OI Alvarado, Rodrigo Morales/0000-0002-1350-0560; Chicano,
   Francisco/0000-0003-1259-2990
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Amoui M, 2006, INT J INFORM TECHNOL, V1, P235
   [Anonymous], 1982, COMBINATORIAL OPTIMI
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cohen J., 1988, STAT POWER ANAL BEHA
   CONNOLLY DT, 1990, EUR J OPER RES, V46, P93, DOI 10.1016/0377-2217(90)90301-Q
   Coplien JamesO., 2005, Organizational Patterns of Agile Software Development, V1st
   Crainic TG, 2004, J HEURISTICS, V10, P293, DOI 10.1023/B:HEUR.0000026897.40171.1a
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Hansen P, 2006, COMPUT OPER RES, V33, P3034, DOI 10.1016/j.cor.2005.02.033
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hemmelmayr VC, 2009, EUR J OPER RES, V195, P791, DOI 10.1016/j.ejor.2007.08.048
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   Izurieta C., 2009, THESIS
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   KIRKPATRICK S, 1984, J STAT PHYS, V34, P975, DOI 10.1007/BF01009452
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Layman Lucas M., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering. CHASE '08, P73
   Lee S, 2015, IEEE T SOFTWARE ENG, V41, P314, DOI 10.1109/TSE.2014.2362138
   Lehman MM, 1996, INFORM SOFTWARE TECH, V38, P681, DOI 10.1016/0950-5849(96)01121-4
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McConnell Steve., 2004, Code Complete, V2nd ed
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mladenovic N, 1997, COMPUT OPER RES, V24, P1097, DOI 10.1016/S0305-0548(97)00031-2
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Riel ArthurJ., 1996, OBJECT ORIENTED DESI, V335
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Romano D., 2014, TECHNICAL REPORT
   Sanchez H, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P251, DOI 10.1109/SANER.2015.7081835
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Soetens QD, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P313, DOI 10.1109/QUATIC.2010.58
   Soh Z, 2013, WORK CONF REVERSE EN, P152, DOI 10.1109/WCRE.2013.6671290
   Soh Z, 2013, WORK CONF REVERSE EN, P391, DOI 10.1109/WCRE.2013.6671314
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2009.30
   VANLAARHOVEN PJM, 1992, OPER RES, V40, P113, DOI 10.1287/opre.40.1.113
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Yin R. K., 2017, CASE STUDY RES DESIG
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
NR 81
TC 24
Z9 26
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2017
VL 128
BP 236
EP 251
DI 10.1016/j.jss.2016.05.042
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EV3QU
UT WOS:000401675000014
DA 2024-07-18
ER

PT J
AU Mayvan, BB
   Rasoolzadegan, A
   Yazdi, ZG
AF Mayvan, B. Bafandeh
   Rasoolzadegan, A.
   Yazdi, Z. Ghavidel
TI The state of the art on design patterns: A systematic mapping of the
   literature
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Design patterns; Systematic mapping study; Systematic review
ID LANGUAGE; SELECTION
AB Design patterns are widely used by software developers to build complex systems. Hence, they have been investigated by many researchers in recent decades. This leads to the emergence of various topics in the design patterns field. The objective of this paper is to present an overview of the research efforts on design patterns for those researchers who seek to enter this area. The main contributions are as follows: (a) identifying research topics in design patterns, (b) quantifying the research emphasis on each topic, and (c) describing the demographics of design patterns research. The last secondary study with similar goals in the design patterns field considers the Gang of Four design patterns only. However, the scope of the current study is all of the design patterns. Moreover, our review covers about six additional years and a larger number of publications and venues. In this systematic mapping study, a total of 2775 papers were identified as relevant, and 637 of them were included. According to the results, design patterns can be classified into six different research topics. As a consequence, it is concluded that Pattern Development, Pattern Mining, and Pattern Usage are the most active topics in the field of design patterns. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Mayvan, B. Bafandeh; Rasoolzadegan, A.] Ferdowsi Univ Mashhad, Fac Engn, Mashhad, Iran.
   [Yazdi, Z. Ghavidel] Ferdowsi Univ Mashhad, Leaniing Ctr, Mashhad, Iran.
C3 Ferdowsi University Mashhad; Ferdowsi University Mashhad
RP Rasoolzadegan, A (corresponding author), Ferdowsi Univ Mashhad, Fac Engn, Mashhad, Iran.
EM rasoolzadegan@um.ac.ir
RI Rasoolzadegan, Abbas/A-1729-2017
OI Rasoolzadegan, Abbas/0000-0001-8668-5650
CR Aljasser K, 2016, COMPUT LANG SYST STR, V45, P1, DOI 10.1016/j.cl.2015.11.002
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Ampatzoglou A, 2013, ENTERTAIN COMPUT, V4, P131, DOI 10.1016/j.entcom.2012.10.002
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou A, 2011, J SYST SOFTWARE, V84, P2265, DOI 10.1016/j.jss.2011.06.047
   [Anonymous], 2010, P 2010 ACM IEEE INT
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Bai J, 2016, ADV ENG SOFTW, V93, P30, DOI 10.1016/j.advengsoft.2015.12.005
   Biolchini J., 2005, ES67905 U RIO DE JAN
   Birukou A., 2010, P 15 EUR C PATT LANG, P1
   Bouassida N, 2013, INT J SOFTW ENG KNOW, V23, P1367, DOI 10.1142/S0218194013500435
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   C2 Wiki Design Patterns, DESIGN PATTERNS
   Cacho N, 2014, J SYST SOFTWARE, V98, P117, DOI 10.1016/j.jss.2014.08.041
   Dong J, 2007, J SYST SOFTWARE, V80, P1755, DOI 10.1016/j.jss.2007.03.005
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Dong Jing., 2002, Journal of object technology, V1, P151
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Elish MO, 2015, INFORM SOFTWARE TECH, V66, P58, DOI 10.1016/j.infsof.2015.05.006
   Febrero F, 2014, INFORM SOFTWARE TECH, V56, P839, DOI 10.1016/j.infsof.2014.03.006
   Felizardo K.R., 2016, P 2016 INT S EMP SOF
   Fernandez EB, 2013, GOV INFORM Q, V30, P64, DOI 10.1016/j.giq.2012.08.001
   Fortuin H, 2010, J OBJECT TECHNOL, V9, P57, DOI 10.5381/jot.2010.9.1.c5
   Gaitani MAG, 2015, INFORM SOFTWARE TECH, V59, P33, DOI 10.1016/j.infsof.2014.10.010
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Griffith I., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Hafiz M, 2007, IEEE SOFTWARE, V24, P52, DOI 10.1109/MS.2007.114
   Hafiz M, 2013, SOFTWARE PRACT EXPER, V43, P769, DOI 10.1002/spe.1131
   Halkidis ST, 2006, COMPUT SECUR, V25, P379, DOI 10.1016/j.cose.2006.03.002
   Hamza H.S., 2004, P 2004 ONT SOFTW ENG, P24
   Hasheminejad SMH, 2012, J SYST SOFTWARE, V85, P408, DOI 10.1016/j.jss.2011.08.031
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kerievsky J., 2005, Refactoring to Patterns
   Kienzle J., 2002, IEE Proceedings-Software, V149, P77, DOI 10.1049/ip-sen:20020465
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B., 2004, ARXIV
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lyon D, 2007, J OBJECT TECHNOL, V6, P13, DOI 10.5381/jot.2007.6.3.c2
   Massingill B. L., 2001, International Journal on Software Tools for Technology Transfer, V3, P217, DOI 10.1007/s100090100045
   Najari A, 2016, PROC CIRP, V39, P119, DOI 10.1016/j.procir.2016.01.176
   Nilsson EG, 2009, ADV ENG SOFTW, V40, P1318, DOI 10.1016/j.advengsoft.2009.01.017
   Noyons C.M.E., 2000, SOE1961035 EUR COMM
   Pati T., 2012, SOFTWARE PRACT EXPER, V44, P699
   Pauwels SL, 2010, COMPUT HUM BEHAV, V26, P452, DOI 10.1016/j.chb.2009.12.004
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Rossi B., 2014, P 8 ACM IEEE INT S E
   Sarun I., 2007, ECTI T COMPUTER INFO, V3, P51
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Tsai WT, 2013, SOFTWARE PRACT EXPER, V43, P867, DOI 10.1002/spe.1132
   Ujhelyi Z, 2015, INFORM SOFTWARE TECH, V65, P147, DOI 10.1016/j.infsof.2015.01.003
   Uzunov AV, 2015, COMPUT STAND INTER, V41, P112, DOI 10.1016/j.csi.2015.02.011
   VanHilst M, 2009, J RES PRACT INF TECH, V41, P87
   Wen-Jin L., 2015, INT J HYBRID INF TEC, V8, P63
   Yu DJ, 2015, J SYST SOFTWARE, V103, P1, DOI 10.1016/j.jss.2015.01.019
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
   Zdun U, 2007, SOFTWARE PRACT EXPER, V37, P983, DOI 10.1002/spe.799
   Zhang C, 2013, INFORM SOFTWARE TECH, V55, P822, DOI 10.1016/j.infsof.2012.11.003
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhao LP, 2008, J SYST SOFTWARE, V81, P1272, DOI 10.1016/j.jss.2007.11.717
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
NR 71
TC 76
Z9 80
U1 2
U2 27
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2017
VL 125
BP 93
EP 118
DI 10.1016/j.jss.2016.11.030
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM5NX
UT WOS:000395359500006
DA 2024-07-18
ER

PT J
AU Zhang, R
   Ma, H
   Lu, Y
AF Zhang, Rui
   Ma, Hui
   Lu, Yao
TI Fine-grained access control system based on fully outsourced
   attribute-based encryption
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Attribute-based encryption; Access control; Outsourced computation; Low
   communication cost
AB Attribute-based encryption (ABE) has potential to be applied in cloud computing applications to provide fine-grained access control over encrypted data. However, the computation cost of ABE is considerably expensive, because the pairing and exponentiation operations grow with the complexity of access formula. In this work, we propose a fully outsourced ciphertext-policy ABE scheme that for the first time achieves outsourced key generation, encryption and decryption simultaneously. In our scheme, heavy computations are outsourced to public cloud service providers, leaving no complex operations for the private key generator (PKG) and only one modular exponentiation for the sender or the receiver, and the communication cost of the PKG and users is optimized. Moreover, we give the security proof and implement our scheme in Charm, and the experimental results indicate that our scheme is efficient and practical. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Zhang, Rui; Ma, Hui] Chinese Acad Sci, Inst Informat Engn, State Key Lab Informat Secur, Beijing 100093, Peoples R China.
   [Ma, Hui] Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
   [Lu, Yao] Univ Tokyo, Dept Complex Sci & Engn, Tokyo 1138654, Japan.
C3 Chinese Academy of Sciences; Institute of Information Engineering, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; University of Tokyo
RP Ma, H (corresponding author), Chinese Acad Sci, Inst Informat Engn, State Key Lab Informat Secur, Beijing 100093, Peoples R China.; Ma, H (corresponding author), Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
EM mahui@iie.ac.cn
OI Ma, Hui/0000-0001-8359-5158
FU Strategic Priority Research Program of the Chinese Academy of Sciences
   [XDA06010703, XDA06010701]; National Natural Science Foundation of China
   [61472416, 61272478, 61632020]
FX This work was supported by the Strategic Priority Research Program of
   the Chinese Academy of Sciences [grant numbers XDA06010703,
   XDA06010701]; the National Natural Science Foundation of China [grant
   numbers 61472416, 61272478, 61632020].
CR Akinyele JA, 2013, J CRYPTOGR ENG, V3, P111, DOI 10.1007/s13389-013-0057-3
   [Anonymous], 1996, SECURE SCHEMES SECRE
   [Anonymous], 2011, USENIX SEC S
   Bethencourt J, 2007, P IEEE S SECUR PRIV, P321, DOI 10.1109/sp.2007.11
   Canetti R, 2003, LECT NOTES COMPUT SC, V2729, P565
   Cheung L, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P456
   Chevallier-Mames B, 2010, LECT NOTES COMPUT SC, V6035, P24, DOI 10.1007/978-3-642-12510-2_3
   Goyal V., 2006, P 2006 INT C PRIVACY, P1
   Hohenberger S, 2005, LECT NOTES COMPUT SC, V3378, P264
   Hohenberger S, 2014, LECT NOTES COMPUT SC, V8383, P293, DOI 10.1007/978-3-642-54631-0_17
   Jingwei Li, 2012, Information and Communication Security. 14th International Conference (ICICS 2012). Proceedings, P191, DOI 10.1007/978-3-642-34129-8_17
   Kang B.G., 2005, IACR Cryptology ePrint Archive
   Lewko A, 2010, LECT NOTES COMPUT SC, V6110, P62, DOI 10.1007/978-3-642-13190-5_4
   Li J., 2013, IEEE T PARALLEL DIST, V1
   Li J, 2013, ADV INTEL SYS RES, V50, P592, DOI 10.1007/978-3-642-40203-6_33
   Okamoto T, 2010, LECT NOTES COMPUT SC, V6223, P191, DOI 10.1007/978-3-642-14623-7_11
   Ostrovsky R, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P195, DOI 10.1145/1315245.1315270
   Rouselakis Y., 2013, P 2013 ACM SIGSAC C, P463
   Sahai A, 2005, LECT NOTES COMPUT SC, V3494, P457, DOI 10.1007/11426639_27
   Shoup V., 2001, 112 IACR E PRINT ARC, V112
   Tsang PP, 2007, LECT NOTES COMPUT SC, V4752, P74
   Waters B, 2011, LECT NOTES COMPUT SC, V6571, P53, DOI 10.1007/978-3-642-19379-8_4
   Xiaofeng Chen, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P541, DOI 10.1007/978-3-642-33167-1_31
NR 23
TC 48
Z9 57
U1 0
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2017
VL 125
BP 344
EP 353
DI 10.1016/j.jss.2016.12.018
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM5NX
UT WOS:000395359500021
DA 2024-07-18
ER

PT J
AU Ouadjaout, A
   Miné, A
   Lasla, N
   Badache, N
AF Ouadjaout, Abdelraouf
   Mine, Antoine
   Lasla, Noureddine
   Badache, Nadjib
TI Static analysis by abstract interpretation of functional properties of
   device drivers in TinyOS
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Static analysis; abstract interpretation; wireless sensor networks;
   device drivers
AB In this paper, we present a static analysis by Abstract Interpretation of device drivers developed in the TinyOS operating system, which is considered as the de facto system in wireless sensor networks. We focus on verifying user-defined functional properties describing safety rules that programs should obey in order to interact correctly with the hardware. Our analysis is sound by construction and can prove that all possible execution paths follow the correct interaction patterns specified by the functional property. The soundness of the analysis is justified with respect to a preemptive execution model where interrupts can occur during execution depending on the configuration of specific hardware registers. The proposed solution performs a modular analysis that analyzes every interrupt independently and aggregates their results to over-approximate the effect of preemption. By doing so, we avoid reanalyzing interrupts in every context where they are enabled which improves considerably the scalability of the solution. A number of partitioning techniques are also presented in order to track precisely some crucial information, such as the hardware state and the tasks queue. We have performed several experiments on real-world TinyOS device drivers of the ATmega128 MCU and promising results demonstrate the effectiveness of our analysis. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Ouadjaout, Abdelraouf; Lasla, Noureddine; Badache, Nadjib] CERIST Res Ctr, Algiers, Algeria.
   [Ouadjaout, Abdelraouf; Lasla, Noureddine; Badache, Nadjib] USTHB Univ, Algiers, Algeria.
   [Ouadjaout, Abdelraouf] Ecole Normale Super, Paris, France.
   [Ouadjaout, Abdelraouf; Mine, Antoine] Univ Paris 06, LIP6, Paris, France.
C3 Centre de Recherche sur l'Information Scientifique et Technique
   (CERIST); University Science & Technology Houari Boumediene; Universite
   PSL; Ecole Normale Superieure (ENS); Sorbonne Universite
RP Ouadjaout, A (corresponding author), CERIST Res Ctr, Algiers, Algeria.; Ouadjaout, A (corresponding author), USTHB Univ, Algiers, Algeria.; Ouadjaout, A (corresponding author), Ecole Normale Super, Paris, France.; Ouadjaout, A (corresponding author), Univ Paris 06, LIP6, Paris, France.
EM aouadjaout@cerist.dz; antoine.mine@lip6.fr; nlasla@cerist.dz;
   badache@cerist.dz
OI Lasla, Noureddine/0000-0001-6685-9043; Ouadjaout,
   Abdelraouf/0000-0001-7248-5914
CR [Anonymous], 2010, P 2010 ICSE WORKSH S
   Atmel, 2011, ATMEGA1281 DAT
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Blanchet B, 2002, LECT NOTES COMPUT SC, V2566, P85
   Brauer J., 2010, P 13 INT WORKSH SOFT
   Bucur  D., 2012, P 3 INT C RUNT VER R, V7687, P96
   Bucur D, 2011, J SYST SOFTWARE, V84, P1693, DOI 10.1016/j.jss.2011.04.054
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Cousot P, 2002, LECT NOTES COMPUT SC, V2304, P159
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Dunkels Adam, 2006, Proceedings of the 4th International Conference on Embedded Networked Sensor Systems. SenSys'06, P29, DOI DOI 10.1145/1182807.1182811
   Feret J, 2001, ELECT NOTES THEOR CO, V39
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   KAMINSKI M, 1994, THEOR COMPUT SCI, V134, P329, DOI 10.1016/0304-3975(94)90242-9
   Kroening D, 2015, DES AUT TEST EUROPE, P229
   Levis P, 2005, AMBIENT INTELLIGENCE, P115
   Li P, 2010, PROCEEDINGS OF THE 9TH ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, P174, DOI 10.1145/1791212.1791234
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Miné A, 2006, ACM SIGPLAN NOTICES, V41, P54, DOI 10.1145/1134650.1134659
   Miné A, 2014, LECT NOTES COMPUT SC, V8318, P39, DOI 10.1007/978-3-642-54013-4_3
   Miné A, 2011, LECT NOTES COMPUT SC, V6602, P398, DOI 10.1007/978-3-642-19718-5_21
   Mine Antoine, 2012, WING 12 4 INT WORKSH, P16
   Monniaux D., 2007, EMSOFT 2007 7 ACM IN, P30
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Ouadjaout A, 2014, PROCEEDINGS OF THE 13TH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN' 14), P297
   PARIKH RJ, 1966, J ACM, V13, P570, DOI 10.1145/321356.321364
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Robby, 2003, Software Engineering Notes, V28, P267, DOI 10.1145/949952.940107
   Sasnauskas R, 2010, PROCEEDINGS OF THE 9TH ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, P186, DOI 10.1145/1791212.1791235
   Zhai JN, 2014, LECT NOTES COMPUT SC, V8734, P108, DOI 10.1007/978-3-319-11164-3_10
NR 38
TC 4
Z9 7
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2016
VL 120
BP 114
EP 132
DI 10.1016/j.jss.2016.07.030
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DV0GQ
UT WOS:000382596400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kravari, K
   Bassiliades, N
AF Kravari, Kalliopi
   Bassiliades, Nick
TI DISARM: A social distributed agent reputation model based on defeasible
   logic
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-agent systems; Distributed trust management; Defeasible reasoning
ID PEER-TO-PEER; SEMANTIC WEB; TRUST; SYSTEMS; DISCOVERY
AB Agents act in open and thus risky environments with limited or no human intervention. Making the appropriate decision about who to trust in order to interact with is not only necessary but it is also a challenging process. To this end, trust and reputation models, based on interaction trust or witness reputation, have been proposed. Yet, they are often faced with skepticism since they usually presuppose the use of a centralized authority, the trustworthiness and robustness of which may be questioned. Distributed models, on the other hand, are more complex but they are more suitable for personalized estimations based on each agent's interests and preferences. Furthermore, distributed approaches allow the study of a really challenging aspect of multi-agent systems, that of social relations among agents. To this end, this article proposes DISARM, a novel distributed reputation model. DISARM treats Multi-agent Systems as social networks, enabling agents to establish and maintain relationships, limiting the disadvantages of the common distributed approaches. Additionally, it is based on defeasible logic, modeling the way intelligent agents, like humans, draw reasonable conclusions from incomplete and possibly conflicting (thus inconclusive) information. Finally, we provide an evaluation that illustrates the usability of the proposed model. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Kravari, Kalliopi; Bassiliades, Nick] Aristotle Univ Thessaloniki, Dept Informat, GR-54124 Thessaloniki, Greece.
C3 Aristotle University of Thessaloniki
RP Bassiliades, N (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, GR-54124 Thessaloniki, Greece.
EM kkravari@csd.auth.gr; nbassili@csd.auth.gr
RI Bassiliades, Nick/E-3703-2015
OI Bassiliades, Nick/0000-0001-6035-1038; Kravari,
   Kalliopi/0000-0002-2298-9038
CR Alnemr R., 2011, IFIP ADV INF COMMUN, V358, P98
   Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   [Anonymous], 2010, TRUST THEORY
   Antoniou G, 2000, J LOGIC PROGRAM, V42, P47, DOI 10.1016/S0743-1066(99)00060-6
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Artz D, 2007, J WEB SEMANT, V5, P58, DOI 10.1016/j.websem.2007.03.002
   Bassiliades N, 2006, INT J SEMANT WEB INF, V2, P1, DOI 10.4018/jswis.2006010101
   Bellifemine F., 2003, Jade a white paper, exp, V3, P6
   Berners-Lee Tim, 2006, Foundations and Trends in Web Science, V1, P1, DOI 10.1561/1800000001
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bikakis A, 2010, IEEE T KNOWL DATA EN, V22, P1492, DOI 10.1109/TKDE.2010.37
   Billington D., 1997, P 2 AUSTR WORKSH COM, P1
   Billington D, 2008, LECT NOTES ARTIF INT, V5293, P34, DOI 10.1007/978-3-540-87803-2_5
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   Boley Harold, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P343, DOI 10.4304/jetwi.2.4.343-353
   Boley H, 2010, LECT NOTES COMPUT SC, V6403, P162, DOI 10.1007/978-3-642-16289-3_15
   Bosu A, 2014, J SYST SOFTWARE, V94, P4, DOI 10.1016/j.jss.2014.03.061
   Carrera A, 2014, J NETW COMPUT APPL, V37, P146, DOI 10.1016/j.jnca.2012.11.004
   Castelfranchi C., 2001, TRUST DECEPTION VIRT, VXXXI, P257
   Ceravolo P, 2006, STUD FUZZ SOFT COMP, V197, P87, DOI 10.1007/3-540-31590-X_5
   Ceravolo P, 2007, IEEE T KNOWL DATA EN, V19, P149, DOI 10.1109/TKDE.2007.23
   CLIPS, 2015, CLIPS TOOL BUILD EXP
   Dasgupta P., 2000, Trust: Making and Breaking Cooperative Relations, V4, P49
   Ferretti E, 2007, LECT NOTES COMPUT SC, V4483, P297, DOI 10.1007/978-3-540-72200-7_29
   Genc Z, 2013, LECT NOTES GEOINF CA, P349, DOI 10.1007/978-3-642-33218-0_26
   Gottlob G., 1992, Journal of Logic and Computation, V2, P397, DOI 10.1093/logcom/2.3.397
   Governatori G., 2001, P 2 AUSTR WORKSH COM, P47
   Governatori G, 2008, AUTON AGENT MULTI-AG, V17, P36, DOI 10.1007/s10458-008-9030-4
   Grandison T, 2000, IEEE Communications Surveys Tutorials, V3, P2, DOI [DOI 10.1109/COMST.2000.5340804, 10.1109/COMST.2000.5340804]
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gutowska Anna, 2008, 2008 28th International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P255, DOI 10.1109/ICDCS.Workshops.2008.38
   Han Y., 2003, IEEE ACCESS, V1, P35
   Hendler J, 2001, IEEE INTELL SYST APP, V16, P30, DOI 10.1109/5254.920597
   Hendrikx F, 2015, J PARALLEL DISTR COM, V75, P184, DOI 10.1016/j.jpdc.2014.08.004
   Huynh D., 2006, P 5 INT JOINT C AUT
   Huynh TD, 2006, AUTON AGENT MULTI-AG, V13, P119, DOI 10.1007/s10458-005-6825-4
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Jung JJ, 2009, EXPERT SYST APPL, V36, P7123, DOI 10.1016/j.eswa.2008.08.048
   Kashyap V, 2008, DATA CENTRIC SYST AP, P3
   Khosravifar B, 2012, KNOWL-BASED SYST, V30, P1, DOI 10.1016/j.knosys.2011.01.004
   Kontopoulos E, 2011, KNOWL-BASED SYST, V24, P406, DOI 10.1016/j.knosys.2010.12.001
   KOONS R, 2009, STANFORD ENCY PHILOS
   Kravari Kalliopi, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P193, DOI 10.1007/978-3-642-32689-9_15
   Kravari K, 2010, INFORM-J COMPUT INFO, V34, P429
   Kravari K, 2010, LECT NOTES ARTIF INT, V6040, P173, DOI 10.1007/978-3-642-12842-4_21
   Krishna RamanathanM., 2002, IEEE international symposium on parallel and distributed processing, Ft. Lauderdale, FL, P24
   Lam HP, 2009, LECT NOTES COMPUT SC, V5858, P315
   Liao ZP, 2014, INT J DISTRIB SENS N, DOI 10.1155/2014/792814
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Máhr T, 2010, TRANSPORT RES C-EMER, V18, P99, DOI 10.1016/j.trc.2009.04.018
   Medic A., 2012, International Journal of Information, V2, P254
   Meshkova E, 2008, COMPUT NETW, V52, P2097, DOI 10.1016/j.comnet.2008.03.006
   Nute D., 1987, Proceedings of the Twentieth Hawaii International Conference on System Sciences 1987, P470
   Nute D, 2003, LECT NOTES ARTIF INT, V2543, P151
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   Pinyol I, 2013, ARTIF INTELL REV, V40, P1, DOI 10.1007/s10462-011-9277-z
   Pollock JL, 1998, COMPUT INTELL-US, V14, P498, DOI 10.1111/0824-7935.00074
   POLLOCK JL, 1992, ARTIF INTELL, V57, P1, DOI 10.1016/0004-3702(92)90103-5
   Raeth Peter G., 1991, EXPERT SYST, P324
   Ramchurn SD, 2004, KNOWL ENG REV, V19, P1, DOI 10.1017/S0269888904000116
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Resnick P, 2000, COMMUN ACM, V43, P45, DOI 10.1145/355112.355122
   Rosaci D, 2012, INT J INTELL SYST, V27, P1, DOI 10.1002/int.20513
   Sabater J., 2001, 4 WORKSHOP DECEPTION, P61
   Sabater J., 2002, SIGECOM EXCHANGES, V3, P44, DOI DOI 10.1145/844331.844337
   Sabri K. E., 2015, J APPL INTELL, P1
   Sherchan W., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1886, DOI 10.1145/1141277.1141722
   Skylogiannis T, 2007, DATA KNOWL ENG, V63, P362, DOI 10.1016/j.datak.2007.03.004
   Su X, 2011, INT J COMPUT SCI NET, V11, P1
   Teacy WTL, 2012, ARTIF INTELL, V193, P149, DOI 10.1016/j.artint.2012.09.001
   Vrba P, 2011, INT J PROD RES, V49, P1483, DOI 10.1080/00207543.2010.518746
   Wagner G, 2003, LECT NOTES COMPUT SC, V2901, P33
   Xie XF., 2012, ICAPS 2012 - Proc. 22nd Int. Conf. Autom. Plan. Sched, P323
   Xin L, 2014, COMPUT INTELL, V30, P1467
   Yang MK, 2009, J PARALLEL DISTR COM, V69, P877, DOI 10.1016/j.jpdc.2009.07.004
NR 75
TC 10
Z9 10
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 130
EP 152
DI 10.1016/j.jss.2016.02.016
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, TY
   Poon, PL
   Xie, XY
AF Chen, Tsong Yueh
   Poon, Pak-Lok
   Xie, Xiaoyuan
TI METRIC: METamorphic Relation Identification based on the Category-choice
   framework
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Metamorphic testing; Test oracle; Oracle problem
ID MAGICAL NUMBER 7; END-USERS; SELECTION
AB Metamorphic testing is a promising technique for testing software systems when the oracle problem exists, and has been successfully applied to various application domains and paradigms. An important and essential task in metamorphic testing is the identification of metamorphic relations, which, due to the absence of a systematic and specification-based methodology, has often been done in an ad hoc manner something which has hindered the applicability and effectiveness of metamorphic testing. To address this, a systematic methodology for identifying metamorphic relations based on the category-choice framework, called METRIC, is introduced in this paper. A tool implementing this methodology has been developed and examined in an experiment to determine the viability and effectiveness of METRIC, with the results of the experiment confirming that METRIC is both effective and efficient at identifying metamorphic relations. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
   [Poon, Pak-Lok] RMIT Univ, Sch Business IT & Logist, Melbourne, Vic 3000, Australia.
   [Xie, Xiaoyuan] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
C3 Swinburne University of Technology; Royal Melbourne Institute of
   Technology (RMIT); Wuhan University
RP Poon, PL (corresponding author), RMIT Univ, Sch Business IT & Logist, Melbourne, Vic 3000, Australia.
EM tychen@swin.edu.au; drpoonpl@yahoo.com.hk; xxie@whu.edu.cn
RI Poon, Pak-Lok/ADQ-5493-2022
OI POON, Pak Lok/0000-0003-2840-2418; Chen, Tsong/0000-0003-3578-0994
FU Australian Research Council [ARC DP120104773]
FX The work described in this paper was partially supported by a Discovery
   Grant of the Australian Research Council (project no. ARC DP120104773).
CR [Anonymous], 2011, SEHC
   [Anonymous], 2000, P 8 EUR INT C SOFTW
   BADDELEY A, 1994, PSYCHOL REV, V101, P353, DOI 10.1037/0033-295X.101.2.353
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Cain A, 2004, LECT NOTES COMPUT SC, V3026, P225
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chen T.Y., 2002, PROC INTERSYMPOSIUM, P191
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2012, IEEE T SOFTWARE ENG, V38, P794, DOI 10.1109/TSE.2011.69
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2005, QSIC 2005: Fifth International Conference on Quality Software, Proceedings, P55
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Conrad M, 2006, ELECTRON NOTES THEOR, V164, P3, DOI 10.1016/j.entcs.2006.09.002
   Cortes C., 1995, KDD-95 Proceedings. First International Conference on Knowledge Discovery and Data Mining, P57
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Hamlet R., 2002, ENCY SOFTWARE ENG, P970, DOI [10.1002/0471028959.sof268, DOI 10.1002/0471028959.SOF268]
   Hierons RM, 2003, LECT NOTES COMPUT SC, V2651, P388
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Hui ZW, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/381389
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kaiser Gail E., 2013, CUCS02213
   Kaiser Gail E., 2012, CUCS02012
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kruse P., 2010, SOFTWARE QUALITY PRO, P4
   Liu H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P420, DOI 10.1145/2591062.2591109
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   LYU MR, 1994, IEEE T RELIAB, V43, P527, DOI 10.1109/24.370230
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Poon PL, 2014, INFORM TECHNOL PEOPL, V27, P440, DOI 10.1108/ITP-01-2013-0004
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Singh H, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P81, DOI 10.1109/ICFEM.1997.630406
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 51
TC 44
Z9 49
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2016
VL 116
SI SI
BP 177
EP 190
DI 10.1016/j.jss.2015.07.037
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK8GF
UT WOS:000375164500016
DA 2024-07-18
ER

PT J
AU Clarisó, R
   Cabot, J
   Guerra, E
   de Lara, J
AF Clariso, Robert
   Cabot, Jordi
   Guerra, Esther
   de Lara, Juan
TI Backwards reasoning for model transformations: Method and applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model transformation; OCL; Weakest pre-condition
ID FORMAL VERIFICATION; CONSTRAINTS
AB Model transformations are key elements of model driven engineering. Current challenges for transformation languages include improving usability (i.e., succinct means to express the transformation intent) and devising powerful analysis methods.
   In this paper, we show how backwards reasoning helps in both respects. The reasoning is based on a method that, given an OCL expression and a transformation rule, calculates a constraint that is satisfiable before the rule application if and only if the original OCL expression is satisfiable afterwards.
   With this method we can improve the usability of the rule execution process by automatically deriving suitable application conditions for a rule (or rule sequence) to guarantee that applying that rule does not break any integrity constraint (e.g. meta-model constraints). When combined with model finders, this method facilitates the validation, verification, testing and diagnosis of transformations, and we show several applications for both in-place and exogenous transformations. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Clariso, Robert] Univ Oberta Catalunya, Estudis Informat Multimedia & Telecomunicacio, Rambla del Poblenou 156, Barcelona 08018, Spain.
   [Cabot, Jordi] ICREA, Barcelona, Spain.
   [Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
C3 UOC Universitat Oberta de Catalunya; ICREA; Autonomous University of
   Madrid
RP Clarisó, R (corresponding author), Univ Oberta Catalunya, Estudis Informat Multimedia & Telecomunicacio, Rambla del Poblenou 156, Barcelona 08018, Spain.
EM rclariso@uoc.edu; jordi.cabot@icrea.cat; Esther.Guerra@uam.es;
   Juan.deLara@uam.es
RI de Lara, Juan/B-5422-2014; Cabot, Jordi/P-7723-2015; Guerra,
   Esther/B-4977-2014; Clariso, Robert/B-5450-2009
OI Cabot, Jordi/0000-0003-2418-2489; Guerra, Esther/0000-0002-2818-2278;
   Clariso, Robert/0000-0001-9639-0186
FU Spanish Ministry of Economy and Competitiveness [TIN2008-00444,
   TIN2011-24139, TIN2014-52129-R]; Community of Madrid [S2013/ICE-3006];
   EU Commission [FP7-ICT-2013-10, 611125]; UOC-IN3 (Internet
   Interdisciplinary Institute); ICREA Funding Source: Custom
FX Work partially funded by the Spanish Ministry of Economy and
   Competitiveness (projects TIN2008-00444, TIN2011-24139 and
   TIN2014-52129-R), the Community of Madrid with project SICO-MORO
   (S2013/ICE-3006), the EU Commission with project MONDO (FP7-ICT-2013-10,
   #611125) and a research grant from UOC-IN3 (Internet Interdisciplinary
   Institute). We would like to thank Hamza Ed-Douibi for his work on the
   tool implementation part, and the reviewers for their useful comments.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abdulla PA, 2008, LECT NOTES COMPUT SC, V5123, P341
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Apt KR, 2012, J COMPUT SYST SCI, V78, P823, DOI 10.1016/j.jcss.2011.08.002
   Bertrand Nathalie, 2012, RTA, P101, DOI DOI 10.4230/LIPICS.RTA.2012.101
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Born K, 2015, LECT NOTES COMPUT SC, V9033, P165, DOI 10.1007/978-3-662-46675-9_11
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot J, 2010, LECT NOTES COMPUT SC, V6142, P45, DOI 10.1007/978-3-642-13688-7_4
   Cabot J, 2010, SOFTW SYST MODEL, V9, P335, DOI 10.1007/s10270-009-0129-0
   Costal D, 2008, LECT NOTES COMPUT SC, V5074, P266
   Deckwerth F, 2014, LECT NOTES COMPUT SC, V8571, P81
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2006, FUND INFORM, V74, P135
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Habel A, 2005, LECT NOTES COMPUT SC, V3393, P293
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Heckel Reiko, 1995, ELECT NOTES THEOR CO, V2, P118, DOI [10.1016/S1571-0661(05)80188-4, DOI 10.1016/S1571-0661(05)80188-4]
   Howe JM, 2004, LECT NOTES COMPUT SC, V3049, P152
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Joshi S, 2008, LECT NOTES COMPUT SC, V5123, P214
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kreowski H.-J., 2006, RECENT ADV FORMAL LA, V25, P229, DOI [10.1007/978-3-540-33461-3_9, DOI 10.1007/978-3-540-33461-3]
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kwiatkowska M, 2007, INFORM COMPUT, V205, P1027, DOI 10.1016/j.ic.2007.01.004
   Lano K., 2012, P WORKSH MOD DRIV EN, P23
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   MAMMAR A, 2006, INFORSID, P595
   Planas E., 2011, MTATL, P1
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Reus B., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P300
   Saksena M, 2008, LECT NOTES COMPUT SC, V4963, P18, DOI 10.1007/978-3-540-78800-3_3
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Stenzel K, 2011, LECT NOTES COMPUT SC, V6981, P533, DOI 10.1007/978-3-642-24485-8_39
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Yang R, 2005, STUD COMP INTELL, V2, P61
NR 41
TC 10
Z9 12
U1 1
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2016
VL 116
SI SI
BP 113
EP 132
DI 10.1016/j.jss.2015.08.017
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK8GF
UT WOS:000375164500012
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Friginal, J
   Martínez, M
   de Andrés, D
   Ruiz, JC
AF Friginal, Jesus
   Martinez, Miguel
   de Andres, David
   Ruiz, Juan-Carlos
TI Multi-criteria analysis of measures in benchmarking: Dependability
   benchmarking as a case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multiple-Criteria Decision Making (MCDM); Dependability benchmarking;
   Quality models
AB Benchmarks enable the comparison of computer-based systems attending to a variable set of criteria, such as dependability, security, performance, cost and/or power consumption. It is not despite its difficulty, but rather its mathematical accuracy that multi-criteria analysis of results remains today a subjective process rarely addressed in an explicit way in existing benchmarks. It is thus not surprising that industrial benchmarks only rely on the use of a reduced set of easy-to-understand measures, specially when considering complex systems. This is a way to keep the process of result interpretation straightforward, unambiguous and accurate. However, it limits at the same time the richness and depth of the analysis process. As a result, the academia prefers to characterize complex systems with a wider set of measures. Marrying the requirements of industry and academia in a single proposal remains a challenge today. This paper addresses this question by reducing the uncertainty of the analysis process using quality (score-based) models. At measure definition time, these models make explicit (i) which are the requirements imposed to each type of measure, that may vary from one context of use to another, and (ii) which is the type, and intensity, of the relation between considered measures. At measure analysis time, they provide a consistent, straightforward and unambiguous method to interpret resulting measures. The methodology and its practical use are illustrated through three different case studies from the dependability benchmarking domain, a domain where various different criteria, including both performance and dependability, are typically considered during analysis of benchmark results.. Although the proposed approach is limited to dependability benchmarks in this document, its usefulness for any type of benchmark seems quite evident attending to the general formulation of the provided solution. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Friginal, Jesus] SCASSI CIBERSEGURIDAD, Capitan Haya 38-4, Madrid 28020, Spain.
   [Friginal, Jesus] CNRS, LAAS, 7 Ave colonel Roche, F-31400 Toulouse, France.
   [Martinez, Miguel; de Andres, David; Ruiz, Juan-Carlos] Univ Politecn Valencia, STF ITACA, Campus Vera S-N, E-46022 Valencia, Spain.
C3 Centre National de la Recherche Scientifique (CNRS); Universitat
   Politecnica de Valencia
RP Friginal, J (corresponding author), SCASSI CIBERSEGURIDAD, Capitan Haya 38-4, Madrid 28020, Spain.
EM jesus.friginal@scassi.com; mimarra2@disca.upv.es; ddandres@disca.upv.es;
   jcruizg@disca.upv.es
RI de Andrés, David/K-2255-2015; Ruiz, Juan Carlos/A-9119-2016
OI de Andrés, David/0000-0002-4744-3795; Ruiz, Juan
   Carlos/0000-0001-7678-3513
FU Spanish project ARENES [TIN2012-38308-C02-01]; ANR French project AMORES
   [ANR-11-INSE-010]; Intel Doctoral Student Honour Programme; "Programa de
   Ayudas de Investigacion y Desarrollo" (PAID) from Universitat
   Politecnica de Valencia
FX This work is partially supported by the Spanish project ARENES
   (TIN2012-38308-C02-01), ANR French project AMORES (ANR-11-INSE-010), the
   Intel Doctoral Student Honour Programme 2012, and the "Programa de
   Ayudas de Investigacion y Desarrollo" (PAID) from the Universitat
   Politecnica de Valencia.
CR Al-Sbou YA, 2008, INT CONF NEXT GEN, P479, DOI 10.1109/NGMAST.2008.81
   Almeida R., 2010, Proceedings 2010 30th International Conference on Distributed Computing Systems Workshops (ICDCS 2010 Workshops), P313, DOI 10.1109/ICDCSW.2010.75
   Amber project, 2008, AMB ASS MEAS BENCHM
   Anaby-Tavor A., 2003, EVALUATING MATCHING, P47
   [Anonymous], 2008, WILEY ONLINE LIB
   [Anonymous], 1988, MATH MODELS DECISION
   [Anonymous], 2003, Handbook of Means and Their Inequalities
   Bondavalli A, 2007, I C DEPEND SYS NETWO, P522, DOI 10.1109/DSN.2007.52
   Ceccarelli A., 2012, THESIS U STUDI FIREN
   Chen Y, 2010, ENVIRON MODELL SOFTW, V25, P1582, DOI 10.1016/j.envsoft.2010.06.001
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Correia JosePedro., 2008, P 2 INT WORKSHOP FDN, P35
   DBench, 2003, 200025425 IST EUR CO
   de Andrés D, 2009, LAT-AM SYMP DEP COMP, P49, DOI 10.1109/LADC.2009.17
   Duraes J, 2004, LECT NOTES COMPUT SC, V3219, P297
   Elnicki R., 1982, 82374 GCR NBS
   Forman E, 1998, EUR J OPER RES, V108, P165, DOI 10.1016/S0377-2217(97)00244-0
   Friginal J., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing (LADC 2011), P94, DOI 10.1109/LADC.2011.18
   Gray J., 1992, The benchmark handbook for database and transaction systems
   Gray J., 2007, ABSCS0701162 CORR
   International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC), 2010, 25000 ISOIEC
   Kanoun K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/ISSRE.2005.13
   Karvetski Christopher W., 2011, Integrated Environmental Assessment and Management, V7, P228, DOI 10.1002/ieam.137
   Liu NA, 2010, IEEE T POWER DELIVER, V25, P1492, DOI 10.1109/TPWRD.2009.2033930
   Madeira H, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P86, DOI 10.1109/DSN.2003.1209920
   Madeira H, 2007, LECT NOTES COMPUT SC, V4746, P238
   Martinez Miquel, 2013, 2013 IEEE International Workshop on Measurements & Networking (M&N), P127, DOI 10.1109/IWMN.2013.6663790
   Martínez M, 2014, IEEE T INSTRUM MEAS, V63, P2548, DOI 10.1109/TIM.2014.2348632
   Martínez M, 2014, 2014 TENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P130, DOI 10.1109/EDCC.2014.20
   Morris Michael F., 1974, SIGMETRICS Perform. Eval. Rev, V3, P2, DOI DOI 10.1145/1041691.1041692
   Saltelli A, 2008, GLOBAL SENSITIVITY A, DOI DOI 10.1002/9780470725184.CH6
   SPEC, 2014, SPECS BENCHM
   Suppes P., 2006, FDN MEASUREMENT GEOM
   Triantaphyllou E, 1997, DECISION SCI, V28, P151, DOI 10.1111/j.1540-5915.1997.tb01306.x
   Vieira M., 2003, Proceedings of the 29th International Conference on Very Large Data Bases, V29, P742
   YAGER RR, 1987, J AM SOC INFORM SCI, V38, P23, DOI 10.1002/(SICI)1097-4571(198701)38:1<23::AID-ASI4>3.0.CO;2-3
NR 36
TC 2
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2016
VL 111
BP 105
EP 118
DI 10.1016/j.jss.2015.08.052
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DE2NA
UT WOS:000370462800006
OA Green Published
DA 2024-07-18
ER

PT J
AU Hyrynsalmi, S
   Suominen, A
   Mäntymäki, M
AF Hyrynsalmi, Sami
   Suominen, Arho
   Mantymaki, Matti
TI The influence of developer multi-homing on competition between software
   ecosystems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software ecosystem; Multi-homing; Two-sided markets
ID 2-SIDED MARKETS; MOBILE DATA; INFORMATION; STORES
AB Having a large number of applications in the marketplace is considered a critical success factor for software ecosystems. The number of applications has been claimed to determine which ecosystems holds the greatest competitive advantage and will eventually dominate the market. This paper investigates the influence of developer multi-homing (i.e., participating in more than one ecosystem) in three leading mobile application ecosystems. Our results show that when regarded as a whole, mobile application ecosystems are single homing markets. The results further show that 3% of all developers generate more than 80% of installed applications and that multi-homing is common among these developers. Finally, we demonstrate that the most installed content actually comprises only a small number of the potential value propositions. The results thus imply that attracting and maintaining developers of superstar applications is more critical for the survival of a mobile application ecosystem than the overall number of developers and applications. Hence, the mobile ecosystem is unlikely to become a monopoly. Since exclusive contracts between application developers and mobile application ecosystems are rare, multi-homing is a viable component of risk management and a publishing strategy. The study advances the theoretical understanding of the influence of multi-homing on competition in software ecosystems. (C) 2015 The Authors. Published by Elsevier Inc.
C1 [Hyrynsalmi, Sami] Univ Turku, Fac Math & Nat Sci, Dept Informat Technol, FI-20014 Turku, Finland.
   [Suominen, Arho] VTT Tech Res Ctr Finland, Itainen Pitkakatu 4,POB 106, FI-20521 Turku, Finland.
   [Mantymaki, Matti] Univ Turku, Turku Sch Econ, Dept Management & Entrepreneurship, FI-20014 Turku, Finland.
C3 University of Turku; VTT Technical Research Center Finland; University
   of Turku
RP Hyrynsalmi, S (corresponding author), Univ Turku, Fac Math & Nat Sci, Dept Informat Technol, FI-20014 Turku, Finland.
EM sthyry@utu.fi; arho.suominen@vtt.fi; matti.mantymaki@utu.fi
RI Hyrynsalmi, Sami/U-6315-2017; Suominen, Arho/AAA-5918-2022
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Suominen, Arho/0000-0001-9844-7799
FU Nokia Foundation; Academy of Finland [288609, 257412]; Academy of
   Finland (AKA) [288609, 257412] Funding Source: Academy of Finland (AKA)
FX The authors wish to thank Ph.D. Ville Harkke, Ph.D. Kai Kimppa,
   University teacher Antero Jarvi, Associate Professor Marko Seppanen,
   Adjunct Professor Timo Knuutila and D.Sc. Tuomas Makila for discussions
   on the topic as well as the unnamed reviewers for their insightful
   comments on different versions of the manuscript. The authors wish to
   express their gratitude to B.Sc Miika Oja-Nisula for his technical
   contributions in data gathering. Furthermore, Sami Hyrynsalmi is
   grateful for the Nokia Foundation for financial supporting of his
   dissertation work on mobile ecosystems. This work was supported by
   Academy of Finland with research grant (288609) awarded for the project
   "Modeling Science and Technology Systems Through Massive Data
   Collections" (Suominen) and research grant (257412) "Digital Engagement:
   Uncovering the Customer Value of Social Media" (Mantymaki).
CR [Anonymous], 2012, Service Science, DOI [10.1287/serv.1120.0004, DOI 10.1287/SERV.1120.0004]
   Armstrong M, 2006, RAND J ECON, V37, P668, DOI 10.1111/j.1756-2171.2006.tb00037.x
   Barnes SJ, 2002, INT J INFORM MANAGE, V22, P91, DOI 10.1016/S0268-4012(01)00047-0
   Basole R. C., 2012, P INT C MOB BUS
   Basole RC, 2011, BUS INFORM SYST ENG+, V3, P313, DOI [10.1007/s11576-011-0286-y, 10.1007/s12599-011-0174-4]
   Basole RC, 2009, J INF TECHNOL, V24, P144, DOI 10.1057/jit.2008.34
   Bong Gyou Lee, 2010, International Journal of Electronic Finance, V4, P201
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Boudreau KJ, 2012, ORGAN SCI, V23, P1409, DOI 10.1287/orsc.1110.0678
   Bouwman H, 2010, INT J MOB COMMUN, V8, P430, DOI 10.1504/IJMC.2010.033835
   Burkard C, 2012, BUS INFORM SYST ENG+, V4, P41, DOI 10.1007/s12599-011-0199-8
   Campbell Piers R. J, 2011, J. theor. appl. electron. commer. res., V6, P50, DOI 10.4067/S0718-18762011000200006
   Castillo C., 2004, THESIS U CHILE
   Cenamor J, 2013, TECHNOVATION, V33, P405, DOI 10.1016/j.technovation.2013.06.007
   Cuadrado F, 2012, IEEE COMMUN MAG, V50, P160, DOI 10.1109/MCOM.2012.6353696
   Dedrick J, 2011, TELECOMMUN POLICY, V35, P505, DOI 10.1016/j.telpol.2011.04.006
   Eaton B, 2015, MIS QUART, V39, P217, DOI 10.25300/MISQ/2015/39.1.10
   Economides Anastasios A., 2009, Telematics and Informatics, V26, P57, DOI 10.1016/j.tele.2008.01.001
   Eisenmann T, 2006, HARVARD BUS REV, V84, P92
   Funk JL, 2009, TELECOMMUN POLICY, V33, P4, DOI 10.1016/j.telpol.2008.09.002
   Gallagher SR, 2012, TECHNOVATION, V32, P90, DOI 10.1016/j.technovation.2011.10.004
   Gonçalves V, 2011, TELEMAT INFORM, V28, P12, DOI 10.1016/j.tele.2010.05.005
   Gueguen G, 2011, TELEMAT INFORMAT, V28, P5, DOI 10.1016/j.tele.2010.05.007
   Gupta P., 2012, REUTERS
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   He ZL, 2006, RES POLICY, V35, P1147, DOI 10.1016/j.respol.2006.09.004
   Heinrich T, 2014, TECHNOL FORECAST SOC, V81, P309, DOI 10.1016/j.techfore.2013.04.015
   Holzer A, 2011, TELEMAT INFORM, V28, P22, DOI 10.1016/j.tele.2010.05.006
   Hyrynsalmi S, 2014, J SYST SOFTWARE, V96, P61, DOI 10.1016/j.jss.2014.05.064
   Iansiti M, 2004, HARVARD BUS REV, V82, P68
   Idu A., 2011, P 3 INT C MAN EM DIG, P122, DOI 10.1145/2077489.2077511
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Jarvi Kati, 2011, International Journal of Technology Marketing, V6, P57, DOI 10.1504/IJTMKT.2011.041943
   KATZ ML, 1985, AM ECON REV, V75, P424
   Krippendorff K., 2013, Content analysis, V3rd
   Landsman V, 2011, J MARKETING, V75, P39, DOI 10.1509/jm.09.0199
   Laugesen John, 2010, Proceedings 2010 Ninth International Conference on Mobile Business/2010 Ninth Global Mobility Roundtable. ICMB-GMR 2010, P91, DOI 10.1109/ICMB-GMR.2010.63
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Maitland CF, 2002, TELECOMMUN POLICY, V26, P485, DOI 10.1016/S0308-5961(02)00028-9
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Olston Christopher, 2010, Foundations and Trends in Information Retrieval, V4, P175, DOI 10.1561/1500000017
   Parker GG, 2005, MANAGE SCI, V51, P1494, DOI 10.1287/mnsc.1050.0400
   Porter M.E., 2004, Competitive advantage: Creating and sustaining superior performance
   PORTER ME, 1985, HARVARD BUS REV, V63, P149
   Rochet JC, 2006, RAND J ECON, V37, P645, DOI 10.1111/j.1756-2171.2006.tb00036.x
   Rochet JC, 2003, J EUR ECON ASSOC, V1, DOI 10.1162/154247603322493212
   Schultz N., 2011, 2011 15th International Conference on Intelligence in Next Generation Networks (ICIN): "From Bits to Data, from Pipes to Clouds", P103, DOI 10.1109/ICIN.2011.6081055
   Smith D, 2015, BUS INSIDER
   Sun MC, 2009, J MANAGE STUD, V46, P45, DOI 10.1111/j.1467-6486.2008.00796.x
   Suominen A, 2014, TELEMAT INFORM, V31, P266, DOI 10.1016/j.tele.2013.08.003
   van de Kaa G, 2015, TECHNOL FORECAST SOC, V91, P222, DOI 10.1016/j.techfore.2014.02.019
   van de Kaa G, 2011, TECHNOL FORECAST SOC, V78, P1397, DOI 10.1016/j.techfore.2011.03.011
   West J, 2010, TELECOMMUN POLICY, V34, P270, DOI 10.1016/j.telpol.2009.12.002
   Yamakami T., 2010, Proceedings of the 13th International Conference on Network-Based Information Systems (NBiS 2010), P516, DOI 10.1109/NBiS.2010.26
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 64
TC 38
Z9 42
U1 2
U2 35
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2016
VL 111
BP 119
EP 127
DI 10.1016/j.jss.2015.08.053
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DE2NA
UT WOS:000370462800007
OA hybrid
DA 2024-07-18
ER

PT J
AU Bavota, G
   De Lucia, A
   Di Penta, M
   Oliveto, R
   Palomba, F
AF Bavota, Gabriele
   De Lucia, Andrea
   Di Penta, Massimiliano
   Oliveto, Rocco
   Palomba, Fabio
TI An experimental investigation on the innate relationship between quality
   and refactoring
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Refactoring; Code smells; Empirical study
ID METRICS; SOFTWARE; VALIDATION; COHESION; IMPACT
AB Previous studies have investigated the reasons behind refactoring operations performed by developers, and proposed methods and tools to recommend refactorings based on quality metric profiles, or on the presence of poor design and implementation choices, i.e., code smells. Nevertheless, the existing literature lacks observations about the relations between metrics/code smells and refactoring activities performed by developers. In other words, the characteristics of code components increasing/decreasing their chances of being object of refactoring operations are still unknown. This paper aims at bridging this gap. Specifically, we mined the evolution history of three Java open source projects to investigate whether refactoring activities occur on code components for which certain indicators such as quality metrics or the presence of smells as detected by tools suggest there might be need for refactoring operations. Results indicate that, more often than not, quality metrics do not show a clear relationship with refactoring. In other words, refactoring operations are generally focused on code components for which quality metrics do not suggest there might be need for refactoring operations. Finally, 42% of refactoring operations are performed on code entities affected by code smells. However, only 7% of the performed operations actually remove the code smells from the affected class. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Bavota, Gabriele] Free Univ Bozen Bolzano, Bolzano, Italy.
   [De Lucia, Andrea; Palomba, Fabio] Univ Salerno, Fisciano, SA, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
C3 Free University of Bozen-Bolzano; University of Salerno; University of
   Sannio; University of Molise
RP Bavota, G (corresponding author), Free Univ Bozen Bolzano, Bolzano, Italy.
EM gabriele.bavota@unibz.it
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021
OI De Lucia, Andrea/0000-0002-4238-1425; Palomba,
   Fabio/0000-0001-9337-5116; Di Penta, Massimiliano/0000-0002-0340-9747;
   BAVOTA, Gabriele/0000-0002-2216-3148
CR Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2007, P WORKSH REF TOOLS W
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Atkinson DC, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P663, DOI 10.1109/APSEC.2005.76
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bavota Gabriele, 2013, EMPIR SOFTW ENG, V19, P1
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CASAIS E, 1992, LECT NOTES COMPUT SC, V615, P114, DOI 10.1007/BFb0053033
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CRAWFORD SG, 1985, J SYST SOFTWARE, V5, P37, DOI 10.1016/0164-1212(85)90005-6
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kim M., 2012, P 20 INT S FDN SOFTW
   Leitch R, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P309, DOI 10.1109/METRIC.2003.1232477
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Maruyama K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P236, DOI 10.1109/ICSE.1999.841013
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Opdyke W.F., 1992, Refactoring Object-Oriented Frameworks
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ratzinger J., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083155
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
NR 52
TC 142
Z9 146
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2015
VL 107
BP 1
EP 14
DI 10.1016/j.jss.2015.05.024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OE
UT WOS:000358699700001
DA 2024-07-18
ER

PT J
AU Daraghmi, EY
   Yuan, SM
AF Daraghmi, Eman Yasser
   Yuan, Shyan-Ming
TI A small world based overlay network for improving dynamic load-balancing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Diffusion; Distributed systems; Dynamic load-balancing
AB Load-balancing algorithms play a key role in improving the performance of distributed-computing-systems that consist of heterogeneous nodes with different capacities. The performance of load-balancing algorithms and its convergence-rate deteriorate as the number-of-nodes in the system, the network-diameter, and the communication-overhead increase. Moreover, the load-balancing technical-factors significantly affect the performance of rebalancing the load among nodes. Therefore, we propose an approach that improves the performance of load-balancing algorithms by considering the load-balancing technical-factors and the structure of the network that executes the algorithm. We present the design of an overlay network, namely, functional small world (FSW) that facilitates efficient load-balancing in heterogeneous systems. The FSW achieves the efficiency by reducing the number-of-nodes that exchange their information, decreasing the network diameter, minimizing the communication-overhead, and decreasing the time-delay results from the tasks remigration process. We propose an improved load-balancing algorithm that will be effectively executed within the constructed FSW, where nodes consider the capacity and calculate the average effective-load. We compared our approach with two significant diffusion methods presented in the literature. The simulation results indicate that our approach considerably outperformed the original neighborhood approach and the nearest neighbor approach in terms of response time, throughput, communication overhead, and movements cost. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Daraghmi, Eman Yasser; Yuan, Shyan-Ming] Natl Chiao Tung Univ, Dept Comp Sci, DCS Lab, Hsinchu 300, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Yuan, SM (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, DCS Lab, Hsinchu 300, Taiwan.
EM eman.yasser85@gmail.com; smyuan@cs.nctu.edu.tw
RI Yuan, Shyan-Ming/O-1809-2013
OI Yuan, Shyan-Ming/0000-0002-3621-9528
CR Abdelmaboud A, 2015, J SYST SOFTWARE, V101, P159, DOI 10.1016/j.jss.2014.12.015
   Adolphs C.P., 2012, P ANN ACM S PRINC DI, P135, DOI [10.1145/2332432.2332460, DOI 10.1145/2332432.2332460]
   Akbari H., 2012, PODC, P271
   [Anonymous], 2010, ARIMA
   Bahi J. M., 2007, IEEE INT PAR DISTR P, P1
   Boillat J. E., 1990, Concurrency: Practice and Experience, V2, P289, DOI 10.1002/cpe.4330020403
   Chang HT, 2014, J SYST SOFTWARE, V93, P102, DOI 10.1016/j.jss.2014.02.057
   Chwa HS, 2015, J SYST SOFTWARE, V101, P15, DOI 10.1016/j.jss.2014.11.019
   CYBENKO G, 1989, J PARALLEL DISTR COM, V7, P279, DOI 10.1016/0743-7315(89)90021-X
   Daraghmi EY, 2014, COMPUT HUM BEHAV, V30, P273, DOI 10.1016/j.chb.2013.09.014
   Daraghmi EY, 2013, INT CONF COMP SCI, P275, DOI 10.1109/CSIT.2013.6588792
   Elsasser R., 2002, INT PAR DISTR PROC S, P1530
   Fang YQ, 2009, 2009 WASE INTERNATIONAL CONFERENCE ON INFORMATION ENGINEERING, ICIE 2009, VOL II, P26, DOI 10.1109/ICIE.2009.79
   Ganesan P., 2004, P 30 INT C VER LARG, P444
   Howell F., 1998, Simulation Series, V30, P51
   Hu YF, 1999, PARALLEL COMPUT, V25, P417, DOI 10.1016/S0167-8191(99)00002-2
   Hui C., 1996, INT C PAR PROC, P140
   Hui CC, 1997, J PARALLEL DISTR COM, V43, P139, DOI 10.1006/jpdc.1997.1337
   Hui CC, 1999, IEEE T PARALL DISTR, V10, P1118, DOI 10.1109/71.809572
   Hui KYK, 2006, COMPUT NETW, V50, P2727, DOI 10.1016/j.comnet.2005.10.010
   Karger D.R., 2004, SPAA, P36
   Luo YF, 2015, J SYST SOFTWARE, V101, P86, DOI 10.1016/j.jss.2014.11.038
   Luque E., 1995, Proceedings Euromicro Workshop on Parallel and Distributed Processing, P43, DOI 10.1109/EMPDP.1995.389156
   Meyerhenke Henning, 2009, Proceedings of the 2009 IEEE 15th International Conference on Parallel and Distributed Systems (ICPADS 2009), P150, DOI 10.1109/ICPADS.2009.114
   Neelakantan P., 2012, INT J DISTRIB PARALL, V3, P229
   Peixoto TP, 2014, FIGSHARE, DOI DOI 10.6084/M9.FIGSHARE.1164194
   Tada Harumasa, 2011, 2011 Tenth International Symposium on Autonomous Decentralized Systems (ISADS), P227, DOI 10.1109/ISADS.2011.30
   TVERSKY A, 1977, PSYCHOL REV, V84, P327, DOI 10.1037/h0026750
   Vatsa A, 2007, ADCOM 2007: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTING AND COMMUNICATIONS, P553, DOI 10.1109/ADCOM.2007.27
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Zomaya AY, 2001, IEEE T PARALL DISTR, V12, P899, DOI 10.1109/71.954620
NR 31
TC 39
Z9 39
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2015
VL 107
BP 187
EP 203
DI 10.1016/j.jss.2015.06.001
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OE
UT WOS:000358699700011
DA 2024-07-18
ER

PT J
AU Cai, HP
   Santelices, R
AF Cai, Haipeng
   Santelices, Raul
TI A comprehensive study of the predictive accuracy of dynamic
   change-impact analysis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Impact analysis; Impact prediction; Accuracy study
ID TOOL
AB The correctness of software is affected by its constant changes. For that reason, developers use change-impact analysis to identify early the potential consequences of changing their software. Dynamic impact analysis is a practical technique that identifies potential impacts of changes for representative executions. However, it is unknown how reliable its results are because their accuracy has not been studied. This paper presents the first comprehensive study of the predictive accuracy of dynamic impact analysis in two complementary ways. First, we use massive numbers of random changes across numerous Java applications to cover all possible change locations. Then, we study more than 100 changes from software repositories, which are representative of developer practices. Our experimental approach uses sensitivity analysis and execution differencing to systematically measure the precision and recall of dynamic impact analysis with respect to the actual impacts observed for these changes. Our results for both types of changes show that the most cost-effective dynamic impact analysis known is surprisingly inaccurate with an average precision of 38-50% and average recall of 50-56% in most cases. This comprehensive study offers insights on the effectiveness of existing dynamic impact analyses and motivates the future development of more accurate impact analyses. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Cai, Haipeng; Santelices, Raul] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Cai, HP (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM hcai@nd.edu; rsanteli@nd.edu
RI Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970
FU ONR [N000141410037]
FX This work was partially supported by ONR Award N000141410037 to the
   University of Notre Dame.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Arnold Robert S., 1996, Software Change Impact Analysis
   Breech B, 2004, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSM.2004.1357834
   Breech B, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P143, DOI 10.1109/CSMR.2005.1
   Breech B, 2006, PROC IEEE INT CONF S, P55
   Cai H., 2014, ASE 2014 P 29 ACMIEE, P343
   Cai HP, 2014, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM.2014.25
   Cai HP, 2014, INT CONF SOFTW SECUR, P48, DOI 10.1109/SERE.2014.18
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Goradia T., 1993, SIGSOFT Software Engineering Notes, V18, P171, DOI 10.1145/174146.154269
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Hattori L, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P513, DOI 10.1109/ICIS.2008.104
   Hoffman K, 2009, ACM SIGPLAN NOTICES, V44, P453, DOI 10.1145/1543135.1542527
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Jiang SY, 2014, IEEE INT WORK C SO, P145, DOI 10.1109/SCAM.2014.23
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Lam P, 2011, CET US COMP INF WORK
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Law J, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P430, DOI 10.1109/ISSRE.2003.1251064
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   LEHNERT S., 2011, REV SOFTWARE CHANGE
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Maletic JI, 2004, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2004.1357805
   Masri W, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P23
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Maia MCO, 2010, EUR CON SFTWR MTNCE, P252, DOI 10.1109/CSMR.2010.48
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Rajlich V., 2011, Software Engineering: The Current Practice
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Ramanathan MK, 2006, IEEE INT CONF AUTOM, P241
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rodrigues G.N., 2005, Proceedings of Workshop on Architecting Dependable Systems, P1
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Saltelli A., 2009, SENSITIVITY ANAL
   Santelices Raul, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P429, DOI 10.1109/ICST.2010.29
   Santelices R., 2013, Proceedings of ACM SIGPLAN International Workshop on State Of the Art in Java Program Analysis, P13
   Santelices R., 2007, P INT C AUT SOFTW EN, P343
   Santelices R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1269, DOI 10.1109/ICSE.2013.6606695
   Santelices R, 2013, SOFTW TEST VERIF REL, V23, P499, DOI 10.1002/stvr.1501
   Stoerzer Maximilian., 2006, P 14 ACM SIGSOFT INT, P57
   Sumner W.N., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P309
   Sumner WN, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P272, DOI 10.1109/ICSE.2013.6606573
   Tao Y., 2012, P ACM SIGSOFT 20 INT
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Vysochanskij D., 1980, Theory of Probability and Mathematical Statistics, V21, P25
   Wagner S., 2007, Proc. International Workshop on Predictor Models in Software Engineering PROMISE'07, P3, DOI [10.1109/PROMISE.2007.7., DOI 10.1109/PROMISE.2007.7]
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhang Xiangyu., 2005, ESECFSE 13, P197
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 72
TC 15
Z9 17
U1 4
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 248
EP 265
DI 10.1016/j.jss.2015.02.018
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500016
DA 2024-07-18
ER

PT J
AU Lopez-Herrejon, RE
   Linsbauer, L
   Galindo, JA
   Parejo, JA
   Benavides, D
   Segura, S
   Egyed, A
AF Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Galindo, Jose A.
   Parejo, Jose A.
   Benavides, David
   Segura, Sergio
   Egyed, Alexander
TI An assessment of search-based techniques for reverse engineering feature
   models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Feature model; Reverse engineering; Search Based Software Engineering
ID STATISTICAL TESTS; EVOLUTIONARY
AB Successful software evolves from a single system by adding and changing functionality to keep up with users' demands and to cater to their similar and different requirements. Nowadays it is a common practice to offer a system in many variants such as community, professional, or academic editions. Each variant provides different functionality described in terms of features. Software Product Line Engineering (SPLE) is an effective software development paradigm for this scenario. At the core of SPLE is variability modelling whose goal is to represent the combinations of features that distinguish the system variants using feature models, the de facto standard for such task. As SPLE practices are becoming more pervasive, reverse engineering feature models from the feature descriptions of each individual variant has become an active research subject. In this paper we evaluated, for this reverse engineering task, three standard search based techniques (evolutionary algorithms, hill climbing, and random search) with two objective functions on 74 SPLs. We compared their performance using precision and recall, and found a clear trade-off between these two metrics which we further reified into a third objective function based on F-beta, an information retrieval measure, that showed a clear performance improvement. We believe that this work sheds light on the great potential of search-based techniques for SPLE tasks. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Lopez-Herrejon, Roberto E.; Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, A-4040 Linz, Austria.
   [Galindo, Jose A.; Parejo, Jose A.; Benavides, David; Segura, Sergio] Univ Seville, Dept Comp Languages & Syst, E-41012 Seville, Spain.
C3 Johannes Kepler University Linz; University of Sevilla
RP Lopez-Herrejon, RE (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Altenbergerstr 69, A-4040 Linz, Austria.
EM roberto.lopez@jku.at; lukas.linsbauer@jku.at; jagalindo@us.es;
   japarejo@us.es; benavides@us.es; sergiosegura@us.es;
   alexander.egyed@jku.at
RI Segura, Sergio/A-9615-2011; Maestre, Jose Antonio Parejo/A-2822-2009;
   Benavides, David/K-2791-2014; Galindo, Jose A/F-7232-2010; Egyed,
   Alexander/E-2632-2017
OI Segura, Sergio/0000-0001-8816-6213; Maestre, Jose Antonio
   Parejo/0000-0002-4708-4606; Benavides, David/0000-0002-8449-3273;
   Galindo, Jose A/0000-0001-9293-9784; Egyed,
   Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) project [P 25289-N15]; Lise Meitner
   Fellowship [M1421-N15]; Marie Curie Actions - Intra-European Fellowship
   (IEF) [254965]; European Commission (FEDER); Spanish Government under
   TAPAS [TIN2012-32273]; Andalusian Government under the Talentia program;
   COPAS project [TIC-1867]
FX This research is partially funded by the Austrian Science Fund (FWF)
   project P 25289-N15 and Lise Meitner Fellowship M1421-N15, and Marie
   Curie Actions - Intra-European Fellowship (IEF) project number 254965.
   This work has been partially supported by the European Commission
   (FEDER), by the Spanish Government under TAPAS (TIN2012-32273) project
   and by the Andalusian Government under the Talentia program, and COPAS
   project (TIC-1867). We thank Michael Affenzeller and his team for their
   support with HeuristicLab for the earlier implementation of our work.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Acher M, 2014, SOFTW SYST MODEL, V13, P1367, DOI 10.1007/s10270-013-0364-2
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D., 2013, SEMINAL CONTRIBUTION, P361, DOI DOI 10.1007/978-3-642-36926-1
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten., 2012, Proceedings of the 16th International Software Product Line Conference, V2, P233
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT
   Czarnecki K., 2007, FEATURE DIAGRAMS LOG, P23
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   de Oliveira Barros M., 2011, 00062011 U FED EST R
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   Kang Kyo C, 1990, Technical Report
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Li Yi, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P141, DOI 10.1109/RE.2012.6345798
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Lopez-Herrejon R.E., 2014, CORR
   Lopez-Herrejon R.E., 2014, COMP ANAL CLASSICAL, P387
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Luke S, 2009, Essentials of Metaheuristics
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poli R., 2008, A Field Guide to Genetic Programming
   Sannier N, 2013, IEEE INT CONF AUTOM, P580, DOI 10.1109/ASE.2013.6693116
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Zave P.:., FAQ Sheet on Feature Interaction
NR 48
TC 40
Z9 42
U1 0
U2 23
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 353
EP 369
DI 10.1016/j.jss.2014.10.037
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500024
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, ZY
   Avgeriou, P
   Liang, P
AF Li, Zengyang
   Avgeriou, Paris
   Liang, Peng
TI A systematic mapping study on technical debt and its management
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Systematic mapping study; Technical debt; Technical debt management
ID SOFTWARE ARCHITECTURE
AB Context: Technical debt (TD) is a metaphor reflecting technical compromises that can yield short-term benefit but may hurt the long-term health of a software system.
   Objective: This work aims at collecting studies on TD and TD management (TDM), and making a classification and thematic analysis on these studies, to obtain a comprehensive understanding on the TD concept and an overview on the current state of research on TDM.
   Method: A systematic mapping study was performed to identify and analyze research on TD and its management, covering publications between 1992 and 2013.
   Results: Ninety-four studies were finally selected. TD was classified into 10 types, 8 TDM activities were identified, and 29 tools for TDM were collected.
   Conclusions: The term "debt" has been used in different ways by different people, which leads to ambiguous interpretation of the term. Code-related TD and its management have gained the most attention. There is a need for more empirical studies with high-quality evidence on the whole TDM process and on the application of specific TDM approaches in industrial settings. Moreover, dedicated TDM tools are needed for managing various types of TD in the whole TDM process. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Li, Zengyang; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
   [Liang, Peng] Wuhan Univ, State Key Lab Software Engn, Sch Comp, Wuhan 430072, Peoples R China.
   [Liang, Peng] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 University of Groningen; Wuhan University; Vrije Universiteit Amsterdam
RP Li, ZY (corresponding author), Univ Groningen, Dept Math & Comp Sci, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM zengyangli@gmail.com
RI peng, liang/HKE-0294-2023
OI Liang, Peng/0000-0002-2056-5346; Avgeriou, Paris/0000-0002-7101-0754
FU AFR-Luxembourg [895528]; NSFC [61472286]
FX This work is partially supported by AFR-Luxembourg under the contract
   no. 895528 and the NSFC under the grant no. 61472286. We are thankful to
   Apostolos Ampatzoglou and Sara Mandavi-Hezavehi for reviewing an earlier
   version of this paper. We are also thankful to the anonymous reviewers
   for their valuable and constructive comments.
CR Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], SOFTW ENG PROD QUA 1
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Barton Brent, 2010, Cutter IT Journal, V23, P19
   BASILI VR, 1992, SOFTWARE MODELING ME, P24
   Birkeland JO, 2010, LECT NOTES BUS INF, V48, P325
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Chen Lianping, 2010, 14 INT C EVALUATION
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Kitchenham Barbara, 2007, P 28 INT C SOFTW ENG
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martin A, 2009, AGILE 2009 CONFERENCE, P33, DOI 10.1109/AGILE.2009.68
   McConnell S., 2008, MANAGING TECHNICAL D
   Rooney David, 2010, Cutter IT Journal, V23, P16
   Shahin M, 2014, J SYST SOFTWARE, V94, P161, DOI 10.1016/j.jss.2014.03.071
   Sutherland J., 2009, HR Wallingford Report TR173, P1
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tom Edith, 2012, CONSOLIDATED UNDERST
   Uy E, 2008, AGILE 2008, PROCEEDINGS, P345, DOI 10.1109/Agile.2008.71
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
NR 33
TC 373
Z9 392
U1 12
U2 47
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2015
VL 101
BP 193
EP 220
DI 10.1016/j.jss.2014.12.027
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB3CY
UT WOS:000349507000015
OA Green Published
DA 2024-07-18
ER

PT J
AU Park, H
   Noh, SH
   Yoo, C
AF Park, Hyunchan
   Noh, Sam H.
   Yoo, Chuck
TI O1FS: Flash file system with O(1) crash recovery time
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE O1FS; Crash recovery technique; NAND flash file system
ID STORAGE
AB The crash recovery time of NAND flash file systems increases with flash memory capacity. Crash recovery usually takes several minutes for a gigabyte of flash memory and becomes a serious problem for mobile devices. To address this problem, we propose a new flash file system, O1FS. A key concept of our system is that a small number of blocks are modified exclusively until we change the blocks explicitly. To recover from crashes, O1FS only accesses the most recently modified blocks rather than the entire flash memory. Therefore, the crash recovery time is bounded by the size of the blocks. We develop mathematical models of crash recovery techniques and prove that the time complexity of O1FS is O(1), whereas that of other methods is proportional to the number of blocks in the flash memory. Our evaluation shows that the crash recovery of O1FS is about 18.5 times faster than that of a state-of-the-art method. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Park, Hyunchan] Korea Univ, Grad Sch Convergence Informat Technol, Seoul 136713, South Korea.
   [Noh, Sam H.] Hongik Univ, Sch Comp & Informat Engn, Seoul 121791, South Korea.
   [Yoo, Chuck] Korea Univ, Coll Informat & Commun, Seoul 136713, South Korea.
C3 Korea University; Hongik University; Korea University
RP Yoo, C (corresponding author), Korea Univ, Coll Informat & Commun, Seoul 136713, South Korea.
EM chuckyoo@os.korea.ac.kr
FU National Research Foundation of Korea (NRF) - Korean government (MEST)
   [2010-0029180]; KREONET
FX The authors would like to thank the anonymous reviewers of the Journal
   of Systems and Software for their valuable comments and suggestions to
   improve the quality of this paper. Kiman Kim and Seungyup Kang
   contributed implementations and experiments. This work was supported by
   a National Research Foundation of Korea (NRF) grant funded by the Korean
   government (MEST) (No. 2010-0029180) with KREONET.
CR Agrawal Nitin, 2008, P USENIX ANN TECHN C, P57
   AlephOneLtd, 2002, YAFFS NAND FLASH FIL
   [Anonymous], 2001, OTT LIN S
   Bird T.R., 2004, P OTT LIN S, V1, P79
   Chen F, 2009, PERF E R SI, V37, P181
   Chin-Hsien Wu, 2006, ACM Transaction on Storage, V2, P449, DOI 10.1145/1210596.1210600
   Chung TS, 2008, J SYST ARCHITECT, V54, P935, DOI 10.1016/j.sysarc.2008.03.007
   Chung TS, 2007, J SYST ARCHITECT, V53, P889, DOI 10.1016/j.sysarc.2007.02.005
   Chung TS, 2009, J SYST ARCHITECT, V55, P332, DOI 10.1016/j.sysarc.2009.03.005
   Deng YH, 2014, FUTURE GENER COMP SY, V32, P338, DOI 10.1016/j.future.2013.09.002
   Deng YH, 2011, J SYST ARCHITECT, V57, P214, DOI 10.1016/j.sysarc.2010.12.003
   Douglis Fred., 1994, P 1 USENIX C OPERATI, P3
   Gal E, 2005, ACM COMPUT SURV, V37, P138, DOI 10.1145/1089733.1089735
   Hunter A., 2008, A brief introduction to the design of UBIFS
   Johnson M.K., 2010, RED HATS NEW JOURNAL
   Jung D, 2008, ACM T MULTIM COMPUT, V5, DOI 10.1145/1404880.1404889
   Jung H, 2008, IEEE T CONSUM ELECTR, V54, P1215, DOI 10.1109/TCE.2008.4637609
   KAWAGUCHI A, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P155
   Kwon O, 2011, J SYST SOFTWARE, V84, P1507, DOI 10.1016/j.jss.2011.02.042
   Lim SH, 2006, IEEE T COMPUT, V55, P906, DOI 10.1109/TC.2006.96
   Micron, 2013, NAND FLAH PROD MICR
   Norcott O.W.D., 2005, IOZONE FILE SYSTEM B
   Park SO, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2423636.2423641
   ROSENBLUM M, 1992, ACM T COMPUT SYST, V10, P26, DOI 10.1145/146941.146943
   Smith K. A., 1997, Performance Evaluation Review, V25, P203, DOI 10.1145/258623.258689
   Wang WN, 2012, J SYST SOFTWARE, V85, P2553, DOI 10.1016/j.jss.2012.05.072
   Wu CH, 2012, ACM T DES AUTOMAT EL, V17, DOI 10.1145/2159542.2159546
   Yim Keun Soo., 2005, Proceedings of the 2005 ACM symposium on Applied computing, P843
NR 28
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2014
VL 97
BP 86
EP 96
DI 10.1016/j.jss.2014.07.008
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR1NS
UT WOS:000343352500005
DA 2024-07-18
ER

PT J
AU Piro, G
   Cianci, I
   Grieco, LA
   Boggia, G
   Camarda, P
AF Piro, G.
   Cianci, I.
   Grieco, L. A.
   Boggia, G.
   Camarda, P.
TI Information centric services in Smart Cities
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Information Centric Networking; Smart Cities; NDN
AB A "Smart City" is intended as an urban environment which, supported by pervasive ICT systems, is able to offer advanced and innovative services to citizens in order to improve the overall quality of their life. In this context, the present contribution formulates a pioneering proposal, by drawing an advanced information centric platform for supporting the typical ICT services of a Smart City. It can easily embrace all available and upcoming wireless technologies, while enforcing, at the same time, ubiquitous and secure applications in many domains, such as, e-government and public administration, intelligent transportation systems, public safety, social, health-care, educational, building and urban planning, environmental, and energy and water management applications. All the details of the proposed approach have been carefully described by means of pragmatical use-cases, such as the management of administrative procedures, the starting of a new business in a given country, the navigation assistance, the signaling of an urban accident aimed at improving the public safety, the reservation of a medical examination, the remote assistance of patients, and the management of waste in a city. This description makes evident the real effectiveness of the present proposal in future urban environments. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Piro, G.; Cianci, I.; Grieco, L. A.; Boggia, G.; Camarda, P.] Politecn Bari, Dept Elect & Informat Engn DEI, I-70125 Bari, Italy.
C3 Politecnico di Bari
RP Piro, G (corresponding author), Politecn Bari, Dept Elect & Informat Engn DEI, V Orabona 4, I-70125 Bari, Italy.
EM g.piro@poliba.it; i.cianci@poliba.it; a.grieco@poliba.it;
   g.boggia@poliba.it; camarda@poliba.it
OI Piro, Giuseppe/0000-0003-3783-5565
FU PON projects [RES NOVAE, ERMES-01-03113, DSS-01-02499, EUR06-01-02238];
   Italian MIUR; European Union (European Social Fund)
FX This work was supported by the PON projects (RES NOVAE, ERMES-01-03113,
   DSS-01-02499 and EUR06-01-02238) funded by the Italian MIUR and by the
   European Union (European Social Fund).
CR Adamson B., 2008, 5401 RFC NACK BUILD
   Ahlgren B, 2012, IEEE COMMUN MAG, V50, P26, DOI 10.1109/MCOM.2012.6231276
   Andreini F., 2011, P FUT NETW MOB SUMM
   [Anonymous], 2008, Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile
   Anthopoulos L., 2010, P IEEE INT C INT ENV
   Anttiroiko A V., 2013, J. AI Soc, V29, P1, DOI DOI 10.1007/S00146-013-0464-0
   Balakrishna C., 2012, P IEE INT C NEXT GEN
   Barba C., 2012, P IEEE S INT VEH 4 A
   Bari MF, 2012, IEEE COMMUN MAG, V50, P44, DOI 10.1109/MCOM.2012.6384450
   Caragliu A., 2009, P CENTR EUR C REG SC
   Cardone G, 2013, IEEE COMMUN MAG, V51, P112, DOI 10.1109/MCOM.2013.6525603
   CCNx, CONT CENTR NETW IMPL
   Chourabi H., 2012, P HAW INT C SYST SCI
   Cianci I., 2012, P INT WORKSH TECHN A
   CitySKD website, 2013, CITY SERVICE DEV KIT
   Clark DD., 2006, J COMMUNICATIONS STR, V3, P1
   Coe A, 2001, SOC SCI COMPUT REV, V19, P80, DOI 10.1177/089443930101900107
   Comerio M., 2013, INT J MANAG INF TECH, V4, P166
   D. G. European Commission, 2010, DIG PUBL SERV EUR PU
   Dahlman E., 2011, 4G LTE LTE ADV MOB B
   Dannewitz C, 2013, COMPUT COMMUN, V36, P721, DOI 10.1016/j.comcom.2013.01.009
   David B., 2012, P IEEE INT C COMP TE
   DigitalCities website, 2013, DIGITAL CITIES
   Drib B., 2009, P INT C WIR VITAE AA
   ELLIOT website, 2010, EXPT LIVING LAB INTE
   Elmangoush A., 2013, P IEEE INT C INN INF
   European Commission CT, 2012, DG COMM NETW EGOVERN
   Feldmann A, 2007, ACM SIGCOMM COMP COM, V37, P59, DOI 10.1145/1273445.1273453
   Ferreira J., 2011, P IEEE INT S IND EL
   FIArch Group, 2010, FUND LIM CURR INT PA
   FINEST website, 2013, FUT INT EN OPT TRANS
   FIREBALL website, 2012, SMART CIT INN EC SUS
   Fotiou N., 2010, P INT C BROADB COMM
   Giffinger Rudolf., 2007, City-ranking of European medium-sized cities
   Hall R.E., 2000, P INT LIF EXT TECHN
   Harrison C, 2010, IBM J RES DEV, V54, DOI 10.1147/JRD.2010.2048257
   Hernández-Muñoz JM, 2011, LECT NOTES COMPUT SC, V6656, P447, DOI 10.1007/978-3-642-20898-0_32
   Hersent O., 2012, The Internet of Things: Key Applications and Protocols, DOI DOI 10.1002/9781119958352.CH5
   Idowu S., 2012, THESIS LULEA U TECHN
   IEEE, 2009, 1609 IEEE
   IES website, 2013, INT EN SERV CIT EUR
   IOE website, 2011, INT EN EL MOB
   Jacobson V., 2009, P ACM INT C EM NETW
   Jacobson V., 2009, P 2009 WORKSH REARCH, P1
   Khekare G., 2013, P IEEE INT C AUT COM
   Kim J., 2011, P IEEE INT C CONS EL
   Komninos Nicos, 2011, P ECHALLENGES C E 20
   Koponen T., 2007, P ACM C APPL TECHN A
   Kwon O., 2007, P INT C UB INT COMP
   Leben A., 2004, P 5 IFIP INT C KMGOV
   Leguay J., 2011, P 4 EUR C SERV BAS I
   Lei K., 2012, P IEEE INT COMP SCI
   LiveCity website, 2012, LIVE VIDEO TO VIEDO
   Martínez-Ballesté A, 2013, IEEE COMMUN MAG, V51, P136, DOI 10.1109/MCOM.2013.6525606
   Martinez-Julia P., 2010, P IEEE INT C INT MUL
   Matsubara D, 2013, IEEE COMMUN MAG, V51, P112, DOI 10.1109/MCOM.2013.6476874
   Melazzi N. B, 2012, P FUT NETW MOB SUMM, P1
   Melazzi N.B., 2013, IEEE COMSOC MMTC E L, P17
   Mobincity website, 2013, SMART MOBILITY SMART
   NDN, 2012, NAM DAT NETW PROJ
   Odendaal N., 2003, Computers, Environment and Urban Systems, V27, P585, DOI 10.1016/S0198-9715(03)00016-4
   OUTSMART website, 2013, OUTSMART
   Pan JL, 2011, IEEE COMMUN MAG, V49, P26, DOI 10.1109/MCOM.2011.5936152
   Pentikousis K., 2014, ICN BASELINE SCANARI
   PERIPHERIA website, 2012, SMART PER CIT SUST L
   Piro G, 2014, T EMERG TELECOMMUN T, V25, P392, DOI 10.1002/ett.2741
   RELYonlT website, 2013, RES EXPT DEPENDABILI
   SafeCity website, 2013, FUT INT APPL PUBL SA
   Sanchez L., 2011, P IEEE FUT NETW MOB
   Schaffers H, 2011, LECT NOTES COMPUT SC, V6656, P431, DOI 10.1007/978-3-642-20898-0_31
   Smetters D.K., 2009, TR20091
   Srinivasan S., 2012, P IEEE INT C COMM IC
   Stefansson G., 2007, P 19 NOFOMA C REYKJ
   Su K., 2011, P INT C EL COMM CONT
   Tortelli M., 2014, P IEEE CONS COMM NET
   TV-RING website, 2012, TESTBEDS CONNTED TV
   Walke B.H., 2006, IEEE 802 Wireless Systems: Protocols, Multi-hop Mesh/Relaying, Performance and Spectrum Coexistence
   Wang L., 2012, P ACM WORKSH EM NAM
   Wimmer M., 2003, LECT NOTES COMPUTER
   Zhang J., 2012, P IEEE 3 INT C SMART
   ZHANG L, 2010, TR201002 PARC
   Zhang X., 2011, P IEEE INT C NETW PR
NR 82
TC 180
Z9 191
U1 5
U2 202
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2014
VL 88
BP 169
EP 188
DI 10.1016/j.jss.2013.10.029
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 297LV
UT WOS:000330257800011
DA 2024-07-18
ER

PT J
AU Tahir, A
   Tosi, D
   Morasca, S
AF Tahir, Abbas
   Tosi, Davide
   Morasca, Sandro
TI A systematic review on the functional testing of semantic web services
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Functional testing; Semantic web services; Testing approach; Systematic
   literature review
ID VERIFICATION; VALIDATION
AB Semantic web services are gaining more attention as an important element of the emerging semantic web. Therefore, testing semantic web services is becoming a key concern as an essential quality assurance measure. The objective of this systematic literature review is to summarize the current state of the art of functional testing of semantic web services by providing answers to a set of research questions. The review follows a predefined procedure that involves automatically searching 5 well-known digital libraries. After applying the selection criteria to the results, a total of 34 studies were identified as relevant. Required information was extracted from the studies and summarized. Our systematic literature review identified some approaches available for deriving test cases from the specifications of semantic web services. However, many of the approaches are either not validated or the validation done lacks credibility. We believe that a substantial amount of work remains to be done to improve the current state of research in the area of testing semantic web services. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Tahir, Abbas; Tosi, Davide; Morasca, Sandro] Univ Insubria, Dept Theoret & Appl Sci, I-21100 Como, Italy.
   [Tahir, Abbas] Siemens AG, Corp Technol, D-81739 Munich, Germany.
C3 University of Insubria; Siemens AG; Siemens Germany
RP Tahir, A (corresponding author), Univ Insubria, Dept Theoret & Appl Sci, Via Mazzini 5, I-21100 Como, Italy.
EM tahir_a@acm.org; davide.tosi@uninsubria.it; sandro.morasca@uninsubria.it
RI TOSI, DAVIDE/AAI-1310-2020
OI TOSI, DAVIDE/0000-0003-3815-2512; Morasca, Sandro/0000-0003-4598-7024
CR Alderson P, 2003, COCHRANE REV HDB 4 2, V4.2.1
   [Anonymous], WEB SERV SEM WSDL S
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], P 2 INT C COMP COMM
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Askarunisa A., 2011, 2011 International Conference on Recent Trends in Information Technology (ICRTIT 2011), P1215, DOI 10.1109/ICRTIT.2011.5972354
   Bai XY, 2007, LECT NOTES COMPUT SC, V4608, P258
   Bo Yu, 2010, 2010 International Conference on Computer Application and System Modeling (ICCASM 2010), P344, DOI 10.1109/ICCASM.2010.5622607
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Chen B, 2009, 2009 ASIA-PACIFIC CONFERENCE ON INFORMATION PROCESSING (APCIP 2009), VOL 1, PROCEEDINGS, P415, DOI 10.1109/APCIP.2009.109
   Chien-Hung Liu, 2011, Proceedings of the 2011 International Conference on Machine Learning and Cybernetics (ICMLC 2011), P897, DOI 10.1109/ICMLC.2011.6016836
   Chunyan Ma, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P232, DOI 10.1109/QSIC.2010.30
   Dai GL, 2007, P INT COMP SOFTW APP, P517
   DAML, 2000, DAML OIL
   Denaro G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P253, DOI 10.1145/1595696.1595734
   Dong WL, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND NATURAL COMPUTING, VOL II, P221, DOI 10.1109/CINC.2009.227
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Friedman G., 2002, Software Engineering Notes, V27, P134, DOI 10.1145/566171.566192
   Goli Nobul Reddy, 2006, ADCOM 2006: Autonomic Computing Fourteenth International Conference on Advanced Computing and Communications, P445
   Grigorova Vladislava., 2006, Information Theories and Applications, V13, P183
   Hull JM, 2008, CONSERV GENET, V9, P1357, DOI 10.1007/s10592-007-9489-6
   JabRef, 2011, JABR BIBL REF MAN
   Jokhio MS, 2009, IEEE AUS SOFT ENGR, P54, DOI 10.1109/ASWEC.2009.38
   Ju C, 2008, J SE U NATURAL SCI E, V4, P012
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Lee SF, 2008, PROC ANNU SIMUL SYMP, P149, DOI 10.1109/ANSS-41.2008.13
   Li BX, 2010, INT J SOFTW ENG KNOW, V20, P921, DOI 10.1142/S0218194010004955
   Mandell DJ, 2003, LECT NOTES COMPUT SC, V2870, P227
   Noikajana Siripol, 2008, Proceedings of the 2008 International Conference on Semantic Web & Web Services (SWWS 2008), P171
   Noikajana S, 2008, INT CONF QUAL SOFTW, P321, DOI 10.1109/QSIC.2008.7
   Noikajana S, 2009, P INT COMP SOFTW APP, P115, DOI 10.1109/COMPSAC.2009.25
   Oghabi G., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P548, DOI 10.1109/ICWS.2011.106
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Paradkar AM, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P110
   Park Y, 2009, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2009.24
   Pezze M, 2007, SOFTWARE TESTING ANA
   Ramollari E, 2009, LECT NOTES COMPUT SC, V5554, P593, DOI 10.1007/978-3-642-02121-3_44
   Rui Wang, 2008, 2008 4th International Conference on Next Generation Web Services Practices, P71, DOI 10.1109/NWeSP.2008.20
   Rusli H.M., 2011, COMMUNICATIONS IBIMA
   Shaban Muhammad, 2009, Proceedings of the 2009 Fourth South-East European Workshop on Formal Methods. Formal Methods for Web Services, Formal Methods for Agent-Based Systems (SEEFM 2009), P17, DOI 10.1109/SEEFM.2009.11
   Sinha A., 2006, P 2006 WORKSHOP TEST, P17
   W3C, 2004, WEB SERV GLOSS
   Wang HH, 2009, KNOWL ENG REV, V24, P59, DOI 10.1017/S0269888909000137
   Wang HS, 2009, 2009 ISECS INTERNATIONAL COLLOQUIUM ON COMPUTING, COMMUNICATION, CONTROL, AND MANAGEMENT, VOL II, P1
   Wang XJ, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P1006, DOI 10.1109/ICWS.2009.129
   Wang Y, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/ISADS.2007.54
   Wen-Jie Y, 2009, 2009 2 INT C POW EL, V3, P355
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   World Wide Web Consortium (W3C), 2004, OWL S SEMANTIC MARKU
   Xiaoyan Z, 2008, J BEIJING U AERONAUT, V3
   Xiaoying Bai, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P485, DOI 10.1109/COMPSAC.2009.180
   Xiaoying Bai, 2008, 2008 IEEE International Conference on Web Services (ICWS), P465, DOI 10.1109/ICWS.2008.111
   Yu Ying, 2009, Journal of Beijing University of Aeronautics and Astronautics, V35, P117
   Yu Y, 2007, NWESP 2007: THIRD INTERNATIONAL CONFERENCE ON NEXT GENERATION WEB SERVICES PRACTICES, PROCEEDINGS, P31, DOI 10.1109/NWESP.2007.16
   Yufeng Zhang, 2008, 2008 IEEE International Symposium on Service-Oriented System Engineering, P129, DOI 10.1109/SOSE.2008.35
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
   Zhang T., 2011, MAN SERV SCI MASS 20, P1
NR 60
TC 15
Z9 16
U1 0
U2 29
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2013
VL 86
IS 11
BP 2877
EP 2889
DI 10.1016/j.jss.2013.06.064
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224OQ
UT WOS:000324898300013
DA 2024-07-18
ER

PT J
AU de Roo, A
   Sözer, H
   Bergmans, L
   Aksit, M
AF de Roo, Arjan
   Sozer, Hasan
   Bergmans, Lodewijk
   Aksit, Mehmet
TI MOO: An architectural framework for runtime optimization of multiple
   system objectives in embedded control software
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architectural framework; Multi-objective optimization; Runtime
   adaptation; Embedded systems; Control software
AB Today's complex embedded systems function in varying operational conditions. The control software adapts several control variables to keep the operational state optimal with respect to multiple objectives. There exist well-known techniques for solving such optimization problems. However, current practice shows that the applied techniques, control variables, constraints and related design decisions are not documented as a part of the architecture description. Their implementation is implicit, tailored for specific characteristics of the embedded system, tightly integrated into and coupled with the control software, which hinders its reusability, analyzability and maintainability. This paper presents an architectural framework to design, document and realize multi-objective optimization in embedded control software. The framework comprises an architectural style together with its visual editor and domain-specific analysis tools, and a code generator. The code generator generates an optimizer module specific for the given architecture and it employs aspect-oriented software development techniques to seamlessly integrate this module into the control software. The effectiveness of the framework is validated in the context of an industrial case study from the printing systems domain. (C) 2013 Elsevier Inc. All rights reserved.
C1 [de Roo, Arjan; Bergmans, Lodewijk; Aksit, Mehmet] Univ Twente, NL-7500 AE Enschede, Netherlands.
   [Sozer, Hasan] Ozyegin Univ, Istanbul, Turkey.
C3 University of Twente; Ozyegin University
RP Sözer, H (corresponding author), Ozyegin Univ, Sch Engn, Nisantepe Mah Orman Sk 13, TR-34794 Istanbul, Turkey.
EM hasan.sozer@ozyegin.edu.tr
RI Sözer, Hasan/A-4722-2015; Sözer, Hasan/AAR-8697-2020
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763
FU Netherlands Ministry of Economic Affairs under the Embedded Systems
   Institute program
FX This work has been carried out as part of the OCTOPUS project under the
   responsibility of the Embedded Systems Institute. This project is
   partially supported by the Netherlands Ministry of Economic Affairs
   under the Embedded Systems Institute program.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], 2013, FIND MINIMUM CONSTRA
   [Anonymous], 2003, Multiobjective Optimization-Principles and Case Studies
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Broenink J. F., 1997, Journal A, V38, P22
   Brunato M, 2010, LECT NOTES COMPUT SC, V6073, P232, DOI 10.1007/978-3-642-13800-3_26
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Clements P., 2002, DOCUMENTING SOFTWARE
   Dashofy EM, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P103, DOI 10.1109/WICSA.2001.948416
   Dashofy E, 2007, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSECOMPANION.2007.21
   de Roo A., 2012, THESIS U TWENTE
   ECKENRODE RT, 1965, MANAGE SCI, V12, P180, DOI 10.1287/mnsc.12.3.180
   Ehrgott M., 2002, MULTIPLE CRITERIA OP
   ESI, 2012, OCT PROJ
   Geilen M, 2007, FUND INFORM, V78, P35
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   Hwang C.-L., 1981, Multiple Attribute Decision-Making: Methods and Applications: A State-of-the-Art Survey, V13
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Kleijn C, 2009, 20 SIM 4 1 REFERENCE
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Lui G., 2002, MULTIOBJECTIVE OPTIM
   Maier MW, 2001, COMPUTER, V34, P107, DOI 10.1109/2.917550
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Pareto V., 1896, COURS EC POLITIQUE
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sozer H., 2011, SOFTW QUAL J, P1
   Yoon P., 1995, MULTIPLE ATTRIBUTE D
NR 29
TC 5
Z9 5
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2013
VL 86
IS 10
BP 2502
EP 2519
DI 10.1016/j.jss.2013.04.002
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 220EF
UT WOS:000324564100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, Z
   Zhang, H
   O'Brien, L
   Cai, R
   Flint, S
AF Li, Zheng
   Zhang, He
   O'Brien, Liam
   Cai, Rainbow
   Flint, Shayne
TI On evaluating commercial Cloud services: A systematic review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Cloud Computing; Cloud service evaluation; Systematic literature review
AB Background: Cloud Computing is increasingly booming in industry with many competing providers and services. Accordingly, evaluation of commercial Cloud services is necessary. However, the existing evaluation studies are relatively chaotic. There exists tremendous confusion and gap between practices and theory about Cloud services evaluation.
   Aim: To facilitate relieving the aforementioned chaos, this work aims to synthesize the existing evaluation implementations to outline the state-of-the-practice and also identify research opportunities in Cloud services evaluation.
   Method: Based on a conceptual evaluation model comprising six steps, the systematic literature review (SLR) method was employed to collect relevant evidence to investigate the Cloud services evaluation step by step.
   Results: This SLR identified 82 relevant evaluation studies. The overall data collected from these studies essentially depicts the current practical landscape of implementing Cloud services evaluation, and in turn can be reused to facilitate future evaluation work.
   Conclusions: Evaluation of commercial Cloud services has become a world-wide research topic. Some of the findings of this SLR identify several research gaps in the area of Cloud services evaluation (e.g., Elasticity and Security evaluation of commercial Cloud services could be a long-term challenge), while some other findings suggest the trend of applying commercial Cloud services (e.g., compared with PaaS, IaaS seems more suitable for customers and is particularly important in industry). This SLR study itself also confirms some previous experiences and records new evidence-based software engineering (EBSE) lessons. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Li, Zheng] Australian Natl Univ, NICTA, Sch Comp Sci, Canberra, ACT, Australia.
   [Zhang, He] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhang, He] Geosci Australia, Canberra, ACT, Australia.
   [Flint, Shayne] Australian Natl Univ, Sch Comp Sci, Canberra, ACT, Australia.
   [Cai, Rainbow] Australian Natl Univ, Div Informat, Canberra, ACT, Australia.
C3 Australian National University; Nanjing University; Geoscience
   Australia; Australian National University; Australian National
   University
RP Zhang, H (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM zheng.li@nicta.com.au; dr.hezhang@gmail.com; liamob99@hotmail.com;
   shayne.flint@anu.edu.au
RI Li, Zheng/R-5781-2016
OI Li, Zheng/0000-0002-9704-7651
FU Australian Government
FX NICTA is funded by the Australian Government as represented by the
   Department of Broadband, Communications and the Digital Economy and the
   Australian Research Council through the ICT Centre of Excellence
   program.
CR Alesandre G.D., 2011, UPDATED APP ENGINE P
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   [Anonymous], 14 INT C EV ASS SOFT
   [Anonymous], 2009, DESIGN ANAL EXPT
   [Anonymous], LOOK INSIDE AMAZONS
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], HIGH PERF COMP HPC A
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooks C., 2010, CLOUD COMPUTING BENC
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Feitelson DG, 2007, COMMUN ACM, V50, P24, DOI 10.1145/1297797.1297817
   Ferdman M, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P37
   Foster I., 2008, GRID COMPUTING ENV W, P1
   Google, 2012, GOOGL COMP ENG
   Habib S. M., 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P410, DOI 10.1109/UIC-ATC.2010.48
   Harris D., 2011, WATCH OUT WORLD IBM
   Harris D., 2012, WHAT GOOGLE COMPUTE
   Islam S., 2012, Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering, P85
   Kitchenham B., 2007, Joint Report
   Kitchenham B, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P3
   Kossmann D., 2010, Datenbank-Spektrum, V10, P121
   LEWIS BC, 1985, MIS QUART, V9, P7, DOI 10.2307/249270
   Li Z, 2012, 2012 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GRID COMPUTING (GRID), P164, DOI 10.1109/Grid.2012.15
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Major L., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P21, DOI 10.1049/ic.2011.0003
   Obaidat M., 2010, Fundamentals of Performance Evaluation of Computer and Telecommunication Systems
   Prodan Radu, 2009, Proceedings of the 2009 10th IEEE/ACM International Conference on Grid Computing (GRID), P17, DOI 10.1109/GRID.2009.5353074
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SearchCloudComputing, 2010, TOP 10 CLOUD COMP PR
   Stokes J., 2011, PC IS ORDER CLOUD IS
   Tran VTK, 2011, INT SYMP EMP SOFTWAR, P265, DOI 10.1109/ESEM.2011.35
   Zhang H., 2011, 5 INT S EMP SOFTW EN, P1
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zheng Li, 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P169, DOI 10.1109/CloudCom.2012.6427525
   Zheng Li, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P344, DOI 10.1109/CLOUD.2012.74
NR 42
TC 46
Z9 51
U1 1
U2 61
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2013
VL 86
IS 9
BP 2371
EP 2393
DI 10.1016/j.jss.2013.04.021
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 210YC
UT WOS:000323870300015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, S
   Kang, S
AF Lee, Seonah
   Kang, Sungwon
TI Clustering navigation sequences to create contexts for guiding code
   navigation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code navigation; Programmer interaction histories; Data clustering
   techniques; Data stream mining; Context aware code recommender
ID TASK
AB To guide programmer code navigation, previous approaches such as TeamTracks recommend pieces of code to visit by mining the associations between pieces of code in programmer interaction histories. However, these result in low recommendation accuracy. To create more accurate recommendations, we propose NavClus an approach that clusters navigation sequences from programmer interaction histories. NavClus automatically forms collections of code that are relevant to the tasks performed by programmers, and then retrieves the collections best matched to a programmer's current navigation path. This makes it possible to recommend the collections of code that are relevant to the programmer's given task. We compare NavClus' recommendation accuracy with TeamTracks' by simulating recommendations using 4397 interaction histories. The comparative experiment shows that the recommendation accuracy of NavClus is twice as high as that of TeamTracks. (c) 2013 Elsevier Inc. All rights reserved.
C1 [Lee, Seonah; Kang, Sungwon] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Lee, S (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 291 Daehak Ro, Taejon 305701, South Korea.
EM saleese@kaist.ac.kr
OI Lee, Seonah/0000-0002-2004-2924
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF); Ministry of Education, Science and Technology
   [2012-0007069]
FX We thank to Sunghun Kim for providing the data used in the experiment,
   and to anonymous reviewers for providing valuable comments. This
   research was supported by Basic Science Research Program through the
   National Research Foundation of Korea (NRF) funded by the Ministry of
   Education, Science and Technology (2012-0007069).
CR [Anonymous], 2005, P SIGCHI C HUM FACT, DOI DOI 10.1145/1054972.1055017
   [Anonymous], 2003, P 29 INT C VER LARG
   Coman I. D., 2009, International Journal of Computers & Applications, V31, P159, DOI 10.2316/Journal.202.2009.3.202-2963
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Hattori L., 2010, Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE), P13
   Hattori L, 2011, CONF PROC INT SYMP C, P161, DOI 10.1109/ICPC.2011.39
   Hill W. C., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P3, DOI 10.1145/142750.142751
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lee J G, 2007, SIGMOD C, P593, DOI DOI 10.1145/1247480.1247546
   Lee S, 2012, STUD COMPUT INTELL, V377, P61
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Masud MM, 2008, IEEE DATA MINING, P929, DOI 10.1109/ICDM.2008.152
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Robbes R., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P161, DOI 10.1109/MSR.2010.5463278
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robillard MP, 2010, J SOFTW MAINT EVOL-R, V22, P143, DOI 10.1002/smr.413
   Röthlisberger D, 2011, CONF PROC INT SYMP C, P61, DOI 10.1109/ICPC.2011.20
   Röthlisberger D, 2009, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC.2009.5090052
   Safer Izzet, 2007, P 2007 C CTR ADV STU, P229, DOI 10.1145/1321211.1321235
   Sahm A., 2010, LNI, V160, P473
   Seonah Lee, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P536, DOI 10.1109/ICSM.2011.6080826
   Singer J, 2005, PROC IEEE INT CONF S, P325
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Zou LJ, 2007, INT C PROGRAM COMPRE, P135
NR 31
TC 3
Z9 3
U1 1
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2013
VL 86
IS 8
BP 2154
EP 2165
DI 10.1016/j.jss.2013.03.103
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190OW
UT WOS:000322351100013
DA 2024-07-18
ER

PT J
AU Kulesza, U
   Soares, S
   Chavez, C
   Castor, F
   Borba, P
   Lucena, C
   Masiero, P
   Sant'Anna, C
   Ferrari, F
   Alves, V
   Coelho, R
   Figueiredo, E
   Pires, PF
   Delicato, F
   Piveta, E
   Silva, C
   Camargo, V
   Braga, R
   Leite, J
   Lemos, O
   Mendonca, N
   Batista, T
   Bonifácio, R
   Cacho, N
   Silva, L
   von Staa, A
   Silveira, F
   Valente, MT
   Alencar, F
   Castro, J
   Ramos, R
   Penteado, R
   Rubira, C
AF Kulesza, Uira
   Soares, Sergio
   Chavez, Christina
   Castor, Fernando
   Borba, Paulo
   Lucena, Carlos
   Masiero, Paulo
   Sant'Anna, Claudio
   Ferrari, Fabiano
   Alves, Vander
   Coelho, Roberta
   Figueiredo, Eduardo
   Pires, Paulo F.
   Delicato, Flavia
   Piveta, Eduardo
   Silva, Carla
   Camargo, Valter
   Braga, Rosana
   Leite, Julio
   Lemos, Otavio
   Mendonca, Nabor
   Batista, Thais
   Bonifacio, Rodrigo
   Cacho, Nelio
   Silva, Lyrene
   von Staa, Arndt
   Silveira, Fabio
   Valente, Marco Tulio
   Alencar, Fernanda
   Castro, Jaelson
   Ramos, Ricardo
   Penteado, Rosangela
   Rubira, Cecilia
TI The crosscutting impact of the AOSD Brazilian research community
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Aspect-Oriented Software Development; Modularity; Research impact
ID ASPECT-ORIENTED PROGRAMS; DETECTING BAD SMELLS; PRODUCT LINE; SOFTWARE;
   ASPECTJ; MODELS; CODE; INTEGRATION; EXCEPTIONS; MODULARITY
AB Background: Aspect-Oriented Software Development (AOSD) is a paradigm that promotes advanced separation of concerns and modularity throughout the software development lifecycle, with a distinctive emphasis on modular structures that cut across traditional abstraction boundaries. In the last 15 years, research on AOSD has boosted around the world. The AOSD-BR research community (AOSD-BR stands for AOSD in Brazil) emerged in the last decade, and has provided different contributions in a variety of topics. However, despite some evidence in terms of the number and quality of its outcomes, there is no organized characterization of the AOSD-BR community that positions it against the international AOSD Research community and the Software Engineering Research community in Brazil.
   Aims: In this paper, our main goal is to characterize the AOSD-BR community with respect to the research developed in the last decade, confronting it with the AOSD international community and the Brazilian Software Engineering community.
   Method: Data collection, validation and analysis were performed in collaboration with several researchers of the AOSD-BR community. The characterization was presented from three different perspectives: (i) a historical timeline of events and main milestones achieved by the community; (ii) an overview of the research developed by the community, in terms of key challenges, open issues and related work; and (iii) an analysis on the impact of the AOSD-BR community outcomes in terms of well-known indicators, such as number of papers and number of citations.
   Results: Our analysis showed that the AOSD-BR community has impacted both the international AOSD Research community and the Software Engineering Research community in Brazil. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Kulesza, Uira; Coelho, Roberta; Batista, Thais; Cacho, Nelio; Silva, Lyrene] Univ Fed Rio Grande do Norte, BR-59072970 Natal, RN, Brazil.
   [Soares, Sergio; Castor, Fernando; Borba, Paulo; Silva, Carla; Alencar, Fernanda; Castro, Jaelson] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Chavez, Christina; Sant'Anna, Claudio] Univ Fed Bahia, BR-41170290 Salvador, BA, Brazil.
   [Lucena, Carlos; Leite, Julio; von Staa, Arndt] Pontificia Univ Catolica Rio de Janeiro, BR-22453 Rio De Janeiro, Brazil.
   [Masiero, Paulo; Braga, Rosana] Univ Sao Paulo, BR-13560 Sao Carlos, Brazil.
   [Ferrari, Fabiano; Camargo, Valter; Penteado, Rosangela] Univ Fed Sao Carlos, BR-13560 Sao Carlos, SP, Brazil.
   [Alves, Vander; Bonifacio, Rodrigo] Univ Brasilia, BR-70910900 Brasilia, DF, Brazil.
   [Figueiredo, Eduardo; Valente, Marco Tulio] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
   [Pires, Paulo F.; Delicato, Flavia] Univ Fed Rio de Janeiro, BR-21941 Rio De Janeiro, Brazil.
   [Piveta, Eduardo] Univ Fed Santa Maria, Santa Maria, RS, Brazil.
   [Silveira, Fabio] Univ Fed Sao Paulo, Sao Jose Dos Campos, Brazil.
   [Mendonca, Nabor] Univ Fortaleza, Fortaleza, Ceara, Brazil.
   [Rubira, Cecilia] Univ Estadual Campinas, BR-13081970 Campinas, SP, Brazil.
C3 Universidade Federal do Rio Grande do Norte; Universidade Federal de
   Pernambuco; Universidade Federal da Bahia; Universidade de Sao Paulo;
   Universidade Federal de Sao Carlos; Universidade de Brasilia;
   Universidade Federal de Minas Gerais; Universidade Federal do Rio de
   Janeiro; Universidade Federal de Santa Maria (UFSM); Universidade
   Federal de Sao Paulo (UNIFESP); Universidade Fortaleza; Universidade
   Estadual de Campinas
RP Soares, S (corresponding author), Univ Fed Pernambuco, Recife, PE, Brazil.
RI Soares, Sergio/K-3712-2012; Bonifacio, Rodrigo/B-3450-2014; Rubira,
   Cecilia Mary Fischer/G-5594-2012; Argenton Ramos, Ricardo/ABE-3204-2021;
   Ines, INCT/J-9550-2013; Borba, Paulo/C-5617-2013; Camargo,
   Valter/AAZ-7545-2021; Ferrari, Fabiano Cutigi/AAC-1392-2019; Silva,
   Lyrene/JCO-7587-2023; Pires, Paulo/P-4516-2019; Cacho,
   Nelio/AAE-9926-2020; Fagundes Silveira, Fabio/H-2092-2018; Castro,
   Jaelson F B/C-8334-2009; Batista, Thais/L-3935-2013; von Flach G.
   Chavez, Christina/G-2567-2012; Masiero, Paulo Cesar/E-5882-2011; von
   Flach, Christina/ABA-8720-2021; Delicato, Flavia/M-6644-2013; Pires,
   Paulo F/C-2239-2013; Cacho, Nelio/AAH-9390-2019; Lucena,
   Carlos/GQP-2277-2022; Braga, Rosana T. V./A-6298-2008; Argenton Ramos,
   Ricardo/H-4051-2018; Castor, Fernando/V-4011-2018; Ribeiro de Alencar,
   Fernanda Maria/K-5383-2016; Mendonca, Nabor/O-8453-2015; Lemos,
   Otavio/M-9278-2013
OI Soares, Sergio/0000-0002-4428-2535; Rubira, Cecilia Mary
   Fischer/0000-0003-4549-7105; Borba, Paulo/0000-0002-0381-2843; Camargo,
   Valter/0000-0002-6439-4649; Ferrari, Fabiano Cutigi/0000-0002-7339-8529;
   Pires, Paulo/0000-0001-5064-4793; Fagundes Silveira,
   Fabio/0000-0002-2063-2959; Batista, Thais/0000-0003-3558-1450; von
   Flach, Christina/0000-0001-5172-9641; Delicato,
   Flavia/0000-0001-5334-8279; Cacho, Nelio/0000-0002-4706-5616; Valente,
   Marco Tulio/0000-0002-8180-7548; Argenton Ramos,
   Ricardo/0000-0002-9688-719X; Piveta, Eduardo/0000-0002-0092-4495; Braga,
   Rosana/0000-0003-4259-0785; Silva, Lyrene/0000-0003-1772-6062; Alves,
   Vander/0000-0003-1573-048X; Kulesza, Uira/0000-0002-5467-6458; Castor,
   Fernando/0000-0002-6389-3630; Bonifacio, Rodrigo/0000-0002-2380-2829;
   Ribeiro de Alencar, Fernanda Maria/0000-0002-7988-7008; Mendonca,
   Nabor/0000-0002-2972-9423; Lemos, Otavio/0000-0001-6481-5311
FU National Institute of Science and Technology for Software Engineering
   (INES) [573964/2008-4, APQ-1037-1.03/08]
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES), grants 573964/2008-4
   (CNPq) and APQ-1037-1.03/08 (FACEPE).
CR Adachi Eiji, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P1, DOI 10.1109/SBES.2009.19
   AKSIT M, 1993, LECT NOTES COMPUTER, V791, P152
   Alencar F, 2008, LECT NOTES ARTIF INT, V4898, P183
   Alexander R, 2003, IEEE SOFTWARE, V20, P91, DOI 10.1109/MS.2003.1241373
   Alexander R.T., 2004, CS04105 COL STAT U D
   Alférez M, 2010, LECT NOTES COMPUT SC, V5969, P103
   Alves MP, 2008, J UNIVERS COMPUT SCI, V14, P1314
   Alves V, 2005, LECT NOTES COMPUT SC, V3714, P70
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P354, DOI 10.1109/SPLC.2008.51
   Alves V, 2007, LECT NOTES COMPUT SC, V4640, P117
   AMPLE, 2006, ASP OR PROD LIN ENG
   Anastasopoulos M, 2004, LECT NOTES COMPUT SC, V3107, P141
   Andrade R, 2011, EUR CON SFTWR MTNCE, P231, DOI 10.1109/CSMR.2011.29
   Andrews J.H., 2001, Reflection, P187
   [Anonymous], SCI COMPUTER PROGRAM
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], P INT WORKSH EARL AS
   [Anonymous], 2010, THESIS ICMC USP SAO
   [Anonymous], 2010, P 2010 ACMSYMPOSIUM
   Antonelli L., 2010, 25 ANN ACM S APPL CO, P275
   AOM, 2011, ASP OR MOD WORKSH
   AOSD, 2002, 1 INT C ASP OR SOFTW
   AOSD, 2011, 10 INT C ASP OR SOFT
   AOSD-BR, 2002, AOSD BR DISC LIST
   AOSD-BR-Community, 2011, PROD AOSD BR COMM
   AOSD-BR-Community, 2011, AOSD REL PAP TOP SE
   Apel S, 2005, LECT NOTES COMPUT SC, V3676, P125
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Barbosa EA, 2011, LECT NOTES COMPUT SC, V6903, P139, DOI 10.1007/978-3-642-23798-0_14
   BATISTA T, 2006, 20 BRAZ S SOFTW ENG, P17
   Batista T.s., 2006, P 2006 INT WORKSHOP, P3, DOI DOI 10.1145/1137639.1137642
   Batra U, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 5, P64, DOI 10.1109/ICCSIT.2009.5234470
   Berg K.V.D., 2005, AOSD ONTOLOGY 1 0 PU
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   Bernardo R., 2011, 25 BRAZ S SOFTW ENG
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Bonifácio R, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P125
   Borba P., 2012, THEORETICAL COMPUTER
   Braga R., 2010, 4 LAT AM WORK ASP OR, P1
   Braga S. T. V., 2007, BRAZILIAN S SOFTWARE, P17
   Burrows R., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P329, DOI 10.1109/ISSRE.2010.33
   Burrows R., 2010, Proceedings of the 2010 ICSE Workshop on Emerging Trends in Software Metrics, P53
   Burrows R, 2011, CONF PROC INT SYMP C, P131, DOI 10.1109/ICPC.2011.30
   Bynens M., 2010, 9 WORKSH ASP COMP PA, P17
   Cacho N., 2009, 23 BRAZ S SOFTW ENG
   CACHO N, 2006, P SEM 2006, P31, DOI DOI 10.1145/1210525.1210534
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   Cacho Nelio., 2008, AOSD 08 P 7 INT C AS, P72
   Cafeo B. B. P., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P214, DOI 10.1109/SBES.2011.12
   Calheiros F., 2007, P EUR C OBJ OR PROGR, P32
   Camargo V., 2004, WASP 2004
   Camargo V. V., 2005, 29 BRAZ S SOFTW ENG, P200
   Cappelli C, 2010, BUS PROCESS MANAG J, V16, P662, DOI 10.1108/14637151011065955
   Cappelli C, 2009, EA'09: EARLY ASPECT WORKSHOP, P7
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   CASTOR F, 2007, P 23 INT C SOFTW MAI, P134
   Castor Filho F., 2007, P WORKSH BEST PRACT
   Cazzola Walter., 2006, 3rd ECOOP Workshop on Reflection, AOP and Meta-Data for Software Evolution, P35
   Ceccato M., 2004, 1 WORKSH ASP REV ENG
   Chavez C., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P72, DOI 10.1109/SBES.2011.10
   CHAVEZ C, 2003, P 17 BRAZ S SOFTW EN, P130
   Chavez C., 2007, WORKSH ASP ARCH DECR, P1
   CHAVEZ C, 2004, THESIS PUC RIO
   Chavez C., 2009, 8 INT C ASP OR SOFTW, V11, P1
   Chavez C., 2005, 29 BRAZ S SOFTW ENG, P216
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chitchyan R., 2005, AOSDEUROPEULANC9
   Chitchyan R, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P149
   Chitchyan Ruzanna., 2007, AOSD 07, P36
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clarke Siobhan., 2005, ASPECT ORIENTED SOFT, P425
   Coelho R., 2008, 22 BRAZ S SOFTW ENG
   Coelho R., 2009, P 3 ACOM WORKSH OOPS
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   Coelho R, 2011, INFORM SCIENCES, V181, P2700, DOI 10.1016/j.ins.2010.06.002
   Coelho Roberta., 2008, PLOP 08, P1
   Cole L, 2004, 18 BRAZ S SOFTW ENG
   Cole L., 2005, P FOAL 2005, P1
   Cole L., 2005, 4 INT C ASP OR SOFTW, P123, DOI DOI 10.1145/1052898.1052909
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Cugola G, 2005, 25th IEEE International Conference on Distributed Computing Systems Workshops, Proceedings, P377, DOI 10.1109/ICDCSW.2005.101
   Cunha CarlosA., 2006, AOSD 06 P 5 INT C AS, P134
   da Silva B. C., 2011, P 2 INT WORKSH EM TR, P52
   de Camargo VV, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P759
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Delamare R, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P376, DOI 10.1109/ICST.2009.41
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DESOUSA GMC, 2003, P 17 BRAZ S SOFTW EN, P83
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   do Prado Leite J.C.S., 2005, CAISE, V53, P5
   Douence R., 2001, LECT NOTES COMPUTER, V2192, P170, DOI DOI 10.1007/3-540-45429-2_13
   e Oliveira M.S., 2007, THESIS IME RJ
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Evermann J, 2007, J OBJECT TECHNOL, V6, P27, DOI 10.5381/jot.2007.6.7.a2
   Fayad M. E., 1997, COMMUNICATIONS ACM, V40
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fernandes V., 2009, 3 BRAZ S COMP ARCH S, P195
   Ferrari F., 2010, P 32 ACMIEEE INT C S, V1, P65
   Ferrari F. C., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P50, DOI 10.1109/SBES.2010.11
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Ferrari Fabiano Cutigi., 2010, Proceedings of the 5th Workshop on Automation of Software Test, AST '10, P51
   Figueiredo Eduardo, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P83, DOI 10.1109/SBES.2009.14
   Figueiredo E., 2009, P ACM SIGSOFT FSE 20
   Figueiredo E., 2009, 17 INT C PROGR COMPR, V13, P8
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Figueiredo E, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P261, DOI 10.1109/WICSA.2009.5290815
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Figueroa I., 2011, P 10 WORKSH FDN ASP
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Fowler M., 1999, OBJECT TECHNOILOGIES
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   GARCIA A, 2004, THESIS PUC RIO BRAZI
   Garcia A., 2005, AOSD 05, P3
   Garcia A., 2006, P EWSA 2006 NANT FRA
   GARCIA VC, 2004, 4 LAT AM C PATT LANG
   Ghezzi Carlo, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P170, DOI 10.1109/SPLC.2011.33
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Greenwood P, 2007, P EARL ASP ICSE WORK, P8
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Grundy J, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISRE.1999.777988
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   Hanenberg S., 2003, P EUROPLOP 2003
   Hanenberg S., 2003, 4 NET OBJECTDAYS C E
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Hirschfeld R., 2011, Proceedings of the 10th International Workshop on Foundations of Aspect-Oriented Languages, FOAL'11, page, P19, DOI DOI 10.1145/1960510.1960515
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Iborra J., 2006, P 2006 INT WORKSH EA, P27
   Iwamoto M., 2003, 5 AOSD MOD UML WORKS
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kamina T., 2011, P 10 INT C ASP OR SO, P253, DOI DOI 10.1145/1960275.1960305
   Kande M.M., 2000, P OOPSLA WORKSH ADV
   Katara M., 2003, P 2 INT C ASPECT ORI, P1
   Kellens A, 2006, LECT NOTES COMPUT SC, V4067, P501
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Koppen C., 2004, EUR INT WORKSH ASP S
   Krechetov I., 2006, P AOM 2006 AOSD 2006
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   KULESZA U, 2006, P SEKE 2006, P17
   KULESZA U, 2006, 20 BRAZ S SOFTW ENG
   Kulesza U., 2005, WORKSH EARL ASP OOPS
   Kulesza U, 2007, LECT NOTES COMPUT SC, V4765, P155
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Kulesza U, 2006, LECT NOTES COMPUT SC, V4039, P231
   Lammel R., 2002, PROC AOSD 02, P41, DOI DOI 10.1145/508386.508392
   Lemos OAL, 2007, J SYST SOFTWARE, V80, P862, DOI 10.1016/j.jss.2006.08.022
   Lemos OAL, 2011, INFORM SCIENCES, V181, P2721, DOI 10.1016/j.ins.2010.06.003
   Lemos OAL, 2009, SCI COMPUT PROGRAM, V74, P861, DOI 10.1016/j.scico.2009.05.001
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Lemos O.A.L., 2008, 22 BRAZ S SOFTW ENG, P49
   Lemos O.A.L., 2004, 18 BRAZ S SOFTW ENG, P55
   Lieberherr K, 2001, COMMUN ACM, V44, P39, DOI 10.1145/383845.383855
   Lieberherr K., 1996, ADAPTIVE OBJECT ORIE
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Lobato C, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P53, DOI 10.1109/ICCBSS.2008.27
   Loughran N., 2004, P WORKSH ASP COMP PA
   Machado I., 2011, P 2011 INT WORKSH EA, P25
   Macia Bertran I., 2011, P 10 INT C ASP OR SO, P203
   Malta MN, 2009, J OBJECT TECHNOL, V8, P101
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2743, P2
   Medeiros A., 2007, 1 LAT AM WORK ASP OR, P55
   Medeiros A., 2007, 21 BRAZ S SOFTW ENG
   Mellor S.J., 2004, MDA DISTILLED
   Mens K., 2002, P AOSD 2002 WORKSH E
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mezini M., 2004, Software Engineering Notes, V29, P127, DOI 10.1145/1041685.1029915
   Molesini A., 2010, J SYSTEMS SOFTWARE
   Monteiro C., 2007, 1 LAT AM WORK ASP OR
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro M.P., 2004, INT C ASP OR SOFTW D
   Monteiro MP, 2006, LECT NOTES COMPUT SC, V3880, P214
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   Moreira A., 2002, SEKE 02 P 14 INT C S, V15 - 19, P167
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Mortensen M., 2006, 5 INT C ASP OR SOFTW
   Neves L, 2011, GPCE
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Pacios S.F., 2006, 3 BRAZ WORK ASP OR S, P111
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Perez CB, 2008, INT C PATT RECOG, P3201
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pinto M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P245, DOI 10.1109/WICSA.2009.5290811
   PINTO M, 2002, 1 INT C ASP OR SOFTW
   Pinto M, 2007, LECT NOTES COMPUT SC, V4765, P94
   Piveta E., 2005, 19 BRAZ S SOFTW ENG
   Piveta E., 2009, THESIS UFRGS
   Piveta E., 2008, 10 INT C ENT INF SYS
   Piveta E., 2008, 32 IEEE COMPSAC
   Piveta E., 2007, 19 INT C SOFTW ENG K
   Piveta EK, 2006, J UNIVERS COMPUT SCI, V12, P811
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Ramos R., 2006, P 10 IB ING REQ AMB
   Ramos R., 2008, IEEE LATIN AM T, V6
   RASHID A, 2002, P 10 ANN IEEE JOINT
   Rashid A., 2003, 1 INT C ASP OR SOFTW, P759
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Reina A.M., 2005, P 1 WORKSH MOD ASP H
   Rojas K.A.L., 2009, MEM 12 C IB SOFTW EN, P253
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saaty TL, 2003, EUR J OPER RES, V145, P85, DOI 10.1016/S0377-2217(02)00227-8
   Sampaio Americo., 2005, P 20 IEEEACM INT C A, P352
   Sande M., 2006, AOM 2006 MODELS 2006
   Sant'Anna Claudio, 2008, International Journal of Agent-Oriented Software Engineering, V2, P34, DOI 10.1504/IJAOSE.2008.016799
   Sant'Anna C., 2008, THESIS PUC RIO
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Sant'Anna C., 2004, 18 BRAZ S SOFTW ENG
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Santos A., 2007, P 6 INT C ASP OR SOF, P14
   Saraiva D, 2010, LECT NOTES COMPUT SC, V6285, P166, DOI 10.1007/978-3-642-15114-9_14
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Silva B., 2009, 3 BRAZ S COMP ARCH S
   Silva Carla, 2009, International Journal of Agent-Oriented Software Engineering, V3, P306, DOI 10.1504/IJAOSE.2009.023641
   Silva Carla, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P472
   Silva L., 2005, 19 BRAZ S SOFTW ENG, P26
   Silva L, 2005, P WER 2005 WORKSH RE, P13
   Silva LF, 2007, LECT NOTES COMPUT SC, V4765, P75
   Silveira F., 2007, THESIS ITA
   Silveira F. F., 2005, P 1 WORKSH TEST ASP
   Simmonds D., 2005, ASPECT ORIENTED MODE, P119
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   SOARES S, 2004, THESIS FEDERAL U PER
   Soares S., 2008, OOPSLA COMPANION, P737
   Solberg A, 2005, P INT COMP SOFTW APP, P121
   Srivisut K, 2007, P INT COMP SOFTW APP, P65
   Stein D, 2006, P 5 INT C ASP OR SOF, P15
   SULLIVAN K, 2005, ACM SIGSOFT SOFTWARE, V30, P166
   Sztajnberg A, 1999, 13 BRAZ S SOFTW ENG
   Tanter E., 2010, P 9 AOSD
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Taveira J. C., 2009, 23 BRAZ S SOFTW ENG
   Teixeira L., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P263, DOI 10.1109/SBES.2011.15
   Uetanabara J., 2009, P AOM AOSD 2009
   Uetanabara J., 2010, 25 ANN ACM S APPL CO, P1
   Valente M. T., 2010, J BRAZILIAN COMPUTER, V16, P133, DOI DOI 10.1007/S13173-010-0008-0
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   van Dooren M, 2005, ACM SIGPLAN NOTICES, V40, P455, DOI 10.1145/1103845.1094847
   Venners B., 2003, TROUBLE CHECKED EXCE
   Wampler Dean., 2003, ROLE ASPECT ORIENTED
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   WASP, 2004, 1 BRAZ WORKSH AOSD
   WASP, 2006, 3 BRAZ WORKSH AOSD
   WASP, 2005, 2 BRAZ WORKSH AOSD
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Xu D., 2005, P 17 INT C SOFTW ENG
   Yu E., 1997, P 3 IEEE INT S REQ E
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
   Zhao J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P188, DOI 10.1109/CMPSAC.2003.1245340
   ZHAO J, 2004, P 10 INT SOFTW METR
   ZHAO J, 2002, OOPSLA 2002 WORKSH T
   Zhao JJ, 2004, LECT NOTES COMPUT SC, V2984, P54
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P82
   [No title captured]
NR 265
TC 5
Z9 6
U1 0
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2013
VL 86
IS 4
BP 905
EP 933
DI 10.1016/j.jss.2012.08.031
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115SH
UT WOS:000316831700004
OA Green Published
DA 2024-07-18
ER

PT J
AU Pruteanu, A
   Dulman, S
AF Pruteanu, Andrei
   Dulman, Stefan
TI LossEstimate: Distributed failure estimation in wireless networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Self-adaptive; Online failure detection; Distributed algorithm;
   Distributed mobile networks
ID SELF-ADAPTIVE SYSTEMS; AD-HOC; AGGREGATION; IMPACT
AB The ongoing evolution of software-intensive distributed systems to ultra-large-scale (ULS) systems require innovative methods for building, running, and managing these systems. Component self-adaptation and self-configuration properties are thus becoming mandatory requirements in order to cope with application complexity. An increasing number of systems, such as video content distribution, make use of distributed feed-back mechanisms to build-up intelligent, robust anti self-managing services. Technology wise, with the wide-spread usage of wireless communication interfaces on today's mobile devices, communication failures are an ever increasing nuisance in the design of distributed self-adaptive services and applications.
   Communication protocols designed for wired networks are not suited for this new class of networks (including mobile ad-hoc networks, wireless sensor networks, vehicular ad-hoc networks, etc.) due to the several orders of magnitude higher amount of communication failures. Although virtually every single existing communication protocol tries to deal with the various effects introduced by communication failures, almost all existing state of the art relies on previous knowledge about the amount of errors occurring at run time (information usually collected from previous deployments). A survey of current literature easily shows that, in contrast, applications that make use of distributed feedback mechanisms via online estimation of communication errors has received relatively small attention.
   In this paper we introduce a new distributed feedback mechanism, named LossEstimate, for runtime quantification of the global amount of communication failures present in a large-scale network. The new algorithm helps building self-adaptive services and has the advantage of being fully distributed - each node computes an estimate of the amount of errors using a gossip-alike approach. The algorithm is adaptive in the sense that it can follow changes in the mean value of the amount of communication failures over time.
   We focus our analysis on the impact of various network topologies, discussing the case of fully connected networks (relevant for the case of peer-to-peer networks), static multihop topologies (mapping on the case of wireless sensor networks) and mobile multihop networks (mapping on the case of mobile ad-hoc networks and vehicular ad-hoc networks). The results show that the algorithm performs well in all three scenarios, without requiring specific adaptations.
   Besides the lack of an alternative protocol, the gossip-alike characteristics make LossEstimate an attractive choice for building a distributed feedback mechanism via the online quantification of the amount of communication failures in large-scale networks, due to the fact that it exhibits a small communication overhead and has a small convergence time. It stands as an important building-block for engineering self-adaptive distributed applications and services, such as video streaming, by means of distributed feedback mechanisms. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Pruteanu, Andrei; Dulman, Stefan] Delft Univ Technol, NL-2600 AA Delft, Netherlands.
C3 Delft University of Technology
RP Dulman, S (corresponding author), Delft Univ Technol, NL-2600 AA Delft, Netherlands.
EM a.s.pruteanu@tudelft.nl; s.o.dulman@tudelft.nl
OI Pruteanu, Andrei/0000-0001-8689-8576
CR [Anonymous], FOCS 2003
   [Anonymous], 2008, P IEEE INFOCOM 2008
   Azimi N.Hamed., 2010, Proceedings of the eleventh ACM international symposium on Mobile ad hoc networking and computing, P171
   Balakrishnan H., 2002, NETW IEEE ACM T, V5, P756
   Baldo N, 2004, 2004 IEEE 15TH INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR AND MOBILE RADIO COMMUNICATIONS, VOLS 1-4, PROCEEDINGS, P1817, DOI 10.1109/PIMRC.2004.1368313
   Beutel J, 2010, SIGNALS COMMUN TECHN, P219, DOI 10.1007/978-3-642-01341-6_9
   Bicocchi N, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P66
   Bicocchi N, 2010, FUTURE GENER COMP SY, V26, P877, DOI 10.1016/j.future.2010.02.008
   Boano C. A., 2010, PROC 19 INT C COMPUT, P1
   Boyd S, 2006, IEEE T INFORM THEORY, V52, P2508, DOI 10.1109/TIT.2006.874516
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Castro M, 2002, IEEE J SEL AREA COMM, V20, P1489, DOI 10.1109/JSAC.2002.803069
   Chen Jinran, 2006, P WORKSH DEP ISS WIR, P65, DOI [10.1145/1160972.1160985, DOI 10.1145/1160972.1160985]
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   De Vriendt J, 2002, IEEE COMMUN MAG, V40, P104, DOI 10.1109/35.995858
   Deelman E., 2005, Scientific Programming, V13, P219
   Elhadef M, 2007, IEEE IPCCC, P600, DOI 10.1109/PCCC.2007.358948
   Friedman R, 2009, INT J PERVASIVE COMP, V5, P476, DOI 10.1108/17427370911008857
   Fu ZH, 2003, IEEE INFOCOM SER, P1744
   Gabriel R.P., 2006, Companion to the 21st ACM SIGPLAN symposium on object-oriented programming systems, languages, and applications, P632
   Ganesh A, 2005, IEEE INFOCOM SER, P1455
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Iwanicki K, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P133
   Jelasity M, 2005, ACM T COMPUT SYST, V23, P219, DOI 10.1145/1082469.1082470
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Morris Robert., 2000, P 9 WORKSHOP ACM SIG, P61
   Müller-Schloer C, 2004, INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN AND SYSTEM SYNTHESIS, P2
   Naidu K., 2008, INFOCOM 2008 27 C CO, P1849
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Pruteanu Andrei, 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P144, DOI 10.1109/SASO.2010.33
   Pruteanu A., 2011, P ICCCN 2011
   Pruteanu A., 2011, P EUROPAR 2011
   Renesse R. V., 2009, P IFIP INT C DISTR S, P55
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Samaraweera N., 2002, COMMUNICATIONS IEE P, V146, P222
   Sarwate A., 2009, INFOCOM 2009
   Sarwate AD, 2009, IEEE INFOCOM SER, P2088, DOI 10.1109/INFCOM.2009.5062132
   Shan YF, 2005, EURASIP J APPL SIG P, V2005, P220, DOI 10.1155/ASP.2005.220
   Shiang HP, 2007, IEEE J SEL AREA COMM, V25, P770, DOI 10.1109/JSAC.2007.070513
   Stankovic JA, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P59, DOI 10.1109/REAL.2001.990596
   Tanachaiwiwat S, 2004, IEEE IPCCC, P463
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Xing F, 2008, MOBICOM'08: PROCEEDINGS OF THE FOURTEENTH ACM INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P175, DOI 10.1145/1409944.1409965
   Xu Y, 2010, IEEE INFOCOM SER
   Zhao J, 2003, P 1 INT C EMB NETW S, P1, DOI [DOI 10.1145/958491.958493, 10.1145/958491.958493]
   Zhuang SQ, 2005, IEEE INFOCOM SER, P2112
NR 49
TC 4
Z9 4
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2012
VL 85
IS 12
SI SI
BP 2785
EP 2795
DI 10.1016/j.jss.2012.07.051
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031VB
UT WOS:000310669500009
DA 2024-07-18
ER

PT J
AU Clarke, P
   O'Connor, RV
AF Clarke, Paul
   O'Connor, Rory V.
TI The influence of SPI on business success in software SMEs: An empirical
   study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software process improvement; Business success
ID PROCESS IMPROVEMENT; SCORECARD; PERFORMANCE; CMMI
AB In this paper, we present the findings of a study into the relationship between software process improvement (SPI) and business success in software development small- to medium-sized companies (software SMEs). A number of earlier related studies investigated the benefits of SPI in software SMEs, particularly in terms of improvements in product quality and adherence to budgetary and schedule constraints. However, only limited or indirect research has examined the relationship between SPI and business success. In this study, we adopt the Holistic Scorecard (HSC) (Sureshchandar and Leisten, 2005) as a business success reference framework, thus examining both the financial and the non-financial aspects of business success. In addition, we utilise ISO/IEC 12207 (ISO/IEC, 2008) as a comprehensive reference framework for the investigation of SPI activity in software SMEs. Through the use of new metrics introduced in this paper, the study findings establish that there is a positive association between SPI and business success in software SMEs, highlighting the importance of SPI in successful software SMEs. This is the first time that this relationship has been demonstrated using empirical data, and therefore, the findings represent a valuable new addition to the body of knowledge. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Clarke, Paul] Dublin City Univ, Lero Grad Sch Software Engn, Dublin 9, Ireland.
C3 Dublin City University
RP Clarke, P (corresponding author), Dublin City Univ, Lero Grad Sch Software Engn, Dublin 9, Ireland.
EM pclarke@computing.dcu.ie; pmaclarke@gmail.com
RI Clarke, Paul/JAX-9606-2023
OI Clarke, Paul/0000-0002-4487-627X; O'Connor, Rory/0000-0001-9253-0313
FU Science Foundation Ireland [03/CE2/I303_1]
FX This work was supported, in part, by Science Foundation Ireland grant
   03/CE2/I303_1 to Lero - the Irish Software Engineering Research Centre
   (http://www.lero.ie). The authors would like to thank Prof. Brian Leavy,
   Dublin City University Business School (http://www.dcu.ie/dcubs) for his
   advice regarding the structure of business success investigations.
CR Anacleto A., 2004, 4 INT SPICE C PROC A, P33
   Andersen H., 2001, Proceedings of the Fourth SMESME International Conference, V4, P103
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 1998, Software process improvement
   [Anonymous], 2003, Official Journal of the European Union L, VL124, P36
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Biro M., 2000, Software Process Improvement and Practice, V5, P213, DOI 10.1002/1099-1670(200012)5:4<213::AID-SPIP129>3.0.CO;2-0
   Boehm B., 2003, BALANCING AGILITY DI
   Brown M., 1996, Keeping score: Using the right metrics to drive world-class performance
   Cater-Steel A., 2008, SOFTWARE PROCESS IMP
   Cepeda S., 2008, J DEFENSE SOFTWARE E, V21, P14
   Clarke P., P 12 INT C SOFTW PRO, P62
   Clarke P, 2011, COMM COM INF SC, V172, P72
   Clarke P, 2010, COMM COM INF SC, V99, P25
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Cugola G, 1998, IEEE T SOFTWARE ENG, V24, P982, DOI 10.1109/32.730546
   Deephouse C., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P710, DOI 10.1109/HICSS.1995.375677
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   Erdogmus H, 2004, IEEE SOFTWARE, V21, P18, DOI 10.1109/MS.2004.1293068
   Ferreira AIF, 2007, PROC INT CONF SOFTW, P642
   Fleck D., 2004, P 22 ANN PAC NW SOFT, P107
   Haber A., 1980, GEN STAT
   Harper W., 1991, STATISTICS, V128
   Hart S., 1993, Journal of Marketing Management, V9, P23, DOI DOI 10.1080/0267257X.1993.9964215
   Hinton PerryR., 1995, STAT EXPLAINED GUIDE
   ISO, 2004, 90032004 ISO
   JENNINGS DF, 1994, STRATEGIC MANAGE J, V15, P459, DOI 10.1002/smj.4250150604
   Kanji GK, 2002, TOTAL QUAL MANAGE, V13, P13, DOI 10.1080/09544120120098537
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Kennerley Mike., 2002, Business performance measurement: theory and practice
   Koopmans L., 1981, INTRO CONT STAT
   Kranzler J.H., 2003, STAT TERRIFIED, VThird
   Leung H. K. N., 2001, Software Process Improvement and Practice, V6, P67, DOI 10.1002/spip.137
   Lynch R. L., 1990, MEASURE YARDSTICK CO
   MAIDIQUE MA, 1985, RES POLICY, V14, P299, DOI 10.1016/0048-7333(85)90001-0
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   McConnell S, 2002, IEEE SOFTWARE, V19, P3, DOI 10.1109/MS.2002.976933
   McConnell S., 2011, GTAC 2011 CLOSING KE
   McCormack K., 2001, BUSINESS PROCESS ORI
   Miluk G., 2005, P 1 INT RES WORKSH P, P27
   Morgan RE, 2003, J BUS RES, V56, P163, DOI 10.1016/S0148-2963(01)00218-1
   Neely A.A., 2002, PERFORMANCE PRISM SC
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P427, DOI 10.1007/978-3-540-69566-0_34
   Niazi M, 2006, LECT NOTES COMPUT SC, V4034, P395
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   OBRIEN RM, 1979, AM SOCIOL REV, V44, P851, DOI 10.2307/2094532
   Pall G., 1987, Quality process management
   Parker C., 2000, Work Studies, V49, P63, DOI [10.1108/00438020010311197, DOI 10.1108/00438020010311197]
   Pikkarainen M., 2006, MAPPING AGILE SOFTWA
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Poulin L. A, 2007, IEEE CANADIAN REV, V56, P23
   Reilly J., 1997, UNDERSTANDING STAT
   RICO D, 2004, ROI SOFTWARE PROCESS
   Rozum J.A., 1993, CMUSEI93TR009
   Sanders Marty, 2007, Software Process Improvement and Practice, V12, P351, DOI 10.1002/spip.319
   Sanders M., 1998, SPIRE HDB BETTER FAS
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   SEI, 2006, CMUSEI2006TR008
   Skrinjar R, 2008, BUS PROCESS MANAG J, V14, P738, DOI 10.1108/14637150810903084
   Sureshchandar GS, 2005, MEAS BUS EXCELL, V9, P12, DOI 10.1108/13683040510602849
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Vergidis K, 2008, IEEE T SYST MAN CY C, V38, P69, DOI 10.1109/TSMCC.2007.905812
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Waal A.A. d., 2003, MANAGE DECIS, V41, P688
NR 65
TC 31
Z9 32
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2012
VL 85
IS 10
SI SI
BP 2356
EP 2367
DI 10.1016/j.jss.2012.05.024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 992QA
UT WOS:000307793600013
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Salah, K
   Manea, A
   Zeadally, S
   Calero, JMA
AF Salah, K.
   Manea, A.
   Zeadally, S.
   Alcaraz Calero, Jose M.
TI Mitigating starvation of Linux CPU-bound processes in the presence of
   network I/O
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Operating system; Linux; Network I/O; CPU scheduler; Starvation;
   Performance; CPU-bound processes
ID INTERACTIVITY
AB In prior research work, it has been demonstrated that Linux can starve CPU-bound processes in the presence of network I/O. The starvation of Linux CPU-bound processes occurs under the two Linux schedulers, namely the 2.6 O(1) scheduler and the more recent 2.6 Completely Fair Scheduler (CFS). In this paper, we analyze the underlying root causes of this starvation problem and we propose effective solutions that can mitigate such starvation. We present detailed implementations of our proposed solutions for both O(1) and CFS Linux schedulers. We empirically evaluate the effectiveness of our proposed solutions in terms of execution time and incoming traffic load. For our experimental study and analysis, we consider two types of mainboard architectures: Uni-Processing (UP) and Symmetric Multi-Processing (SMP). Our empirical results show that the proposed solutions are highly effective in mitigating the starvation problem for CPU-bound processes with no negative impact on the performance of network I/O-bound processes. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Salah, K.] KUSTAR, Dept Comp Engn, Sharjah, U Arab Emirates.
   King Fahd Univ Petr & Minerals, Dept Comp Sci, Dhahran 31261, Saudi Arabia.
   [Zeadally, S.] Univ Dist Columbia, Dept Comp Sci & IT, Washington, DC USA.
   [Alcaraz Calero, Jose M.] Univ Murcia, Dept Commun & Informat Engn, Murcia 30011, Spain.
   [Alcaraz Calero, Jose M.] Hewlett Packard Labs, Cloud & Secur Lab, Bristol BS34 8QZ, Avon, England.
C3 Khalifa University of Science & Technology; King Fahd University of
   Petroleum & Minerals; University of the District of Columbia; University
   of Murcia; Hewlett-Packard
RP Salah, K (corresponding author), KUSTAR, Dept Comp Engn, Sharjah, U Arab Emirates.
EM khaled.salah@kustar.ac.ae; manea@kfupm.edu.sa; szeadally@udc.edu;
   jmalcaraz@um.es
RI Alcaraz Calero, Jose M./JWP-8793-2024; Salah, Khaled/V-5101-2019;
   Zeadally, Sherali/AAY-9504-2020
OI Alcaraz Calero, Jose M./0000-0002-2654-7595; Salah,
   Khaled/0000-0002-2310-2558; 
CR Aas J., 2005, Understanding the Linux 2.6.8.1 CPU Scheduler
   Anderson G, 2010, IEEE SYS MAN CYBERN
   [Anonymous], 2007, Linux System Programming
   Benvenuti C., 2006, Understanding Linux Network Internals
   Botta A., 2007, IEEE C COMP COMM INF
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Chee Siang Wong, 2008, Operating Systems Review, V42, P34, DOI 10.1145/1400097.1400102
   Jacobson V., 2008, TCPDUMP PUBLIC REPOS
   Jones M., 2007, LINUX SYMMETRIC MULT
   Jones M.T., 2009, INSIDE LINUX 2 6 COM
   Kaczmarczyk G., 2012, DOWNHILL SIMPLEX MET
   Kang D, 2007, ETRI J, V29, P270, DOI 10.4218/etrij.07.0506.0019
   Kesavan Mukil., 2010, Proceedings of the 1st ACM Symposium on Cloud computing, SoCC '10, P27, DOI DOI 10.1145/1807128.1807135
   Kumar A., 2008, INTRO CFS LINUX MULT
   Li Tong, 2007, LINUX WEEKLY NEW JUL
   Love R., 2005, Linux Kernel Development
   Molnar I., 2007, REALLY SIMPLE REALLY
   Molnar I., 2007, PATCH CFS SCHED V19
   Orebaugh A.D., 2004, ETHEREAL PACKET SNIF
   Qahtan A., 2007, THESIS KING FAHD U P
   Salah K, 2011, COMPUT ELECTR ENG, V37, P1090, DOI 10.1016/j.compeleceng.2011.07.001
   Salah K, 2009, COMPUT COMMUN, V32, P179, DOI 10.1016/j.comcom.2008.10.001
   Salah K., 2008, INT C INN INF TECHN, P1
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Torrey LA, 2007, SOFTWARE PRACT EXPER, V37, P347, DOI 10.1002/spe.772
   Torvalds L., 2008, LINUX 2 6 24 TECHNIC
   Turner P., 2010, P LIN S OTT ONT CAN
   Wong CS, 2008, PROCEEDINGS OF THE 13TH INTERNATIONAL PAIN CLINIC CONGRESS: WORLD SOCIETY OF PAIN CLINICIANS, P1
   Wu W, 2007, COMPUT NETW, V51, P4050, DOI 10.1016/j.comnet.2007.04.012
NR 29
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2012
VL 85
IS 8
BP 1899
EP 1914
DI 10.1016/j.jss.2012.02.042
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 956SL
UT WOS:000305109300015
DA 2024-07-18
ER

PT J
AU da Silva, FQB
   França, ACC
AF da Silva, Fabio Q. B.
   Franca, A. Cesar C.
TI Towards understanding the underlying structure of motivational factors
   for software engineers to guide the definition of motivational programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd Brazilian Symposium on Software Engineering
CY FEB, 2012
CL Pernambuco, BRAZIL
DE Motivation; People management; Software development; Empirical software
   engineering
AB Aim: In this article, factors influencing the motivation of software engineers is studied with the goal of guiding the definition of motivational programs.
   Method: Using a set of 20 motivational factors compiled in a systematic literature review and a general theory of motivation, a survey questionnaire was created to evaluate the influence of these factors on individual motivation. Then, the questionnaire was applied on a semi-random sample of 176 software engineers from 20 software companies located in Recife-PE, Brazil.
   Results: The survey results show the actual level of motivation for each motivator in the target population. Using principal component analysis on the values of all motivators, a five factor structure was identified and used to propose a guideline for the creation of motivational programs for software engineers.
   Conclusions: The five factor structure provides an intuitive categorization for the set of variables and can be used to explain other motivational models presented in the literature. This contributes to a better understanding of motivation in software engineering. (C) 2010 Elsevier Inc. All rights reserved.
C1 [da Silva, Fabio Q. B.; Franca, A. Cesar C.] Univ Fed Pernambuco CIn UFPE, Ctr Informat, BR-50740540 Recife, PE, Brazil.
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco CIn UFPE, Ctr Informat, Cidade Univ, BR-50740540 Recife, PE, Brazil.
EM fabio@cin.ufpe.br; cesarfranca@gmail.com
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X
CR [Anonymous], 2008, Managing Motivation
   BAKER FT, 1972, IBM SYST J, V11, P56, DOI 10.1147/sj.111.0056
   Bartol KM, 1982, MIS QUART, V6, P49, DOI 10.2307/248991
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BOEHM BW, 1981, ENG EC
   Bowditch J.L., 2007, PRIMER ORG BEHAV, V7th
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Brooks Fred, 1975, The Mythical Man-Month
   Chen G, 2006, RES ORGAN BEHAV, V27, P223, DOI 10.1016/S0191-3085(06)27006-0
   Constantine L., 1995, Constantine on Peopleware
   COUGER D, 1980, MOTIVATING MANAGING
   Curtis B., 2001, CMUSRI2001MM001 SOFT
   Da Silva F.Q.B, 2008, 25 IASP WORLD C SCI
   Darlington R.B., FACTOR ANAL
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Guinan P.J., 1997, INFORM SYSTEM RES, V9
   Guinan PJ, 1997, IBM SYST J, V36, P124, DOI 10.1147/sj.361.0124
   Hall T, 2008, IEEE SOFTWARE, V4
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Herzberg F., 1959, MOTIVATION WORK
   Kitchenham B, 2007, EBSE200701 KEEL U SC, V3
   Latham G.P., 2006, Work motivation : history, theory, research, and practice
   Mak BL, 2001, INFORM MANAGE-AMSTER, V38, P265, DOI 10.1016/S0378-7206(00)00055-0
   Maslow AH, 1943, PSYCHOL REV, V50, P370, DOI 10.1037/h0054346
   McClelland D.C., 1958, MOTIVES FANTASY ACTI, P12
   Mcconnell S., 1998, SOFTWARE IEEE, V15, P126
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   Selltiz C., 1981, Research methods in social relations, V4th
   Sharp H., 2009, COOPERATIVE HUMAN AS
   Sharp H, 2009, INFORM SOFTWARE TECH, V1
   Sommerville Ian., 2007, International Computer Science Series
   Vroom V. H., 1964, Work and motivation
   White K, 1984, MIS Q, V8, P85
   WHITE KB, 1984, INFORM MANAGE, V7, P331, DOI 10.1016/0378-7206(84)90028-4
NR 36
TC 12
Z9 16
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2012
VL 85
IS 2
BP 216
EP 226
DI 10.1016/j.jss.2010.12.017
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 893WH
UT WOS:000300387900002
OA Bronze
DA 2024-07-18
ER

PT J
AU Hartmann, H
   Trew, T
   Bosch, J
AF Hartmann, Herman
   Trew, Tim
   Bosch, Jan
TI The changing industry structure of software development for consumer
   electronics and its consequences for software architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Industry structures; Ecosystems; Software supply chains; Case study;
   Software architecture; Software management; Software evolution; Embedded
   systems; Mobile phones; Consumer electronics
AB During the last decade the structure of the consumer electronics industry has been changing profoundly. Current consumer electronics products are built using components from a large variety of specialized firms, whereas previously each product was developed by a single, vertically integrated company. Taking a software development perspective, we analyze the transition in the consumer electronics industry using case studies from digital televisions and mobile phones. We introduce a model consisting of five industry structure types and describe the forces that govern the transition between types and we describe the consequences for software architectures.
   We conclude that, at this point in time, software supply chains are the dominant industry structure for developing consumer electronics products. This is because the modularization of the architecture is limited, due to the lack of industry-wide standards and because resource constrained devices require variants of supplied software that are optimized for different hardware configurations. Due to these characteristics open ecosystems have not been widely adopted. The model and forces can serve the decision making process for individual companies that consider the transition to a different type of industry structure as well as provide a framework for researchers studying the software-intensive industries. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Hartmann, Herman] Univ Groningen, Fac Math & Nat Sci, NL-9747 AG Groningen, Netherlands.
   [Trew, Tim] NDS Ltd, Chandlers Ford S053 3YU, Hants, England.
   [Bosch, Jan] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
C3 University of Groningen; Chalmers University of Technology
RP Hartmann, H (corresponding author), Nsypre, Dillenburgstr 25-3, NL-5652 AM Eindhoven, Netherlands.
EM hermanhartmann@gmail.com; tiptrew@theiet.org; jan@janbosch.com
CR Anderson J., 2006, The mobile handset industry in transition: the PC industry revisited
   [Anonymous], 2010, PROFIT SOFTWARE ECOS
   [Anonymous], 2004, Software Factories
   [Anonymous], 2011, STAND MED LIBR PORT
   Baldwin CY, 1997, HARVARD BUS REV, V75, P84
   Bosch J., 2006, LECT NOTES COMPUTER
   Bosch J., 2009, SOFTWARE PRODUCT LIN
   Bruhl K., 2005, ANN C CORP STRAT ACC
   Christensen C., 2004, SEEING WHATS NEXT
   Christensen CM, 2002, IND CORP CHANGE, V11, P955, DOI 10.1093/icc/11.5.955
   Constantinou A., 2010, MOBILE MEGATRENDS VI
   Czarnecki Krzysztof., 2005, SOFTWARE PROCESS IMP, V10
   Dourmas G., 2009, P EUR MED C INF SYST
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Freescale Semiconductors Inc, 2008, MOBILE EXTREME CONVE
   Gawer A., 2002, PLATFORM LEADERSHIP
   Grove A.S., 1996, CURRENCY DOUBLEDAY
   Halasz M., 2011, MENU EXPANDS OS DINE
   Hartmann H., 2009, P SPLC2009
   Janjua N.K., 2009, P 3 IEEE INT C DIG E
   Jansen S., 2009, P 31 INT C SOFTW ENG
   Jansen S, 2007, INT FED INFO PROC, V243, P677
   Jonkers H.B.M., 1993, P FME 93 IND STRENGT
   Kornby M., 2005, EMP STORY ERICSSON M
   Kovacevic M.A., 2007, KEY SUCCESS FACTORS
   Krafft J., 2003, VERTICAL STRUCTURE I
   Kronlof K., 2006, P MARTES FINN PARTN
   LEE HL, 1994, MANAGEMENT DESIGN EN
   McGregor J., 2009, J OBJECT TECHNOLOGY, V8
   MESSERSCHMITT DG, 2004, SOFTWARE ECOSYSTEM
   Moore J.F., 2006, BUSINESSES ECOSYSTEM
   Nachira F., 2007, DIGITAL BUSINESS ECO
   Nagrani S., 2007, DIGITAL TELEVISION C
   Oberhauser R., 2007, P INT C SOFTW ENG AD
   Pang B.C., 2011, ANDROIDS ADVERTISING
   Peppard J., 2006, EUROPEAN MANAGEMENT, V24
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Porter E.M., 1980, COMPETITIVE STRATEGY
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   Raaijmakers R., 2009, FOCUS NXP GOED ECOSY
   Raskin A., 2005, NEW IND REVOLUTION D
   Rassweiler A., 2009, Iphone 3g s carries 78.96 bom and manufacturing cost
   Rooijmans J., 1996, IEEE SOFTWARE
   Strategy Analytics, 2008, UNDERSTANDING MOBILE
   Sturgeon T.J., 2003, ELECT OUTSOURCING DU
   Suoranta R, 2006, DSD 2006: 9th EUROMICRO Conference on Digital System Design: Architectures, Methods and Tools, Proceedings, P17
   Trew T., 2004, P INT WORKSH SOFTW P
   Trew T., 2006, P 5 INT IEEE C COMM
   Underseth M., 2007, VERIFYING EMBEDDED S
   van der Linden F., 2000, SOFTWARE ARCHITECTUR
   van Genuchten M., 2007, IEEE COMPUTER
   van Ommering R., 2004, THESIS RIJKS U GRONI
   Vitharana P, 2003, COMMUN ACM, V46, P67, DOI 10.1145/859670.859671
   Vogelstein F., 2008, WIRED MAGAZINE   FEB, V16
   Wang L., 2009, COUPLING VALUE CHAIN
   Waters D., 2007, BATTLE DIGITAL LIVIN
   Wehlage C., 2008, AMR RES
   West J., 2010, BROWSING KILLERAPP E, DOI 10.1016/j.telpol.2009.12.002
   Yin R.K., 2011, Qualitative research from start to finish
NR 59
TC 11
Z9 12
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2012
VL 85
IS 1
BP 178
EP 192
DI 10.1016/j.jss.2011.08.007
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859RG
UT WOS:000297892900015
DA 2024-07-18
ER

PT J
AU Beydoun, G
   Lopez-Lorca, AA
   García-Sánchez, F
   Martínez-Béjar, R
AF Beydoun, Ghassan
   Lopez-Lorca, Antonio A.
   Garcia-Sanchez, Francisco
   Martinez-Bejar, Rodrigo
TI How do we measure and improve the quality of a hierarchical ontology?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Ontology; Taxonomy; Ontology evaluation; Data model
ID OWL
AB Hierarchical ontologies enable organising information in a human-machine understandable form, but constructing them for reuse and maintainability remains difficult. Often supporting tools available lack formal methodological underpinning and their developers are not supported by any concomitant metrics. The paper presents a formal underpinning to provide quality metrics of a taxonomy hierarchical ontology and proposes a methodology for semi-automatic building of maintainable taxonomies. Users provide terms to be used to describe different ontological elements as well as their attributes and their ranges of values. The methodology uses the formalised metrics to assess the quality of the users input and proposes changes according to given quality constraints. The paper illustrates the metrics and the methodology in constructing and repairing two medium size well-known taxonomies. (c) 2011 Elsevier Inc. All rights reserved.
C1 [Beydoun, Ghassan; Lopez-Lorca, Antonio A.] Univ Wollongong, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
   [Garcia-Sanchez, Francisco; Martinez-Bejar, Rodrigo] Univ Murcia, Fac Comp Sci, Murcia, Spain.
   [Martinez-Bejar, Rodrigo] Univ Murcia, Dept Informat & Commun Engn, Murcia, Spain.
C3 University of Wollongong; University of Murcia; University of Murcia
RP Beydoun, G (corresponding author), Univ Wollongong, Sch Informat Syst & Technol, Wollongong, NSW 2522, Australia.
EM beydoun@uow.edu.au; aall@uow.edu.au; frgarcia@um.es; rodrigo@um.es
RI Garcia-Sanchez, Francisco/B-5292-2008; Beydoun, Ghassan/E-8952-2011;
   Beydoun, Ghassan/L-5554-2017; Lorca, Antonio A Lopez/V-6813-2017
OI Garcia-Sanchez, Francisco/0000-0003-2667-5359; Martinez-Bejar,
   Rodrigo/0000-0002-9677-7396; Lopez-Lorca, Antonio/0000-0003-3028-3032;
   Beydoun, Ghassan/0000-0001-8087-5445
FU Spanish Government [TIN2006-14780, PT-2006-055-24ICPP, 06/01-005];
   Australian Research Council [DP1112378]
FX This work was supported in part by the Spanish Government (under
   projects TIN2006-14780 and PT-2006-055-24ICPP and the Region of Murcia
   under project BIO-TEC 06/01-005) and Australian Research Council (Grant
   DP1112378).
CR [Anonymous], 1997, THESIS U TWENTE ENSC
   [Anonymous], 2007, INT C INFORM KNOWLED
   Balke W.-T., 2004, P 13 INT WORLD WID W
   Berners-Lee T, 2006, SCIENCE, V313, P769, DOI 10.1126/science.1126902
   Beydoun C, 2005, INT J COOP INF SYST, V14, P45, DOI 10.1142/S0218843005001080
   Beydoun G, 2001, INT J HUM-COMPUT ST, V54, P407, DOI 10.1006/ijhc.2000.0445
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Blomqvist E., 2009, P 8 INT SEM WEB C
   Brewster C, 2004, IEEE INTELL SYST, V19, P72, DOI 10.1109/MIS.2004.1265889
   Chamiel G., 2008, P KNOWL REPR ONT WOR
   Dahab MY, 2008, EXPERT SYST APPL, V34, P1474, DOI 10.1016/j.eswa.2007.01.043
   Fortuna B, 2007, LECT NOTES COMPUT SC, V4558, P309
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guarino N, 2002, COMMUN ACM, V45, P61, DOI 10.1145/503124.503150
   Guarino N, 2003, IN HAND I S, P151
   Horridge M., 2007, PRACTICAL GUIDE BUIL
   Huang N, 2006, INT CONF E BUS ENG, P132
   Kiefer C., 2007, P 6 INT SEM WEB C
   Kremer SC, 2001, NEURAL COMPUT, V13, P249, DOI 10.1162/089976601300014538
   Maedche A., 2002, P 13 INT C KNOWL ENG
   Middleton SE, 2004, ACM T INFORM SYST, V22, P54, DOI 10.1145/963770.963773
   Mizoguchi R, 2004, NEW GENERAT COMPUT, V22, P193, DOI 10.1007/BF03040960
   Motik B, 2009, J WEB SEMANT, V7, P74, DOI 10.1016/j.websem.2009.02.001
   OBRST L., 2007, Semantic Web: Revolutionizing Knowledge Discovery in the Life Sciences
   Punera K., 2006, P 6 IEEE INT C DAT M
   Ryu P-M., 2006, Proceedings of the 2ndWorkshop on Ontology Learning and Population: Bridging the Gap between Text and Knowledge, P41
   Schickel-Zuber V., 2006, P 21 NAT C ART INT
   Schickel-Zuber V., 2007, P 13 ACM SIGKDD INT
   Simperl E., 2009, P CONF INT C COOPI 2
   Soldatova LN, 2005, NAT BIOTECHNOL, V23, P1095, DOI 10.1038/nbt0905-1095
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Stevens R, 2007, INT J HUM-COMPUT ST, V65, P583, DOI 10.1016/j.ijhcs.2007.03.006
   Supekar K., 2005, P 8 INT PROT C MADR
   Trentelman K., 2010, CRPIT SERIES
   Völker J, 2005, LECT NOTES COMPUT SC, V3729, P716, DOI 10.1007/11574620_51
   Welty C, 2001, DATA KNOWL ENG, V39, P51, DOI 10.1016/S0169-023X(01)00030-1
NR 37
TC 24
Z9 25
U1 2
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2011
VL 84
IS 12
BP 2363
EP 2373
DI 10.1016/j.jss.2011.07.010
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840CE
UT WOS:000296415100026
DA 2024-07-18
ER

PT J
AU Guerra-Casanova, J
   Sánchez-Avila, C
   Sierra, AD
   del Pozo, GB
AF Guerra-Casanova, J.
   Sanchez-Avila, C.
   de Santos Sierra, A.
   Bailador del Pozo, G.
TI Score optimization and template updating in a biometric technique for
   authentication in mobiles based on gestures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mobile authentication; Template updating; Gestures; Biometrics;
   Security; Accelerometers
AB This article focuses on the evaluation of a biometric technique based on the performance of an identifying gesture by holding a telephone with an embedded accelerometer in his/her hand. The acceleration signals obtained when users perform gestures are analyzed following a mathematical method based on global sequence alignment. In this article, eight different scores are proposed and evaluated in order to quantify the differences between gestures, obtaining an optimal EER result of 3.42% when analyzing a random set of 40 users of a database made up of 80 users with real attempts of falsification. Moreover, a temporal study of the technique is presented leeding to the need to update the template to adapt the manner in which users modify how they perform their identifying gesture over time. Six updating schemes have been assessed within a database of 22 users repeating their identifying gesture in 20 sessions over 4 months, concluding that the more often the template is updated the better and more stable performance the technique presents. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Guerra-Casanova, J.; Sanchez-Avila, C.; de Santos Sierra, A.; Bailador del Pozo, G.] Univ Politecn Madrid, Ctr Domot Integral CeDInt UPM, Madrid 28223, Spain.
C3 Universidad Politecnica de Madrid; Centro de Domotica Integral (CeDInt)
RP Guerra-Casanova, J (corresponding author), Univ Politecn Madrid, Ctr Domot Integral CeDInt UPM, Campus Montegancedo, Madrid 28223, Spain.
EM jguerrakas@gmail.com
RI Avila, Carmen Sanchez/I-2225-2015
OI SANCHEZ AVILA, MARIA DEL CARMEN/0000-0002-7690-1011
CR AMAYEH G, 2009, BTAS 09, P1
   [Anonymous], 2007, HDB BIOMETRICS HDB B
   Chirillo J., 2003, IMPLEMENTING BIOMETR
   Cho DH, 2006, SNPD 2006: SEVENTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, PROCEEDINGS, P197
   Clarke NL, 2007, INT J INF SECUR, V6, P1, DOI 10.1007/s10207-006-0006-6
   Durbin R, 2006, Biological sequence analysis: probabilistic models of proteins and nucleic acids
   Freni B, 2008, LECT NOTES COMPUT SC, V5098, P441, DOI 10.1007/978-3-540-70517-8_43
   Casanova JG, 2010, COMM COM INF SC, V87, P497
   Ijiri Y., 2006, Proceedings of the 7th International Conference on Mobile Data Management, MDM '06, P49, DOI DOI 10.1109/MDM.2006.138
   Jeong DS, 2006, LECT NOTES COMPUT SC, V3832, P457
   Kela J, 2006, PERS UBIQUIT COMPUT, V10, P285, DOI 10.1007/s00779-005-0033-8
   LI Y, 2008, FGCN 08, V3, P35
   Mantyjarvi J., 2004, Proceedings of the 3rd international conference on Mobile and ubiquitous multimedia - MUM '04, P25
   MARCIALIS GL, 2008, LECT NOTES COMPUTER, V684
   RATTANI A, 2009, LECT NOTES COMPUTER, V847
   Rattani A, 2008, 2008 BIOMETRICS SYMPOSIUM (BSYM), P23, DOI 10.1109/BSYM.2008.4655518
   Shabeer HA, 2007, ICCIMA 2007: INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND MULTIMEDIA APPLICATIONS, VOL IV, PROCEEDINGS, P270, DOI 10.1109/ICCIMA.2007.182
   SIERRA AD, 2008, ICCST 2008, P226
   SINGH R, 2009, BTAS 09, P1
   SOLAMI EA, 2010, 12 IEEE INT C HIGH P, P647
   Tao Qian., P 3 ANN INT C MOBILE, P1, DOI DOI 10.1109/MOBIQW.2006.361741
   Wayman J., 2004, Biometric Systems: Technology, Design and Performance Evaluation
NR 22
TC 8
Z9 12
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2011
VL 84
IS 11
SI SI
BP 2013
EP 2021
DI 10.1016/j.jss.2011.05.059
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834XN
UT WOS:000295997900015
DA 2024-07-18
ER

PT J
AU Islam, SKH
   Biswas, GP
AF Islam, S. K. Hafizul
   Biswas, G. P.
TI A more efficient and secure ID-based remote mutual authentication with
   key agreement scheme for mobile devices on elliptic curve cryptosystem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Elliptic curve cryptosystem; Identity-based cryptosystem;
   Authentication; Cryptographic hash function
ID PASSWORD AUTHENTICATION; USER ACCESS; CRYPTANALYSIS
AB Recently, Yang and Chang proposed an identity-based remote login scheme using elliptic curve cryptography for the users of mobile devices. We have analyzed the security aspects of the Yang and Chang's scheme and identified some security flaws. Also two improvements of the Yang and Chang's scheme have been proposed recently, however, it has been found that the schemes have similar security flaws as in the Yang and Chang's scheme. In order to remove the security pitfalls of the Yang and Chang and the subsequent schemes, we proposed an enhanced remote user mutual authentication scheme that uses elliptic curve cryptography and identity-based cryptosystem with three-way challenge-response handshake technique. It supports flawless mutual authentication of participants, agreement of session key and the leaked key revocation capability. In addition, the proposed scheme possesses low power consumption, low computation cost and better security attributes. As a result, the proposed scheme seems to be more practical and suitable for mobile users for secure Internet banking, online shopping, online voting, etc. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Islam, S. K. Hafizul; Biswas, G. P.] Indian Sch Mines, Dept Comp Sci & Engn, Dhanbad 826004, Bihar, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (Indian School of Mines) Dhanbad
RP Islam, SKH (corresponding author), Indian Sch Mines, Dept Comp Sci & Engn, Dhanbad 826004, Bihar, India.
EM hafi786@gmail.com
RI Islam, SK Hafizul/K-5724-2017
OI Islam, Dr. SK Hafizul/0000-0002-2703-0213
FU DST, Govt. of India [IF10247]
FX The authors would like to thank anonymous reviewers and editors who help
   to improve this paper. The first author, SK Hafizul Islam, is working as
   a fulltime research scholar in the Department of Computer Science and
   Engineering, Indian School of Mines, Dhanbad, under the INSPIRE
   Fellowship (Reg. No. IF10247), funded by DST, Govt. of India.
CR Abi-Char PE, 2007, INT CONF NEXT GEN, P235
   [Anonymous], P IEEE INT C EL TECH
   [Anonymous], 7 INT C UB AUT TRUST
   [Anonymous], OPERATING SYSTEMS RE
   [Anonymous], ACM OPERATING SYSTEM
   [Anonymous], P 7 WORLD C INT CONT
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 4 INT C INN COMP INF
   [Anonymous], 2005129 CRYPT EPRINT
   [Anonymous], ACM OPERATING SYSTEM
   [Anonymous], INT J NETWORK SECURI
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Cheng-Chi Lee, 2002, Operating Systems Review, V36, P23, DOI 10.1145/583800.583803
   Eun-Jun Yoon, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P633, DOI 10.1109/CSE.2009.363
   Hankerson Darrel, 2006, Guide to Elliptic Curve Cryptography
   Hsiang HC, 2009, COMPUT STAND INTER, V31, P1118, DOI 10.1016/j.csi.2008.11.002
   Jia ZT, 2006, ISDA 2006: SIXTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, VOL 2, P1091
   KOBLITZ N, 1987, MATH COMPUT, V48, P203, DOI 10.1090/S0025-5718-1987-0866109-5
   Kocher P., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P388
   LAMPORT L, 1981, COMMUN ACM, V24, P770, DOI 10.1145/358790.358797
   Lee NY, 2005, COMPUT STAND INTER, V27, P177, DOI 10.1016/j.csi.2004.06.001
   Liao IE, 2006, J COMPUT SYST SCI, V72, P727, DOI 10.1016/j.jcss.2005.10.001
   Liao IE, 2005, International Conference on Next Generation Web Services Practices, P437
   Liao YP, 2009, COMPUT STAND INTER, V31, P24, DOI 10.1016/j.csi.2007.10.007
   Liaw HT, 2006, MATH COMPUT MODEL, V44, P223, DOI 10.1016/j.mcm.2006.01.015
   Lin CL, 2003, COMPUT SECUR, V22, P68, DOI 10.1016/S0167-4048(03)00114-7
   Lu RX, 2005, COMPUT NETW, V49, P535, DOI 10.1016/j.comnet.2005.01.013
   Messerges TS, 2002, IEEE T COMPUT, V51, P541, DOI 10.1109/TC.2002.1004593
   MILLER VS, 1986, LECT NOTES COMPUT SC, V218, P417, DOI 10.1007/3-540-39799-x_31
   Peyravian M, 2000, COMPUT SECUR, V19, P466, DOI 10.1016/S0167-4048(00)05032-X
   Peyravian M, 2006, COMPUT COMMUN, V29, P660, DOI 10.1016/j.comcom.2005.07.025
   Shamir A., 1985, Advances in Cryptology, V84 4, P47, DOI 10.1007/3-540-39568-7_5
   Shim KA, 2006, COMPUT COMMUN, V30, P117, DOI 10.1016/j.comcom.2006.08.001
   Wang XM, 2007, COMPUT STAND INTER, V29, P507, DOI 10.1016/j.csi.2006.11.005
   Wang YY, 2009, COMPUT COMMUN, V32, P583, DOI 10.1016/j.comcom.2008.11.008
   Xiang T, 2008, J COMPUT SYST SCI, V74, P657, DOI 10.1016/j.jcss.2007.05.001
   Yang JH, 2009, COMPUT SECUR, V28, P138, DOI 10.1016/j.cose.2008.11.008
NR 37
TC 106
Z9 110
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2011
VL 84
IS 11
SI SI
BP 1892
EP 1898
DI 10.1016/j.jss.2011.06.061
PG 7
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 834XN
UT WOS:000295997900006
DA 2024-07-18
ER

PT J
AU Kefalakis, N
   Soldatos, J
   Konstantinou, N
   Prasad, NR
AF Kefalakis, Nikos
   Soldatos, John
   Konstantinou, Nikolaos
   Prasad, Neeli R.
TI APDL: A reference XML schema for process-centered definition of RFID
   solutions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE RFID middleware; RFID business processes; RFID business events; Master
   data; RFID for logistics; RFID in supply chain management
AB Despite the proliferation of RFID systems and applications, there is still no easy way to develop, integrate and deploy non-trivial RFID solutions. Indeed, the latter comprise various middleware modules (e.g., data collection and filtering, generation of business events, integration with enterprise applications), which must be deployed and configured independently. In this paper we introduce APDL (AspireRFID Process Description Language), an XML based specification for describing and configuring RFID solutions. Using APDL one can minimize the steps and effort required to integrate and configure an RFID solution, since it unifies all the configuration parameters and steps comprising an RFID deployment. APDL supports several configuration parameters defined in the scope of the EPCglobal architecture and related standards. However, it extends beyond the EPCglobal architecture, to a wider class of RFID solutions. Furthermore, APDL is amendable by visual tools, which obviates the need to carry out low-level programming tasks in order to deploy an RFID solution. These tools are also presented and evaluated in the paper. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Kefalakis, Nikos; Soldatos, John; Konstantinou, Nikolaos] Athens Informat Technol, GR-19002 Peania, Greece.
   [Kefalakis, Nikos; Prasad, Neeli R.] Aalborg Univ, CTIF, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Kefalakis, N (corresponding author), Athens Informat Technol, 0-8Km Markopoulo Ave,POB 68, GR-19002 Peania, Greece.
EM nkef@ait.edu.gr; jsol@ait.edu.gr; nkons@ait.edu.gr; np@es.aau.dk
RI Konstantinou, Nikolaos/J-4676-2014
OI Konstantinou, Nikolaos/0000-0003-3742-9276; Kefalakis,
   Nikos/0000-0002-3855-2279; SOLDATOS, IOANNIS/0000-0002-6668-3911
CR Anagnostopoulos AP, 2009, PERVASIVE MOB COMPUT, V5, P49, DOI 10.1016/j.pmcj.2008.08.004
   [Anonymous], 2018, Qualitative inguiry research design choosing among five approaches
   [Anonymous], 2002, WORKFL PROC DEF INT
   [Anonymous], 2007, EPC INF SERV EPCIS V
   BEAWebLogic REID Enterprise Server&TRADE, 2006, BEAWEBLOGIC RFID ENT
   Dimitropoulos Panos, 2010, International Journal of Manufacturing Technology and Management, V21, P269, DOI 10.1504/IJMTM.2010.035436
   EPCglobal, 2010, EPCGLOBAL ARCH FRAM
   EPCglobal, 2008, APPL LEV EV ALE SPEC
   Floerkemeier C, 2007, IEEE SYST J, V1, P82, DOI 10.1109/JSYST.2007.909778
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holmström J, 2009, DECISION SCI, V40, P65, DOI 10.1111/j.1540-5915.2008.00221.x
   International Telecommunication Union, 2005, INT THINGS EX SUMM I
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Kavantzas N., 2011, WEB SERVICES CHOREOG
   Kefalakis N, 2009, L N INST COMP SCI SO, V13, P325
   Lawton G, 2004, COMPUTER, V37, P12, DOI 10.1109/MC.2004.137
   Leontiadis N., 2010, INT J AUTOMATED IDEN, V1
   Nuseibeh B., 2000, P INT C SOFTW ENG IR
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Prabhu B.S., 2005, INVITED MOBILE WIREL
   Sarma S., 2004, ACM Queue, V2, P50, DOI 10.1145/1035594.1035620
   Stanford V., 2002, IEEE Pervasive Computing, V1, P6, DOI 10.1109/MPRV.2002.1037716
   van der Aalst Wil M.P., 2003, F1TTR200306 QUT
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   WARD MP, 1994, SOFTWARE-CONC TOOL, V15, P147
   Wessel R., 2010, STAFF JEANS INTROD R
   WHITE S.A., 2005, USING BPMN MODEL BPE
NR 27
TC 13
Z9 13
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2011
VL 84
IS 7
BP 1244
EP 1259
DI 10.1016/j.jss.2011.02.036
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 780HZ
UT WOS:000291846400015
DA 2024-07-18
ER

PT J
AU Preda, S
   Cuppens, F
   Cuppens-Boulahia, N
   Garcia-Alfaro, J
   Toutain, L
AF Preda, Stere
   Cuppens, Frederic
   Cuppens-Boulahia, Nora
   Garcia-Alfaro, Joaquin
   Toutain, Laurent
TI Dynamic deployment of context-aware access control policies for
   constrained security devices
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE IT security; Network security; Authorization; OrBAC
ID MODEL
AB Securing the access to a server, guaranteeing a certain level of protection over an encrypted communication channel, executing particular counter measures when attacks are detected are examples of security requirements. Such requirements are identified based on organizational purposes and expectations in terms of resource access and availability and also on system vulnerabilities and threats. All these requirements belong to the so-called security policy. Deploying the policy means enforcing, i.e., configuring, those security components and mechanisms so that the system behavior be finally the one specified by the policy. The deployment issue becomes more difficult as the growing organizational requirements and expectations generally leave behind the integration of new security functionalities in the information system: the information system will not always embed the necessary security functionalities for the proper deployment of contextual security requirements. To overcome this issue, our solution is based on a central entity approach which takes in charge unmanaged contextual requirements and dynamically redeploys the policy when context changes are detected by this central entity.
   We also present an improvement over the OrBAC (Organization-Based Access Control) model. Up to now, a controller based on a contextual OrBAC policy is passive, in the sense that it assumes policy evaluation triggered by access requests. Therefore, it does not allow reasoning about policy state evolution when actions occur. The modifications introduced by our work overcome this limitation and provide a proactive version of the model by integrating concepts from action specification languages. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Preda, Stere; Cuppens, Frederic; Cuppens-Boulahia, Nora; Garcia-Alfaro, Joaquin; Toutain, Laurent] Telecom Bretagne, Inst Telecom, F-35576 Cesson Sevigne, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique
RP Garcia-Alfaro, J (corresponding author), Telecom Bretagne, Inst Telecom, CS 17607, F-35576 Cesson Sevigne, France.
EM joaquin.garcia-alfaro@acm.org
RI Garcia-Alfaro, Joaquin/A-4500-2008
OI Garcia-Alfaro, Joaquin/0000-0002-7453-4393
FU French National Research Agency [ANR-08-SEGI-018]; Spanish Ministry of
   Science [TSI2007-65406-C03-03 E-AEGIS, CSD2007-00004 ARES]; European
   Commission [FP7-257315]
FX This work has been supported by the French National Research Agency
   (SELKIS project ANR-08-SEGI-018), the Spanish Ministry of Science
   (grants TSI2007-65406-C03-03 E-AEGIS and CONSOLIDER-INGENIO 2010
   CSD2007-00004 ARES), and the European Commission (DEMONS project ICT
   FP7-257315). The authors thank Xavier Rimasson and Fabien Autrel for all
   their help on the prototype setup used in Section 6. The authors also
   thank the anonymous reviewers for their constructive and insightful
   remarks that helped in improving this paper.
CR Abou El Kalam A, 2009, INT J CRIT INFR PROT, V2, P154, DOI 10.1016/j.ijcip.2009.08.005
   Alfaro JG, 2008, INT J INF SECUR, V7, P103, DOI 10.1007/s10207-007-0045-7
   [Anonymous], 2001, 6 ACM S ACCESS CONTR
   [Anonymous], 2005, P 14 C USENIX SECURI
   [Anonymous], 2008, 3 C SEC NETW ARCH IN
   [Anonymous], 2003, Policies for Distributed Systems and Networks, DOI DOI 10.1109/POLICY.2003.1206966
   Autrel F, 2009, LECT NOTES COMPUT SC, V5645, P49, DOI 10.1007/978-3-642-03007-9_4
   BARAL C, 1996, LECT NOTES COMPUTER, V1154, P175
   BARAL C, 1997, P 5 INT C DED OBJ OR, V1341, P247
   Bertino E., 2001, ACM Transactions on Information and Systems Security, V4, P191, DOI 10.1145/501978.501979
   Bertino Elisa., 2005, SACMAT 05, P29
   CHOLEWKA DG, 2000, P IFIP TC11 15 ANN W, V175, P341
   COMA C, 2008, P 3 INT C AV REL SEC, P473
   Cuppens F, 2003, LECT NOTES COMPUT SC, V2889, P754
   CUPPENS F, 2004, P 2 WORKSH FORM ASP, V173, P203
   Cuppens F, 2008, INT J INF SECUR, V7, P285, DOI 10.1007/s10207-007-0051-9
   Cuppens F, 2007, ELECTRON NOTES THEOR, V186, P3, DOI 10.1016/j.entcs.2007.01.064
   CUPPENSBOULAHIA N, 2008, P 23 INT INF SEC C S, V278, P173
   Debar H, 2006, LECT NOTES COMPUT SC, V4064, P109
   Debar H, 2007, J COMPUT VIROL HACKI, V3, P195, DOI 10.1007/s11416-007-0039-z
   Dewri R, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P204
   Franco TF, 2006, SEVENTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P195
   GARCIAALFARO J, 2006, P EUR S RES COMP SEC, V4189, P496
   GARCIACLEMENTE FJ, 2005, P 14 INT WWW C POL M, P10
   Gupta M, 2006, DECIS SUPPORT SYST, V41, P592, DOI 10.1016/j.dss.2004.06.004
   HE R, 2010, P 3 INT WORKSH AUT S, V6514, P216
   Homer J, 2009, IEEE J SEL AREA COMM, V27, P315, DOI 10.1109/JSAC.2009.090407
   Hwang K, 2001, IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P68, DOI 10.1109/NCA.2001.962517
   Li KQ, 2007, P INT COMP SOFTW APP, P255
   Mahajan Y.S., 2004, P 7 INT C THEORY APP, P360, DOI [DOI 10.1007/1152769527, 10.1007/11527695 27]
   MCDANIEL P, 2003, P 8 ACM S ACC CONTR, P80
   PREDA S, 2009, P ACM S INF COMP COM
   Preda S, 2007, SECRYPT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY, P5
   SANDHU R., 1999, ACM T INFORM SYST SE, V2, P105, DOI [10.1145/300830.300839, DOI 10.1145/300830.300839]
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   STRASSNER CJ, 2003, POLICY BASED NETWORK
   Toninelli A, 2006, LECT NOTES COMPUT SC, V4273, P473
   Xian F, 2002, NINTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P431, DOI 10.1109/ICPADS.2002.1183435
   XIAO YL, 2004, THESIS N CAROLINA ST
NR 39
TC 16
Z9 19
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2011
VL 84
IS 7
BP 1144
EP 1159
DI 10.1016/j.jss.2011.02.005
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 780HZ
UT WOS:000291846400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liang, P
   Jansen, A
   Aygeriou, P
   Tang, A
   Xu, L
AF Liang, Peng
   Jansen, Anton
   Aygeriou, Paris
   Tang, Antony
   Xu, Lai
TI Advanced quality prediction model for software architectural knowledge
   sharing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architectural knowledge; Software architecture; Knowledge sharing;
   Quality prediction model
ID ONTOLOGY
AB In the field of software architecture, a paradigm shift is occurring from describing the outcome of architecting process to describing the Architectural Knowledge (AK) created and used during architecting. Many AK models have been defined to represent domain concepts and their relationships, and they can be used for sharing and reusing AK across organizations, especially in geographically distributed contexts. However, different AK domain models can represent concepts that are different, thereby making effective AK sharing challenging. In order to understand the mapping quality from one AK model to another when more than one AK model coexists, AK sharing quality prediction based on the concept differences across AK models is necessary. Previous works in this area lack validation in the actual practice of AK sharing. In this paper, we carry out validation using four AK sharing case studies. We also improve the previous prediction models. We developed a new advanced mapping quality prediction model, this model (i) improves the prediction accuracy of the recall rate of AK sharing quality: (ii) provides a better balance between prediction effort and accuracy for AK sharing quality. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Liang, Peng] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [Aygeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9700 AK Groningen, Netherlands.
   [Jansen, Anton] ABB Corp Res, Ind Software Syst, SE-72178 Vasteras, Sweden.
   [Tang, Antony] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Xu, Lai] SAP Res Switzerland, CH-9000 St Gallen, Switzerland.
C3 Wuhan University; University of Groningen; ABB; Swinburne University of
   Technology
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
EM liangp@sklse.org; anton.jansen@se.abb.com; paris@cs.rug.nl;
   atang@swin.edu.au; lai.xu@sap.com
RI peng, liang/HKE-0294-2023; Tang, Antony/C-2459-2009
OI Tang, Antony/0000-0002-3574-3977; Liang, Peng/0000-0002-2056-5346; Xu,
   Lai/0000-0003-0063-759X; Avgeriou, Paris/0000-0002-7101-0754
FU Dutch Joint Academic and Commercial Quality Research & Development
   (Jacquard) [638.001.406]; Hefboom [641.000.405]; Natural Science
   Foundation of China (NSFC) [60903034]; ASTRON
FX This research has been partially sponsored by the Dutch Joint Academic
   and Commercial Quality Research & Development (Jacquard) program on
   Software Engineering Research via contract 638.001.406 GRIFFIN: a GRId
   For inFormatIoN about architectural knowledge, and Peng Liang is funded
   by the project Hefboom 641.000.405 and the Natural Science Foundation of
   China (NSFC) under grant no. 60903034 QuASAK: Quality Assurance in
   Software architecting process using Architectural Knowledge. The authors
   would like to thank ASTRON for their support and access to the LOFAR
   software architecture documents, and Olaf Zimmermann and Nelly Schuster
   from IBM Zurich Research Lab for providing the SOAD samples. We also
   would like to thank all the reviewers for their constructive comments.
CR AVGERIOU P., 2007, SIGSOFT Softw. Eng. Notes, V32, P41, DOI DOI 10.1145/1281421.1281443
   Avgeriou P., 2009, SIGSOFT SOFTW ENG NO, V34, P27
   Babar MA, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P237
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bechhofer S., 2004, W3C recommendation
   Brickley D., 2004, RDF VOCABULARY DESCR
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   Camon E, 2004, NUCLEIC ACIDS RES, V32, pD262, DOI 10.1093/nar/gkh021
   Capilla R., 2006, P 1 WORKSH SHARING R, P42
   CLEVERDON C, 1967, ASLIB PROC, V19, P173, DOI 10.1108/eb050097
   Cohen W. W., 1998, SIGMOD Record, V27, P201, DOI 10.1145/276305.276323
   de Boer RC, 2007, LECT NOTES COMPUT SC, V4880, P197
   Euzenat J, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P348
   Fonseca F. T., 2000, Computers, Environment and Urban Systems, V24, P251, DOI 10.1016/S0198-9715(00)00004-1
   JANSEN A., 2007, P 6 IEEE IFIP WORK C, P44
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Kalfoglou Y, 2003, KNOWL ENG REV, V18, P1, DOI 10.1017/S0269888903000651
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Lago P., 2008, P 7 WORK IEEE IFIP C, P271
   Lago P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P113, DOI 10.1007/978-3-642-02374-3_7
   LIANG P, 2009, RUGSEARCH09L01 U GRO
   LIANG P, 2007, RUGSEARCH07L01 U GRO
   Liang P, 2008, INT CONF QUAL SOFTW, P357, DOI 10.1109/QSIC.2008.20
   Liang P, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P343, DOI 10.1007/978-3-642-10294-3_17
   Liang P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P91, DOI 10.1007/978-3-642-02374-3_6
   Liang P, 2009, KNOWL ENG REV, V24, P225, DOI 10.1017/S0269888909990038
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Noy NF, 2004, SIGMOD REC, V33, P65, DOI 10.1145/1041410.1041421
   Schuster N., 2008, ADKWIK ARCHITECTURAL
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Su XM, 2006, DATA KNOWL ENG, V58, P47, DOI 10.1016/j.datak.2005.05.012
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Zhuge H, 2002, EXPERT SYST APPL, V22, P313, DOI 10.1016/S0957-4174(02)00019-2
   Zhuge H., 2004, NOWLEDGE GRID
   Zimmermann O., 2007, LNCS, P157
NR 39
TC 4
Z9 4
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2011
VL 84
IS 5
BP 786
EP 802
DI 10.1016/j.jss.2010.12.046
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 745PY
UT WOS:000289179300007
OA Green Published
DA 2024-07-18
ER

PT J
AU Abreu, R
   Zoeteweij, P
   van Gemund, AJC
AF Abreu, Rui
   Zoeteweij, Peter
   van Gemund, Arjan J. C.
TI Simultaneous debugging of software faults
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software fault diagnosis; Program spectra; Statistical and reasoning
   approaches
AB (Semi-)automated diagnosis of software faults can drastically increase debugging efficiency, improving reliability and time-to-market. Current automatic diagnosis techniques are predominantly of a statistical nature and, despite typical defect densities, do not explicitly consider multiple faults, as also demonstrated by the popularity of the single-fault benchmark set of programs. We present a reasoning approach, called Zoltar-M(ultiple fault), that yields multiple-fault diagnoses, ranked in order of their probability. Although application of Zoltar-M to programs with many faults requires heuristics (trading-off completeness) to reduce the inherent computational complexity, theory as well as experiments on synthetic program models and multiple-fault program versions available from the software infrastructure repository (SIR) show that for multiple-fault programs this approach can outperform statistical techniques, notably spectrum-based fault localization (SFL). As a side-effect of this research, we present a new SFL variant, called Zoltar-S(ingle fault), that is optimal for single-fault programs, outperforming all other variants known to date. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Abreu, Rui] Univ Porto, Fac Engn, Dept Informat Engn, P-4200465 Oporto, Portugal.
   [Zoeteweij, Peter] IntelliMag BV, Amsterdam, Netherlands.
   [van Gemund, Arjan J. C.] Delft Univ Technol, Fac Elect Math & CS, Embedded Software Dept, NL-2600 AA Delft, Netherlands.
C3 Universidade do Porto; Delft University of Technology
RP Abreu, R (corresponding author), Univ Porto, Fac Engn, Dept Informat Engn, Rua Dr Roberto Frias S-N, P-4200465 Oporto, Portugal.
EM rma@fe.up.pt; p.zoeteweij@gmail.com; a.j.c.vangemund@tudelft.nl
RI Abreu, Rui/A-8119-2015; Abreu, Rui/K-7048-2019
OI Abreu, Rui/0000-0003-3734-3157; Abreu, Rui/0000-0003-3734-3157
FU Netherlands Ministry of Economic Affairs [8SIK03021]
FX This work has been carried out as part of the TRADER project under the
   responsibility of the Embedded Systems Institute. This project is
   partially supported by the Netherlands Ministry of Economic Affairs
   under the 8SIK03021 program.
CR ABREU R, 2009, P IEEE ACM INT C AUT
   Abreu R., 2009, P 8 S ABSTR REF APPR
   ABREU R, 2009, 9 INT C QUAL SOFTW Q
   ABREU R, 2008, P 2008 INT WORKSH DY, P64
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baah G.K., 2008, P INT S SOFTW TEST A
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   DEKLEER J, 1992, ARTIF INTELL, V56, P197, DOI 10.1016/0004-3702(92)90027-U
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   DEKLEER J, 2007, P 18 INT WORKSH PRIN, P45
   ESSER M, 2007, P INT JOINT C ART IN, P2255
   FELDMAN A, 2008, P AAAI 08, P919
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   HARROLD M, 1998, EMPIRICAL INVESTIGAT, V33
   Iverson K. E., 1962, A Programming Language
   JANSSEN T, 2009, P IEEE ACM INT C AUT
   Jones J A., 2007, Debugging in parallel, P16
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Mayer Wolfgang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P128, DOI 10.1109/ASE.2008.23
   MAYER W, 2007, P INT JOINT C ART IN
   Pietersma J, 2006, IEEE SYS MAN CYBERN, P5325, DOI 10.1109/ICSMC.2006.385155
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   VAYANI R, 2007, THESIS DELFT U TECHN
   Wotawa F, 2002, LECT NOTES ARTIF INT, V2358, P746
   YILMAZ C, 2007, P 22 IEEE ACM INT C, P174
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   ZHANG Z, 2009, P 7 JOINT M EUR SOFT, P43, DOI DOI 10.1145/1595696.1595705
   Zheng Alice X., 2006, P INT C MACH LEARN I
   Zoeteweij P, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P213
NR 33
TC 34
Z9 39
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2011
VL 84
IS 4
SI SI
BP 573
EP 586
DI 10.1016/j.jss.2010.11.915
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 731XA
UT WOS:000288142500005
DA 2024-07-18
ER

PT J
AU Ohzahata, S
   Kawashima, K
AF Ohzahata, Satoshi
   Kawashima, Konosuke
TI An experimental study of peer behavior in a pure P2P network
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Advanced Information Networking and
   Applications Workshops
CY MAY 26-29, 2009
CL Bradford, ENGLAND
SP IEEE
DE P2P; Measurement; Peer behavior
AB Dynamic peer behavior in P2P networks has a large impact on the performance of the network because each peer acts simultaneously as a server and a client in an overlay network. However, peer behavior in pure P2P networks is not well known because there is no management system and the network size is large. We have proposed a measurement method to collect information efficiently, and a method of analyzing the peer behavior with or without file uploading for pure P2P file sharing networks. These methods have been applied to Winny, which is the most popular P2P file sharing application in Japan. The analysis results show that the network is composed of about 30% of peers observed in 24 h, and 50% of peers contribute to the network as file uploaders. Selfish peers, which leave the network after downloading, are observed especially in the morning. The file uploading peers and the peers joining after midnight remain in the network for a long period. We also give mathematical fitting for the distribution of the peer lifetime and the frequency of joining the network. These results show that the distribution of lifetime does not have a heavy tail, and the behavior of peers joining the network is not a Poisson process. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Ohzahata, Satoshi] Univ Electro Commun, Chofu, Tokyo, Japan.
   [Kawashima, Konosuke] Tokyo Univ Agr & Technol, Koganei, Tokyo, Japan.
C3 University of Electro-Communications - Japan; Tokyo University of
   Agriculture & Technology
RP Ohzahata, S (corresponding author), Univ Electro Commun, 1-5-1 Chofugaoka, Chofu, Tokyo, Japan.
EM ohzahata@is.uec.ac.jp; k-kawa@cc.tuat.ac.jp
RI ohzahata, satoshi/O-2266-2019; Ohzahata, Satoshi/AAV-5260-2020;
   Ohzahata, Satoshi/N-8116-2013
OI Ohzahata, Satoshi/0000-0003-0609-4725; 
CR Andrade N., 2005, P 2005 ACM SIGCOMM W, P111
   [Anonymous], 2003, P ATAPCC KARLSR BW G
   [Anonymous], 2004, P ANN C USENIX ANN T
   GODFREY PB, 2006, P ACM SIGCOMM, P147
   GUMMADI KP, 2003, P 19 ACM S OP SYST P, P314
   Guo Lei., 2005, 5 C INTERNET MEASURE, P35
   HANDURUKANDE SB, 2006, P 1 ACM SIGOPS EUROS, P359
   KANEKO I, 2005, TECHNOLOGY WINNY
   Karakaya M, 2009, IEEE INTERNET COMPUT, V13, P92, DOI 10.1109/MIC.2009.33
   Leonard D, 2007, IEEE ACM T NETWORK, V15, P644, DOI 10.1109/TNET.2007.893199
   Li JY, 2005, IEEE INFOCOM SER, P225
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   LOCHER T, 2006, P HOTN, V5, P85
   Neglia G, 2007, IEEE INFOCOM SER, P2216, DOI 10.1109/INFCOM.2007.256
   Pouwelse J A., 2005, P IPTPS 05
   Steiner M, 2009, IEEE ACM T NETWORK, V17, P1371, DOI 10.1109/TNET.2008.2009053
   Stutzbach D., 2006, PROC 6 ACM SIGCOMM I, P189
   Stutzbach D, 2007, MULTIMEDIA SYST, V13, P35, DOI 10.1007/s00530-007-0079-8
   Stutzbach D, 2009, IEEE ACM T NETWORK, V17, P377, DOI 10.1109/TNET.2008.2001730
   Wang XM, 2009, IEEE ACM T NETWORK, V17, P726, DOI 10.1109/TNET.2008.2001727
   Wu D, 2008, COMPUT COMMUN, V31, P220, DOI 10.1016/j.comcom.2007.08.008
   YANG M, 2007, LNCS, V3640, P182
NR 22
TC 8
Z9 10
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2011
VL 84
IS 1
SI SI
BP 21
EP 28
DI 10.1016/j.jss.2010.08.025
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 696LH
UT WOS:000285442400004
DA 2024-07-18
ER

PT J
AU Yang, Y
   Souissi, S
   Défago, X
   Takizawa, M
AF Yang, Yan
   Souissi, Samia
   Defago, Xavier
   Takizawa, Makoto
TI Fault-tolerant flocking for a group of autonomous mobile robots
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Advanced Information Networking and
   Applications Workshops
CY MAY 26-29, 2009
CL Bradford, ENGLAND
SP IEEE
DE Flocking; Fault tolerance; Distributed algorithms; Mobile robots;
   k-Bounded scheduler
AB Consider a system composed of mobile robots that move on the plane, each of which independently executing its own instance of an algorithm. Given a desired geometric pattern, the flocking problem consists in ensuring that the robots form this pattern and maintain it while moving together on the plane. In this paper, we explore flocking in the presence of faulty robots, where the desired pattern is a regular polygon. We propose a distributed fault tolerant flocking algorithm assuming a semi-synchronous model with a k-bounded scheduler, in the sense that no robot is activated no more than k times between any two consecutive activations of any other robot.
   The algorithm is composed of three parts: failure detector, ranking assignment, and flocking algorithm. The role of the rank assignment is to provide a persistent and unique ranking for the robots. The failure detector identifies the set of currently correct robots in the system. Finally, the flocking algorithm handles the movement and reconfiguration of the flock, while maintaining the desired shape. The difficulty of the problem comes from the combination of the three parts, together with the necessity to prevent collisions and allow the rotation of the flock. We formally prove the correctness of our proposed solution. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Yang, Yan] Western Illinois Univ, Macomb, IL 61455 USA.
   [Souissi, Samia] Nagoya Inst Technol, Nagoya, Aichi, Japan.
   [Defago, Xavier] Japan Adv Inst Sci & Technol, Kanazawa, Ishikawa, Japan.
   [Takizawa, Makoto] Seikei Univ, Tokyo, Japan.
C3 Western Illinois University; Nagoya Institute of Technology; Japan
   Advanced Institute of Science & Technology (JAIST); Seikei University
RP Yang, Y (corresponding author), Western Illinois Univ, Macomb, IL 61455 USA.
EM yanyang818@gmail.com
RI Takizawa, Makoto/R-1178-2019; Défago, Xavier/P-5295-2015
OI Takizawa, Makoto/0000-0002-7155-0187; Défago, Xavier/0000-0002-2377-205X
CR Ando H, 1999, IEEE T ROBOTIC AUTOM, V15, P818, DOI 10.1109/70.795787
   Canepa D, 2007, LECT NOTES COMPUT SC, V4838, P52
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   Gervasi V, 2004, DISCRETE APPL MATH, V144, P324, DOI 10.1016/j.dam.2003.11.010
   Shi H, 2009, INT J CONTROL, V82, P43, DOI 10.1080/00207170801983091
   Souissi S, 2008, LECT NOTES COMPUT SC, V5401, P145, DOI 10.1007/978-3-540-92221-6_11
   Turgut A.E., 2008, P 7 INT JOINT C AUTO, P39
   Yan Yang, 2008, GPC Workshops - 2008 3rd International Conference on Grid and Pervasive Computing Workshops, P262
   YOSHIDA D, 1997, SYSTEMS COMPUTERS JA, V28
   Yousuf F, 2009, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON ENVIRONMENTAL AND COMPUTER SCIENCE, P454, DOI 10.1109/ICECS.2009.96
NR 10
TC 23
Z9 23
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2011
VL 84
IS 1
SI SI
BP 29
EP 36
DI 10.1016/j.jss.2010.08.026
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 696LH
UT WOS:000285442400005
DA 2024-07-18
ER

PT J
AU Brændeland, G
   Refsdal, A
   Stolen, K
AF Braendeland, Gyrd
   Refsdal, Atle
   Stolen, Ketil
TI Modular analysis and modelling of risk scenarios with dependencies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Modular risk analysis; Risk scenario; Dependency; Critical
   infrastructure; Threat modelling
ID NETWORKS
AB The risk analysis of critical infrastructures such as the electric power supply or telecommunications is complicated by the fact that such infrastructures are mutually dependent. We propose a modular approach to the modelling and analysis of risk scenarios with dependencies. Our approach may be used to deduce the risk level of an overall system from previous risk analyses of its constituent systems. A custom made assumption-guarantee style is put forward as a means to describe risk scenarios with external dependencies. We also define a set of deduction rules facilitating various kinds of reasoning, including the analysis of mutual dependencies between risk scenarios expressed in the assumption-guarantee style. (c) 2010 Elsevier Inc. All rights reserved.
C1 [Braendeland, Gyrd; Refsdal, Atle; Stolen, Ketil] SINTEF ICT, Oslo, Norway.
   [Braendeland, Gyrd; Stolen, Ketil] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 SINTEF; University of Oslo
RP Brændeland, G (corresponding author), SINTEF ICT, Oslo, Norway.
EM gyrd.brendeland@sintef.no
FU Research Council of Norway [180052/S10, 160317]; EU
FX The research for this paper has been partly funded by the DIGIT
   (180052/S10) and COMA (160317) projects of the Research Council of
   Norway, partly through the SINTEF-internal project Rik og Sikker and the
   MASTER project funded under the EU 7th Research Framework Programme. We
   would like to thank Heidi Dahl and Iselin Engan who participated in the
   early work on Dependent CORAS which is a forerunner for dependent risk
   graphs. Heidi Dahl also defined the structured semantics of the CORAS
   language on top of which the formal semantics presented here is built,
   and participated in defining the CORAS calculus for computing
   likelihoods of vertices and relations in threat diagrams. Furthermore,
   we would like to thank Bjornar Solhaug who gave useful comments with
   regard to formulating some of the rules for dependent risk graphs and
   for motivating the assumption-guarantee style for risk analysis, Mass
   Soldal Lund for valuable contributions and comments, and Bjarte Ostvold
   for proof reading.
CR ABADI M, 1995, ACM T PROGR LANG SYS, V17, P507, DOI 10.1145/203095.201069
   [Anonymous], 61025 IEC
   [Anonymous], 60300 IEC
   BENGTSSON J, 2009, REFOIR2901SE SWED DE
   Bouti A., 1994, Int. J. Reliab. Qual. Saf. Eng, V1, P515, DOI DOI 10.1142/S0218539394000362
   CHARNIAK E, 1991, AI MAG, V12, P50
   DAHL HEI, 2007, A970 SINTEF ICT
   DOORMAN G, 2004, A5962 SINTEF EN RES
   Dudley R. M., 2002, Cambridge Studies in Advanced Mathematics, V2nd
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   FENTON N, 2004, W070401 AG
   FLENTGE F, 2006, INTEGRATED RISK REDU
   GIESE H, 2006, LNCS, V4166
   GIESE H, 2004, LNCS, V3219
   HILBERT D, 1958, PRINCIPLES MATH LOGI
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOGGANVIK I, 2007, THESIS U OSIO
   HOGGANVIK I, 2005, P 13 INT WORKSH PROG
   HOGGANVIK I, 2006, LNCS, V4199
   HOGGANVIK I, 2005, P 4 INT S EMP SOFTW
   ISO, 2009, Risk management: Vocabulary
   Jones C. B., 1981, THESIS OXFORD U
   JONES CB, 1983, IFIP C
   KAISER B, 2003, P 8 AUSTR WORKSH SAF
   LUND MS, MODEL DRIVE IN PRESS
   Mannan S., 2005, Lee's Loss Prevention in the Process Industries: Hazard Identification, Assessment and Control, Volume, V1
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MISRA J, 1981, IEEE T SOFTWARE ENG, V7, P417, DOI 10.1109/TSE.1981.230844
   Ortmeier F, 2007, ELECTRON NOTES THEOR, V185, P139, DOI 10.1016/j.entcs.2007.05.034
   Papadopoulos Y, 2001, RELIAB ENG SYST SAFE, V71, P229, DOI 10.1016/S0951-8320(00)00076-4
   Rausand M, 2004, SYSTEM RELIABILITY T
   RESTREPO CE, 2006, P 39 ANN HAW INT C S, V10
   Rinaldi SA, 2001, IEEE CONTR SYST MAG, V21, P11, DOI 10.1109/37.969131
   ROBINSON RM, 2001, RISK RELIABILITY AN
   Schneier B, 1999, DR DOBBS J, V24, P21
   SEGA R, 1995, MODELING VERIFICATIO
NR 36
TC 21
Z9 21
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2010
VL 83
IS 10
BP 1995
EP 2013
DI 10.1016/j.jss.2010.05.069
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653SV
UT WOS:000282117900030
DA 2024-07-18
ER

PT J
AU Özogul, CO
   Karsak, EE
   Tolga, E
AF Ozogul, C. Okan
   Karsak, E. Ertugrul
   Tolga, Ethem
TI A real options approach for evaluation and justification of a hospital
   information system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE ERP investments; Hospital information system investment justification;
   Real options; Compound options; Option valuation models
AB Nowadays healthcare organizations globally recognize the importance of investing in information technologies to improve the quality of care delivery and reduce costs. The key drivers of healthcare sector such as continuously improving healthcare standards and insurance systems have introduced new requirements for hospitals, which in return provided a solid ground for decision-makers to consider implementing hospital information systems that are customized and improved versions of enterprise resource planning (ERP) systems designed according to the needs of the healthcare sector. The conventional discounted cash flow methods ignore the value of managerial and strategic flexibility inherent in these investments, which is crucial for justification of the investment decision. This study introduces a real options-based methodology which overcomes the limitations of traditional valuation methods and enables decision-makers to value an ERP system investment incorporating multiple options. The option valuation model developed in this study extends the binomial lattice framework to model a hospital information system (HIS) investment opportunity with compound options. The potential application of the proposed model is illustrated through evaluation of a real-world HIS investment. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Karsak, E. Ertugrul; Tolga, Ethem] Galatasaray Univ, Dept Ind Engn, TR-80840 Istanbul, Turkey.
   [Ozogul, C. Okan] HAVELSAN, TR-06520 Ankara, Turkey.
C3 Galatasaray University; Havelsan AS
RP Karsak, EE (corresponding author), Galatasaray Univ, Dept Ind Engn, TR-80840 Istanbul, Turkey.
EM ekarsak@gsu.edu.tr
RI Karsak, E. Ertugrul/AAB-2947-2020
OI Karsak, E. Ertugrul/0000-0002-3921-6189
CR Benaroch M, 1999, INFORM SYST RES, V10, P70, DOI 10.1287/isre.10.1.70
   BLACK F, 1973, J POLIT ECON, V81, P637, DOI 10.1086/260062
   Bodie Z., 2014, Investments
   Brach M.A., 2003, REAL OPTIONS PRACTIC
   Copeland T, 2004, HARVARD BUS REV, V82, P90
   Copeland T.E., 1998, MCKIN Q, P38
   Davenport TH, 1998, HARVARD BUS REV, V76, P121
   DIXIT AK, 1995, HARVARD BUS REV, V73, P105
   Dos Santos B. L., 1991, Journal of Management Information Systems, V7, P71
   Hull J.C., 2002, Options, Futures and Other Derivatives
   Jacob WF, 2003, TECHNOVATION, V23, P291, DOI 10.1016/S0166-4972(01)00116-X
   Karsak EE, 2009, EXPERT SYST APPL, V36, P660, DOI 10.1016/j.eswa.2007.09.016
   Karsak EE, 2005, INT J SYST SCI, V36, P243, DOI 10.1080/00207720500062231
   KULATILAKA N, 1999, REAL OPTIONS MANAGIN
   Kumar K, 2000, COMMUN ACM, V43, P22, DOI 10.1145/332051.332063
   Kumar RL, 2002, INFORM MANAGE-AMSTER, V40, P63, DOI 10.1016/S0378-7206(01)00133-1
   MARGRABE W, 1978, J FINANC, V33, P177, DOI 10.1111/j.1540-6261.1978.tb03397.x
   Nah F.F.-H., 2002, ENTERPRISE RESOURCE
   NICHOLS NA, 1994, HARVARD BUS REV, V72, P88
   Ransom S.M., 2004, The Healthcare Quality Book, Vision, strategy and Tools
   TAN J, 2005, E HEALTH CARE INFORM
   Taudes A., 1998, Journal of Management Information Systems, V15, P165
   Trigeorgis L., 1996, REAL OPTIONS MANAGER
   Wu LC, 2008, J SYST SOFTWARE, V81, P1039, DOI 10.1016/j.jss.2007.10.004
NR 24
TC 23
Z9 30
U1 1
U2 23
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2009
VL 82
IS 12
BP 2091
EP 2102
DI 10.1016/j.jss.2009.07.005
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 523GR
UT WOS:000272061000014
DA 2024-07-18
ER

PT J
AU Hong, W
   Chen, TS
   Shiu, CW
AF Hong, Wien
   Chen, Tung-Shou
   Shiu, Chih-Wei
TI Reversible data hiding for high quality images using modification of
   prediction errors
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Reversible data hiding; Histogram-shifting; Error modification
ID STEGANOGRAPHIC METHOD; DIFFERENCE EXPANSION
AB In this paper, a reversible data hiding scheme based on modification of prediction errors (MPE) is proposed. For the existing histogram-shifting based reversible data hiding techniques, though the distortion caused by embedding is low, the embedding capacity is limited by the frequency of the most frequent pixel. To remedy this problem, the proposed method modifies the histogram of prediction errors to prepare vacant positions for data embedding. The PSNR of the stego image produced by MPE is guaranteed to be above 48 dB, while the embedding capacity is, on average, almost five times higher than that of the well-known Ni et al. techniques with the same PSNR. Besides, MPE not only has the capability to control the capacity-PSNR, where fewer data bits need less error modification, but also can be applied to images with flat histogram. Experimental results indicate that MPE, which innovatively exploits the modification of prediction errors, outperforms the prior works not only in terms of larger payload, but also in terms of stego image quality. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Hong, Wien; Shiu, Chih-Wei] Yu Da Coll Business, Dept Informat Management, Miaoli 361, Taiwan.
   [Chen, Tung-Shou] Natl Taichung Inst Technol, Grad Sch Comp Sci & Informat Technol, Taichung 404, Taiwan.
RP Hong, W (corresponding author), Yu Da Coll Business, Dept Informat Management, Miaoli 361, Taiwan.
EM wienhong@ydu.edu.tw; tschen@nrit.edu.tw
OI Shiu, Chih-Wei/0000-0003-1319-9023
CR Alattar AM, 2004, IEEE T IMAGE PROCESS, V13, P1147, DOI 10.1109/TIP.2004.828418
   Awranjeb M, 2005, J ELECTRON IMAGING, V14, DOI 10.1117/1.1877523
   Celik MU, 2002, 2002 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P157
   Coltuc D, 2007, IEEE IMAGE PROC, P1377
   Fallahpour M, 2007, IEICE ELECTRON EXPR, V4, P205, DOI 10.1587/elex.4.205
   Fridrich J, 2002, EURASIP J APPL SIG P, V2002, P185, DOI 10.1155/S1110865702000537
   Gonzalez R. C., 2006, Digital Image Processing, V3rd
   Hwang J, 2006, LECT NOTES COMPUT SC, V4283, P348
   Kamstra L, 2005, IEEE T IMAGE PROCESS, V14, P2082, DOI 10.1109/TIP.2005.859373
   Kim HJ, 2008, IEEE T INF FOREN SEC, V3, P456, DOI 10.1109/TIFS.2008.924600
   Malvar H. S., 2000, Proceedings DCC 2000. Data Compression Conference, P243, DOI 10.1109/DCC.2000.838164
   Ni ZC, 2006, IEEE T CIRC SYST VID, V16, P354, DOI 10.1109/TCSVT.2006.869964
   Salomon David., 2000, DATA COMPRESSION COM, V2nd
   Sharma P, 2003, PROCEEDINGS EC-VIP-MC 2003, VOLS 1 AND 2, P423
   Thodi DM, 2007, IEEE T IMAGE PROCESS, V16, P721, DOI 10.1109/TIP.2006.891046
   Tian J, 2003, IEEE T CIRC SYST VID, V13, P890, DOI 10.1109/TCSVT.2003.815962
   Wang CM, 2008, J SYST SOFTWARE, V81, P150, DOI 10.1016/j.jss.2007.01.049
   Wang H., 2004, COMMUNICATIONS ACM, V47
   XUAN G, 2007, P INT WORKSH DIG WAT, P264
   Yu YH, 2007, COMPUT VIS IMAGE UND, V107, P183, DOI 10.1016/j.cviu.2006.11.002
NR 20
TC 255
Z9 273
U1 0
U2 27
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2009
VL 82
IS 11
SI SI
BP 1833
EP 1842
DI 10.1016/j.jss.2009.05.051
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 518HN
UT WOS:000271681800008
DA 2024-07-18
ER

PT J
AU Juric, MB
   Sasa, A
   Brumen, B
   Rozman, I
AF Juric, Matiaz B.
   Sasa, Ana
   Brumen, Bostjan
   Rozman, Ivan
TI WSDL and UDDI extensions for version support in web services
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Versioning; Web services; SOA; WSDL; UDDI
ID ARCHITECTURE
AB Versioning is an important aspect of web service development, which has not been adequately addressed so far. in this article, we propose extensions to WSDL and UDDI to support versioning of web service interfaces at development-time and run-time. We address service-level and operation-level versioning, service endpoint mapping, and version sequencing. We also propose annotation extensions for developing versioned web services in Java. We have tested the proposed solution for versioning in two real-world environments and identified considerable improvements in service development and maintenance efficiency, improved service reuse, and simplified governance. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Juric, Matiaz B.; Brumen, Bostjan; Rozman, Ivan] Univ Maribor, FERI, Inst Informat, SI-2000 Maribor, Slovenia.
   [Sasa, Ana] Univ Ljubljana, FRI, Informat Syst Lab, SI-1000 Ljubljana, Slovenia.
C3 University of Maribor; University of Ljubljana
RP Juric, MB (corresponding author), Univ Maribor, FERI, Inst Informat, Smetanova 17, SI-2000 Maribor, Slovenia.
EM matjaz.juric@uni-mb.si
RI Brumen, Boštjan/O-9044-2019
OI Brumen, Boštjan/0000-0002-0560-1230
CR [Anonymous], 2007, Web Services Description Language (WSDL) Version 2.0
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   [Anonymous], 2006, Business Process Execution Language for Web Services BPEL and BPEL4WS
   [Anonymous], 2006, WEB SERVICES METADAT
   Arsanjani A., 2004, SERVICE ORIENTED MOD
   BRADA P, 2001, ACM SIGSOFT SOFTWARE, V26, P297
   Brown K., 2004, Best practices for web services versioning
   Chiereghin F, 2001, VERIFICHE, V30, P3
   Cobéna G, 2002, PROC INT CONF DATA, P41, DOI 10.1109/ICDE.2002.994696
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   GAUR H, 2007, BPEL COOKBOOK BEST P
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   *I SOFTW RES, 2005, XADL 2 0 HIGHL EXT A
   IRANI R, 2004, VERSIONING WEB SERVI
   JURIC MB, 2007, SOA APPROACH INTEGRA
   Kaminski P., 2006, P 2006 C CTR ADV STU, P23, DOI [10.1145/1188966.1188997, DOI 10.1145/1188966.1188997]
   Kaminski P., 2006, Proceedings of the 2006 international workshop on Self-adaptation and self-managing systems (SEAMS 2006), P86
   KATZ RH, 1990, ACM COMPUT SURV, V22, P4
   KENYON J, 2003, WEB SERVICE VERSIONI
   Klahold P., 1986, Proceedings of Very Large Data Bases. Twelfth International Conference on Very Large Data Bases, P319
   Lassing N, 2003, J SYST SOFTWARE, V65, P141, DOI 10.1016/S0164-1212(02)00056-0
   LIE A, 1989, LNCS, V387, P191
   Lin YJ, 1996, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.1996.493425
   Little M., 2007, DOES WSDL 2 0 MATTER
   Liu YD, 2006, ACM SIGPLAN NOTICES, V41, P325, DOI 10.1145/1167515.1167502
   MARIAN A, 2001, P 27 VLDB C IT
   MBARECK NOA, 2007, 2 INT C INT WEB APPL, P59
   *MSDN, 2008, ASS VERS NET FRAM DE
   *OASIS, 2004, UDDI VERS 3 02
   Pasley J, 2006, IEEE INTERNET COMPUT, V10, P72, DOI 10.1109/MIC.2006.45
   PEITZ C, 2004, DESIGN STRATEGIES WE
   Ponnekanti SR, 2004, LECT NOTES COMPUT SC, V3231, P331
   REICHENBERGER C, 1994, SOFTWARE-CONC TOOL, V15, P97
   Saccol DD, 2007, DOCENG'07: PROCEEDINGS OF THE 2007 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P79
   SALZ R, 2004, WSDL 2 JUST SAY NO
   Senivongse T., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P201, DOI 10.1109/DOA.1999.794027
   Snodgrass RT, 2008, DATA KNOWL ENG, V65, P223, DOI 10.1016/j.datak.2007.09.003
   Stets RJ, 1999, COMPUTER, V32, P54, DOI 10.1109/2.774919
   STUCKENHOLZ A, 2005, ACM SIGSOFT SOFTWARE, V30, P5
   *SUN, 2003, JAV PROD VERS
   *SUN MICR, 2002, JAVATM API XML REG P
   TALENS C, 1993, P 19 VLDB C IR, P62
   *UDD4J, 2006, UDDI4J SOURC FORG
   Vinoski S, 2004, IEEE INTERNET COMPUT, V8, P87, DOI 10.1109/MIC.2004.1260709
   W3C, WEB SERV DESCR LANG
   Wang FS, 2008, DATA KNOWL ENG, V65, P304, DOI 10.1016/j.datak.2007.08.002
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
   *WIK, 2008, SOFTW VERS
   WONG K, 2002, P ACM DOCENG 02 US
   ZELLER A, 1995, P 3 ACM SIGSOFT S FD, P151
   2007, JAVA API XML BASED W
NR 52
TC 34
Z9 40
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2009
VL 82
IS 8
SI SI
BP 1326
EP 1343
DI 10.1016/j.jss.2009.03.001
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 489NA
UT WOS:000269425600010
DA 2024-07-18
ER

PT J
AU Wang, ZH
   Chang, CC
   Lin, CC
   Li, MC
AF Wang, Zhi-Hui
   Chang, Chin-Chen
   Lin, Chia-Chen
   Li, Ming-Chu
TI A reversible information hiding scheme using left-right and up-down
   chinese character representation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data hiding; Text data hiding; Chinese character; Component concept;
   Reversibility
ID WATERMARKING
AB Techniques for text data hiding are different from image data hiding, video data hiding and audio data hiding. To break through the difficulty of text data hiding, Sun, Lou and Huang proposed a novel Chinese text data hiding scheme called the L-R. scheme. In the L-R scheme, Sun et al. embedded secrets into Chinese characters that can be divided into left and right components. This paper describes how our proposed scheme extends the component concept to incorporate the up and down components of Chinese characters rather than the left and right components only, to significantly enhance hiding capacity. In addition, this paper adds a reversible function to Sun et al.'s L-R scheme to make it possible for receivers to obtain the original cover text and use it repeatedly for later transmission of secrets after the initial hidden secrets have been extracted. Finally, the extended scheme simplifies the extracting procedure and efficiently reduces the memory required on the receiver side during the secret extracting phase by using a new comparison method. Experimental results confirm the improved functions offered by the proposed scheme. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Lin, Chia-Chen] Providence Univ, Dept Comp Sci & Informat Management, Taichung, Taiwan.
   [Wang, Zhi-Hui; Li, Ming-Chu] Dalian Univ Technol, Sch Software, Dalian, Liaoning, Peoples R China.
   [Chang, Chin-Chen] Feng Chia Univ, Dept Comp Sci & Informat Engn, Taichung 40724, Taiwan.
C3 Providence University - Taiwan; Dalian University of Technology; Feng
   Chia University
RP Lin, CC (corresponding author), Providence Univ, Dept Comp Sci & Informat Management, Taichung, Taiwan.
EM Wangzhihui1017@yahoo.cn; ccc@cs.ccu.edu.tw; mhlin3@pu.edu.tw
RI Chang, Ching-Chun/JAN-6210-2023; wang, zhihui/HSF-6639-2023
OI Lin, Chia-Chen/0000-0003-4480-7351
CR Atallah M J, 2001, P 4 INT WORKSH INF H, P185
   CHAPMAN M, 1997, HIDING HIDDEN SOFTWA
   CHIANG YL, 2003, P 2 INT WORKSH DIG W, P129
   KAMMER RG, 1999, DATA ENCRYPTION STAN
   MAHER K, 1995, TEXTO
   Murphy B., 2007, SYNTAX CONCEALMENT R
   Pan JS, 2004, ELECTRON LETT, V40, P1409, DOI 10.1049/el:20046454
   Pan JS, 2004, IEICE T FUND ELECTR, VE87A, P1839
   Rivest Ronald L., 1977, U.S. Patent, Patent No. [4,405.829, 4405829]
   Sun Xingming., 2004, INFOS TERNATIONAL C, P76
   Sun XM, 2002, INT J PATTERN RECOGN, V16, P735, DOI 10.1142/S0218001402001939
   VYBORNOVA O, 2007, P IEEE INT C INF REU, P177
   Weng SW, 2008, CIRC SYST SIGNAL PR, V27, P229, DOI 10.1007/s00034-008-9021-3
   Weng SW, 2008, IEEE SIGNAL PROC LET, V15, P721, DOI 10.1109/LSP.2008.2001984
   Winstein K, 1999, LEXICAL STEGANOGRAPH
   Wu S, 2003, RES INFORM HIDING
NR 16
TC 20
Z9 24
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2009
VL 82
IS 8
SI SI
BP 1362
EP 1369
DI 10.1016/j.jss.2009.04.045
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 489NA
UT WOS:000269425600012
DA 2024-07-18
ER

PT J
AU Berander, P
   Svahnberg, M
AF Berander, Patrik
   Svahnberg, Mikael
TI Evaluating two ways of calculating priorities in requirements
   hierarchies - An experiment on hierarchical cumulative voting
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Requirements prioritization; Requirements hierarchies; Compensation
   factor; Accuracy; Empirical experiment
ID NUMBER 7; PLUS
AB When developing large-scale software systems, there is often a large amount of requirements present, and they often reside on several hierarchical levels. In most cases, not all stated requirements can be implemented into the product due to different constraints, and the requirements must hence be prioritized. As requirements on different abstraction levels shall not be compared, prioritization techniques that are able to handle multi-level prioritization are needed. Different such techniques exist, but they seem to result in unfair comparisons when a hierarchy is unbalanced. In this paper, an empirical experiment is presented where an approach that compensate for this challenge is evaluated. The results indicate that some form of compensation is preferred, and that the subjects' preference is not influenced by the amount of information given. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Berander, Patrik; Svahnberg, Mikael] Blekinge Inst Technol, Dept Syst & Software Engn, Sch Engn, Soft Ctr, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Svahnberg, M (corresponding author), Blekinge Inst Technol, Dept Syst & Software Engn, Sch Engn, Soft Ctr, POB 520, S-37225 Ronneby, Sweden.
EM patrik.berander@bth.se; mikael.svahnberg@bth.se
RI Berander, Patrik/P-4536-2019; Berander, Patrik/H-9743-2014
FU Knowledge Foundation in Sweden
FX We would like to thank Per Jonsson for the help with implementing the
   instrumentation tool. We would also like to express our gratitude to the
   students who voluntarily devoted their time to the experiment and hence
   provided the necessary input. This work was partly funded by the
   Knowledge Foundation in Sweden under a research grant for the project
   "Blekinge - Engineering Software Qualities (BESQ)"
   (http://www.bth.se/besq).
CR Anderson D.R., 2000, INTRO MANAGEMENT SCI
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berander P, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P316, DOI 10.1109/ISESE.2003.1237992
   BERANDER P, 2006, SPECIAL ISSUE REQUIR, V16, P1
   Berander P., 2006, SERPS, V6, P18
   BERANDER P, 2004, P 8 INT C EMP ASS SO, P57
   Berander P., 2006, INT S EMPIRICAL SOFT, P316
   DAVIDSSON P, 2005, LNCS, V3950, P205
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2007, INFORM SOFTWARE TECH, V49, P790, DOI 10.1016/j.infsof.2006.09.003
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   JEDLITSCHKA A, 2007, ISERN0701 FRAUNH I E
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON L, 2004, P 8 INT C EMP ASS SO, P145
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3281, P161
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   NGOTHE A, 2005, ENG MANAGING SOFTWAR, P267
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Robson C., 2002, Real world research
   Saaty T., 1980, The Analytic Hierarchy Process: Planning, Priority Setting, Resource Allocation
   Saaty TL, 2003, MATH COMPUT MODEL, V38, P233, DOI [10.1016/S0895-7177(03)90083-5, 10.1016/S0895-7177(03)00216-4]
   Saaty TL., 2001, INT SERIES OPERATION
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   2006, FOCAL POINT TOOL
NR 33
TC 24
Z9 30
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2009
VL 82
IS 5
BP 836
EP 850
DI 10.1016/j.jss.2008.11.841
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BN
UT WOS:000265318300010
DA 2024-07-18
ER

PT J
AU Di Modica, G
   Tomarchio, O
   Vita, L
AF Di Modica, Giuseppe
   Tomarchio, Orazio
   Vita, Lorenzo
TI Dynamic SLAs management in service oriented environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service level agreement (SLA); Service composition; Negotiation; SOA;
   Grid
AB The increasing adoption of service oriented architectures across different administrative domains, forces service providers to use effective mechanisms and strategies of resource management in order for them to be able to guarantee the quality levels their customers demands during service provisioning. Service level agreements (SLA) are the most common mechanism used to establish agreements on the quality of a service (QoS) between a service provider and a service consumer. The WS-Agreement specification, developed by the Open Grid Forum, is a Web Service protocol to establish agreements on the QoS level to be guaranteed in the provision of a service. The committed agreement cannot be modified during service provision and is effective until all activities pertaining to it are finished or until one of the signing party decides to terminate it. In B2B scenarios where several service providers are involved in the composition of a service. and each of them plays both the parts of provider and customer, several one-to-one SLAs need to be signed. In such a rigid context the global QoS of the final service can be strongly affected by any violation on each single SLA. In order to prevent such violations, SLAs need to adapt to any possible needs that might come up during service provision. In this work we focus on the WS-Agreement specification and propose to enhance the flexibility of its approach. We integrate new functionality to the protocol that enable the parties of a WS-Agreement to re-negotiate and modify its terms during the service provision, and show how a typical scenario of service composition can benefit from our proposal. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Di Modica, Giuseppe; Tomarchio, Orazio; Vita, Lorenzo] Univ Catania, Dipartimento Ingn Informat & Telecomunicaz, I-95125 Catania, Italy.
C3 University of Catania
RP Tomarchio, O (corresponding author), Univ Catania, Dipartimento Ingn Informat & Telecomunicaz, Viale A Doria 6, I-95125 Catania, Italy.
EM Giuseppe.DiModica@diit.unict.it; Orazio.Tomarchio@diit.unict.it;
   Lorenzo.Vita@diit.unict.it
RI Tomarchio, Orazio/C-6295-2008
OI Tomarchio, Orazio/0000-0003-4653-0480; Di Modica,
   Giuseppe/0000-0002-0298-7828
CR ANGELOV S, 2004, P 6 INT C EL COMM IC
   ANGELOV S, 2001, TRCTIT0121 U 20
   [Anonymous], BREIN PROJ
   BATTRE D, 2007, P 26 WORKSH UK PLANN
   *BEINGRID, BEINGRID PROJ
   DAN A, 2004, P 2 INT C SERV OR CO
   DIMODICA G, 2007, NONF PROP SERV LEV A
   Frankova G., 2006, J SOFTWARE, V1, P23
   *GRIA, GRIA PROJ
   JOITA L, 2005, P 3 INT WORKSH MIDDL
   Keller A., 2003, J NETWORK SYSTEMS MA, V11
   Overton C., 2002, J COMPUTER RESOURCE, V106, P32
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   PAPAZOGLOU MP, 2003, 4 INT C WEB INF SYST
   PICHOT A, 2007, TR0082 COREGRID
   Regalbuto V, 2007, IEEE INT C SERV COMP
   Sakellariou R., 2005, P 3 INT WORKSH MIDDL
   WAELDRICH O, 2006, WS AGREEMENT BASED N
   *WORLD WID WEB CON, 2006, WEB SERV DESCR LANG
   2007, WS AGREEMENT FRAMEWO
NR 20
TC 28
Z9 32
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2009
VL 82
IS 5
BP 759
EP 771
DI 10.1016/j.jss.2008.11.010
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BN
UT WOS:000265318300003
DA 2024-07-18
ER

PT J
AU Bellini, P
   Nesi, P
   Rogai, D
AF Bellini, P.
   Nesi, P.
   Rogai, D.
TI Expressing and organizing real-time specification patterns via temporal
   logics
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Patterns; Real-time specification pattern; Formal methods; Temporal
   logic; TILCO
ID SYSTEM SPECIFICATION; INTERVAL LOGIC
AB Formal specification models provide support for the formal verification and validation of the system behaviour. This advantage is typically paid in terms of effort and time spent in learning and using formal methods and tools. The introduction and usage of patterns have a double impact. They stand for examples on how to cover classical problems with formal methods in many different notations, so that the user can shorten the time to understand if a formal method can be used to meet his purpose and how it can be used. Furthermore, they are used for shortening the specification time, by reusing and composing different patterns to cover the specification, thus producing more understandable specifications which refer to commonly known patterns. For these reasons, both interests in and usage of patterns are growing and a higher number of proposals for patterns and pattern classification/organization has appeared in the literature. This paper reports a review of the state of the art for real-time specification patterns, so as to organize them in a unified way, while providing some new patterns which complete the unified model. The proposed organization is based on some relationships among patterns as demonstrated in the paper. During the presentation the patterns have been formalized in TILCO-X, whereas in appendix a list of patterns with formalizations in several different logics such as TILCO, LTL, CTL, GIL, QRE, MTI, TCTL and RTGIL, is provided disguised as links to the locations where such formalizations can be recovered and/or are directly reported, if found not accessible in the literature; this allows the reader to have a detailed view of all the classified patterns, including the ones already added. Furthermore, an example has been proposed to highlight the usefulness of the new identified patterns completing the unified model. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Bellini, P.; Nesi, P.; Rogai, D.] Univ Florence, Dept Syst & Informat, Distributed Syst & Internet Technol Lab, DISIT DSI, I-50139 Florence, Italy.
C3 University of Florence
RP Nesi, P (corresponding author), Univ Florence, Dept Syst & Informat, Distributed Syst & Internet Technol Lab, DISIT DSI, Via S Marta 3, I-50139 Florence, Italy.
EM nesi@dsi.unifi.it
RI ; Bellini, Pierfrancesco/D-5923-2015
OI nesi, paolo/0000-0003-1044-3107; Bellini,
   Pierfrancesco/0000-0002-8167-1003
CR ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   Alur R., 1991, THESIS STANFORD U
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   Bellini P, 2000, ACM COMPUT SURV, V32, P12, DOI 10.1145/349194.349197
   Bellini P, 2001, IEEE INT C ENG COMP, P15, DOI 10.1109/ICECCS.2001.930160
   Bellini P, 2006, IEEE T SOFTWARE ENG, V32, P428, DOI 10.1109/TSE.2006.57
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Douglass B., 2003, REAL TIME DESIGN PAT
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Felder M., 1994, ACM Transactions on Software Engineering and Methodology, V3, P308, DOI 10.1145/201024.201034
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma Erich., 1994, DESIGN PATTERNS
   GRUHN V, 2005, P 12 INT S TEMP REPR
   GRUHN V, 2005, P 3 INT WORKSH QUANT
   Konrad S, 2004, IEEE T SOFTWARE ENG, V30, P970, DOI 10.1109/TSE.2004.102
   KONRAD S, 2006, MSUCSE0437
   Konrad S., 2005, P 27 INT C SOFTW ENG
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Koymans R., 1992, LECT NOTES COMPUTER, V651
   Mattolini R, 2001, IEEE T SOFTWARE ENG, V27, P208, DOI 10.1109/32.910858
   Moser L. E., 1997, ACM Transactions on Software Engineering and Methodology, V6, P31, DOI 10.1145/237432.237438
   Shaw M., 1996, PATTERN LANGUAGES PR, V2, P255
NR 22
TC 13
Z9 15
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2009
VL 82
IS 2
BP 183
EP 196
DI 10.1016/j.jss.2008.06.041
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 408HU
UT WOS:000263426900001
DA 2024-07-18
ER

PT J
AU Hochstein, L
   Basili, VR
   Vishkin, U
   Gilbert, J
AF Hochstein, Lorin
   Basili, Victor R.
   Vishkin, Uzi
   Gilbert, John
TI A pilot study to compare programming effort for two parallel programming
   models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE MPI; XMT; Message-passing; PRAM; Empirical study; Parallel programming;
   Effort
ID STANDARD; LANGUAGE
AB Context: Writing software for the current generation of parallel systems requires significant programmer effort, and the community is seeking alternatives that reduce effort while still achieving good performance.
   Objective: Measure the effect of parallel programming models (message-passing vs. PRAM-like) oil programmer effort. Design, setting. and subjects: One group of subjects implemented sparse-matrix dense-vector multiplication using message-passing (MPI), and a second group solved the same problem using a PRAM-like model (XMTC). The subjects were students in two graduate-level classes: one class was taught MPI and the other was taught XMTC.
   Main outcome measures: Development time, program correctness.
   Results: Mean XMTC development time was 4.8 h less than mean MPI development time (95% confidence interval, 2.0-7.7), a 46% reduction. XMTC programs were more likely to be correct, but the difference in correctness rates was not statistically significant (p = .16). Conclusions: XMTC Solutions for this particular problem required less effort than MPI equivalents, but further Studies are necessary which examine different types of problems and different levels of programmer experience. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Hochstein, Lorin] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68583 USA.
   [Basili, Victor R.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Vishkin, Uzi] Univ Maryland, Inst Adv Comp Studies, College Pk, MD 20742 USA.
   [Gilbert, John] Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University System of Maryland; University of Maryland College Park;
   University System of Maryland; University of Maryland College Park;
   University of California System; University of California Santa Barbara
RP Hochstein, L (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68583 USA.
EM lorin.hochstein@ieee.org; basili@cs.umd.edu; vishkin@umd.edu;
   gilbert@cs.ucsb.edu
FU Department of Energy [DE-FG02-04ER25633, DE-CFC02-01 ER25489]; Air Force
   Rome Labs [FA8750-05-1-0100]
FX This research was supported in part by Department of Energy grant awards
   DE-FG02-04ER25633 and DE-CFC02-01 ER25489, and Air Force Rome Labs grant
   award FA8750-05-1-0100. We would also like to acknowledge Aydin Balkan,
   George Caragea, and Viral Shah for their help in collecting and
   analyzing the data.
CR [Anonymous], 1992, An introduction to parallel algorithms
   [Anonymous], DOBBS J
   [Anonymous], 1994, Statistics
   [Anonymous], 1978, P 10 ANN ACM S THEOR, DOI 10.1145/800133.804339
   BALKAN A, 2007, P 16 ANN IEEE S HIGH
   BALKI A, 2006, UMIACSTR200545
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BENIOFF MR, 2005, PITAC REPORT PRESIDE
   BOZKUS Z, 1994, J PARALLEL DISTR COM, V21, P15, DOI 10.1006/jpdc.1994.1039
   BROWNE JC, 1990, IEEE T SOFTWARE ENG, V16, P111, DOI 10.1109/32.44375
   Campbell D.T., 1966, Experimental and quasi-experimental designs for research
   CANTONNET F, 2004, IPDPS 2004 PMEO WORK
   Carlson W.W., 1999, CCSTR99157
   CHAMBERLAIN B, 2000, 2000 ACM IEEE SUP C, P297
   Chamberlain BL, 1998, IEEE COMPUT SCI ENG, V5, P76, DOI 10.1109/99.714604
   Choy R., 2004, 8 ANN WORKSH HIGH PE
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Culler David., 1993, P 4 ACM SIGPLAN S PR, P1
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Dongarra JJ, 1996, COMMUN ACM, V39, P84, DOI 10.1145/233977.234000
   FEO JT, 1990, J PARALLEL DISTR COM, V10, P349, DOI 10.1016/0743-7315(90)90035-N
   Graham S.L., 2004, GETTING SPEED FUTURE
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   Hill JMD, 1998, PARALLEL COMPUT, V24, P1947, DOI 10.1016/S0167-8191(98)00093-3
   HOCHSTEIN L, 2005, 5 JOINT M EUR SOFTW
   Joseph Earl., 2004, Council on competitiveness study of u.s. industrial hpc users
   Kessler CW, 1997, INT J PARALLEL PROG, V25, P17, DOI 10.1007/BF02700045
   LEICHTER JS, 1989, ICS 89, P41
   Lenth RV, 2001, AM STAT, V55, P187, DOI 10.1198/000313001317098149
   NAISHLOS D, 2003, TOCS THEORY COMPUTER, P521
   NARLIKAR GJ, 1998, P 1998 ACM IEEE C SU
   Numrich R., 1998, Co-array fortran for parallel programming
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   Rodman A, 1999, LECT NOTES COMPUT SC, V1685, P888
   Sahni S, 1996, IEEE PARALL DISTRIB, V4, P43, DOI 10.1109/88.481664
   SUNDERAM VS, 1994, PARALLEL COMPUT, V20, P531, DOI 10.1016/0167-8191(94)90027-2
   Szafron D, 1996, CONCURRENCY-PRACT EX, V8, P147, DOI 10.1002/(SICI)1096-9128(199603)8:2<147::AID-CPE199>3.0.CO;2-O
   VANDERWIEL SP, 1997, 2 INT WORKSH HIGH LE
   VISHKIN U, 1998, 10 ANN ACM S PAR ALG
   WEN X, 2007, P 19 ACM S PAR ALG A
   Yelick K, 1998, ACM 1998 WORKSH JAV
   2004, FEDERAL PLAN HIGH EN
   1998, SIAM NEWS, P31
NR 43
TC 22
Z9 29
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2008
VL 81
IS 11
BP 1920
EP 1930
DI 10.1016/j.jss.2007.12.798
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 363ON
UT WOS:000260276700008
OA Bronze
DA 2024-07-18
ER

PT J
AU Montesi, M
   Lago, P
AF Montesi, Michela
   Lago, Patricia
TI Software engineering article types: An analysis of the literature
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE article types; article genres; requirements for publication; software
   engineering; survey
ID INFORMATION-SCIENCE
AB The software engineering (SE) community has recently recognized that the field lacks well-established research paradigms and clear guidance on how to write good research reports. With no comprehensive guide to the different article types in the field, article writing and reviewing heavily depends on the expertise and the understanding of the individual SE actors.
   In this work, we classify and describe the article types published in SE with an emphasis on what is required for publication in journals and conference proceedings. Theoretically, we consider article types as genres, because we assume that each type of article has a specific function and a particular communicative purpose within the community, which the members of the community can recognize. We draw on written sources available, i.e. the instructions to authors/reviewers of major SE journals, the calls for papers of major SE conferences, and previous research published on the topic.
   Despite the fragmentation and limitations of the sources studied, we are able to propose a classification of different SE article types. Such classification helps in guiding the reader through the SE literature, and in making the researcher reflect on directions for improvements. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Lago, Patricia] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
   [Montesi, Michela] Univ Amsterdam, Dept Arch & Informat Sci, NL-1012 XT Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam; University of Amsterdam
RP Lago, P (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, Boelelaan 1081A, NL-1081 HV Amsterdam, Netherlands.
EM M.Montesi@uva.nl; patricia@cs.vu.nl
RI Lago, Patricia/ABH-2308-2020; Montesi, Michela/AAH-5169-2021
OI Lago, Patricia/0000-0002-2234-0845; Montesi, Michela/0000-0002-5509-2075
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   ANTHONY L, 1999, IEEE T PROF COMMUN, V42, P36
   ARDIMENTO P, 2003, P 2 WORKSHOP SERIES, P8
   Arranga EC, 2000, IEEE SOFTWARE, V17, P59, DOI 10.1109/52.841608
   Babar MA, 2006, 2006 Australian Software Engineering Conference, Proceedings, P379
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Best B, 2007, PROC INT CONF SOFTW, P581
   Booch B, 2007, IEEE SOFTWARE, V24, P10
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooks A., 1997, Empirical Software Engineering, V2, P333, DOI 10.1023/A:1009793700999
   BUDGEN D, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   BUDGEN D, 2006, WISER 06, P7
   BUDGEN D, 2006, ICSE 06 P 28 INT C S, P1051
   DJOKI S, 2001, P OOIS 01 SPRING BER, P103
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Esperanza M., 2005, SIGSOFT Softw. Eng. Notes, V30, P1
   FENTON N, 1993, J SYST SOFTWARE, V22, P141, DOI 10.1016/0164-1212(93)90092-C
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   GLASS RL, 1995, J SYST SOFTWARE, V28, P3, DOI 10.1016/0164-1212(94)00077-Z
   GOLDBERG A, 1982, ACM COMPUT SURV, V14, P51
   Haddow G, 2004, LIBR INFORM SCI RES, V26, P29, DOI 10.1016/j.lisr.2003.11.010
   Hjorland B, 2002, J DOC, V58, P422, DOI 10.1108/00220410210431136
   Hjorland B, 1998, KNOWL ORGAN, V25, P16
   *IEEE, 2002, IEEE KEYW TAX
   *IEEE, 2006, GENR SUBM GUID
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kajiya J., 1993, GET YOUR SIGGRAPH PA
   KFLETCHER P, 1995, J SYST SOFTWARE, V30, P161, DOI 10.1016/0164-1212(95)00050-B
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Kwasnik B. H., 2005, Information Technology & People, V18, P76, DOI 10.1108/09593840510601487
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL, P167
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   MOED H, 2007, 200101 CWTS NWO
   MONTESI M, 2008, J DOCUMENTATION, V64
   MONTESI M, J AM SOC IN IN PRESS
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   POSTEGUILLO S, 1999, ENGLISH SPECIFIC PUR, V18
   PUNTER T, 2003, P 2 WORKSH EMP STUD
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J., 2005, Proceedings of the 2005 workshop on Realising Evidence-Based Software Engineering, P1, DOI DOI 10.1145/1082983.1083176
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sidiropoulos A, 2005, INFORM PROCESS MANAG, V41, P289, DOI 10.1016/j.ipm.2003.09.002
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   van Vliet H, 2005, PROC INT CONF SOFTW, P621
   van Vliet H, 2006, IEEE SOFTWARE, V23, P55, DOI 10.1109/MS.2006.80
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   WASSERMAN AI, 1984, ACM COMPUT SURV, V16, P103
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2005, INFORM SOFTWARE TECH, V47, P957, DOI 10.1016/j.infsof.2005.09.002
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WU J, 2003, STUDY COLLABORATION, P304
   Zelkowitz M.V., 2003, Lecture Notes on Empirical Software Engineering, P229
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zendler A., 2001, Empirical Software Engineering, V6, P161, DOI 10.1023/A:1011489321999
   Zhang XN, 2003, J SOFTW MAINT EVOL-R, V15, P191, DOI 10.1002/SMR.276
   2006, J CITATION REPORTS
NR 68
TC 19
Z9 22
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2008
VL 81
IS 10
BP 1694
EP 1714
DI 10.1016/j.jss.2007.11.723
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 351LZ
UT WOS:000259427100006
DA 2024-07-18
ER

PT J
AU Lemos, M
   Casanova, MA
   Furtado, AL
AF Lemos, Melissa
   Casanova, Marco A.
   Furtado, Antonio L.
TI Process pipeline scheduling
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Brazilian Symposia on Databases and Software Engineering
CY OCT, 2006
CL Florianopolis, BRAZIL
AB Two processes, p and q, may be scheduled in pipeline when q may start when p starts, and q may process data items from p, one-by-one, without waiting for p to write the complete set of data items. This paper explores how process pipeline scheduling may become a viable strategy for executing workflows. The paper first details a workflow model that captures the characteristics of the application programs that pipeline scheduling requires. It proceeds by showing that the process pipeline scheduling problem is NP-Complete. Then, it describes a specific algorithm that pipelines as many processes as possible, within the bounds of the storage space available, based on a greedy process scheduling heuristics that has acceptable performance. Finally, the paper presents a detailed example that illustrates how the algorithm schedules processes. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Lemos, Melissa; Casanova, Marco A.; Furtado, Antonio L.] Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22453900 Rio De Janeiro, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Lemos, M (corresponding author), Pontificia Univ Catolica Rio de Janeiro, Dept Informat, Rua Marques S Vicente 225, BR-22453900 Rio De Janeiro, Brazil.
EM melissa@inf.puc-rio.br; casanova@inf.puc-rio.br; furtado@inf.puc-rio.br
RI Casanova, Marco Antonio/M-9054-2014
OI Casanova, Marco Antonio/0000-0003-0765-9636
CR Abadi DJ, 2003, P 2003 ACM SIGMOD IN
   ADZIC J, 2003, P 5 INT WORKSH DES M
   Altintas I., 2004, P 16 INT C SCI STAT
   ALTSCHUL SF, 1990, J MOL BIOL, V215, P403, DOI 10.1016/S0022-2836(05)80360-2
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2002, P 21 ACM SIGMOD SIGA
   [Anonymous], 2005, IQIS
   [Anonymous], 2004, OWL S SEMANTIC MARKU
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   ARASU A, 2003, P 2003 ACM SIGMOD IN, P665
   Babcock B., 2003, Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data, P253
   Babu S, 2005, PROC INT CONF DATA, P118
   BABU S, 2004, P ACM SIGMOD INT C M, P407
   CANNATARO M, 2004, IEEE COMPUTATIONAL I, V3, P7
   Chandrasekaran S., 2003, CIDR 2003
   Cruanes Thierry., 2004, SIGMOD 04, P850
   Dalvi N.N., 2001, P 20 ACM SIGACT SIGM, P59, DOI 10.1145/375551.375561
   De Roure D, 2004, IEEE INTELL SYST, V19, P65, DOI 10.1109/MIS.2004.1265888
   Garcia-Molina Hector., 1999, Database System Implementation
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Hall D., 2003, GENOMICS PLANTS FUNG, P359
   Hu JQ, 2005, INT CONF E BUS ENG, P681, DOI 10.1109/ICEBE.2005.101
   HUANG L, 2005, P 4 UK ESC PROGR ALL
   JEFFERY SR, 2006, P 4 PERV C 2006
   Kanehisa M, 2003, NAT GENET, V33, P305, DOI 10.1038/ng1109
   LEMOS M, 2006, P 21 BRAZ S DAT BAS
   LEMOS M, 2004, THESIS DEPT INFORM
   LEMOS M, 2007, 073 MCC DEPT INF
   LEMOS M, 2004, P 15 INT C DAT EXP S, P781
   Liu B., 2005, P 31 INT C VERY LARG, P829
   MAXIMILLIEN EM, 2004, IEEE INTERNET COMPUT
   MUNAGALA K, 2006, P 10 INT C DAT THEOR, V3363
   *NCBI, 2006, NCBI FTP NR DAT
   RAJASEKARAN S, 1996, COMPUTER ALGORITHMS
   ROSA RAP, 2006, RHODNIUS PROLIXUS WO
   Rowe A, 2003, BIOINFORMATICS, V19, pi225, DOI 10.1093/bioinformatics/btg1031
   SILVA RC, 2006, BIOINFORMATICS WORKF
   Simitsis A, 2005, PROC INT CONF DATA, P564
   Stevens RD, 2003, BIOINFORMATICS, V19, pi302, DOI 10.1093/bioinformatics/btg1041
   TAN Y, 2004, BUSINESS SERVICE G 1
   Theys MD, 2001, J PARALLEL DISTR COM, V61, P1827, DOI 10.1006/jpdc.2001.1767
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1901, P18
   Vassiliadis P, 2005, INFORM SYST, V30, P492, DOI 10.1016/j.is.2004.11.002
   VIGLAS S, 2002, P 2002 ACM SIGMOD IN
   WALSH N, 2002, XML PIPELINE DEFINIT
   WROE C, 2004, AUTOMATING EXPT USIN
   Yu J, 2005, SIGMOD REC, V34, P44, DOI 10.1145/1084805.1084814
   ZHANG D, 2004, THESIS U ADELAIDE
NR 48
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2008
VL 81
IS 3
BP 307
EP 327
DI 10.1016/j.jss.2007.06.018
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 284LZ
UT WOS:000254709200002
DA 2024-07-18
ER

PT J
AU Kocaballi, AB
   Kocyigit, A
AF Kocaballi, A. Baki
   Kocyigit, Altan
TI Granular best match algorithm for context-aware computing systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 3rd IEEE International Conference on Pervasive Services (ICPS 2006)
CY JUN 26-29, 2006
CL Lyon, FRANCE
SP IEEE, IEEE Comp Soc, INSA, INRIA, Univ Arizona, Reg Rhone Alpes
DE pervasive computing; context-awareness; context matching
AB In order to be context-aware, a system or application should adapt its behaviour according to current context, acquired by various context provision mechanisms. After acquiring current context, this information should be matched against the previously defined context sets. In this paper, a granular best match algorithm dealing with the subjective, fuzzy, multi-granular and multi-dimensional characteristics of contextual information is introduced. The CAPRA - Context-Aware Personal Reminder Agent tool is used to show the applicability of the new context matching algorithm. The obtained outputs showed that proposed algorithm produces the results which are more sensitive to the user's intention, and more adaptive to the aforementioned characteristics of the contextual information than the traditional exact match method. (C) 2007 Elsevier Inc. All rights reserved.
C1 Middle E Tech Univ, Inst Informat, Ankara, Turkey.
C3 Middle East Technical University
RP Kocaballi, AB (corresponding author), Middle E Tech Univ, Inst Informat, Ankara, Turkey.
EM abakik@metu.edu.tr; kocyigit@metu.edu.tr
RI Kocyigit, Altan/ABE-9560-2021; Kocaballi, Baki/R-3136-2019
OI Kocyigit, Altan/0000-0001-5003-4127; Kocaballi, Baki/0000-0002-8328-5317
CR [Anonymous], 1997, PERS TECHNOL, DOI DOI 10.1007/BF01682024
   BROWN PJ, 2002, P 17 ACM S APPL COMP
   DAY AK, 2001, HUMAN COMPUTER INTER, V16, P97
   Henricksen K., 2002, Pervasive Computing. First International Conference, Pervasive 2002. Proceedings (Lecture Notes in Computer Science Vol.2414), P167
   JONES GJF, 2002, P 1 INT C PERV COMP, P10
   MAKKONEN J, 2003, P 25 EUR C INF RETR, P251
   MITCHELL K, 1999, THESIS LANCASTER U
   Schmidt A., 2002, THESIS LANCASTER U
   Van Laerhoven K, 2000, FOURTH INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, DIGEST OF PAPERS, P77, DOI 10.1109/ISWC.2000.888468
   Want R, 1995, IEEE PERS COMMUN, V2, P28, DOI 10.1109/98.475986
   WANT R, 1992, ACM T INFORM SYST, V10, P91, DOI 10.1145/128756.128759
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   WU H, 2002, IEEE INT MEAS TECHN
NR 13
TC 4
Z9 7
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2007
VL 80
IS 12
BP 2015
EP 2024
DI 10.1016/j.jss.2007.03.006
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 232SX
UT WOS:000251040800006
DA 2024-07-18
ER

PT J
AU Bernardi, S
   Merseguer, J
AF Bernardi, Simona
   Merseguer, Jose
TI Performance evaluation of UML design with Stochastic well-formed nets
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE unified modeling language; UML profile for schedulability performance
   and time; Stochastic Well-formed Net; Software performance; engineering;
   Model driven architecture
AB The paper presents a method to compute performance metrics (response time, sojourn time, throughput) on Unified Modeling Language design. The method starts with UML design annotated according to the UML Profile for Schedulability, Performance and Time. The UML design is transformed into a performance model where to compute the referred metrics. Being the performance model a Stochastic Well-formed Net, the method is enabled to analyze systems where the object identities are relevant as well as those where they are not. A complete case study reveals how to apply the method and its usefulness. (C) 2007 Elsevier Inc. All rights reserved.
C1 Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
   Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza 50018, Spain.
C3 University of Turin; University of Zaragoza
RP Bernardi, S (corresponding author), Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
EM bernardi@di.unito.it
RI BERNARDI, SIMONA/L-1456-2014; Merseguer, Jose/A-6028-2012
OI BERNARDI, SIMONA/0000-0002-2605-6243; Merseguer,
   Jose/0000-0001-5538-3553
CR Balbo G., 1995, Proceedings of the Sixth International Workshop on Petri Nets and Performance Models (Cat. No.95TB100003), P2, DOI 10.1109/PNPM.1995.524310
   Ballarini P, 2003, THIRD INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P111, DOI 10.1109/CSD.2003.1207705
   BALLARINI P, P INT C DEP SYST NET, P773
   BALSAMO S, 2003, P 9 EUR SOFTW ENG C, P363, DOI DOI 10.1145/940071.940122
   BARESI L, 2001, LNCS, V2001, P276
   Bernardi S., 2001, International Journal on Software Tools for Technology Transfer, V3, P417, DOI 10.1007/s100090100065
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   Bernardi S, 2006, IEEE INTERNET COMPUT, V10, P32, DOI 10.1109/MIC.2006.63
   BOBBIO A, 2001, P EUR SAF REL C ESRE, P411
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Bouabana-Tebibel T, 2004, IEEE SYS MAN CYBERN, P4971
   Canevet C, 2003, IEE P-COMPUT DIG T, V150, P107, DOI 10.1049/ip-cdt:20030084
   Chiola G, 1997, THEOR COMPUT SCI, V176, P39, DOI 10.1016/S0304-3975(96)00010-2
   CHIOLA G, 1993, IEEE T COMPUT, V42, P1343, DOI 10.1109/12.247838
   Cortellessa V., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P58, DOI 10.1145/350391.350406
   De Miguel M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P83, DOI 10.1145/350391.350411
   Franceschinis G, 2001, INT WORKSH PETRI NET, P39, DOI 10.1109/PNPM.2001.953354
   Gaeta R., 1995, Proceedings of the Sixth International Workshop on Petri Nets and Performance Models (Cat. No.95TB100003), P137, DOI 10.1109/PNPM.1995.524324
   Grassi Vincenzo., 2005, WOSP 05 P 5 INT WORK, P25
   GU G, 2005, P 5 INT WORKSH SOFTW, P99
   HAUGEN O, 2005, SOFTWARE SYSTEM MODE, V4, P255
   Hu Zhaoxia, 2004, SEKE, P213
   Jansen DN, 2003, LECT NOTES COMPUT SC, V2863, P76
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lopez Grao J. P., 2004, P 4 INT WORKSH SOFTW, P25
   Merseguer J, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P43
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   MERSEGUER J, 2003, J MOBILE COMMUNICATI, V9, P223
   Merseguer J, 2003, THESIS U ZARAGOZA SP
   *OMG UML, 2005, UML PROF LANG SUP OB
   *OMG UML, 2005, UN MOD LANG SUP OBJ
   Pettit RG, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P57, DOI 10.1109/WICSA.2004.1310690
   Saldhana J., 2000, 12 INT C SOFTW ENG K, P103
   WHITTLE J, 2005, LECT NOTES COMPUTER, V3844
   Woodward J, 2005, SANDHURST CONF SER, V5, P1
NR 35
TC 29
Z9 30
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2007
VL 80
IS 11
BP 1843
EP 1865
DI 10.1016/j.jss.2007.02.029
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224FU
UT WOS:000250433700007
DA 2024-07-18
ER

PT J
AU Juristo, N
   Moreno, AM
   Sanchez-Segura, MI
AF Juristo, Natalia
   Moreno, Ana M.
   Sanchez-Segura, Maria-Isabel
TI Analysing the impact of usability on software desig
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software usability; software design
ID ARCHITECTURE; QUALITY
AB This paper analyses what implications usability has for software development, paying special attention to the impact of this quality attribute on design. In this context, the aim is twofold. On the one hand, we intend to empirically corroborate that software design and usability are really related. This would mean that this, like other quality attributes, would need to be dealt with no later than at design time to develop usable software at a reasonable cost. On the other hand, we present a possible quantification, calculated from a number of real applications, of the effect of incorporating certain usability features at design time. (C) 2007 Elsevier Inc. All rights reserved.
C1 Univ Politecn Madrid, Sch Comp, E-28660 Madrid, Spain.
   Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Universidad Politecnica de Madrid; Universidad Carlos III de Madrid
RP Moreno, AM (corresponding author), Univ Politecn Madrid, Sch Comp, Campus Montegancedo S-N, E-28660 Madrid, Spain.
EM natalia@fi.upm.es; ammoreno@fi.upm.es; misanche@inf.uc3m.es
RI DS, CHETAN/AAL-1174-2021; Moreno, Ana M./AAC-1166-2020
OI Moreno, Ana M./0000-0001-8397-6794; SANCHEZ-SEGURA,
   MARIA-ISABEL/0000-0002-2339-7851
CR ANDRES A, 2002, USABILITY ATTRIBUTES
   [Anonymous], 1998, SOFTWARE ENG STANDAR, DOI DOI 10.1109/SESS.1997.596008
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 1998, ISO 9241-11
   BARBACCI M, 2003, QUAL ATTR WORKSH
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   BASS L, 2001, CMUSEI2001TR005
   BASS L, 1999, CMUSEI1999TR007
   Battey J., 1999, IBMS REDESIGN RESULT
   Bias R G, 2005, COST JUSTIFYING USAB
   BLACK J, 2002, USABILITY NEXT PROFI
   Boehm B.W., 1978, Characteristics of Software Quality
   Bosch J, 2003, J SYST SOFTWARE, V66, P183, DOI 10.1016/S0164-1212(02)00075-4
   BRIGHTON, 1998, USABILITY PATTERN CO
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Coram T., 1996, EXPERIENCES PATTERN
   Donahue GM, 2001, IEEE SOFTWARE, V18, P31, DOI 10.1109/52.903161
   ESKENAZI EM, 2002, P PROGRESS 2002 WORK
   FETCKE T, 1997, P TOOLS 1997
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Griffith J., 2002, BUSINESS J
   Heckel P., 1991, The elements of friendly software design, VNew
   Hix D., 1993, DEVELOPING USER INTE
   *IBM, 2005, COST JUSTIFYING EASE
   *ISO, 2000, 18529 ISO
   *ISO IEC, 1991, 9126 ISO
   *ISO IEC, 1999, ISO145981
   Klein M., 1999, CMUSEI99TR022
   LAASKO SA, 2004, USER INTERFACE DESIG
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   MCKAY EN, 1999, DEV USER INTERFACES
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   RUBINSTEIN R, 1984, HUMAN FACTOR
   Scapin DL, 1997, BEHAV INFORM TECHNOL, V16, P220, DOI 10.1080/014492997119806
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Shneiderman B., 2010, DESIGNING USER INTER
   THIBODEAU P, 2002, USERS BEGIN DEMAND S
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Tidwell J., 1999, Common ground: A pattern language for human--‐computer interface design
   Trenner Leslie., 1998, POLITICS USABILITY
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Welie M., 2003, AMSTERDAM COLLECTION
NR 43
TC 61
Z9 66
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2007
VL 80
IS 9
BP 1506
EP 1516
DI 10.1016/j.jss.2007.01.006
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 210RB
UT WOS:000249472200009
DA 2024-07-18
ER

PT J
AU Fornaro, RJ
   Heil, MR
   Tharp, AL
AF Fornaro, Robert J.
   Heil, Margaret R.
   Tharp, Alan L.
TI Reflections on 10 years of sponsored senior design projects: Students
   win-clients win!
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 19th Conference on Software Engineering Education and Training
CY APR 19-21, 2006
CL Turtle Bay, HI
SP IEEE Comp Soc TCSE, Univ Hawaii Manoa, Microsoft, Natl Sci Fdn
DE capstone course; software engineering; professional communication
AB Undergraduate computer science degree programs often provide an opportunity for students to experience real software projects as a part of their programs of study. These experiences frequently reside in a course in which students form software development teams, are assigned to a project offered by a corporate sponsor and devote one or two semesters to the task of making progress on the project. In an ideal model, faculty mentor student teams who, in turn, behave as subcontractors or consultants to the sponsor. Students work for a grade, not directly for the sponsor as a true subcontractor would. In the ideal model, students demonstrate what they have learned about software engineering process, as well as their ability to implement programmed solutions. Student teams provide progress reports, both oral and written, and directly experience many of the challenges and successes of true software engineering professionals. This paper reports on one such program after 10 years of operation. The technologies and software development processes of student projects are summarized and presented as an informal survey. Student response is discussed in terms of software systems they produced and how they went about producing them. The maturation of these students as software engineering professionals is also discussed. (C) 2006 Elsevier Inc. All rights reserved.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Fornaro, RJ (corresponding author), N Carolina State Univ, Dept Comp Sci, 890 Oval Dr, Raleigh, NC 27695 USA.
EM fornaro@ncsu.edu; heil@csc.ncsu.e-du; alan_tharp@ncsu.edu
OI Scaturro Heil, Margaret/0000-0001-6165-0099
CR Bernstein L, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P90, DOI 10.1109/CSEE.2002.995201
   ETLINGER HA, 2006, P 37 TECHN S COMP SC
   FERGUSON E, 2004, P 35 SIGCSE TECHN S, P330
   FOLEY J, 2005, COMPUTING WE HAVE PR
   FORNARO RJ, 2004, P 34 ASEE IEEE FRONT, V2
   Gause D.C., 1989, EXPLORING REQUIREMEN
   Goold A, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P140, DOI 10.1109/CSEE.2002.995206
   Heil M. R., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P110, DOI 10.1145/318372.318567
   KLAPPHOLZ D, 2006, P 19 C SOFTW ENG ED, P249
   Knight JC, 2004, 17TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P2, DOI 10.1109/CSEE.2004.1276501
   Kornecki AJ, 2003, 16TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P60, DOI 10.1109/CSEE.2003.1191351
   Meziane F, 2004, 17TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P65, DOI 10.1109/CSEE.2004.1276512
   RZEWNICKI AM, 2004, 24 SENIOR DESIGN TEA
   Suri D, 2004, 17TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P18
   VEGSO J, INTEREST CS MAJOR DR
   WARD B, 2005, NC STATE TEAM WINS 2, V38, P5
NR 16
TC 7
Z9 7
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2007
VL 80
IS 8
SI SI
BP 1209
EP 1216
DI 10.1016/j.jss.2006.09.052
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 179NU
UT WOS:000247297400005
DA 2024-07-18
ER

PT J
AU Zhu, NP
   Grundy, J
   Hosking, J
   Liu, N
   Cao, SP
   Mehra, A
AF Zhu, Nianping
   Grundy, John
   Hosking, John
   Liu, Na
   Cao, Shuping
   Mehra, Akhil
TI Pounamu: A meta-tool for exploratory domain-specific visual language
   tool development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 19th Conference on Software Engineering Education and Training
CY APR 19-21, 2006
CL Turtle Bay, HI
SP IEEE Comp Soc TCSE, Univ Hawaii Manoa, Microsoft, Natl Sci Fdn
DE meta-tools; meta-CASE; domain-specific languages; visual design
   environments
AB Domain-specific visual language tools have become important in many domains of software engineering and end user development. However building such tools is very challenging with a need for multiple views of information and multi-user support, the ability for users to change tool diagram and meta-model specifications while in use, and a need for an open architecture for tool integration. We describe Pounamu, a meta-tool for realising such visual design environments. We describe the motivation for Pounamu, its architecture and implementation and illustrate examples of domain-specific visual language tools that we have developed with Pounamu. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   Univ Auckland, Dept Elect & Comp Engn, Auckland 1, New Zealand.
C3 University of Auckland; University of Auckland
RP Grundy, J (corresponding author), Univ Auckland, Dept Comp Sci, Private Bag 92019, Auckland 1, New Zealand.
EM nianping@cs.auckland.ac.nz; john-g@cs.auckland.ac.nz;
   john@cs.auckland.ac.nz; karen@cs.auckland.ac.nz
RI Jaafar, Mohamad Farid/B-4563-2010; Grundy, John/I-6681-2012
OI Grundy, John/0000-0003-4928-7076; Hosking, John/0000-0002-4776-3828
CR [Anonymous], LNCS
   [Anonymous], 2004, Software Factories
   Baresi L, 1997, PROC INT CONF SOFTW, P56, DOI 10.1145/253228.253241
   BEDERSON BB, 2000, P 13 ANN ACM S US IN, P171
   BENTLEY R, 1995, P 4 INT WWW C BOST M
   Buchner J, 1997, IEEE VISLANG, P92, DOI 10.1109/VL.1997.626563
   Burnett M.M., 1995, Visual Object-Oriented Programming
   CAO SP, 2004, THESIS U AUCKLAND, P164
   Cypher A., 1995, P SIGCHI C HUMAN FAC, P27
   Dewan P., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P41, DOI 10.1145/108844.108851
   Ebert J, 1997, LECT NOTES COMPUT SC, V1250, P203
   *ECL, 2006, GRAPH ED FRAM
   Eclipse, 2006, GRAPH MOD FRAM
   EHRIG K, 2005, P 2005 ACM IEEE AUT
   FERGUSON R, 1999, P INT S CONSTR SOFT
   Gordon D., 2003, P 2003 IEEE C HUM CE, P28
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grundy J, 2000, INFORM SOFTWARE TECH, V42, P103, DOI 10.1016/S0950-5849(99)00084-1
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   HELLAND T, 2004, THESIS U AUCKLAND, P216
   *IBM CORP, 2006, RAT ROS XDE MOD
   KAISER GE, 1998, WORLD WIDE WEB, V1, P3
   Khaled R., 2002, P SIGCHI NZ S COMP H
   Kim CH, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P19
   Klein P, 1997, 8TH CONFERENCE ON SOFTWARE ENGINEERING ENVIRONMENTS - PROCEEDINGS, P2, DOI 10.1109/SEE.1997.591811
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   LIU N, 2005, P 2005 IEEE ACM INT, P7
   LIU N, 2005, P VL HCC 2005 DALL S
   Lyu M., 1998, P INT S SOFTW REL EN
   MACKAY D, 2003, C RES PRACTICE INFOR, V18
   MAURER F, 2000, IEEE INTERNET CO MAY
   MCINTYRE DW, 1995, DESIGN IMPLEMENTATIO, P1219
   MCWHIRTER JD, 1994, P VL 94 OCT, P5
   MEHRA A, 2005, IEEE ACM AUT SOFTW E
   *MICR VIS STUD, 2005, DOM SPEC LANG TOOLS
   Minas M., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P203, DOI 10.1109/VL.1995.520810
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   *OBJ MAN GROUP, 2006, UN MOD LANG
   Phillips C, 1998, TOOLS, V28, P156, DOI 10.1109/TOOLS.1998.750032
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   SHUCKMAN C, 1996, P ACM C COMP SUPP CO, P21
   Stoeckle H, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P59
   VLISSIDES JM, P UIST 89, P158
   Welch B.B., 2003, PRACTICAL PROGRAMMIN
   YOUNAS MI, 2003, P 5 INT WORKSH COLL
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
   ZHU N, 2004, P VL HCC, V25, P254
NR 48
TC 19
Z9 23
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2007
VL 80
IS 8
SI SI
BP 1390
EP 1407
DI 10.1016/j.jss.2006.10.028
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 179NU
UT WOS:000247297400019
DA 2024-07-18
ER

PT J
AU Dasarathy, B
   Gadgil, S
   Vaidyanathan, R
   Neidhardt, A
   Coan, B
   Parmeswaran, K
   McIntosh, A
   Porter, F
AF Dasarathy, Balakrishnan
   Gadgil, Shrirang
   Vaidyanathan, Ravi
   Neidhardt, Arnie
   Coan, Brian
   Parmeswaran, Kirthika
   McIntosh, Allen
   Porter, Frederick
TI Adaptive network QoS in layer-3/layer-2 networks as a middleware service
   for mission-critical applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE bandwidth brokering; admission control; layer-3/layer-2 networks;
   real-time middleware
AB We present adaptive network Quality of Service (QoS) technology that provides delay bounds and capacity guarantees for traffic belonging to mission-critical tasks. Our technology uses a Bandwidth Broker to provide admission control and leverages the differentiated aggregated traffic treatment provided by today's high-end COTS layer-3/2 switches. The technology adapts to changes in network resources, work, load and mission requirements, using two components that are a particular focus of this paper: Fault Monitor and Performance Monitor. Our technology is being developed and applied in a CORBA-based multi-layer resource management framework. (C) 2006 Elsevier Inc. All rights reserved.
C1 Telcordia Technol, Appl Res, Piscataway, NJ 08854 USA.
C3 Ericsson; Telcordia Technologies
RP Dasarathy, B (corresponding author), Telcordia Technol, Appl Res, 1 Telecordia Dr, Piscataway, NJ 08854 USA.
EM das@research.telcordia.com; coan@research.telcordia.com
CR ALBERI JL, 2003, ACHIEVING GREATER AC
   [Anonymous], 2474 IETF RFC
   Blake S., 1998, 2475 IETF RFC
   Chadha R., 2003, IEEE 4 INT WORKSH PO
   Dasarathy B, 2005, RTAS 2005: 11th IEEE Real Time and Embedded Technology and Applications Symposium, Proceedings, P246
   DECKER E, 1993, 1525 IETF RFC
   KIM B, 2002, INTEGRATED IP QOS AR
   LARDIERI P, 2006, ELSEVIER J SYSTEMS S
   LEBOUDEC JY, 2004, LNCS, V2050, pCH2
   Wang N, 2003, MIDDLEWARE COMMUNICA, V20, P131
   WANG S, 2001, P IEEE REAL TIM SYST
NR 11
TC 2
Z9 6
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2007
VL 80
IS 7
BP 972
EP 983
DI 10.1016/j.jss.2006.09.030
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 181RM
UT WOS:000247453800005
DA 2024-07-18
ER

PT J
AU Spinellis, D
   Louridas, P
AF Spinellis, Diomidis
   Louridas, Panagiotis
TI A framework for the static verification of API calls
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE static analysis; API; library; programming by contract; FindBugs
ID DESIGN; TOOL
AB A number of tools can statically check program code to identify commonly encountered bug patterns. At the same time, programs are increasingly relying on external APIS for performing the bulk of their work: the bug-prone program logic is being fleshed-out, and many errors involve tricky subroutine calls to the constantly growing set of external libraries. Extending the static analysis tools to cover the available APIS is an approach that replicates scarce human effort across different tools and does not scale. Instead, we propose moving the static API call verification code into the API implementation, and distributing the verification code together with the library proper. We have designed a framework for providing static verification code together with Java classes, and have extended the FindBugs static analysis tool to check the corresponding method invocations. To validate our approach we wrote verification tests for 100 different methods, and ran FindBugs on 6.9 million method invocations on what amounts to about 13 million lines of production-quality code. In the set of 55 thousand method invocations that could potentially be statically verified our approach identified 800 probable errors. (C) 2006 Elsevier Inc. All rights reserved.
C1 Athens Univ Economist & Business, Dept Management Sci & Technol, GR-10434 Athens, Greece.
C3 Athens University of Economics & Business
RP Spinellis, D (corresponding author), Athens Univ Economist & Business, Dept Management Sci & Technol, Patis 76, GR-10434 Athens, Greece.
EM dds@aueb.gr; louridas@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897
CR [Anonymous], 2005, PMD applied
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 65 BELL LAB
   [Anonymous], ICSE 81
   Arnold K., 2005, The Java programming language
   Artho C, 2005, THEOR COMPUT SCI, V336, P209, DOI 10.1016/j.tcs.2004.11.007
   Ball Thomas, 2004, Technical Report MSR-TR-2004-08
   Ball VE, 2002, STUD PRODUCT EFF, V2, P1
   Barach D. R., 1982, SIGPLAN Notices, V17, P32, DOI 10.1145/988376.988379
   BARRINGER H, 2006, ELECT NOTES THEORETI, V144
   Beck K, 1998, JAVA REP, V3, P37
   Blanchet Bruno, 2003, ACM SIGPLAN NOTICES, P196, DOI DOI 10.1145/780822.781153
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Chaki S, 2003, PROC INT CONF SOFTW, P385, DOI 10.1109/ICSE.2003.1201217
   CHEN H, 2002, CCS 02, P235
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Dahm M., 1999, JIT'99. Java-Information-Tag 1999, P267
   Das Manuvir., 2002, PLDI, P57, DOI DOI 10.1145/512529.512538
   DeLine Rob, 2004, The Fugue Protocol Technical Report MSR-TR-2004-07. Checker: Is Your Software Baroque?
   DeLine Robert., 2001, Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and implementation, P59, DOI DOI 10.1145/381694.378811
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Findler RB, 2002, J FUNCT PROGRAM, V12, P159, DOI 10.1017/S0956796801004208
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Jackson D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P109, DOI 10.1145/210134.210135
   Jim T, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P275
   *JLINT, 2004, JLINT
   JOHNSON SC, 1987, BELL SYST TECH J, V56, P2155
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   LEAVENS GT, 2005, 9806REV28 U IOW DEP
   Lindahl T, 2004, LECT NOTES COMPUT SC, V3302, P91
   MANDELIN D, 2005, PLDI 05, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   Marinov D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P22, DOI 10.1109/ASE.2001.989787
   Pnueli A, 2006, ELECTRON NOTES THEOR, V144, P73, DOI 10.1016/j.entcs.2006.02.005
   REIMER D, 2004, ISSTA, P243
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Spinellis D., 2006, Code Quality: The Open Source Perspective
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Viega J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P257, DOI 10.1109/ACSAC.2000.898880
   Wright C, 1997, KENYON REV, V19, P1
NR 53
TC 6
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2007
VL 80
IS 7
BP 1156
EP 1168
DI 10.1016/j.jss.2006.09.040
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 181RM
UT WOS:000247453800021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wu, MN
   Lin, CC
   Chang, CC
AF Wu, Ming-Ni
   Lin, Chia-Chen
   Chang, Chin-Chen
TI Novel image copy detection with rotating tolerance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE copy detection; elliptical track division strategy; relative mean
   feature; variation feature; rotation tolerance
ID RETRIEVAL
AB In 2003, Kim applied the discrete cosine transform (DCT) technique to propose a content-based image copy detection method. He successfully detected the copies both with and without modifications, and his method is the first to detect the copies with water coloring and twirling modifications. However, Kim's method can only detect copies having a 180 rotation. When copies have a 90 degrees or 270 degrees rotation, Kim's method fails to discover them. Also, his method cannot deal with copies having only minor rotations of 1 degrees or 5 degrees, and so on. To conquer this weakness, we propose an elliptical track division strategy to extract two kinds of features in the design of our proposed methods. Furthermore, we propose a dynamic center point detection mechanism for the elliptical track of each image to deal with the shifting process. The experimental results confirm that both proposed methods can successfully capture the features of an image even if it is shifted, cropped or rotated to any degree. In addition, our hybrid method can further provide accurate detection performance for a variety of manipulations. (C) 2006 Elsevier Inc. All rights reserved.
C1 Providence Univ, Dept Comp Sci & Informat Management, Taichung 433, Taiwan.
   Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chaiyi 621, Taiwan.
   Feng Chia Univ, Dept Comp Sci & Informat Engn, Taichung 40724, Taiwan.
C3 Providence University - Taiwan; National Chung Cheng University; Feng
   Chia University
RP Lin, CC (corresponding author), Providence Univ, Dept Comp Sci & Informat Management, Taichung 433, Taiwan.
EM mnwu@cs.ccu.edu.tw; mhlin3@pu.edu.tw; ccc@cs.ccu.edu.tw
RI Chang, Ching-Chun/JAN-6210-2023
OI Lin, Chia-Chen/0000-0003-4480-7351
CR Bhat DN, 1998, IEEE T PATTERN ANAL, V20, P415, DOI 10.1109/34.677275
   Chan YK, 2004, J SYST SOFTWARE, V71, P65, DOI 10.1016/S0164-1212(02)00140-1
   Chan YK, 2002, INT J PATTERN RECOGN, V16, P113, DOI 10.1142/S0218001402001563
   CHANG EY, 1998, P SPIE MULT STOR ARC, V3
   Gevers T, 1999, IMAGE VISION COMPUT, V17, P475, DOI 10.1016/S0262-8856(98)00140-1
   HAMPAPUR A, VIDEOGREP VIDEO COPY
   Hsu W., 1995, P 3 ACM INT C MULTIM, P305
   Kim C, 2003, SIGNAL PROCESS-IMAGE, V18, P169, DOI 10.1016/S0923-5965(02)00130-3
   Kim CR, 2003, INFORM SOFTWARE TECH, V45, P203, DOI 10.1016/S0950-5849(02)00206-9
   Kim JY, 2001, PATTERN RECOGN, V34, P1189, DOI 10.1016/S0031-3203(00)00066-2
   Li J, 2003, IEEE T PATTERN ANAL, V25, P1075, DOI 10.1109/TPAMI.2003.1227984
   Nikolaou N, 2002, ENG APPL ARTIF INTEL, V15, P81, DOI 10.1016/S0952-1976(02)00028-3
   Wang JZ, 2001, IEEE T PATTERN ANAL, V23, P947, DOI 10.1109/34.955109
NR 13
TC 25
Z9 30
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2007
VL 80
IS 7
BP 1057
EP 1069
DI 10.1016/j.jss.2006.12.001
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 181RM
UT WOS:000247453800013
DA 2024-07-18
ER

PT J
AU Correia, M
   Neves, NF
   Lung, LC
   Veríssimo, P
AF Correia, Miguel
   Neves, Nuno Ferreira
   Lung, Lau Cheuk
   Verissimo, Paulo
TI Worm-IT -: A wormhole-based intrusion-tolerant group communication
   system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Byzantine fault tolerance; intrusion tolerance; group communication;
   view synchrony; asynchronous distributed algorithms
ID BYZANTINE; DETECTORS; CONSENSUS
AB This paper presents Worm-IT, a new intrusion-tolerant group communication system with a membership service and a view-synchronous atomic multicast primitive. The system is intrusion-tolerant in the sense that it behaves correctly even if some nodes are corrupted and become malicious. It is based on a novel approach that enhances the environment with a special secure distributed component used by the protocols to execute securely a few crucial operations. Using this approach, we manage to bring together two important features: Worm-IT tolerates the maximum number of malicious members possible; it does not have to detect the failure of primary-members, a problem in previous intrusion-tolerant group communication systems. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Lisbon, Fac Ciencias, Dept Informat, P-1749016 Lisbon, Portugal.
   Pontificia Univ Catolica Parana, Programa Posgrad Informat Aplicada, BR-80215901 Curitiba, Parana, Brazil.
C3 Universidade de Lisboa; Pontificia Universidade Catolica do Parana
RP Correia, M (corresponding author), Univ Lisbon, Fac Ciencias, Dept Informat, Campo Grande,Bloco C6,Piso 3, P-1749016 Lisbon, Portugal.
EM mpc@di.fc.ul.pt; nuno@di.fc.ul.pt; lau@ppgia.pucpr.br; pjv@di.fc.ul.pt
RI Neves, Nuno/F-5261-2010; Correia, Miguel/L-6890-2015
OI Neves, Nuno/0000-0003-0411-4542; Verissimo, Paulo/0000-0002-0085-8053;
   Correia, Miguel/0000-0001-7873-5531
CR ADELSBACH A., 2002, Conceptual Model and Architecture of MAFTIA. Project MAFTIA deliverable D21
   Amir Y, 2005, IEEE T DEPEND SECURE, V2, P248, DOI 10.1109/TDSC.2005.39
   [Anonymous], 2016, HDB APPL CRYPTOGRAPH
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Baldoni R., 2003, Journal of Discrete Algorithms, V1, P185, DOI 10.1016/S1570-8667(03)00025-X
   Birman K., 1987, Proceedings of the eleventh ACM Symposium on Operating systems principles, P123
   Birman KennethP., 1997, BUILDING SECURE RELI
   BIRMAN KP, 1987, ACM T COMPUT SYST, V5, P47, DOI 10.1145/7351.7478
   Cachin C, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P167, DOI 10.1109/DSN.2002.1028897
   Casimiro A, 2000, 2000 IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS, PROCEEDINGS, P127, DOI 10.1109/WFCS.2000.882542
   Castro M, 2003, ACM T COMPUT SYST, V21, P236, DOI 10.1145/859716.859718
   Castro M, 2002, ACM T COMPUT SYST, V20, P398, DOI 10.1145/571637.571640
   Chandra TD, 1996, J ACM, V43, P225, DOI 10.1145/226643.226647
   Chockler GV, 2001, ACM COMPUT SURV, V33, P427, DOI 10.1145/503112.503113
   Correia M, 2006, COMPUT J, V49, P82, DOI 10.1093/comjnl/bxh145
   Correia M, 2005, DISTRIB COMPUT, V17, P237, DOI 10.1007/s00446-004-0110-7
   Correia M, 2002, LECT NOTES COMPUT SC, V2485, P234
   Correia M, 2002, SYM REL DIST SYST, P2, DOI 10.1109/RELDIS.2002.1180168
   DESWARTE Y, 1998, DIVERSITY ACCIDENTAL
   Doudou Assia, 2002, INT C REL SOFTW TECH, P24
   DWORK C, 1988, J ACM, V35, P288, DOI 10.1145/42282.42283
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   FRAGA J.S., 1985, Proceedings of the 3rd International Conference on Computer Security, P203
   Friedman R, 1996, 15TH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P140, DOI 10.1109/RELDIS.1996.559711
   FRIER A, 1996, SSL 3 0 PROTOCOL
   Kihlstrom K. P., 2001, ACM Transactions on Information and Systems Security, V4, P371, DOI 10.1145/503339.503341
   Kihlstrom KP, 2003, COMPUT J, V46, P16, DOI 10.1093/comjnl/46.1.16
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Malkhi D, 1998, DISTRIB COMPUT, V11, P203, DOI 10.1007/s004460050050
   Malkhi D, 1997, P IEEE CSFW, P116, DOI 10.1109/CSFW.1997.596799
   Martin JP, 2005, I C DEPEND SYS NETWO, P402, DOI 10.1109/DSN.2005.48
   Moser LE, 1999, INFORM COMPUT, V150, P75, DOI 10.1006/inco.1998.2770
   MOSER LE, 1994, INT CON DISTR COMP S, P56, DOI 10.1109/ICDCS.1994.302392
   Narasimhan N., 2000, P IEEE INF SURV C JA, P507
   Ramasamy HV, 2004, EUROMICRO CONF PROC, P591, DOI 10.1109/EURMIC.2004.1333427
   Ramasamy HV, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P229, DOI 10.1109/DSN.2002.1028904
   Reiter M.K., 1994, P 2 ACM C COMPUTER C, P68
   Reiter MK, 1996, IEEE T SOFTWARE ENG, V22, P31, DOI 10.1109/32.481515
   Rodeh Ohad., 2001, ACM T INFORM SYSTEM, V4, P289
   Smith S, 2004, COMPUTER, V37, P106, DOI 10.1109/MC.2004.170
   Veríssimo P, 2003, LECT NOTES COMPUT SC, V2584, P108
   Veríssimo P, 2002, IEEE T COMPUT, V51, P916, DOI 10.1109/TC.2002.1024739
   Veríssimo PE, 2003, LECT NOTES COMPUT SC, V2677, P3
   Zhou LD, 2002, ACM T COMPUT SYST, V20, P329, DOI 10.1145/571637.571638
NR 44
TC 17
Z9 19
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2007
VL 80
IS 2
BP 178
EP 197
DI 10.1016/j.jss.2006.03.034
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 133QB
UT WOS:000244026300004
DA 2024-07-18
ER

PT J
AU Dietrich, SW
   Patil, R
   Sundermier, A
   Urban, SD
AF Dietrich, Suzanne W.
   Patil, Rohini
   Sundermier, Amy
   Urban, Susan D.
TI Component adaptation for event-based application integration using
   active rules
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE component adaptation; wrappers; event-based application integration;
   active rules
AB Enterprise applications integrate information and applications in a distributed, networked environment to develop a global application of interconnected components and applications. This paper presents the design and implementation of the wrappers generated to adapt components to a middleware environment that employs active rules to build an enterprise application using an event-driven approach to integrating distributed black-box components. The components adapted in this implementation are based on the Enterprise JavaBeans component model. An application integrator declares the components to be integrated, and may define additional attributes, relationships, and events to be used in the integration process. The metadata for the components to be integrated is used to adapt and enhance the black-box components through the use of wrappers. The wrappers act as a proxy to the black-box component. The adaptation of the wrappers provides for the storage of additional properties for component instances and for the detection of events within the components to generate event notifications. The wrappers are automatically generated from the component metadata using the Extensible Stylesheet Language. The design and implementation of the wrappers establishes a framework that supports an active approach to component-based software integration. (C) 2006 Elsevier Inc. All rights reserved.
C1 Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Dietrich, SW (corresponding author), Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
EM dietrich@asu.edu
CR [Anonymous], P 22 ANN SOFTW ENG W
   Cattell R., 2000, The Object Data Standard: ODMG 3.0
   Cleaveland J.C., 2001, Program Generators with XML and Java
   DEJONG M, 1997, TCL JAVA MATCH MADE
   Dietrich S. W., 2001, Informatica, V25, P443
   *EJB, 2001, ENT JAVABEANS TECHNO
   Gamma Erich., 1994, DESIGN PATTERNS
   Gannod GC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P128, DOI 10.1109/WCRE.2000.891460
   GARLAN D, 1997, P CASCON 97 TOR ONT, P169
   *IRULES, 2003, INT RUL PROJ
   *JAVASPACES, 2003, JAVASPACES SERV SPEC
   *JIN, 2003, JIN NETW TECHN
   JIN Y, 2004, THESIS ARIZONA STATE
   JIN Y, IN PRESS J DATABASE
   JIN Y, IN PRESS INFORMATICA
   *JMS, 1999, JAV MESS SERV 1 0 2
   *JNDI, 2001, JAV NAM DIR INT 1 2
   KAMBHAMPATI S, 2003, THESIS ARIZONA STATE
   MEZINI M, 2000, SOFTWARE ARCHITECURE
   PATIL R, 2003, THESIS ARIZONA STATE
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
   Urban SD, 2001, THIRD INTERNATIONAL WORKSHOP ON ADVANCED ISSUES OF E-COMMERCE AND WEB-BASED INFORMATION SYSTEMS, PROCEEDINGS, P100, DOI 10.1109/WECWIS.2001.933911
   URBAN SD, 2004, P INT C ENT INF SYST, P312
   URBAN SD, 2001, P 9 IFIP 2 6 WORK C, P265
   URBAN SD, 2002, HDB ELECT COMMERCE B, P395
   Widom J., 1996, ACTIVE DATABASE SYST
   *XML, 2000, EXT MARK LANG
   *XSL, 1999, EXT STYLESH LANG TRA
NR 28
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2006
VL 79
IS 12
BP 1725
EP 1734
DI 10.1016/j.jss.2006.03.015
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115UX
UT WOS:000242760400005
DA 2024-07-18
ER

PT J
AU Bischofs, L
   Giesecke, S
   Gottschalk, M
   Hasselbring, W
   Warns, T
   Willer, S
AF Bischofs, Ludger
   Giesecke, Simon
   Gottschalk, Michael
   Hasselbring, Wilhelm
   Warns, Timo
   Willer, Stefan
TI Comparative evaluation of dependability characteristics for peer-to-peer
   architectural styles by simulation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE architectural style; dependability; peer-to-peer system
ID OVERLAY
AB An important concern for the successful deployment of a dependable system is its quality of service (QoS), which is significantly influenced by its architectural style. We propose the comparative evaluation of architectural styles by simulation. Our approach integrates architectural styles and concrete architectures to enable early design-space exploration in order to predict the QoS of peer-to-peer systems. We illustrate the approach via two case studies where availability of resources and performance of peer-to-peer search methods are evaluated. Based on our experience with these simulation environments, we sketch tool support for simulating architectural changes at runtime. (C) 2006 Elsevier Inc. All rights reserved.
C1 Carl von Ossietzky Univ Oldenburg, Software Engn Grp, D-26111 Oldenburg, Germany.
C3 Carl von Ossietzky Universitat Oldenburg
RP Hasselbring, W (corresponding author), Carl von Ossietzky Univ Oldenburg, Software Engn Grp, D-26111 Oldenburg, Germany.
EM ludger.bischofs@informatik.uni-oldenburg.de;
   simon.giesecke@informatik.uni-oldenburg.de;
   michael.gottschalk@informatik.uni-oldenburg.de;
   hassel-bring@informatik.uni-oldenburg.de;
   timo.warns@infor-matik.uni-oldenburg.de;
   stefan.willer@informatik.uni-olden-burg.de
RI Hasselbring, Wilhelm/G-4794-2011
OI Hasselbring, Wilhelm/0000-0001-6625-4335
CR [Anonymous], ICS 02
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   [Anonymous], P SIGCOMM 01, DOI DOI 10.1145/383059.383071
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bhagwan R, 2003, LECT NOTES COMPUT SC, V2735, P256
   Bischofs L, 2005, LECT NOTES COMPUT SC, V3664, P45
   Clarke I., 2001, LECT NOTES COMPUTER, V2009, P46, DOI DOI 10.1007/3-540-44702-4_
   Dabek R, 2003, LECT NOTES COMPUT SC, V2735, P33
   *EASIM, 2006, EAS P2P SIM
   *ECL, 2006, ECL
   *FREEN, 2006, FREE NETW PROJ
   *FREEPASTRY, 2006, PASTR SUBSTR PEER TO
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   García P, 2005, LECT NOTES COMPUT SC, V3437, P123
   Garlan D., 1994, SIGSOFT Software Engineering Notes, V19, P175, DOI 10.1145/195274.195404
   Gifford D. K., 1979, Proceedings of the Seventh Symposium on Operating Systems Principles, P150, DOI 10.1145/800215.806583
   *GNUT, 2006, GNUT
   *IRIS, 2006, IR INFR RES INT SYST
   *ISO IEC, 1999, 145981 ISOIEC 1
   *JFREECHART, 2006, JFREECH
   Joseph Sam, 2003, P2P J            NOV, V1, P1
   *JXTA, 2006, JXTA
   *KAZ, 2006, KAZ
   Knuth Donald Ervin, 1997, ART COMPUTER PROGRAM, V3
   Maier MW, 2001, COMPUTER, V34, P107, DOI 10.1109/2.917550
   Maymounkov P, 2002, LECT NOTES COMPUT SC, V2429, P53
   MILGRAM S, 1967, PSYCHOL TODAY, V1, P61
   MIZRAK AT, 2003, WIAPP 03 P 3 IEEE WO
   *NAPST, 2006, NAPST
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Page B., 2005, JAVA SIMULATION HDB
   Schollmeier R, 2002, FIRST INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, P101, DOI 10.1109/P2P.2001.990434
   Thomas R. H., 1979, ACM Transactions on Database Systems, V4, P180, DOI 10.1145/320071.320076
   Ting NS, 2003, THIRD INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING (P2P2003), PROCEEDINGS, P212, DOI 10.1109/PTP.2003.1231530
   Wang C., 2003, PEER TO PEER OVERLAY
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   *YED, 2006, YED JAV GRAPH ED
   Zhao BY, 2004, IEEE J SEL AREA COMM, V22, P41, DOI 10.1109/JSAC.2003.818784
NR 40
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2006
VL 79
IS 10
BP 1419
EP 1432
DI 10.1016/j.jss.2006.02.063
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 093MU
UT WOS:000241173200006
DA 2024-07-18
ER

PT J
AU Lo, JH
   Huang, CY
AF Lo, Jung-Hua
   Huang, Chin-Yu
TI An integration of fault detection and correction processes in software
   reliability analysis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 4th IEEE International Workshop on Source Code Analysis and Manipulation
CY SEP 15-16, 2004-5004
CL Chicago, IL
SP IEEE Comp Soc, Tech Council Software Engn, Loyola Coll Maryland, Raincode, VASTT Grp, Brunel Univ
DE software fault detection and correction processes; non-homogeneous
   Poisson process (NHPP); mean value function (MVF); software reliability
   growth model (SRGM)
ID GROWTH-MODEL
AB Software reliability is defined as the probability of failure-free software operation for a specified period of time in a specified environment and is widely recognized as one of the most significant aspects of software quality. Over the past 30 years, many software reliability growth models (SRGMs) have been proposed and they can greatly help us to estimate some important measures such as the mean time to failure, the number of remaining faults, defect levels, and the failure intensity, etc. Besides, SRGMs can also help to determine person power needed to support the desired reliability requirements. However, from our studies, most of SRGMs only focus on describing the behavior of fault detection process and assume that faults are fixed immediately upon detection. In fact, this assumption may not be realistic. Thus, in this paper, we will propose a general framework for modeling the software fault detection and correction processes. We will also show that the proposed approaches cover a number of well-known SRGMs. Two numerical examples based on two real software failure data sets are presented and discussed in detail. (C) 2005 Published by Elsevier Inc.
C1 Lan Yang Inst Technol, Dept Informat Management, ILan, Taiwan.
   Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu 30043, Taiwan.
C3 National Tsing Hua University
RP Lo, JH (corresponding author), Lan Yang Inst Technol, Dept Informat Management, ILan, Taiwan.
EM losir@mail.fit.edu.tw
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOKHALE SS, 1998, P 9 INT S SOFTW REL, P64
   Huang CY, 2005, J SYST SOFTWARE, V76, P181, DOI 10.1016/j.jss.2004.04.024
   KAPUR PK, 1995, MICROELECTRON RELIAB, V35, P273, DOI 10.1016/0026-2714(94)00054-R
   Lo JH, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P500, DOI 10.1109/CMPSAC.2003.1245386
   Lo JH, 2002, P INT COMP SOFTW APP, P7, DOI 10.1109/CMPSAC.2002.1044526
   Lo JH, 2001, IEEE REGION 10 INTERNATIONAL CONFERENCE ON ELECTRICAL AND ELECTRONIC TECHNOLOGY, VOLS 1 AND 2, P1, DOI 10.1109/TENCON.2001.949540
   LYU MR, 1992, IEEE SOFTWARE, V9, P43, DOI 10.1109/52.143104
   Musa J. D., 1985, SOFTWARE RELIABILITY, P292
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   OHBA M, 1984, IBM J RES DEV, V28, P428, DOI 10.1147/rd.284.0428
   Pham H., 2000, SOFTWARE RELIABILITY
   Schneidewind N. F., 1975, SIGPLAN Notices, V10, P337, DOI 10.1145/390016.808456
   SCHNEIDEWIND NF, 2003, P INT S SOFTW REL EN, P60
   Xie M., 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P184, DOI 10.1109/ISSRE.1992.285846
   Xie M, 2000, STAT IND TECHNOL, P325
   Xie M., 1991, SOFTWARE RELIABILITY
   Yamada S, 2000, ELECTRON COMM JPN 3, V83, P1, DOI 10.1002/1520-6440(200012)83:12<1::AID-ECJC1>3.0.CO;2-4
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1993, IEEE T RELIAB, V42, P100, DOI 10.1109/24.210278
   YIN L, 1999, P 10 INT S SOFTW REL, P6
NR 23
TC 41
Z9 46
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2006
VL 79
IS 9
SI SI
BP 1312
EP 1323
DI 10.1016/j.jss.2005.12.006
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 083TI
UT WOS:000240480700008
DA 2024-07-18
ER

PT J
AU Kazman, R
   Bass, L
   Klein, M
AF Kazman, Rick
   Bass, Len
   Klein, Mark
TI The essential components of software architecture design and analysis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software architecture; analysis methodologies; design methodologies
AB Architecture analysis and design methods such as ATAM, QAW, ADD and CBAM have enjoyed modest success and are being adopted by many companies as part of their standard software development processes. They are used in the lifecycle, as a means of understanding business goals and stakeholders concerns, mapping these onto an architectural representation, and assessing the risks associated with this mapping. These methods have evolved a set of shared component techniques. In this paper we show how these techniques can be combined in countless ways to create needs-specific methods in an agile way. We demonstrate the generality of these techniques by describing a new architecture improvement method called APTIA (Analytic Principles and Tools for the Improvement of Architectures). APTIA almost entirely reuses pre-existing techniques but in a new combination, with new goals and results. We exemplify APTIA's use in improving the architecture of a commercial information system. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Hawaii, Inst Software Engn, Pittsburgh, PA 15213 USA.
   Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Software Engineering Institute; University of Hawaii System; Carnegie
   Mellon University
RP Kazman, R (corresponding author), Univ Hawaii, Inst Software Engn, 4500 5th Ave, Pittsburgh, PA 15213 USA.
EM kazman@sei.cmu.edu; ljb@sei.cmu.edu; mk@sei.cmu.edu
CR [Anonymous], CMUSEI2004TN036
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   Bachmann Felix., 2005, Variability in Software Product Lines
   Barbacci M.R., 2003, CMU/ SEI- 2003- TR-016). Technical Report., Vthird
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bengtsson P, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P139, DOI 10.1109/CSMR.1999.756691
   BENGTSSON PO, 1998, P 5 INT C SOFTW REUS
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Clements P., 2003, SEI S SOFTW
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DUENAS JC, 1998, P 2 INT ESPRIT ARES, P148
   Kazman R, 2005, SOFTWARE QUAL J, V13, P329, DOI 10.1007/s11219-005-4250-1
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Kazman R., 1994, P ICSE, V16, P81
   Kazman R., 2004, CMUSEI2004TR011
   Klein M.H., 1993, PRACTITIONERS HDB RE
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   LUNG C, 1997, P CASCON 97 NOV
   SHAW M, 1990, IEEE SOFTWARE, V7, P15, DOI 10.1109/52.60586
   [No title captured]
NR 21
TC 29
Z9 32
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2006
VL 79
IS 8
BP 1207
EP 1216
DI 10.1016/j.jss.2006.05.001
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 075MW
UT WOS:000239890100014
DA 2024-07-18
ER

PT J
AU Yu, YT
   Lau, MF
   Chen, TY
AF Yu, Yuen Tak
   Lau, Man Fai
   Chen, Tsong Yueh
TI Automatic generation of test cases from Boolean specifications using the
   MUMCUT strategy
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE black-box testing; Boolean specification; fault-based testing;
   specification-based testing; test case generation
ID ERROR-DETECTION CAPABILITY; FAULT CLASSES; SELECTION-STRATEGIES
AB A recent theoretical study has proved that the MUMCUT testing strategy (1) guarantees to detect seven types of fault in Boolean specifications in irredundant disjunctive normal form, and (2) requires only a subset of the test sets that satisfy the previously proposed MAX-A and MAX-B strategies, which can detect the same types of fault. This paper complements previous work by investigating various methods for the automatic generation of test cases to satisfy the MUMCUT strategy. We evaluate these methods by using several sets of Boolean expressions, including those derived from real airborne software systems. Our results indicate that the greedy CUN and UCN methods are clearly better than others in consistently producing significantly smaller test sets, whose sizes exhibit linear correlation with the length of the Boolean expressions in irredundant disjunctive normal form. This study provides empirical evidences that the MUMCUT strategy is indeed cost-effective for detecting the faults considered in this paper. (C) 2005 Elsevier Inc. All rights reserved.
C1 City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
C3 City University of Hong Kong; Swinburne University of Technology
RP Yu, YT (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM csytyu@cityu.edu.hk; elau@ict.swin.edu.au; tchen@ict.swin.edu.au
OI Chen, Tsong/0000-0003-3578-0994
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   BLACK PE, 2000, P MUTATION 2000, P14
   Chen T. Y., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P606, DOI 10.1109/APSEC.1999.809656
   Chen T. Y., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99), P262
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Chen TY, 1997, P INT COMP SOFTW APP, P608, DOI 10.1109/CMPSAC.1997.625080
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Chilenski John J., 2001, DOTFAAAR0118 US DEP
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Dupuy Arnaud, 2000, 19 DASC 19 DIG AV SY
   FOSTER KA, 1980, IEEE T SOFTWARE ENG, V6, P258, DOI 10.1109/TSE.1980.234487
   FOSTER KA, 1984, ACM SIGSOFT SOFTWARE, V9, P120
   Goldman R.N., 1985, Statistics, an introduction
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Kobayashi N, 2002, INFORM SOFTWARE TECH, V44, P113, DOI 10.1016/S0950-5849(01)00222-1
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   OFFUTT AJ, 2003, SOFTW TEST VERIF REL, V13, P25
   Okun V, 2004, INFORM SOFTWARE TECH, V46, P525, DOI 10.1016/j.infsof.2003.10.003
   Papadimitriou C. H., 1994, Computational Complexity
   Paradkar A, 1997, ANN SOFTW ENG, V4, P133, DOI 10.1023/A:1018979130614
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Quine Willard V, 1952, AM MATH MON, V59, P521, DOI [DOI 10.2307/2308219, 10.1080/00029890.1952.11988183, DOI 10.1080/00029890.1952.11988183]
   RTCA Inc, 1992, RTCADO178B
   Tai K.-C., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1), P278
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   Tsuchiya T, 2002, ACM T SOFTW ENG METH, V11, P58, DOI 10.1145/504087.504089
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Yu YT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P263, DOI 10.1109/QSIC.2003.1319110
   YU YT, 2005, IN PRESS J SYSTEMS S
NR 35
TC 24
Z9 26
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2006
VL 79
IS 6
BP 820
EP 840
DI 10.1016/j.jss.2005.08.016
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 050IT
UT WOS:000238081600007
DA 2024-07-18
ER

PT J
AU Chan, WK
   Cheng, MY
   Cheung, SC
   Tse, TH
AF Chan, W. K.
   Cheng, M. Y.
   Cheung, S. C.
   Tse, T. H.
TI Automatic goal-oriented classification of failure behaviors for testing
   XML-based multimedia software applications: An experimental case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Quality Software
CY SEP 08-09, 2004
CL Braunschweig, GERMANY
SP Tech Univ Braunschweig, Inst Informat Syst, Univ Hong Kong, Software Engn Grp, Swinburne Univ Technol, Ctr Software Engn
DE software testing; test dimensions; multimedia application testing;
   failure identification; failure classification
ID SYSTEMS
AB When testing multimedia software applications, we need to overcome important issues such as the forbidding size of the input domains, great difficulties in repeating non-deterministic test outcomes, and the test oracle problem. A statistical testing methodology is proposed. It applies pattern classification techniques enhanced with the notion of test dimensions. Test dimensions are orthogonal properties of associated test cases. Temporal properties are being studied in the experimentation in this paper. For each test dimension, a pattern classifier is trained on the normal and abnormal behaviors. A type of failure is said to be classified if it is recognized by the classifier. Test cases can then be analyzed by the failure pattern recognizers. Experiments show that some test dimensions are more effective than others in failure identification and classification. (c) 2005 Elsevier Inc. All rights reserved.
C1 Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   Hong Kong Univ Sci & Technol, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 University of Hong Kong; Hong Kong University of Science & Technology
RP Tse, TH (corresponding author), Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM thtse@cs.hku.hk
RI Tse, T.H./C-6590-2008; Liu, Chenyu/KBQ-8899-2024; Chan, Wah
   Kheong/AGA-6636-2022; Cheung, Shing Chi/U-5882-2018
OI Tse, T.H./0000-0002-0460-8377; Chan, Wah Kheong/0000-0002-9105-5837;
   Chan, Wing Kwong/0000-0001-7726-6235; Cheung, Shing
   Chi/0000-0002-3508-7172
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 1990, Software testing techniques {
   Blakowski G, 1996, IEEE J SEL AREA COMM, V14, P5, DOI 10.1109/49.481691
   BLUM M, 1995, J ACM, V42, P269, DOI 10.1145/200836.200880
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   BULTERMAN DCA, 2004, P 15 ACM C HYP HYP H, P46
   Campos S, 1999, ACM MULTIMEDIA 99, PROCEEDINGS, P419, DOI 10.1145/319463.319678
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Cheng JLC, 2000, ADV INT COM, V13, P3
   Cheng MY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P32
   Cheung SC, 2004, IEEE T RELIAB, V53, P329, DOI 10.1109/TR.2004.833314
   Cunningham SP, 1998, IEEE T SEMICONDUCT M, V11, P48, DOI 10.1109/66.661284
   Duda R., 1973, Pattern Classification and Scene Analysis
   Hao RB, 2004, IEEE ACM T NETWORK, V12, P823, DOI 10.1109/TNET.2004.836136
   Hoffman C, 2001, POPTRONICS, V2, P29
   LITTLE TDC, 1993, IEEE T KNOWL DATA EN, V5, P551, DOI 10.1109/69.234768
   LU G, 1996, COMMUNICATION COMPUT
   MEYER B, 1997, PRENTICE HALL INT SE
   Mitchell T. M., 1997, MACHINE LEARNING
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Russell E.L., 2000, Data-driven Techniques for Fault Detection and Diagnosis in Chemical Processes
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
   2002, X SMILES
   2001, BELIEF NETWORK BN PO
   1998, SYNCHRONIZED MULTIME
   2005, SYNCHRONIZED MULTIME
NR 26
TC 5
Z9 10
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2006
VL 79
IS 5
BP 602
EP 612
DI 10.1016/j.jss.2005.05.031
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 041NR
UT WOS:000237463400004
DA 2024-07-18
ER

PT J
AU Beecham, S
   Hall, T
   Britton, C
   Cottee, M
   Rainer, A
AF Beecham, S
   Hall, T
   Britton, C
   Cottee, M
   Rainer, A
TI Using an expert panel to validate a requirements process improvement
   model
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID SOFTWARE PROCESS IMPROVEMENT; ORGANIZATIONS; QUALITY
AB In this paper we present components of a newly developed software process improvement model that aims to represent key practices in requirements engineering (RE). Our model is developed in response to practitioner needs highlighted in our empirical work with UK software development companies. We have now reached the stage in model development where we need some independent feedback as to how well our model meets our objectives. We perform this validation through involving a group of software process improvement and RE experts in examining our RE model components and completing a detailed questionnaire. A major part of this paper is devoted to explaining our validation methodology. There is very little in the literature that directly relates to how process models have been validated. therefore providing this transparency will benefit both the research community and practitioners. The validation methodology and the model itself contribute towards a better understanding of modelling RE processes. (c) 2004 Elsevier Inc. All rights reserved.
C1 Univ Hertfordshire, Dept Comp Sci, Hatfield A10 9AB, Herts, England.
   Univ Hertfordshire, Sch Business, Hatfield AL10 9AB, Herts, England.
C3 University of Hertfordshire; University of Hertfordshire
RP Univ Hertfordshire, Dept Comp Sci, Coll Lane, Hatfield A10 9AB, Herts, England.
EM s.beecham@herts.ac.uk
RI Beecham, Simon C/M-1544-2016
OI Hall, Tracy/0000-0002-2728-9014
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Altman DG, 1991, PRACTICAL STAT MED R
   [Anonymous], 1992, The analysis of contingency tables
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 1988, NONPARAMETRIC STAT
   BADDOO N, 2002, MOTIVATORS DEMOTIVAT
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   BEECHAM S, 2003, ASSESSING STRENGHT, V381
   BEECHAM S, 2003, BUILDING REQUIREMENT, V378
   BEECHAM S, 2003, VALIDATING REQUIREME, V373
   Beecham S., 2003, Building a requirements process improvement model
   BEECHAM S, 2003, DEFINING REQUIREMENT, V379
   BEECHAM S, 2003, IN PRESS DEFINING RE
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   BOEHM B, 2001, USING WIN WIN REQUIR
   BOEHM BW, 1981, ADV COMPUTING SCI TE
   BRITTON C, 2000, OBJECT ORIENTED SYST
   BRODMAN JG, 1994, 16 INT C SOFTW ENG
   BURNSTEIN I, 1996, DEV TESTING MATURI 2
   CARSON JS, 1986, IND ENG, V18, P74
   *CMMI, 2001, VERSION 1 1 SOFTWARE
   COTTENGIM D, 2002, J DEFENSE SOFTWARE E, P26
   CRAMER D, 1997, BASIC STAT SOC RES
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   EMAM E, 2001, ISOIEC15504, V59, P23
   EMAM E, 1995, IEEE INT S REQ ENG
   EMAM E, 1996, EMPIR SOFTW ENG, V1, P201
   EMAM E, 1996, REQUIREMENTS ENG J, V1, P4
   EMAM E, 1996, IEEE SOFTWARE, V13, P109
   EMAM KE, 2000, IEEE T SOFTWARE ENG, V26, P541
   Fox C, 1997, COMMUN ACM, V40, P24, DOI 10.1145/255656.255678
   GASS S, 1983, OPERATIONS RES, V31
   Gilb T, 1996, IEEE SOFTWARE, V13, P97, DOI 10.1109/52.476291
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   HAKIM C, 1987, CONTEMPORARY SOC RES, V13
   HALL T, 2002, 6 INT C EMP ASS EV
   HALL T, 2002, IEE P SOFTWARE
   HAYES W, 1995, CMUSEI95TR008
   HERBSLEB JD, 1996, 18 INT C SOFTW ENG
   HOFMANN HF, 2001, IEEE SOFTWARE, P58
   Humphrey WS, 2002, ANN SOFTW ENG, V14, P39, DOI 10.1023/A:1020593305601
   HUMPHREY WS, 1989, SEI SERIES SOFTWARE, P494
   HUNTER R, 2002, ISOIECJTC1SC7WG10
   JALOTE P, 1997, UNDERGRADUATE TEXTS
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   KITCHENHAM BA, 2002, P C EMP ASS SOFTW EN
   KONRAD M, 2001, SOFTWARE PROCESS IMP
   Koubarakis M, 2002, INFORM SYST, V27, P299, DOI 10.1016/S0306-4379(01)00055-2
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   LUBARS M, 1993, P IEEE INT S REQ ENG
   NEWTON RR, 1999, STAT CONSULTANT SAGE
   Ngwenyama O, 2003, IEEE T ENG MANAGE, V50, P100, DOI 10.1109/TEM.2002.808267
   Oppenheim A.N., 2001, Questionaire Design, Interviewing and attitude Measurement, V9˚
   PAULK MC, 1995, SEI SERIES SOFTWARE
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   POTTER N, 2001, PRACTICAL CMM SOFTWA
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Robinson S, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P53, DOI 10.1145/268437.268448
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   ROSSI S, 1999, INT C PROD FOC SOFTW
   Sargent RobertG., 2000, WINTER SIMULATION C
   Sawyer P, 1999, IEEE SOFTWARE, V16, P78, DOI 10.1109/52.754057
   SMITH RC, 1998, INT C REQ ENG ICRE98, P6
   *SPSS, 1999, SPSS WINDONWS SYSTEM
   *SPSS, 1999, SURVEYS CONFIDENCE P
   THAYER RH, 1990, IEEE COMPUTER SOC
   WIEGERS K, 1998, IEEE SOFTWARE, V15
   WIEGERS K, 1998, MOLDING CMM ORGANIZA, V6
NR 73
TC 85
Z9 103
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2005
VL 76
IS 3
BP 251
EP 275
DI 10.1016/j.jss.2004.06.004
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 913TE
UT WOS:000228175300004
DA 2024-07-18
ER

PT J
AU Briand, LC
   Freimut, B
   Vollei, F
AF Briand, LC
   Freimut, B
   Vollei, F
TI Using multiple adaptive regression splines to support decision making in
   code inspections
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software inspection; inspection effectiveness; multiple adaptive
   regression spline
AB Inspections have been shown to be an effective means of detecting defects early on in the software development life cycle. However, they are not always successful or beneficial as they are affected by a number of technical and managerial factors. To make inspections successful, one important aspect is to understand what are the factors that affect inspection effectiveness (the rate of detected defects) in a given environment, based on project data. In this paper we collected data from over 230 code inspections and performed a multivariate statistical analysis in order to look at how management factors, such as the effort assigned and the inspection rate, affect inspection effectiveness. Because the functional form of effectiveness models is a priori unknown, we use a novel exploratory analysis technique: multiple adaptive regression splines (MARS). We compare the MARS model with more classical regression models and show how it can help understand the complex trends and interaction:; in the data, without requiring the analyst to rely on strong assumptions. Results are reported and discussed in light of existing studies. (C) 2004 Elsevier Inc. All rights reserved.
C1 Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   Fraunhofer Inst Expt Software Engn, Dept Qual & Proc Engn, D-67661 Kaiserslautern, Germany.
   Siemens AG, Corp Technol, D-81730 Munich, Germany.
C3 Carleton University; Fraunhofer Gesellschaft; Siemens AG; Siemens
   Germany
RP Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel Dr,ME4462, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca; freimut@iese.fhg.de;
   ferdinand.vollei@siemens.com
CR [Anonymous], 2006, Regression Analysis by Example, DOI DOI 10.1002/0470055464
   BRIAND LC, 2000, MULTIPLE ADAPTIVE RE
   BUCK FO, 1995, TR21802 IBM
   CHRISTENSON DA, 1990, IEEE J SEL AREA COMM, V8, P196, DOI 10.1109/49.46872
   DAVIDSON R, 1981, ECONOMETRICA, V49, P781, DOI 10.2307/1911522
   DEVEAUX RD, 1993, COMPUT CHEM ENG, V17, P819, DOI 10.1016/0098-1354(93)80066-V
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   EBENAU RG, 1994, J DEFENSE SOFTWARE E, V7, P9
   FOWLER PJ, 1986, AT&T TECH J, V65, P102, DOI 10.1002/j.1538-7305.1986.tb00298.x
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   GILBT, 1993, SOFTWARE INSPECTECTI
   Humphrey W S, 1995, A discipline for software engineering
   Laitenberger O., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P312, DOI 10.1109/METRIC.1999.809752
   Laitenberger O, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P97, DOI 10.1023/A:1020519222014
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   LAITENBERGER O, 2000, J SYSTEM SOFTWARE, V50
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   PORTER AA, 1996, REV SOFTWARE INSPECT
NR 18
TC 38
Z9 43
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2004
VL 73
IS 2
BP 205
EP 217
DI 10.1016/j.jss.2004.01.015
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 849VZ
UT WOS:000223570800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Thelin, T
   Petersson, H
   Runeson, P
   Wohlin, C
AF Thelin, T
   Petersson, H
   Runeson, P
   Wohlin, C
TI Applying sampling to improve software inspections
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE empirical study; Monte Carlo simulation; software inspection; sampling;
   efficiency
AB The main objective of software inspections is to find faults in software documents. The benefits of inspections are reported from researchers as well as software organizations. However, inspections are time consuming and the resources may not be sufficient to inspect all documents. Sampling of documents in inspections provides a systematic solution to select what to be inspected in the case resources are not sufficient to inspect everything. The method presented in this paper uses sampling, inspection and resource scheduling to increase the efficiency of an inspection session. A pre-inspection phase is used in order to determine which documents need most inspection time, i.e. which documents contain most faults. Then, the main inspection is focused on these documents. We describe the sampling method and provide empirical evidence, which indicates that the method is appropriate to use. A Monte Carlo simulation is used to evaluate the proposed method and a case study using industrial data is used to validate the simulation model. Furthermore, we discuss the results and important future research in the area of sampling of software inspections. (C) 2003 Elsevier Inc. All rights reserved.
C1 Lund Univ, Dept Commun Syst, SE-22100 Lund, Sweden.
   Blekinge Inst Technol, Dept Software Engn & Comp Sci, SE-37225 Ronneby, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Lund Univ, Dept Commun Syst, POB 118, SE-22100 Lund, Sweden.
EM thomas.thelin@telecom.ith.se; hakan.petersson@telecom.lth.se;
   per.runeson@telecom.lth.se; claes.wohlin@bth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851; Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], SOFTWARE INSPECTIONS
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BERLING T, 2001, P 5 INT C EMP ASS EV
   Burr A., 1996, STAT METHODS SOFTWAR
   CHAO A, 1989, BIOMETRICS, V45, P427, DOI 10.2307/2531487
   Ebenau R., 1994, Software Inspection Process
   El Emam K, 2001, IEEE T SOFTWARE ENG, V27, P851, DOI 10.1109/32.950319
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kusumoto S, 1996, J SYST SOFTWARE, V35, P119, DOI 10.1016/0164-1212(95)00091-7
   MACFARLAND R, 2001, P WORKSH INSP SOFTW, P127
   Miller JE, 1999, TROP MED INT HEALTH, V4, P167, DOI 10.1046/j.1365-3156.1999.43378.x
   Ohlsson Niclas., 1996, P 6 INT C SOFTWARE Q, P1
   OTIS DL, 1978, WILDLIFE MONOGR, P1
   Peterson CC, 1999, PSYCHOL SCI, V10, P126, DOI 10.1111/1467-9280.00119
   WELLER EF, 1993, IEEE SOFTWARE, V10, P38, DOI 10.1109/52.232397
NR 16
TC 2
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2004
VL 73
IS 2
BP 257
EP 269
DI 10.1016/s0164-1212(03)00249-8
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 849VZ
UT WOS:000223570800008
DA 2024-07-18
ER

PT J
AU Ton, LR
   Chang, LC
   Shann, JJ
   Chung, CP
AF Ton, LR
   Chang, LC
   Shann, JJ
   Chung, CP
TI A software/hardware cooperated stack operations folding model for Java
   processors
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Java processor; stack operations folding; POC folding model; T-POC
   folding model; T-POC bytecode rescheduler
AB Java has become the most important language in the Internet area, but the execution performance of Java processors is severely limited by the true data dependency inherited from the stack architecture defined by Sun's Java Virtual Machine. A sequential hardware-based folding algorithm-POC folding model was proposed in the earlier research to eliminate up to 80.1% of stack push and pop bytecodes. The remaining stack push and pop bytecodes cannot be folded due to the sequential checking characteristic of the POC folding model. In this paper, a new software/hardware cooperated folding algorithm-T-POC (Tagged-POC) folding model is proposed to enhance the folding ability of the POC-based Java processors to fold the remaining stack push and pop bytecodes. While executing the bytecodes, bytecode grouping and rescheduling are done by a T-POC bytecode rescheduler to generate the new binary class images in memory. With the cooperation of the hardware-based POC folding model, higher execution performance can be achieved by executing the newly generated class images. Statistical data show that 94.8% of stack push and pop bytecodes can be folded, and the overall execution speedups of 2-, 3-, and 4-foldable strategies are 1.72, 1.73 and 1.74, respectively, as compared to a single-pipelined stack machine without folding. (C) 2003 Elsevier Inc. All rights reserved.
C1 Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, Hsinchu 30050, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, 1001 Ta Hsueh Rd, Hsinchu 30050, Taiwan.
EM jjshann@csie.nctu.edu.tw
CR Chang LC, 2000, J CHIN INST ENG, V23, P711, DOI 10.1080/02533839.2000.9670592
   Chang LC, 1998, IEE P-COMPUT DIG T, V145, P333, DOI 10.1049/ip-cdt:19982200
   Cramer T, 1997, IEEE MICRO, V17, P36, DOI 10.1109/40.591653
   Gosling J., 1996, Java(TM) Language Specification, V1st
   LINDHOLM T, 1996, JAVA TM VIRTUAL MACH
   *NMIS, NMIS JAV BYT VIEW 5
   *SPE CJVM, 1998, BENCHM
   *SUN MICR INC, 1999, PIC JAV 2 TM PROGR R
   *SUN MICR INC, 1999, PIC JAV 2 TM MICR
   Venners Bill., 1998, Inside the Java Virtual Machine
NR 10
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2004
VL 72
IS 3
BP 377
EP 387
DI 10.1016/S0164-1212(03)00100-6
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 832UB
UT WOS:000222291600007
DA 2024-07-18
ER

PT J
AU Ortin, F
   Cueva, JM
AF Ortin, F
   Cueva, JM
TI Dynamic adaptation of application aspects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE aspect-oriented programming; reflection; separation of concerns; dynamic
   weaving; meta-object protocol
AB In today's fast changing environments, adaptability has become an important feature in modern computing systems, programming languages and software engineering methods. Different approaches and techniques are used to achieve the development of adaptable systems. Following the principle of separation of concerns, aspect-oriented programming (AOP) distinguishes application functional code from specific concerns that cut across the system, creating the final application by weaving the program's main code and its specific aspects. In many cases, dynamic application adaptation is needed, but few existing AOP tools offer it in a limited way. Moreover, these tools use a fixed programming language: aspects cannot be implemented regardless of its programming language.
   We identify reflection as a mechanism capable of overcoming the deficiencies previously mentioned. We have developed a non-restrictive reflective technique that achieves a real computational-environment jump, making every application and language feature adaptable at runtime-without any previously defined restriction. Moreover, our reflective platform is independent of the language selected by the programmer. Using the reflective capabilities of the platform presented, an AOP framework that achieves dynamic aspect weaving in a language-independent way has been constructed, overcoming the common limitations of existing AOP tools. (C) 2002 Elsevier Inc. All rights reserved.
C1 Univ Oviedo, Dept Comp Sci, E-33007 Oviedo, Spain.
C3 University of Oviedo
RP Univ Oviedo, Dept Comp Sci, Calvo Sotelo S-N, E-33007 Oviedo, Spain.
EM ortin@lsi.uniovi.es; cueva@pinon.ccu.uniovi.es
RI Ortin, Francisco/K-9272-2014
OI Ortin, Francisco/0000-0003-1199-8649
CR Anderson E.W., 1998, J. Serv. Res., V1, P5, DOI [DOI 10.1177/109467059800100102, 10.1177/109467059800100102]
   [Anonymous], LECT NOTES COMPUTER
   Archer Tom., 2001, Inside C#
   BOLLERT K, 1999, EUR C OBJ OR PROGR E
   CHIBA S, 1998, EUR C OBJ OR PROGR E
   DOUENCE R, 1999, 991INFO EC MIN NAT D
   FOOTE B, 1992, EUR C OBJ OR PROGR E
   GAMMA E, 1995, DES PATT EL REUS OBJ
   Gosling James, 1996, The Java Language Specification
   HAMMOND M, 2001, PYTHON NET LESSONS L
   HOLZLE U, 1994, P OBJ OR PROGR LANG
   HURSCH WL, 1995, UNCCS9503 NE U
   KICZALES G, 1992, ART METAOBJECT
   KICZALES G, 2001, GETTING STATED ASPEC
   KLEINODER J, 1996, EUR C OBJ OR PROGR E
   MAES P, 1987, THESIS VRIJE U BRUSS
   MATTHIJS F, 1997, EUR C OBJ OR PROGR E
   OBRIEN L, 2001, 1 ASPECT ORIENTED CO
   ORTIN F, 1999, P IT C INF SYST AN S
   ORTIN F, 2002, P INT C SOFTW ENG RE
   ORTIN F, 2001, EUR C OBJ OR PROGR E
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   PINTO M, 2001, EUR C OBJ OR PROGR E
   Popovici A., 2001, DYNAMIC HOMOGENOUS A
   ROSSUM G, 2001, PHYTHON REFERENCE MA
   SMITH BC, 1984, P ACM S PRINC PROGRA
   TARR P, 1999, P 1999 INT C SOFTW E
   ZINKY JA, 1997, THEORY PRACTICE OBJE, V3
NR 28
TC 20
Z9 22
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2004
VL 71
IS 3
BP 229
EP 243
DI 10.1016/S0164-1212(02)00157-7
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 806ED
UT WOS:000220416300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Min, JK
   Chung, CW
AF Min, JK
   Chung, CW
TI DIPS: an efficient pointer swizzling strategy for incremental uncaching
   environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE databases; persistent objects; smart pointers; pointer swizzling
ID OBJECTS; PERSISTENT; DATABASE
AB Pointer swizzling improves the performance of OODBMSs by reducing the number of table lookups. However, the object replacement incurs the unswizzling overhead. In this paper, we propose a new pointer swizzling strategy, the dynamic indirect pointer swizzling (DIPS). DIPS dynamically applies pointer swizzling techniques in order to reduce the overhead of unswizzling. DIPS uses the temporal locality information which is gathered by the object buffer manager. The information is used to select the object to whose pointers the pointer swizzling techniques are applied and to dynamically bind the pointer swizzling techniques using the virtual function mechanism. We show the efficiency of the proposed strategy through experiments over various object buffer sizes and workloads. (C) 2003 Elsevier Inc. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Min, JK (corresponding author), Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM jkmin@islab.kaist.ac.kr; chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR BILIRIS A, 1993, SOFTWARE PRACT EXPER, V23, P1285, DOI 10.1002/spe.4380231202
   BRAHNMATH K, 1998, JAV P INT WORKSH PER, P268
   CAREY MJ, 1993, P ACM SIGMOD INT C M, P12
   Cattell R.G. G., 2000, OBJECT DATABASE STAN
   EDELSON DR, 1992, P USENIX CPLUSPLUS C, P1
   EFFELSBERG W, 1984, ACM T DATABASE SYST, V9, P560, DOI 10.1145/1994.2022
   *EXCELON CORP, 2002, EXT INF SERV
   Franklin MJ, 1997, ACM T DATABASE SYST, V22, P315, DOI 10.1145/261124.261125
   HAAHR M, 2001, TCDCS200116 U DUBL
   Johnson T., 1994, P 20 INT C VER LARG, P439
   KEMPER A, 1995, VLDB J, V4, P427
   MCAULIFFE ML, 1995, PROC INT CONF DATA, P52, DOI 10.1109/ICDE.1995.380410
   MOSS JEB, 1992, IEEE T SOFTWARE ENG, V18, P657, DOI 10.1109/32.153378
   ONEIL EJ, 1993, P ACM SIGMOD INT C M, P297
   PNHEIRO E, 2000, P WORKSH SOFTW DISTR
   Reinwald B, 1996, IBM SYST J, V35, P172, DOI 10.1147/sj.352.0172
   *SHOR PROJ GROUP, 1995, SHOR STOR MAN PROGR
   VORUGANTI K, 1999, P INT C VLDB, P440
   White S.J., 1995, VLDB J, V4, P629
   WHITE SJ, 1992, PROC INT CONF VERY L, P419
   Wilson P. R., 1992, Proceedings of the Second International Workshop on Object Orientation in Operating systems (Cat. No.92TH0477-0), P364, DOI 10.1109/IWOOOS.1992.252959
   [No title captured]
NR 22
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2004
VL 71
IS 1-2
BP 189
EP 198
DI 10.1016/S0164-1212(03)00047-5
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 804ZP
UT WOS:000220336900015
DA 2024-07-18
ER

PT J
AU Folmer, E
   Bosch, J
AF Folmer, E
   Bosch, J
TI Architecting for usability: a survey
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software architecture; usability; design for quality attributes
AB Over the years the software engineering community has increasingly realized the important role software architecture plays in fulfilling the quality requirements of a system. The quality attributes of a software system are, to a large extent determined by the system's software architecture. In recent years, the software engineering community has developed various tools and techniques that allow for design for quality attributes, such as performance or maintainability, at the software architecture level. We believe this design approach can be applied not only to "traditional" quality attributes such as performance or maintainability but also to usability. This survey explores the feasibility of such a design approach. Current practice is surveyed from the perspective of a software architect. Are there any design methods that allow for design for usability at the architectural level? Are there any evaluation tools that allow assessment of architectures for their support of usability? What is usability? A framework is presented which visualizes these three research questions. Usability should drive design at all stages, but current usability engineering practice fails to fully achieve this goal. Our survey shows that there are no design techniques or assessment tools that allow for design for usability at the architectural level. (C) 2002 Elsevier Inc. All rights reserved.
C1 Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
C3 University of Groningen
RP Univ Groningen, Dept Math & Comp Sci, POB 800, NL-9700 AV Groningen, Netherlands.
EM mail@eelke.com; jan.bosch@cs.rug.nl
CR Alexander C., 1979, The Timeless Way of Building
   Alreck P., 1994, SURVEY RES HDB
   [Anonymous], 1988, Proceedings of the SIGCHI conference on Human factors in computing systems-CHI, DOI DOI 10.1145/57167.57203
   [Anonymous], 2001, USER CTR DESIGN INTE
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 1991, Human Factors for Informatics Usability, DOI DOI 10.1016/J.INTCOM.2009.04.007
   [Anonymous], P 6 INT C HUM COMP I
   [Anonymous], 9126 ISO DIS
   [Anonymous], P 4 INT C HUM COMP I
   Apple Computer Inc, 1987, APPL HUM INT GUID AP
   BAECKER RM, 1995, READINGS HUMAN COMPU, P1
   BASS L, 2001, CMUSEI2001
   Bass Len, 2012, SEI S SOFTW
   BENGTSSON PO, 2000, 5 EUR C SOFTW MAINT
   BENGTSSON PO, 2000, HKRRES0011SE
   Bevan N, 2001, INT J HUM-COMPUT ST, V55, P533, DOI 10.1006/ijhc.2001.0483
   BEVAN N, 1995, SOFTWARE QUAL J, V4, P115, DOI 10.1007/BF00402715
   Bias Randolph., 1994, USABILITY INSPECTION, P63
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brooks Frederick P., 1995, The mythical man-month
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DOLL WJ, 1994, MIS QUART, V18, P453, DOI 10.2307/249524
   Dumas J.F., 1993, A Practical Guide To Usability Testing
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Haggander D., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99), P288
   Hartson H.R., 1996, P CHI 1996, P228
   HIX D, 1993, DEV USER INTERFACES, pCH2
   Holcomb R., 1991, International Journal of Human-Computer Interaction, V3, P49, DOI 10.1080/10447319109525996
   *IBM, 1991, SC34428900 IBM
   *IBM, 1991, SC34429000 IBM
   IEEE Architecture Working Group, 1998, P1471D41 IEEE
   *ISO, 2000, 91261 ISO 1
   *ISO, 1994, 924111 ISO 2
   *ISO, 1992, 9241 DIS ISO
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   *KDE, 2001, KDE US INT GUID
   KEINONEN T, 1998, 1 DIMENSIONAL USABIL
   LEDERER AL, 1992, COMMUN ACM, V35, P50
   LEWINSKYHAAPASA.J, 1995, HARVARD PAPERS BOT, V7, P1
   LEWIS JR, 1992, PROCEEDINGS OF THE HUMAN FACTORS SOCIETY, 36TH ANNUAL MEETING, VOLS 1 AND 2, P1259, DOI 10.1177/154193129203601617
   *MACINT, 2001, MACINT HUM INT GUID
   Macleod M., 1994, P NORW COMP SOC SOFT
   *MICR, 1992, WIND INT APPL DES GU
   Nielsen J., 1995, Scenario-Based Design
   Nielsen J., 1994, Heuristic evaluation
   Norman D. A., 1988, PSYCHOL EVERYDAY THI
   OVASKA S, 1991, SCANDINAVIAN J INFOR, V3
   PERLMAN G, 2002, WEB BASED USER INTER
   PERZEL K, 1999, PLOP 99
   *POINTER, 2002, PATT INTERACTION COL
   Polson P. G., 1990, Human-Computer Interaction, V5, P191, DOI 10.1207/s15327051hci0502&3_3
   Poulson D., 1996, USERfit: A practical handbook on user centred design for assistive technology
   RAVDEN S, 1989, EVALUATION USABILITY
   Rowley D. E., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P389, DOI 10.1145/142750.142869
   RUBIN J, 1994, HDB USABILITY TESTIN, P240
   Rubinstein R., 1984, The human factor designing computer systems for people
   Schneiderman Ben., 1998, Designing the User Interface, VThird
   Shneiderman B., 1986, DESIGNING USER INTER
   SOKEN N, 1993, METHODS EVALUATING U
   TIDWELL J, 2002, J TIDWELLS PATTERN C
   TIDWELL J, 1998, PLOP 98
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   *US GROUP U BRIGHT, 2002, BRIGHT US PATT COLL
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   van Welie M, 1999, HUMAN-COMPUTER INTERACTION - INTERACT '99, P613
   van Welie M., 2000, P 7 PATT LANG PROGR, P1
   VORA PR, 1995, ADV HUM FACT ERGON, V20, P375, DOI 10.1016/S0921-2647(06)80245-5
   WELIE, 2002, AMSTERDAM COLLECTION
   Wharton C., 1994, USABILITY INSPECTION
   Wixon D., 1997, HDB HUMAN COMPUTER I, P653
   Wixon D., 1994, Usability inspection methods, P77
   ZHANG Z, 1998, P US PROF ASS C WASH, P281
   Zhang Z., 2001, OVERVIEW USABILITY E
   Zhang ZJ, 1998, HUM FAC ERG SOC P, P1346
NR 76
TC 139
Z9 158
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2004
VL 70
IS 1-2
BP 61
EP 78
DI 10.1016/S0164-1212(02)00159-0
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766MN
UT WOS:000188380300005
DA 2024-07-18
ER

PT J
AU Johanson, B
   Fox, A
AF Johanson, B
   Fox, A
TI Extending tuplespaces for coordination in interactive workspaces
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Workshop on Application Models and Programming Tools for Ubiquitous
   Computing
CY SEP 30, 2001
CL ATLANTA, GA
ID LINDA
AB The current interest in programming models and software infrastructures to support ubiquitous and environmental computing is heightened by the falling cost of hardware and the ubiquity of local-area wireless networking technologies. Interactive workspaces are technologically augmented team-project rooms that represent a specific sub-domain of ubiquitous computing. We argue both from related work and from our own experience with a prototype that the tuplespace model of communication forms the best basis for a coordination infrastructure for such workspaces. This paper presents the usage and characteristics expected of interactive workspaces, from which we derive a set of key system properties for any coordination infrastructure in an interactive workspace. We show that the design aspects of tuplespaces, augmented with some new extensions, yield a system model, which we call the Event Heap, that satisfies all of the desired properties. We also briefly discuss why other coordination models fall short of the desired properties, and describe our experience using our implementation of the Event Heap model. The paper focuses on a justification of the use of tuplespaces in interactive workspaces, and does not provide a detailed discussion of the Event Heap implementation or our more general experience with interactive workspaces, each of which is treated in detail elsewhere. (C) 2003 Elsevier Inc. All rights reserved.
C1 Stanford Univ, Stanford, CA 94305 USA.
C3 Stanford University
RP Stanford Univ, Gates 3B-376,353 Serra Mall, Stanford, CA 94305 USA.
EM bjohanso@graphics.stanford.edu; fox@cs.stanford.edu
CR ABOWD G, 1998, CHI 98 HUMAN FACTORS
   Adjie-Winoto W, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P186, DOI 10.1145/319344.319164
   AHUJA S, 1986, COMPUTER, V19, P26, DOI 10.1109/MC.1986.1663305
   ANDERSON JR, 2000, LEARNING MEMORY INTE, V18, P487
   BANAVAR G, 1999, DISC 99
   Brumitt B, 2000, HANDHELD UBIQUITOUS
   CARZANIGA A, 2000, 19 ANN ACM SIGACT SI
   CERQUEIRA R, 2001, UB WORKSH UB 2001 AT
   COEN MH, 1999, MANSE99
   COVI LM, 1998, COOPERATIVE BUILDING
   Davies N., 1998, Mobile Networks and Applications, V3, P143, DOI 10.1023/A:1019116530113
   DELARA E, 2001, 3 USENIX S INT TECHN
   Edwards W. K., 2001, UBICOMP 2001
   ESLER M, 1999, 5 ANN JOINT ACM IEEE
   EUGSTER P, 2001, MSRTR2001104 MICR RE
   Fox A, 2000, IEEE COMPUT GRAPH, V20, P54, DOI 10.1109/38.844373
   GELERNTER D, 1991, COMMUN ACM, V35, P97
   GELERNTER D, 1985, 1985 INT C PAR PROC
   *GIG TECHN LTD, 2002, GIG PLATF WHIT PAP, P14
   Guimbretiere F., 2001, Proceedings of the 14th annual ACM symposium of User interface software and technology, P21
   HASHA R, 1999, IEEE INTELLIGENT MAR, P14
   Humphreys G, 2001, COMP GRAPH, P129, DOI 10.1145/383259.383272
   *IBM, 2002, MQSER MESS OR MIDDL
   JOHANSEN R, 1991, LEADING BUSINESS TEA, V24, P216
   Johanson B., 2002, IEEE Pervasive Computing, V1, P67, DOI 10.1109/MPRV.2002.1012339
   JOHANSON B, 2002, 4 IEEE WORKSH MOB CO
   JOHANSON B, 2001, UBICOMP 2001
   JOHANSON B, 2002, ACM S US INT SOFTW T
   Kindberg T., 2002, IEEE Pervasive Computing, V1, P70, DOI 10.1109/MPRV.2002.993146
   LELER W, 1990, COMPUTER, V23, P43, DOI 10.1109/2.44903
   Liston K., 2000, 8 INT C COMP CIV BUI
   Mark G., 2002, COMMUNICATIONS ACM, V45
   MARK G, 2002, UNPUB HUMAN COMPUTER
   Miller RB., 1968, AFIPS FALL JOINT COM
   MUNSON M, 1998, THESIS CAMBRIDGE U C
   MURPHY AL, 2001, CF 21 INT C DISTR CO
   Oki B., 1993, Operating Systems Review, V27, P58, DOI 10.1145/173668.168624
   PICCO GP, 1999, 21 INT C SOFTW ENG I
   PICCO GP, 2000, INT C SOFTW ENG ACM
   PONNEKANTI SR, 2001, UBICOMP 2001
   ROWSTRON A, 1996, COORDINATION 96
   SPREITZER M, 1999, IEEE 8 INT WORKSH EN
   STREITZ NA, 1999, ACM C HUM FACT COMP
   *SUN MICR, 2000, JAV SERV SPEC
   TANDLER P, 2001, UBITOOLS 01 WORKSH U
   TANDLER P, 2001, UBICOMP 2001
   Waldo J, 1999, COMMUN ACM, V42, P76, DOI 10.1145/306549.306582
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Wyckoff P, 1998, IBM SYST J, V37, P454, DOI 10.1147/sj.373.0454
   Zhonghua Yang, 1996, Operating Systems Review, V30, P4, DOI 10.1145/232302.232303
NR 50
TC 32
Z9 37
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN 15
PY 2004
VL 69
IS 3
BP 243
EP 266
DI 10.1016/S0164-1212(03)00054-2
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 758BQ
UT WOS:000187613000004
DA 2024-07-18
ER

PT J
AU Reussner, RH
   Schmidt, HW
   Poernomo, IH
AF Reussner, RH
   Schmidt, HW
   Poernomo, IH
TI Reliability prediction for component-based software architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE reliability; availability; component-based software; software
   architecture
ID MODEL
AB One of the motivations for specifying software architectures explicitly is the use of high level structural design information for improved control and prediction of software system quality attributes. In this paper, we present an approach for determining the reliability of component-based software architectures.
   Our method is based on rich architecture definition language (RADL) oriented towards modem industrial middleware platforms, such as Microsoft's. NET and Sun's EJB. Our methods involve parameterised contractual specifications based on state machines and thus permits efficient static analysis.
   We show how RADL allows software architects to predict component reliability through compositional analysis of usage profiles and of environment component reliability. We illustrate our approach with an e-commerce example and report about empirical measurements which confirm our analytical reliability prediction through monitoring in our reliability test-bed. Our evaluation confirms that prediction accuracy for software components necessitates modelling the behaviour of binary components and the dependency of provided services on required components. Fortunately, our measurements also show that an abstract protocol, view of that behaviour is sufficient to predict reliability with high accuracy. The reliability of a component most strongly depends on its environment. Therefore, we advocate a reliability model parameterized by required component reliability in a deployment context. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Monash Univ, Sch Comp Sci & Software Engn, Caulfield, Vic 3800, Australia.
   Distributed Syst Technol Ctr, Melbourne, Vic, Australia.
C3 Monash University
RP Monash Univ, Sch Comp Sci & Software Engn, 900 Dandenong Rd,3145, Caulfield, Vic 3800, Australia.
EM reussner@dstc.monash.edu.au; heinz.schmidt@monash.edu.au;
   imanp@dstc.monash.edu.au
OI Schmidt, Heinrich (Heinz) Wilhelm/0000-0001-6278-4793; Reussner,
   Ralf/0000-0002-9308-6290
CR [Anonymous], P 6 INT WORKSH COMP
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   DEALFARO L, 2001, P JOINT 8 EUR SOFTW, V26, P109
   DEROEVER WP, 1998, INT S COMPOS 97 BAD
   DYER M, 1992, SERIES SOFTWARE ENG
   FREUDIG J, 1998, THESIS U KARLSRUHE T
   FROLUND S, 1998, HPL98159 HEWL PACK S
   Hamlet D, 2001, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.2001.919109
   HAN J, 2000, P 2 WORKSH OBJ INT E
   HUNZELMANN G, 2001, THESIS U KARLSRUHE T
   John D.Musa., 1987, Software Reliability: Measurement, Prediction, Application
   Kramer BJ, 1998, INFORMATION SYSTEMS, P111
   Laprie J.C., 1996, M R LYU EDITOR, P27
   MAGEE J, 1995, P 5 EUR SOFTW ENG C, V989, P137
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MILLS HD, 1987, IEEE SOFTWARE, V4, P19, DOI 10.1109/MS.1987.231413
   REUSSNER RH, 2001, 34 HAW INT C SYST SC
   REUSSNER RH, 1999, C OBJ OR PROGR SYST
   REUSSNER RH, 2001, PARAMETRISIERTE VERT
   Schmidt H., 2001, J INTEGR DES PROCESS, V5, P25
   SCHMIDT H.-W., 1998, INFORM SYSTEMS INTER, P143
   SCHMIDT HW, 2002, P 5 IFIP INT C FORM
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Trammell C., 1995, Proceedings. Second IEEE International Software Engineering Standards Symposium (ISESS'95) Experience and Practice (Cat. No.95TB8092), P208, DOI 10.1109/SESS.1995.525966
   WANG WL, 1999, P 1999 PAC RIM INT S
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   WYDAEGHE B, THESIS VRIJE U BRUSS
NR 27
TC 148
Z9 166
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN 15
PY 2003
VL 66
IS 3
BP 241
EP 252
DI 10.1016/S0164-1212(02)00080-8
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 690UL
UT WOS:000183568400006
DA 2024-07-18
ER

PT J
AU Rong, YY
   Zhang, CB
   Liu, JZ
   Chen, H
AF Rong, Yuyang
   Zhang, Chibin
   Liu, Jianzhong
   Chen, Hao
TI Valkyrie: Improving fuzzing performance through deterministic techniques
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Fuzzing; Dynamic analysis; Vulnerability detection
AB Greybox fuzzing has received much attention from developers and researchers due to its success in discovering bugs within many programs. However, randomized algorithms have limited fuzzers' effectiveness. First, branch coverage feedback that is based on random edge ID can lead to branch collision. Besides, state-of-the-art fuzzers heavily rely on randomized methods to reach new coverage. Finally, some state-of-the-art fuzzers only employ heuristics-based bug exploitation methods, which are not effective in triggering those that require non-trivial triggering conditions.We believe deterministic techniques deliver consistent and reproducible results. We propose Valkyrie, a greybox fuzzer whose performance is boosted primarily by deterministic techniques. Valkyrie combines collision-free branch coverage with context sensitivity to maintain accuracy while introducing an instrumen-tation removal algorithm to reduce overhead. It also pioneers a new mutation method, compensated step, allowing fuzzers that use solvers to adapt to real-world fuzzing scenarios without randomness. Additionally, Valkyrie proactively identifies possible exploit points in target programs and utilizes solvers to trigger actual bugs. We implement and evaluate Valkyrie's effectiveness on the standard benchmark Magma, and a wide variety of real-world programs. Valkyrie triggered 21 unique integer and memory errors, 10.5% and 50% more than AFL++ and Angora, respectively. Valkyrie reached 8.2% and 12.4% more branches in real-world programs, compared with AFL++ and Angora, respectively. We also verify that our branch counting and mutation method is better than the state-of-the-art, which shows that deterministic techniques trump random techniques in consistency, reproducibility, and performance.
C1 [Rong, Yuyang; Chen, Hao] Univ Calif Davis, Davis, CA 95616 USA.
   [Zhang, Chibin; Liu, Jianzhong] ShanghaiTech Univ, Shanghai, Peoples R China.
C3 University of California System; University of California Davis;
   ShanghaiTech University
RP Rong, YY (corresponding author), Univ Calif Davis, Davis, CA 95616 USA.
EM PtrRong@ucdavis.edu; zhangchb1@shanghaitech.edu.cn;
   liujzh@shanghaitech.edu.cn; chen@ucdavis.edu
OI Rong, Yuyang/0000-0003-0648-0255
FU National Science Foundation, United States [1801751, 1956364]
FX This material is based upon work supported by the National Science
   Foundation, United States under Grant No. 1801751 and 1956364.
CR [Anonymous], 2018, afl-cov,
   [Anonymous], 2023, DATAFLOWSANITIZER
   [Anonymous], 2023, LLVM Undefined Behavior Sanitizer,
   [Anonymous], 2014, American fuzzy lop,
   [Anonymous], 2022, gllvm: Whole Program LLVM in Go,
   Aschermann C, 2020, P IEEE S SECUR PRIV, P1597, DOI 10.1109/SP40000.2020.00117
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Chen JY, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23159
   Chen P, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P499, DOI 10.1145/3319535.3363225
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chen YH, 2020, P IEEE S SECUR PRIV, P1580, DOI 10.1109/SP40000.2020.00002
   Deng YL, 2023, Arxiv, DOI arXiv:2212.14834
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Fioraldi Andrea, 2020, 14 USENIX WORKSHOP O
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Hazimeh A, 2020, P ACM MEAS ANAL COMP, V4, DOI [10.1145/3428334, 10.1145/3410220.3456276]
   Hu J, 2023, Arxiv, DOI arXiv:2306.06782
   Jeong DR, 2019, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP.2019.00017
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Li YW, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2777
   Liu Baozheng, 2020, 29 USENIX SECURITY S
   Liu X, 2019, AAAI CONF ARTIF INTE, P1044
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Metzman J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1393, DOI 10.1145/3468264.3473932
   Rong YY, 2020, L N INST COMP SCI SO, V335, P360, DOI 10.1007/978-3-030-63086-7_20
   She DD, 2019, Arxiv, DOI arXiv:1807.05620
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Wang DW, 2023, PROCEEDINGS OF THE 32ND USENIX SECURITY SYMPOSIUM, P1919
   Wang JH, 2020, IEEE T CYBERNETICS, V50, P2971, DOI 10.1109/TCYB.2019.2891265
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang XQ, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1151
   Wang Z., 2020, arXiv
   Xia CS, 2024, Arxiv, DOI arXiv:2308.04748
   Xu M, 2020, P IEEE S SECUR PRIV, P1643, DOI 10.1109/SP40000.2020.00078
   Xu W, 2019, P IEEE S SECUR PRIV, P818, DOI 10.1109/SP.2019.00035
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zeller Andreas, 2019, RESULTS ARE ALL MATT
   Zhao JY, 2023, Arxiv, DOI arXiv:2305.13592
NR 42
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2024
VL 209
AR 111886
DI 10.1016/j.jss.2023.111886
EA DEC 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK6J4
UT WOS:001138856300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Giamattei, L
   Guerriero, A
   Pietrantuono, R
   Russo, S
AF Giamattei, Luca
   Guerriero, Antonio
   Pietrantuono, Roberto
   Russo, Stefano
TI Automated functional and robustness testing of microservice
   architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservices testing; Functional testing; Robustness testing; Causal
   inference
AB Microservice Architectures (MSA) are nowadays largely adopted by companies in several domains to provide on-demand services. The reliability of microservices is fundamental to avoid failures compromising the business functionalities. MSA automated testing is possible thanks to well-defined service interfaces specified in open formats like OpenAPI/Swagger.To support automated MSA functional and non-functional testing, we define a framework that: (i) generates test cases with valid and invalid inputs, and executes and monitors tests; (ii) provides coverage and failure information not only on edge, but also on internal microservices; (iii) has the novel feature of identifying causal relations in observed chains of microservices failures.We abstract the testing process of MSA, present the MACROHIVE framework and its causal inference engine, compare it experimentally to state-of-the-art tools, and discuss its benefits in the MSA testing process.MACROHIVE exhibits performance comparable to advanced existing tools in terms of edge-level coverage. However, MACROHIVE has a better failure rate and provides the unique advantages of giving insights about internal coverage and failures, and of inferring causality in failure chains, evidencing microservices to be improved to increase the whole MSA reliability.
C1 [Giamattei, Luca; Guerriero, Antonio; Pietrantuono, Roberto; Russo, Stefano] Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Giamattei, L (corresponding author), Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
EM luca.giamattei@unina.it
RI ; Russo, Stefano/H-7723-2013
OI Guerriero, Antonio/0000-0002-8104-3832; GIAMATTEI,
   LUCA/0000-0003-3767-4036; Pietrantuono, Roberto/0000-0003-2449-1724;
   Russo, Stefano/0000-0002-8747-3446
FU European Union [871342]
FX This project has received funding from the European Union's Hori-zon
   2020 research and innovation programme under the Marie Sk &
   lstrok;odowska-Curie grant agreement No 871342 "uDEVOPS".
CR Arcuri A, 2021, IEEE SOFTWARE, V38, P72, DOI 10.1109/MS.2020.3013820
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Bertolino A, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2298
   Burns B, 2016, 8 USENIX WORKSH HOT
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Corradini D, 2021, PROC IEEE INT CONF S, P594, DOI 10.1109/ICSME52107.2021.00063
   Corradini D, 2021, IEEE INT WORK C SO, P226, DOI 10.1109/SCAM52516.2021.00035
   Corradini D, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1808
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   de Camargo A., 2016, P 18 INT C INF INT W, P422, DOI [10.1145/3011141.3011179, DOI 10.1145/3011141.3011179]
   Ebert-Uphoff Imme, 2018, 8 INT WORKSH CLIM IN
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Ghani I, 2019, INT J INTEGR ENG, V11, P65, DOI 10.30880/ijie.2019.11.08.008
   Giamattei L, 2022, IEEE INT C S Q R S, P640, DOI 10.1109/QRS57517.2022.00070
   Glymour C, 2019, FRONT GENET, V10, DOI 10.3389/fgene.2019.00524
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Hou XF, 2019, PROC INT CONF PARAL, DOI 10.1145/3337821.3337857
   Hu LH, 2020, EMPIR SOFTW ENG, V25, P2661, DOI 10.1007/s10664-019-09799-2
   Jagadeesan Lalita J., 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P19, DOI 10.1109/ISSREW51248.2020.00031
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Ji SZ, 2020, IEEE WORLD CONGR SER, P77, DOI 10.1109/SERVICES48979.2020.00030
   Joseph CT, 2020, J SYST ARCHITECT, V111, DOI 10.1016/j.sysarc.2020.101785
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Laranjeiro N, 2021, IEEE ACCESS, V9, P24738, DOI 10.1109/ACCESS.2021.3056505
   Lei Q, 2019, 2019 IEEE 4TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P511, DOI [10.1109/icccbda.2019.8725658, 10.1109/ICCCBDA.2019.8725658]
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Li WB, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P122, DOI 10.1109/SOSE.2019.00026
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   Long ZY, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P151, DOI 10.1109/ICWS49710.2020.00027
   Ma SP, 2018, P INT COMP SOFTW APP, P81, DOI 10.1109/COMPSAC.2018.10207
   Martin-Lopez A, 2020, LECT NOTES COMPUT SC, V12571, P459, DOI 10.1007/978-3-030-65310-1_33
   Martin-Lopez A, 2019, PROCEEDINGS OF THE 10TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '19), P15, DOI 10.1145/3340433.3342822
   Mathur M., 2020, Ph.D. thesis
   Nogueira AR, 2022, WIRES DATA MIN KNOWL, V12, DOI 10.1002/widm.1449
   Patel Akshit Raj, 2022, IC3-2022: Proceedings of the 2022 Fourteenth International Conference on Contemporary Computing, P689, DOI 10.1145/3549206.3549321
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pietrantuono R, 2018, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE.2018.00014
   portswigger, 2021, Portswigger: Burp suite
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Rahman J, 2019, INT CONF CLOUD ENG, P200, DOI 10.1109/IC2E.2019.00034
   Sharma A, 2019, DoWhy: A Python package for causal inference
   Spirtes P., 1993, Causation, prediction, and search, DOI DOI 10.1007/978-1-4612-2748-9
   Viglianisi E, 2020, IEEE INT CONF SOFTW, P142, DOI 10.1109/ICST46399.2020.00024
   Walker Andrew, 2021, Information Science and Applications. Proceedings of ICISA 2020. Lecture Notes in Electrical Engineering (LNEE 739), P223, DOI 10.1007/978-981-33-6385-4_21
   Wang T, 2020, IEEE T NETW SERV MAN, V17, P2350, DOI 10.1109/TNSM.2020.3022028
   Waseem M, 2020, ASIA PAC SOFWR ENG, P119, DOI 10.1109/APSEC51365.2020.00020
   Wu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2021), P21, DOI 10.1109/ACSOS52086.2021.00029
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhou X, 2018, IEEE INT CONF AUTOM, P802, DOI 10.1145/3238147.3240730
   Zhou X, 2018, PROC IEEE ACM INT C, P323, DOI 10.1145/3183440.3194991
NR 55
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2024
VL 207
AR 111857
DI 10.1016/j.jss.2023.111857
EA OCT 2023
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EE7P9
UT WOS:001137312400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cerny, T
   Abdelfattah, AS
   Al Maruf, A
   Janes, A
   Taibi, D
AF Cerny, Tomas
   Abdelfattah, Amr S.
   Al Maruf, Abdullah
   Janes, Andrea
   Taibi, Davide
TI Catalog and detection techniques of microservice anti-patterns and bad
   smells: A tertiary study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservices; Anti-patterns; Antipatterns; Anti patterns; Bad smells;
   Software maintenance
ID CODE-1ST WEB SERVICES; SOFTWARE; CLOUD
AB Background: Various works investigated microservice anti-patterns and bad smells in the past few years. We identified seven secondary publications that summarize these, but they have little overlap in purpose and often use different terms to describe the identified anti-patterns and smells. Objective: This work catalogs recurring bad design practices known as anti-patterns and bad smells for microservice architectures, and provides a classification into categories as well as methods for detecting these practices. Method: We conducted a systematic literature review in the form of a tertiary study targeting secondary studies identifying poor design practices for microservices. Results: We provide a comprehensive catalog of 58 disjoint anti-patterns, grouped into five categories, which we derived from 203 originally identified anti-patterns for microservices. Conclusion: The results provide a reference to microservice developers to design better-quality systems and researchers who aim to detect system quality based on anti-patterns. It also serves as an anti-pattern catalog for development-aiding tools, which are not currently available for microservice system development but could mitigate quality degradation throughout system evolution. (c) 2023 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Cerny, Tomas] Univ Arizona, SIE, Tucson, AZ 85721 USA.
   [Abdelfattah, Amr S.; Al Maruf, Abdullah] Baylor Univ, Waco, TX USA.
   [Janes, Andrea] FHV Vorarlberg Univ Appl Sci, Dornbirn, Austria.
   [Taibi, Davide] Tampere Univ, Tampere, Finland.
   [Taibi, Davide] Univ Oulu, Oulu, Finland.
C3 University of Arizona; Baylor University; Tampere University; University
   of Oulu
RP Taibi, D (corresponding author), Univ Oulu, Oulu, Finland.
EM tcerny@arizona.edu; amr_elsayed1@baylor.edu; maruf_maruf1@baylor.edu;
   andrea.janes@fhv.at; davide.taibi@oulu.fi
RI Janes, Andrea/IVV-0008-2023; Taibi, Davide/E-4935-2015; Elsayed,
   Amr/HKP-2263-2023
OI Janes, Andrea/0000-0002-1423-6773; Taibi, Davide/0000-0002-3210-3990;
   Elsayed, Amr/0000-0001-7702-0059
FU National Science Foundation, United States [1854049, 2245287]; Red Hat
   Research; Ulla Tuominen Foundation (Finland); Academy of Finland
   [349488-MuFAno]
FX This material is based upon work supported by the National Science
   Foundation, United States under Grant No. 1854049 and Grant No. 2245287,
   a grant from Red Hat Research https://research. redhat.com , a grant
   from the Ulla Tuominen Foundation (Finland) , and a grant from the
   Academy of Finland (grant n. 349488-MuFAno) .
CR Abasi F., 2019, Securing modern APIand microservices-based apps by design
   Abdelfattah AS, 2023, Arxiv, DOI arXiv:2303.02268
   Al Maruf A, 2022, IEEE INT SYMP SERV O, P29, DOI 10.1109/SOSE55356.2022.00010
   Alagarasan V., 2015, Seven microservices anti-patterns
   García-Mireles GA, 2020, ADV INTELL SYST, V1071, P116, DOI 10.1007/978-3-030-33547-2_10
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2007, Centre for Reviews and Dissemination, What are the criteria for the inclusion of reviews on DARE?
   [Anonymous], 2019, Shift to microservices: Evolve your security practices & container security
   [Anonymous], 2019, Microservices security: Best practices to secure microservicess
   [Anonymous], 2019, Improving security in your microservices architecture
   [Anonymous], 2020, Microservice Architecture Growing in Popularity, Adopters Enjoying Success
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Behrens Scott, 2016, Starting the avalanche: Application ddos in microservice architectures
   Bhojwani R., 2018, Design Patterns for Microserviceto-Microservice Communication-Dzone Microservices
   Boersma Eric, 2019, Top 10 security traps to avoid when migrating from a monolith to microservices
   Bogner J., 2020, JOINT POSTPR 1 2 INT
   Bogner J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09999-9
   Bogner J, 2019, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME.2019.00089
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P95, DOI 10.1109/ICSA-C.2019.00025
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Boner J., 2016, Reactive Microservices Architecture Design Principles for Distributed Systems
   Brogi Antonio, 2019, INT C SERV OR COMP, P17
   Brown W., 1998, ITPro collection
   Bucchiarone Antonio, 2020, Microservices: Science and Engineering
   Budko Renata, 2018, Five things you need to know about API security
   Burgess Kaitlynn, 2022, RACS '22: Proceedings of the Conference on Research in Adaptive and Convergent Systems, P83, DOI 10.1145/3538641.3561493
   Bushong V, 2022, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P149, DOI 10.5220/0011032100003200
   Carnell J., 2021, Spring Microservices in Action, V2nd
   Carnell J., 2017, Spring Microservices in Action
   Carrasco Andres, P 2 INT WORKSH REF, P1
   Cerny T, 2022, IEEE INT SYMP SERV O, P49, DOI 10.1109/SOSE55356.2022.00012
   Cerny T, 2022, IEEE INT SYMP SERV O, P39, DOI 10.1109/SOSE55356.2022.00011
   Chandramouli R., 2019, Security Strategies for Microservicesbased Application Systems
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Coscia Jose, 2012, SADIO Electron. J. Inform. Oper. Res, V11
   Costal D., 2021, C IB SOFTW ENG
   da Silva Rodrigo Candido, 2017, Best practices to protect your microservices architecture
   Dall R, 2016, Performance patterns in microservices-based integrations
   Das D, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.376
   de Andrade H.S., 2014, Proceedings of the WICSA 2014, P12
   de Andrade Hugo Sica, 2014, WICSA COMPANION, V12, P1
   de Oliveira Rosa T., 2020, P EUR C PATT LANG PR, DOI [10.1145/3424771.3424809, DOI 10.1145/3424771.3424809]
   de Toledo SS, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110968
   de Toledo SS, 2020, LECT NOTES BUS INF P, V396, P195, DOI 10.1007/978-3-030-58858-8_20
   de Toledo SS, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P78, DOI 10.1109/TechDebt.2019.00026
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Di Guo, 2021, 2021 International Conference on Intelligent Computing, Automation and Systems (ICICAS), P255, DOI 10.1109/ICICAS53977.2021.00059
   Dias W.K.A.N., 2020, Microservices Security in Action
   Ding Xiang, 2022, ICSCA 2022: 2022 11th International Conference on Software and Computer Applications., P8, DOI 10.1145/3524304.3524306
   Doerfeld Bill, 2015, How to control user identity within microservices
   Douglas M., 2018, Microservices Authentication & Authorization Best Practice
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Dudney B., 2003, J2EE_AntiPatterns
   Esposito C, 2016, IEEE CLOUD COMPUT, V3, P10, DOI 10.1109/MCC.2016.105
   FAO IFAD UNICEF., 2017, The state of food security and nutrition in the world 2017. Building resilience for peace and food security
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Gardner Z, 2017, Security in the microservices paradigm
   Gebel Gerry, 2018, Securing APIs and microservices with oauth, openid connect, and ABAC
   Gehani Neil, 2018, TechBeacon
   Golden B., 2018, Tech Beacon
   Golden B., 2017, TechBeacon
   Gupta Natasha, 2018, Security strategies for devops, apis, containers and microservices
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hofmann Michael, 2017, Microservices Best Practices for Java
   Tran HKV, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106620
   Ibrahim A, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1235, DOI 10.1145/3297280.3297401
   Indrasiri K., 2018, Microservices for the Enterprise: Designing, Developing, and Deploying, DOI [10.1007/978-1-4842-3858-5, DOI 10.1007/978-1-4842-3858-5]
   Indrasiri K, 2017, Microservices in practice: from architecture to deployment
   Indrasiri Kasun, 2018, Microservices for the Enterprise, P313, DOI DOI 10.1007/978-1-4842-3858-5_11
   Jackson N., 2017, Building Microservices with Go
   Jain Chintan, 2018, About us
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jones Steve., 2006, SOA Anti-patterns
   Junior HJ, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106964
   Kalske M, 2018, LECT NOTES COMPUT SC, V10544, P32, DOI 10.1007/978-3-319-74433-9_3
   Kamaruzzaman M., 2020, Microservice architecture and its 10 most important design patterns
   Kanjilal J., 2020, 4 Fundamental Microservices Security Best Practices
   Karfakis P, 2018, Institutions, economic freedom and structural transformation in 11 sub-Saharan African countries, P1, DOI DOI 10.1145/3242163.3242164
   Kendall J, 1999, WESTERN J NURS RES, V21, P743, DOI 10.1177/01939459922044162
   Khan Arif, 2018, How to secure your microservices: Shopify case study
   Kitchenham B., 2007, Guidel. Perform. Syst. Lit. Rev. Softw. Eng
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   Král J, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P271, DOI 10.1109/ComputationWorld.2009.80
   Kral Jaroslav., 2007, ICSEA 07, P29
   Krause L., 2015, Microservices: Patterns and Applications: Designing Fine-Grained Services by Applying Patterns
   Krishnamurthy T., 2018, Transition to microservice architecture-challenges
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lea G., 2015, Microservices security: all the questions you should be asking
   Lelovic L, 2023, CLOSER, P220, DOI 10.5220/0011850200003488
   Lemos Robert, 2019, App security in the microservices age: 4 best practices
   Lewis J., 2014, ThoughtWorks
   Lewis James, 2014, Microservices
   Long J., 2015, The power, patterns, and pains of microservices
   Mannino Jack, 2017, Security in the land of microservices
   Marinescu R, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/WCRE.2004.31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Mateus-Coelho Nuno, 2020, CENTRIS C, P1
   Matteson S., 2017, How to establish strong microservices security using SSL, TLS, and API gateways
   Matteson S., 2017, 10 Tips for securing microservice architecture
   McLarty Matt, 2018, Securing Microservices APIs
   Melendez C., 2018, 7 container design patterns you need to know
   Mody Virag, 2020, From zero to zero trust
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mumtaz H, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110885
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Nayrolles M, 2013, WORK CONF REVERSE EN, P321, DOI 10.1109/WCRE.2013.6671307
   Nehme A, 2019, LECT NOTES COMPUT SC, V11358, P285, DOI 10.1007/978-3-030-18419-3_19
   Nehme A, 2019, IT PROF, V21, P42, DOI 10.1109/MITP.2018.2876987
   Neri D, 2020, SICS SOFTWARE, V35, P3, DOI 10.1007/s00450-019-00407-8
   Newman S., 2016, POSTANARCHISM
   Newman S., 2015, BUILDING MICROSERVIC
   Nkomo P, 2019, LECT NOTES COMPUT SC, V11623, P573, DOI 10.1007/978-3-030-24308-1_46
   Nygard Michael, 2018, Release It, V1, P1
   Oizumi WN., 2015, J. Softw. Eng. Res. Dev, V3, P11, DOI [10.1186/s40411-015-0025-y, DOI 10.1186/S40411-015-0025-Y]
   ONeill Leon, 2020, Microservice security-what you need to know
   Coscia JLO, 2014, SCI COMPUT PROGRAM, V89, P374, DOI 10.1016/j.scico.2014.03.015
   Coscia JLO, 2013, INT J WEB GRID SERV, V9, P107, DOI 10.1504/IJWGS.2013.054108
   Osses F, 2018, PROC IEEE ACM INT C, P256, DOI 10.1145/3183440.3194958
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Pacheco Vinicius Feitosa, 2018, Microservice Patterns and Best Practices: Explore Patterns like CQRS and Event Sourcing to Create Scalable, Maintainable, and Testable Microservices
   Palma F, 2019, IEEE T SOFTWARE ENG, V45, P1024, DOI 10.1109/TSE.2018.2819180
   Palma F, 2015, 2015 IEEE 2ND INTERNATIONAL WORKSHOP ON PATTERNS PROMOTION AND ANTI-PATTERNS PREVENTION (PPAP), P5, DOI 10.1109/PPAP.2015.7076848
   Palma F, 2014, IEEE INT CONF SERV, P1, DOI 10.1109/SOCA.2014.43
   Palma F, 2014, LECT NOTES COMPUT SC, V8627, P58, DOI 10.1007/978-3-319-09970-5_6
   Palma F, 2013, INT J COOP INF SYST, V22, DOI 10.1142/S0218843013410049
   Parecki A, 2019, Oauth: When things go wrong
   Perera Srinath, 2016, Walking the wire: Mastering the four decisions in microservices architecture
   Pigazzini I, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P92, DOI 10.1145/3387906.3388625
   Ponce F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111393
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rademacher Florian, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P311, DOI 10.1007/978-3-030-49418-6_21
   Raible M., 2020, Security Patterns for Microservice Architectures
   Rajasekharaiah Chandra, 2020, Cloud-Based Microservices: Techniques, Challenges, and Solutions
   Refactoring.Guru,, 2023, Shotgun surgery
   Richards Mark, 2016, Microservices AntiPatterns and Pitfalls, P66
   Richardson C., 2014, InfoQ, V25, P15
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Rotem-Gal-Oz A., 2012, SOA patterns
   Ruecker B., 2019, InfoWorld
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Sahni V, 2020, Best practices for building a microservice architecture
   Saleh T, 2016, Microservices antipatterns
   Savchenko DI, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P235, DOI 10.1109/MIPRO.2015.7160271
   Schiewe M, 2022, IEEE ACCESS, V10, P30743, DOI 10.1109/ACCESS.2022.3160485
   Schipper Daan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P545, DOI 10.1109/MSR.2019.00081
   Schirgi Thomas, 2021, Architectural quality attributes for the microservices of care
   Sharma Sourabh, 2016, Mastering Microservices with Java
   Siriwardena P, 2019, Microservices security landscape
   Siriwardena Prabath, 2020, Challenges of securing microservices
   Smith Tom, 2019, How to secure APIs
   Smith Tom, 2017, How do you secure microservices?
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   solo.io,, 2022, 2022 Service Mesh Adoption Survey
   Stocker M., 2018, 23 EUR C PATT LANG P
   Strauss A., 1990, BASICS QUALITATIVE R
   Svacina J, 2022, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P27, DOI 10.5220/0011032200003200
   Taibi D, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P111, DOI 10.1007/978-3-030-31646-4_5
   Taibi D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P221, DOI 10.5220/0006798302210232
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tighilt R, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111755
   Tighilt Rafik, 2020, P EUR C PATT LANG PR, P1
   Troisi M., 2017, 8 best practices for microservices app sec
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Vidal S, 2016, P BRAZ SYMP SOFTW, P41, DOI 10.1109/SBCARS.2016.11
   Walker A, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217800
   Wikipedia contributors,, 2023, Shotgun surgery-Wikipedia, the free encyclopedia
   Wimmer Christian, 2021, VMIL 2021: Proceedings of the 13th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages, DOI 10.1145/3486606.3488075
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yarygina T, 2018, IEEE INT SYMP SERV O, P11, DOI 10.1109/SOSE.2018.00011
   Zhao X., 2014, 11 USENIX S OP SYST, P629
   Ziade Tarek, 2017, Python Microservices Development: Build, Test, Deploy, and Scale Microservices in Python
   Zimmermann O., 2020, EUR C PATT LANG PROG
   Zimmermann O., 2020, EUROPLOP 20
   Zimmermann O., 2020, JOINT POSTPR 1 2 INT
   Zimmermann O., 2022, Microservice API patterns
   Zimmermann O., 2019, INT C MICR MICR 2019
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 195
TC 2
Z9 2
U1 2
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2023
VL 206
AR 111829
DI 10.1016/j.jss.2023.111829
EA SEP 2023
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U1FL4
UT WOS:001082330300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, ZY
   Chen, JJ
   Chen, YH
   Luo, CY
   Zhao, YW
   Sun, YQ
   Sui, KX
   Wang, XP
   Liu, DP
   Jin, X
   Wang, Q
   Pei, D
AF Li, Zeyan
   Chen, Junjie
   Chen, Yihao
   Luo, Chengyang
   Zhao, Yiwei
   Sun, Yongqian
   Sui, Kaixin
   Wang, Xiping
   Liu, Dapeng
   Jin, Xing
   Wang, Qi
   Pei, Dan
TI Generic and robust root cause localization for multi-dimensional data in
   online service systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Root cause localization; Online service system; Ripple effect;
   Multi-dimensional data
AB Localizing root causes for multi-dimensional data is critical to ensure online service systems' reli-ability. When a fault occurs, only the measure values within specific attribute combinations (e.g., Province = Beijing) are abnormal. Such attribute combinations are substantial clues to the underlying root causes and thus are called root causes of multi-dimensional data. This paper proposes a generic and robust root cause localization approach for multi-dimensional data, PSqueeze. We propose a generic property of root cause for multi-dimensional data, generalized ripple effect (GRE). Based on it, we propose a novel probabilistic cluster method and a robust heuristic search method. Moreover, we identify the importance of determining external root causes and propose an effective method for the first time in literature. Our experiments on two real-world datasets with 5400 faults show that the F1-score of PSqueeze outperforms baselines by 32.89%, while the localization time is around 10 s across all cases. The F1-score in determining external root causes of PSqueeze achieves 0.90. Furthermore, case studies in several production systems demonstrate that PSqueeze is helpful to fault diagnosis in the real world.(c) 2023 Elsevier Inc. All rights reserved.
C1 [Li, Zeyan; Chen, Yihao; Luo, Chengyang; Zhao, Yiwei; Wang, Xiping; Pei, Dan] Tsinghua Univ, Beijing, Peoples R China.
   [Chen, Junjie] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Sun, Yongqian] Nankai Univ, Coll Software, Tianjin, Peoples R China.
   [Sui, Kaixin; Liu, Dapeng] Bizseer, Beijing, Peoples R China.
   [Jin, Xing; Wang, Qi] China Construction Bank, Beijing, Peoples R China.
   [Li, Zeyan; Pei, Dan] Beijing Natl Res Ctr Informat Sci & Technol BNRist, Beijing, Peoples R China.
C3 Tsinghua University; Tianjin University; Nankai University
RP Chen, JJ (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM zy-li18@mails.tsinghua.edu.cn; junjiechen@tju.edu.cn;
   chenyiha17@mails.tsinghua.edu.cn; luocy16@mails.tsinghua.edu.cn;
   zhaoyw17@mails.tsinghua.edu.cn; sunyongqian@nankai.edu.cn;
   suikaixin@bizseer.com; wxp17@mails.tsinghua.edu.cn;
   liudapeng@bizseer.com; jinxing.zh@ccb.com; wangqi10.zh@ccb.com;
   peidan@tsinghua.edu.cn
RI Chen, Junjie/ABE-8685-2020; Wang, Qi/AAJ-2703-2020; Chen,
   Yihao/T-1411-2019; Li, Zeyan/IQU-8504-2023
OI Chen, Junjie/0000-0003-4509-2271; Wang, Qi/0000-0001-9780-5443; Li,
   Zeyan/0000-0002-3529-5879; Zhao, Yiwei/0000-0002-2586-8311
FU National Key R and D Program of China [2019YFB1802504]; State Key
   Program of National Natural Science of China [62072264]
FX The authors gratefully thank Suning.com Co., Ltd. for providing parts of
   the data used in this paper's evaluation. We thank Juexing Liao and
   Chuanxi Zheng for proofreading this paper. This work is supported by the
   National Key R and D Program of China 2019YFB1802504, and the State Key
   Program of National Natural Science of China under Grant 62072264.
CR Ahmed F, 2017, IEEE ACM T NETWORK, V25, P3709, DOI 10.1109/TNET.2017.2761758
   [Anonymous], 2022, CHAOS MESH CHAOS MES
   [Anonymous], 2018, AM PRIM DAY ISS EST
   [Anonymous], ?About us"
   Bhagwan R., 2014, NSDI, P43
   Castelluccio M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P717, DOI 10.1145/3106237.3106306
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chen YY, 2013, ACM SIGCOMM COMP COM, V43, P243, DOI 10.1145/2534169.2486035
   Chen YF, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2022), P373, DOI 10.1109/ICWS55610.2022.00062
   Cohen J., 1988, STAT POWER ANAL BEHA
   Ding R, 2019, INT CONF MANAGE DATA, P317, DOI 10.1145/3299869.3314037
   Gu JZ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P292, DOI 10.1145/3368089.3409741
   Guo XF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1387, DOI 10.1145/3368089.3417066
   Han J, 2012, MOR KAUF D, P1
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   JORDAN C., 1965, Calculus of Finite Differences
   Lee SB, 2012, IEEE INFOCOM SER, P1350, DOI 10.1109/INFCOM.2012.6195498
   Li Z., 2022, P 2022 30 ACM JOINT
   Li Z., 2018, P IEEE 37 INT PERF C, P1
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Li ZY, 2019, PROC INT SYMP SOFTW, P47, DOI 10.1109/ISSRE.2019.00015
   Lin F, 2020, P ACM MEAS ANAL COMP, V4, DOI 10.1145/3392149
   Lin QW, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P547, DOI 10.1145/3219819.3219867
   Lin QW, 2016, PROC INT CONF SOFTW, P214, DOI 10.1145/2884781.2884795
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu DP, 2016, IEEE INFOCOM SER
   Liu DP, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P211, DOI 10.1145/2815675.2815679
   Liu DW, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P338, DOI 10.1109/ICSE-SEIP52600.2021.00043
   Liu P., 2020, 2020 IEEE 31 INT S S, DOI [10.1109/ISSRE5003, DOI 10.1109/ISSRE5003]
   Ma MH, 2018, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2018.00013
   Murphy N R., 2016, Site Reliability Engineering: How Google Runs Production Systems, V1st
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Persson M., 2018, THESIS CHALMERS U TE
   Pool J., 2020, P 26 ACM SIGKDD C KN, DOI 10
   Rong GP, 2020, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE5003.2020.00039
   Satopaa V., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P166, DOI 10.1109/ICDCSW.2011.20
   Schubert E, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3068335
   Sun YQ, 2018, IEEE ACCESS, V6, P10909, DOI 10.1109/ACCESS.2018.2804764
   Tang B, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1509, DOI 10.1145/3035918.3035922
   Wang H., 2020, 2020 35 IEEE ACM INT
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Xu HW, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P187, DOI 10.1145/3178876.3185996
   Yu GB, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3087, DOI 10.1145/3442381.3449905
   Zhang SL, 2018, IEEE T SERV COMPUT, V11, P34, DOI 10.1109/TSC.2016.2539945
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 48
TC 0
Z9 0
U1 2
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2023
VL 203
AR 111748
DI 10.1016/j.jss.2023.111748
EA MAY 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I1XZ5
UT WOS:001000796800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mayr-Dorn, C
   Vierhauser, M
   Bichler, S
   Keplinger, F
   Cleland-Huang, J
   Egyed, A
   Mehofer, T
AF Mayr-Dorn, Christoph
   Vierhauser, Michael
   Bichler, Stefan
   Keplinger, Felix
   Cleland-Huang, Jane
   Egyed, Alexander
   Mehofer, Thomas
TI ProCon: An automated process-centric quality constraints checking
   framework
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering process; Traceability; Developer support; Quality
   assurance; Process deviation; Constraint checking
ID SOFTWARE; TRACEABILITY; ENVIRONMENTS
AB When dealing with safety-critical systems, various regulations, standards, and guidelines stipulate stringent requirements for certification and traceability of artifacts, but typically lack details with regards to the corresponding software engineering process. Given the industrial practice of only using semi-formal notations for describing engineering processes - with the lack of proper tool mapping - engineers and developers need to invest a significant amount of time and effort to ensure that all steps mandated by quality assurance are followed. The sheer size and complexity of systems and regulations make manual, timely feedback from Quality Assurance (QA) engineers infeasible. In order to address these issues, in this paper, we propose a novel framework for tracking, and "passively"executing processes in the background, automatically checking QA constraints depending on process progress, and informing the developer of unfulfilled QA constraints. We evaluate our approach by applying it to three case studies: a safety-critical open-source community system, a safety-critical system in the air-traffic control domain, and a non-safety-critical, web-based system. Results from our analysis confirm that trace links are often corrected or completed after the work step has been considered finished, and the engineer has already moved on to another step. Thus, support for timely and automated constraint checking has significant potential to reduce rework as the engineer receives continuous feedback already during their work step.(c) 2023 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Mayr-Dorn, Christoph; Vierhauser, Michael; Bichler, Stefan; Keplinger, Felix; Egyed, Alexander] Johannes Kepler Univ Linz, Linz, Austria.
   [Cleland-Huang, Jane] Univ Notre Dame, Notre Dame, IN USA.
   [Mehofer, Thomas] Frequentis AG, Vienna, Austria.
C3 Johannes Kepler University Linz; University of Notre Dame
RP Mayr-Dorn, C (corresponding author), Johannes Kepler Univ Linz, Linz, Austria.
EM christoph.mayr-dorn@jku.at; michael.vierhauser@jku.at; JaneHuang@nd.edu;
   alexander.egyed@jku.at; thomas.mehofer@frequentis.com
RI Egyed, Alexander/E-2632-2017
OI Vierhauser, Michael/0000-0003-2672-9230
FU Austrian Science Fund (FWF) [P31989, P29415-NBL, P 34805-N]; state of
   Upper Austria [LIT-2019-8-SEE-118, LIT-2019-7-INC-316]; LIT Secure and
   Correct Systems Lab; FFG [881844]; United States National Science
   Foundation [SHF:1741781, CPS:1931962]
FX This work was funded by the Austrian Science Fund (FWF) under the grant
   numbers P31989, P29415-NBL, and P 34805-N, and by the state of Upper
   Austria through LIT-2019-8-SEE-118 and LIT-2019-7-INC-316 as well as the
   LIT Secure and Correct Systems Lab. This work has been also supported by
   the FFG, Contract No. 881844: "Pro2Future". The Dronology case study was
   supported by the United States National Science Foundation under grants
   SHF:1741781 and CPS:1931962.
CR Alajrami Sami, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P309, DOI 10.1007/978-3-319-45477-1_24
   Alloui I, 1998, LECT NOTES COMPUT SC, V1487, P92
   Amalfitano D, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P5, DOI 10.1145/3084100.3084101
   Jiménez JA, 2017, COMPUT STAND INTER, V52, P41, DOI 10.1016/j.csi.2017.01.006
   [Anonymous], 2021, Code of Federal Regulations [Internet]
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   Barghouti N. S., 1992, SIGSOFT Software Engineering Notes, V17, P21, DOI 10.1145/142882.142907
   Barthelmess P, 2003, INFORM SOFTWARE TECH, V45, P911, DOI 10.1016/S0950-5849(03)00091-0
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brosgol B., 2010, DO178C ADA CORE TECH
   Cabanillas C, 2020, IEEE T SERV COMPUT, V1
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J., 2020, DRONOLOGY PUBLIC DAT
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cleland-Huang J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P109, DOI 10.1145/3183399.3183408
   Colantoni Alessandro, 2020, P 23 ACM IEEE INT C, P1
   Conradi R., 1994, SOFTWARE PROCESS MOD, P9
   Conradi R., SOFTWARE PROCESS MOD, P9
   Cugola G., 1999, Proceedings. IEEE 8th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET ICE'99), P32, DOI 10.1109/ENABL.1999.805172
   Diebold P, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1879
   Drools, 2020, US
   Dumas M., 2016, Managing Software Process Evolution: Traditional, Agile and beyond-How to Handle Process Change, P165, DOI [10.1007/978-3-319, DOI 10.1007/978-3-319]
   Egyed A, 2018, COMPUTER, V51, P28, DOI 10.1109/MC.2018.1451666
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Ellner R, 2010, LECT NOTES COMPUT SC, V6138, P116, DOI 10.1007/978-3-642-13595-8_11
   EUROCAE, 2012, 109 SOFTW INT ASS CO
   Fernstrom C., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P12, DOI 10.1109/SPCON.1993.236825
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Geppert A, 1998, INFORM SYST, V23, P235, DOI 10.1016/S0306-4379(98)00011-8
   Gruhn V, 2002, ANN SOFTW ENG, V14, P363, DOI 10.1023/A:1020522111961
   Grundy J. C., 1998, Automated Software Engineering, V5, P27, DOI 10.1023/A:1008606308460
   Hebig R., 2011, PROC INT C SOFTWARE, P33
   Jama, 2020, ABOUT US
   Jira, 2020, US
   Junkermann G., 1994, Software Process Modelling and Technology, P103
   Kedji K. A., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P120, DOI 10.1109/ICSSP.2012.6225954
   Klare H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P156, DOI 10.1145/3270112.3275335
   Knuplesch D, 2017, INFORM SYST, V64, P381, DOI 10.1016/j.is.2016.10.006
   König H, 2016, LECT NOTES COMPUT SC, V9764, P19, DOI 10.1007/978-3-319-42061-5_2
   Kramer DB, 2014, FOOD DRUG LAW J, V69, P1
   Krishnamurthy B., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P451
   Kumar A, 2013, INFORMS J COMPUT, V25, P543, DOI 10.1287/ijoc.1120.0520
   LaMarca A., 1999, ECSCW'99. Proceedings of the Sixth European Conference on Computer Supported Cooperative Work, P1
   Ly LT, 2015, INFORM SYST, V54, P209, DOI 10.1016/j.is.2015.02.007
   Macher G., 2017, INT C COMP SAF REL S, P273
   Maggi Fabrizio Maria, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P132, DOI 10.1007/978-3-642-23059-2_13
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8484, P457, DOI 10.1007/978-3-319-07881-6_31
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Maro S, 2016, INT REQUIR ENG CONF, P407, DOI 10.1109/RE.2016.19
   Mayr-Dorn C., 2021, IN PRESS
   Mayr-Dorn C, 2021, PROC INT CONF SOFTW, P1298, DOI 10.1109/ICSE43902.2021.00118
   Mayr-Dorn C, 2020, PROC INT CONF SOFTW, P33, DOI 10.1145/3377812.3382141
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   Montangero C., 1994, SOFTWARE PROCESS MOD, P131
   Morimoto S, 2008, LECT NOTES COMPUT SC, V5102, P514, DOI 10.1007/978-3-540-69387-1_58
   Osterweil Leon, 2011, Engineering of Software, P323
   Pohl K, 1999, ACM T SOFTW ENG METH, V8, P343, DOI 10.1145/322993.322995
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rempel P., 2016, THESIS TU ILMENAU GE
   Rempel P, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P747, DOI 10.1145/2889160.2892657
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rempel P, 2013, S VIS LANG HUM CEN C, P195, DOI 10.1109/RE.2013.6636719
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Simmonds J, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P406, DOI 10.1109/MODELS.2015.7338272
   SPEM, 2008, US
   Verein zur Weiterentwicklung des V-Modell XT, 2021, DTSCH REFERENZMODELL
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   White SA., 2004, IBM Cooperation, V2, P0
   Winkler D, 2019, COMM COM INF SC, V1060, P339, DOI 10.1007/978-3-030-28005-5_26
   Xiang Zhao, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P110, DOI 10.1109/ICSSP.2012.6225953
   Zhao X., 2013, P INT C SOFTW SYST P, P56, DOI [10.1145/2486046.2486057, DOI 10.1145/2486046.2486057]
NR 74
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2023
VL 202
AR 111727
DI 10.1016/j.jss.2023.111727
EA MAY 2023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9LX5
UT WOS:000999103000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, XZ
   Moreschini, S
   Zhang, ZY
   Palomba, F
   Taibi, D
AF Li, Xiaozhou
   Moreschini, Sergio
   Zhang, Zheying
   Palomba, Fabio
   Taibi, Davide
TI The anatomy of a vulnerability database: A systematic mapping study?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software security; Vulnerability databases; Systematic mapping studies;
   Software evolution
ID SOFTWARE; RISK
AB Software vulnerabilities play a major role, as there are multiple risks associated, including loss and manipulation of private data. The software engineering research community has been contributing to the body of knowledge by proposing several empirical studies on vulnerabilities and automated techniques to detect and remove them from source code. The reliability and generalizability of the findings heavily depend on the quality of the information mineable from publicly available datasets of vulnerabilities as well as on the availability and suitability of those databases. In this paper, we seek to understand the anatomy of the currently available vulnerability databases through a systematic mapping study where we analyze (1) what are the popular vulnerability databases adopted; (2) what are the goals for adoption; (3) what are the other sources of information adopted; (4) what are the methods and techniques; (5) which tools are proposed. An improved understanding of these aspects might not only allow researchers to take informed decisions on the databases to consider when doing research but also practitioners to establish reliable sources of information to inform their security policies and standards.& COPY; 2023 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Li, Xiaozhou; Moreschini, Sergio; Zhang, Zheying; Taibi, Davide] Tampere Univ, Tampere, Finland.
   [Palomba, Fabio] Univ Salerno, SeSa Lab, Fisciano, Italy.
   [Li, Xiaozhou; Taibi, Davide] Univ Oulu, Oulu, Finland.
C3 Tampere University; University of Salerno; University of Oulu
RP Li, XZ (corresponding author), Univ Oulu, Oulu, Finland.
EM xiaozhou.li@oulu.fi; sergio.moreschini@tuni.fi; zheying.zhang@tuni.fi;
   fpalomba@unisa.it; davide.taibi@oulu.fi
RI Li, Xiaozhou/ITT-4444-2023; Taibi, Davide/E-4935-2015
OI Li, Xiaozhou/0000-0002-3767-2527; Taibi, Davide/0000-0002-3210-3990;
   Zhang, Zheying/0000-0002-6205-4210; Moreschini,
   Sergio/0000-0002-5582-9487; Palomba, Fabio/0000-0001-9337-5116
FU Swiss National Science Foundation through the SNF [2020W3A5FY]; EMELIOT
   national research project - MUR under the PRIN;  [PZ00P2_186090]
FX Fabio Palomba gratefully acknowledges the support of the Swiss National
   Science Foundation through the SNF Projects No. PZ00P2_186090. This work
   has been partially supported by the EMELIOT national research project,
   funded by the MUR under the PRIN 2020 program (Contract 2020W3A5FY) .
CR Aksu MU, 2018, PROCEEDINGS OF THE EIGHTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'18), P135, DOI 10.1145/3176258.3176339
   Allodi Luca., 2012, P 2012 ACM WORKSHOP, P17
   Alqahtani SS, 2022, COMPUT SECUR, V116, DOI 10.1016/j.cose.2022.102661
   Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   Alves H, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P37, DOI 10.1109/EDCC.2016.34
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Antal G, 2020, IEEE WORK CONF MIN S, P16, DOI 10.1145/3379597.3387513
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Challande A, 2022, CODASPY'22: PROCEEDINGS OF THE TWELVETH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P101, DOI 10.1145/3508398.3511495
   Chen QY, 2018, ASIA PAC SOFWR ENG, P345, DOI 10.1109/APSEC.2018.00049
   Chen Y, 2020, IEEE WORK CONF MIN S, P32, DOI 10.1145/3379597.3387461
   Chen ZQ, 2010, COMPUT J, V53, P551, DOI 10.1093/comjnl/bxp040
   Cohen J., 1988, STAT POWER ANAL BEHA
   Common vulnerabilities and exposures (CVE), 2022, about us
   Croft R., 2022, IEEE T SOFTWARE ENG, P1
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Duc A.N., 2017, P XP2017 SCI WORKSH, P1
   Eberendu Adanma Cecilia, 2022, Eur. J. Comput. Sci. Inf. Technol., V10, P23
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Edwards Nigel, 2012, P 2012 ACM C COMP CO, P183, DOI DOI 10.1145/2382196.2382218
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fedorchenko A., 2015, J WIREL MOB NETW UBI, V6, P41
   Fedorchenko AV, 2017, PROCEEDINGS OF 2017 XX IEEE INTERNATIONAL CONFERENCE ON SOFT COMPUTING AND MEASUREMENTS (SCM), P525, DOI 10.1109/SCM.2017.7970638
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Forain I, 2022, IBER CONF INF SYST, DOI 10.23919/CISTI54924.2022.9820232
   Frei Stefan, 2006, P 2006 SIGCOMM WORKS, P131, DOI 10.1145/1162666.1162671
   Gallmann L., 2011, 2011 Conference on Lasers & Electro-Optics Europe & 12th European Quantum Electronics Conference (CLEO EUROPE/EQEC), DOI 10.1109/CLEOE.2011.5943052
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Glanz L., 2015, P 15 INT C KNOWL TEC, P1
   Gonzalez D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P31, DOI 10.1109/ICSA.2019.00012
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Gu Yun-hua, 2010, Proceedings of the Third International Conference on Information and Computing Science (ICIC 2010), P209, DOI 10.1109/ICIC.2010.147
   Guo H, 2021, P INT COMP SOFTW APP, P1020, DOI 10.1109/COMPSAC51774.2021.00138
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hong H, 2022, IEEE ACCESS, V10, P85050, DOI 10.1109/ACCESS.2022.3197786
   Howard MA, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.84
   Huang MY, 2020, PROCEEDINGS OF 2020 IEEE 4TH INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC 2020), P758, DOI [10.1109/ITNEC48623.2020.9084733, 10.1109/itnec48623.2020.9084733]
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Iannone E, 2023, IEEE T SOFTWARE ENG, V49, P44, DOI 10.1109/TSE.2022.3140868
   Jiang Y., 2019, INT C CRITICAL INFOR, P71
   Jiang Y, 2021, 16 INT C AVAILABILIT, P1
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jimenez M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P222, DOI 10.1109/QRS.2016.34
   Kim G, 2013, INT J COMPUT SCI NET, V13, P19
   Kim S, 2018, COMPUT SECUR, V77, P720, DOI 10.1016/j.cose.2018.02.007
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B.A, 2022, IEEE T SOFTWARE ENG
   Kühn P, 2021, ARES 2021: 16TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, DOI 10.1145/3465481.3465744
   Kuo C.T., 2013, ADV INTELLIGENT SYST, V2, P177
   Li XZ, 2022, IEEE SOFTWARE, V39, P48, DOI 10.1109/MS.2022.3163011
   Li XZ, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111255
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li Z, 2019, IEEE ACCESS, V7, P103184, DOI 10.1109/ACCESS.2019.2930578
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin Y, 2022, 52ND ANNUAL IEEE/IFIP INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS WORKSHOP VOLUME (DSN-W 2022), P141, DOI 10.1109/DSN-W54100.2022.00032
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Liu QX, 2011, COMPUT COMMUN, V34, P264, DOI 10.1016/j.comcom.2010.04.006
   Liu YK, 2018, PROCEEDINGS OF THE FIRST WORKSHOP ON RADICAL AND EXPERIENTIAL SECURITY (RESEC'18), P1, DOI 10.1145/3203422.3203429
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Massacci F., 2010, P 6 INT WORKSHOP SEC, P1, DOI [10.1145/1853919.1853925, DOI 10.1145/1853919.1853925]
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McKinnel DR, 2019, COMPUT ELECTR ENG, V75, P175, DOI 10.1016/j.compeleceng.2019.02.022
   Ming J, 2016, IEEE INT CONF AUTOM, P308, DOI 10.1145/2970276.2970299
   Morrison P, 2015, HOTSOS 15
   Murtaza SS, 2016, J SYST SOFTWARE, V117, P218, DOI 10.1016/j.jss.2016.02.048
   National vulnerability database (NVD), 2022, About us
   Nerwich M., 2020, INT C APPL TECHNIQUE, P95
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Nikitopoulos G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1565, DOI 10.1145/3468264.3473122
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Rahman MU, 2016, 2016 INTERNATIONAL CONFERENCE ON RESEARCH ADVANCES IN INTEGRATED NAVIGATION SYSTEMS (RAINS)
   Reis S, 2017, SECSE ESORICS, V1977, P69
   Roschke S, 2009, LECT NOTES COMPUT SC, V5735, P218, DOI 10.1007/978-3-642-04474-8_18
   S onmez F.O., 2021, Machine Intelligence and Big Data Analytics for Cybersecurity Applications, P313
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Svacina Jan, 2020, RACS '20: Proceedings of the International Conference on Research in Adaptive and Convergent Systems, P175, DOI 10.1145/3400286.3418261
   Takahashi Takeshi, 2016, 2016 14th Annual Conference on Privacy, Security and Trust (PST), P417, DOI 10.1109/PST.2016.7906965
   Tan TT, 2019, CMC-COMPUT MATER CON, V61, P1129, DOI 10.32604/cmc.2019.06051
   Tao Wen, 2015, Journal of Communications, V10, P107, DOI 10.12720/jcm.10.2.107-116
   Tripathi A., 2011, Proceedings of the 2011 6th International Conference on Computer Sciences and Convergence Information Technology (ICCIT 2011), P686
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vache G, 2009, INT SYMP EMP SOFTWAR, P527
   Vanamala M., 2020, 2020 INT C ART INT B, P1
   Nguyen VH, 2012, 7TH ACM SYMPOSIUM ON INFORMATION, COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS 2012)
   Wang J.A., 2009, P 5 ANN WORKSHOP CYB
   Wang XM, 2018, 2018 10TH INTERNATIONAL CONFERENCE ON ADVANCED INFOCOMM TECHNOLOGY (ICAIT), P184, DOI 10.1109/ICAIT.2018.8686548
   Wang XD, 2021, I C DEPEND SYS NETWO, P149, DOI 10.1109/DSN48987.2021.00030
   Williams MA, 2018, IEEE INT CONF BIG DA, P3011, DOI 10.1109/BigData.2018.8622299
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wu B, 2011, PROCEEDINGS OF THE 49TH ANNUAL ASSOCIATION FOR COMPUTING MACHINERY SOUTHEAST CONFERENCE (ACMSE '11), P115
   Wu XX, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110456
   Yap R.H, 2004, LARGE INSTALLATION S
   Yosifova V., 2021, 2021 12 NAT C INT PA, P1
   Yuan L, 2021, P INT COMP SOFTW APP, P834, DOI 10.1109/COMPSAC51774.2021.00116
   Yung-Yu Chang, 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P1290, DOI 10.1109/PASSAT/SocialCom.2011.184
   Zhang S, 2015, INF SECUR J, V24, P194, DOI 10.1080/19393555.2015.1111961
   Zhao XH, 2015, 2015 INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING (IIH-MSP), P327, DOI 10.1109/IIH-MSP.2015.84
   Zheng C., 2011, 2011 2 WORLDWIDE CYB, P1
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 114
TC 1
Z9 2
U1 3
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2023
VL 201
AR 111679
DI 10.1016/j.jss.2023.111679
EA MAR 2023
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9ZB3
UT WOS:001054180800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Abbad-Andaloussi, A
AF Abbad-Andaloussi, Amine
TI On the relationship between source-code metrics and cognitive load: A
   systematic tertiary review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Source-code metrics; Software quality; Source-code readability;
   Cognitive load
ID OBJECT-ORIENTED METRICS; SOFTWARE; QUALITY; PREDICTION; SUITE; PROGRESS;
   FUTURE
AB The difficulty of software development tasks depends on several factors including the characteristics of the underlying source-code. These characteristics can be captured and measured using source -code metrics, which, in turn, can provide indications about the difficulty of the source-code. From a cognitive perspective, this difficulty is due to an increase in developers' cognitive load, which can be estimated using psycho-physiological measures. Based on these measures, a handful of studies investigated the relationship between source-code metrics and cognitive load. For most of the metrics, such a relationship could not be established. While these studies used a small subset of metrics, the literature comprises hundreds of other metrics. Despite the existing reviews surveying these metrics, a consolidated overview is still needed to understand their properties and leverage their potential to align with cognitive load. This need is addressed in this paper through a Systematic Tertiary Review (STR) covering the full spectrum of source-code metrics, studying their properties and investigating their potential relationship to cognitive load. The outcome of this STR is intended to guide practitioners in choosing appropriate metrics, set the grounds for conceptualizing the relationship between source-code metrics and cognitive load and raise new research challenges for the future. (c) 2023 The Author. Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Abbad-Andaloussi, Amine] Univ St Gallen, Inst Comp Sci, CH-9000 St Gallen, Switzerland.
C3 University of St Gallen
RP Abbad-Andaloussi, A (corresponding author), Univ St Gallen, Inst Comp Sci, CH-9000 St Gallen, Switzerland.
EM amine.abbad-andaloussi@unisg.ch
OI Abbad-Andaloussi, Amine/0000-0002-3404-7849
FU International Postdoctoral Fellowship (IPF), Switzerland from the
   University of St. Gallen, Switzerland [1031574]
FX Work supported by the International Postdoctoral Fellowship (IPF) ,
   Switzerland Grant (Number: 1031574) from the University of St. Gallen,
   Switzerland. Acknowledgment and special thanks to Prof. Dr. Barbara
   Weber and Prof. Dr. Ekkart Kindler for their feedback and suggestions
   during the development of this STR.
CR Andaloussi AA, 2021, SOFTW SYST MODEL, V20, P1437, DOI 10.1007/s10270-020-00811-8
   Abbad-Andaloussi A, 2022, INT C PROGRAM COMPRE, P111, DOI 10.1145/3524610.3527890
   Abdellatief M, 2013, J SYST SOFTWARE, V86, P587, DOI 10.1016/j.jss.2012.10.001
   Abreu F.B., 1994, Proceedings of the 4th international conference on software quality, V186, P1, DOI DOI 10.5281/ZENODO.1217609
   AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alqadi B., 2020, THESIS KENT STATE U
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2012, J BRAZ COMPUT SOC
   [Anonymous], 1958, Theory and Methods of Scaling
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Antinyan V, 2020, IEEE SOFTWARE, V37, P86, DOI 10.1109/MS.2020.2976072
   Ardito L, 2020, SCI PROGRAMMING-NETH, V2020, DOI 10.1155/2020/8840389
   Arvanitou EM, 2017, J SYST SOFTWARE, V127, P52, DOI 10.1016/j.jss.2017.01.026
   BADDELEY A, 1992, Science (Washington D C), V255, P556, DOI 10.1016/j.cub.2009.12.014
   Bandi A, 2013, WORK CONF REVERSE EN, P341, DOI 10.1109/WCRE.2013.6671309
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bexell A., 2020, SOFTWARE SOURCE CODE
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Borchert T., 2008, CODE PROFILING STATI
   Boxall MAS, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P40, DOI 10.1109/ASWEC.2004.1290456
   Briand L.C., 1998, IND CASE STUDY
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Burrows R, 2009, EVAL NOV APPROACHES, P277
   Burrows R., 2010, Proceedings of the 2010 ICSE Workshop on Emerging Trends in Software Metrics, P53
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Catal C, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P199, DOI 10.1109/ITNG.2009.12
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chen F, 2016, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-3-319-31700-7
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Colakoglu F.N., 2021, SOFTWARE PRODUCT QUA
   Couceiro R, 2019, PROC INT SYMP SOFTW, P93, DOI 10.1109/ISSRE.2019.00019
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Debois S, 2020, LECT NOTES COMPUT SC, V12546, P368, DOI 10.1007/978-3-030-63461-2_20
   Dias Canedo E., 2019, ANAL MEASUREMENT MET
   Dooley J.F., 2017, SOFTWARE DEV DESIGN
   Dorn J., 2012, GEN SOFTWARE READABI, V5, P11
   dos Reis JP, 2022, ARCH COMPUT METHOD E, V29, P47, DOI 10.1007/s11831-021-09566-x
   Dumke R., 2007, MEASUREMENTS PROJECT
   Fakhoury S, 2020, EMPIR SOFTW ENG, V25, P2140, DOI 10.1007/s10664-019-09751-4
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fregnan E, 2019, INFORM SOFTWARE TECH, V107, P159, DOI 10.1016/j.infsof.2018.11.008
   Gall CS, 2008, IET SOFTW, V2, P17, DOI 10.1049/iet-sen:20070109
   Gezici B, 2019, EUROMICRO CONF PROC, P363, DOI 10.1109/SEAA.2019.00062
   Glinz M., 2014, SOFTWARE QUALITY SOF
   Gómez O, 2008, COMM COM INF SC, V10, P165
   Gonales L., 2021, INFORM SOFTWARE TECH
   Gonçales L, 2019, INT C PROGRAM COMPRE, P42, DOI 10.1109/ICPC.2019.00018
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hansen M, 2013, Arxiv, DOI arXiv:1304.5257
   Hutton D., 2009, CLEAN CODE HDB AGILE
   Isong B, 2013, INT J SOFTW ENG KNOW, V23, P1513, DOI 10.1142/S0218194013500484
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Kaur A, 2020, ARCH COMPUT METHOD E, V27, P1267, DOI 10.1007/s11831-019-09348-6
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Khan YA, 2012, LECT NOTES COMPUT SC, V7336, P258, DOI 10.1007/978-3-642-31128-4_19
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lloyd J.W., 1994, Joint Conference on Declarative Programming, GULP-PRODE, V94, P94
   Malhotra Ruchika, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359253
   Malhotra R, 2016, INT J SOFTW ENG KNOW, V26, P1221, DOI 10.1142/S0218194016500431
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCall J.A., 1980, SOFTWARE QUALITY MEA, V2
   McKiernan KA, 2003, J COGNITIVE NEUROSCI, V15, P394, DOI 10.1162/089892903321593117
   Medeiros J, 2019, IEEE ENG MED BIO, P1413, DOI [10.1109/EMBC.2019.8856283, 10.1109/embc.2019.8856283]
   Medeiros J, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21072338
   Mehboob B, 2021, SOFTWARE PRACT EXPER, V51, P1416, DOI 10.1002/spe.2961
   Mendling J., 2007, THESIS WIRTSCHAFTSUN
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Mijac M, 2015, CEN EUR CON INFO INT, P221
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Misra S, 2018, IEEE ACCESS, V6, P8782, DOI 10.1109/ACCESS.2018.2791344
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Murillo-Morera J., 2015, CIBSE 2015 18 IBERO, P446
   Narasimhan VL, 2007, INFORM SCIENCES, V177, P844, DOI 10.1016/j.ins.2006.07.010
   Nguyen Vu., 2007, Cocomo ii forum, P1
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Olszak Andrzej, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P48
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   Park R.E., 1996, GOAL DRIVEN SOFTWARE
   Peitek N, 2021, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE43902.2021.00056
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Piotrowski P., 2020, DATA CENTRIC BUSINES, V4, P77, DOI 10.1007/978-3-030-34706-2_5
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rattan D, 2016, INTERNATIONAL CONFERENCE ON ADVANCES IN INFORMATION COMMUNICATION TECHNOLOGY & COMPUTING, 2016, DOI 10.1145/2979779.2979855
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Riedl R., 2016, Fundamentals of NeuroIS, DOI [10.1007/978-3-662-450 91-8, DOI 10.1007/978-3-662-45091-8, 10.1007/978-3-662-45091-8]
   Riedl R, 2020, DATA BASE ADV INF SY, V51, P13
   Rotaru OctavianPaul., 2005, 3 ACSIEEE INT C COMP, P24
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Sagar K., 2017, International Journal of Information Technology, P1, DOI DOI 10.1007/S41870-017-0048-1
   Salman N., 2006, CANKAYA U J ARTS SCI, V1, P39
   Santriaji M.H., 2016, Microarchitecture (MICRO), 2016 49th Annual IEEE/ACM International Symposium on, P1
   Saraiva Juliana, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P253, DOI 10.1049/ic.2012.0033
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Schryen G, 2010, BUS INFORM SYST ENG+, V2, P233, DOI 10.1007/s12599-010-0111-y
   Seref B., 2016, INT J SOFTW ENG KNOW
   Service RW, 2009, ORGAN RES METHODS, V12, P614, DOI 10.1177/1094428108324514
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69, DOI 10.1109/CJECE.2003.1532511
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Sima V, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12104035
   Snyder H, 2019, J BUS RES, V104, P333, DOI 10.1016/j.jbusres.2019.07.039
   Sternberg Robert J., 2016, Cognitive psychology, V7th ed.
   Sweller J, 2011, PSYCHOL LEARN MOTIV, V55, P37
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tahir A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P326, DOI 10.1109/ICSM.2012.6405289
   Tiwari S, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172878
   Tomas P, 2013, COMPUT STAND INTER, V36, P244, DOI 10.1016/j.csi.2013.08.006
   Tripathi A., 2015, CSI Transactions on ICT, V2, P217, DOI DOI 10.1007/S40012-015-0061-0
   Valença K, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1852, DOI 10.1109/Cybermatics_2018.2018.00308
   Vanitha N., 2014, REPORT ANAL METRICS
   Veltman J, 2005, The role of operator state assessment in adaptive automation
   Wang D, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111009
   Weber B, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110946
   Webster J, 2002, MIS QUART, V26, pXIII
   Wedyan F, 2020, IET SOFTW, V14, P1, DOI 10.1049/iet-sen.2018.5446
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WINOGRAD T, 1975, REPRESENTATIONS UNDE
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Hernandez-Gonzalez EY, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P80, DOI 10.1109/CONISOFT.2019.00021
   Yan M, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9608-3
   Zaidi MA, 2019, LECT NOTES COMPUT SC, V11622, P418, DOI 10.1007/978-3-030-24305-0_31
   Zheng R. Z., 2017, Cognitive Load Measurement and Application: A Theoretical Framework for Meaningful Research and Practice
   Zimmermann L, 2022, LECT NOTES BUS INF P, V450, P3, DOI 10.1007/978-3-031-07475-2_1
NR 141
TC 1
Z9 1
U1 1
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2023
VL 198
AR 111619
DI 10.1016/j.jss.2023.111619
EA JAN 2023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8P7SB
UT WOS:000926719000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Galindo, JA
   Heradio, R
   Fernandez-Amoros, D
   Benavides, D
AF Horcas, Jose-Miguel
   Galindo, Jose A.
   Heradio, Ruben
   Fernandez-Amoros, David
   Benavides, David
TI A Monte Carlo tree search conceptual framework for feature model
   analyses
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automated analysis; Configurable systems; Feature models; Monte Carlo
   tree search; Software product lines; Variability
ID SOFTWARE PRODUCT LINES; FEATURE-SELECTION; OPTIMIZATION; SYSTEMS
AB Challenging domains of the future such as Smart Cities, Cloud Computing, or Industry 4.0 expose highly variable systems with colossal configuration spaces. The automated analysis of those systems' variability has often relied on SAT solving and constraint programming. However, many of the analyses have to deal with the uncertainty introduced by the fact that undertaking an exhaustive exploration of the whole configuration space is usually intractable. In addition, not all analyses need to deal with the configuration space of the feature models, but with different search spaces where analyses are performed over the structure of the feature models, the constraints, or the implementation artifacts, instead of configurations. This paper proposes a conceptual framework that tackles various of those analyses using Monte Carlo tree search methods, which have proven to succeed in vast search spaces (e.g., game theory, scheduling tasks, security, program synthesis, etc.). Our general framework is formally described, and its flexibility to cope with a diversity of analysis problems is discussed. We provide a Python implementation of the framework that shows the feasibility of our proposal, identifying up to 11 lessons learned, and open challenges about the usage of the Monte Carlo methods in the software product line context. With this contribution, we envision that different problems can be addressed using Monte Carlo simulations and that our framework can be used to advance the state-of-the-art one step forward.(c) 2022 Elsevier Inc. All rights reserved.
C1 [Horcas, Jose-Miguel; Galindo, Jose A.; Benavides, David] Univ Seville, Seville, Spain.
   [Heradio, Ruben; Fernandez-Amoros, David] Natl Distance Educ Univ UNED, Madrid, Spain.
C3 University of Sevilla; Universidad Nacional de Educacion a Distancia
   (UNED)
RP Horcas, JM (corresponding author), Univ Seville, Seville, Spain.
EM jhorcas@us.es; jagalindo@us.es; rheradio@issi.uned.es;
   david@issi.uned.es; benavides@us.es
RI Horcas Aguilera, José Miguel/R-3564-2018; Heradio, Ruben/D-3675-2013
OI Horcas Aguilera, José Miguel/0000-0002-7771-0575; Heradio,
   Ruben/0000-0002-7131-0482
FU EU FEDER; MINECO [RTI2018-101204-B-C22]; Junta de Andalucia COPERNICA,
   Spain [P20_01224]; META- MORFOSIS [FEDER_US-1381375]; Universidad
   Nacional de Educacion a Distancia, Spain [096-034091 2021V/PUNED/008];
   Community of Madrid, Spain [CAM ROBOCITY2030-DIH-CM S2018/NMT-4331];
   Spanish Government
FX This work has been partially funded by the EU FEDER pro- gram, the
   MINECO project OPHELIA (RTI2018-101204-B-C22) , the Junta de Andalucia
   COPERNICA, Spain (P20_01224) and META- MORFOSIS (FEDER_US-1381375)
   projects, the Universidad Na- cional de Educacion a Distancia, Spain
   under grant 096-034091 2021V/PUNED/008 (OPTIVAC) , the Community of
   Madrid, Spain, under the research network CAM ROBOCITY2030-DIH-CM
   S2018/NMT-4331, and the Spanish Government under Juan de la Cierva-
   Formacion 2019 grant. We would like to thank Jose A. Troyano for having
   inspired us in the usage of Monte Carlo methods in software product line
   analyses, and to A. German Marquez, David Romero, and Pablo Pazo for
   technical support.
CR Acher M, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P36, DOI 10.1145/3461002.3473070
   Aguilera J.M.H., 2021, CEUR WORKSHOP PROC, V2945, P37
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P1763, DOI 10.1007/s10664-016-9462-4
   Baba Satomi, 2011, 22 INT JOINT C ART I, P655, DOI [10.5591/978-1-57735-516-8/IJCAI11-116, DOI 10.5591/978-1-57735-516-8/IJCAI11-116]
   Bachmeyer RC, 2007, LECT NOTES ARTIF INT, V4604, P179
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D.S., 2021, LOGIC COMPUTATION RI, P63, DOI [10.1007/978-3-030-76020-5_4, DOI 10.1007/978-3-030-76020-5_4]
   Benavides David, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P365, DOI 10.1007/978-3-030-30985-5_21
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bhushan M, 2021, EXPERT SYST APPL, V168, DOI 10.1016/j.eswa.2020.114167
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Budde Carlos E., 2020, Measurement, Modelling and Evaluation of Computing Systems. 20th International GI/ITG Conference, MMB 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12040), P259, DOI 10.1007/978-3-030-43024-5_16
   Cantor M, 2011, COMMUN ACM, V54, P121, DOI 10.1145/1995376.1995404
   Chaslot G., 2008, P 4 ART INT INT DIG, P216
   Chaslot GMJB, 2008, LECT NOTES COMPUT SC, V5131, P60, DOI 10.1007/978-3-540-87608-3_6
   Chaslot GMJB, 2008, NEW MATH NAT COMPUT, V4, P343, DOI 10.1142/S1793005708001094
   Chaudhry MU, 2018, ENTROPY-SWITZ, V20, DOI 10.3390/e20050385
   Childs BE, 2008, 2008 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND GAMES, P389, DOI 10.1109/CIG.2008.5035667
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Fan SF, 2006, LECT NOTES ARTIF INT, V4252, P1144
   Felfernig A, 2018, J INTELL INF SYST, V51, P161, DOI 10.1007/s10844-017-0492-1
   Fernandez-Amoros D, 2017, FRONT ARTIF INTEL AP, V297, P454, DOI 10.3233/978-1-61499-800-6-454
   Fernandez-Amoros D, 2014, IEEE T SOFTWARE ENG, V40, P895, DOI 10.1109/TSE.2014.2331073
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischer S, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI [10.1145/2897010.2897011, 10.1109/SBST.2016.011]
   Galindo Jose A., 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P52, DOI 10.1145/3382026.3425773
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Galindo JA, 2016, SOFTWARE QUAL J, V24, P365, DOI 10.1007/s11219-014-9258-y
   Ganesan D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P74, DOI 10.1109/SPLINE.2007.21
   Gazzillo P, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P269, DOI 10.1145/3233027.3236404
   Gelly S, 2011, ARTIF INTELL, V175, P1856, DOI 10.1016/j.artint.2011.03.007
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Guo JM, 2019, SOFTW SYST MODEL, V18, P1447, DOI 10.1007/s10270-017-0610-0
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Heradio Ruben, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414951
   Heradio R., 2022, 55 HAWAII INT C SYST, P1
   Heradio R, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10102-5
   Heradio R, 2019, PROC INT CONF SOFTW, P843, DOI 10.1109/ICSE.2019.00091
   Heradio R, 2016, FRONT ARTIF INTEL AP, V286, P139, DOI 10.3233/978-1-61499-674-3-139
   Heradio R, 2012, EXPERT SYST APPL, V39, P7919, DOI 10.1016/j.eswa.2012.01.109
   Horcas JM, 2023, IEEE T SOFTWARE ENG, V49, P1102, DOI 10.1109/TSE.2022.3171404
   Horcas JM, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471146
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kang Kyo C, 1990, Technical Report
   Karimpour R, 2017, COMPUT LANG SYST STR, V47, P189, DOI 10.1016/j.cl.2016.07.007
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   Kroese DP, 2014, WIRES COMPUT STAT, V6, P386, DOI 10.1002/wics.1314
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   Linsbauer L, 2017, SOFTW SYST MODEL, V16, P1179, DOI 10.1007/s10270-015-0512-y
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Marseguerra Marzio., 2007, Computational Intelligence in Reliability Engineering, P101, DOI DOI 10.1007/978-3-540-37368-1_4
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Munos R, 2014, FOUND TRENDS MACH LE, V7, P1, DOI 10.1561/2200000038
   Munoz D.-J., 2019, P 23 INT SYSTEMS SOF, VA, P289
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Nakhost H, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1766
   Nohrer A., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P25, DOI 10.1109/SPLC.2011.45
   Nonaka M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P63, DOI 10.1109/SPLINE.2007.35
   Oh J., 2020, TR2001 U TEX DEP COM
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Pereira J.A., 2019, arXiv
   Pereira JA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P247, DOI 10.1145/3233027.3236395
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Pereira JA, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2058, DOI 10.1145/3167132.3167353
   Pereira JA, 2017, ACM SIGPLAN NOTICES, V52, P120, DOI [10.1145/3093335.2993249, 10.1145/2993236.2993249]
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Pol'la M, 2021, SOFTW SYST MODEL, V20, P1043, DOI 10.1007/s10270-020-00839-w
   Poulding S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1359, DOI 10.1145/2739480.2754767
   Previti A, 2011, LECT NOTES ARTIF INT, V6934, P177, DOI 10.1007/978-3-642-23954-0_18
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rodas-Silva J, 2019, IEEE ACCESS, V7, P69226, DOI 10.1109/ACCESS.2019.2918469
   Rubino G, 2009, Rare Event Simulation Using Monte Carlo Methods
   Russell S., 2020, ARTIF INTELL
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Segura Sergio., 2008, 1st Workshop on Analyses of Software Product Lines (SPLC'08), P201
   She S., 2010, VaMoS, P45
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Steinmetz E, 2021, IEEE T GAMES, V13, P315, DOI 10.1109/TG.2020.3048331
   Tanabe Yasuhiro., 2009, Biometrics: Theory, Applications, and Systems, P1, DOI DOI 10.1109/BTAS.2009.5339016
   Temple P., 2016, P 20 INT SYST SOFTW, P209
   Thum Thomas, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414943
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   Vidal-Silva C., 2021, Intelligent Systems in Industrial Applications, P107, DOI [10.1007/978-3-030-67148-8_9, DOI 10.1007/978-3-030-67148-8_9]
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Wilkinson L, 2009, AM STAT, V63, P179, DOI 10.1198/tas.2009.0033
   Wong B, 2010, NAT METHODS, V7, P573, DOI 10.1038/nmeth0810-573
   Xue YX, 2016, APPL SOFT COMPUT, V49, P1215, DOI 10.1016/j.asoc.2016.07.040
   Yadav H, 2020, INT J EMBED SYST, V13, P50
NR 109
TC 3
Z9 4
U1 1
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2023
VL 195
AR 111551
DI 10.1016/j.jss.2022.111551
EA NOV 2022
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M8NE
UT WOS:000906907300008
OA Green Published
DA 2024-07-18
ER

PT J
AU Bhatt, BN
   Furia, CA
AF Bhatt, Bhargav Nagaraja
   Furia, Carlo A.
TI Automated repair of resource leaks in Android applications?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automated program repair; Static analysis; Program analysis; Android
   applications
AB Resource leaks - a program does not release resources it previously acquired - are a common kind of bug in Android applications. Even with the help of existing techniques to automatically detect leaks, writing a leak-free program remains tricky. One of the reasons is Android's event-driven programming model, which complicates the understanding of an application's overall control flow. In this paper, we present PLUMBDROID: a technique to automatically detect and fix resource leaks in Android applications. PLUMBDROID builds a succinct abstraction of an app's control flow, and uses it to find execution traces that may leak a resource. The information built during detection also enables automatically building a fix - consisting of release operations performed at appropriate locations - that removes the leak and does not otherwise affect the application's usage of the resource. An empirical evaluation on resource leaks from the DROIDLEAKS curated collection demonstrates that PLUMBDROID's approach is scalable, precise, and produces correct fixes for a variety of resource leak bugs: PLUMBDROID automatically found and repaired 50 leaks that affect 9 widely used resources of the Android system, including all those collected by DROIDLEAKS for those resources; on average, it took just 2 min to detect and repair a leak. PLUMBDROID also compares favorably to Relda2/RelFix - the only other fully automated approach to repair Android resource leaks - since it can often detect more leaks with higher precision and producing smaller fixes. These results indicate that PLUMBDROID can provide valuable support to enhance the quality of Android applications in practice. (c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Bhatt, Bhargav Nagaraja; Furia, Carlo A.] USI Univ Svizzera Italiana, Software Inst, Fac Informat, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Furia, CA (corresponding author), USI Univ Svizzera Italiana, Software Inst, Fac Informat, Lugano, Switzerland.
EM bhattb@usi.ch; furiac@usi.ch
FU SNF [200021_182060]; Swiss National Science Foundation (SNF)
   [200021_182060] Funding Source: Swiss National Science Foundation (SNF)
FX We thank the reviewers of JSS for their helpful comments and
   suggestions. This work was partially supported by the SNF grant Hi-Fi
   (#200021_182060) .
CR 2021, 2021, APKTOOL
   Alur R., 2004, P 36 ANN ACM S THEOR, P202, DOI [DOI 10.1145/1007352.1007390, 10.1145/1007352.1007390]
   Amalfitano D, 2020, IEEE ACCESS, V8, P12217, DOI 10.1109/ACCESS.2020.2966522
   [Anonymous], 2022, UI APPLICATION EXERC
   [Anonymous], 2021, LEAK CANARY TOOL
   [Anonymous], 2021, ANDROGUARD
   [Anonymous], 2022, ACTIVITY LIFECYCLE F
   [Anonymous], 2021, MEDIAPLAYER OVERVIEW
   [Anonymous], 2021, FINDBUS
   [Anonymous], 2021, ANDROID STUDIO MONIT
   [Anonymous], 2021, ANDROID REFERENCE MA
   [Anonymous], 2021, ANDROID PLATFORM ARC
   [Anonymous], 2022, ANDROID API REFERENC
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Crussell Jonathan, 2012, TRUST TRUSTWORTHY CO
   Dillig I, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P1
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Gazzola L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1219, DOI 10.1145/3180155.3182526
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Kellogg M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P181, DOI 10.1145/3468264.3468576
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Liang SY, 2015, ELECTRON NOTES THEOR, V311, P3, DOI 10.1016/j.entcs.2015.02.002
   Liu JR, 2016, PROC INT SYMP SOFTW, P342, DOI 10.1109/ISSRE.2016.15
   Liu YP, 2019, EMPIR SOFTW ENG, V24, P3435, DOI 10.1007/s10664-019-09715-8
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Logozzo F, 2013, ELECTRON P THEOR COM, P341, DOI 10.4204/EPTCS.129.21
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Luo LH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P102, DOI 10.1109/ASE.2019.00020
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Nielson F., 1999, Principles of Program Analysis
   Pan Y, 2020, IEEE ACCESS, V8, P116363, DOI 10.1109/ACCESS.2020.3002842
   Pathak Abhinav, 2011, P 10 ACM WORKSH HOT, DOI [10.1145/2070562.2070567, DOI 10.1145/2070562.2070567]
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Sipser M., 2013, Introduction to the theory of computation, V3
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Vetro' Antonio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P110, DOI 10.1109/MSR.2010.5463283
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wu HW, 2020, SOFTWARE QUAL J, V28, P335, DOI 10.1007/s11219-019-09484-z
   Wu HW, 2018, INT WORKSH AUTOMAT, P27, DOI 10.1145/3194733.3194734
   Wu HW, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P185, DOI 10.1145/2892208.2892218
   Wu TY, 2016, IEEE T SOFTWARE ENG, V42, P1054, DOI 10.1109/TSE.2016.2547385
   Yan DC, 2013, PROC INT SYMP SOFTW, P411, DOI 10.1109/ISSRE.2013.6698894
   Zhou Yajin., 2013, Proceedings of the 20th Annual Network Distributed System Security Symposium, NDSS'13, Reston, VA, USA
NR 56
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2022
VL 192
AR 111417
DI 10.1016/j.jss.2022.111417
EA JUL 2022
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3V6EE
UT WOS:000841753600002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, QJ
   Fang, CR
   Sun, WS
   Yu, SC
   Xu, YT
   Liu, YL
AF Zhang, Quanjun
   Fang, Chunrong
   Sun, Weisong
   Yu, Shengcheng
   Xu, Yutao
   Liu, Yulei
TI Test case prioritization using partial attention?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Regression testing; Test case prioritization; Greedy
   algorithm
ID MUTATION; MINIMIZATION; ALGORITHMS
AB Test case prioritization (TCP) aims to reorder the regression test suite with a goal of increasing the fault detection rate. Various TCP techniques have been proposed based on different prioritization strategies. Among them, the greedy-based techniques are the most widely-used TCP techniques. However, existing greedy-based techniques usually reorder all candidate test cases in prioritization iterations, resulting in both efficiency and effectiveness problems. In this paper, we propose a generic partial attention mechanism, which adopts the previous priority values (i.e., the number of additionally-covered code units) to avoid considering all candidate test cases. Incorporating the mechanism with the additionalgreedy strategy, we implement a novel coverage-based TCP technique based on partition ordering (OCP). OCP first groups the candidate test cases into different partitions and updates the partitions on the descending order. We conduct a comprehensive experiment on 19 versions of Java programs and 30 versions of C programs to compare the effectiveness and efficiency of OCP with six state-of-theart TCP techniques: total-greedy, additional-greedy, lexicographical-greedy, unify-greedy, art-based, and search-based. The experimental results show that OCP achieves a better fault detection rate than the state-of-the-arts. Moreover, the time costs of OCP are found to achieve 85%-99% improvement than most state-of-the-arts.
C1 [Zhang, Quanjun; Fang, Chunrong; Sun, Weisong; Yu, Shengcheng; Xu, Yutao; Liu, Yulei] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Nanjing University
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM quanjun.zhang@smail.nju.edu.cn; fangchunrong@nju.edu.cn;
   weisongsun@smail.nju.edu.cn; yusc@smail.nju.edu.cn;
   MF21320170@smail.nju.edu.cn; 1515999248@qq.com
RI Sun, Weisong/AAU-9503-2020; Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111; Zhang, Quanjun/0000-0002-2495-3805
FU National Natural Science Foundation of China [61932012, 62141215];
   Science, Technology and Innovation Commission of Shenzhen Municipality,
   China [CJGJZD20200617103001003]
FX The authors would like to thank the anonymous reviewers for insightful
   comments. This research is partially supported by the National Natural
   Science Foundation of China (No. 61932012, 62141215) and Science,
   Technology and Innovation Commission of Shenzhen Municipality, China
   (CJGJZD20200617103001003) .
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 0000 SOFTWARE ARTIFA
   [Anonymous], 0000 GCOV TEST COVER
   [Anonymous], 0000 GCC GNU COMPILE
   [Anonymous], 0000 ASM ALL PURPOSE
   [Anonymous], 0000 R R PROJECT STA
   [Anonymous], 0000 PROJECT WEBSITE
   [Anonymous], 0000 GNU FTP SERVER
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Belli F., 2006, P 2 WORKSH MUT AN, P9
   Belli F, 2016, SCI COMPUT PROGRAM, V120, P25, DOI 10.1016/j.scico.2016.01.003
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Cheng RX, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P452, DOI 10.1145/3460319.3464810
   Chi JL, 2018, P INT COMP SOFTW APP, P251, DOI 10.1109/COMPSAC.2018.00039
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Cruciani E, 2019, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2019.00055
   Di Nucci D, 2020, IEEE T SOFTWARE ENG, V46, P674, DOI 10.1109/TSE.2018.2868082
   Do H, 2005, PROC IEEE INT CONF S, P411
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Eghbali S, 2016, IEEE T SOFTWARE ENG, V42, P1178, DOI 10.1109/TSE.2016.2550441
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Elsner D, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P491, DOI 10.1145/3460319.3464834
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Huang RB, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110712
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Lam Wing, 2020, ISSTA, P298, DOI 10.1145/3395363.3397364
   Li Feng, 2021, IEEE Transactions on Software Engineering
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Lou YL, 2019, ADV COMPUT, V113, P1, DOI 10.1016/bs.adcom.2018.10.001
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mondal S, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110850
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Papadakis M., 2016, P 25 INT S SOFTW TST, P355
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Qianyang Peng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P324, DOI 10.1145/3395363.3397383
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sadri-Moshkenani Z, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1794
   Sharif A, 2021, PROC IEEE INT CONF S, P525, DOI 10.1109/ICSME52107.2021.00053
   Sun C., J SYST SOFTW, V183
   Sun XD, 2020, PROCEEDINGS OF THE 14TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '20), P735
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang L., 2012, FSE, P40
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang LM, 2013, J SOFTW-EVOL PROC, V25, P1357, DOI 10.1002/smr.1634
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2009, PROC IEEE INT CONF S, P19, DOI 10.1109/ICSM.2009.5306350
   Zhou J., 2022, ACM T SOFTW ENG METH, V31, P1
NR 83
TC 1
Z9 1
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2022
VL 192
AR 111419
DI 10.1016/j.jss.2022.111419
EA JUN 2022
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3D7PT
UT WOS:000829490300013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Al Safwan, K
   Elarnaoty, M
   Servant, F
AF Al Safwan, Khadijah
   Elarnaoty, Mohammed
   Servant, Francisco
TI Developers' need for the rationale of code commits: An in-breadth and
   in-depth study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software changes rationale; Software evolution and maintenance
ID ARCHITECTURE; MESSAGES; HISTORY
AB Communicating the rationale behind decisions is essential for the success of software engineering projects. In particular, understanding the rationale of code commits is an important and often difficult task. Although the software engineering community recognizes rationale need and importance, there is a lack of in-depth study of rationale for commits. To bridge this gap, we apply a mixed-methods approach, interviewing software developers and distributing two surveys, to study their perspective of rationale for code commits. We found that software developers need to investigate code commits to understand their rationale when working on diverse tasks. We also found that developers decompose the rationale of code commits into 15 components, each is differently needed, found, and recorded. Furthermore, we explored software developers' experiences with rationale need, finding, and recording. We discovered factors leading software developers to give up their search for rationale of code commits. Our findings provide a better understanding of the need for rationale of code commits. In light of our findings, we discuss and present our vision about rationale of code commits practitioners' documentation, tools support, and documentation automation. In addition, we discuss the benefits of analyzes that could arise from good documentation of rationale for code commits. Published by Elsevier Inc.
C1 [Al Safwan, Khadijah; Elarnaoty, Mohammed; Servant, Francisco] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
   [Servant, Francisco] Univ Rey Juan Carlos, Dept Teoria Serial & Comunicac & Sistemas Telemati, Madrid, Spain.
   [Elarnaoty, Mohammed] Cairo Univ, Fac Comp & Artificial Intelligence, Dept Comp Sci, Giza, Egypt.
C3 Virginia Polytechnic Institute & State University; Universidad Rey Juan
   Carlos; Egyptian Knowledge Bank (EKB); Cairo University
RP Al Safwan, K; Servant, F (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.; Servant, F (corresponding author), Univ Rey Juan Carlos, Dept Teoria Serial & Comunicac & Sistemas Telemati, Madrid, Spain.
EM khsaf@vt.edu; marnaoty@vt.edu; francisco.servant@urjc.es
RI Servant, Francisco/AAA-8124-2020; Al Safwan, Khadijah/IQW-0856-2023
OI Servant, Francisco/0000-0002-6493-9389; Al Safwan,
   Khadijah/0000-0003-2578-9864
FU Universidad Rey Juan Carlos under an International Distinguished
   Researcher, Spain award
FX This material is based upon work supported by Universidad Rey Juan
   Carlos under an International Distinguished Researcher, Spain award
   C01INVESDIST.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Al Safwan K, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P397, DOI 10.1145/3338906.3338979
   Alkadhi R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P357, DOI 10.1109/SANER.2018.8330223
   Alkadhi R, 2017, INT SYMP EMP SOFTWAR, P175, DOI 10.1109/ESEM.2017.26
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Barbudo R, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110919
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Berg LB., 2001, Qualitative research methods for the social sciences
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   BIERNACKI P, 1981, SOCIOL METHOD RES, V10, P141, DOI 10.1177/004912418101000205
   Bradley A.W., 2011, Proc. 8th Working Conf. Mining Software Repositories, P193, DOI DOI 10.1145/1985441.1985469
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Burge J E., 2008, Rationale-Based Software Engineering, DOI [DOI 10.1007/978-3-540-77583-6_17, 10.1007/978-3-540-77583-6, DOI 10.1007/978-3-540-77583-6]
   Burge JE, 2008, J SYST SOFTWARE, V81, P395, DOI 10.1016/j.jss.2007.05.004
   Codoban M, 2015, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2015.7332446
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Davies S, 2014, P 8 ACM IEEE INT S E, DOI [10.1145/2652524.2652541, DOI 10.1145/2652524.2652541]
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Dutoit A. H., 2006, RATIONALE MANAGEMENT, DOI [10.1007/978-3-540-30998-7, DOI 10.1007/978-3-540-30998-7]
   Dziekan G., 2008, Bulletin of the World Health Organization, V86
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Ebert F, 2018, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2018.00061
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Gautam A, 2017, IEEE WORK CONF MIN S, P495, DOI 10.1109/MSR.2017.38
   Gilson Fabian., 2011, Proceedings of the 5th European Conference on Software Architecture: Companion Volume, P4, DOI DOI 10.1145/2031759.2031764
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2017, PROC IEEE ACM INT C, P362, DOI 10.1109/ICSE-C.2017.104
   Gruber T., 1996, DESIGN RATIONALE, P323
   Gruber T.R., 1991, DESIGN KNOWLEDGE DES
   Hennink M.M., 2019, SAGE RES METHODS FDN, DOI DOI 10.4135/9781526421036822322
   Herzig K., 2011, UNTANGLING CHANGES
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   ITU-T, 2018, US REQ NOT URN LANG, DOI [11.1002/1000/13711, DOI 11.1002/1000/13711]
   Jarczyk A., 1992, System Sciences, 1992, V2,, P577, DOI [10.1109/HICSS.1992.183309, DOI 10.1109/HICSS.1992.183309]
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang SY, 2017, INT C PROGRAM COMPRE, P320, DOI 10.1109/ICPC.2017.12
   Jiang SY, 2017, EMPIR SOFTW ENG, V22, P631, DOI 10.1007/s10664-016-9441-9
   Jin XH, 2018, IEEE WORK CONF MIN S, P70, DOI 10.1145/3196398.3196474
   Jintae Lee, 1991, Human-Computer Interaction, V6, P251
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   Kazerouni AM, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110905
   Kazerouni AM, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P407, DOI 10.1145/3287324.3287366
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Koriat A, 2000, ANNU REV PSYCHOL, V51, P481, DOI 10.1146/annurev.psych.51.1.481
   Kunz W., 1970, 131 CAL U CTR PLANN
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LaToza T.D., 2010, PLATEAU, V10, DOI [10.1145/1937117.1937125, DOI 10.1145/1937117.1937125]
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pohl RF, 2004, COGNITIVE ILLUSIONS: A HANDBOOK ON FALLACIES AND BIASES IN THINKING, JUDGEMENT AND MEMORY, P1
   Potts C., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P418, DOI 10.1109/ICSE.1988.93722
   Ragavan SS, 2021, IEEE T SOFTWARE ENG, V47, P1644, DOI 10.1109/TSE.2019.2931296
   Ram A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P201, DOI 10.1145/3236024.3236080
   Rastkar S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1193, DOI 10.1109/ICSE.2013.6606676
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Servant F., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P452, DOI 10.1109/ASE.2011.6100097
   Servant F., 2013, IEEE Working Conference on Software Visualization, P1
   SERVANT F, 2012, P ACM SIGSOFT 20 INT
   Servant F, 2017, PROC INT CONF SOFTW, P746, DOI 10.1109/ICSE.2017.74
   Servant F, 2013, IEEE INT CONF AUTOM, P754, DOI 10.1109/ASE.2013.6693150
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Spencer D., 2009, CARD SORTING DESIGNI
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Toulmin S., 2003, The uses of argument, DOI DOI 10.1017/CBO9780511840005
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
NR 82
TC 4
Z9 4
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2022
VL 189
AR 111320
DI 10.1016/j.jss.2022.111320
EA APR 2022
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1F3UW
UT WOS:000795097000001
DA 2024-07-18
ER

PT J
AU Lomio, F
   Iannone, E
   De Lucia, A
   Palomba, F
   Lenarduzzi, V
AF Lomio, Francesco
   Iannone, Emanuele
   De Lucia, Andrea
   Palomba, Fabio
   Lenarduzzi, Valentina
TI Just-in-time software vulnerability detection: Are we there yet?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software vulnerabilities; Machine learning; Empirical SE
ID METRICS SUITE; CODE CHURN; COMPLEXITY
AB Background: Software vulnerabilities are weaknesses in source code that might be exploited to cause harm or loss. Previous work has proposed a number of automated machine learning approaches to detect them. Most of these techniques work at release-level, meaning that they aim at predicting the files that will potentially be vulnerable in a future release. Yet, researchers have shown that a commit-level identification of source code issues might better fit the developer's needs, speeding up their resolution.& nbsp;Objective: To investigate how currently available machine learning-based vulnerability detection mechanisms can support developers in the detection of vulnerabilities at commit-level.& nbsp;Method: We perform an empirical study where we consider nine projects accounting for 8991 commits and experiment with eight machine learners built using process, product, and textual metrics.& nbsp;Results: We point out three main findings: (1) basic machine learners rarely perform well; (2) the use of ensemble machine learning algorithms based on boosting can substantially improve the performance; and (3) the combination of more metrics does not necessarily improve the classification capabilities.& nbsp;Conclusion: Further research should focus on just-in-time vulnerability detection, especially with respect to the introduction of smart approaches for feature selection and training strategies. (C)& nbsp;2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Lomio, Francesco] Tampere Univ, Cloud Software Engn Evolut & Assessment AI CloudS, Tampere, Finland.
   [Iannone, Emanuele; De Lucia, Andrea; Palomba, Fabio] Univ Salerno, SeSa Lab, Dept Comp Sci, Fisciano, Italy.
   [Lenarduzzi, Valentina] Univ Oulu, Oulu, Finland.
C3 Tampere University; University of Salerno; University of Oulu
RP Lenarduzzi, V (corresponding author), Univ Oulu, Oulu, Finland.
EM francesco.lomio@tuni.fi; eiannone@unisa.it; adelucia@unisa.it;
   fpalomba@unisa.it; valentina.lenarduzzi@oulu.fi
RI De Lucia, Andrea/AAG-6781-2020; Iannone, Emanuele/ABK-1299-2022
OI Iannone, Emanuele/0000-0001-7489-9969; Lomio,
   Francesco/0000-0003-3033-3044; Lenarduzzi, Valentina/0000-0003-0511-5133
CR Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Alshammari B., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P218, DOI 10.1109/QSIC.2011.31
   [Anonymous], 2010, INT WORKSH SEC MEAS
   [Anonymous], 2021, GIT GIT MERGE DOCUME
   [Anonymous], 2012, Software Engineering Notes
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   [Anonymous], 2021, FLAWFINDER
   [Anonymous], 2015, CHALLENGES APPL VULN
   [Anonymous], 2006, CWE 119 IMPROPER RES
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bandara V, 2020, IEEE INT WORK C SO, P198, DOI 10.1109/SCAM51674.2020.00027
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bhatt N, 2021, QUAL RELIAB ENG INT, V37, P648, DOI 10.1002/qre.2754
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Mach. Learn., V45, P5
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury I., 2008, Proceedings of the fourth international workshop on Software engineering for secure systems, P57, DOI DOI 10.1145/1370905.1370913
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Coppin B, 2004, ARTIF INTELL
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   De Lucia A, 2013, INFORM SOFTWARE TECH, V55, P741, DOI 10.1016/j.infsof.2012.08.002
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Do LNQ, 2020, IEEE Transactions on Software Engineering
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gonzalez D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P31, DOI 10.1109/ICSA.2019.00012
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guestrin C., 2016, KDD16 P 22 ACM, P785, DOI DOI 10.1145/2939672.2939785
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harer J.A., 2018, Automated software vulnerability detection with machine learning
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hongzhe Li, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P446, DOI 10.1109/ARES.2013.59
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kang J, 2021, SOFTWARE PRACT EXPER, V51, P748, DOI 10.1002/spe.2927
   Kim S, 2018, COMPUT SECUR, V77, P720, DOI 10.1016/j.cose.2018.02.007
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Martins C.A., 2003, REDUCING DIMENSIONAL
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McKinnel DR, 2019, COMPUT ELECTR ENG, V75, P175, DOI 10.1016/j.compeleceng.2019.02.022
   Mei JJ, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P1411, DOI 10.1109/ITNG.2009.34
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Trinh MT, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1232, DOI 10.1145/2660267.2660372
   MITRE, 2021, Common Vulnerabilities and Exposures
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   NIST, 2021, US NIST COMP SEC DIV
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pecorelli F, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2021.102611
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Piancó M, 2016, I C DEPENDABLE SYST, P6, DOI 10.1109/DSN-W.2016.50
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ralph P., 2021, EMPIRICAL STANDARDS
   Riom T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09944-w
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   Saxena P, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P225
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   SCHAPIRE RE, 1990, MACH LEARN, V5, P197, DOI 10.1023/A:1022648800760
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Silva C, 2003, IEEE IJCNN, P1661
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Smith B., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P220, DOI 10.1109/ICST.2011.15
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Sotirov A.I., 2005, THESIS
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   Svacina Jan, 2020, RACS '20: Proceedings of the International Conference on Research in Adaptive and Convergent Systems, P175, DOI 10.1145/3400286.3418261
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Theisen C, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106204
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Vassallo C., 2019, EMPIR SOFTW ENG
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   Wang Tielei, 2009, NDSS
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang J, 2015, EMPIR SOFTW ENG, V20, P1095, DOI 10.1007/s10664-014-9316-x
   Yang LM, 2017, IEEE GLOB COMM CONF
   Younis A, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P97, DOI 10.1145/2857705.2857750
   Zhang S, 2011, Database and expert systems applications, P217, DOI DOI 10.1007/978-3-642-23088-215
   Zhang Y, 2010, INT J MACH LEARN CYB, V1, P43, DOI 10.1007/s13042-010-0001-0
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zhang ZH, 2016, ANN TRANSL MED, V4, DOI 10.3978/j.issn.2305-5839.2015.12.38
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 119
TC 15
Z9 15
U1 1
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2022
VL 188
AR 111283
DI 10.1016/j.jss.2022.111283
EA MAR 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N9EY
UT WOS:000783133900002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, CL
   Liu, J
   Wang, M
   Luo, YL
AF Li, Chunlin
   Liu, Jun
   Wang, Min
   Luo, Youlong
TI Fault-tolerant scheduling and data placement for scientific workflow
   processing in geo-distributed clouds
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Geo-distributed cloud; Data placement; Fault-tolerant scheduling; QoS
ID BULK DATA TRANSFERS; EDGE; STRATEGY; ACCESS
AB Scientific workflow processing in geo-distributed cloud is crucial for the scheduling of large-scale tasks and the massive data placement among tasks. However, the task execution time and energy consumption of data transmission are two urgent issues when a scientific workflow is processed in the different geo-distributed data centers. Aiming at the data placement problem, this paper proposes a Lagrangian relaxation method. This method considers the workload balance, storage capacity, data dependency, transmission bandwidth, and transmission cost to obtain the minimum time of data transmission time. Aiming at the task scheduling problems, a fault-tolerant scheduling strategy is proposed. The strategy optimizes the task scheduling mechanism by considering the task execution time and energy consumption. Finally, the performance of the proposed methods is evaluated via extensive experiments In terms of the data placement, the experiment results imply that the data transmission time of the proposed relaxation algorithm can averagely achieve up to 14.61%, 38.03%, and 39.57% reduction of over that of ILP-FDP algorithm, GA-DPSO algorithm, and GPDP algorithm, respectively. As for the fault-tolerant scheduling, the energy consumption of the TSPT algorithm is the lowest. Compared with the MTS algorithm, EODS algorithm and EWTS algorithm, the average gains of the proposed algorithm are 15.33%, 16.65%, and 28.96%, respectively. Compared with the benchmark algorithms, the task execution time of the TSPT algorithm can averagely reduce up to 12.78,18.85 and 25.65, respectively. (C)& nbsp;2022 Elsevier Inc. All rights reserved.
C1 [Li, Chunlin; Liu, Jun; Luo, Youlong] Wuhan Univ Technol, Dept Comp Sci, Wuhan 430063, Peoples R China.
   [Li, Chunlin; Wang, Min] Beijing Technol & Business Univ, Inst Regulatory Sci, Beijing, Peoples R China.
   [Li, Chunlin] AnHui Polytech Univ, AnHui Key Lab Detect Technol & Energy Saving Devi, Wuhu, Peoples R China.
C3 Wuhan University of Technology; Beijing Technology & Business
   University; Anhui Polytechnic University
RP Li, CL (corresponding author), Wuhan Univ Technol, Dept Comp Sci, Wuhan 430063, Peoples R China.
EM chunlinli74@163.com
RI jun, liu/JUU-6838-2023; Li, Chunlin/AAH-7341-2019; li,
   chunlin/KFS-0761-2024
OI jun, liu/0000-0003-1240-4806; Li, Chunlin/0000-0002-1987-7174; 
FU National Natural Science Foundation of China (NSFC) [62171330,
   61873341]; Open Research Fund Program of Institute of cosmetic
   regulatory science [CRS-2021-01]; Open Research Fund of AnHui Key
   Laboratory of Detection Technology and Energy Saving Devices
   [JCKJ2021A08]; Key Research and Development Plan of Hubei Province
   [2020BAB102]
FX The work was supported by the National Natural Science Foundation of
   China (NSFC) under grants (No. 62171330, No. 61873341) , Open Research
   Fund Program of Institute of cosmetic regulatory science (CRS-2021-01) ,
   Open Research Fund of AnHui Key Laboratory of Detection Technology and
   Energy Saving Devices under grants (No. JCKJ2021A08) , Key Research and
   Development Plan of Hubei Province (No. 2020BAB102) .
CR Amina M., 2018, IEEE TRANS CLOUD COM, V1
   Ananthanarayanan G., 2013, PROC USENIX S NETW S, V13, P185
   [Anonymous], 2018, ONLINE SNAP DATASETS
   [Anonymous], 2018, ONLINE IBM ILOG CPLE
   [Anonymous], 2018, ONLINE PUMA DATASETS
   Benifa JVB, 2017, WIRELESS PERS COMMUN, V95, P2709, DOI 10.1007/s11277-017-3953-5
   Boyang Yu, 2015, 2015 IEEE Conference on Computer Communications (INFOCOM). Proceedings, P603, DOI 10.1109/INFOCOM.2015.7218428
   Camaron DG, 2004, J GRID COMPUT, V2, P57, DOI DOI 10.1007/S10723-004-6040-6
   Chauhan SS, 2019, J PARALLEL DISTR COM, V133, P193, DOI 10.1016/j.jpdc.2018.08.001
   Chen L, 2019, IEEE T NETW SCI ENG, V6, P488, DOI 10.1109/TNSE.2018.2795580
   Ferdaus MH, 2017, J NETW COMPUT APPL, V98, P65, DOI 10.1016/j.jnca.2017.09.009
   Gao Y, 2017, IEEE ACCESS, V5, P1306, DOI 10.1109/ACCESS.2017.2668392
   Hu ZM, 2018, IEEE T PARALL DISTR, V29, P705, DOI 10.1109/TPDS.2017.2773504
   Ikken S, 2017, 2017 19TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS (HPCC) / 2017 15TH IEEE INTERNATIONAL CONFERENCE ON SMART CITY (SMARTCITY) / 2017 3RD IEEE INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (DSS), P514, DOI 10.1109/HPCC-SmartCity-DSS.2017.67
   Jia L, 2018, 2018 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI), P564, DOI 10.1109/SmartWorld.2018.00118
   Khalajzadeh H, 2020, J PARALLEL DISTR COM, V141, P82, DOI 10.1016/j.jpdc.2020.03.013
   Khalajzadeh H, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON COGNITIVE COMPUTING (ICCC 2017), P64, DOI 10.1109/IEEE.ICCC.2017.16
   Khalajzadeh H, 2016, IEEE INT CONF CLOUD, P678, DOI [10.1109/CLOUD.2016.0095, 10.1109/CLOUD.2016.93]
   Le SY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P389, DOI 10.1109/ICWS.2017.135
   Leskovec J, 2009, INTERNET MATH, V6, P29, DOI 10.1080/15427951.2009.10129177
   Li CL, 2019, J SUPERCOMPUT, V75, P2805, DOI 10.1007/s11227-018-2695-9
   Li WX, 2018, IEEE ACM T NETWORK, V26, P1193, DOI 10.1109/TNET.2018.2817206
   Lianxing Shi, 2021, Journal of Shanghai Jiaotong University (Science), V26, P463, DOI 10.1007/s12204-020-2253-5
   Lin B, 2019, IEEE T IND INFORM, V15, P4254, DOI 10.1109/TII.2019.2905659
   Liu J, 2016, IEEE INT SYMP INFO, P1451, DOI 10.1109/ISIT.2016.7541539
   Liu Q, 2016, LECT NOTES COMPUT SC, V10039, P296, DOI 10.1007/978-3-319-48671-0_27
   Liu YK, 2017, ROBOT CIM-INT MANUF, V45, P3, DOI 10.1016/j.rcim.2016.09.008
   Lu XJ, 2018, SUSTAIN COMPUT-INFOR, V20, P120, DOI 10.1016/j.suscom.2018.07.004
   Michailidou AV, 2019, INT DATABASE ENG APP, P219, DOI 10.1145/3331076.3331107
   Qi Liu, 2017, 2017 19th International Conference on Advanced Communication Technology (ICACT), P889, DOI 10.23919/ICACT.2017.7890240
   Qin Y, 2018, J NETW COMPUT APPL, V113, P109, DOI 10.1016/j.jnca.2018.04.001
   Shao YL, 2019, COMPUT NETW, V148, P46, DOI 10.1016/j.comnet.2018.10.017
   Souli-Jbali Rahma, 2019, International Journal of Web Engineering and Technology, V14, P151
   Tang Z, 2016, J GRID COMPUT, V14, P55, DOI 10.1007/s10723-015-9334-y
   Wan SH, 2020, COMPUT COMMUN, V149, P99, DOI 10.1016/j.comcom.2019.10.012
   Wu Y, 2017, IEEE T CLOUD COMPUT, V5, P112, DOI 10.1109/TCC.2015.2389842
   Xu HL, 2017, IEEE T PARALL DISTR, V28, P530, DOI 10.1109/TPDS.2016.2564962
   Xu XL, 2018, J NETW COMPUT APPL, V124, P148, DOI 10.1016/j.jnca.2018.09.006
   Yi K, 2010, PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON DISTRIBUTED COMPUTING AND APPLICATIONS TO BUSINESS, ENGINEERING AND SCIENCE (DCABES 2010), P332, DOI 10.1109/DCABES.2010.74
   Zhang L, 2018, INT C COMP SUPP COOP, P110, DOI 10.1109/CSCWD.2018.8465343
   Zhou A, 2020, NEURAL COMPUT APPL, V32, P15411, DOI 10.1007/s00521-019-04693-w
NR 41
TC 17
Z9 17
U1 3
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2022
VL 187
AR 111227
DI 10.1016/j.jss.2022.111227
EA FEB 2022
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0M8TE
UT WOS:000782420300001
DA 2024-07-18
ER

PT J
AU Nadim, M
   Mondal, M
   Roy, CK
   Schneider, KA
AF Nadim, Md
   Mondal, Manishankar
   Roy, Chanchal K.
   Schneider, Kevin A.
TI Evaluating the performance of clone detection tools in detecting cloned
   co-change candidates
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Clone detection; Cloned co-change candidates; Commit operation; Software
   maintenance and evolution
AB Co-change candidates are the group of code fragments that require a change if any of these fragments experience a modification in a commit operation during software evolution. The cloned co-change candidates are a subset of the co-change candidates, and the members in this subset are clones of one another. The cloned co-change candidates are usually created by reusing existing code fragments in a software system. Detecting cloned co-change candidates is essential for clone-tracking, and studies have shown that we can use clone detection tools to find cloned co-change candidates. However, although several studies evaluate clone detection tools for their accuracy in detecting cloned fragments, we found no study that evaluates clone detection tools for detecting cloned co-change candidates. In this study, we explore the dimension of code clone research for detecting cloned co-change candidates. We compare the performance of 12 different configurations of nine promising clone detection tools in identifying cloned co-change candidates from eight open-source C and Java-based subject systems of various sizes and application domains. A ranked list and analysis of the results provides valuable insights and guidelines into selecting and configuring a clone detection tool for identifying co-change candidates and leads to a new dimension of code clone research into change impact analysis. Crown Copyright (C)& nbsp;2022 Published by Elsevier Inc. All rights reserved.
C1 [Nadim, Md; Mondal, Manishankar; Roy, Chanchal K.; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 University of Saskatchewan
RP Nadim, M (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
EM mdn769@usask.ca; mshankar.mondal@usask.ca; chanchal.roy@usask.ca;
   kevin.schneider@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754; Nadim, Md/0000-0003-1765-2462
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Canada First Research Excellence Fund (CFREF); Global Institute for Food
   Security (GIFS) , Canada
FX This research is supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) , and by a Canada First Research
   Excellence Fund (CFREF) grant coordinated by the Global Institute for
   Food Security (GIFS) , Canada.
CR AlSanad A, 2015, ADV INTELL SYST, V353, P803, DOI 10.1007/978-3-319-16486-1_80
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Breiman L., 2001, Mach. Learn., V45, P5
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Cheung WT, 2016, EMPIR SOFTW ENG, V21, P517, DOI 10.1007/s10664-015-9368-6
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Harris S., 2003, SIMIAN SIMILARITY AN
   Islam JF, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P73, DOI [10.1109/SANER.2019.8667993, 10.1109/saner.2019.8667993]
   Islam JF, 2019, INT C PROGRAM COMPRE, P81, DOI 10.1109/ICPC.2019.00022
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2009, PROC INT CONF SOFTW, P603, DOI 10.1109/ICSE.2009.5070566
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke Jens, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P98, DOI 10.1109/MSR.2010.5463290
   Mondal M., 2014, P 11 WORK C MIN SOFT, P32
   Mondal M., 2012, P CASCON, P205
   Mondal M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P93, DOI [10.1109/SANER48275.2020.9054846, 10.1109/saner48275.2020.9054846]
   Mondal M, 2019, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSME.2019.00026
   Mondal M, 2011, CONF PROC INT SYMP C, P242, DOI 10.1109/ICPC.2011.14
   Mondal Manishankar, 2015, P CASCON, P141
   Muller O, 2017, ITICSE'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P52, DOI 10.1145/3059009.3059041
   Nadim M., 2021, RES ARTIFACT EVALUAT
   Nadim M, 2020, INT WORKS SOFTW CLON, P15, DOI [10.1109/IWSC50091.2020.9047639, 10.1109/iwsc50091.2020.9047639]
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Ragkhitwetsagul C, 2016, IEEE INT WORK C SO, P117, DOI 10.1109/SCAM.2016.13
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Rosner B, 2006, BIOMETRICS, V62, P185, DOI 10.1111/j.1541-0420.2005.00389.x
   Roy CK, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P26, DOI 10.1109/SANER.2018.8330194
   Roy CK, 2008, INT C PROGRAM COMPRE, P153, DOI 10.1109/ICPC.2008.42
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy ChanchalK., 2010, Proceedings of the 4th International Workshop on Software Clones, IWSC '10, P17
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P227, DOI 10.1109/WCRE.2010.33
   Svajlenko J, 2017, PROC IEEE ACM INT C, P177, DOI 10.1109/ICSE-C.2017.78
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Swierstra W., 2014, Proceedings of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Re ections on Programming Software, Onward! 2014, P43, DOI [10.1145/2661136.2661137, DOI 10.1145/2661136.2661137]
   TiOBE Software BV, 2021, TIOB IND
   Uddin MS, 2013, CONF PROC INT SYMP C, P236, DOI 10.1109/ICPC.2013.6613857
   Ul Ain Q, 2019, IEEE ACCESS, V7, P86121, DOI 10.1109/ACCESS.2019.2918202
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Virtanen P, 2020, NAT METHODS, V17, P352, DOI 10.1038/s41592-020-0772-5
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 47
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2022
VL 187
AR 111229
DI 10.1016/j.jss.2022.111229
EA FEB 2022
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0M8TE
UT WOS:000782420300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yin, L
   Zhou, JL
   Sun, J
AF Yin, Lu
   Zhou, Junlong
   Sun, Jin
TI A stochastic algorithm for scheduling bag-of-tasks applications on
   hybrid clouds under task duration variations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bag-of-tasks applications; Hybrid clouds; Stochastic task scheduling;
   Probabilistic constraint; Profit maximization
ID QUANTUM GENETIC ALGORITHM; EFFICIENT; TIMES
AB Hybrid cloud computing, which typically involves a hybrid architecture of public and private clouds, is an ideal platform for executing bag-of-tasks (BoT) applications. Most existing BoT scheduling algorithms ignore the uncertainty of task execution times in practical scenarios and schedule tasks by assuming that the task durations can be determined accurately in advance, often leading to the violation of the deadline constraint. In view of this fact, this paper devotes to maximizing the profit of the private cloud provider while guaranteeing the quality-of-service provided by the cloud platform, through designing an effective stochastic BoT scheduling algorithm based on the distribution of task duration variations. With the varying task execution times modeled as random variables, we formulate a stochastic scheduling framework that incorporates a probabilistic constraint upon the makespans of BoT applications. The resultant stochastic optimization model is capable of characterizing the complete distribution information of makespan variations and satisfying the deadline constraint in a probabilistic sense. We further design an immune algorithm-based metaheuristic to solve this stochastic optimization problem. Simulations results justify that our proposed algorithm outperforms several competing algorithms in maximizing the cloud provider's profit while satisfying the user-specified deadline constraint under the impact of uncertain task durations. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Yin, Lu; Zhou, Junlong; Sun, Jin] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei St, Nanjing 210094, Peoples R China.
C3 Nanjing University of Science & Technology
RP Sun, J (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei St, Nanjing 210094, Peoples R China.
EM ylu@njust.edu.cn; jlzhou@njust.edu.cn; sunj@njust.edu.cn
RI Yin, Lu/KPY-0818-2024
OI Yin, Lu/0000-0002-1138-3225
FU National Natural Science Foundation of China [61872185, 61802185];
   Fundamental Research Funds for the Central Universities [30919011233,
   30919011402, 30920021132]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61872185 and 61802185 and in part by
   the Fundamental Research Funds for the Central Universities under Grants
   30919011233, 30919011402, and 30920021132.
CR Abdi S, 2017, FUTURE GENER COMP SY, V71, P113, DOI 10.1016/j.future.2017.01.036
   Alam T, 2018, J SYST SOFTWARE, V135, P126, DOI 10.1016/j.jss.2017.10.001
   Ando E, 2009, J DISCRET ALGORITHMS, V7, P420, DOI 10.1016/j.jda.2009.01.001
   [Anonymous], 2016, 2016 INT S PERFORMAN, DOI DOI 10.1109/SPECTS.2016.7570526
   Brucker P., 2001, Scheduling Algorithms, V3rd
   Cai ZC, 2017, FUTURE GENER COMP SY, V71, P57, DOI 10.1016/j.future.2017.01.020
   Cao K, 2021, IEEE T IND INFORM, V17, P494, DOI 10.1109/TII.2020.2975897
   Cao K, 2019, IEEE T COMPUT AID D, V38, P1799, DOI 10.1109/TCAD.2018.2873239
   Cao K, 2016, 2016 INTERNATIONAL SYMPOSIUM ON SYSTEM AND SOFTWARE RELIABILITY (ISSSR), P111, DOI [10.1109/ISSSR.2016.026, 10.1109/ISSSR.2016.18]
   Chen HK, 2021, IEEE T SERV COMPUT, V14, P1167, DOI 10.1109/TSC.2018.2866421
   Chen HK, 2016, IEEE INT CONF CLOUD, P577, DOI [10.1109/CLOUD.2016.0082, 10.1109/CLOUD.2016.80]
   Chen HK, 2015, J SYST SOFTWARE, V99, P20, DOI 10.1016/j.jss.2014.08.065
   Chen YL, 2020, IEEE T CLOUD COMPUT, V8, P1284, DOI 10.1109/TCC.2016.2586048
   Dogan A., 2004, Cluster Computing, V7, P177, DOI 10.1023/B:CLUS.0000018566.13071.cb
   Dong MG, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110405
   Duan RB, 2014, IEEE T CLOUD COMPUT, V2, P29, DOI 10.1109/TCC.2014.2303077
   Genez TAL, 2019, IEEE T CLOUD COMPUT, V7, P62, DOI 10.1109/TCC.2015.2469650
   Gu JW, 2009, J MATH ANAL APPL, V355, P63, DOI 10.1016/j.jmaa.2008.12.065
   Haidri RA, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5006
   He TZ, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110943
   Houssein EH, 2021, SWARM EVOL COMPUT, V62, DOI 10.1016/j.swevo.2021.100841
   Hu ML, 2013, IEEE T COMPUT, V62, P2108, DOI 10.1109/TC.2012.164
   Islam MT, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110515
   Jia YH, 2021, IEEE T SYST MAN CY-S, V51, P634, DOI 10.1109/TSMC.2018.2881018
   Keshanchi B, 2017, J SYST SOFTWARE, V124, P1, DOI 10.1016/j.jss.2016.07.006
   Lee YC, 2011, IEEE T PARALL DISTR, V22, P1374, DOI 10.1109/TPDS.2010.208
   Li KL, 2015, IEEE T COMPUT, V64, P191, DOI 10.1109/TC.2013.205
   Li KL, 2014, IEEE T PARALL DISTR, V25, P2867, DOI 10.1109/TPDS.2013.270
   Thai L, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P975, DOI 10.1109/CLOUD.2015.131
   Malawski M, 2015, FUTURE GENER COMP SY, V48, P1, DOI 10.1016/j.future.2015.01.004
   Maurya AK, 2018, 2018 2ND INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPILATION, COMPUTING AND COMMUNICATIONS (HP3C 2018), P6, DOI 10.1145/3195612.3195618
   Möhring RH, 1999, J ACM, V46, P924, DOI 10.1145/331524.331530
   Novak A, 2019, EUR J OPER RES, V279, P687, DOI 10.1016/j.ejor.2019.05.038
   Gutierrez-Garcia JO, 2015, J SYST SOFTWARE, V104, P17, DOI 10.1016/j.jss.2015.02.039
   Oprescu A., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P351, DOI 10.1109/CloudCom.2010.32
   Papoulis A., 2004, PROBABILITY RANDOM V
   Sarin S.C., 2010, Stochastic scheduling
   Sindhu S, 2018, INT J BIO-INSPIR COM, V11, P229, DOI 10.1504/IJBIC.2018.092799
   Sinha D, 2012, DES AUT CON, P1067
   Sun J, 2020, J SYST ARCHITECT, V108, DOI 10.1016/j.sysarc.2020.101799
   Sun J, 2019, IEEE T GEOSCI REMOTE, V57, P4294, DOI 10.1109/TGRS.2018.2890513
   Tang XY, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4210
   Tang XY, 2011, FUTURE GENER COMP SY, V27, P1083, DOI 10.1016/j.future.2011.04.007
   Tarplee KM, 2016, IEEE T PARALL DISTR, V27, P1633, DOI 10.1109/TPDS.2015.2456020
   Thai L, 2018, FUTURE GENER COMP SY, V82, P1, DOI 10.1016/j.future.2017.11.038
   Van den Bossche R., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P320, DOI 10.1109/CloudCom.2011.50
   Varshney P, 2019, IEEE T PARALL DISTR, V30, P1512, DOI 10.1109/TPDS.2018.2889851
   Wang B., 2016, PROC IEEE ENERGY CON, P1
   Wu GL, 2017, J SYST SOFTWARE, V134, P29, DOI 10.1016/j.jss.2017.08.032
   Wu ZB, 2021, IEEE T CYBERNETICS, V51, P3588, DOI 10.1109/TCYB.2020.3026673
   Yan H, 2019, INFORM SCIENCES, V477, P30, DOI 10.1016/j.ins.2018.10.020
   Yang YQ, 2015, IEEE I C EMBED SOFTW, P390, DOI 10.1109/HPCC-CSS-ICESS.2015.211
   Zhang Y, 2019, J SYST ARCHITECT, V101, DOI 10.1016/j.sysarc.2019.101654
   Zhang Y, 2019, IEEE ACCESS, V7, P151888, DOI 10.1109/ACCESS.2019.2948468
   Zhang Y, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4249
   Zhang Y, 2017, INT CONF ADV CLOUD B, P39, DOI 10.1109/CBD.2017.15
   Zhang YJ, 2015, INT C PAR DISTRIB SY, P585, DOI 10.1109/ICPADS.2015.79
   Zheng B., J SYST SOFTWARE, V176
   Zheng BB, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110934
   Zuo XQ, 2014, IEEE T AUTOM SCI ENG, V11, P564, DOI 10.1109/TASE.2013.2272758
NR 60
TC 12
Z9 12
U1 6
U2 22
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2022
VL 184
AR 111123
DI 10.1016/j.jss.2021.111123
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9D3KY
UT WOS:000936000800008
DA 2024-07-18
ER

PT J
AU Sun, CA
   Liu, BL
   Fu, A
   Liu, YQ
   Liu, H
AF Sun, Chang-ai
   Liu, Baoli
   Fu, An
   Liu, Yiqiang
   Liu, Huai
TI Path-directed source test case generation and prioritization in
   metamorphic testing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Metamorphic testing; Source test case; Symbolic execution; Path
   constraint
ID MODEL-CHECKING; SELECTION
AB Metamorphic testing is a technique that makes use of some necessary properties of the software under test, termed as metamorphic relations, to construct new test cases, namely follow-up test cases, based on some existing test cases, namely source test cases. Due to the ability of verifying testing results without the need of test oracles, it has been widely used in many application domains and detected lots of real-life faults. Numerous investigations have been conducted to further improve the effectiveness of metamorphic testing, most of which were focused on the identification and selection of "good"metamorphic relations. Recently, a few studies emerged on the research direction of how to generate and select source test cases that are effective in fault detection. In this paper, we propose a novel approach to generating source test cases based on their associated path constraints, which are obtained through symbolic execution. The path distance among test cases is leveraged to guide the prioritization of source test cases, which further improve the efficiency. A tool has been developed to automate the proposed approach as much as possible. Empirical studies have also been conducted to evaluate the fault-detection effectiveness of the approach. The results show that this approach enhances both the performance and automation of metamorphic testing. It also highlights interesting research directions for further improving metamorphic testing. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Sun, Chang-ai; Liu, Baoli; Fu, An; Liu, Yiqiang] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
   [Liu, Huai] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
C3 University of Science & Technology Beijing; Swinburne University of
   Technology
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
EM casun@ustb.edu.cn; 1912696968@qq.com; anfu@xs.ustb.edu.cn;
   1152138292@qq.com; hliu@swin.edu.au
RI Liu, Huai/M-4871-2019; Fu, An/GVT-3917-2022
OI Liu, Huai/0000-0003-3125-4399; Fu, An/0000-0002-2807-3813
CR Alatawi E, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P19, DOI [10.1109/MET.2016.012, 10.1145/2896971.2896980]
   [Anonymous], 1970, C SPONS NATO SCI COM
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Barus AC, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P5, DOI [10.1109/MET.2016.010, 10.1145/2896971.2896977]
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Chang-ai Sun, 2016, International Journal of High Performance Computing and Networking, V9, P104
   Chen T., 2004, P 8 AS PAC ORCH C AP, P128
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Guowei Dong, 2010, Proceedings of the 2010 IEEE/ACM International Conference on Web Intelligence-Intelligent Agent Technology - Workshops (WI-IAT 2010), P397, DOI 10.1109/WI-IAT.2010.101
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Jussien Narendra., 2008, Open-Source Software for Integer and Contraint Programming, OSSICP'08, P1
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kroening D., 2016, Decision Procedures: an Algorithmic Point of View
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Papadakis M., 2017, ADV COMPUT
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Pasareanu CS, 2013, AUTOMAT SOFTW ENG, V20, P391, DOI 10.1007/s10515-013-0122-2
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Saha P, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P2, DOI 10.1145/3193977.3193982
   Segura S, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P24, DOI 10.1109/MET.2019.00012
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Shin D, 2018, IEEE T SOFTWARE ENG, V44, P914, DOI 10.1109/TSE.2017.2732347
   Sun CA, 2020, INT J WEB GRID SERV, V16, P364, DOI 10.1504/IJWGS.2020.110945
   Sun CA, 2021, IEEE T SOFTWARE ENG, V47, P1764, DOI 10.1109/TSE.2019.2934848
   Sun CA, 2019, IEEE T COMPUT, V68, P157, DOI 10.1109/TC.2018.2866040
   Sun CA, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P12, DOI [10.1109/MET.2016.011, 10.1145/2896971.2896974]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wu P, 2005, P INT COMP SOFTW APP, P19
   Wu Peng, 2005, Journal of Software, V16, P1210, DOI 10.1360/jos161210
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang B, 2019, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSME.2019.00036
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 47
TC 6
Z9 6
U1 2
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2022
VL 183
AR 111091
DI 10.1016/j.jss.2021.111091
EA OCT 2021
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK7JC
UT WOS:000709898800008
DA 2024-07-18
ER

PT J
AU Dhungana, D
   Haselböck, A
   Meixner, S
   Schall, D
   Schmid, J
   Trabesinger, S
   Wallner, S
AF Dhungana, Deepak
   Haselboeck, Alois
   Meixner, Sebastian
   Schall, Daniel
   Schmid, Johannes
   Trabesinger, Stefan
   Wallner, Stefan
TI Multi-factory production planning using edge computing and IIoT
   platforms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Factory as a service; Industrie 4.0; Manufacturing ecosystems; Cloud
   manufacturing; Monitoring production; Edge analytics
ID CLOUD; SERVICE; CPPS
AB An important prerequisite for determining whether a certain product is producible in any given production facility is an accurate assessment of which production lines and/or the machines are able to execute the necessary production steps. Not only the static information about the capabilities of the machines, but also the conditions of machines and tools are significant for this analysis. Because of the deviation of machine capabilities with increasing deterioration and weary of the equipment, it is also necessary to continuously monitor the status of the machine and analyze the machine conditions. In this paper, we present an approach for generating production plans across multiple factories, considering both static information and dynamic data analysis. Edge devices constantly monitor high frequency machine data and report condensed machine states to an Industrial IoT platform (IIoT). A marketplace within the cloud-application MindSphere enables us to integrate the requirements of the products and the capabilities of the production sites. Customers are be able to evaluate these production plans based on duration, energy consumption, CO2 footprint etc. (C) 2021 The Authors. Published by Elsevier Inc.
C1 [Dhungana, Deepak] IMC Univ Appl Sci, Krems, Austria.
   [Haselboeck, Alois; Meixner, Sebastian; Schall, Daniel; Wallner, Stefan] Siemens AG Osterreich, Vienna, Austria.
   [Schmid, Johannes; Trabesinger, Stefan] Graz Univ Technol, Graz, Austria.
C3 Siemens AG; Graz University of Technology
RP Dhungana, D (corresponding author), IMC Univ Appl Sci, Krems, Austria.
EM deepak.dhungana@fh-krems.ac.at; alois.haselboeck@siemens.com;
   sebastian.a.meixner@siemens.com; daniel.schall@siemens.com;
   johannes.schmid@tugraz.at; stefan.trabesinger@tugraz.at;
   stefan.wallner@siemens.com
OI Dhungana, Deepak/0000-0001-9327-9896; Haselbock,
   Alois/0000-0003-2599-3902; Wallner, Stefan/0000-0002-9755-6632
FU Austrian Research Promotion Agency (FFG) [852105, 861798, 861800]
FX This work has been partially funded by the Austrian Research Promotion
   Agency (FFG) under the project grants 852105 (Pilotfabrik Industrie 4.0
   -Smart Production), 861798 (LIT Factory) and 861800
   (smartfactory@tugraz).
CR [Anonymous], 2007, 95032005 ANSIISA
   Bildstein A, 2018, PROC CIRP, V72, P1015, DOI 10.1016/j.procir.2018.03.147
   Cavalieri S, 2013, COMPUT STAND INTER, V36, P165, DOI 10.1016/j.csi.2013.06.004
   Chen Yang, 2016, Manufacturing Letters, V7, P22, DOI 10.1016/j.mfglet.2015.12.001
   de Silva L, 2017, AAMAS'17: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1811
   de Silva L, 2016, FRONT ARTIF INTEL AP, V285, P1449, DOI 10.3233/978-1-61499-672-9-1449
   Dhungana D., 2018, CUSTOMIZATION 40, P103
   Dhungana D., 2015, P 19 INT C SOFTW PRO
   Dhungana D, 2020, EUROMICRO CONF PROC, P529, DOI 10.1109/SEAA51224.2020.00088
   Dhungana D, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P266, DOI 10.1109/SEAA.2017.26
   Gao R, 2015, CIRP ANN-MANUF TECHN, V64, P749, DOI 10.1016/j.cirp.2015.05.011
   Hennig M, 2019, PROCEDIA MANUF, V31, P200, DOI 10.1016/j.promfg.2019.03.032
   Järvenpää E, 2017, PROCEDIA MANUF, V11, P1053, DOI 10.1016/j.promfg.2017.07.216
   Kao YT, 2018, COMPUT IND ENG, V120, P450, DOI 10.1016/j.cie.2018.04.053
   Karner M, 2019, PROC CIRP, V81, P938, DOI 10.1016/j.procir.2019.03.231
   Li XB, 2020, ROBOT CIM-INT MANUF, V65, DOI 10.1016/j.rcim.2020.101968
   Lu YQ, 2014, J MANUF SYST, V33, P551, DOI 10.1016/j.jmsy.2014.05.003
   Mourtzis D, 2018, J MANUF SYST, V47, P179, DOI 10.1016/j.jmsy.2018.05.008
   Mourtzis D, 2016, J MANUF SYST, V39, P1, DOI 10.1016/j.jmsy.2016.01.003
   Pichler R, 2020, LECT NOTE NETW SYST, V95, P1, DOI 10.1007/978-3-030-34983-7_1
   Prajapati A, 2012, J QUAL MAINT ENG, V18, P384, DOI 10.1108/13552511211281552
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Schmid J., 2020, P 9 INT C IND TECHN, P117
   Schmid J., 2021, ACQUISITION MACHINE
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Tao F, 2017, ROBOT CIM-INT MANUF, V45, P34, DOI 10.1016/j.rcim.2016.07.001
   Trabesinger S., 2020, Procedia Manuf, V45, P343
   Trabesinger S, 2019, PROCEDIA MANUF, V31, P370, DOI 10.1016/j.promfg.2019.03.058
   Yang C, 2020, IEEE ACCESS, V8, P45938, DOI 10.1109/ACCESS.2020.2977846
   Zhang L, 2014, ENTERP INF SYST-UK, V8, P167, DOI 10.1080/17517575.2012.683812
NR 30
TC 5
Z9 5
U1 7
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2021
VL 182
AR 111083
DI 10.1016/j.jss.2021.111083
EA SEP 2021
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WC1XH
UT WOS:000704056400003
OA hybrid
DA 2024-07-18
ER

PT J
AU Zielske, M
   Held, T
AF Zielske, Malena
   Held, Tobias
TI Application of agile methods in traditional logistics companies and
   logistics startups Results from a German Delphi Study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Agile methods; Logistics; Traditional companies; Startups; Delphi Study
ID SOFTWARE-DEVELOPMENT; CHALLENGES; SUCCESS
AB To meet changing requirements and rising product complexity, a growing number of traditional logistics companies and logistics startups are increasing their agility through the use of progressively agile methods. The objective of the Delphi Study is to assess how traditional logistics companies and logistics startups use agile methods in their IT departments, what benefits they realise and what challenges they face introducing and using agile methods.
   A modified Delphi Study was conducted over three complementary rounds as an iterative expert judgment process. After the analysis of the results, insights were gained on the following points covering traditional logistics companies and logistics startups: (a) used agile methods and practices, (b) perceived benefits that these methods offer and (c) challenges of applying these methods.
   The results of the Delphi Study show that traditional logistics companies as well as logistics startups chose similar agile methods and practices. Both company types aim to realise mainly the same benefits but face different challenges regarding the introduction of agile methods.
   The Delphi Study's originality lies in its contribution to the largely unexplored area of agility in the field of logistics. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Zielske, Malena; Held, Tobias] Hamburg Univ Appl Sci, Hamburg, Germany.
   [Zielske, Malena] Lufthansa Ind Solut GmbH & Co KG, Norderstedt, Germany.
C3 Hochschule Angewandte Wissenschaft Hamburg
RP Zielske, M (corresponding author), Hamburg Univ Appl Sci, Hamburg, Germany.
EM Malena.Zielske@haw-hamburg.de
RI Harrison, Dylan/AFP-8142-2022
OI Held, Tobias/0000-0003-4733-4705
CR Abbas N, 2008, LECT NOTES BUS INF P, V9, P94
   Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Ahmad MO, 2018, J SYST SOFTWARE, V137, P96, DOI 10.1016/j.jss.2017.11.045
   Akkermans HA, 2003, EUR J OPER RES, V146, P284, DOI 10.1016/S0377-2217(02)00550-7
   ANDERSSON D., 2004, A multidisciplinary meeting at the Dag Hammarskjold Foundation, P1
   [Anonymous], 2020, KANB BOARD
   [Anonymous], 1998, RATIONAL UNIFIED PRO
   [Anonymous], 2001, AGILE MANIFESTO
   [Anonymous], 2021, **DROPPED REF**, V177
   Anwer F., 2017, Int. J. Multidiscip. Sci. Eng, V8, P1
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P12, DOI 10.5815/ijmecs.2017.07.02
   Baig Jawad Javed Akbar, 2017, 2017 Eighth International Conference on Intelligent Computing and Information Systems (ICICIS). Proceedings, P252, DOI 10.1109/INTELCIS.2017.8260055
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B., 2003, BALANCING AGILITY DI
   BROWN JL, 1982, BUS HORIZONS, V25, P29, DOI 10.1016/0007-6813(82)90101-X
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Campbell D., 2002, QUASIEXPERIMENTATION
   Carney O, 1996, J ADV NURS, V23, P1024, DOI 10.1046/j.1365-2648.1996.09623.x
   Caseiro N, 2019, J INNOV KNOWL, V4, P139, DOI 10.1016/j.jik.2018.03.009
   Clayton MJ., 1997, Educ. Psychol, V17, P373, DOI DOI 10.1080/0144341970170401
   Clements P., 2004, EARLY ASPECTS ASPECT, P86
   Cockburn A., 2005, Crystal clear : A human-powered methodology for small teams
   Cockburn A., 1998, SURVIVING OBJECT ORI
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Conboy K, 2007, INT FED INFO PROC, V235, P217
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Conboy Kieran., 2004, P 2004 ACM WORKSHOP, P37
   Cummins RA., 2000, P 2 INT C QUALITY LI, P74
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   DALKEY N, 1969, FUTURES, V1, P408, DOI 10.1016/S0016-3287(69)80025-X
   Daniels K.E.S., 2014, NEW VENTURE MANIFEST
   Davarzani Hoda, 2015, Logistics Research, V8, DOI 10.1007/s12159-014-0120-1
   Delfmann W., 2018, Logistics Research, V11, P1, DOI DOI 10.23773/2018_9
   Deschene M., 2016, EMBRACING SECURITY A
   Diamond IR, 2014, J CLIN EPIDEMIOL, V67, P401, DOI 10.1016/j.jclinepi.2013.12.002
   Diebold P., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601254
   DIEHL M, 1987, J PERS SOC PSYCHOL, V53, P497, DOI 10.1037/0022-3514.53.3.497
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Ebert C, 2017, IEEE SOFTWARE, V34, P98, DOI 10.1109/MS.2017.4121226
   Finstad K, 2010, J USABILITY STUD, V5, P104
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fletcher AJ, 2014, INT J QUAL METH, V13, P1
   Fuchs C, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7027
   García-Pérez MA, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00325
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Gligor DM, 2012, SUPPLY CHAIN MANAG, V17, P438, DOI 10.1108/13598541211246594
   Goel S, 2020, MATER TODAY CHEM, V17, DOI 10.1016/j.mtchem.2020.100300
   Goldman S.L., 1995, AGILE COMPETITORS VI
   Gunasekaran A, 2017, TRANSPORT RES E-LOG, V99, P14, DOI 10.1016/j.tre.2016.12.008
   Gustavsson T., 2016, P PROJ MAN DEV PRACT, P114
   Helaakoski H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P1010
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Highsmith J., 2010, Agile project management: Creating innovative products, V2nd
   Hooper MJ, 2001, INT J OPER PROD MAN, V21, P630, DOI 10.1108/01443570110390372
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jalali S, 2014, J SYST SOFTWARE, V98, P172, DOI 10.1016/j.jss.2014.08.067
   Janssen M, 2020, INT J INFORM MANAGE, V55, DOI 10.1016/j.ijinfomgt.2020.102180
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Kaim Raphael, 2019, Intelligent Decision Technologies 2019. Proceedings of the 11th KES International Conference on Intelligent Decision Technologies (KES-IDT 2019). Smart Innovation, Systems and Technologies (SIST 143), P195, DOI 10.1007/978-981-13-8303-8_17
   Keenan F, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P229, DOI 10.1109/ECBS.2006.21
   Kettunen P, 2009, TECHNOVATION, V29, P408, DOI 10.1016/j.technovation.2008.10.003
   Kupp Martin, 2017, Journal of Business Strategy, V38, P47, DOI 10.1108/JBS-12-2016-0145
   Kurtz CF, 2003, IBM SYST J, V42, P462, DOI 10.1147/sj.423.0462
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Legendre P, 2005, J AGR BIOL ENVIR ST, V10, P226, DOI 10.1198/108571105X46642
   Lilja K.K., 2011, TECHNOLOGY MANAGEMEN, P1, DOI DOI 10.1063/1.5138006
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Linstone HA, 1975, The Delphi method
   Mokkink LB, 2010, QUAL LIFE RES, V19, P539, DOI 10.1007/s11136-010-9606-8
   Mourtzis D., 2016, Logistics Research, V9, DOI 10.1007/s12159-015-0129-0
   Mowles C., 2015, STRATEG MANAG
   Nagel R. N., 1991, 21st century manufacturing enterprise strategy: An industry-led view
   Newkirk J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P695, DOI 10.1109/ICSE.2002.1008034
   Bernal WN, 2019, LECT NOTES COMPUT SC, V11756, P380, DOI 10.1007/978-3-030-31140-7_24
   Nirwan MD, 2015, PROCD SOC BEHV, V169, P23, DOI 10.1016/j.sbspro.2015.01.282
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Parente S., 2015, PM WORLD J, VIV, P1
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Perego A, 2011, INT J PHYS DISTR LOG, V41, P457, DOI 10.1108/09600031111138826
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pikkarainen M, 2011, INFORMATION SYSTEMS DEVELOPMENT: ASIAN EXPERIENCES, P449, DOI 10.1007/978-1-4419-7355-9_38
   Prater E, 2001, INT J OPER PROD MAN, V21, P823, DOI 10.1108/01443570110390507
   Qumer A, 2006, ICSOFT 2006: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P121
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Rowe G, 2001, INT SER OPER RES MAN, V30, P125, DOI 10.1007/978-0-306-47630-3_7
   Sackman H., 1975, Delphi critique: Expert opinion, forecasting, and group process
   Sarker S, 2009, INFORM SYST RES, V20, P440, DOI 10.1287/isre.1090.0241
   Schirrmacher A., 2018, UK AC INF SYST UKAIS, P344
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shah V, 2008, AGILE 2008, PROCEEDINGS, P490, DOI 10.1109/Agile.2008.86
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Torrecilla-Salinas CJ, 2019, INFORM TECHNOL MANAG, V20, P9, DOI 10.1007/s10799-018-0290-7
   van Oosterhout M., 2005, ASSESSING BUSINESS A, P275
   van Zolingen SJ, 2003, TECHNOL FORECAST SOC, V70, P317, DOI 10.1016/S0040-1625(02)00202-0
   VersionOne CollabNet,, 2019, 13 ANN STAT AG REP
   Vijayasarathy L, 2008, AGILE SOFTWARE DEV S, P1
   Vijayasarathy L, 2012, INFORM SOFTWARE TECH, V54, P137, DOI 10.1016/j.infsof.2011.08.003
   VOGEL W., 2018, Logistics Research, V11, P1, DOI [10.23773/2018_7, DOI 10.23773/2018_7]
   von der Gracht H, 2009, WILL SUPPLY CHAINS E
   Wong S, 1999, P P 4 ANN INT C IND, P1
   WOUDENBERG F, 1991, TECHNOL FORECAST SOC, V40, P131, DOI 10.1016/0040-1625(91)90002-W
   Yusuf YY, 1999, INT J PROD ECON, V62, P33, DOI 10.1016/S0925-5273(98)00219-9
   Zehler T., 2016, AGIL, P1
   Zielske M, 2020, P INT AC C TRANSP LO, P40
   Zielske M, 2020, INT J INNOV TECHNOL, V17, DOI 10.1142/S021987702050042X
NR 112
TC 13
Z9 13
U1 1
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2021
VL 177
AR 110950
DI 10.1016/j.jss.2021.110950
EA MAR 2021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RO9JQ
UT WOS:000641355800008
DA 2024-07-18
ER

PT J
AU Vayghan, LA
   Saied, MA
   Toeroe, M
   Khendek, F
AF Vayghan, Leila Abdollahi
   Saied, Mohamed Aymen
   Toeroe, Maria
   Khendek, Ferhat
TI A Kubernetes controller for managing the availability of elastic
   microservice based stateful applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservices; Containers; Kubernetes; Failure; Availability; Elasticity
AB The architectural style of microservices has been gaining popularity in recent years. In this architectural style, small and loosely coupled modules are deployed and scaled independently to compose cloud-native applications. Carrier-grade service providers are migrating their legacy applications to a microservice based architecture running on Kubernetes which is an open source platform for orchestrating containerized microservice based applications. However, in this migration, service availability remains a concern. Service availability is measured as the percentage of time the service is provisioned. High Availability (HA) is achieved when the service is available at least 99.999% of the time. In this paper, we identify possible architectures for deploying stateful microservice based applications with Kubernetes and evaluate Kubernetes from the perspective of availability it provides for its managed applications. The results of our experiments show that the repair actions of Kubernetes cannot satisfy HA requirements, and in some cases cannot guarantee service recovery. Therefore, we propose an HA State Controller which integrates with Kubernetes and allows for application state replication and automatic service redirection to the healthy microservice instances by enabling service recovery in addition to the repair actions of Kubernetes. Based on experiments we evaluate our solution and compare the different architectures from the perspective of availability and scaling overhead. The results of our investigations show that our solution can improve the recovery time of stateful microservice based applications by 50%. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Vayghan, Leila Abdollahi; Khendek, Ferhat] Concordia Univ, Engn & Comp Sci, Montreal, PQ, Canada.
   [Saied, Mohamed Aymen] Laval Univ, Comp Sci & Software Engn Dept, Quebec City, PQ, Canada.
   [Toeroe, Maria] Ericsson Inc, Dependable Software Serv Availabil & Fault Tolera, Montreal, PQ, Canada.
C3 Concordia University - Canada; Laval University; Ericsson
RP Khendek, F (corresponding author), Concordia Univ, Engn & Comp Sci, Montreal, PQ, Canada.
EM l_abdoll@encs.concordia.ca; mohamed-aymen.saied@ift.ulaval.ca;
   maria.toeroe@ericsson.com; ferhat.khendek@concordia.ca
OI Khendek, Ferhat/0000-0002-3337-9841; Saied, Mohamed
   Aymen/0000-0002-9488-645X
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Ericsson
FX This work has been partially supported by Natural Sciences and
   Engineering Research Council of Canada (NSERC) and Ericsson.
CR Almarimi N, 2019, APPL SOFT COMPUT, V85, DOI 10.1016/j.asoc.2019.105830
   Amaral M, 2015, 2015 IEEE 14TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P27, DOI 10.1109/NCA.2015.49
   [Anonymous], 2018, ARXIV181200300
   [Anonymous], 2020, CREATING HIGHLY AVAI
   [Anonymous], 2020, MICROSERVICES
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Chung A, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P121, DOI 10.1145/3267809.3267819
   Docker, 2020, DOCK BUILD SHIP RUN
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Kang H, 2016, INT CONF CLOUD ENG, P202, DOI 10.1109/IC2E.2016.26
   Kubernetes, 2020, Kubernetes Documentation
   Mell P, 2010, COMMUN ACM, V53, P50
   Nabi M, 2016, J NETW COMPUT APPL, V60, P54, DOI 10.1016/j.jnca.2015.11.014
   Netto H., 2019, INT J PARALLEL EMERG, V35, P1
   Network Time Protocol, 2020, NTP ORG HOM NETW TIM
   Newman S., 2015, BUILDING MICROSERVIC
   Ongaro Diego, 2014, 2014 USENIX ANN TECH, P305, DOI DOI 10.1007/0-387-34805-0_21
   Pascinski U, 2018, J GRID COMPUT, V16, P85, DOI 10.1007/s10723-017-9415-1
   Saidani I, 2019, LECT NOTES COMPUT SC, V11895, P58, DOI 10.1007/978-3-030-33702-5_5
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Shatnawi A, 2018, INT C PROGRAM COMPRE, P189, DOI 10.1145/3196321.3196349
   Taneja M, 2019, SOFTWARE PRACT EXPER, V49, P1055, DOI 10.1002/spe.2704
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Toeroe M., 2012, Service Availability: Principles and Practice, VFirst
   Vayghan L.A., 2019, ARXIV PREPRINT ARXIV
   Vayghan LA, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P176, DOI 10.1109/QRS.2019.00034
   VideoLan Client (VLC), 2020, VLC OFF SIT FREE MUL
   Zhong ZH, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3378447
NR 30
TC 24
Z9 26
U1 3
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2021
VL 175
AR 110924
DI 10.1016/j.jss.2021.110924
EA FEB 2021
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QO4FV
UT WOS:000623099500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, JY
   Xu, L
   Liu, YQ
   Zhang, XY
AF Lin, Junyu
   Xu, Lei
   Liu, Yingqi
   Zhang, Xiangyu
TI Black-box adversarial sample generation based on differential evolution
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Adversarial samples; Differential evolution; Black-box testing; Deep
   Neural Network
AB Deep Neural Networks (DNNs) are being used in various daily tasks such as object detection, speech processing, and machine translation. However, it is known that DNNs suffer from robustness problems - perturbed inputs called adversarial samples leading to misbehaviors of DNNs. In this paper, we propose a black-box technique called Black-box Momentum Iterative Fast Gradient Sign Method (BMI-FGSM) to test the robustness of DNN models. The technique does not require any knowledge of the structure or weights of the target DNN. Compared to existing white-box testing techniques that require accessing model internal information such as gradients, our technique approximates gradients through Differential Evolution and uses approximated gradients to construct adversarial samples. Experimental results show that our technique can achieve 100% success in generating adversarial samples to trigger misclassification, and over 95% success in generating samples to trigger misclassification to a specific target output label. It also demonstrates better perturbation distance and better transferability. Compared to the state-of-the-art black-box technique, our technique is more efficient. Furthermore, we conduct testing on the commercial Aliyun API and successfully trigger its misbehavior within a limited number of queries, demonstrating the feasibility of real-world black-box attack. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Lin, Junyu; Xu, Lei] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Lin, Junyu; Xu, Lei] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
   [Liu, Yingqi; Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Nanjing University; Nanjing University; Purdue University System; Purdue
   University
RP Xu, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Xu, L (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
EM xlei@nju.edu.cn
RI xiangyu, zhang/AAQ-6550-2020
OI xiangyu, zhang/0000-0002-4858-5429
FU NSFC [61832009]; NSF [1901242, 1910300]; ONR [N000141410468,
   N000141712947]; IARPA [TrojAI W911NF-19-S-0012]; Sandia National Lab
   [1701331]
FX We thank the anonymous reviewers for their constructive comments. This
   research was supported, in part by NSFC 61832009, NSF 1901242 and
   1910300, ONR N000141410468 and N000141712947, IARPA TrojAI
   W911NF-19-S-0012, Sandia National Lab under award 1701331. Any opinions,
   findings, and conclusions in this paper are those of the authors only
   and do not necessarily reflect the views of our sponsors.
CR Alzantot M, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1111, DOI 10.1145/3321707.3321749
   [Anonymous], 2017, ARXIV
   [Anonymous], 2015, NATURE, DOI [DOI 10.1038/NATURE14539, 10.1038/nature14539]
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bengio S, 2016, ARXIV
   Bojarski Mariusz, 2016, arXiv
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen PY, 2017, P 10 ACM WORKSH ART, P15, DOI [10.1145/3128572.3140448, DOI 10.1145/3128572.3140448]
   Cheng M., 2019, 7 INT C LEARN REPR
   Das S, 2011, IEEE T EVOLUT COMPUT, V15, P4, DOI 10.1109/TEVC.2010.2059031
   Das S, 2009, IEEE T EVOLUT COMPUT, V13, P526, DOI 10.1109/TEVC.2008.2009457
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Eykholt K, 2018, PROC CVPR IEEE, P1625, DOI 10.1109/CVPR.2018.00175
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Goodfellow R, 2015, OIL AND GAS PIPELINES: INTEGRITY AND SAFETY HANDBOOK, P3
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Ilyas A., 2019, 7 INT C LEARN REPR
   Ilyas A., 2018, PR MACH LEARN RES, P2137
   Krizhevsky A., 2009, Tech. Rep.
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lin M, 2014, PUBLIC HEALTH NUTR, V17, P2029, DOI [10.1109/PLASMA.2013.6634954, 10.1017/S1368980013002176]
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Madry A., 2018, ARXIV
   Moosavi-Dezfooli SM, 2017, PROC CVPR IEEE, P86, DOI 10.1109/CVPR.2017.17
   Narodytska N, 2017, IEEE COMPUT SOC CONF, P1310, DOI 10.1109/CVPRW.2017.172
   Odena A., 2018, ARXIV PREPRINT ARXIV
   Papernot N, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P506, DOI 10.1145/3052973.3053009
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Polyak BT., 1964, USSR Computational Mathematics and Mathematical Physics, V4, P1
   Rossi L., 2019, ARXIV191202316
   Sak H, 2015, 16TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION (INTERSPEECH 2015), VOLS 1-5, P1468
   Sharif M, 2019, ACM T PRIV SECUR, V22, DOI 10.1145/3317611
   Simonyan K., 2015, INT C LEARN REPR
   Springenberg J.T., 2014, STRIVING SIMPLICITY
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Su JW, 2019, IEEE T EVOLUT COMPUT, V23, P828, DOI 10.1109/TEVC.2019.2890858
   Sun Y., 2018, Testing deep neural networks
   Suya Fnu, 2019, ARXIV190807000
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tramer F, 2018, 6 INT C LEARNING REP
   Wang J, 2018, ENVIRON TECHNOL, V39, P3055, DOI 10.1080/09593330.2017.1371797
   Wang TC, 2018, PROC CVPR IEEE, P8798, DOI 10.1109/CVPR.2018.00917
   Zhang JQ, 2009, IEEE T EVOLUT COMPUT, V13, P945, DOI 10.1109/TEVC.2009.2014613
NR 48
TC 23
Z9 24
U1 1
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2020
VL 170
AR 110767
DI 10.1016/j.jss.2020.110767
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OC7RN
UT WOS:000579355100010
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Smiari, P
   Bibi, S
   Feitosa, D
AF Smiari, Paraskevi
   Bibi, Stamatia
   Feitosa, Daniel
TI Examining the reuse potentials of IoT application frameworks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE IoT applications; Reusability; Black-box reuse; White-box reuse effort
   estimation
ID SOFTWARE REUSE; METRICS; REUSABILITY; PRODUCTIVITY; PLATFORM; QUALITY
AB The major challenge that a developer confronts when building IoT systems is the management of a plethora of technologies implemented with various constraints, from different manufacturers, that at the end need to cooperate. In this paper we argue that developers can benefit from IoT frameworks by reusing their components so as to build in less time and effort IoT systems that can easily integrate new technologies. In order to explore the reuse opportunities offered by IoT frameworks we have performed a case study and analyzed 503 components reused by 35 IoT projects. We examined (a) the types of functionality that are most facilitated for reuse (b) the reuse strategy that is most adopted (c) the quality of the reused components. The results of the case study suggest that the main functionality reused is the one related to the Device Management layer and that Black-box reuse is the main type. Moreover, the quality of the reused components is improved compared to the rest of the components built from scratch. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Smiari, Paraskevi; Bibi, Stamatia] Univ Western Macedonia, Dept Elect & Comp Engn, Kozani 50100, Greece.
   [Feitosa, Daniel] Univ Groningen, Data Res Ctr, Groningen, Netherlands.
C3 University of Western Macedonia; University of Groningen
RP Bibi, S (corresponding author), Univ Western Macedonia, Dept Elect & Comp Engn, Kozani 50100, Greece.
EM psmiari@uowm.gr; sbibi@uowm.gr; d.feitosa@rug.nl
RI Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X
FU European Union; Greek national funds through the Operational Program
   Competitiveness, Entrepreneurship, and Innovation [T1EDK-04873]
FX This research was co-funded by the European Union and Greek national
   funds through the Operational Program Competitiveness, Entrepreneurship,
   and Innovation, grant number T1EDK-04873
CR Aly M, 2018, IEEE INT CONF SERV, P113, DOI 10.1109/SOCA.2018.00024
   Ampatzoglou A., 2018, INT C SOFTW REUS
   Ampatzoglou A, 2011, J SYST SOFTWARE, V84, P2265, DOI 10.1016/j.jss.2011.06.047
   Ani Z.C., 2017, Journal of Telecommunication, Electronic and Computer Engineering (JTEC), V9, P111
   [Anonymous], INT THINGS REF MOD W
   Arvanitou EM, 2016, INFORM SOFTWARE TECH, V72, P110, DOI 10.1016/j.infsof.2015.12.010
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bibi S, 2010, J SOFTW MAINT EVOL-R, V22, P121, DOI [10.1002/smr.451, 10.1002/spip.418]
   Bröring A, 2017, IEEE SOFTWARE, V34, P54, DOI 10.1109/MS.2017.2
   Chaturvedi S, 2017, P IEEE INT C E-SCI, P403, DOI 10.1109/eScience.2017.54
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ciccozzi F., 2016, INT S INT DISTR COMP
   Dorofeev K., 2017, 2017 22 IEEE INT C E
   Feitosa D, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110618
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Fremantle P., 2015, WSO2
   GAFFNEY JE, 1989, INFORM SOFTWARE TECH, V31, P258, DOI 10.1016/0950-5849(89)90005-0
   Gui G., 2006, P 5 INT WORKSH MIN S, P18
   Gupta A, 2010, J SOFTW MAINT EVOL-R, V22, P359, DOI 10.1002/smr.459
   Guth J., 2018, Internet of Everything, P81, DOI [DOI 10.1007/978-981-10-5861-5_4, 10.1007/978-981-10-5861-5_4]
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Hottger R., 2018, SOFTW ENG WORKSH
   Jatain A., 2013, INT J COMPUT APPL, V68
   Ji Eun Kim, 2012, Proceedings of the Eighth International Conference on Intelligent Environments (IE 2012), P206, DOI 10.1109/IE.2012.57
   Katasonov A, 2008, ICINCO 2008: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATICS IN CONTROL, AUTOMATION AND ROBOTICS, VOL ICSO, P169
   Kessel M., 2018, 2018 IEEE ACM 4 INT
   Kovatsch M., 2014, 2014 INT C INT THING
   Krco S, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P79, DOI 10.1109/WF-IoT.2014.6803124
   Lazarescu M.T., 2014, Internet of Things, P169
   Leiba B, 2012, IEEE INTERNET COMPUT, V16, P74, DOI 10.1109/MIC.2012.11
   Levina AI, 2017, 2017 EUROPEAN CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (EECS), P351, DOI 10.1109/EECS.2017.72
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Morgan L., 2007, IFIP INT C OP SOURC
   Neagu M, 2016, DIS MARKERS, V2016, P1, DOI 10.1155/2016/4068252
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Osbeck J., 2011, P ANN M N AM FUZZY I, P1
   Padhy N, 2018, COMPUT ELECTR ENG, V69, P653, DOI 10.1016/j.compeleceng.2017.11.022
   Papamichail M., 2018, 2018 IEEE WORKSH MAC
   Paschali ME, 2017, J SYST SOFTWARE, V134, P211, DOI 10.1016/j.jss.2017.09.009
   Pessoa T.Q., 2017, 2017 IEEE 9 LAT AM C, P1
   Podgurski A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P286, DOI 10.1145/152388.152392
   Prakash BVA, 2012, PROC TECH, V4, P384, DOI 10.1016/j.protcy.2012.05.059
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   Raemaekers S., 2012, 6 INT WORKSH SOFTW Q
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Schwittek W., 2013, Component-Based Software Engineering, P75, DOI DOI 10.1145/2465449
   Serna M. Angeles, 2015, 2015 IEEE Tenth International Conference on Intelligent Sensors, Sensor Networks and Information Processing (ISSNIP), P1, DOI 10.1109/ISSNIP.2015.7106946
   Shani U., 2015, 2015 ANN IEEE SYST C
   Smiari P, 2019, LECT NOTES COMPUT SC, V11602, P232, DOI 10.1007/978-3-030-22888-0_16
   Smiari P, 2018, EUROMICRO CONF PROC, P111, DOI 10.1109/SEAA.2018.00027
   Smirek L, 2016, PROCEDIA COMPUT SCI, V98, P107, DOI 10.1016/j.procs.2016.09.018
   Souza Couto ChristianMarlon., 2018, P 17 BRAZILIAN S SOF, P11, DOI DOI 10.1145/3275245.3275247
   Tanganelli G., 2015, 2015 IEEE 2 WORLD FO
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Tran V., 1997, P 8 IEEE INT WORKSH
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang G., 1999, IEEE COMPUTER    JUL, P71
   Wangoo D.P., 2018, CLASSIFICATION BASED
   Weibing Chen, 2008, Software Process: Improvement and Practice, V13, P89, DOI 10.1002/spip.361
   Ye Y., 2000, ACM SIGSOFT SOFTWARE, V25
   Yelamarthi K., 2017, WIRELESS COMMUNICATI
   Yu J., 2007, P 16 INT C WORLD WID
   Zamfir M, 2016, LECT NOTES BUS INF P, V247, P522, DOI 10.1007/978-3-319-32689-4_40
   Zanella A, 2014, IEEE INTERNET THINGS, V1, P22, DOI 10.1109/JIOT.2014.2306328
   Zhu H., 2005, IRI 2005 IEEE INT C
   Zimmermann A., 2015, 2015 IEEE 19 INT ENT
NR 69
TC 4
Z9 4
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2020
VL 169
AR 110706
DI 10.1016/j.jss.2020.110706
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NL6FO
UT WOS:000567509300018
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, YL
   Wang, JJ
   Yang, Y
   Wang, Q
AF Li, Yingling
   Wang, Junjie
   Yang, Yun
   Wang, Qing
TI An extensive study of class-level and method-level test case selection
   for continuous integration
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Continuous integration; Test case selection; Program dependencies;
   Class-level test case selection; Method-level test case selection;
   Dynamic execution rules
AB Continuous Integration (CI) is an important practice in agile development. With the growth of integration system, running all tests to verify the quality of submitted code, is clearly uneconomical. This paper aims at selecting a proper test subset for continuous integration so as to reduce test cost as much as possible without sacrificing quality. We first propose a static test case selection framework Sapient which aims at selecting a precise test subset towards fully covering all changed code and affected code. There are four major steps: locate changes, build dependency graphs, identify related tests by searching dependency graphs, and extend tests. Based on Sapient, we then develop a class-level test case selection approach FEST and a method-level approach MEST. FEST captures the class-level dependencies, especially the hidden references, which facilitates the modeling of full dependency relations at the class level. MEST combines two dynamic execution rules (i.e., dynamic invocation in reflection and dynamic binding in inheritance) with static dependencies to support building the precise method-level dependencies. Evaluation is conducted on 18 open source projects with 261 continuous integration versions from Eclipse and Apache communities. Results show that both FEST and MEST can detect almost all faults of two baselines (i.e., actual CI testing and ClassSRTS), and find new faults compared with actual CI testing (in 25% and 26% versions) and ClassSRTS (in 18% and 27% versions) respectively. Furthermore, MEST outperforms FEST in reduced test size, fault detection efficiency and test cost, indicating method-level test case selection can be more effective than class-level selection. This study can further speed up the feedback and improve the fault detection efficiency of CI testing, and has good application prospects for the CI testing in large-scale and complex systems. (C) 2020 Published by Elsevier Inc.
C1 [Li, Yingling] Southwest Minzu Univ, Sch Comp Sci & Technol, Chengdu, Sichuan, Peoples R China.
   [Wang, Junjie; Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100089, Peoples R China.
   [Wang, Qing] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100089, Peoples R China.
   [Wang, Junjie; Wang, Qing] Univ Chinese Acad Sci, Beijing 100089, Peoples R China.
   [Yang, Yun] Anhui Univ, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
   [Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic, Australia.
C3 Southwest Minzu University; Chinese Academy of Sciences; Institute of
   Software, CAS; Chinese Academy of Sciences; Institute of Software, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Anhui University; Swinburne University of Technology
RP Wang, Q (corresponding author), Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100089, Peoples R China.; Wang, Q (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100089, Peoples R China.; Wang, Q (corresponding author), Univ Chinese Acad Sci, Beijing 100089, Peoples R China.
EM wq@itechs.iscas.ac.cn
RI wang, qi/ITT-9652-2023; junjie, wang/JXM-3649-2024
FU National Key Research and Development Program of China [2018YFB1403400];
   Fundamental Research Funds for the Central Universities, Southwest Minzu
   University [2020NYBPY04]; Natural Science Foundation of China [61602450,
   61432001]; Australian Research Council Discovery Project [DP180100212];
   Sichuan science and technology project [2019YJ0252]
FX This work is supported by the National Key Research and Development
   Program of China [grant number 2018YFB1403400], the Fundamental Research
   Funds for the Central Universities, Southwest Minzu University [grant
   number 2020NYBPY04], Natural Science Foundation of China [grant numbers
   61602450, 61432001]; and is partly supported by Australian Research
   Council Discovery Project [grant number DP180100212] and Sichuan science
   and technology project [grant number 2019YJ0252].
CR [Anonymous], 1991, OBJECT ORIENTED DESI
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 1997, Object-oriented software construction
   Beszédes A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P46, DOI 10.1109/ICSM.2012.6405252
   Blondeau V, 2017, SOFTWARE QUAL J, V25, P1203, DOI 10.1007/s11219-016-9328-4
   Celik A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P809, DOI 10.1145/3106237.3106297
   Coppin B., 2004, Artificial intelligence illuminated
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Ekelund ED, 2015, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSM.2015.7332496
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engstrom E., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P367, DOI 10.1109/ICST.2011.27
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Jiang B, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P441, DOI 10.1109/QRS.2016.66
   Knauss E, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P19, DOI 10.1109/RCoSE.2015.11
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Kwon JH, 2017, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2017.22
   Kyung CM, 2011, ENERGY-AWARE SYSTEM DESIGN: ALGORITHMS AND ARCHITECTURES, P1, DOI 10.1007/978-94-007-1679-7_1
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Legunsen O, 2017, IEEE INT CONF AUTOM, P949, DOI 10.1109/ASE.2017.8115710
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Li Y, 2019, INT CONF MACH LEARN, P49, DOI 10.1109/icmlc48188.2019.8949318
   Li YL, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P350, DOI 10.1109/QRS.2019.00052
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2016, PROC IEEE INT CONF S, P568, DOI 10.1109/ICSME.2016.77
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Mondal D, 2015, IEEE ICST WORKSHOP
   Orso A., 2004, Software Engineering Notes, V29, P241, DOI 10.1145/1041685.1029928
   Parsai A, 2014, LECT NOTES BUS INF P, V199, P166
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Schermann G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Shi A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360613
   Shi A, 2017, PROC INT CONF SOFTW, P689, DOI 10.1109/ICSE.2017.69
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Vahabzadeh A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P210, DOI 10.1145/3180155.3180203
   Vasic M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P848, DOI 10.1145/3106237.3117763
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang KY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P233, DOI 10.1145/3180155.3180254
   Wikstrand G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P299, DOI 10.1109/ICST.2009.42
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
NR 49
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2020
VL 167
AR 110614
DI 10.1016/j.jss.2020.110614
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LX9TB
UT WOS:000540166800013
DA 2024-07-18
ER

PT J
AU Higo, Y
   Hayashi, S
   Kusumoto, S
AF Higo, Yoshiki
   Hayashi, Shinpei
   Kusumoto, Shinji
TI On tracking Java methods with Git mechanisms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mining software repositories; Source code analysis; Tracking Java
   methods
ID CODE; REFACTORINGS; CLONES
AB Method-level historical information is useful in various research on mining software repositories such as fault-prone module detection or evolutionary coupling identification. An existing technique named Historage converts a Git repository of a Java project to a finer-grained one. In a finer-grained repository, each Java method exists as a single file. Treating Java methods as files has an advantage, which is that Java methods can be tracked with Git mechanisms. The biggest benefit of tracking methods with Git mechanisms is that it can easily connect with any other tools and techniques build on Git infrastructure. However, Historage's tracking has an issue of accuracy, especially on small methods. More concretely, in the case that a small method is renamed or moved to another class, Historage has a limited capability to track the method. In this paper, we propose a new technique, FinerGit, to improve the trackability of Java methods with Git mechanisms. We implement FinerGit as a system and apply it to 182 open source software projects, which include 1,768K methods in total. The experimental results show that our tool has a higher capability of tracking methods in the case that methods are renamed or moved to other classes. (C) 2020 The Author(s). Published by Elsevier Inc.
C1 [Higo, Yoshiki; Kusumoto, Shinji] Osaka Univ, Grad Sch Informat Sci & Technol, Yamadaoka 1-5, Suita, Osaka 5650871, Japan.
   [Hayashi, Shinpei] Tokyo Inst Technol, Sch Comp, Meguro Ku, Ookayama 2-12-1-W8 71, Tokyo 1528550, Japan.
C3 Osaka University; Tokyo Institute of Technology
RP Higo, Y (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, Yamadaoka 1-5, Suita, Osaka 5650871, Japan.
EM higo@ist.osaka-u.ac.jp; hayashi@c.titech.ac.jp;
   kusumoto@ist.osaka-u.ac.jp
OI Hayashi, Shinpei/0000-0001-7988-7772; Higo, Yoshiki/0000-0002-8278-8975
FU JSPS KAKENHI [JP17H01725, JP18K11238]
FX This work was supported by JSPS KAKENHI grant number JP17H01725 and
   JP18K11238.
CR [Anonymous], IWESEP 11
   [Anonymous], 2014, REQUIR ENG
   [Anonymous], 32 INT C SOFTW MAINT
   [Anonymous], P 2 INT C BIG DAT CL
   [Anonymous], 2014, P 11 WORKING C MININ
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   de Oliveira MC, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P120, DOI 10.1109/SBES.2015.16
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Germans DM, 2019, EMPIR SOFTW ENG, V24, P2725, DOI 10.1007/s10664-019-09704-x
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hata H., 2011, Proc. 12th Int'l Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, P96
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kashiwabara Y, 2015, IEICE T INF SYST, VE98D, P627, DOI 10.1587/transinf.2014EDP7276
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kim S, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P143
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lu HH, 2010, MOLECULAR ENVIRONMENTAL SOIL SCIENCE AT THE INTERFACES IN THE EARTH'S CRITICAL ZONE, P325, DOI 10.1007/978-3-642-05297-2_95
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   Milea NA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P86, DOI 10.1145/2635868.2635926
   Prete K, 2010, PROC IEEE INT CONF S
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Yamamori A, 2017, P INT COMP SOFTW APP, P128, DOI 10.1109/COMPSAC.2017.79
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
NR 38
TC 15
Z9 17
U1 3
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110571
DI 10.1016/j.jss.2020.110571
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LJ5DR
UT WOS:000530186500008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Cheng, HY
   Zhong, M
   Wang, J
AF Cheng, Huanyu
   Zhong, Ming
   Wang, Jian
TI Diversified keyword search based web service composition
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Diversification; Service composition; Keyword search; Web service;
   Quality of service
AB To assist system engineers in efficiently building service-based software systems, the keyword search based service composition approach on service connection graphs (scgraphs) has been proposed recently. However, due to the ambiguity of keywords, a keyword query may represent a bunch of different user requirements. Thus the current approach that only returns the composition with the optimal Quality of Service (QoS) cannot guarantee to hit the spot. In this paper, in order to satisfy the various possible requirements underlying a given keyword query, we formally introduce the top-k diverse service composition problem, and present a novel diversified keyword search approach on scgraphs to address it. Specifically, we firstly propose an All-Then-Diversify (ATD) algorithm that enumerates all potential compositions by searching a scgraph and then derives the top-k diverse subsets by deriving the maximal independent sets of a similarity graph. Then, due to the possibly large number of potential compositions, we present a Pop-And-Diversify (PAD) algorithm that only maintains a similarity graph of the top compositions that have been found so far during the search and computes its maximal independent sets incrementally until convergence, thereby reducing unnecessary computation overheads. Moreover, we propose two composition similarity measurements w.r.t. the categories or descriptions of services respectively. Lastly, the experimental results on ProgrammableWeb.com demonstrate that, our approach outperforms another state-of-the-art composition diversification approach on both metrics of density and redundancy, and meanwhile, improves the efficiency of diversification significantly. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Cheng, Huanyu; Zhong, Ming; Wang, Jian] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
C3 Wuhan University
RP Zhong, M (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
EM chy@whu.edu.cn; clock@whu.edu.cn; jianwang@whu.edu.cn
RI Zhong, Ming/AAN-7717-2021
OI Zhong, Ming/0000-0001-9376-818X
FU National Key Research and Development Program of China [2017YFB1400602];
   National Natural Science Foundation of China [61202036]; Natural Science
   Foundation of Hubei Province [2018CFB616]
FX This work was supported by the National Key Research and Development
   Program of China (no. 2017YFB1400602), National Natural Science
   Foundation of China (no. 61202036) and Natural Science Foundation of
   Hubei Province (no. 2018CFB616).
CR A-Masri E, 2007, IEEE IC COMP COM NET, P529
   Agrawal Rakesh, 2009, P 2 ACM INT C WEB SE, P5, DOI DOI 10.1145/1498759.1498766
   Al-Masri E., 2007, P 16 INT C WORLD WID, P1257, DOI DOI 10.1145/1242572.1242795
   Alho P, 2015, J SYST SOFTWARE, V105, P1, DOI 10.1016/j.jss.2015.03.041
   Aznag Mustapha, 2013, International Journal of Advanced Computer Science and Applications, V4, P283
   Aznag Mustapha, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P19, DOI 10.1007/978-3-642-40651-5_3
   Aznag M, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P153, DOI 10.1109/ICWS.2014.33
   Bhalotia G, 2002, PROC INT CONF DATA, P431, DOI 10.1109/ICDE.2002.994756
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Capannini G, 2011, PROC VLDB ENDOW, V4, P451, DOI 10.14778/1988776.1988781
   Demidova E, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P331
   Diac P, 2017, INT SYMP SYMB NUMERI, P284, DOI 10.1109/SYNASC.2017.00053
   Dojchinovski Milan, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P34, DOI 10.1007/978-3-642-35176-1_3
   Feng ZY, 2015, COMPUT J, V58, P1293, DOI 10.1093/comjnl/bxu080
   Fraternali P., 2012, SIGMOD
   Golenberg K., 2008, SIGMOD Conference, P927
   He H., 2007, ACM SIGMOD INT C MAN, P316
   He Q, 2017, IEEE INT CONF CLOUD, P74, DOI 10.1109/CLOUD.2017.124
   He Q, 2017, IEEE T SOFTWARE ENG, V43, P658, DOI 10.1109/TSE.2016.2624293
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Hoffmann J, 2007, MANAG TECHNOL SER, P137
   Hugo Haas A. B., 2004, WEB SERVICES GLOSSAR
   Kacholia Varun., 2005, Bidirectional expansion for keyword search on graph databases, P505
   Kang GS, 2016, IEEE T SERV COMPUT, V9, P566, DOI 10.1109/TSC.2015.2415807
   Keman Huang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P552, DOI 10.1109/ICWS.2012.32
   Kil H, 2009, WORLD WIDE WEB, V12, P321, DOI 10.1007/s11280-009-0064-6
   Klusch M, 2009, J WEB SEMANT, V7, P121, DOI 10.1016/j.websem.2008.10.001
   Kuster U., 2007, P 16 INT C WORLD WID, P1033
   Lyu SX, 2014, IEEE INT CONGR BIG, P374, DOI 10.1109/BigData.Congress.2014.62
   Mei Q., 2010, KDD, P1009
   Naim H, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P73, DOI 10.1109/ICWS.2016.19
   Nam H., 2016, 13 IEEE INT C SERV C, P21
   Ni YY, 2016, IEEE T AUTOM SCI ENG, V13, P579, DOI 10.1109/TASE.2015.2466691
   Pistore M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1252
   Psiuk M, 2015, J SYST SOFTWARE, V110, P101, DOI 10.1016/j.jss.2015.08.015
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Vee E, 2008, PROC INT CONF DATA, P228, DOI 10.1109/ICDE.2008.4497431
   Wagner F, 2016, IEEE T SERV COMPUT, V9, P277, DOI 10.1109/TSC.2013.2295791
   Wang Y., 2017, IEEE T SERV COMPUT, V40, P461
   Yu Cong., 2009, EDBT
   Zhong M, 2018, INT C PATT RECOG, P2166, DOI 10.1109/ICPR.2018.8546155
NR 41
TC 10
Z9 11
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2020
VL 163
AR 110540
DI 10.1016/j.jss.2020.110540
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT2WS
UT WOS:000518876900011
DA 2024-07-18
ER

PT J
AU Nafi, KW
   Roy, B
   Roy, CK
   Schneider, KA
AF Nafi, Kawser Wazed
   Roy, Banani
   Roy, Chanchal K.
   Schneider, Kevin A.
TI A universal cross language software similarity detector for open source
   software categorization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE API Calls; Doc2Vec; Cross-Language software similarity detection;
   Singular value decomposition
ID CLONE DETECTION; CODE; RECOMMENDATION; MODELS
AB While there are novel approaches for detecting and categorizing similar software applications, previous research focused on detecting similarity in applications written in the same programming language and not on detecting similarity in applications written in different programming languages. Cross-language software similarity detection is inherently more challenging due to variations in language, application structures, support libraries used, and naming conventions. In this paper we propose a novel model, CroLSim, to detect similar software applications across different programming languages. We define a semantic relationship among cross-language libraries and API methods (both local and third party) using functional descriptions and a word-vector learning model. Our experiments show that CroLSim can successfully detect cross-language similar software applications, which outperforms all existing approaches (mean average precision rate of 0.65, confidence rate of 3.6, and 75% highly rated successful queries). Furthermore, we applied CroLSim to a source code repository to see whether our model can recommend cross-language source code fragments if queried directly with source code. From our experiments we found that CroLSim can recommend cross-language functional similar source code when source code is directly used as a query (average precision=0.28, recall=0.85, and F-Measure=0.40). (C) 2019 Published by Elsevier Inc.
C1 [Nafi, Kawser Wazed; Roy, Banani; Roy, Chanchal K.; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 University of Saskatchewan
RP Nafi, KW (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
EM kawser.nafi@usask.ca; banani.roy@usask.ca; chanchal.roy@usask.ca;
   kevin.schneider@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Canada First Research Excellence Fund (CFREF)
FX This research is supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC), and by a Canada First Research
   Excellence Fund (CFREF) grant coordinated by the Global Institute for
   Food Security (GIFS).
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Afgan E, 2016, NUCLEIC ACIDS RES, V44, pW3, DOI 10.1093/nar/gkw343
   [Anonymous], CRGTR894 U TOR
   [Anonymous], 2016, IEEE T SOFTW ENG
   [Anonymous], P 21 INT C SOFTW ENG
   [Anonymous], P 2006 INT WORKSH MI
   [Anonymous], P 2010 ACM IEEE INT
   [Anonymous], 25 INT C SOFTW ENG D
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2015, NATURE, DOI [DOI 10.1038/NATURE14539, 10.1038/nature14539]
   [Anonymous], THESIS
   [Anonymous], P LREC 2010 WORKSH N
   [Anonymous], P 18 ACM SIGSOFT INT
   [Anonymous], DATA SCI APPL DATA A
   [Anonymous], FDN DATA SCI
   [Anonymous], 20 INT C SOFTW ENG K
   [Anonymous], P 7 ANN INT ACM SIGI
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], P 33 INT C SOFTW ENG
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P484, DOI 10.1109/ICSM.2013.78
   BATES M, 1995, P NATL ACAD SCI USA, V92, P9977, DOI 10.1073/pnas.92.22.9977
   Bauer V, 2014, PROC IEEE INT CONF S, P491, DOI 10.1109/ICSME.2014.80
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cheng X, 2017, IEICE T INF SYST, VE100D, P273, DOI 10.1587/transinf.2016EDP7334
   Cheng X, 2016, IEEE INT CONF AUTOM, P696, DOI 10.1145/2970276.2970363
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Glorot X., 2011, P 28 INT C INT C MAC, P513
   Goff SA, 2011, FRONT PLANT SCI, V2, DOI 10.3389/fpls.2011.00034
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Jurafsky D., 2017, SPEECH LANGUAGE PROC, V3rd
   Kaiming He, 2015, 2015 IEEE International Conference on Computer Vision (ICCV). Proceedings, P1026, DOI 10.1109/ICCV.2015.123
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Le Q.V.A., 2015, TUTORIAL DEEP LEARNI
   Macgregor G, 2006, LIBR REV, V55, P291, DOI 10.1108/00242530610667558
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   MCMILLAN COLLIN., 2012, ICSE
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mizzaro S, 1998, INTERACT COMPUT, V10, P303, DOI 10.1016/S0953-5438(98)00012-5
   Nafi KW, 2018, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2018.00023
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   SMITH DL, THESIS
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Turney PD, 2010, J ARTIF INTELL RES, V37, P141, DOI 10.1613/jair.2934
   Vislayski T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P512, DOI 10.1109/SANER.2018.8330250
   Wang T, 2013, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSM.2013.35
   Weston J, 2011, IJCAI
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Young T, 2018, IEEE COMPUT INTELL M, V13, P55, DOI 10.1109/MCI.2018.2840738
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
NR 64
TC 11
Z9 11
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2020
VL 162
AR 110491
DI 10.1016/j.jss.2019.110491
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KO3DJ
UT WOS:000515427800011
DA 2024-07-18
ER

PT J
AU Barbez, A
   Khomh, F
   Guéhéneuc, YG
AF Barbez, Antoine
   Khomh, Foutse
   Gueheneuc, Yann-Gael
TI A machine-learning based ensemble method for anti-patterns detection
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software quality; Anti-patterns; Machine learning; Ensemble methods
ID IDENTIFICATION; IMPACT; SMELLS; CODE
AB Anti-patterns are poor solutions to recurring design problems. Several empirical studies have highlighted their negative impact on program comprehension, maintainability, as well as fault-proneness. A variety of detection approaches have been proposed to identify their occurrences in source code. However, these approaches can identify only a subset of the occurrences and report large numbers of false positives and misses. Furthermore, a low agreement is generally observed among different approaches. Recent studies have shown the potential of machine-learning models to improve this situation. However, such algorithms require large sets of manually-produced training-data, which often limits their application in practice.
   In this paper, we present SMAD (SMart Aggregation of Anti-patterns Detectors), a machine-learning based ensemble method to aggregate various anti-patterns detection approaches on the basis of their internal detection rules. Thus, our method uses several detection tools to produce an improved prediction from a reasonable number of training examples. We implemented SMAD for the detection of two well known anti-patterns: God Class and Feature Envy. With the results of our experiments conducted on eight java projects, we show that: (1) Our method clearly improves the so aggregated tools; (2) SMAD significantly outperforms other ensemble methods. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Barbez, Antoine; Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Concordia University -
   Canada
RP Barbez, A (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM antoine.barbez@polymtl.ca; foutse.khomh@polymtl.ca;
   yann-gael.gueheneuc@concordia.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Canada Research Chair on Patterns in Mixed-language Systems
FX This work is partly supported by the The Natural Sciences and
   Engineering Research Council of Canada (NSERC) and the Canada Research
   Chair on Patterns in Mixed-language Systems.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 2005, P C HUM LANG TECHN E, DOI DOI 10.3115/1220575.1220662
   [Anonymous], IC IT AMPH
   [Anonymous], P 1 ECOOP WORKSH BUI
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Wang T., 2011, Journal of Information Computational Science, V8, P4241
   Witten IH, 2011, MOR KAUF D, P1
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
NR 44
TC 22
Z9 24
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2020
VL 161
AR 110486
DI 10.1016/j.jss.2019.110486
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM2XI
UT WOS:000513985700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sheghdara, M
   Hassine, J
AF Sheghdara, Maged
   Hassine, Jameleddine
TI Automatic retrieval and analysis of high availability scenarios from
   system execution traces: A case study on hot standby router protocol
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE High availability; Non-functional; Dynamic analysis; Trace segmentation;
   Error detection and diagnosis; Hot standby router protocol
ID PROGRAM COMPREHENSION; REQUIREMENTS
AB High availability (HA) is becoming an increasingly important requirement in a growing number of domains. It is even mandatory for critical systems, such as networking and communications, that cannot afford downtime. Such systems often monitor the state of crucial services and produce huge amounts of execution trace data, where functional and non-functional log entries are intertwined; hence they are hard to dissociate and analyze. Dynamic analysis aims at capturing and analyzing run-time behavior of a system based on its execution traces. In this paper, we apply dynamic analysis to retrieve and analyze HA scenarios from system execution traces. Our proposed approach aims to help analysts understand and report on how a highly available system detects and recovers from failures. As a proof of concept, we have selected the Hot Standby Router Protocol (HSRP) in order to demonstrate the applicability of our approach. We have evaluated empirically the effectiveness of our technique using four real-world case studies of IP networks running HSRP. Results have shown that high availability scenarios were successfully retrieved and analyzed. Moreover, results have shown that our prototype tool HAAnalyzer was able to effectively unveil high availability behavioral and temporal errors, that were seeded in the execution traces. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Sheghdara, Maged; Hassine, Jameleddine] KFUPM, Dept Informat & Comp Sci, Dhahran, Ksa, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Hassine, J (corresponding author), KFUPM, Dept Informat & Comp Sci, Dhahran, Ksa, Saudi Arabia.
EM g201304030@kfupm.edu.sa; jhassine@kfupm.edu.sa
RI Hassine, Jameleddine/E-5940-2015
OI Hassine, Jameleddine/0000-0001-8170-9860
FU Deanship of Scientific Research at KFUPM [IN131031]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at KFUPM for funding this work through
   project No. IN131031.
CR Aboussoror El-Arbi, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P480, DOI 10.1007/978-3-642-33666-9_31
   Aguilar X, 2015, LECT NOTES COMPUT SC, V9233, P70, DOI 10.1007/978-3-662-48096-0_6
   [Anonymous], 1998, 2281 RFC
   [Anonymous], 1994, Fault Tolerance in Distributed Systems
   Antoniol G., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering, P73, DOI DOI 10.1145/1107656.1107672
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   Cisco Support Community, 2009, CONF LOGG CISC IOS
   Cisco Systems, 2006, HOT STANDB ROUT PROT
   Cisco Systems, 2016, HIGH AV RED OP
   Cisco Systems, 2004, INT TECHN HDB
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Deal R., 2009, CISCO ASA CONFIGURAT, V1
   Duan C., 2006, 2006 1 INT WORKSH RE, DOI [10.1109/REV.2006.6.5-5, DOI 10.1109/REV.2006.6.5-5]
   Duan C., 2006, 2006 1 INT WORKSH RE, P5
   Fittkau F, 2015, INT C PROGRAM COMPRE, P266, DOI 10.1109/ICPC.2015.37
   GNS3 Technologies Inc, 2018, GRAPH NETW SIM GNS3
   Gokhale SS, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P47, DOI 10.1109/SEW.2005.43
   Gonzalez J, 2009, INT PARALL DISTRIB P, P501
   Günther CW, 2010, LECT NOTES BUS INF, V43, P128
   Hamou-Lhadj A, 2005, IEEE INT C ENG COMP, P559
   Hamou-Lhadj A, 2004, PROG COMPREHEN, P70, DOI 10.1109/WPC.2004.1311049
   Hamou-Lhadj A., 2003, IEEE Workshop Visualizing Software for Understanding and Analysis, P35
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hassine Jameleddine, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P54, DOI 10.1007/978-3-642-38911-5_4
   Hassine J., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P754, DOI 10.1109/ITNG.2011.133
   Hassine J., 2012, SDL 2011 INTEGRATING, P54
   Hassine J, 2018, INFORM SOFTWARE TECH, V96, P78, DOI 10.1016/j.infsof.2017.11.007
   Hassine J, 2015, SOFTW SYST MODEL, V14, P1455, DOI 10.1007/s10270-013-0382-0
   Hassine J, 2014, LECT NOTES COMPUT SC, V8769, P48, DOI 10.1007/978-3-319-11743-0_4
   I1U-T, 2012, US REQ NOT URN LANG
   Kohavi R., 1998, Machine Learning, V30, P271
   Koskimies K, 1996, PROC INT CONF SOFTW, P366, DOI 10.1109/ICSE.1996.493431
   Kugele S, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P165, DOI [10.1109/REW.2016.24, 10.1109/REW.2016.039]
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   Laprie J.C., 1992, Dependability: Basic Concepts and Terminology: In English, French, German, Italian and Japanese, P3, DOI [10.1007/978-3-7091-9170-5_1, DOI 10.1007/978-3-7091-9170-5_1]
   Maier G, 2002, PHOTONIC NETW COMMUN, V4, P251, DOI 10.1023/A:1016047527226
   Maoz S, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P153, DOI 10.1109/VLHCC.2007.27
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Marcus A, 2005, HUM FAC ER, P51
   Mohror Kathryn, 2009, Euro-Par 2009 Parallel Processing Workshops. HPPC, HeteroPar, PROPER, ROIA, UNICORE, VHPC. Revised Selected Papers, P228
   Osmari DK, 2014, 2014 27TH SIBGRAPI CONFERENCE ON GRAPHICS, PATTERNS AND IMAGES (SIBGRAPI), P165, DOI 10.1109/SIBGRAPI.2014.2
   Pavlik J, 2014, INT SYMP COMP INTELL, P459, DOI 10.1109/CINTI.2014.7028719
   Pirzadeh H, 2013, SCI COMPUT PROGRAM, V78, P1099, DOI 10.1016/j.scico.2012.11.002
   Reiss S.P., 2006, Proceedings of the 2006 ACM Symposium on Software Visualization, P125, DOI DOI 10.1145/1148493.1148512
   Reiss S.P., 2005, P 3 INT WORKSHOP DYN, P1, DOI DOI 10.1145/1082983.1083254
   Resnick R.I., 1996, A modern taxonomy of high availability
   Sultana N, 2017, 2017 2 INT C ELECT C, P1, DOI [10.1109/ICECCT.2017.8117821, DOI 10.1109/ICECCT.2017.8117821]
   Walker RJ, 1998, ACM SIGPLAN NOTICES, V33, P271, DOI 10.1145/286942.286966
   Watanabe Y., 2008, P 2008 INT WORKSHOP, P8, DOI [10.1145/1401827.1401830, DOI 10.1145/1401827.1401830]
   Winkler S, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P56, DOI 10.1109/REV.2008.4
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Zaidman A., 2006, C SOFTW MAINT REENG, p[4, 330], DOI [10.1109/CSMR.2006.46., DOI 10.1109/CSMR.2006.46]
   Zawawy H., 2012, THESIS
NR 60
TC 1
Z9 1
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2020
VL 161
AR 110490
DI 10.1016/j.jss.2019.110490
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM2XI
UT WOS:000513985700011
DA 2024-07-18
ER

PT J
AU Jiang, ZJ
   Wang, Y
   Zhong, H
   Meng, N
AF Jiang, Zijian
   Wang, Ye
   Zhong, Hao
   Meng, Na
TI Automatic method change suggestion to complement multi-entity edits
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-entity edit; Common field access; Common method invocation; Change
   suggestion
ID SOFTWARE; MAINTENANCE
AB When maintaining software, developers sometimes change multiple program entities (i.e., classes, methods, and fields) to fulfill one maintenance task. We call such complex changes multi-entity edits. Consistently and completely applying multi-entity edits can be challenging, because (1) the changes scatter in different entities and (2) the incorrectly edited code may not trigger any compilation or runtime error. This paper introduces CMSuggester, an approach to suggest complementary changes for multi-entity edits. Given a multi-entity edit that (i) adds a new field or method and (ii) modifies one or more methods to access the field or invoke the method, CMSuggester suggests other methods to co-change for the new field access or method invocation. The design of CMSuggester is motivated by our preliminary study, which reveals that co-changed methods usually access existing fields or invoke existing methods in common.
   Our evaluation shows that based on common field accesses, CMSuggester recommended method changes in 463 of 685 tasks with 70% suggestion accuracy; based on common method invocations, CMSuggester handled 557 of 692 tasks with 70% accuracy. Compared with prior work ROSE, TARMAQ, and Transitive Association Rules (TAR), CMSuggester recommended more method changes with higher accuracy. Our research can help developers correctly apply multi-entity edits. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Jiang, Zijian; Wang, Ye; Meng, Na] Virginia Polytech Inst & State Univ, Blacksburg, VA 24060 USA.
   [Zhong, Hao] Shanghai Jiao Tong Univ, Shanghai 200240, Peoples R China.
C3 Virginia Polytechnic Institute & State University; Shanghai Jiao Tong
   University
RP Meng, N (corresponding author), Virginia Polytech Inst & State Univ, Blacksburg, VA 24060 USA.
EM nm8247@vt.edu
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183; Meng, Na/0000-0002-0230-5524
FU National Key R&D Program of China [NSF-1845446]; National Natural
   Science Foundation of China [2018YFB1004800];  [61572313]
FX This work was supported by NSF-1845446, National Key R&D Program of
   China under Grant No. 2018YFB1004800, and National Natural Science
   Foundation of China under Grant No. 61572313.
CR [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Christa S, 2017, ADV INTELL SYST, V469, P759, DOI 10.1007/978-981-10-1678-3_73
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Islam MA, 2018, IEEE INT WORK C SO, P113, DOI 10.1109/SCAM.2018.00020
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Rolfsnes T, 2018, EMPIR SOFTW ENG, V23, P987, DOI 10.1007/s10664-017-9560-y
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Shirabad JS, 2003, PROC IEEE INT CONF S, P95
   Silva LL, 2015, LECT NOTES COMPUT SC, V8989, P96, DOI 10.1007/978-3-662-46734-3_3
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang Y, 2018, LECT NOTES COMPUT SC, V11293, P137, DOI 10.1007/978-3-030-04272-1_9
   Wang Y, 2018, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSME.2018.00038
   Yamauchi K, 2014, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2014.63
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zhong H, 2018, J SYST SOFTWARE, V141, P16, DOI 10.1016/j.jss.2018.03.046
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 40
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2020
VL 159
AR 110441
DI 10.1016/j.jss.2019.110441
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2JD
UT WOS:000502883100003
OA Bronze
DA 2024-07-18
ER

PT J
AU Zhang, WQ
   Cheung, SC
   Chen, ZY
   Zhou, YM
   Luo, B
AF Zhang, Weiqiang
   Cheung, Shing-Chi
   Chen, Zhenyu
   Zhou, Yuming
   Luo, Bin
TI File-level socio-technical congruence and its relationship with bug
   proneness in OSS projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Socio-technical congruence; Coordination breakdown; Software quality;
   Open source software; Developer network
ID SOFTWARE; COORDINATION; DEVELOPERS; IMPACT
AB Coordination is important in software development. Socio-Technical Congruence (STC) is proposed to measure the match between coordination requirements and actual coordination activities. The previous work of Cataldo et al. computes STC in commercial projects and finds it related to software failures. In this paper, we study the relationship between file-level STC and bug proneness in Open Source Software (OSS) projects. We apply the fundamental STC framework to the OSS data setting and present a method of computing file-level STC based on our available data. We also propose a derivative STC metric called Missing Developer Links (MDL), which is to measure the amount of coordination breakdowns. In our empirical analysis on five OSS projects, we find that MDL is more related to bug proneness than STC. Furthermore, STC or MDL can be computed based on different types of file networks and developer networks, and we find out the best file network and the best developer network via an empirical study. We also evaluate the usefulness of STC or MDL metrics in bug prediction. This work is promising to help detect coordination issues in OSS projects. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Zhang, Weiqiang; Chen, Zhenyu; Zhou, Yuming; Luo, Bin] Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing, Jiangsu, Peoples R China.
   [Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
C3 Nanjing University; Hong Kong University of Science & Technology
RP Zhang, WQ (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing, Jiangsu, Peoples R China.
EM zhangweiqiang@smail.nju.edu.cn; luobin@nju.edu.cn
RI Liu, Chenyu/KBQ-8899-2024; li, jing/KHY-5337-2024; lu,
   bin/HPE-4790-2023; zhang, weiqiang/U-7999-2017; Cheung, Shing
   Chi/U-5882-2018
OI Cheung, Shing Chi/0000-0002-3508-7172
FU National Natural Science Foundation of China [61772014, 61832009,
   61802171]
FX The work is supported in part by the National Natural Science Foundation
   of China (61772014, 61832009, 61802171).
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   [Anonymous], P 1 INT WORKSH SOC C
   Bernardi ML, 2012, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2012.24
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bettenburg N, 2011, P 19 ACM SIGSOFT S 1, P376
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   BIRD C, 2006, P 2006 INT WORKSH MI, P13
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Bolici F. J., 2009, WORKSH SOC C
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   CONWAY ME, 1968, DATAMATION, V14, P28
   Damian D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P442, DOI 10.1109/ICSE.2013.6606590
   Jiang L, 2012, 2012 INT C SOFTW SYS, P160
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Kumar AR, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P63
   Kwan I., 2009, 2 INT WORKSH SOC CON
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li W, 2010, ACM SIGPLAN NOTICES, V45, P62, DOI 10.1145/1932682.1869466
   MacLean AC, 2013, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2013.6624020
   Sierra JM, 2018, INFORM SOFTWARE TECH, V94, P111, DOI 10.1016/j.infsof.2017.10.004
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Pohl M., 2008, Proceedings of the 2008 international workshop on Cooperative and human aspects of software engineering, P81
   Portillo-Rodriguez J., 2013, AGENT ARCHITECTURE W
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Smite Darja, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P190, DOI 10.1007/978-3-642-31063-8_15
   Syeed M.M., 2013, P 9 INT C OP SOURC S, P109
   Syeed M. M. Mahbubul, 2014, Journal of Software, V9, P2895, DOI 10.4304/jsw.9.11.2895-2909
   Syeed M. M. M., 2014, P INT S OP COLL OPEN
   Syeed MMM, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL ACADEMIC MINDTREK CONFERENCE, P273
   Valetto G., 2007, 4 INT WORKSH MIN SOF, P25
   Valetto G., 2008, P 1 INT WORKSH SOC C
   Wagstrom P., 2010, Academy of Management Annual Meeting Proceedings, P1, DOI [DOI 10.5465/AMBPP.2010.54500789, 10.5465/AMBPP.2010.54500789]
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang F, 2014, J SOFTW-EVOL PROC, V26, P996, DOI 10.1002/smr.1659
   Zhang T., 2013, Proceedings of the 28th annual acm symposium on applied computing, P1088, DOI DOI 10.1145/2480362.2480568
   Zhang T, 2012, P INT COMP SOFTW APP, P170, DOI 10.1109/COMPSAC.2012.27
   Zhang W, 2014, SCI CHINA INFORM SCI, V57, DOI 10.1007/s11432-013-4930-6
   Zhang WQ, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P333, DOI 10.1109/QRS.2018.00046
NR 60
TC 6
Z9 7
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2019
VL 156
BP 21
EP 40
DI 10.1016/j.jss.2019.05.030
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU5WM
UT WOS:000483658000002
DA 2024-07-18
ER

PT J
AU Gacitúa, R
   Sepúlveda, S
   Mazo, R
AF Gacitua, Ricardo
   Sepulveda, Samuel
   Mazo, Raul
TI FM-CF: A framework for classifying feature model building approaches
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Feature model; Software product lines; Framework; Classification; Models
ID QUALITY ATTRIBUTES; KNOWLEDGE
AB Software product line engineering has emerged as a prominent software engineering paradigm, as it comprises a set of core assets sharing functionality and quality attributes. Feature modelling is one of the most frequently used techniques for modelling the variability within a software product line. There are several proposals for building Feature Models which rely on semi-automated or fully automated means. Unfortunately, automatic feature model construction has been addressed from different viewpoints, so it is not easy to know which is the best approach for automating the building of variability models. In fact, there is no clarity regarding common elements, and the main differences that characterise such approaches. Additionally, the wide variety of terms used to refer to the process of building a Feature Model (e.g. synthesis, location, re-engineering, and weaving) means that approaches are varied and very heterogeneous, making them complex to understand and classify. This paper introduces FM-CF, which is a Conceptual experience-based Framework for classifying approaches for the automatic building of Feature Models. The framework considers a set of categories mainly focused on characterising some aspects, such as input sources, methods and techniques, results, and types of evaluation. A literature review of (semi-) automated Feature Model construction was performed to identify approaches for building Feature Models by (semi-)automatic means, and the main terms used by those approaches. Then the completeness of the framework was evaluated by mapping the set of dimensions and their items, and the terms extracted from the literature.
   The conceptual framework provides guidance to researchers for choosing the appropriate aspects with which to build Feature Models, and helps in the understanding and clarification of the proposed approaches. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Gacitua, Ricardo; Sepulveda, Samuel] Univ La Frontera UFRO, Dept Comp Sci & Informat, Temuco, Chile.
   [Gacitua, Ricardo; Sepulveda, Samuel] UFRO, CEIS Ctr Estudio Ingn Software, Temuco, Chile.
   [Mazo, Raul] Univ Pantheon Sorbonne, CRI, Paris, France.
   [Mazo, Raul] Univ Eafit, GiDITIC, Medellin, Colombia.
C3 Universidad EAFIT
RP Gacitúa, R (corresponding author), Univ La Frontera UFRO, Dept Comp Sci & Informat, Temuco, Chile.
EM ricardo.gacitua@ufrontera.cl; samuel.sepulveda@ufrontera.cl;
   raul.mazo@univ-paris1.fr
RI Cuevas, Samuel Sepúlveda/AAH-3760-2019; Mazo, Raul/AAT-6453-2021;
   Sepulveda, Samuel/GQY-6887-2022; Gacitua, Ricardo/F-1208-2014
OI Cuevas, Samuel Sepúlveda/0000-0002-0369-7750; Mazo,
   Raul/0000-0003-0629-1542; Gacitua, Ricardo/0000-0002-3900-2770
FU Vicerrectorla de Investigation y Postgrado, Universidad de La Frontera,
   Chile [PROY. D115-0020, PROY. DI17-0099]; Department of Ingenieria de
   sistemas, Universidad Eafit, Colombia; Centre de Recherche en
   Informatique (CRI) of the Pantheon-Sorbonne University, France
FX This study was supported by the Vicerrectorla de Investigation y
   Postgrado, Universidad de La Frontera, Chile, PROY. D115-0020, PROY.
   DI17-0099, by the Department of Ingenieria de sistemas, Universidad
   Eafit, Colombia, and by the Centre de Recherche en Informatique (CRI) of
   the Pantheon-Sorbonne University, France.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Acher M., 2011, 26 INT S APPL COMP S, P1333
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Acher M, 2010, LECT NOTES COMPUT SC, V5969, P62
   Al-Msie'Deen R., 2012, ACTES J LIGNES PROD, V2012, P15
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Andersen N., 2012, P 16 INT SOFTWARE PR, V1, P106, DOI DOI 10.1145/2362536
   [Anonymous], 4 INT WORKSH VAR MOD
   [Anonymous], 2013, P 7 INT WORKSH VAR M, DOI DOI 10.1145/2430502.2430530
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], [No title captured]
   Araar I. E., 2016, INFORMATICA, V40
   Assunçao WKG, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1303, DOI 10.1145/2739480.2754720
   Bae J, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P879, DOI 10.1109/CIT.2007.78
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P16, DOI 10.1007/978-3-642-15579-6_2
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Becan G., 2015, EMPIR SOFTW ENG, V51, DOI [10.1007/00664-014-9357-1, DOI 10.1007/00664-014-9357-1]
   Becan G, 2015, SPLC, P1, DOI [10.1145/2791060.2791068, DOI 10.1145/2791060.2791068]
   Becan G., 2014, P SPLC 14 FLOR IT 15, P112
   Bécan G, 2016, EMPIR SOFTW ENG, V21, P1794, DOI 10.1007/s10664-014-9357-1
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bragança A, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2007.17
   Brown TJ, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P52, DOI 10.1109/SPLINE.2006.1691577
   Casalanguida H., 2012, SPLC 12, V2, P10, DOI [10.1145/2364412.2364415, DOI 10.1145/2364412.2364415]
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   FEIGENBAUM EA, 1984, ANN NY ACAD SCI, V426, P91, DOI 10.1111/j.1749-6632.1984.tb16513.x
   Ferrari A., 2013, Proceedings of the 17th International Software Product Line Conference, P116, DOI [10.1145/2491627.2491634, DOI 10.1145/2491627.2491634]
   FLEUREY F, 2007, LNCS, V5002, P7, DOI DOI 10.1007/978-3-540-69073-3_2
   Frantzi K., 2000, Int. J. Digit. Libr., V3, P115
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Hamza M, 2015, INT WORK REAL ARTIF, P25, DOI 10.1109/RAISE.2015.12
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Hofman P., 2012, P 16 INT SOFTW PROD, P229
   Horcas JM, 2016, J SYST SOFTWARE, V112, P78, DOI 10.1016/j.jss.2015.11.005
   Itzik N., 2014, REVE'2014, SPLC proceedings - Volume 2: Workshops, Demonstrations, and Tools, P44, DOI DOI 10.1145/2647908.2655966
   Jarzabek S, 2006, IEE P-SOFTW, V153, P61, DOI 10.1049/ip-sen:20050008
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lee SB, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P727, DOI 10.1109/SERA.2007.58
   Li Y, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P133, DOI 10.1145/3106195.3106207
   Li Yi, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P141, DOI 10.1109/RE.2012.6345798
   Li YN, 2018, IEEE INT SYMP PARAL, P477, DOI 10.1109/BDCloud.2018.00078
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Mannion M, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P252, DOI 10.1145/3106195.3106231
   Marciuska S, 2014, LECT NOTES BUS INF P, V166, P100
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Mazo R., 2011, THESIS
   Mazo R, 2011, ENASE 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P188
   McGregor JD, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.74
   Mefteh M., 2016, MINING FEATURE MODEL
   Mefteh M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1602, DOI 10.1145/2695664.2695907
   Noorian M, 2014, INT J SOFTW ENG KNOW, V24, P1439, DOI 10.1142/S0218194014400154
   Paskevicius P, 2012, INF TECHNOL CONTROL, V41, P376, DOI 10.5755/j01.itc.41.4.1108
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rauber TW, 2015, IEEE T IND ELECTRON, V62, P637, DOI 10.1109/TIE.2014.2327589
   Riebisch Matthias, 2002, P 6 WORLD C INT DES, P1
   Robak S, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P305
   Ryssel U., 2011, P INT SOFTW PROD LIN, V2, P1, DOI [DOI 10.1145/2019136.2019141, 10.1145/2019136.2019141]
   Saba P., 2015, INT J COMPUTER SCI S, V9, P274
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   She Steven, 2012, P VARIABILITY YOU WO, P15, DOI [10.1145/2425415.2425419, DOI 10.1145/2425415.2425419]
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Tun W. P. P., 2015, P 2015 INT C FUT COM, P229
   Vacchi E, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P167, DOI 10.1145/2648511.2648529
   van den Broek P., 2012, P 16 INT SOFTW LIN C, V2, P61
   Wanderley F., 2012, 16 INT SOFTWARE PROD, V2, P18, DOI [/10.1145/2364412.2364416, DOI 10.1145/2364412.2364416]
   Wang B, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P121, DOI 10.1109/RE.2009.15
   Wang Yinglin, 2016, Journal of Shanghai Jiaotong University (Science), V21, P692, DOI 10.1007/s12204-016-1783-3
   Wang YL, 2015, PR IEEE I C PROGR IN, P332, DOI 10.1109/PIC.2015.7489864
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yang YM, 2009, WORK CONF REVERSE EN, P215, DOI 10.1109/WCRE.2009.15
   Yildirim I, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P441, DOI 10.1109/QRS-C.2017.78
   Yu DJ, 2015, ASIA PAC SOFWR ENG, P277, DOI 10.1109/APSEC.2015.22
   Zhan Z., 2018, ADV INTELL SYST COMP, V686, P93
   Zhang B., 2013, P 7 INT WORKSH VAR M, P19
   Zhou F, 2017, EXPERT SYST APPL, V89, P306, DOI 10.1016/j.eswa.2017.07.021
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 95
TC 3
Z9 3
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2019
VL 154
BP 1
EP 21
DI 10.1016/j.jss.2019.04.026
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC4NT
UT WOS:000470943300001
OA Green Published
DA 2024-07-18
ER

PT J
AU Khan, MU
   Sherin, S
   Lqbal, MZ
   Zahid, R
AF Khan, Muhammad Uzair
   Sherin, Salman
   Lqbal, Muhammad Zohaib
   Zahid, Rubab
TI Landscaping systematic mapping studies in software engineering: A
   tertiary study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Tertiary study; Systematic mapping study; Secondary study; Survey;
   Software engineering
AB Context: A number of Systematic Mapping Studies (SMSs) that cover Software Engineering (SE) are reported in literature. Tertiary studies synthesize the secondary studies to provide a holistic view of an area.
   Objectives: We synthesize SMSs in SE to provide insights into existing SE areas and to investigate the trends and quality of SMSs. Methodology: We use Systematic Literature Review protocol to analyze and map the SMSs in SE, till August 2017, to SE Body of Knowledge (SWEBOK).
   Results: We analyze 210 SMSs and results show that: (1) Software design and construction are most active areas in SE; (2) Some areas lack SMSs, including mathematical foundations, software configuration management, and SE tools; (3) The quality of SMSs is improving with time; (4) SMSs in journals have higher quality than SMSs in conferences and are cited more often; (5) Low quality in SMSs can be attributed to a lack of quality assessment in SMSs and not reporting information about the primary studies.
   Conclusion: There is a potential for more SMSs in some SE areas. A number of SMSs do not provide the required information for an SMS, which leads to a low quality score. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Khan, Muhammad Uzair; Sherin, Salman; Lqbal, Muhammad Zohaib; Zahid, Rubab] Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
RP Khan, MU (corresponding author), Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
EM uzair.khan@questlab.pk
RI Khan, Muhammad Sarwar/Q-8307-2019; Sherin, Salman/IAS-0802-2023
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Adcock R., 2009, Curriculum Guidelines for Graduate Degree Programs in Software Engineering
   [Anonymous], 2013, ENCY SYSTEMBIOL
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], DAT ATTR EFF
   Basili Victor, 1994, ENCY SOFTW ENG, P528
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brereton P., 2008, USING MAPPING STUDIE
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva F. Q., 2010, P 2010 ACM IEEE INT, P33
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   dos Santos Alinne C. C., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.42
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Fairley P. B., 2014, GUIDE SOFTWARE ENG B
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Goulao M, 2016, SOFTWARE QUAL J, V24, P601, DOI 10.1007/s11219-016-9324-8
   Guitouni A, 1998, EUR J OPER RES, V109, P501, DOI 10.1016/S0377-2217(98)00073-3
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hoda R., 2017, Information and Software Technology, V85, P60, DOI DOI 10.1016/J.INFSOF.2017.01.007
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Khan M. U., 2017, COMPUT STAND INTER, V53, P1
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kitchenham S, 2007, GUIDELINES PERFORMIN
   Myers L, 2004, ENCY STAT SCI, V15, P12
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Roberts M. P. a. H, 2008, SYSTEMATIC REV SOCIA
   Saaty T., 2009, International Journal of Services Sciences, V1, P83
   Stewart TJ, 2005, INT SER OPER RES MAN, V78, P445, DOI 10.1007/0-387-23081-5_11
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhou You, 2015, P 19 INT C EVALUATIO, P14
NR 40
TC 18
Z9 18
U1 1
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2019
VL 149
BP 396
EP 436
DI 10.1016/j.jss.2018.12.018
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HK4RW
UT WOS:000457951800019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bi, TT
   Liang, P
   Tang, A
   Yang, C
AF Bi, Tingting
   Liang, Peng
   Tang, Antony
   Yang, Chen
TI A systematic mapping study on text analysis techniques in software
   architecture
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software architecture; Text analysis technique; Systematic mapping study
ID INFORMATION; FUTURE; WORLD
AB Context Information from artifacts in each phase of the software development life cycle can potentially be mined to enhance architectural knowledge. Many text analysis techniques have been proposed for mining such artifacts. However, there is no comprehensive understanding of what artifacts these text analysis techniques analyze, what information they are able to extract or how they enhance architecting activities.
   Objective: This systematic mapping study aims to study text analysis techniques for mining architecture-related artifacts and how these techniques have been used, and to identify the benefits and limitations of these techniques and tools with respect to enhancing architecting activities.
   Method: We conducted a systematic mapping study and defined five research questions. We analyzed the results using descriptive statistics and qualitative analysis methods.
   Results: Fifty-five studies were finally selected with the following results: (1) Current text analysis research emphasizes on architectural understanding and recovery. (2) A spectrum of text analysis techniques have been used in textual architecture information analysis. (3) Five categories of benefits and three categories of limitations were identified.
   Conclusions: This study shows a steady interest in textual architecture information analysis. The results give clues for future research directions on improving architecture practice through using these text analysis techniques.
C1 [Bi, Tingting; Liang, Peng; Yang, Chen] Wuhan Univ, Sch Comp Sci, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
   [Bi, Tingting; Tang, Antony] Swinburne Univ Technol, Fac Sci Engn & Technol, Melbourne, Vic 3122, Australia.
   [Yang, Chen] IBO Technol Shenzhen Co Ltd, Shenzhen 518057, Peoples R China.
C3 Wuhan University; Swinburne University of Technology
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
EM bi_tingting@whu.edu.cn; liangp@whu.edu.cn; atang@swin.edu.au;
   c.yang@ibotech.com.cn
RI Bi, Tingting/ABC-7609-2020; peng, liang/HKE-0294-2023; Tang,
   Antony/C-2459-2009
OI Tang, Antony/0000-0002-3574-3977; Liang, Peng/0000-0002-2056-5346
FU NSFC [61472286]; China Scholarship Council
FX This work is partially sponsored by the NSFC under Grant no. 61472286.
   The authors gratefully acknowledge the financial support from the China
   Scholarship Council.
CR Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2012, Non-functional requirements in software engineering
   [Anonymous], 2006, TEXT MINING HDB ADV
   [Anonymous], 2015, SENTIC COMPUTING COM
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Babar Muhammad Ali, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.1
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Chardigny S, 2010, LECT NOTES COMPUT SC, V6285, P409, DOI 10.1007/978-3-642-15114-9_35
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Chowdhury G. G., 2010, Introduction to modern information retrieval
   Cooley R, 1997, PROC INT C TOOLS ART, P558, DOI 10.1109/TAI.1997.632303
   Cowie J, 1996, COMMUN ACM, V39, P80, DOI 10.1145/234173.234209
   Ding W, 2015, INT J SOFTW ENG KNOW, V25, P1633, DOI 10.1142/S0218194015400367
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Egyed A., 2001, P 1 INT WORKSH REQ A, P42
   Fielding RT, 2005, PROC INT CONF SOFTW, P43
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Grubb P., 2003, Software Maintenance: Concepts and Practice, V2.
   Haiduc S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P898, DOI 10.1145/2889160.2891053
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Henttonen K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P41, DOI 10.1109/WICSA.2009.5290790
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Javed Muhammad Atif, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P215, DOI 10.1109/WICSA.2014.43
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2007, P 28 INT C SOFTW ENG
   Knodel J, 2008, EMPIR SOFTW ENG, V13, P693, DOI 10.1007/s10664-008-9069-5
   Koschke R, 2002, PROC IEEE INT CONF S, P478, DOI 10.1109/ICSM.2002.1167807
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Lung C.H., 1998, PROC 3 INT SOFTWARE, P101, DOI DOI 10.1145/288408.288434
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Manevitz LM, 2002, J MACH LEARN RES, V2, P139, DOI 10.1162/15324430260185574
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   Miner G, 2012, PRACTICAL TEXT MINING AND STATISTICAL ANALYSIS FOR NON-STRUCTURED TEXT DATA APPLICATIONS, P1
   Mooney R.J., 2005, SIGKDD Explor. Newsl., V7, P3, DOI [DOI 10.1145/1089815.1089817, 10.1145/1089815.1089817]
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Postma A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P89, DOI 10.1109/WICSA.2004.1310693
   QUILICI A, 1995, PROC INT CONF SOFTW, P333, DOI 10.1145/225014.225046
   Räihä O, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P437, DOI 10.1109/ICSEA.2009.70
   Shahin Mojtaba., 2014, P 22 INT C PROGRAM C, P3
   Sheng V. S., 2008, P 14 ACM SIGKDD INT, P614, DOI DOI 10.1145/1401890.1401965
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2014, J SYST SOFTWARE, V88, P87, DOI 10.1016/j.jss.2013.09.044
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Tekinerdogan B, 2002, SPRING INT SER ENG C, V648, P143
   Vico H, 2015, ELECTRON NOTES THEOR, V314, P83, DOI 10.1016/j.entcs.2015.05.006
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   XU J, 2005, P 38 HICSS, P198
   Xu W., 2003, P 26 ANN INT ACM SIG, P267
   Yi JH, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P427, DOI 10.1109/ICDM.2003.1250949
   Zapalowski V., 2014, GROMOV HYPERBOLICITY, P14
   Zhang Wei Emma, 2016, Advanced Data Mining and Applications. 12th International Conference, ADMA 2016. Proceedings: LNAI 10086, P664, DOI 10.1007/978-3-319-49586-6_47
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 76
TC 11
Z9 11
U1 1
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2018
VL 144
BP 533
EP 558
DI 10.1016/j.jss.2018.07.055
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU6QQ
UT WOS:000445441100031
DA 2024-07-18
ER

PT J
AU Conejero, JM
   Rodríguez-Echeverría, R
   Hernández, J
   Clemente, PJ
   Ortiz-Caraballo, C
   Jurado, E
   Sánchez-Figueroa, F
AF Conejero, Jose M.
   Rodriguez-Echeverria, Roberto
   Hernandez, Juan
   Clemente, Pedro J.
   Ortiz-Caraballo, Carmen
   Jurado, Elena
   Sanchez-Figueroa, Fernando
TI Early evaluation of technical debt impact on maintainability
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Technical Debt indicator; Requirements; Modularity anomalies;
   Maintainability; Empirical evaluation
ID PRINCIPAL
AB It is widely claimed that Technical Debt is related to quality problems being often produced by poor processes, lack of verification or basic incompetence. Several techniques have been proposed to detect Technical Debt in source code, as identification of modularity violations, code smells or grime buildups. These approaches have been used to empirically demonstrate the relation among Technical Debt indicators and quality harms. However, these works are mainly focused on programming level, when the system has already been implemented. There may also be sources of Technical Debt in non-code artifacts, e.g. requirements, and its identification may provide important information to move refactoring efforts to previous stages and reduce future Technical Debt interest. This paper presents an empirical study to evaluate whether modularity anomalies at requirements level are directly related to maintainability attributes affecting systems quality and increasing, thus, system's interest. The study relies on a framework that allows the identification of modularity anomalies and its quantification by using modularity metrics. Maintainability metrics are also used to assess dynamic maintainability properties. The results obtained by both sets of metrics are pairwise compared to check whether the more modularity anomalies the system presents, the less stable and more difficult to maintain it is. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Conejero, Jose M.; Rodriguez-Echeverria, Roberto; Hernandez, Juan; Clemente, Pedro J.; Jurado, Elena; Sanchez-Figueroa, Fernando] Univ Extremadura, Quercus Software Engn Grp, Avda Univ S-N, Caceres 10071, Spain.
   [Ortiz-Caraballo, Carmen] Univ Politecn Cataluna, Escola Engn Igualada, Av Pla Massa 8, Igualada 08700, Spain.
C3 Universidad de Extremadura; Universitat Politecnica de Catalunya
RP Conejero, JM (corresponding author), Univ Extremadura, Quercus Software Engn Grp, Avda Univ S-N, Caceres 10071, Spain.
EM chemacm@unex.es; rre@unex.es; juanher@unex.es; pjclemente@unex.es;
   carmen.ortiz@eei.upc.edu; elenajur@unex.es; fernando@unex.es
RI Clemente, Pedro J./S-9162-2016; Rodriguez-Echeverria,
   Roberto/B-4964-2014; Ortiz-Caraballo, Carmen/O-5509-2016; Ortiz,
   Carmen/HTR-8652-2023; Manzano, José M. Conejero/AAF-9336-2019;
   Hernandez, Juan/L-5065-2014; Sanchez-Figueroa, Fernando/L-4978-2014
OI Rodriguez-Echeverria, Roberto/0000-0002-6545-0913; Manzano, José M.
   Conejero/0000-0003-2640-679X; Ortiz-Caraballo,
   Carmen/0000-0002-4096-4870; Hernandez, Juan/0000-0002-6343-7395;
   Sanchez-Figueroa, Fernando/0000-0002-6861-1540; Clemente, Pedro
   J./0000-0001-5795-6343
FU MINECO/FEDER, UE project [TIN2015-69957-R]; Consejeria de Economia e
   Infraestructuras/unta de Extremadura (Spain)- European Regional
   Development Fund(ERDF) [GR15098, IB16055]; Interreg V-A Espana-Portugal
   (POCTEP) 2014-2020 program [0045-4IE-4-P]
FX The authors gratefully acknowledge the support of TIN2015-69957-R
   (MINECO/FEDER, UE) project, Consejeria de Economia e
   Infraestructuras/unta de Extremadura (Spain)- European Regional
   Development Fund(ERDF)- GR15098 project and IB16055 project to the work
   presented here. This work was also partially supported by the 4IE
   project (0045-4IE-4-P) funded by the Interreg V-A Espana-Portugal
   (POCTEP) 2014-2020 program. We would like to thank A. Garcia and E.
   Figueiredo for allowing us to use the MobileMedia case study and for
   their comments and support on this work.
CR Abad ZSH, 2015, INT REQUIR ENG CONF, P230, DOI 10.1109/RE.2015.7320428
   Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Alferez Mauricio, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P779
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], AMPLE PROJECT DELIVE
   [Anonymous], AOSD ONTOLOGY 1 0 PU
   [Anonymous], SIGPLAN OOPS MESS, DOI [10.1145/157710.157715, DOI 10.1145/157710.157715]
   [Anonymous], 2014, SYST SOFTW ENG SYST
   [Anonymous], SOFTW QUAL CONTROL
   [Anonymous], CROSSCUTTING PATTERN
   [Anonymous], ACM QUEUE
   [Anonymous], DEFINING VALIDATING
   [Anonymous], R PRACTICAL GUIDE
   [Anonymous], P WORKSH ARCH CENTR
   [Anonymous], P 1 WORKSH ASP ARCH
   [Anonymous], MODELING VOLATILE CO
   [Anonymous], EVOLUTION LINUX KERN
   [Anonymous], XQUERY 1 0 XML QUERY
   [Anonymous], P INT WORKSH OP SOUR
   [Anonymous], 2014, MSR 14, DOI [DOI 10.1145/2597073.2597124, 10.1145/2597073.2597124]
   [Anonymous], SOFTWARE MAINTENANCE
   [Anonymous], CUT IT J
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Brondum J., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P7, DOI 10.1109/MTD.2012.6226003
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Conejero Jose M., 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P721
   Curtis B., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P49, DOI 10.1109/MTD.2012.6226000
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Greenwood Phil, 2007, Object-Oriented Programming. 21st European Conference, ECOOP 2007, P176
   Griffith Isaac, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P19, DOI 10.1109/MTD.2014.13
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   ISO, 2001, Stan-dard ISO/IEC 9126-1
   Izurieta Clemente, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P449
   Jacobson I., 2003, J OBJECT TECHNOL, V2, P7
   JACOBSON I., 2004, ASPECT ORIENTED SOFT
   Kang Kyo C, 1990, Technical Report
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZM, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE 2014), P119, DOI 10.1109/SYSOSE.2014.6892474
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moreira Ana., 2013, ASPECT ORIENTED REQU
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P758, DOI 10.1109/TSE.2014.2327027
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Sincero Julio., 2008, Software Product Lines, 12th International Conference, SPLC 2008, Limerick, Ireland, September 8-12, 2008, P257
   Sokal R.R., 1995, BIOMETRY PRINCIPLES, DOI DOI 10.1016/J.JIP.2003.08.007
   Vetro' Antonio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P110, DOI 10.1109/MSR.2010.5463283
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
NR 65
TC 8
Z9 8
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2018
VL 142
BP 92
EP 114
DI 10.1016/j.jss.2018.04.035
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL3LS
UT WOS:000437037200006
DA 2024-07-18
ER

PT J
AU Mårtensson, T
   Ståhl, D
   Bosch, J
AF Martensson, Torvald
   Stahl, Daniel
   Bosch, Jan
TI Enable more frequent integration of software in industry projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 43rd Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 30-SEP 01, 2017
CL Vienna, AUSTRIA
SP Univ Technol Vienna, Austrian Inst Technol, Austrian Comp Soc
DE Continuous integration; Continuous delivery; Embedded systems;
   Large-scale; Software integration
AB Based on interviews with 20 developers from two case study companies that develop large-scale software-intensive embedded systems, this paper presents twelve factors that affect how often developers commit software to the mainline. The twelve factors are grouped into four themes: "Activity planning and execution", "System thinking", "Speed" and "Confidence through test activities". Based on the interview results and a literature study we present the EMFIS model, which allows companies to explicate a representation of the organization's current situation regarding continuous integration impediments, and visualizes what the organization must focus on in order to enable more frequent integration of software. The model is used to perform an assessment of the twelve factors, where the ratings from participants representing the developers are summarized separately from ratings from participants representing the enablers (responsible for processes, development tools, test environments etc.). The EMFIS model has been validated in workshops and interviews, which in total included 46 individuals in five case study companies. The model was well received during the validation, and was appreciated for its simplicity and its ability to show differences in rating between developers and enablers.
C1 [Martensson, Torvald] Saab AB, Syst Integrat & Test, Linkoping, Sweden.
   [Stahl, Daniel] Ericsson AB, Linkoping, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Software Engn, Gothenburg, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Software Res Ctr, Gothenburg, Sweden.
C3 Saab Group; Ericsson; Chalmers University of Technology; Chalmers
   University of Technology
RP Mårtensson, T (corresponding author), Saab AB, Syst Integrat & Test, Linkoping, Sweden.
EM torvald.martensson@saabgroup.com; daniel.stahl@ericsson.com;
   jan@janbosch.com
OI Martensson, Torvald/0000-0003-1438-0182
CR [Anonymous], 2014, LNBIP, DOI DOI 10.1007/978-3-319-06862-6_27
   [Anonymous], P 2 AS PAC S INT INT
   [Anonymous], CASE CONTINUOUS DELI
   [Anonymous], 2011, CONTINUOUS DELIVERY
   [Anonymous], 2013, GUIDE PROJECT MANAGE, V5
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], AUTOM SOFTWARE ENG
   [Anonymous], 2016, REAL WORLD RES
   [Anonymous], 1979, QUASIEXPERIMENTATION
   [Anonymous], ACHIEVING TRACEABILI
   [Anonymous], PRACTICIES SCALING L
   Buchgeher G, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P231, DOI 10.1109/WICSA.2016.24
   Del Rosso C, 2006, J SOFTW MAINT EVOL-R, V18, P351, DOI 10.1002/smr.337
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fowler M., 2006, Continuous integration
   Grandy H, 2009, INFORM 2009 FOCUS LE, P2720
   Ivgutensson T., 2017, P 43 EUROMICRO C SOF, P1
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Knauss E, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P19, DOI 10.1109/RCoSE.2015.11
   Knauss E, 2015, LECT NOTES COMPUT SC, V9013, P277, DOI 10.1007/978-3-319-16101-3_20
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Lier F, 2014, ACMIEEE INT CONF HUM, P230, DOI 10.1145/2559636.2559841
   Liu DS, 2016, P IEEE I C SERV COMP, P808, DOI 10.1109/SCC.2016.112
   Mårtensson T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P10, DOI 10.1109/SEAA.2017.31
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Mårtensson T, 2016, LECT NOTES COMPUT SC, V10027, P448, DOI 10.1007/978-3-319-49094-6_30
   Messina A, 2016, LECT NOTES COMPUT SC, V9832, P223, DOI 10.1007/978-3-319-43949-5_18
   Mossige M, 2015, INFORM SOFTWARE TECH, V57, P169, DOI 10.1016/j.infsof.2014.09.009
   Mossige M, 2014, LECT NOTES COMPUT SC, V8763, P145, DOI 10.1007/978-3-662-44857-1_10
   Mossige M, 2014, LECT NOTES COMPUT SC, V8656, P25, DOI 10.1007/978-3-319-10428-7_6
   Mossige M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P489, DOI 10.1109/ICST.2013.71
   Preuveneers D, 2016, J SYST SOFTWARE, V116, P162, DOI 10.1016/j.jss.2015.12.024
   Roberts M, 2004, LECT NOTES COMPUT SC, V3092, P194
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Rosenkranz Philipp., 2015, P 2015 WORKSHOP IOT, P43
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sekitoleko N., 2014, Agile processes in software engineering and extreme programming, P46, DOI DOI 10.1007/978-3-319-06862-6_4
   Seth N, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON RECENT ADVANCES IN ENGINEERING & COMPUTATIONAL SCIENCES (RAECS)
   Soni Mitesh, 2015, 2015 IEEE International Conference on Cloud Computing in Emerging Markets (CCEM). Proceedings, P85, DOI 10.1109/CCEM.2015.29
   Sovik H, 2010, LECT NOTES BUS INF, V48, P353
   Ståhl D, 2017, J SYST SOFTWARE, V127, P150, DOI 10.1016/j.jss.2017.02.003
   Ståhl D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P270, DOI 10.1145/2889160.2889252
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Tan CH, 2007, COMMUN ACM, V50, P97, DOI 10.1145/1323688.1323715
   Tao Su, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P145, DOI 10.1007/978-3-319-03077-7_10
   Vöst S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P34, DOI [10.1109/CSED.2016.015, 10.1145/2896941.2896951]
   Vöst S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1026, DOI 10.1145/2786805.2803193
   Woehrle M, 2009, LECT NOTES COMPUT SC, V5813, P275, DOI 10.1007/978-3-642-04368-0_21
   Yüksel HM, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P741
NR 51
TC 8
Z9 8
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2018
VL 142
BP 223
EP 236
DI 10.1016/j.jss.2018.05.002
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL3LS
UT WOS:000437037200013
DA 2024-07-18
ER

PT J
AU Sauvanaud, C
   Kaâniche, M
   Kanoun, K
   Lazri, K
   Silvestre, GD
AF Sauvanaud, Carla
   Kaaniche, Mohamed
   Kanoun, Karama
   Lazri, Kahina
   Silvestre, Guthemberg Da Silva
TI Anomaly detection and diagnosis for cloud services: Practical
   experiments and lessons learned
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Anomaly detection; System monitoring; Machine learning; Fault injection;
   SLA; Diagnosis; Virtualization
AB The dependability of cloud computing services is a major concern of cloud providers. In particular, anomaly detection techniques are crucial to detect anomalous service behaviors that may lead to the violation of service level agreements (SLAs) drawn with users. This paper describes an anomaly detection system (ADS) designed to detect errors related to the erroneous behavior of the service, and SLA violations in cloud services. One major objective is to help providers to diagnose the anomalous virtual machines (VMs) on which a service is deployed as well as the type of error associated to the anomaly. Our ADS includes a system monitoring entity that collects software counters characterizing the cloud service, as well as a detection entity based on machine learning models. Additionally, a fault injection entity is integrated into the ADS for the training the machine learning models. This entity is also used to validate the ADS and to assess its anomaly detection and diagnosis performance. We validated our ADS with two case studies deployments: a NoSQL database, and a virtual IP Multimedia Subsystem developed implementing a virtual network function. Experimental results show that our ADS can achieve a high detection and diagnosis performance. (c) 2018 Elsevier Inc. All rights reserved.
C1 [Sauvanaud, Carla; Kaaniche, Mohamed; Kanoun, Karama] Univ Toulouse, CNRS, LAAS, Toulouse, France.
   [Lazri, Kahina] Orange Labs, 38 Rue Gen Leclerc, F-92130 Issy Les Moulineaux, France.
   [Silvestre, Guthemberg Da Silva] ENAC, 7 Ave Edouard Belin,CS 54005, F-31055 Toulouse 4, France.
C3 Universite de Toulouse; Centre National de la Recherche Scientifique
   (CNRS); Orange SA; Universite Federale Toulouse Midi-Pyrenees (ComUE);
   Universite de Toulouse; Ecole Nationale de l'Aviation Civile (ENAC)
RP Sauvanaud, C (corresponding author), Univ Toulouse, CNRS, LAAS, Toulouse, France.
EM Carla.Sauvanaud@laas.fr; Mohamed.Kaaniche@laas.fr;
   Karama.Kanoun@orange.com; Kahina.Lazri@orange.com;
   GuthembergDaSilva.Silvestre@enac.fr
CR Aleskerov E., 1997, Proceedings of the IEEE/IAFE 1997 Computational Intelligence for Financial Engineering (CIFEr) (Cat. No.97TH8304), P220, DOI 10.1109/CIFER.1997.618940
   [Anonymous], 2008, WILEY ONLINE LIB
   [Anonymous], 2009, P HOTCLOUD
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Berral JosepLl., 2010, e-Energy'10. (Passau, P215, DOI DOI 10.1145/1791314.1791349
   Bhat AmjadHussain., 2013, International Journal of Application or Innovation in Engineering Management (IJAIEM), V2, P56
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Cao LJ, 2015, 2015 IEEE CONFERENCE ON NETWORK FUNCTION VIRTUALIZATION AND SOFTWARE DEFINED NETWORK (NFV-SDN), P93, DOI 10.1109/NFV-SDN.2015.7387412
   Carrozza G, 2008, EDCC-7: SEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P25, DOI 10.1109/EDCC-7.2008.26
   Cerf S., 2016, 55 IEEE INT C DEC CO
   Chase J. S., 2001, Operating Systems Review, V35, P103, DOI 10.1145/502059.502045
   Cherkasova L, 2009, ACM T COMPUT SYST, V27, DOI 10.1145/1629087.1629089
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Cooper Brian F., 2010, P 1 ACM S CLOUD COMP, P143, DOI [DOI 10.1145/1807128.1807152, 10.1145/1807128.1807152]
   Cotroneo D, 2017, IEEE T NETW SERV MAN, V14, P934, DOI 10.1109/TNSM.2017.2733042
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   Dean D., 2012, ICAC
   Dean D. J., 2014, 6 USENIX WORKSH HOT
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   Duan SY, 2009, PROC INT CONF DATA, P1012, DOI 10.1109/ICDE.2009.115
   ETSI, 2012, 103125 ETSI
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Gander M., 2013, ANOMALY DETECTION CL, P103
   Guan Q, 2013, SYM REL DIST SYST, P205, DOI 10.1109/SRDS.2013.29
   Heberlein LT, 1995, NETWORK SECURITY MON
   Nguyen H, 2013, INT CON DISTR COMP S, P21, DOI 10.1109/ICDCS.2013.26
   Kang H., 2012, 2 USENIX WORKSH HOT
   Kang H., 2010, P 7 INT C AUTONOMIC, P119
   Kundu S, 2012, ACM SIGPLAN NOTICES, V47, P3, DOI 10.1145/2365864.2151028
   Lakhina A, 2004, ACM SIGCOMM COMP COM, V34, P219, DOI 10.1145/1030194.1015492
   LeCun Y., 1991, Advances in Neural Information ProcessingSystems J, P918
   Lee W, 2001, P IEEE S SECUR PRIV, P130, DOI 10.1109/SECPRI.2001.924294
   Lee W, 1999, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1999.766909
   Leung K., 2005, Conf. Res. Pract. Inf. Technol. Ser, V38, P333
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Liang YL, 2006, I C DEPEND SYS NETWO, P425
   Massie MatthewL., 2003, PARALLEL COMPUT, V30, P2004
   Matsunaga Andrea., 2010, 2010 10 IEEEACM INT, P495, DOI 10.1109/CCGRID.2010.98
   Mazel J., 2011, THESIS
   Michie D., 1994, MACHINE LEARNING NEU
   Miyazawa M, 2015, PROCEEDINGS OF THE 2015 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM), P640, DOI 10.1109/INM.2015.7140349
   MUKHERJEE B, 1994, IEEE NETWORK, V8, P26, DOI 10.1109/65.283931
   Niwa T, 2015, ASIA-PAC NETW OPER M, P315, DOI 10.1109/APNOMS.2015.7275446
   Pop Daniel., 2016, CoRR
   Qiang Guan, 2012, 2012 IEEE 7th International Conference on Networking, Architecture, and Storage (NAS), P207, DOI 10.1109/NAS.2012.30
   Qiang Guan, 2012, Journal of Communications, V7, P52, DOI 10.4304/jcm.7.1.52-61
   Salfner F, 2007, SYM REL DIST SYST, P161, DOI 10.1109/SRDS.2007.35
   Sauvanaud C., 2015, 11 EUR DEP COMP C ED
   Sauvanaud C, 2016, PROC INT SYMP SOFTW, P196, DOI 10.1109/ISSRE.2016.32
   Silvestre G., 2014, 26 INT S COMP ARCH H
   Silvestre G, 2015, LECT NOTES COMPUT SC, V9274, P114, DOI 10.1007/978-3-319-23129-7_9
   Silvestre G, 2015, LECT NOTES COMPUT SC, V9070, P34, DOI 10.1007/978-3-662-46703-9_2
   Simache C, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P346, DOI 10.1109/ISSRE.2001.989489
   Simache C., 2002, DEP COMP 2002 P 2002
   Tan YM, 2012, INT CON DISTR COMP S, P285, DOI 10.1109/ICDCS.2012.65
   Tan YM, 2010, PODC 2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P173, DOI 10.1145/1835698.1835741
   Van Hulse Jason, 2007, P 24 INT C MACH LEAR, P935, DOI DOI 10.1145/1273496.1273614
   Wang CW, 2010, IEEE IFIP NETW OPER, P96, DOI 10.1109/NOMS.2010.5488443
   Watanabe Y., 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P504, DOI 10.1109/CloudCom.2012.6427566
   Williams Andrew W., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, P1, DOI [10. 1109/IPDPS.2007.370345, DOI 10.1109/IPDPS.2007.370345]
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Zhang J, 2008, IEEE T SYST MAN CY C, V38, P649, DOI 10.1109/TSMCC.2008.923876
   Zhang YC, 2013, 2013 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA (CLOUDCOM-ASIA), P328, DOI 10.1109/CLOUDCOM-ASIA.2013.57
   Zhenhuan Gong, 2010, 6th International Conference on Network and Service Management (CNSM 2010), P9, DOI 10.1109/CNSM.2010.5691343
NR 64
TC 35
Z9 39
U1 1
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2018
VL 139
BP 84
EP 106
DI 10.1016/j.jss.2018.01.039
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA7CU
UT WOS:000428493000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fahmideh, M
   Beydoun, G
AF Fahmideh, Mandi
   Beydoun, Ghassan
TI Reusing empirical knowledge during cloud computing adoption
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing adoption; Legacy systems; Evidence-based software
   engineering; Goal-oriented requirement engineering; Legacy system
   reengineering
ID DESIGN SCIENCE; REQUIREMENTS; REVIEWS; TOOLKIT
AB Moving existing legacy systems to cloud platforms is an ever popular option. But, such endeavour may not be hazard-free and demands a proper understanding of requirements and risks involved prior to taking any action. The time is indeed ripe to undertake a realistic view of what migrating legacy systems to cloud may offer, an understanding of exceptional situations causing system quality goal failure in such a transition, and insights on countermeasures. The cloud migration body of knowledge, although is useful, is dispersed over the current literature. It is hard for busy practitioners to digest, synthesize, and harness this body of knowledge into practice when integrating legacy systems with cloud services. We address this issue by creating an innovative synergy between the approaches evidence-based software engineering and goal-oriented modelling. We develop an evidential repository of commonly occurred obstacles and platform agnostic resolution tactics related to cloud enablement of legacy systems. The repository is further utilized during systematic goal-obstacle elaboration of given cloud migration scenarios. The applicability of our proposed framework is also demonstrated. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Fahmideh, Mandi; Beydoun, Ghassan] Univ Technol Sydney, Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Beydoun, G (corresponding author), Univ Technol Sydney, Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
EM Mandi.Fahmideh@uts.edu.au; Ghassan.Beydoun@uts.edu.au
RI Fahmideh/AAH-7234-2021; Beydoun, Ghassan/L-5554-2017
OI Fahmideh/0000-0001-7196-7217; Beydoun, Ghassan/0000-0001-8087-5445
CR AmazonS3, AM WEB SERV S3 SIMPL
   [Anonymous], 2009, P 18 ACM INT S HIGH
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 2008, P 2008 ACM IEEE C SU, DOI DOI 10.1109/SC.2008.5217932
   [Anonymous], EMP SOFTW ENG MEAS 2
   [Anonymous], QUORA
   [Anonymous], 2013, P 2013 INT WORKSH HO
   Anstett T., 2009, SERV 1 2009 WORLD C
   Aurum A., 2003, Managing Software Engineering Knowledge
   Babar M.A., 2004, SOFTW ENG C 2004 P A
   Boell SK, 2015, J INF TECHNOL-UK, V30, P161, DOI 10.1057/jit.2014.26
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chow R., 2009, Proceedings of the 2009 ACM workshop on Cloud computing security, P85, DOI DOI 10.1145/1655008.1655020
   Christoforou A, 2013, IFIP ADV INF COMM TE, V412, P151
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dragoni N., 2016, Microservices: yesterday, today, and tomorrow
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   El-Gazzar R, 2016, J SYST SOFTWARE, V118, P64, DOI 10.1016/j.jss.2016.04.061
   Fahmideh M., 2016, 24 EUR C INF SYST EC, V1
   Fittkau F., 2012, MAINT EV SERV OR CLO
   Franklin C., 1996, LT GEN USAF COMMANDE
   Garg S.K., 2011, UT CLOUD COMP UCC 20
   Garg SK, 2013, FUTURE GENER COMP SY, V29, P1012, DOI 10.1016/j.future.2012.06.006
   Gholami MF, 2017, INFORM SYST, V67, P100, DOI 10.1016/j.is.2017.03.008
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Giovanoli G., 2012, BUILDING KNOWLEDGE B
   Godse M., 2009, 2009 IEEE INT C CLOU
   Godse M., 2009, CLOUD COMP 2009 CLOU
   Gordon J., 2015, CASE STUDY REFACTORI
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hjorland B, 2011, J AM SOC INF SCI TEC, V62, P1301, DOI 10.1002/asi.21523
   Khajeh-Hosseini A., 2010, CLOUD COMP CLOUD 201
   Khajeh-Hosseini A., 2011, CLOUD COMP CLOUD 201
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kondo D., 2009, PAR DISTR PROC 2009
   Lacity MC, 2009, J STRATEGIC INF SYST, V18, P130, DOI 10.1016/j.jsis.2009.06.002
   Letier E., 2001, THESIS
   Letier E., 2004, ACM SIGSOFT SOFTWARE
   Leymann F, 2011, INT J COOP INF SYST, V20, P307, DOI 10.1142/S0218843011002250
   Linthicum D., 2012, WHY CLOUD COMPUTING
   Low CY, 2011, IND MANAGE DATA SYST, V111, P1006, DOI 10.1108/02635571111161262
   Menzel M., 2012, Proceedings of the 21st international conference on World Wide Web, New York, P979
   Menzel M, 2013, SOFTWARE PRACT EXPER, V43, P1283, DOI 10.1002/spe.1110
   Nikkhouy E., 2013, CLOUD BASED SOFTW EN, V8
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Rabetski Pavel, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P227, DOI 10.1007/978-3-642-40651-5_19
   Saripalli P., 2011, CLOUD COMP CLOUD 201
   Scandurra P., 2016, P 6 INT C CLOUD COMP
   Tak B.C., 2011, Proceedings of the 3rd USENIX conference on Hot topics in cloud computing, P5
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Tsidulko J., 2016, The 10 biggest cloud outages of 2016
   van Lamsweerde A, 2004, LECT NOTES COMPUT SC, V2941, P325
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Walker E, 2010, COMPUTER, V43, P44, DOI 10.1109/MC.2010.115
   Wu WW, 2011, INT J INFORM MANAGE, V31, P556, DOI 10.1016/j.ijinfomgt.2011.02.007
   Wu WW, 2011, J SYST SOFTWARE, V84, P435, DOI 10.1016/j.jss.2010.11.890
   Yang H, 2012, COMMUN ASSOC INF SYS, V31, P35
   Yu E.S.K., 1997, REQ ENG 1997 P 3 IEE
   Zardari S., 2014, CLOUD ADOPTION PRIOR
   Zimmermann O., 2015, SOFTW ARCH WICSA 201
NR 66
TC 14
Z9 27
U1 3
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2018
VL 138
BP 124
EP 157
DI 10.1016/j.jss.2017.12.011
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX6YN
UT WOS:000426233300008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Choi, Y
AF Choi, Yunja
TI A configurable V&V framework using formal behavioral patterns for
   OSEK/VDX operating systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE V&V framework; Formal patterns; OSEK/VDX; Embedded software
ID VERIFICATION
AB Verification and Validation (V&V) of small-scale embedded software must consider the operating system. Unlike general-purpose systems, the underlying operating system is closely coupled with the application logic, generating potentially an infinite number of different control programs depending on the application configuration and application logic. Verifying this software individually is time-consuming and costly, especially when the objective is rigorous verification.
   To assist in rigorous V&V activities for such embedded software, the proposed work suggests a pattern-based framework that can be used to generate configurable formal OS and test models. At the core of the framework, lies a set of predefined behavioral patterns and constraint patterns that can be composed for the auto-generation of formal models for variously configured operating systems. These configurable formal models form the basis of formal validation and verification activities such as model checking safety properties, model-based test generation, and formal application simulation. We have implemented a prototype tool, specially designed for embedded control software based on the OSEK/VDX international standard, to demonstrate the benefits of the framework in task simulation, test generation, and formal verification. A series of experiments and analysis demonstrate that the suggested pattern based framework is more efficient in test sequence generation and more effective in identifying problems compared to existing approaches. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Choi, Yunja] Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
C3 Kyungpook National University
RP Choi, Y (corresponding author), Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
EM yuchoi76@knu.ac.kr
FU MISP(Ministry of Science, ICT and Future Planning), Korea, under the
   ITRC(Information Technology Research Center)
   [IITP-2016-H85011610120001002]; National Research Foundation of
   Korea(NRF) - Ministry of Education [NRF-2016R1D1A3B01011685]
FX This work benefited significantly from the prior work performed by
   Taejoon Byun who built the prototype tool for the test generation. This
   research was supported by MISP(Ministry of Science, ICT and Future
   Planning), Korea, under the ITRC(Information Technology Research Center)
   support program (IITP-2016-H85011610120001002) supervised by the
   IITP(Institute for Information & communications Technology Promotion)
   and Basic Science Research Program through National Research Foundation
   of Korea(NRF) funded by the Ministry of
   Education(NRF-2016R1D1A3B01011685).
CR [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arrieta A., 2014, EMERGINT TECHNOLOGY, P1
   Arts T., 2015, IEEE 8 INT C SOFTW T
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Beachennec J.-L, 2006, P IEEE C EM TECHN FA
   Berry G., 2007, 12 INT C FORM METH I
   Botaschanjan J, 2008, FORM ASP COMPUT, V20, P637, DOI 10.1007/s00165-008-0097-0
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Byun T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1815, DOI 10.1145/2695664.2695935
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   Choi Y., 2013, 11 INT C SOFTW ENG F
   Choi YJ, 2017, SOFTW SYST MODEL, V16, P7, DOI 10.1007/s10270-014-0449-6
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Delange J., 2010, 15 IEEE INT C ENG CO
   Dwyer M. B., 1999, P 21 INT C SOFTW ENG
   Endres E., 2010, P NASA FORM METH S
   Feiler P.H., 2003, TECHNICAL REPORT
   Filipovikj P., 2014, IEEE INT C REQ ENG
   Flemstroem D., 2015, 41 EUR C SOFTW ENG A
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Kanstreen T., 2009, IEEE COMPUTATION WOR
   Kim D., 2016, AS PAC SOFTW ENG C
   Klein G, 2010, COMMUN ACM, V53, P107, DOI 10.1145/1743546.1743574
   Konrad S., 2005, IEEE INT C SOFTW ENG
   LEVESON NG, 1983, IEEE T SOFTWARE ENG, V9, P569, DOI 10.1109/TSE.1983.235116
   Ling Fang, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P251, DOI 10.1109/ICST.2012.105
   Marinescu R., 2009, 40 EUR C SOFTW ENG A
   O'Halloran C, 2013, AUTOMAT SOFTW ENG, V20, P237, DOI 10.1007/s10515-012-0116-5
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Park S., 2016, SPRING C KOR INF PRO
   Ray A., 2009, IEEE ACM INT C AUT S
   Sen K., 2005, 10 EUR SOFTW ENG C 1
   Shahbaz M., 2007, 31 ANN INT COMP SOFT
   Shi J., 2012, IEEE 17 INT C ENG CO
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Tan L., 2004, IEEE INT C INF REUS
   Wang S., 2013, 13 INT C QUAL SOFTW
   Yang G., 2005, P 2 INT C EMB SOFTW
   Yanhong Huang, 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P142, DOI 10.1109/TASE.2011.11
   Yatake K., 2010, 17 INT SPIN C SOFTW
   Yavuz-Kahveci T., 2005, 3 ACM IEEE INT C FOR
   Zhu L., 2013, INT S THEOR ASP SOFT
NR 42
TC 8
Z9 8
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2018
VL 137
BP 563
EP 579
DI 10.1016/j.jss.2017.07.040
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8HN
UT WOS:000425572400036
DA 2024-07-18
ER

PT J
AU Méndez-Acuña, D
   Galindo, JA
   Combemale, B
   Blouin, A
   Baudry, B
AF Mendez-Acuna, David
   Galindo, Jose A.
   Combemale, Benoit
   Blouin, Arnaud
   Baudry, Benoit
TI Reverse engineering language product lines from existing DSL variants
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Language product lines; Software languages engineering; Domain-specific
   languages; Reverse-engineering
ID STATECHARTS; VARIABILITY; SEMANTICS; UML
AB The use of domain-specific languages (DSLs) has become a successful technique to develop complex systems. In this context, an emerging phenomenon is the existence of DSL variants, which are different versions of a DSL adapted to specific purposes but that still share commonalities. In such a case, the challenge for language designers is to reuse, as much as possible, previously defined language constructs to narrow implementation from scratch. To overcome this challenge, recent research in software languages engineering introduced the notion of language product lines. Similarly to software product lines, language product lines are often built from a set of existing DSL variants.
   In this article, we propose a reverse-engineering technique to ease-off such a development scenario. Our approach receives a set of DSL variants which are used to automatically recover a language modular design and to synthesize the corresponding variability models. The validation is performed in a project involving industrial partners that required three different variants of a DSL for finite state machines. This validation shows that our approach is able to correctly identify commonalities and variability. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Mendez-Acuna, David] INRIA IRISA, Rennes, France.
   Univ Rennes 1, Campus Beaulieu, Rennes, France.
C3 Universite de Rennes; Universite de Rennes
RP Méndez-Acuña, D (corresponding author), INRIA IRISA, Rennes, France.
EM damenac@gmail.com; jagalindo@inria.fr; benoit.combemale@inria.fr;
   arnaud.blouin@inria.fr; benoit.baudry@inria.fr
RI ; Galindo, Jose A/F-7232-2010
OI Blouin, Arnaud/0000-0002-5974-9601; Galindo, Jose A/0000-0001-9293-9784
FU ANR INS Project GEMOC [ANR-12-INSE-0011]; bilateral collaboration
   VaryMDE between Inria and Thales; bilateral collaboration FPML between
   Inria and DGA; European Union within the FP7 Marie Curie Initial
   Training Network RELATE [264840]; European Commission (FEDER); Spanish
   government under BELi project [TIN2015-70560-R]; Andalusian government
   under the COPAS project [TIC 1867]; Agence Nationale de la Recherche
   (ANR) [ANR-12-INSE-0011] Funding Source: Agence Nationale de la
   Recherche (ANR)
FX This work is supported by the ANR INS Project GEMOC (ANR-12-INSE-0011);
   the bilateral collaboration VaryMDE between Inria and Thales; the
   bilateral collaboration FPML between Inria and DGA; and the European
   Union within the FP7 Marie Curie Initial Training Network RELATE under
   grant agreement number 264840. We also received support from the
   European Commission (FEDER); the Spanish government under BELi
   (TIN2015-70560-R) project and; the Andalusian government under the COPAS
   (TIC 1867) project.
CR [Anonymous], 2015, 8 INT C SOFTW LANG E
   Assunçao WKG, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1303, DOI 10.1145/2739480.2754720
   Biegel B., 2010, P IEEEACM INT C AUTO, P167
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Cazzola Walter, 2013, Software Composition. 12th International Conference, SC 2013. Proceedings. LNCS 8088, P17, DOI 10.1007/978-3-642-39614-4_2
   Cengarle MV, 2009, LECT NOTES COMPUT SC, V5795, P670, DOI 10.1007/978-3-642-04425-0_54
   Chechik M., 2010, P NSF MSR WORKSH US
   Combemale B., 2013, LNCS, P184
   Crane ML, 2007, SOFTW SYST MODEL, V6, P415, DOI 10.1007/s10270-006-0042-8
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Dinkelaker T., 2010, P 1 INT WORKSH COMP
   Funk M., 2012, PULP SCRIPTION DSL M, P504, DOI [10.1007/978-3-642-33542-6_65, DOI 10.1007/978-3-642-33542-6_65]
   Gray J., 2008, COMPANION 23 ACM SIG, P791, DOI DOI 10.1145/1449814.1449863
   Grönniger H, 2011, LECT NOTES COMPUT SC, V6662, P17
   Gschwind T., 2012, AUTOMATED ADAPTATION, P45, DOI [10.1007/978-1-4471-2350-7_5, DOI 10.1007/978-1-4471-2350-7_5]
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2004, LECT NOTES COMPUT SC, V3147, P325
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Homer M., 2014, GRACEFUL DIALECTS, P131, DOI [10.1007/978-3-662-44202-9_6, DOI 10.1007/978-3-662-44202-9_6]
   James P, 2014, MATH COMPUT SCI, V8, P11, DOI 10.1007/s11786-014-0174-0
   Jezequel J. -M., 2015, COMPLEX SYSTEMS DESI, P1, DOI [10.1007/978-3-319-11617-4_1, DOI 10.1007/978-3-319-11617-4_1]
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Kuhn T., 2015, P 19 INT C SOFTW PRO, P71, DOI DOI 10.1145/2791060.2791092
   Kuhn T., 2016, P 20 INT SOFTW PROD
   Liebig J., 2013, P 7 INT WORKSH VAR M, P1, DOI [10.1145/2430502.2430518, DOI 10.1145/2430502.2430518]
   lliasov A., 2013, SAFECAP PLATFORM MOD, P130, DOI [10.1007/978-3-642-40793-2_12, DOI 10.1007/978-3-642-40793-2_12]
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lucanu D., 2013, LNCS, P362
   Martaj N., 2010, MATLAB R2009 SIMULIN, P513, DOI [10.1007/978-3-642-11764-0_13, DOI 10.1007/978-3-642-11764-0_13]
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Mendez-Acufia D., 2016, P INT C SOFTW REUS I, DOI [10.1007/978-3-319-35122-3_26.1CSR2016, DOI 10.1007/978-3-319-35122-3_26.1CSR2016]
   Mendez-Acuna D., 2016, P INT C SOFTW REUS I
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Object Management Group (OMG), 2011, UML 2 4 1 SUP SPEC
   Oney S, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P229
   Ribeiro A, 2014, P 29 ANN ACM S APPL, P1316, DOI DOI 10.1145/2554850.2554926
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Vacchi E., 2014, SPLC 14
   Vacchi E., 2013, VARIABILITY SUPPORT, P76, DOI [10.1007/978-3-319-02654-1_5, DOI 10.1007/978-3-319-02654-1_5]
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   VOLTER M., 2013, DSL ENG DESIGNING IM
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 53
TC 12
Z9 12
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2017
VL 133
BP 145
EP 158
DI 10.1016/j.jss.2017.05.042
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ3EX
UT WOS:000412614400009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU García, F
   Pedreira, O
   Piattini, M
   Cerdeira-Pena, A
   Penabad, M
AF Garcia, Felix
   Pedreira, Oscar
   Piattini, Mario
   Cerdeira-Pena, Ana
   Penabad, Miguel
TI A framework for gamification in software engineering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Gamification; Software engineering; Methodology; Ontology
AB Gamification seeks for improvement of the user's engagement, motivation, and performance when carrying out a certain task; it does so by incorporating game mechanics and elements, thus making that task more attractive. The application of gamification in Software Engineering can be promising; software projects can be organized as a set of challenges which can be ordered and that need to be fulfilled, for which some skills, and mainly much collective effort, are required. The objective of this paper is to propose a complete framework for the introduction of gamification in software engineering environments. This framework is composed of an ontology, a methodology guiding the process, and a support gamification engine. We carried out a case study in which the proposed framework was applied in a real company. In this project the company used the framework to gamify the areas of project management, requirements management, and testing. As a result, the methodology has clearly enabled the company to introduce gamification in its work environment, achieving a quality solution with appropriate design and development effort. The support tool allowed the company to gamify its current tools very easily. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Inst Technol & Informat Syst, Ciudad Real, Spain.
   [Pedreira, Oscar; Cerdeira-Pena, Ana; Penabad, Miguel] Univ A Coruna, Database Lab, La Coruna, Spain.
C3 Universidad de Castilla-La Mancha; Universidade da Coruna
RP García, F (corresponding author), Univ Castilla La Mancha, Inst Technol & Informat Syst, Ciudad Real, Spain.
EM felix.garcia@uclm.es; opedreira@udc.es; mario.piattini@uclm.es;
   acerdeira@udc.es; penabad@udc.es
RI Pedreira, Oscar/ABA-5296-2020; Cerdeira-Pena, Ana/ABG-1110-2020;
   Piattini, Mario/F-6271-2013; Rodriguez Penabad, Miguel/N-9781-2015;
   Garcia, Felix/D-4299-2011
OI Pedreira, Oscar/0000-0001-6176-4475; Cerdeira-Pena,
   Ana/0000-0003-1698-0093; Piattini, Mario/0000-0002-7212-8279; Rodriguez
   Penabad, Miguel/0000-0001-5455-6088; Garcia, Felix/0000-0001-6460-0353
FU GOAL [CDTI EXP 00064563 / ITC-20133062]; VoxPopuli (Ministerio de
   Economia e Competitividade) (PGE e Fondos FEDER) [TIN2013-47090-C3-3-P];
   4V (Ministerio de Economia e Competitividade) (PGE e Fondos FEDER)
   [TIN2013-46238-C4-3-R]; MOV-RDF (Ministerio de Economia e
   Competitividade) (PGE e Fondos FEDER) [TIN2015-69951-R]; GRC (Xunta de
   Galicia) [GRC2013/053]; GINSENG (Ministerio de Economia e
   Competitividade y Fondo Europeo de Desarrollo Regional FEDER)
   [TIN2015-70259-C2-1-R]
FX This work has been funded by the following projects: GOAL (CDTI EXP
   00064563 / ITC-20133062), VoxPopuli (Ministerio de Economia e
   Competitividade) (PGE e Fondos FEDER) ref. TIN2013-47090-C3-3-P), 4V
   (Ministerio de Economia e Competitividade) (PGE e Fondos FEDER) ref.
   TIN2013-46238-C4-3-R), MOV-RDF (Ministerio de Economia e
   Competitividade) (PGE e Fondos FEDER, ref. TIN2015-69951-R), and GRC
   (Xunta de Galicia, ref. GRC2013/053 (FEDER)) for Oscar Pedreira, Ana
   Cerdeira-Pena, and Miguel Penabad, and GINSENG (Ministerio de Economia e
   Competitividade y Fondo Europeo de Desarrollo Regional FEDER,
   TIN2015-70259-C2-1-R) for Felix Garcia and Mario Piattini.
CR [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2013, GAMIFICATION WORK DE
   [Anonymous], 1550422003 ISOIEC
   [Anonymous], 2011, GAMIFICATION DESIGN
   [Anonymous], 2005, 270012005 ISOIEC
   BARTLE R, 1996, J MUD RES, V0006
   Brereton P., 2008, Using a Protocol Template for Case Study Planning
   Burke B., 2014, GAMIFY GAMIFICATION
   Curtis B., 2001, People Capability Maturity Model (PCMM)
   DeMarco T., 2013, Peopleware: productive projects and teams
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dignan A., 2011, GAME FRAME USING GAM
   El-Nasr M., 2013, Game Analytics-Maximizing the Value of Player Data
   El-Nasr M.S., 2005, SOFTWARE ENG GAME DE
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Hamari J., 2014, P 47 HAW C SYST SCI
   Hugos M., 2012, ENTERPRISE GAMES
   Humphrey W., 2000, The Personal Software Process
   Humphrey W., 2010, Team Software Process(sm)(TSP(sm)) Body of Knowledge (BOK) (CMU/SEI-2010-TR-020)
   Jacobson I., 2011, USE CASE 2 0 GUIDE S
   Keith C., 2010, AGILE GAME DEVLELOPM
   Kumar Janaki., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems, CHI EA'13, P2427, DOI DOI 10.1145/2468356.2468793
   Marczewski A., 2014, GAM WORLD C GWC 14
   McMillan D., 2011, GAMIFICATION GROWING
   Passos E.B., 2011, Games and Digital Entertainment (SBGAMES'11), P260
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Xu Y., 2013, P 1 INT C GAM DES RE
   Xu Y., 2012, Literature review on web application gamification and analytics
   Xu Y, 2015, MAKAHIKI SGSEAM DESI
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 34
TC 68
Z9 69
U1 1
U2 65
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2017
VL 132
BP 21
EP 40
DI 10.1016/j.jss.2017.06.021
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FH9LC
UT WOS:000411531900002
DA 2024-07-18
ER

PT J
AU Drury-Grogan, ML
   Conboy, K
   Acton, T
AF Drury-Grogan, Meghann L.
   Conboy, Kieran
   Acton, Tom
TI Examining decision characteristics & challenges for agile software
   development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Agile software development; Agile decision making; Decision
   characteristics; Decision process; Decision intelligence; Decision
   quality
ID SUPPORT-SYSTEMS; PROJECT-MANAGEMENT; STRATEGY; SUCCESS; IMPACT;
   INCENTIVES; ACCURACY; BENEFITS; AIDS; FIT
AB Although agile software development is often associated with improved decision making, existing studies tend to focus on narrow aspects of decision making in such environments. There is a lack of clarity on how teams make and evaluate a myriad of decisions from software feature inception to product delivery and refinement. Indeed there is relatively little known about a) the decision characteristics related to agile values, and b) the challenges they present for decision making on agile teams. We present an in-depth exploratory case study based on a pluralistic approach comprising semi-structured interviews, focus groups, team meeting observations, and document analysis. The study identifies failings of decision making in an agile setting. Explicitly considering the decision process, information intelligence used in decision making, and decision quality, the key contribution of this paper is the development of an overarching framework of agile decision making, which identifies particular decision characteristics across 4 key agile values and the related challenges for agile team decision making. It provides a framework for researchers and practitioners to evaluate the decision challenges of an agile software development team and to improve decision quality. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Drury-Grogan, Meghann L.] Fordham Univ, Gabelli Sch Business, Commun & Med Management, Hughes Hall,Rm 513 441 East Fordham Rd, Bronx, NY 10458 USA.
   [Conboy, Kieran; Acton, Tom] Natl Univ Ireland, Business Informat Syst Grp, JE Cairnes Sch Business & Econ, Univ Rd, Galway, Ireland.
C3 Fordham University; Ollscoil na Gaillimhe-University of Galway
RP Drury-Grogan, ML (corresponding author), Fordham Univ, Gabelli Sch Business, Commun & Med Management, Hughes Hall,Rm 513 441 East Fordham Rd, Bronx, NY 10458 USA.
EM mdrury@fordham.edu; kieran.conboy@nuigalway.ie;
   thomas.acton@nuigalway.ie
OI Conboy, Kieran/0000-0001-8260-4075
FU Fordham University Faculty Fellowship; Fordham University's Gabelli
   School of Business Summer Research Grant; Gabelli Grant [SS16-1094];
   Science Foundation Ireland [13/RC/2094]; European Regional Development
   Fund through the Southern & Eastern Regional Operational Programme
FX This research is supported by a 2016 Fordham University Faculty
   Fellowship, Fordham University's Gabelli School of Business Summer 2016
   Research Grant and 2016 Gabelli Grant SS16-1094, and a Science
   Foundation Ireland grant 13/RC/2094. It is also co-funded under the
   European Regional Development Fund through the Southern & Eastern
   Regional Operational Programme to Lero - the Irish Software Research
   Centre (www.lero.ie).
CR ALLEMAN G., 2002, STORY MANAGING PROJE
   [Anonymous], 2012, EXPERIMENTATION SOFT
   [Anonymous], 2000, CAS STUD
   [Anonymous], 2006, EUROPEAN J INFORM SY
   [Anonymous], DECISION MAKING AGIL
   [Anonymous], 37 HAW INT C SYST SC
   [Anonymous], 21 INT C INF SYST DE
   [Anonymous], 1999, QUALITATIVE DATA ANA
   [Anonymous], 22 AUSTRALASIAN C IN
   [Anonymous], EVOLUTION AGILE PM N
   [Anonymous], P 12 INT WORKSH EN T
   [Anonymous], N AM J PSYCHOL
   [Anonymous], AGILE 2006 C IEEE CO
   Augustine S., 2005, Managing agile projects, V1st
   Austin RD, 2009, INFORM SYST RES, V20, P462, DOI 10.1287/isre.1090.0242
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Briggs RO, 2010, J MANAGE INFORM SYST, V27, P123, DOI 10.2753/MIS0742-1222270106
   Chin G., 2004, Agile Project Management: How to Succeed in the Face of Changing Project Requirements
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Coyle S., 2015, Thirty Sixth International Conference on Information systems, P1
   Coyle S, 2013, INT J INTELL INF TEC, V9, P38, DOI 10.4018/jiit.2013040104
   Davern MJ, 2008, DECIS SUPPORT SYST, V45, P123, DOI 10.1016/j.dss.2007.12.012
   Dennis AR, 2001, MIS QUART, V25, P167, DOI 10.2307/3250928
   DEWAN RM, 1994, DECIS SUPPORT SYST, V12, P25, DOI 10.1016/0167-9236(94)90072-8
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Drury-Grogan ML, 2014, INFORM SOFTWARE TECH, V56, P506, DOI 10.1016/j.infsof.2013.11.003
   Drury-Grogan ML, 2013, INT J INF TECH DECIS, V12, P1097, DOI 10.1142/S0219622013400105
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fowler M., 2001, Software Development, V9, P28
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Häubl G, 2000, MARKET SCI, V19, P4, DOI 10.1287/mksc.19.1.4.15178
   Henderson-Sellers B, 2005, J DATABASE MANAGE, V16, P1, DOI 10.4018/jdm.2005100101
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Huang W, 1999, INFORM MANAGE, V35, P195, DOI 10.1016/S0378-7206(98)00083-4
   JOHNSON EJ, 1985, MANAGE SCI, V31, P395, DOI 10.1287/mnsc.31.4.395
   Kuo FY, 2004, DECIS SUPPORT SYST, V37, P331, DOI 10.1016/S0167-9236(03)00032-0
   Lindstrom L, 2004, INFORM SYST MANAGE, V21, P41, DOI 10.1201/1078/44432.21.3.20040601/82476.7
   McAvoy J, 2009, EUR J INFORM SYST, V18, P372, DOI 10.1057/ejis.2009.22
   Moe NB, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P216, DOI 10.1109/SEAA.2008.55
   MOLDAFSKY NI, 1994, COMPUT HUM BEHAV, V10, P299, DOI 10.1016/0747-5632(94)90057-4
   Montazemi AR, 1996, DECIS SUPPORT SYST, V18, P181, DOI 10.1016/0167-9236(96)00038-3
   Moreau EMF, 2006, DECIS SUPPORT SYST, V42, P593, DOI 10.1016/j.dss.2005.02.008
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PAYNE JW, 1976, ORGAN BEHAV HUM PERF, V16, P366, DOI 10.1016/0030-5073(76)90022-2
   PAYNE JW, 1988, J EXP PSYCHOL LEARN, V14, P534, DOI 10.1037/0278-7393.14.3.534
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Rubin J.R., 2005, QUALITATIVE INTERVIE, V2nd, DOI DOI 10.4135/9781452226651
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shim JP, 2002, DECIS SUPPORT SYST, V33, P111, DOI 10.1016/S0167-9236(01)00139-7
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Sturman MC, 1996, PERS PSYCHOL, V49, P883, DOI 10.1111/j.1744-6570.1996.tb02453.x
   TODD P, 1993, INFOR, V31, P80
   Todd P, 1999, INFORM SYST RES, V10, P356, DOI 10.1287/isre.10.4.356
   TVERSKY A, 1972, PSYCHOL REV, V79, P281, DOI 10.1037/h0032955
   Wengraff Tom., 2001, Qualitative Research Interviewing
   Yin R.K., 2011, Qualitative research from start to finish
   Zannier C, 2007, LECT NOTES COMPUT SC, V4536, P1
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zannier C, 2006, LECT NOTES COMPUT SC, V4044, P11
   ZMUD RW, 1979, MANAGE SCI, V25, P966, DOI 10.1287/mnsc.25.10.966
NR 63
TC 29
Z9 33
U1 3
U2 61
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2017
VL 131
BP 248
EP 265
DI 10.1016/j.jss.2017.06.003
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FD6SF
UT WOS:000407657500015
DA 2024-07-18
ER

PT J
AU Mujhid, IJ
   Santos, JCS
   Gopalakrishnan, R
   Mirakhorli, M
AF Mujhid, Ibrahim Jameel
   Santos, Joanna C. S.
   Gopalakrishnan, Raghuram
   Mirakhorli, Mehdi
TI A search engine for finding and reusing architecturally significant code
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architecture; Traceability; Tactics; Information; Models
ID INFORMATION; ALGORITHM; SOFTWARE
AB Architectural tactics are the building blocks of software architecture. They describe solutions for addressing specific quality concerns, and are prevalent across many software systems. Once a decision is made to utilize a tactic, the developer must generate a concrete plan for writing code and implementing the tactic. Unfortunately, this is a non-trivial task even for experienced developers. Often, developers resort to using search engines, crowd-sourcing websites, or discussion forums to find sample code snippets to implement a tactic. A fundamental problem of finding implementation for architectural tactics/patterns is the mismatch between the high-level intent reflected in the descriptions of these patterns and the low-level implementation details of them. To reduce this mismatch, we created a novel Tactic Search Engine called ArchEngine (ARCHitecture search ENGINE). ArchEngine can replace this manual internet-based search process and help developers find and reuse tactical code from a wide range of open source systems. ArchEngine helps developers find implementation examples of an architectural tactic for a given technical context. It uses information retrieval and program analysis techniques to retrieve applications that implement these design concepts. Furthermore, it lists and rank the code snippets where the patterns/tactics are located. Our case study with 21 graduate students (with experience level of junior software developers) shows that ArchEngine is more effective than other search engines (e.g., Krugle and Koders) in helping programmers to quickly find implementations of architectural tactics/patterns. (C) 2016 Published by Elsevier Inc.
C1 [Mujhid, Ibrahim Jameel; Santos, Joanna C. S.; Gopalakrishnan, Raghuram; Mirakhorli, Mehdi] Rochester Inst Technol, Software Engn Dept, Rochester, NY 14623 USA.
C3 Rochester Institute of Technology
RP Mirakhorli, M (corresponding author), Rochester Inst Technol, Software Engn Dept, Rochester, NY 14623 USA.
EM ijm9654@rit.edu; jds5109@rit.edu; rg8772@rit.edu; mehdi@se.rit.edu
RI da Silva Santos, Joanna Cecilia/AAF-7544-2021
OI da Silva Santos, Joanna Cecilia/0000-0001-8743-2516
FU US National Science Foundation [CCF-1543176]; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1543176] Funding Source: National Science Foundation
FX The work in this paper was partially funded by the US National Science
   Foundation grant #CCF-1543176.
CR [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2012, SIGSOFT FSE
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bajracharya S, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P1, DOI 10.1109/SUITE.2009.5070010
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Blum A., 1999, Proceedings of the Twelfth Annual Conference on Computational Learning Theory, P203, DOI 10.1145/307400.307439
   Cai Yuanfang, 2013, P 9 INT ACM SIGSOFT, P133
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Gang Huang, 2006, Automated Software Engineering, V13, P257, DOI 10.1007/s10515-006-7738-4
   Gordon M, 1999, INFORM PROCESS MANAG, V35, P141, DOI 10.1016/S0306-4573(98)00041-7
   Hanmer R., 2007, SOFTWARE DESIGN PATT
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Kim J., 2010, INTELLIGENT CODE SEA
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mathiassen L, 2000, OBJECT ORIENTED ANAL, V25
   McCandless M., 2010, Lucene in Action
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mirakhorli M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P123, DOI 10.1109/ICSM.2011.6080779
   Mirakhorli M., 2014, P SM SIGSOFT INT S F
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Pressman R. S., 2005, SOFTWARE ENG PRACTIT
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vaughan L, 2004, INFORM PROCESS MANAG, V40, P677, DOI 10.1016/S0306-4573(03)00043-8
   Velasco-Elizondo P, 2016, SCI COMPUT PROGRAM, V121, P176, DOI 10.1016/j.scico.2015.12.007
   Willett P, 2006, PROGRAM-ELECTRON LIB, V40, P219, DOI 10.1108/00330330610681295
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
NR 38
TC 5
Z9 6
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2017
VL 130
BP 81
EP 93
DI 10.1016/j.jss.2016.11.034
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9NV
UT WOS:000405058000006
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Shchapov, VA
   Masich, AG
   Masich, GF
AF Shchapov, Vladislav A.
   Masich, Aleksei G.
   Masich, Grigorii F.
TI The technology of processing intensive structured dataflow on a
   supercomputer*
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Experimental setup; Intense dataflow; Supercomputer; Optical network;
   BDP; Queue manager; TCP
AB Modern experimental setups generate prolonged and intense data streams. For example, non-contact measurement techniques PIV (Particle Image Velocimetry), based on continuous image processing, are widely used in the experimental aerodynamics and hydrodynamics. These experimental stereo or volumetric velocimetry 3D PIV setups are able to generate long-lasting and intensive flows of images by using two or more cameras. High computational complexity of the image processing algorithms is the main limiting factor in the conditions of the low computational performance of PIV setups itself. Removal of these limitations by moving image processing tasks on a remote supercomputer by using our proposed technology "Distributed PIV", which will allow users to apply their new high-precision parallel algorithms in a real-time and implement feedback to the experimental setup. This paper describes the innovative technology for high-performance processing of the intensive flows of the structured data generated by an experimental setup and delivered through a high-speed DWDM backbone directly into computing nodes of a remote supercomputer. A high BDP (Bandwidth-Delay Product) problem case in the design of protocols such as TCP in respect of performance tuning to achieve maximum network throughput is solved by designed middleware. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Shchapov, Vladislav A.; Masich, Aleksei G.; Masich, Grigorii F.] Russian Acad Sci, Lab Telecommun & Informat Syst, Inst Continuous Media Mech, Ural Branch, Perm, Russia.
   [Shchapov, Vladislav A.; Masich, Grigorii F.] Perm Natl Res Polytech Univ, Dept Informat Technol & Automat Syst, Perm, Russia.
C3 Russian Academy of Sciences; Perm Federal Research Center, Ural Branch,
   RAS; Institute of Continuous Media Mechanics of the Ural Branch, RAS;
   Perm National Research Polytechnic University
RP Masich, AG (corresponding author), Russian Acad Sci, Lab Telecommun & Informat Syst, Inst Continuous Media Mech, Ural Branch, Perm, Russia.
EM shchapov@icmm.ru; mag@icmm.ru; masich@icmm.ru
RI Masich, Grigoriy/F-8417-2017
OI Masich, Grigoriy/0000-0003-0338-2158
FU RFBR [14-07-96001-r_ural_a]; Program of UD RAS [15-7-1-25]
FX The reported studies was partially supported by RFBR, research project
   No. 14-07-96001-r_ural_a and by Program of UD RAS, project No.
   15-7-1-25.
CR ADRIAN RJ, 1984, APPL OPTICS, V23, P1690, DOI 10.1364/AO.23.001690
   Allcock W., 2003, GridFTP: Protocol Extensions to FTP for the Grid
   Alrshah MA, 2013, 2013 IEEE MALAYSIA INTERNATIONAL CONFERENCE ON COMMUNICATIONS (MICC), P23, DOI 10.1109/MICC.2013.6805793
   Black D., 2010, PARALLEL NFS PNFS BL
   Black D., 2012, PARALLEL NFS PNFS BL
   Branco Miguel, 2008, Journal of Physics: Conference Series, V119, DOI 10.1088/1742-6596/119/6/062017
   Hildebr D., 2008, DEPLOYING PNFS WAN 1
   MANDRICHENKO I, 2005, GRIDFTP V2 PROTOCOL
   Masich A., 2008, B KAZNU MATH MECH 2, V13, P413
   Masich G., 2013, MEZHD SUP K NAUCHN S, P361
   Nairz A, 2008, J PHYS CONF SER, V110, DOI [10.1088/1742-6596/110/9/092019, 10.1088/1742-6596/119/6/062036]
   Salifov I., 2009, TCOMM
   Shchapov V., 2012, 2012 7 INT FOR STRAT, P1, DOI [10.1109/IFOST.2012.6357642., DOI 10.1109/IFOST.2012.6357642]
   [Щапов Владислав Алексеевич Shchapov V.A.], 2012, [Вычислительные методы и программирование: новые вычислительные технологии, Vychislitel'nye metody i programmirovanie: novye vychislitel'nye tekhnologii], V13, P139
   Vishwanath A, 2010, INT SYMP ADV NETW, P16, DOI 10.1109/ANTS.2010.5983514
   Vishwanath Venkatram, 2008, 2008 IEEE Fourth International Conference on eScience, P309, DOI 10.1109/eScience.2008.83
   Vishwanath V, 2008, MEMOCODE'08: SIXTH ACM & IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CO-DESIGN, PROCEEDINGS, P187
   Yu WK, 2008, 2008 IEEE INTERNATIONAL SYMPOSIUM ON PARALLEL & DISTRIBUTED PROCESSING, VOLS 1-8, P1468
NR 18
TC 1
Z9 1
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2017
VL 127
BP 258
EP 265
DI 10.1016/j.jss.2016.07.003
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP9JD
UT WOS:000397689000018
DA 2024-07-18
ER

PT J
AU Gren, L
   Torkar, R
   Feldt, R
AF Gren, Lucas
   Torkar, Richard
   Feldt, Robert
TI Group development and group maturity when building agile teams: A
   qualitative and quantitative investigation at eight large companies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Agile processes; Measurement; Group psychology; Maturity; Empirical
   study
ID FACULTY GROUP DEVELOPMENT; ORGANIZATIONAL CULTURE; PRODUCTIVITY;
   PERSONALITY; VALIDATION; SUCCESS; WORK; LINK
AB The agile approach to projects focuses more on close-knit teams than traditional waterfall projects, which means that aspects of group maturity become even more important. This psychological aspect is not much researched in connection to the building of an "agile team." The purpose of this study is to investigate how building agile teams is connected to a group development model taken from social psychology. We conducted ten semi-structured interviews with coaches, Scrum Masters, and managers responsible for the agile process from seven different companies, and collected survey data from 66 group-members from four companies (a total of eight different companies). The survey included an agile measurement tool and the one part of the Group Development Questionnaire. The results show that the practitioners define group developmental aspects as key factors to a successful agile transition. Also, the quantitative measurement of agility was significantly correlated to the group maturity measurement. We conclude that adding these psychological aspects to the description of the "agile team" could increase the understanding of agility and partly help define an "agile team." We propose that future work should develop specific guidelines for how software development teams at different maturity levels might adopt agile principles and practices differently. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Gren, Lucas; Torkar, Richard; Feldt, Robert] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
   [Gren, Lucas; Torkar, Richard; Feldt, Robert] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
   [Torkar, Richard; Feldt, Robert] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Blekinge
   Institute Technology
RP Gren, L (corresponding author), Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.; Gren, L (corresponding author), Univ Gothenburg, SE-41296 Gothenburg, Sweden.
EM lucas.gren@cse.gu.se; richard.torkar@cse.gu.se; robert.feldt@bth.se
RI Harrison, Dylan/AFP-8142-2022
OI Gren, Lucas/0000-0001-5488-9894
CR Adkins L., 2010, COACHING AGILE TEAMS
   [Anonymous], INT C GLOB SOFTW ENG
   [Anonymous], THESIS
   Balijepally V., 2006, COMMUNICATIONS ASS I, V18, P4
   Baruch Y, 2008, HUM RELAT, V61, P1139, DOI 10.1177/0018726708094863
   Bion W., 1992, EXPERIENCES GROUPS O
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B., 2003, BALANCING AGILITY DI
   Chronis K., 2016, AGILE PROCESSES SOFT, P16
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   DE WIT A., 1988, INT J PROJ MANAG, V6, P164, DOI DOI 10.1016/0263-7863(88)90043-9
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Gren L, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P1, DOI 10.1109/SEAA.2015.31
   Gren L, 2015, J SYST SOFTWARE, V107, P38, DOI 10.1016/j.jss.2015.05.008
   Gren L, 2014, 2014 AGILE CONFERENCE (AGILE), P11, DOI 10.1109/AGILE.2014.13
   GUZZO RA, 1985, PERS PSYCHOL, V38, P275, DOI 10.1111/j.1744-6570.1985.tb00547.x
   Hersey P., 2000, MANAGEMENT ORG BEHAV
   Hudson NW, 2015, J PERS SOC PSYCHOL, V109, P490, DOI 10.1037/pspp0000021
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Jalali S, 2014, J SYST SOFTWARE, V98, P172, DOI 10.1016/j.jss.2014.08.067
   Jensen, 1977, GROUP ORGAN STUD, V2, P419, DOI [DOI 10.1177/105960117700200404, 10.1177/105960117700200404]
   Keyton J., 2002, COMMUNICATING GROUPS
   Korhonen Kirsi, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P30, DOI 10.1007/978-3-642-21843-9_5
   Kotter J. P., 2007, HARVARD BUS REV, V92, P107
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Leppanen M., 2013, Information systems development: Reflections, challenges and new directions, P329, DOI DOI 10.1007/978-1-4614-1951-5_27
   McDonald S, 2007, COMMUN ACM, V50, P67
   Melnik G, 2006, LECT NOTES COMPUT SC, V4044, P32
   Murphy K.R., 2004, STAT POWER ANAL SIMP, V2nd
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Olszewska M, 2016, J SYST SOFTWARE, V117, P258, DOI 10.1016/j.jss.2016.03.029
   Ozcan-Top O., 2013, Software Process Improvement and Capability Determination, V349, P130, DOI [10.1007/978-3-642-38833-0_12, DOI 10.1007/978-3-642-38833-0_12]
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Ranganath P., 2011, Proceedings of the 2011 Agile Conference, P187, DOI 10.1109/AGILE.2011.40
   Seger T, 2008, AGILE 2008, PROCEEDINGS, P3, DOI 10.1109/Agile.2008.27
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Simon A., 2000, PROCESS GROUP PSYCHO, P357
   So C, 2009, LECT NOTES BUS INF P, V31, P83
   SUNDSTROM E, 1990, AM PSYCHOL, V45, P120, DOI 10.1037/0003-066X.45.2.120
   Teh A, 2012, IEEE SOFTWARE, V29, P53, DOI 10.1109/MS.2011.157
   Terracciano A, 2005, PSYCHOL AGING, V20, P493, DOI 10.1037/0882-7974.20.3.493
   Tolfo C, 2008, J SYST SOFTWARE, V81, P1955, DOI 10.1016/j.jss.2008.01.014
   Tolfo C, 2011, J SOFTW MAINT EVOL-R, V23, P423, DOI 10.1002/smr.483
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   Wheelan S.A., 2013, CREATING EFFECTIVE T, V4th
   Wheelan S.A., 2005, Group processes: A developmental perspective, V2nd
   Wheelan SA, 1998, SMALL GR RES, V29, P371, DOI 10.1177/1046496498293005
   Wheelan SA, 1999, SMALL GR RES, V30, P59, DOI 10.1177/104649649903000104
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   WHEELAN SA, 1993, SMALL GR RES, V24, P60, DOI 10.1177/1046496493241005
   Wheelan SA, 2003, AM J CRIT CARE, V12, P527, DOI 10.4037/ajcc2003.12.6.527
   Wheelan SA, 2005, J EDUC RES, V98, P323, DOI 10.3200/JOER.98.6.323-330
   Wheelan SA, 2009, SMALL GR RES, V40, P247, DOI 10.1177/1046496408328703
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Yu L., 2014, ADV HIGHER ED PROFES
NR 59
TC 53
Z9 63
U1 1
U2 144
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2017
VL 124
BP 104
EP 119
DI 10.1016/j.jss.2016.11.024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EG1XH
UT WOS:000390827200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Petroni, F
   Querzoni, L
   Beraldi, R
   Paolucci, M
AF Petroni, F.
   Querzoni, L.
   Beraldi, R.
   Paolucci, M.
TI LCBM: a fast and lightweight collaborative filtering algorithm for
   binary ratings
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Collaborative filtering; Big data; Personalization; Recommendation
   systems
ID RECOMMENDER SYSTEMS
AB In the last ten years, recommendation systems evolved from novelties to powerful business tools, deeply changing the internet industry. Collaborative Filtering (CF) represents a widely adopted strategy today to build recommendation engines. The most advanced CF techniques (i.e. those based on matrix factorization) provide high quality results, but may incur prohibitive computational costs when applied to very large data sets.
   In this paper we present Linear Classifier of Beta distributions Means (LCBM), a novel collaborative filtering algorithm for binary ratings that is (i) inherently parallelizable (ii) provides results whose quality is on-par with state-of-the-art solutions (iii) at a fraction of the computational cost. These characteristics allow LCBM to efficiently handle large instances of the collaborative filtering problem on a single machine in short timeframes. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Petroni, F.; Querzoni, L.; Beraldi, R.] Univ Roma La Sapienza, Dept Comp Control & Management Engn Antonio Ruber, Rome, Italy.
   [Paolucci, M.] CNR, Inst Cognit Sci & Technol, LABSS, Rome, Italy.
C3 Sapienza University Rome; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienze e Tecnologie della Cognizione (ISTC-CNR)
RP Petroni, F (corresponding author), Univ Roma La Sapienza, Dept Comp Control & Management Engn Antonio Ruber, Rome, Italy.
EM petroni@dis.uniroma1.it; querzoni@dis.uniroma1.it;
   beraldi@dis.uniroma1.it; mario.paolucci@istc.cnr.it
RI Paolucci, Mario/C-4894-2009; Querzoni, Leonardo/AAX-7828-2021; Querzoni,
   Leonardo/AAO-4561-2020
OI Paolucci, Mario/0000-0002-8276-1086; Querzoni,
   Leonardo/0000-0002-8711-4216; Querzoni, Leonardo/0000-0002-8711-4216;
   beraldi, roberto/0000-0002-9731-6321
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   [Anonymous], 2011, INTRO RECOMMENDER SY
   [Anonymous], 2013, P 7 ACM C RECOMMENDE
   [Anonymous], 1998, AAAI WORKSH REC SYST
   [Anonymous], 2013, New Tweets per Second Record, and How!
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Bennett J., 2007, P KDD CUP WORKSHOP, P35
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breese J., 1998, P 14 C UNC ART INT, P43
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Das Abhinandan S, 2007, P 16 INT C WORLD WID, P271
   Deshpande M, 2004, ACM T INFORM SYST, V22, P143, DOI 10.1145/963770.963776
   Dror Gideon, 2012, PMLR
   Gemulla Rainer, 2011, P ACM SIGKDD
   GOLDBERG D, 1992, COMMUN ACM, V35, P61, DOI 10.1145/138859.138867
   Halevy A, 2009, IEEE INTELL SYST, V24, P8, DOI 10.1109/MIS.2009.36
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Herlocker JL, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P230, DOI 10.1145/312624.312682
   Hofmann T, 2004, ACM T INFORM SYST, V22, P89, DOI 10.1145/963770.963774
   Hu YF, 2008, IEEE DATA MINING, P263, DOI 10.1109/ICDM.2008.22
   Josang A., 2002, P 15 BLED EL COMM C, V5, P2502
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Kabbur S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P167, DOI 10.1109/ICDMW.2014.108
   Khoshgoftaar T.M., 2009, ADV ARTIFICIAL INTEL, DOI [10.1155/2009/421425, DOI 10.1155/2009/421425]
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Konstan JA, 1997, COMMUN ACM, V40, P77, DOI 10.1145/245108.245126
   Konstan JA, 2012, USER MODEL USER-ADAP, V22, P101, DOI 10.1007/s11257-011-9112-x
   Koren Y., 2008, P 14 ACM SIGKDD INT, P426
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Lemire D, 2005, SIAM PROC S, P471
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Luo X, 2014, IEEE T IND INFORM, V10, P1273, DOI 10.1109/TII.2014.2308433
   Makari F, 2015, KNOWL INF SYST, V42, P493, DOI 10.1007/s10115-013-0718-7
   Mangalindan J., 2012, CNN MONEY
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Narasimhamurthy A. B., 2010, OFDM Systems for Wireless Communications, P1
   Niu Y., 2012, KDD CUP WORKSH, V170
   Pan R, 2008, IEEE DATA MINING, P502, DOI 10.1109/ICDM.2008.16
   Petroni F, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P241, DOI 10.1145/2645710.2645725
   Resnick P., 1994, P ACM C COMP SUPP CO, P175
   Salakhutdinov R., 2007, P 24 INT C MACH LEAR, P791, DOI DOI 10.1145/1273496.1273596
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Shi Y., 2009, Proc. ofRecsys'09, P125
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   Takács G, 2009, J MACH LEARN RES, V10, P623
   Teflioudi C, 2012, IEEE DATA MINING, P655, DOI 10.1109/ICDM.2012.120
   Ungar L, 1998, CONALD 98
   Wang J, 2008, INFORM RETRIEVAL, V11, P477, DOI 10.1007/s10791-008-9060-1
   Xu RZ, 2014, J SYST SOFTWARE, V95, P231, DOI 10.1016/j.jss.2014.04.045
   Zhang JY, 2007, RECSYS 07: PROCEEDINGS OF THE 2007 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P57
   Zhou YH, 2008, LECT NOTES COMPUT SC, V5034, P337, DOI 10.1007/978-3-540-68880-8_32
NR 51
TC 4
Z9 4
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 583
EP 594
DI 10.1016/j.jss.2016.04.062
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800035
DA 2024-07-18
ER

PT J
AU Soldani, J
   Binz, T
   Breitenbücher, U
   Leymann, F
   Brogi, A
AF Soldani, Jacopo
   Binz, Tobias
   Breitenbuecher, Uwe
   Leymann, Frank
   Brogi, Antonio
TI TOSCAMART: A method for adapting and reusing cloud applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud application; Reuse; TOSCA
AB To fully exploit the potential of cloud computing, design and development of cloud applications should be eased and supported. The OASIS TOSCA standard enables developers to design and develop cloud applications by specifying their topologies as orchestrations of typed nodes. However, building such application topologies often results in reinventing the wheel multiple times when similar solutions are manually created by different developers for different applications having the same requirements. Thus, the reusability of existing TOSCA solutions is crucial to ease and support design and development processes. In this paper, we introduce and assess TOSCAMART, a method that enables deriving valid implementations for custom components from a repository of cloud applications. The method enables developers to specify individual components in their application topologies, and illustrates how to match, adapt, and reuse existing fragments of applications to implement these components while fulfiling all their compliance requirements. We also validate TOSCAMART by means of a prototypical implementation based on an open source toolchain and a case study. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Soldani, Jacopo; Brogi, Antonio] Univ Pisa, Dept Comp Sci, I-56100 Pisa, Italy.
   [Binz, Tobias; Breitenbuecher, Uwe; Leymann, Frank] Univ Stuttgart, Inst Architecture Applicat Syst, Stuttgart, Germany.
C3 University of Pisa; University of Stuttgart
RP Soldani, J (corresponding author), Univ Pisa, Dept Comp Sci, I-56100 Pisa, Italy.
EM soldani@di.unipi.it; binz@iaas.uni-stuttgart.de;
   breitenbucher@iaas.uni-stuttgart.de; leymann@iaas.uni-stuttgart.de;
   Brogi@di.unipi.it
RI Breitenbücher, Uwe/AAD-7112-2020; Brogi, Antonio/HLQ-2040-2023; Soldani,
   Jacopo/O-5057-2019; Leymann, Frank/I-2070-2016
OI Soldani, Jacopo/0000-0002-2435-3543; Leymann, Frank/0000-0002-9123-259X;
   Brogi, Antonio/0000-0003-2048-2468
FU European Project SeaClouds [EU-FP7-ICT-610531]; University of Pisa
   Project Through the fog [PRA_2016_64]; BMWi Project CloudCycle
   [01MD11023]
FX The research leading to these results has been supported by the European
   Project SeaClouds (EU-FP7-ICT-610531), by the University of Pisa Project
   Through the fog (PRA_2016_64), and by the BMWi Project CloudCycle
   (01MD11023).
CR Andrikopoulos V., 2014, P 26 INT C ADV INF S
   [Anonymous], 2014, P 6 CENTR EUR WORKSH
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Arnold W., 2007, P 5 INT C SERV OR CO
   Arnold W, 2008, LECT NOTES COMPUT SC, V5364, P162, DOI 10.1007/978-3-540-89652-4_15
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   Binz T., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P742, DOI 10.1109/CLOUD.2012.143
   Binz T., 2014, Advanced Web Services, P527
   Binz T, 2014, IT-INF TECHNOL, V56, P106, DOI 10.1515/itit-2013-1032
   Binz T, 2013, IEEE INT CONF SERV, P126, DOI 10.1109/SOCA.2013.29
   Binz T, 2013, LECT NOTES COMPUT SC, V8274, P692, DOI 10.1007/978-3-642-45005-1_62
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Brogi A., 2014, P 3 EUR C SERV OR CL
   Brogi A., 2013, Adv. in Serv.-Oriented and Cloud Comput, P218
   Brogi A., 2014, LECT NOTES INFORM LN, P235
   Brogi A, 2016, SCI COMPUT PROGRAM, V115, P177, DOI 10.1016/j.scico.2015.09.004
   Brogi A, 2015, LECT NOTES COMPUT SC, V9306, P19, DOI 10.1007/978-3-319-24072-5_2
   Di Martino B, 2011, LECT NOTES COMPUT SC, V6586, P571, DOI 10.1007/978-3-642-21878-1_70
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   GALIL Z, 1991, COMPUT SURV, V23, P319, DOI 10.1145/116873.116878
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Guillén J, 2013, J SYST SOFTWARE, V86, P2294, DOI 10.1016/j.jss.2012.12.033
   Hamdaqa M., 2011, P 1 INT C CLOUD COMP
   Hirmer P., 2014, GI-Jahrestagung, P247
   Kongdenfha W, 2009, IEEE T SERV COMPUT, V2, P94, DOI 10.1109/TSC.2009.12
   Kopp O, 2013, LECT NOTES COMPUT SC, V8274, P700, DOI 10.1007/978-3-642-45005-1_64
   OASIS, 2013, TOSCA 1 0 TOP ORCH S
   OASIS, 2013, Topology and Orchestration Specification for Cloud Applications Version 1.0 OASIS Standard
   Sangiorgi Davide, 2011, Introduction to bisimulation and coinduction
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   Wettinger J., 2013, P 3 INT C CLOUD COMP
   Xiong X., 2005, FIRST INTERNATIONAL, DOI [10.1109/SKG.2005.123.103, DOI 10.1109/SKG.2005.123.103]
NR 32
TC 19
Z9 20
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2016
VL 113
BP 395
EP 406
DI 10.1016/j.jss.2015.12.025
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC8FZ
UT WOS:000369456600022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paige, RF
   Matragkas, N
   Rose, LM
AF Paige, Richard F.
   Matragkas, Nicholas
   Rose, Louis M.
TI Evolving models in Model-Driven Engineering: State-of-the-art and future
   challenges
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Evolution; Migration; Co-evolution
AB The artefacts used in Model-Driven Engineering (MDE) evolve as a matter of course: models are modified and updated as part of the engineering process; metamodels change as a result of domain analysis and standardisation efforts; and the operations applied to models change as engineering requirements change. MDE artefacts are inter-related, and simultaneously constrain each other, making evolution a challenge to manage. We discuss some of the key problems of evolution in MDE, summarise the key state-of-the-art, and look forward to new challenges in research in this area. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Paige, Richard F.; Matragkas, Nicholas; Rose, Louis M.] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Paige, RF (corresponding author), Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM richard.paige@york.ac.uk; nicholas.matragkas@york.ac.uk;
   Iouis.rose@york.ac.uk
RI Rose, Louis M/L-8892-2014
OI Paige, Richard Freeman/0000-0002-1978-9852
CR Alanen M., 2003, Difference and union of models
   Altmanninger K., 2009, P JOINT MODSE MC02CM
   ALTMANNINGER KG, 2008, P 1 INT WORKSH MOD C
   [Anonymous], 2009, 14 INT VDI C EL SYST
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], 2003, Eclipse Modeling Framework
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beine M., 2014, P EDBT ICDT WORKSH, P100
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Debruyne V, 2005, ARCHITECTURE DESCRIP, P181, DOI DOI 10.1007/0-387-24590-1_12
   Demuth R. E., 2013, P ME MODELS, P14
   Di Ruscio Davide, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P114, DOI 10.1109/SEAA.2013.22
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Di Ruscio Davide, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P91, DOI 10.1007/978-3-642-30982-3_4
   Diller A., 1990, Z INTRO FORMAL METHO, V2
   Diskin Z, 2012, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.93.1
   Diskin Z, 2013, LECT NOTES COMPUT SC, V8225, P322, DOI 10.1007/978-3-319-02654-1_18
   Ehrig H, 2011, LECT NOTES COMPUT SC, V6603, P202, DOI 10.1007/978-3-642-19811-3_15
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   GIESE H, 2006, P 9 INT C MOD DRIV E
   Group A., 2007, ATL TRANSF LANG PROJ
   Gruschko B, 2007, P WORKSH MOD DRIV SO
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Hussey K., 2006, ADV FEATURES EMF
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Koegel M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P43, DOI 10.1109/CVSM.2009.5071721
   Kolovos D. S., 2015, EXTENSIBLE PLATFORM
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Kolovos Dimitrios S., 2013, XMMoDELS, V1089, P2
   Krause Christian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P76, DOI 10.1007/978-3-642-38883-5_10
   Langer P, 2013, J SYST SOFTWARE, V86, P551, DOI 10.1016/j.jss.2012.09.037
   Melnik S., 2001, 200125 STANF INFOLAB
   Mendez D., 2010, P MOD EV WORKSH ME
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Nuseibeh B., 2001, J SYST SOFTW, V56
   Oliveira HamiltonL. R., 2008, Proceedings of the 12th International Workshop on Software Configuration Management, SCM 2005, Lisbon, Portugal, September 5-6, 2005, P1, DOI [10.1145/1109128.1109129, DOI 10.1145/1109128.1109129]
   Paige R. F., 2011, P GEN TRANSF TECHN S, P197
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Roddick J. F., 1995, INF SOFTW TECHNOL, V37
   Rose L, 2013, SOFTW SYST MODEL, V12, P201, DOI 10.1007/s10270-011-0203-2
   Rose LM, 2014, SOFTW SYST MODEL, V13, P735, DOI 10.1007/s10270-012-0296-2
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rose Louis Mathew, 2011, Ph.D. Dissertation
   Roser S., 2008, J DATA SEMANT, VXI
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Ruscio D.D., 2010, Software Language Engineering, P143
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taentzer G, 2013, LECT NOTES COMPUT SC, V8107, P254, DOI 10.1007/978-3-642-41533-3_16
   Whittle J., 2003, LECT NOTES COMPUTER, V2863
   Williams J.R., 2012, 6th International Workshop on Models and Evolution, Proceedings of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, Innsbruck Austria, 15 October 2012, P39
NR 60
TC 43
Z9 47
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2016
VL 111
BP 272
EP 280
DI 10.1016/j.jss.2015.08.047
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DE2NA
UT WOS:000370462800018
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kelly, D
AF Kelly, Diane
TI Scientific software development viewed as knowledge acquisition: Towards
   understanding the development of risk-averse scientific software
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Scientific software; Software development; Knowledge model
ID EVOLUTION
AB This paper presents a model of software development based on knowledge acquisition. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as "end-user programmers". We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model. Crown Copyright (C) 2015 Published by Elsevier Inc. All rights reserved.
C1 [Kelly, Diane] Royal Mil Coll Canada, Dept Math & Comp Sci, Kingston, ON, Canada.
   [Kelly, Diane] Royal Mil Coll Canada, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Royal Military College - Canada; Royal Military College - Canada
RP Kelly, D (corresponding author), Royal Mil Coll Canada, Dept Math & Comp Sci, Kingston, ON, Canada.
EM kelly-d@rmc.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   IEEE
FX This work is funded by the Natural Sciences and Engineering Research
   Council of Canada (NSERC). Many thanks go to the scientists and
   engineers who offered their time and enthusiasm for these studies.
   Several talks given by the author based on these interviews were funded
   by IEEE.
CR Ackroyd KS, 2008, IEEE SOFTWARE, V25, P44, DOI 10.1109/MS.2008.93
   Baxter SM, 2006, PLOS COMPUT BIOL, V2, P975, DOI 10.1371/journal.pcbi.0020087
   Beasley C., 2005, ACM SIGSOFT SOFTWARE, V30, P28
   Boisvert R. F., 2000, ARCHITECTURE SCI SOF
   Canadian Standards Association, 1999, N286799R2012 CSA
   Cote N., 2005, THESIS ROYAL MILITAR
   Crabtree CA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P22, DOI 10.1109/SECSE.2009.5069158
   Curtis W., 1979, IEEE T SOFTWARE ENG, VSE-5, P6
   Floyd B. D., 2013, IEEE COMPUT, P26
   Gray R. C., 2010, THESIS ROYAL MILITAR
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Hook D., 2009, THESIS QUEENS U KING
   Hook D, 2009, COMPUT SCI ENG, V11, P40, DOI 10.1109/MCSE.2009.200
   Jackson M., 2001, Problem Frames
   Jorgensen PaulC., 1995, Software Testing: A Craftsman's Approach, V1st
   Kelly D., 2008, IEEE T SOFTWARE ENG, V32, P315
   Kelly D., 2013, P IBM CTR ADV STUD C
   Kelly D., 2014, P IEEE CAN C EL COMP
   Kelly D., 2004, THESIS ROYAL MILITAR
   Kelly D., 2015, J APPL CLIN IN PRESS, V16
   Kelly D., 2011, J ORGAN END USER COM, V23, P63
   Kelly D, 2008, COMPUTER, V41, P88, DOI 10.1109/MC.2008.229
   Kelly D, 2011, IEEE SOFTWARE, V28, P84, DOI 10.1109/MS.2010.88
   Kelly D, 2011, J COMPUT SCI-NETH, V2, P47, DOI 10.1016/j.jocs.2010.12.002
   Kelly D, 2009, J SYST SOFTWARE, V82, P851, DOI 10.1016/j.jss.2008.11.846
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kochan T., 2002, SLOAN SCH 50 ANN SES
   Lehman MM, 1998, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSM.1998.738510
   Merali Z, 2010, NATURE, V467, P775, DOI 10.1038/467775a
   Ralph P., 2012, P SEM WORKSH GEN THE, P52
   Royce W.W., 1970, IEEE WESCON
   Sanders R., 2008, THESIS QUEENS U KING
   Sanders R, 2008, IEEE SOFTWARE, V25, P21, DOI 10.1109/MS.2008.84
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J., 2004, 200425 OP U
   Sletholt M. T., 2012, IEEE COMPUT SCI ENG, P2
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
NR 37
TC 16
Z9 18
U1 1
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2015
VL 109
BP 50
EP 61
DI 10.1016/j.jss.2015.07.027
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CS5SG
UT WOS:000362137700004
DA 2024-07-18
ER

PT J
AU Gui, JS
   Ahmadi, M
   Tong, F
AF Gui, Jinsong
   Ahmadi, Maryam
   Tong, Fei
TI Dynamically constructing and maintaining virtual access points in a
   macro cell with selfish nodes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Topology control; Stimulation; Robustness
ID DISTRIBUTED TOPOLOGY CONTROL; AD-HOC NETWORKS; ENERGY-EFFICIENT;
   WIRELESS; LIFETIME
AB With the appearance of wireless applications generating a huge volume of traffic, the low-power access points (e.g., pico base stations) are introduced to cellular systems to improve system capacity. However, network operators must make a huge investment in the installation and maintenance. The added relays require flexible site acquisition, which is important yet intractable for network service providers. Therefore, we propose an economical and effective alternative scheme for some outdoor scenarios (e.g., outdoor festivals). The basic idea is that, inspired by a class of cell-based clustering approaches, we partition a macro cell into a number of small cells, such that a connected backbone network can be constructed and maintained by electing a wireless client device from each small cell to build its inter-subcell links (i.e., the links between the neighboring small cells). Also, a new game-based incentive mechanism is proposed and integrated into our cell-based approach to stimulate selfish devices to participate in the construction and maintenance of network backbone. The correctness of this incentive mechanism has been proved. Furthermore, we have also proved that the topology derived from our scheme has the property of robustness. The simulation results indicate that our scheme achieves less control messages and longer network lifetime, compared with the existing cell-based clustering schemes. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Gui, Jinsong] Cent S Univ, Sch Informat Sci & Engn, Changsha 410083, Hunan, Peoples R China.
   [Ahmadi, Maryam; Tong, Fei] Univ Victoria, Dept Comp Sci, PAN Lab, Victoria, BC, Canada.
C3 Central South University; University of Victoria
RP Gui, JS (corresponding author), Cent S Univ, Sch Informat Sci & Engn, South Rd LuShan, Changsha 410083, Hunan, Peoples R China.
EM jsgui2010@csu.edu.cn; mahmadi@uvic.ca; tongfei@uvic.ca
FU National Natural Science Foundation of China [61272494, 61309027,
   61379110, 61379058, 61379057, 61073104, 61202495]; National Basic
   Research Program of China (973 Program) [2014CB046305]; China
   Scholarship Council
FX This work was supported in part by the National Natural Science
   Foundation of China under grant (nos. 61272494, 61309027, 61379110,
   61379058, 61379057, 61073104, 61202495), and the National Basic Research
   Program of China (973 Program) (2014CB046305). Also, research of this
   paper was carried out while the first author was visiting the University
   of Victoria. He expresses his sincere thanks to China Scholarship
   Council for financial support and to the Department of Computer Science
   at the University of Victoria for the kind hospitality.
CR Amis A. D., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P32, DOI 10.1109/INFCOM.2000.832171
   Bhardwaj M, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, VOLS 1-10, CONFERENCE RECORD, P785, DOI 10.1109/ICC.2001.937346
   Bhargava B, 2004, MOBILE NETW APPL, V9, P393, DOI 10.1023/B:MONE.0000031606.04846.fa
   Chen BJ, 2002, WIREL NETW, V8, P481, DOI 10.1023/A:1016542229220
   Chu XY, 2012, IEEE INFOCOM SER, P262, DOI 10.1109/INFCOM.2012.6195667
   Eidenbenz S, 2006, MOBILE NETW APPL, V11, P143, DOI 10.1007/s11036-005-4468-y
   Fudenberg D., 1991, GAME THEORY
   Guha S, 1998, ALGORITHMICA, V20, P374, DOI 10.1007/PL00009201
   Gui JS, 2015, COMPUT COMMUN, V59, P24, DOI 10.1016/j.comcom.2015.01.005
   Heinzelman W. B., 2000, Application-specific protocol architectures for wireless networks
   Heinzelman WB, 2002, IEEE T WIREL COMMUN, V1, P660, DOI 10.1109/TWC.2002.804190
   Hendrickx JM, 2008, IEEE T AUTOMAT CONTR, V53, P968, DOI 10.1109/TAC.2008.920239
   Hsin C.F., 2005, P 19 IEEE INT PAR DI, P4
   Jiang LS, 2015, COMPUT ELECTR ENG, V41, P191, DOI 10.1016/j.compeleceng.2014.04.001
   Komali Ramakant S., 2008, 2008 6th International Symposium on Modeling and Optimization in Mobile, Ad Hoc, and Wireless Networks and Workshops (WiOPT), P251, DOI 10.1109/WIOPT.2008.4586073
   Komali RS, 2010, IEEE T WIREL COMMUN, V9, P1434, DOI 10.1109/TWC.2010.04.090400
   Komali RS, 2008, IEEE T MOBILE COMPUT, V7, P1057, DOI 10.1109/TMC.2008.17
   Komali RS, 2006, CONSUM COMM NETWORK, P563
   Krishna P., 1997, Computer Communication Review, V27, P49, DOI 10.1145/263876.263885
   Liu AF, 2014, PEER PEER NETW APPL, V7, P255, DOI 10.1007/s12083-012-0130-1
   Liu AF, 2013, INFORM SCIENCES, V230, P197, DOI 10.1016/j.ins.2012.12.037
   Luo XY, 2013, COMPUT NETW, V57, P1037, DOI 10.1016/j.comnet.2012.12.002
   Monderer D, 1996, GAME ECON BEHAV, V14, P124, DOI 10.1006/game.1996.0044
   Osborne Martin J, 1994, COURSE GAME THEORY
   Santi P, 2004, LECT NOTES COMPUT SC, V2920, P106
   Schurgers C., 2002, MOBIHOC 2002. Proceedings of the Third ACM International Symposium on Mobile Ad Hoc Networking and Computing, P135, DOI 10.1145/513800.513817
   Sivakumar R, 1999, IEEE J SEL AREA COMM, V17, P1454, DOI 10.1109/49.779926
   Small Cell Forum, 2013, BACKH TECHN SMALL CE
   Tay T.-S., 1985, Struct. Topol., V11, P21
   Wang BB, 2010, COMPUT NETW, V54, P2537, DOI 10.1016/j.comnet.2010.04.004
   Wu HY, 2001, IEEE J SEL AREA COMM, V19, P2105, DOI 10.1109/49.957326
   Xu Ya, 2001, Proc. of International Conference on Mobile Computing and Networking, P70, DOI [10.1145/381677.381685, DOI 10.1145/381677.381685]
   Xu YH, 2013, IEEE COMMUN SURV TUT, V15, P1689, DOI 10.1109/SURV.2013.030713.00189
   Xue KP, 2013, J NETW COMPUT APPL, V36, P316, DOI 10.1016/j.jnca.2012.05.010
   Younis O, 2004, IEEE T MOBILE COMPUT, V3, P366, DOI 10.1109/TMC.2004.41
   Youssef MA, 2009, IEEE T PARALL DISTR, V20, P1844, DOI 10.1109/TPDS.2009.32
   Zarifzadeh S, 2012, COMPUT NETW, V56, P902, DOI 10.1016/j.comnet.2011.10.025
NR 37
TC 7
Z9 7
U1 0
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2015
VL 108
BP 1
EP 22
DI 10.1016/j.jss.2015.06.002
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CO2EQ
UT WOS:000358969300001
DA 2024-07-18
ER

PT J
AU Gómez-Martínez, E
   Linaje, M
   Sánchez-Figueroa, F
   Iglesias-Pérez, A
   Preciado, JC
   González-Cabero, R
   Merseguer, J
AF Gomez-Martinez, Elena
   Linaje, Marino
   Sanchez-Figueroa, Fernando
   Iglesias-Perez, Andres
   Carlos Preciado, Juan
   Gonzalez-Cabero, Rafael
   Merseguer, Jose
TI A semantic approach for designing Assistive Software Recommender systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software design; Assistive Software; Software non-functional evaluation
ID PERFORMANCE; INTERFACES; ONTOLOGY; PLATFORM
AB Assistive Software offers a solution for people with disabilities to manage specialized hardware, devices or services. However, these users may have difficulties in selecting and installing Assistive Software in their devices for managing smart environments. This paper addresses the requirements of these kinds of systems and their design in the context of interoperability architectures. Our solution follows a semantic approach, for which ontologies are a key. The paper also presents an implementation of our design proposal, i.e., a real and usable system which is evaluated according to a set of functional and non-functional requirements here proposed. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Gomez-Martinez, Elena; Merseguer, Jose] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza 50018, Spain.
   [Linaje, Marino; Sanchez-Figueroa, Fernando; Carlos Preciado, Juan] Univ Extremadura, Escuela Politecn Caceres, E-06071 Badajoz, Spain.
   [Iglesias-Perez, Andres] Ilun Accesibilidad Estudios & Proyectos, Madrid, Spain.
   [Gonzalez-Cabero, Rafael] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Ontol Engn Grp, E-28040 Madrid, Spain.
C3 University of Zaragoza; Universidad de Extremadura; Universidad
   Politecnica de Madrid
RP Merseguer, J (corresponding author), Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza 50018, Spain.
EM elena.gomez.martinez@upm.es; mlinaje@unex.es; fernando@unex.es;
   andresip@unex.es; jcpreciado@unex.es; rgonza@fi.upm.es; jmerse@unizar.es
RI Merseguer, Jose/A-6028-2012; Linaje, Marino/E-9142-2012;
   Sanchez-Figueroa, Fernando/L-4978-2014
OI Merseguer, Jose/0000-0001-5538-3553; Linaje, Marino/0000-0002-8291-7159;
   Sanchez-Figueroa, Fernando/0000-0002-6861-1540; Gomez-Martinez,
   Elena/0000-0002-7753-3345; Preciado, Juan Carlos/0000-0002-2582-9742;
   Iglesias-Perez, Andres/0000-0002-8005-9090
FU CDTI (Industrial Technology Development Centre) under the CENIT
   (National Strategic Technical Research Consortia) Programme within the
   framework of the Spanish governments INGENIO initiative; European
   Commission [H2020-644869]
FX The research described in this paper arises from the Spanish research
   project INREDIS (INterfaces for RElations between Environment and people
   with DISabilities). The authors wish to thank the researchers who have
   been periodically reviewing the AS ontology specification and the
   recommender system. INREDIS is led by Technosite and funded by the CDTI
   (Industrial Technology Development Centre) under the CENIT (National
   Strategic Technical Research Consortia) Programme, within the framework
   of the Spanish governments INGENIO 2010 initiative. The opinions
   expressed in this paper are those of the authors and are not necessarily
   those of the INREDIS project partners or of the CDTI. The authors want
   to thank the anonymous reviewers for their valuable comments that have
   largely improved the paper. Jose Merseguer has been supported by the
   European Commission Grant agreement no. H2020-644869 (DICE).
CR Andrich R., 2013, Technology Disability, V25, P147, DOI 10.3233/TAD-130379
   Andrii Ryzhkov, 2013, [The Journal of Foreign Studies, 외국학연구], V25, P127
   [Anonymous], 247562009 ISOIEC
   [Anonymous], 2004, PRACTICAL GUIDE BUIL
   [Anonymous], 2001, ICF: International Classification of Functioning, Disability and Health: Short Version
   [Anonymous], 99992011 ISO
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Casacuberta J., 2012, LECT NOTES COMPUTER, V7657, P316
   Castro AG, 2008, ONTORACT 2008: FIRST INTERNATIONAL WORKSHOP ON ONTOLOGIES IN INTERACTIVE SYSTEMS, PROCEEDINGS, P57, DOI 10.1109/ONTORACT.2008.17
   Catalan E., 2010, TECHNICAL REPORT
   Clark and Parsia, 2014, PELL OWL 2 REAS JAV
   Corcho O, 2003, DATA KNOWL ENG, V46, P41, DOI 10.1016/S0169-023X(02)00195-7
   Danial-Saad A., 2013, ASSIST TECHNOL, P241
   Danial-Saad A, 2013, DISABIL REHABIL-ASSI, V8, P275, DOI 10.3109/17483107.2012.723238
   Gimenez R., 2012, 2012 IEEE Workshops of International Conference on Advanced Information Networking and Applications (WAINA), P714, DOI 10.1109/WAINA.2012.191
   Gómez-Martínez E, 2014, EMPIR SOFTW ENG, V19, P1967, DOI 10.1007/s10664-013-9297-1
   Gower V, 2012, LECT NOTES COMPUT SC, V7382, P215, DOI 10.1007/978-3-642-31522-0_32
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   KADOUCHE R., 2009, International journal of smart home, V3, P13
   Kaklanis Nikolaos, 2014, Universal Access in Human-Computer Interaction. Design and Development Methods for Universal Access. 8th International Conference, UAHCI 2014, Held as Part of HCI International 2014. Proceedings: LNCS 8513, P236, DOI 10.1007/978-3-319-07437-5_23
   Kaklanis N, 2014, LECT NOTES COMPUT SC, V8548, P275, DOI 10.1007/978-3-319-08599-9_42
   Klein M., 2007, AMBIENT INTELLIGENCE, V10
   Levandoski JJ, 2011, PROC VLDB ENDOW, V4, P911
   Margetis George, 2012, Ambient Intelligence. Third International Joint Conference (AML 2012). Proceedings, P328, DOI 10.1007/978-3-642-34898-3_24
   Marsan M.A., 1995, MODELLING GEN STOCHA
   Masuwa-Morga KR, 2008, ONTORACT 2008: FIRST INTERNATIONAL WORKSHOP ON ONTOLOGIES IN INTERACTIVE SYSTEMS, PROCEEDINGS, P33, DOI 10.1109/ONTORACT.2008.18
   Masuwa-Morgan KR, 2004, INTERACT COMPUT, V16, P523, DOI 10.1016/j.intcom.2004.04.001
   Murua A., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P985
   Nee O, 2008, IET COMMUN, V2, P192, DOI 10.1049/iet-com:20060699
   Oracle Corporation, 2014, MYSQL
   Phanouriou C., 2000, TECHNICAL REPORT
   Porta J, 2014, COMPUT SPEECH LANG, V28, P788, DOI 10.1016/j.csl.2013.10.003
   Pous M, 2012, CONSUM COMM NETWORK, P404, DOI 10.1109/CCNC.2012.6181024
   Prud'hommeaux Eric., 2006, SPARQL Query Language for RDF
   RedHat, 2014, DROOLS BUS LOG INT P
   Sainz F, 2011, LECT NOTES COMPUT SC, V6949, P527, DOI 10.1007/978-3-642-23768-3_74
   Smith C. U, 1990, SER SOFTWARE ENG I S
   Smith Connie U., 2002, International Computer Measurement Group Conference
   Stephanidis C, 2001, USER MODEL USER-ADAP, V11, P159, DOI 10.1023/A:1011144232235
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Vergados DD, 2010, PERS UBIQUIT COMPUT, V14, P575, DOI 10.1007/s00779-009-0278-8
   W3C, 1999, XSLT EXT STYL LANG T
   W3C, 2012, OWL
   World Wide Web Consortium (W3C), 2004, OWL WEB ONTOLOGY LAN
   Zimmermann Gottfried, 2008, Universal Access in the Information Society, V7, P117, DOI 10.1007/s10209-007-0108-6
   Zimmermann G, 2007, LECT NOTES COMPUT SC, V4551, P1040
NR 47
TC 4
Z9 4
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2015
VL 104
BP 166
EP 178
DI 10.1016/j.jss.2015.03.009
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG8YR
UT WOS:000353602100013
DA 2024-07-18
ER

PT J
AU Aleti, A
   Grunske, L
AF Aleti, Aldeida
   Grunske, Lars
TI Test data generation with a Kalman filter-based adaptive genetic
   algorithm
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Test data generation; Optimisation; Adaptive parameter control
ID SELF-ADAPTATION; OPTIMIZATION; SOFTWARE; SEARCH
AB Software testing is a crucial part of software development. It enables quality assurance, such as correctness, completeness and high reliability of the software systems. Current state-of-the-art software testing techniques employ search-based optimisation methods, such as genetic algorithms to handle the difficult and laborious task of test data generation. Despite their general applicability, genetic algorithms have to be parameterised in order to produce results of high quality. Different parameter values may be optimal for different problems and even different problem instances. In this work, we introduce a new approach for generating test data, based on adaptive optimisation. The adaptive optimisation framework uses feedback from the optimisation process to adjust parameter values of a genetic algorithm during the search. Our approach is compared to a state of the art test data optimisation algorithm that does not adapt parameter values online, and a representative adaptive optimisation algorithm, outperforming both methods in a wide range of problems. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Aleti, Aldeida] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Grunske, Lars] Univ Stuttgart, Inst Software Technol, Stuttgart, Germany.
C3 Monash University; University of Stuttgart
RP Aleti, A (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM aldeida.aleti@monash.edu; lars.grunske@informatik.uni-stuttgart.de
RI Aleti, Aldeida/AAE-8486-2019; Grunske, Lars/AAH-4550-2019
OI Aleti, Aldeida/0000-0002-1716-690X; Grunske, Lars/0000-0002-8747-3745
FU Australian Research Council; Australian Government agencies; Australian
   Research Council's Discovery Projects funding scheme [DE140100017];
   Australian Research Council [DE140100017] Funding Source: Australian
   Research Council
FX We would like to thank Gordon Fraser and the rest of the team who
   developed EvoSuite for making the source code available. We wish to
   acknowledge Monash University for the use of their Nimrod software in
   this work. The Nimrod project has been funded by the Australian Research
   Council and a number of Australian Government agencies, and was
   initially developed by the Distributed Systems Technology. This research
   was supported under Australian Research Council's Discovery Projects
   funding scheme (project number DE140100017). We would like to thank
   several anonymous reviewers who helped improve the quality of this work.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Aleti A., 2012, THESIS SWINBURNE U T
   Aleti A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1501
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, IEEE INT CONF AUTOM, P505, DOI 10.1109/ASE.2009.59
   [Anonymous], P 12 ANN C GEN EV CO
   [Anonymous], 1996, INTRO GENETIC ALGORI
   [Anonymous], 2000, 6 INT C PAR PROBL SO
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Back T., 1996, Foundations of Intelligent Systems. 9th International Symposium, ISMIS '96. Proceedings, P158
   Back T., 1992, PARALLEL PROBLEM SOL, V2, P87
   Cervantes J, 2009, IEEE T EVOLUT COMPUT, V13, P369, DOI 10.1109/TEVC.2008.927707
   Corne D. W., 2002, Parallel Problem Solving from Nature - PPSN VII. 7th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2439), P132
   DAVIS L, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P61
   De Jong K. A., 1995, THESIS U MICHIGAN
   De Jong K, 2007, STUD COMPUT INTELL, V54, P1
   Deb K, 2001, EVOL COMPUT, V9, P197, DOI 10.1162/106365601750190406
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Eiben AE, 1999, IEEE T EVOLUT COMPUT, V3, P124, DOI 10.1109/4235.771166
   Eiben G, 2008, NAT COMPUT SER, P153, DOI 10.1007/978-3-540-72960-0_8
   Farmani R, 2003, IEEE T EVOLUT COMPUT, V7, P445, DOI 10.1109/TEVC.2003.817236
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fialho A, 2010, ANN MATH ARTIF INTEL, V60, P25, DOI 10.1007/s10472-010-9213-y
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Goldberg A., 1994, SIGSOFT Software Engineering Notes, P80
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gong DW, 2013, FRONT COMPUT SCI-CHI, V7, P822, DOI 10.1007/s11704-013-3024-3
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   HESSER J, 1991, LECT NOTES COMPUT SC, V496, P23
   Hong TP, 2000, J HEURISTICS, V6, P439, DOI 10.1023/A:1009642825198
   Igel C, 2003, NEUROCOMPUTING, V55, P347, DOI 10.1016/S0925-2312(02)00628-8
   ISO/IEC, 2000, 1471 ISOIEC IEEE
   Julstrom B.A., 1995, P 6 INT C GENETIC AL, P81
   Kalman R E., 1960, J BASIC ENG, V82, P35, DOI DOI 10.1115/1.3662552
   Lobo FG, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P917
   Lobo FG, 1997, PROCEEDINGS OF 1997 IEEE INTERNATIONAL CONFERENCE ON EVOLUTIONARY COMPUTATION (ICEC '97), P121, DOI 10.1109/ICEC.1997.592281
   Mairhofer S, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1859
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Monson CK, 2004, LECT NOTES COMPUT SC, V3102, P140
   Pareto V, 1896, COURSDECONOMIE POLIT
   PETTITT AN, 1977, TECHNOMETRICS, V19, P205, DOI 10.2307/1268631
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Rardin RL, 2001, J HEURISTICS, V7, P261, DOI 10.1023/A:1011319115230
   SCHAFFER JD, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P51
   Schlierkamp-Voosen D, 1994, LECT NOTES COMPUT SC, V866, P199
   Smith J, 1996, IEEE C EVOL COMPUTAT, P318, DOI 10.1109/ICEC.1996.542382
   Srivastava Praveen Ranjan, 2009, International Journal of Artificial Intelligence and Soft Computing, V1, P363, DOI 10.1504/IJAISC.2009.027301
   Stephens CR, 1998, ARTIF LIFE, V4, P183, DOI 10.1162/106454698568512
   Stroud PD, 2001, IEEE T EVOLUT COMPUT, V5, P66, DOI 10.1109/4235.910466
   Suresh Y., 2014, CORR
   Thierens D, 2002, IEEE C EVOL COMPUTAT, P980, DOI 10.1109/CEC.2002.1007058
   Tuson A, 1998, EVOL COMPUT, V6, P161, DOI 10.1162/evco.1998.6.2.161
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
NR 58
TC 23
Z9 28
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 343
EP 352
DI 10.1016/j.jss.2014.11.035
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arcangeli, JP
   Boujbel, R
   Leriche, S
AF Arcangeli, Jean-Paul
   Boujbel, Raja
   Leriche, Sebastien
TI Automatic deployment of distributed software systems: Definitions and
   state of the art
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software management and maintenance; Software deployment;
   Component-based distributed systems
ID VISION
AB Deployment of software systems is a complex post-production process that consists in making software available for use and then keeping it operational. It must deal with constraints concerning both the system and the target machine(s), in particular their distribution, heterogeneity and dynamics, and satisfy requirements from different stakeholders. In the context of mobility and openness, deployment must react to the instability of the network of machines (failures, connections, disconnections, variations in the quality of the resources, etc.). Thus, deployment should be an uninterrupted process which also works when software is running and requires adaptiveness in order to continually satisfy the constraints and the requirements. Originally managed "by hand", software deployment demands an increasing level of automation and autonomy.
   This article first provides up-to-date terminology and definitions related to software deployment. Then, it proposes an analytical framework and reviews recent research works on automatic deployment with reference to this framework, and synthesizes the results. The review shows that existing solutions are incomplete, and possibly inefficient or unusable, when distribution, heterogeneity, scalability, dynamics and openness are primary concerns. In particular, they barely support dynamic reactions to unforeseeable events. Additionally, abstraction level and expressiveness at design time are rather limited regarding deployment complexity. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Arcangeli, Jean-Paul; Boujbel, Raja] Univ Toulouse, UPS, IRIT, F-31062 Toulouse, France.
   [Leriche, Sebastien] Univ Toulouse, ENAC, F-31055 Toulouse, France.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier;
   Universite Federale Toulouse Midi-Pyrenees (ComUE); Institut National
   Polytechnique de Toulouse; Universite Federale Toulouse Midi-Pyrenees
   (ComUE); Universite de Toulouse; Ecole Nationale de l'Aviation Civile
   (ENAC)
RP Arcangeli, JP (corresponding author), Univ Toulouse, UPS, IRIT, 118 Route Narbonne, F-31062 Toulouse, France.
EM Jean-Paul.Arcangeli@irit.fr; Raja.Boujbel@irit.fr;
   Sebastien.Leriche@enac.fr
FU French National Research Agency (ANR) project INCOME (INCOME)
   [ANR-11-INFR-009]
FX This work is part of the French National Research Agency (ANR) project
   INCOME (INCOME, 2012) (ANR-11-INFR-009, 2012-2015). The authors thank
   all the members of the project that contributed directly or indirectly
   to this paper.
CR ADAGE, 2007, ADAGE AUT DEPL TOOL
   [Anonymous], TECHNICAL REPORT
   Ansible Inc., 2014, ANS IS SIMPL WAY AUT
   Ashton K., 2010, RFID J
   Bailey E.C., 2000, MAXIMUM RPM
   Balani R., 2006, P 6 ACM IEEE INT C E, P112
   Brandtzæg E, 2012, CLOUD COMPUTING, P213
   Broto L, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1658
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Carzaniga A., 1998, TECHNICAL REPORT
   Cassagnes C., 2009, ACM SIGBED REV, V6, P12
   Chef Software Inc., 2014, AUT WEB SCAL IT
   Coulson G, 2006, CONCURR COMP-PRACT E, V18, P865, DOI [10.1002/cpe.981, 10.1002/cpe.98l]
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Cudennec L., 2008, INT WORKSH SCAL TOOL, P13
   Cunin PY, 2005, LECT NOTES COMPUT SC, V3798, P177
   Dearle A, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P300, DOI 10.1109/ICAC.2004.1301386
   Dearle A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P269, DOI 10.1109/FOSE.2007.20
   Desertot M, 2006, LECT NOTES COMPUT SC, V4089, P275
   Flinn J., 2012, CYBER FORAGING BRIDG, DOI [10.2200/S00447ED1V01Y201209MPC010, DOI 10.2200/S00447ED1V01Y201209MPC010]
   Flissi A, 2008, IEEE ACM INT SYMP, P177, DOI 10.1109/CCGRID.2008.59
   Fok CL, 2005, INT CON DISTR COMP S, P653, DOI 10.1109/ICDCS.2005.63
   Goldsack Patrick, 2009, Operating Systems Review, V43, P16, DOI 10.1145/1496909.1496915
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guidec Frederic, 2010, International Journal of Handheld Computing Research, V1, P24, DOI 10.4018/jhcr.2010090902
   Hall R. S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P174, DOI 10.1109/ICSE.1999.841007
   Haller P, 2006, LECT NOTES COMPUT SC, V4228, P4
   Heydamoori A, 2008, STUD COMP INTELL, V150, P29, DOI 10.1007/978-3-540-70561-1_3
   Horre Wouter, 2011, Journal of Software, V6, P528, DOI 10.4304/jsw.6.4.528-535
   Hosek P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P612, DOI 10.1109/ICSE.2013.6606607
   Hughes D, 2012, 2012 11TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P236, DOI 10.1109/NCA.2012.30
   Juve G., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P658, DOI 10.1109/CloudCom.2011.102
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kessis M, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P1390, DOI 10.1109/ITNG.2009.338
   Levis P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P15
   Liu Huan., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P147
   Louberry C, 2011, LECT NOTES COMPUT SC, V6723, P43, DOI 10.1007/978-3-642-21387-8_4
   Manzoor U, 2010, J NETW COMPUT APPL, V35, P696, DOI 10.1016/j.jnca.2010.03.015
   Manzoor U, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P55, DOI 10.1109/CIMCA.2008.202
   Marrón PJ, 2006, LECT NOTES COMPUT SC, V3868, P212
   Matougui M.E.A., 2012, 7 INT C SYST NETW CO, p[13, 12619]
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Object Management Group, 2006, Deployment and Configuration of Component-based Distributed Applications
   Object Management Group, 2006, CORB COMP MOD CCM
   Octopus Deploy Pty. Ltd, 2014, AUT DEPL NET
   Oracle, 2013, JAVBEANS TUT
   Oracle, 2013, ENT JAVABEANS EJB
   OW2 Consortium, 2009, THE FRACTAL PROJ
   Puppet Labs, 2014, AUT IT
   RELLERMEYER JS, 2007, 8 INT MIDDL C, V4834, P1, DOI DOI 10.1007/978-3-540-76778-7_1
   Sabharwal Ritu., 2006, ICNS '06, P73, DOI DOI 10.1109/ICNS.2006.54
   SARAH, 2005, SARAH DEL TOL DISTR
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   SELFWARE, 2005, THE SELFWARE PROJ
   Sledziewski K, 2010, INT CON ADV INFO NET, P414, DOI 10.1109/AINA.2010.81
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Toure M, 2010, SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS: ICAS 2010, PROCEEDINGS, P78, DOI 10.1109/ICAS.2010.20
   USENET, 2007, USENET UB M2M SERV N
   van der Burg S., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P208, DOI 10.1145/1988008.1988039
   van der Burg S, 2014, SCI COMPUT PROGRAM, V79, P52, DOI 10.1016/j.scico.2012.03.006
   van der Burg S, 2010, EUROMICRO CONF PROC, P183, DOI 10.1109/SEAA.2010.10
   van Steen M, 2012, J INTERNET SERV APPL, V3, P59, DOI 10.1007/s13174-011-0043-x
   VMware Inc, 2008, BUILD VIRT ENT VMWAR
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Weiser Mark., 1996, Nomadic issues in ubiquitous computing"
   Zheng D, 2007, LECT NOTES COMPUT SC, V4611, P908
   Zheng D, 2006, GCC 2005: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P454
NR 69
TC 34
Z9 35
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 198
EP 218
DI 10.1016/j.jss.2015.01.040
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, W
   Guo, W
AF Li, Wei
   Guo, William
TI QoS prediction for dynamic reconfiguration of component based software
   systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Dynamic reconfiguration; QoS prediction; QoS assurance
ID FRAMEWORK; UPGRADES; QUIESCENCE; MANAGEMENT; SUPPORT; SAFE
AB It is difficult to choose the appropriate reconfiguration approach to satisfy the quality of service (QoS) requirements of a software system if the properties of that approach are not known. This problem significantly restricts the application of dynamic reconfiguration approaches to mission-critical or non-stop systems, where QoS is a major performance indicator. This paper proposes a model to predict how the QoS of a running software system will be affected by dynamic reconfiguration and show how it out-performed the existing methods in this area in three aspects. First, unlike existing simulation based models, this prediction model was based on easily implemented mathematical functions. Second, compared with the time-consuming simulation approaches, QoS prediction using this model was achieved in a shorter timeframe. Third, unlike the existing approaches that are built on different platforms for individual scenarios, this model generalized QoS prediction onto a single virtual platform that was modeled by abstract hardware and software conditions. The proposed model has been verified by reconfiguration simulation to a reasonable level of accuracy and thus the viability and safety for the use of the model has been confirmed. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Li, Wei; Guo, William] Cent Queensland Univ, Sch Engn & Technol, Rockhampton, Qld 4702, Australia.
C3 Central Queensland University
RP Li, W (corresponding author), Cent Queensland Univ, Sch Engn & Technol, Rockhampton, Qld 4702, Australia.
EM w.li@cqu.edu.au
OI Li, Wei/0000-0002-9229-6405
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   Almeida JPA, 2004, INT WKSHP FUT TR DIS, P286
   Amirijoo M, 2006, 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P233, DOI 10.1109/RTCSA.2006.32
   [Anonymous], P INT C DES AN SIM D
   Arshad N, 2003, PROC INT C TOOLS ART, P39, DOI 10.1109/TAI.2003.1250168
   Baumann A, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P279
   Bidan C, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P35, DOI 10.1109/CDS.1998.675756
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   Costa-Soria C, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P302
   Dowling J., 2001, P 3 INT C METALEVEL, P81, DOI DOI 10.1007/3-540-45429-2
   DOWLING J, 2001, P OOPSLA 2001 WORKSH
   Evans H., 2004, IEE Proceedings-Software, V151, P30, DOI 10.1049/ip-sen:20040081
   Feng T, 2006, SNPD 2006: SEVENTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, PROCEEDINGS, P43
   Fung KH, 2009, J SYST SOFTWARE, V82, P1950, DOI 10.1016/j.jss.2009.06.032
   Ghezzi C., 2014, CONCURR COMP-PRACT E, DOI [10.1002/cpe3259, DOI 10.1002/CPE3259]
   Gorinsek J., 2003, Proc. ETAPS 2003 Workshop Unanticipated Software Evolution (USE '03), P57
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Hillman J, 2004, PROC INT CONF SOFTW, P594, DOI 10.1109/ICSE.2004.1317481
   Ivanovic D., 2012, 2012 Proceedings of 4th International Workshop on Principles of Engineering Service-Oriented Systems (PESOS 2012), P29, DOI 10.1109/PESOS.2012.6225936
   Ivanovic D, 2011, LECT NOTES COMPUT SC, V7084, P62, DOI 10.1007/978-3-642-25535-9_5
   Janssens N., 2006, THESIS KATHOLIEKE U
   Janssens Nico., 2007, Proceedings of the 1st workshop on Middlewareapplication interaction: in conjunction with Euro-Sys 2007, MAI '07, P1
   Ji Zhang, 2004, "Third Workshop on Architecting Dependable Systems (WADS)" W19S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040495
   Kayande D., 2011, INT J COMPUT SCI TEL, V2, P17
   Kim DK, 2008, PROCEEDINGS IEEE SOUTHEASTCON 2008, VOLS 1 AND 2, P210
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Li W, 2012, IEEE T SOFTWARE ENG, V38, P658, DOI 10.1109/TSE.2011.37
   Li W, 2011, J SYST SOFTWARE, V84, P2123, DOI 10.1016/j.jss.2011.05.060
   MAKRIS K., 2009, P 2009 C USENIX ANN, P31
   Marzolla Moreno, 2012, Proceedings of the 2nd International Conference on Cloud Computing and Services Science (CLOSER 2012), P216
   Menascé DA, 2007, PERFORM EVALUATION, V64, P646, DOI 10.1016/j.peva.2006.10.001
   Mitchell S, 1999, INT FED INFO PROC, V15, P17
   Morrison R, 2007, AUTOMAT SOFTW ENG, V14, P261, DOI 10.1007/s10515-007-0011-7
   Moser LE, 2002, P INT COMP SOFTW APP, P982, DOI 10.1109/CMPSAC.2002.1045134
   Moser Louise E., 2000, P IEEE INF SURV C EX, V2, P184
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu I, 2009, ACM SIGPLAN NOTICES, V44, P13, DOI 10.1145/1543135.1542479
   Palma N. D., 2001, P 6 INT WORKSH COMP
   Pissias P, 2008, IET SOFTW, V2, P348, DOI 10.1049/iet-sen:20070046
   Rasche A., 2008, P 6 IEEE INT S OBJ O, P164
   Rasche A, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P322, DOI 10.1109/ISORC.2008.44
   Senivongse T., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P201, DOI 10.1109/DOA.1999.794027
   Solarski M, 2002, P INT COMP SOFTW APP, P1038, DOI 10.1109/CMPSAC.2002.1045145
   Soria C., 2008, LECT NOTES COMPUTER, V5292, P282
   Surajbali B., 2010, P 9 WORKSH ASP COMP, P33
   Tewksbury LA, 2001, PROC IEEE INT CONF S, P488, DOI 10.1109/ICSM.2001.972762
   Truyen E., 2008, Proceedings of the 7th International Conference on Aspect-Oriented Software Development, P120, DOI DOI 10.1145/1353482.1353497
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Warren I., 2000, MODEL DYNAMIC CONFIG
   Warren I, 2006, IEEE INT CONF AUTOM, P37
   Wurthinger Thomas., 2010, P 8 INT C PRINC PRAC, P10, DOI [DOI 10.1145/1852761.1852764, 10.1145/1852761.1852764]
NR 54
TC 5
Z9 6
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2015
VL 102
BP 12
EP 34
DI 10.1016/j.jss.2014.12.001
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD2RS
UT WOS:000350927300002
DA 2024-07-18
ER

PT J
AU Chihani, B
   Bertin, E
   Crespi, N
AF Chihani, Bachir
   Bertin, Emmanuel
   Crespi, Noel
TI Programmable context awareness framework
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Context-awareness; Privacy; Adaptation; XML
ID MOBILE APPLICATIONS
AB Context-awareness enables applications to provide end-users with a richer experience by enhancing their interactions with contextual information. Several frameworks have already been proposed to simplify the development of context-aware applications. These frameworks are focused on provisioning context data and on providing common semantics, definitions and representations of these context data. They assume that applications share the same semantic, which limits the range of use cases where a framework can be used, as that assumption induces a strong coupling between context management and application logic. This article proposes a framework that decouples context management from application business logic. The aim is to reduce the overhead on applications that run on resource-limited devices while still providing mechanisms to support context-awareness and behavior adaptation. The article presents an innovative approach that involves third-parties in context processing definition by structuring it using atomic functions. These functions can be designed by third-party developers using an XML-based programming language. Its implementation and evaluation demonstrates the benefits, in terms of flexibility, of using proven design patterns from software engineering for developing context-aware application. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Chihani, Bachir; Bertin, Emmanuel] Orange Labs, F-14066 Caen, France.
   [Chihani, Bachir; Bertin, Emmanuel; Crespi, Noel] Telecom SudParis, CNRS 5157, Inst Mines Telecom, F-91011 Evry, France.
C3 Orange SA; IMT - Institut Mines-Telecom; Institut Polytechnique de
   Paris; Telecom SudParis
RP Chihani, B (corresponding author), Orange Labs, 42 Rue Coutures, F-14066 Caen, France.
EM bachir.chihani@orange.com; emmanuel.bertin@orange.com;
   noel.crespi@it-sudparis.eu
RI Crespi, Noel/ABE-7052-2020; Bertin, Emmanuel/AAU-1020-2020
OI Crespi, Noel/0000-0003-2962-192X; 
CR [Anonymous], 2011, USENIX SEC S
   [Anonymous], 2005, TCP IP GUIDE COMPREH
   Chihani Bachir, 2011, International Journal of New Computer Architectures and their Applications, V1, P15
   Gamma Erich., 1994, DESIGN PATTERNS
   Gutheim P, 2011, IEEE COMMUN MAG, V49, P60, DOI 10.1109/MCOM.2011.5681017
   MCGILL R, 1978, AM STAT, V32, P12, DOI 10.2307/2683468
   Oh Y, 2010, IEEE COMMUN MAG, V48, P118, DOI 10.1109/MCOM.2010.5434383
   Simoes J, 2011, TELECOMMUN SYST, V48, P301, DOI 10.1007/s11235-010-9345-8
   van Sinderen MJ, 2006, IEEE COMMUN MAG, V44, P96, DOI 10.1109/MCOM.2006.1705985
   Zhu J, 2011, IEEE COMMUN MAG, V49, P132, DOI 10.1109/MCOM.2011.6011744
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 25
TC 4
Z9 4
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2014
VL 92
SI SI
BP 59
EP 70
DI 10.1016/j.jss.2013.07.046
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG7XK
UT WOS:000335631900006
DA 2024-07-18
ER

PT J
AU Loukos, F
   Karatza, H
   Kalogeraki, V
AF Loukos, Fotis
   Karatza, Helen
   Kalogeraki, Vana
TI Real-time data dissemination in mobile peer-to-peer networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mobile peer-to-peer networks; Peer-to-peer streaming; Real-time
   dissemination
ID VIDEO; INTERNET; SERVICE
AB Mobile peer-to-peer networks have found many uses such as streaming of audio and video data. There are circumstances, such as emergency situations and disaster recovery, when real-time delivery is a fundamental requirement. The problem is challenging due to the limited network capacity, the variable transmission rates and the unpredictability with respect to the network conditions in the mobile peer-to-peer network.
   In this paper we address the problem of real-time data dissemination of multimedia streams in mobile peer-to-peer networks. Four routing algorithms are proposed based on a packet's deadline, priority or a combination of these metrics. They are simulated under different setups in a mobile peer-to-peer network with Bluetooth connectivity and nodes broadcasting audio and video streams using different priorities. We compare the performance of the algorithms using a number of metrics. Detailed experimental results are presented. Based on these results, propositions on the usage of the algorithms and the design of network requirements are presented. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Loukos, Fotis; Karatza, Helen] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Kalogeraki, Vana] Athens Univ Econ & Business, Dept Informat, Athens 10434, Greece.
C3 Aristotle University of Thessaloniki; Athens University of Economics &
   Business
RP Loukos, F (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM fotisl@csd.auth.gr; karatza@csd.auth.gr; vana@aueb.gr
RI Kalogeraki, Vana/ABI-1469-2020
OI Kalogeraki, Vana/0000-0002-6421-9947; Karatza, Helen/0000-0002-9789-0585
FU European Union (European Social Fund - ESF); Greek National Funds
   through the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF) - Research Funding
   Program: Thalis-DISFER; European Social Fund
FX This research has been co-financed by the European Union (European
   Social Fund - ESF) and Greek National Funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF) - Research Funding Program: Thalis-DISFER.
   Investing in knowledge society through the European Social Fund.
CR Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   [Anonymous], NY TIMES
   [Anonymous], 2001, SCALABLE CONTENT ADD
   [Anonymous], 2003, WORKSH EC PEER PEER
   Bui BD, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P69
   Clarke Ian, 2001, Freenet: A Distributed Anonymous Information Storage and Retrieval System, P46, DOI [DOI 10.1007/3-540-44702-4, DOI 10.1007/3-540-44702-4_4, 10.1007/3-540-44702-4_4]
   Conti M., 2005, P 6 ACM INT S MOBILE, P343
   Ding G, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P104, DOI 10.1109/PERCOMW.2004.1276914
   Heffeeda M., 2003, P ACM MULTIMEDIA, P45
   Jelasity M, 2004, LECT NOTES COMPUT SC, V3231, P79
   Jelasity M, 2009, COMPUT NETW, V53, P2321, DOI 10.1016/j.comnet.2009.03.013
   Klemm A, 2003, IEEE VTS VEH TECHNOL, P2758, DOI 10.1109/VETECF.2003.1286080
   Lindemann C, 2002, SECOND INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P73, DOI 10.1109/PTP.2002.1046315
   Locher T., 2007, DISTRIB COMPUT, V38, P8
   Loukos F, 2011, SIMUL MODEL PRACT TH, V19, P649, DOI 10.1016/j.simpat.2010.10.004
   Lv Q., 2002, Performance Evaluation Review, V30, P258, DOI 10.1145/511399.511369
   Montresor A, 2004, FOURTH INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P202, DOI 10.1109/PTP.2004.1334948
   Montresor A, 2009, IEEE INT CONF PEER, P99, DOI 10.1109/P2P.2009.5284506
   MPEG, 1993, INF TECHN COD MOV 3
   Noh J, 2009, PCS: 2009 PICTURE CODING SYMPOSIUM, P517
   Peltotalo J., 2009, IEEE INFOCOM workshops, P1
   Pouwelse JA, 2008, CONCURR COMP-PRACT E, V20, P127, DOI 10.1002/cpe.1189
   Rijkse K, 1996, IEEE COMMUN MAG, V34, P42, DOI 10.1109/35.556485
   Rowstron A., 2001, Proceedings of the Middleware 2001, P329, DOI DOI 10.1007/3-540-45518-3_18
   SAROIU S., 2002, P MULTIMEDIA COMPUTI, V2002, P152
   Schulzrinne H., 1998, RFC2326
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Union International T., 1988, NOV G 722 7 KHZ AUD
   Wiegand T, 2003, IEEE T CIRC SYST VID, V13, P560, DOI 10.1109/TCSVT.2003.815165
   Wu DP, 2001, IEEE T CIRC SYST VID, V11, P282, DOI 10.1109/76.911156
   Xu DY, 2002, INT CON DISTR COMP S, P363, DOI 10.1109/ICDCS.2002.1022274
NR 31
TC 3
Z9 3
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2014
VL 90
BP 179
EP 190
DI 10.1016/j.jss.2013.11.1122
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD8BB
UT WOS:000333490400015
DA 2024-07-18
ER

PT J
AU Murtaza, SS
   Hamou-Lhadj, A
   Madhavji, NH
   Gittens, M
AF Murtaza, Syed Shariyar
   Hamou-Lhadj, Abdelwahab
   Madhavji, Nazirn H.
   Gittens, Mechelle
TI An empirical study on the use of mutant traces for diagnosis of faults
   in deployed systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software maintenance; Fault diagnosis; Mutation
ID SOFTWARE; LOCALIZATION; MUTATION; SUPPORT
AB Debugging deployed systems is an arduous and time consuming task. It is often difficult to generate traces from deployed systems due to the disturbance and overhead that trace collection may cause on a system in operation. Many organizations also do not keep historical traces of failures. On the other hand earlier techniques focusing on fault diagnosis in deployed systems require a collection of passing-failing traces, in-house reproduction of faults or a historical collection of failed traces. In this paper, we investigate an alternative solution. We investigate how artificial faults, generated using software mutation in test environment, can be used to diagnose actual faults in deployed software systems. The use of traces of artificial faults can provide relief when it is not feasible to collect different kinds of traces from deployed systems. Using artificial and actual faults we also investigate the similarity of function call traces of different faults in functions. To achieve our goal, we use decision trees to build a model of traces generated from mutants and test it on faulty traces generated from actual programs. The application of our approach to various real world programs shows that mutants can indeed be used to diagnose faulty functions in the original code with approximately 60-100% accuracy on reviewing 10% or less of the code; whereas, contemporary techniques using pass-fail traces show poor results in the context of software maintenance. Our results also show that different faults in closely related functions occur with similar function call traces. The use of mutation in fault diagnosis shows promising results but the experiments also show the challenges related to using mutants. (C) 2013 Elsevier Inc. All rights reserved,
C1 [Murtaza, Syed Shariyar; Madhavji, Nazirn H.] Univ Western Ontario, Dept Comp Sci, London, ON, Canada.
   [Gittens, Mechelle] Univ W Indies, Dept Comp Sci, Cave Hill, Barbados.
   [Murtaza, Syed Shariyar; Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 Western University (University of Western Ontario); University West
   Indies Mona Jamaica; University West Indies Cave Hill Campus; Concordia
   University - Canada
RP Murtaza, SS (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM smurtaza@encs.concordia.ca; abdelw@ece.concordia.ca;
   madhavji@csd.uwo.ca; mechelle.gittens@cavhill.uwi.edu
OI Hamou-Lhadj, Abdelwahab/0000-0002-3319-5006; Madhavji,
   Nazim/0009-0006-5207-3203
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], THESIS U OTTAWA
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Brodie M, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P101
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Devillard N., 2004, ETRACE RUNTIME TRACI
   Di Fatta G., 2006, P 3 INT WORKSHOP SOF, P62, DOI DOI 10.1145/1188895.1188910
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Elbaum S, 2007, EMPIR SOFTW ENG, V12, P447, DOI 10.1007/s10664-007-9042-8
   Gittens M, 2005, P INT COMP SOFTW APP, P179
   Hao D., 2005, P 20 IEEE ACM INT C, P291
   Haran M, 2007, IEEE T SOFTWARE ENG, V33, P287, DOI 10.1109/TSE.2007.1004
   Hare D., 2007, SUPPORT AUTHORITY IN
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jose M, 2011, ACM SIGPLAN NOTICES, V46, P437, DOI 10.1145/1993316.1993550
   Lee I, 2000, IEEE T SOFTWARE ENG, V26, P113, DOI 10.1109/32.841113
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu C., 2006, P 14 SIGSOFT S FDN S, P45
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Melnyk B.R., 2004, DB2 BASICS INTRO DB2
   Murtaza SS, 2012, EUR CON SFTWR MTNCE, P127, DOI 10.1109/CSMR.2012.23
   Murtaza SS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P960, DOI 10.1145/1985793.1985959
   Murtaza SyedShariyar., 2010, Proceedings of the 2010 Conference of the Center for Advanced Studies on Collaborative Research, CASCON'10, P57
   Nica M, 2010, LECT NOTES COMPUT SC, V6303, P88, DOI 10.1007/978-3-642-15585-7_9
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Polat K, 2009, EXPERT SYST APPL, V36, P1587, DOI 10.1016/j.eswa.2007.11.051
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Ubuntu, 2013, RETR APP CRASH REP
   UWO and IBM, 2008, PROP WORKSH LARG COM
   WER, 2012, WIND ERR REP
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Zhang L., 2013, P ACM SIGPLAN C OBJ
   ZHANG Z, 2009, P 7 JOINT M EUR SOFT, P43, DOI DOI 10.1145/1595696.1595705
   Zheng AliceX., 2004, ADV NEURAL INFORM PR, V16, P9
NR 52
TC 8
Z9 8
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2014
VL 90
BP 29
EP 44
DI 10.1016/j.jss.2013.11.1094
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD8BB
UT WOS:000333490400004
DA 2024-07-18
ER

PT J
AU Wang, ZH
   Yang, HR
   Cheng, TF
   Chang, CC
AF Wang, Zhi-Hui
   Yang, Hai-Rui
   Cheng, Ting-Fang
   Chang, Chin-Chen
TI A high-performance reversible data-hiding scheme for LZW codes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE LZW; Steganography; Information-hiding
ID STEGANOGRAPHIC METHOD
AB Hiding a message in compression codes can reduce transmission costs and simultaneously make the transmission more secure. In this paper, we propose a high-performance, data-hiding Lempel-Ziv-Welch (HPDH-LZW) scheme, which reversibly embeds data in LZW compression codes by modifying the value of the compression codes, where the value of the LZW code either remains unchanged or is changed to the original value of the LZW code plus the LZW dictionary size according to the data to be embedded. Compared to other information-hiding schemes based on LZW compression codes, the proposed scheme achieves better hiding capacity by increasing the number of symbols available to hide secrets and also achieves faster hiding and extracting speeds due to the lower computation requirements. Our experimental results with the proposed scheme have confirmed both its high embedding capacity and its high speed when hiding and extracting data. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Wang, Zhi-Hui; Yang, Hai-Rui] Dalian Univ Technol, Sch Software, Econ & Technol Dev Area, Dalian 116620, Peoples R China.
   [Cheng, Ting-Fang] Natl Tsing Hua Univ, Dept Compute Sci, Hsinchu 30013, Taiwan.
   [Chang, Chin-Chen] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
   [Chang, Chin-Chen] Asia Univ, Dept Comp Sci & Informat Engn, Taichung 41354, Taiwan.
C3 Dalian University of Technology; National Tsing Hua University; Feng
   Chia University; Asia University Taiwan
RP Chang, CC (corresponding author), Feng Chia Univ, Dept Informat Engn & Comp Sci, 100 Wenhwa Rd, Taichung 40724, Taiwan.
EM wangzhihui1017@yahoo.cn; yanghairui1010@gmail.com;
   nthu.tiffany@gmail.com; alan3c@gmail.com
RI Cheng, Ting-Fang/GLR-9279-2022; wang, zhihui/HSF-6639-2023; Chang,
   Ching-Chun/JAN-6210-2023
FU National Nature Science Foundation of China [61272374, 60133012,
   61272371]
FX This work was supported by the National Nature Science Foundation of
   China under Grant Nos. 61272374, 60133012 and 61272371.
CR Chang C. C., 2009, INT J COMPUTER SCI E, V3, P55
   Chang CC, 2005, IEICE T INF SYST, VE88D, P2159, DOI 10.1093/ietisy/e88-d.9.2159
   Chang CC, 2006, J SYST SOFTWARE, V79, P1120, DOI 10.1016/j.jss.2005.11.576
   Chang-Chu Chen, 2010, Proceedings 2010 Second International Conference on Computer Modeling and Simulation (ICCMS), P3, DOI 10.1109/ICCMS.2010.346
   Chen WJ, 2009, DIGIT SIGNAL PROCESS, V19, P433, DOI 10.1016/j.dsp.2008.11.003
   Chang CC, 2007, INFORM SCIENCES, V177, P1796, DOI 10.1016/j.ins.2006.09.014
   Chin-Feng Lee, 2011, 2011 Fifth International Conference on Genetic and Evolutionary Computing, P208, DOI 10.1109/ICGEC.2011.57
   Jo M, 2002, IEICE T INF SYST, VE85D, P1054
   Lu ZM, 2009, J SYST SOFTWARE, V82, P1016, DOI 10.1016/j.jss.2009.01.010
   Ma KD, 2013, IEEE T INF FOREN SEC, V8, P553, DOI 10.1109/TIFS.2013.2248725
   Nandi U, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION TECHNOLOGY (ICCCT), P166, DOI 10.1109/ICCCT.2012.40
   Shim HJ, 2004, IEEE IMAGE PROC, P2195
   Tai WL, 2009, IEEE T CIRC SYST VID, V19, P904, DOI 10.1109/TCSVT.2009.2017409
   Tseng HW, 2008, IMAGE VISION COMPUT, V26, P1148, DOI 10.1016/j.imavis.2007.12.005
   Xiaoqiang Ma, 2012, 2012 Fourth International Conference on Computational and Information Sciences (ICCIS), P160, DOI 10.1109/ICCIS.2012.319
   Zhang XP, 2013, IEEE T MULTIMEDIA, V15, P316, DOI 10.1109/TMM.2012.2229262
NR 16
TC 9
Z9 11
U1 0
U2 29
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2013
VL 86
IS 11
BP 2771
EP 2778
DI 10.1016/j.jss.2013.06.024
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224OQ
UT WOS:000324898300005
DA 2024-07-18
ER

PT J
AU Etemaadi, R
   Lind, K
   Heldal, R
   Chaudron, MRV
AF Etemaadi, Ramin
   Lind, Kenneth
   Heldal, Rogardt
   Chaudron, Michel R. V.
TI Quality-driven optimization of system architecture: Industrial case
   study on an automotive sub-system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Component-based software engineering (CBSE); System architecture for
   embedded systems; Optimization of software architecture design
ID ALGORITHM
AB Due to the complexity of today's embedded systems and time-to-market competition between companies developing embedded systems, system architects have to perform a complex task. To design a system which meets all its quality requirements becomes increasingly difficult because of customer demand for new innovative user functions. Methods and tools are needed to assist the architect during system design.
   The goal of this paper is to show how metaheuristic optimization approaches can improve the process of designing efficient architectures for a set of given quality attributes. A case study is conducted in which an architecture optimization framework is applied to an existing sub-system in the automotive industry. The case study shows that metaheuristic optimization approaches can find efficient solutions for all quality attributes while fulfilling given constraints.
   By optimizing multiple quality attributes the framework proposes revolutionary architecture solutions in contrast to human architects, who tend to propose solutions based on previous architectures. Although the case study shows savings in manual effort, it also shows that the proposed architecture solutions should be assessed by the human architect. So, the paper demonstrates how an architecture optimization framework complements the domain knowledge and experience of the architect. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Etemaadi, Ramin; Chaudron, Michel R. V.] Leiden Univ, LIACS, NL-2333 CA Leiden, Netherlands.
   [Lind, Kenneth] Viktoria Swedish ICT Inst, SE-41756 Gothenburg, Sweden.
   [Heldal, Rogardt; Chaudron, Michel R. V.] Joint Dept Comp Sci & Engn Chalmers, SE-41756 Gothenburg, Sweden.
   [Heldal, Rogardt; Chaudron, Michel R. V.] Gothenburg Univ, SE-41756 Gothenburg, Sweden.
C3 Leiden University - Excl LUMC; Leiden University; University of
   Gothenburg
RP Etemaadi, R (corresponding author), Leiden Univ, LIACS, Niels Bohrweg 1, NL-2333 CA Leiden, Netherlands.
EM etemaadi@liacs.nl; kenneth.lind@viktoria.se; heldal@chalmers.se;
   chaudron@chalmers.se
OI Chaudron, Michel/0000-0001-7517-6666
CR Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2002, SPEA2 IMPROVING STRE
   Axelsson J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P101, DOI 10.1109/WICSA.2009.5290796
   Barbacci M., 1995, CMUSEI95TR021
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Bondarev E, 2006, LECT NOTES COMPUT SC, V4063, P254
   Ceriani M., 2010, P GEN EV COMP C, P1267
   Ciancone A, 2011, LECT NOTES COMPUT SC, V6705, P99, DOI 10.1007/978-3-642-21952-8_9
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Emmerich M, 2005, LECT NOTES COMPUT SC, V3410, P62
   Etemaadi R., 2013, 201301 LEID U LEID I
   Etemaadi R, 2012, EUROMICRO CONF PROC, P63, DOI 10.1109/SEAA.2012.38
   Feiler P.H., 2006, The Architecture Analysis Design Language (AADL): An Introduction
   Field T., 2010, JINQS EXTENSIBLE LIB
   Forster Marc, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P146, DOI 10.1109/ISSRE.2009.22
   Forster Marc, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P51, DOI 10.1109/ISSRE.2010.47
   Glass M., 2010, P INT WORKSH REL AW, P17
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Li R, 2010, GECCO-2010 COMPANION PUBLICATION: PROCEEDINGS OF THE 12TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P2097
   Lukasiewycz M, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1723
   Lukasiewycz M, 2008, ASIA S PACIF DES AUT, P661
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Pimentel AD, 2006, IEEE T COMPUT, V55, P99, DOI 10.1109/TC.2006.16
   Posadas H, 2004, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, VOLS 1 AND 2, PROCEEDINGS, P378, DOI 10.1109/DATE.2004.1268876
   VoSS S., 1999, METAHEURISTICS ADV T, DOI 10.1007/978-1-4615-5775-3
   Wandeler E., 2006, International Journal on Software Tools for Technology Transfer, V8, P649, DOI 10.1007/s10009-006-0019-5
   Ykman-Couvreur C, 2011, IET COMPUT DIGIT TEC, V5, P123, DOI 10.1049/iet-cdt.2010.0030
   Younis A, 2010, ENG OPTIMIZ, V42, P691, DOI 10.1080/03052150903386674
NR 31
TC 7
Z9 9
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2013
VL 86
IS 10
BP 2559
EP 2573
DI 10.1016/j.jss.2013.05.109
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 220EF
UT WOS:000324564100007
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Charalampidou, S
   Stamelos, I
AF Ampatzoglou, Apostolos
   Charalampidou, Sofia
   Stamelos, Ioannis
TI Research state of the art on GoF design patterns: A mapping study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Design patterns; Mapping study; Software quality attributes
ID SYSTEMATIC LITERATURE-REVIEWS; SOFTWARE
AB Design patterns are used in software development to provide reusable and documented solutions to common design problems. Although many studies have explored various aspects of design patterns, no research summarizing the state of research related to design patterns existed up to now. This paper presents the results of a mapping study of about 120 primary studies, to provide an overview of the research efforts on Gang of Four (GoF) design patterns. The research questions of this study deal with (a) if design pattern research can be further categorized in research subtopics, (b) which of the above subtopics are the most active ones and (c) what is the reported effect of GoF patterns on software quality attributes. The results suggest that design pattern research can be further categorized to research on GoF patterns formalization, detection and application and on the effect of GoF patterns on software quality attributes. Concerning the intensity of research activity of the abovementioned subtopics, research on pattern detection and on the effect of GoF patterns on software quality attributes appear to be the most active ones. Finally, the reported research to date on the effect of GoF patterns on software quality attributes are controversial; because some studies identify one pattern's effect as beneficial whereas others report the same pattern's effect as harmful. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Ampatzoglou, Apostolos; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
   [Charalampidou, Sofia] Chalmers Univ Technol, Dept Comp Sci & Technol, S-41296 Gothenburg, Sweden.
C3 Aristotle University of Thessaloniki; Chalmers University of Technology
RP Ampatzoglou, A (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
EM apamp@csd.auth.gr; stamelos@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020; Ampatzoglou, Apostolos/AAC-3632-2020
FU European Union (European Social Fund - ESF); NSRF
FX This research has been co-financed by the European Union (European
   Social Fund - ESF) and Greek national funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF) - Research Funding Program: Thalis-Athens
   University of Economics and Business - SOFTWARE ENGINEERING RESEARCH
   PLATFORM. The authors would like to thank the anonymous reviewers for
   their valuable comments and suggestions to improve the quality of the
   paper. Especially their comments on the correct application of the
   methodology and the distinction of papers and studies have been
   extremely valuable for us.
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], 1992, ISO9126
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   AVGERIOU P, 2005, 10 EUR C PATT LANG P
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bjork S., 2003, GAM DES TRACT GAM DE
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   da Silva F. Q. B., 2010, P 2010 ACM IEEE INT
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Galster M., 2012, P 12 INT C QUAL SOFT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B., 2007, EBSE2007001 KEEL U D
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Souza J., 2002, 9 C PATT LANG PROGR
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 31
TC 59
Z9 72
U1 1
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2013
VL 86
IS 7
BP 1945
EP 1964
DI 10.1016/j.jss.2013.03.063
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 156TU
UT WOS:000319847600019
DA 2024-07-18
ER

PT J
AU Thurimella, AK
   Brügge, B
AF Thurimella, Anil Kumar
   Bruegge, Bernd
TI A mixed-method approach for the empirical evaluation of the issue-based
   variability modeling
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Rationale management; Software product lines; Variability; Requirements
   engineering; Empirical software engineering; Mixed-methods
ID DESIGN RATIONALE; SOFTWARE; GUIDELINES
AB Background: Variability management is the fundamental part of software product line engineering, which deals with customization and reuse of artifacts for developing a family of systems. Rationale approaches structure decision-making by managing the tacit-knowledge behind decisions. This paper reports a quasi-experiment for evaluating a rationale enriched collaborative variability management methodology called issue-based variability modeling.
   Objective: We studied the interaction of stakeholders with issue-based modeling to evaluate its applicability in requirements engineering teams. Furthermore, we evaluated the reuse of rationale while instantiating and changing variability.
   Approach: We enriched a quasi-experimental design with a variety of methods found in case study research. A sample of 258 students was employed with data collection and analysis based on a mix of qualitative and quantitative methods. Our study was performed in two phases: the first phase focused on variability identification and instantiation, while the second phase included tasks on variability evolution.
   Results: We obtained strong empirical evidence on reuse patterns for rationale during instantiation and evolution of variability. The tabular representations used by rationale modeling are learnable and usable in teams of diverse backgrounds. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Thurimella, Anil Kumar; Bruegge, Bernd] Tech Univ Munich, D-80290 Munich, Germany.
C3 Technical University of Munich
EM anil.thurimella@harman.com
CR Alexander I, 2007, INT REQUIR ENG CONF, P350, DOI 10.1109/RE.2007.10
   Ali Babar Muhammad, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P420
   AMIR Y, 1990, J SOC BEHAV PERS, V5, P51
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2007, QUALITATIVE RES PRAC, DOI DOI 10.4135/9781848608191.D33
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bertolino A., 2002, INT WORKSH REQ ENG P, P12
   Bratthall L, 2000, LECT NOTES COMPUT SC, V1840, P126
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Burge JE, 2008, AI EDAM, V22, P311, DOI 10.1017/S0890060408000218
   Burge JE, 2008, J SYST SOFTWARE, V81, P395, DOI 10.1016/j.jss.2007.05.004
   Buuhne S., 2004, PROC WORKSHOP, P5
   Capiluppi A, 2007, PROC INT CONF SOFTW, P511
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   CLEMENTS P, 2006, FRAMEWORK SOFTWARE P
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dunning H, 2008, SOC INDIC RES, V85, P145, DOI 10.1007/s11205-007-9131-5
   Dutoit AH, 2006, RATIONALE MANAGEMENT
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   EISENHARDT KM, 1988, ACAD MANAGE J, V31, P737, DOI 10.5465/256337
   Franken R., 2006, Human motivation, V6th
   Gomaa H., 2005, DESIGNING SOFTWARE P
   Gruenbacher P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P954, DOI 10.1109/DEXA.2000.875141
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   John I., 2003, P 9 INT WORKSH REQ E, P3
   KAPLAN B, 1988, MIS QUART, V12, P571, DOI 10.2307/249133
   Kunz W, 1970, 131 U CAL I URB REG
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL, V12, P167
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lee J., 1981, P 13 INT C SOFTW ENG, P114
   Liang P, 2011, J SYST SOFTWARE, V84, P786, DOI 10.1016/j.jss.2010.12.046
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Munroe S., 2004, INT WORKSH ENG SOC A, P119
   Munroe S.J., 2004, AAMAS 2004, P1520
   Ocker R.J., 2010, Human Technology, V6, P55
   Palmisano J., 2008, HDB DECISION SUPPORT, P355, DOI DOI 10.1007/978-3-540-48713-5_18
   Peng Liang, 2010, 2010 Third International Workshop on Managing Requirements Knowledge (MARK 2010), P16, DOI 10.1109/MARK.2010.5623812
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Thurimella A. K., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P313, DOI 10.1109/SPLC.2011.17
   Thurimella A.K., 2007, P 11 INT C SOFTW ENG, P108
   Thurimella A. K., 2010, ICB REPORTS
   Thurimella AK, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P369, DOI 10.1007/978-3-642-10294-3_18
   Thurimella AK, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P99, DOI 10.1109/SPLC.2008.14
   Thurimella AK, 2012, INFORM SOFTWARE TECH, V54, P933, DOI 10.1016/j.infsof.2012.02.005
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wang Jing., 2010, Human Technology, V6, P129
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOLF T, 2007, THESIS TU MUNCHEN
   Yager RR, 2004, IEEE T SYST MAN CY B, V34, P2396, DOI 10.1109/TSMCB.2004.837348
   Yin R.K., 2011, Qualitative research from start to finish
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 62
TC 9
Z9 9
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2013
VL 86
IS 7
BP 1831
EP 1849
DI 10.1016/j.jss.2013.01.038
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 156TU
UT WOS:000319847600011
DA 2024-07-18
ER

PT J
AU Torrente, MCS
   Prieto, ABM
   Gutiérrez, DA
   de Sagastegui, MEA
AF Carmen Suarez Torrente, M.
   Belen Martinez Prieto, A.
   Alvarez Gutierrez, Dario
   Elena Alva de Sagastegui, M.
TI Sirius: A heuristic-based framework for measuring web usability adapted
   to the type of website
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Usability measurement; Heuristic evaluation; Usability metric; Website
   classification
AB The unquestionable relevance of the web in our society has led to an enormous growth of websites offering all kinds of services to users. In this context, while usability is crucial in the development of successful websites, many barely consider the recommendations of experts in order to build usable designs. Including the measurement of usability as part of the development process stands out among these recommendations. One of the most accepted methods for usability evaluation by experts is heuristic evaluation. There is abundant literature on this method. However, there is a lack of clear and specific guidelines to be used in the development and evaluation process. This is probably an important factor contributing to the aforementioned generalized deficiency in web usability.
   We miss an evaluation method based on heuristics whose measure is adapted to the type of evaluated website. In this paper we define Sirius, an evaluation framework based on heuristics to perform expert evaluations that takes into account different types of websites. We also provide a specific set of evaluation criteria, and a usability metric that quantifies the usability level achieved by a website depending on its type. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Carmen Suarez Torrente, M.; Belen Martinez Prieto, A.; Alvarez Gutierrez, Dario; Elena Alva de Sagastegui, M.] Univ Oviedo, Dept Comp Sci, Oviedo 33007, Spain.
C3 University of Oviedo
RP Torrente, MCS (corresponding author), Univ Oviedo, Dept Comp Sci, C Calvo Sotelo S-N, Oviedo 33007, Spain.
EM macamen@uniovi.es; belenmp@uniovi.es; darioa@uniovi.es;
   alvamaria@uniovi.es
RI Martínez, Ana Belén/L-1882-2014; RG, SMABSS/N-3322-2018
OI Martínez, Ana Belén/0000-0002-5474-0691; Suarez-Torrente, Maria del
   Carmen/0000-0002-3573-2952; RG, SMABSS/0000-0001-9944-3861
CR Agarwal R, 2002, INFORM SYST RES, V13, P168, DOI 10.1287/isre.13.2.168.84
   Albaina A.I., 2001, B OFICIAL ESTADO, VXV
   Alva ME, 2010, INT J TECHNOL ENHANC, V2, P145, DOI 10.1504/IJTEL.2010.031265
   [Anonymous], 2011, ISO 13314
   [Anonymous], 2011, THESIS
   [Anonymous], 1999, 13407 ISO
   [Anonymous], 1999, WEB CONTENT ACCESSIB
   [Anonymous], EVALUATION METHODS U
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 1991, 9126 ISOIEC
   [Anonymous], 16982 ISOTR
   [Anonymous], 1998, ISO 9241-11
   [Anonymous], P 4 INT C HUM COMP I
   [Anonymous], 2008, 9241151 ISO
   Baxley B., 2004, WHAT IS WEB APPL
   Bevan N., 2010, INT C KANS ENG EM RE
   Bias R G, 2005, COST JUSTIFYING USAB
   Black J., 2002, BLOOMBERG BUSINESS W
   Bowman DA, 2002, PRESENCE-TELEOP VIRT, V11, P404, DOI 10.1162/105474602760204309
   Brinck T., 2002, USABILITY WEB
   Cadwell B., 2008, WEB CONTENT ACCESSIB
   Ceaparu I, 2004, INT J HUM-COMPUT INT, V17, P333, DOI 10.1207/s15327590ijhc1703_3
   Constantine L.L., 1994, P SOFTW DEV 94
   Coutin A., 2002, ARQUITECTURA INFORM, P259
   Damodaran L., 1980, DESIGNING SYSTEMS PE, P25
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Edmonds A, 2003, BEHAV RES METH INS C, V35, P194, DOI 10.3758/BF03202542
   Flavián C, 2006, INFORM MANAGE-AMSTER, V43, P1, DOI 10.1016/j.im.2005.01.002
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Freire AP, 2008, SIGDOC'08: PROCEEDINGS OF THE 26TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P73
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   Gonzalez M.P., 2006, J UNIVERS COMPUT SCI, V14, P1513
   Gonzalez M.P., 2008, 9 C INT INT ALB SPAI
   Granollers A., 2004, THESIS U LLEIDA
   Griffith J., 2002, PAUL BUSINESS J
   Hartson HR, 2003, INT J HUM-COMPUT INT, V15, P145, DOI 10.1207/S15327590IJHC1501_13
   Hasan L, 2009, LECT NOTES COMPUT SC, V5619, P697, DOI 10.1007/978-3-642-02806-9_81
   HASSAN MONTERO Y, 2003, SOLO USABILIDAD, P2
   Hvannberg ET, 2007, INTERACT COMPUT, V19, P225, DOI 10.1016/j.intcom.2006.10.001
   Instone K., 1997, W3C J
   ISO, 2000, 18529 ISOTR
   ISO, 2004, 15504 ISO
   Ivory M., 2001, CHI 2001, V3
   Kappel G., 2006, WEB ENG DISCIPLINE S
   Koutsabasis P, 2007, LECT NOTES COMPUT SC, V4550, P569
   Krug Steve., 2006, Don't Make Me Think!: A Common Sense Approach to Web Usability
   Lazar J., 2003, IT SOC, V1, P18
   Lopes R, 2010, NEW REV HYPERMEDIA M, V16, P221, DOI 10.1080/13614568.2010.534185
   Lorca P, 2012, J AM SOC INF SCI TEC, V63, P392, DOI 10.1002/asi.21650
   Madden M., 2006, INTERNET PENETRATION
   Masip L., 2007, ESTUDI ESTAT ACTUAL
   Matera M, 2006, WEB ENGINEERING, P143, DOI 10.1007/3-540-28218-1_5
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   Medina NM, 2010, LECT NOTES COMPUT SC, V6488, P564, DOI 10.1007/978-3-642-17616-6_49
   Nielsen J., 1990, SIGCHI Bulletin, P249
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   NIELSEN J, 2000, INFORM WEEK
   Nielsen J., 1994, Heuristic evaluation
   Nielsen J., 1994, CONDUCT HEURISTIC EV
   Nielsen J., 2003, J NIELSENS ALERTBOX
   Nielsen J., 2001, HIGH LEVEL STRATEGY
   Olsina L., 2001, Web engineerng. Managing diversity and complexity of web application development, P266
   Paganelli L, 2003, BEHAV RES METH INS C, V35, P369, DOI 10.3758/BF03195513
   Perallos A., 2006, THESIS U DEUSTO
   Petrie H., 2007, P CHI 2007
   Petrie Helen., 2009, The universal access handbook, V1, P1, DOI 10.1201/9781420064995-c20
   Pierotti D., 2005, HEURISTIC EVALUATION
   Powell ThomasA., 1998, Web Site Engineering: Beyond Web Page Design
   Pressman R.S., 2006, SOFTWARE ENG PRACTIT
   Quesenbery W., 2001, P 18 ANN C TECHN COM
   Redish J., 1995, SIGDOC Asterisk J. Comput. Doc, V19, P18
   Rosson M.B., 2001, USABILITY ENG
   Serrano M., 2002, P 1 WORKSH MET INV F
   Shneiderman B., 2017, DESIGNING USER INTER
   Silva P., 2007, P 21 BCS HCI GROUP C
   Singh S., 2002, P 2002 ANN RES C S A
   Takayuki W., 2007, P 2007 INT CROSS DIS
   Tanaka E.H., 2005, P 2005 LATIN AM C HU, P139, DOI [10.1145/1111360.1111374, DOI 10.1145/1111360.1111374]
   Tognazzini B., 2003, 1 PRINCIPLES INTERAC
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Vigo M, 2011, INTERACT COMPUT, V23, P137, DOI 10.1016/j.intcom.2011.01.001
   Vora P. R., 1998, Interactions, V5, P13, DOI 10.1145/275269.275272
NR 82
TC 29
Z9 32
U1 0
U2 36
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2013
VL 86
IS 3
BP 649
EP 663
DI 10.1016/j.jss.2012.10.049
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090XN
UT WOS:000315013400005
DA 2024-07-18
ER

PT J
AU Houmansadr, A
   Borisov, N
AF Houmansadr, Amir
   Borisov, Nikita
TI BotMosaic: Collaborative network watermark for the detection of
   IRC-based botnets
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Botnet detection; Botmaster traceback; Traffic analysis; Network flow
   watermarking; Network security
ID ATTACK
AB Recent research has made great strides in the field of detecting botnets. However, botnets of all kinds continue to plague the Internet, as many ISPs and organizations do not deploy these techniques. We aim to mitigate this state by creating a very low-cost method of detecting infected hot host. Our approach is to leverage the botnet detection work carried out by some organizations to easily locate collaborating bats elsewhere.
   We created BotMosaic as a countermeasure to IRC-based botnets. BotMosaic relies on captured bot instances controlled by a watermarker, who inserts a particular pattern into their network traffic. This pattern can then be detected at a very low cost by client organizations and the watermark can be tuned to provide acceptable false-positive rates. A novel feature of the watermark is that it is inserted collaboratively into the flows of multiple captured hots at once, in order to ensure the signal is strong enough to be detected. BotMosaic can also be used to detect stepping stones and to help trace back to the botmaster. It is content agnostic and can operate on encrypted traffic. We evaluate BotMosaic using simulations and a testbed deployment. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Houmansadr, Amir] Univ Texas Austin, Dept Comp Sci, Austin, TX 78758 USA.
   [Borisov, Nikita] Univ Illinois, Dept Elect & Comp Engn, Champaign, IL 61820 USA.
C3 University of Texas System; University of Texas Austin; University of
   Illinois System; University of Illinois Urbana-Champaign
RP Houmansadr, A (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78758 USA.
EM amir@cs.utexas.edu; nikita@illinois.edu
FU National Science Foundation [CNS 0831488]; Boeing Trusted Software
   Center at the Information Trust Institute at the University of Illinois;
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0831488] Funding Source: National Science Foundation
FX This work was supported in part by the National Science Foundation grant
   CNS 0831488 as well as the Boeing Trusted Software Center at the
   Information Trust Institute at the University of Illinois.
CR [Anonymous], 2006, SRUTI
   [Anonymous], 2009, NDSS
   [Anonymous], 2813 RFC
   Bavier A, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P253
   Bhattacharya S, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P229
   Bhattacharya S, 2009, LECT NOTES COMPUT SC, V5905, P252, DOI 10.1007/978-3-642-10772-6_19
   Collins MP, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P93
   Goebel J., 2007, P 1 C 1 WORKSHOP HOT, P8
   Gu G., 2008, P NETW DISTR SYST SE, P1
   Houmansadr A., 2011, P NETW DISTR SYST SE, P11
   Houmansadr A, 2009, INT CONF ACOUST SPEE, P1497, DOI 10.1109/ICASSP.2009.4959879
   Kamel I, 2009, 2009 INTERNATIONAL CONFERENCE ON INTELLIGENT NETWORKING AND COLLABORATIVE SYSTEMS (INCOS 2009), P135, DOI 10.1109/INCOS.2009.67
   Karasaridis Anestis, 2007, 1 WORKSH HOT TOP UND
   Kharouni L., 2009, SDBOT IRC BOTNET CON
   Kiyavash N., 2008, USENIX SEC S
   Lin PY, 2009, PATTERN RECOGN, V42, P886, DOI 10.1016/j.patcog.2008.09.014
   Nagaraja S., 2011, LECT NOTES COMPUTER
   OIKARINEN J, 1993, 1459 RFC
   Provos N., 2004, SSYM 04
   Pyun YJ, 2007, IEEE INFOCOM SER, P634, DOI 10.1109/INFCOM.2007.80
   Ramachandran A., 2006, SRUTI'06: Proceedings of the 2nd conference on Steps to Reducing Unwanted Traffic on the Inter- net, P8, DOI DOI 10.1109/TDSC.2008.35
   Ramachandran A, 2006, ACM SIGCOMM COMP COM, V36, P291, DOI 10.1145/1151659.1159947
   Ramsbrock D, 2008, LECT NOTES COMPUT SC, V5230, P59, DOI 10.1007/978-3-540-87403-4_4
   Spitzner L., 2003, IEEE Security & Privacy, V1, P15, DOI 10.1109/MSECP.2003.1193207
   Ulutas G., 2011, PROCEDIA CS, V3, P721
   Villamar'in-Salom'on R., 2009, SAC '09: Proceedings of the 2009 ACM Symposium on Applied Computing, P2035
   Wang X, 2007, P IEEE S SECUR PRIV, P116, DOI 10.1109/SP.2007.30
   Wang Xinyuan, 2003, P 10 ACM C COMPUTER, P20
   Wang XY, 2002, LECT NOTES COMPUT SC, V2502, P244
   Wang XZ, 2005, LECT NOTES COMPUT SC, V3496, P81
   Wang Zilong, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P146, DOI 10.1109/MMIT.2010.177
   Yu W, 2007, P IEEE S SECUR PRIV, P18, DOI 10.1109/SP.2007.14
   Zhang Y, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE NINTH USENIX SECURITY SYMPOSIUM, P171
   Zhuge J., 2007, TR2007010 U MANNH DE
NR 34
TC 15
Z9 22
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2013
VL 86
IS 3
BP 707
EP 715
DI 10.1016/j.jss.2012.11.005
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090XN
UT WOS:000315013400010
DA 2024-07-18
ER

PT J
AU Cheng, SW
   Garlan, D
AF Cheng, Shang-Wen
   Garlan, David
TI Stitch: A language for architecture-based self-adaptation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Rainbow; Self-adaptation; Strategy; Tactic; Uncertainty; Utility
ID SYSTEMS
AB Requirements for high availability in computing systems today demand that systems be self-adaptive to maintain expected qualities-of-service in the presence of system faults, variable environmental conditions, and changing user requirements. Autonomic computing tackles the challenge of automating tasks that humans would otherwise have to perform to achieve this goal. However, existing approaches to autonomic computing lack the ability to capture routine human repair tasks in a way that takes into account the business context humans use in selecting an appropriate form of adaptation, while dealing with timing delays and uncertainties in outcome of repair actions. In this article, we present Stitch, a language for representing repair strategies within the context of an architecture-based self-adaptation framework. Stitch supports the explicit representation of repair decision trees together with the ability to express business objectives, allowing a self-adaptive system to select a strategy that has optimal utility in a given context, even in the presence of potential timing delays and outcome uncertainty. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Cheng, Shang-Wen; Garlan, David] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Cheng, SW (corresponding author), NASA, Jet Prop Lab, Washington, DC 20546 USA.
EM chengs@cmu.edu; garlan@cs.cmu.edu
OI Schmerl, Bradley/0000-0001-7828-622X
FU DARPA [N66001-99-2-8918, F30602-00-2-0616]; US Army Research Office
   (ARO) [DAAD19-01-1-0485, DAAD19-02-1-0389]; NASA High Dependability
   Computing Program [NCC-2-1298]; Foundation for Science and Technology
   [CMU-PT/ELE/0030/2009]; FEDER via the "Programa Operacional Factores de
   Competitividade" of QREN; COMPETE [FCOMP-01-0124-FEDER-012983]; IBM
   Eclipse Innovation Grant; Fundação para a Ciência e a Tecnologia
   [CMU-PT/ELE/0030/2009] Funding Source: FCT
FX This research was sponsored by DARPA under grants N66001-99-2-8918 and
   F30602-00-2-0616, the US Army Research Office (ARO) under grants
   DAAD19-01-1-0485 and DAAD19-02-1-0389 ("Perpetually Available and Secure
   Information Systems") to Carnegie Mellon University's CyLab, the NASA
   High Dependability Computing Program under cooperative agreement
   NCC-2-1298, a 2004 IBM Eclipse Innovation Grant, the Foundation for
   Science and Technology via project CMU-PT/ELE/0030/2009, and by FEDER
   via the "Programa Operacional Factores de Competitividade" of QREN with
   COMPETE reference: FCOMP-01-0124-FEDER-012983. The views and conclusions
   contained in this document are those of the author and should not be
   interpreted as representing the official policies, either expressed or
   implied, of DARPA, the ARO, the U.S. Government, NASA, IBM, or any other
   entity.
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   Abreu R, 2010, ARTIF INTELL, V174, P1481, DOI 10.1016/j.artint.2010.09.003
   Andrade SS, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P152, DOI 10.1109/SEAMS.2009.5069084
   [Anonymous], 2009, SEAMS 09 P 2009 ICSE
   [Anonymous], 2010, SEAMS 10 P 2010 ICSE
   [Anonymous], SEAMS 08 P 2008 INT
   Asadollahi R, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P58, DOI 10.1109/SEAMS.2009.5069074
   Batista T, 2005, LECT NOTES COMPUT SC, V3527, P1
   Booch G., 1999, Addison-Wesley object technology series
   Bourdenas Themistoklis, 2010, P 2010 ICSE WORKSH S, P75, DOI [10.1145/1808984.1808993, DOI 10.1145/1808984.1808993]
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Brown AB, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P1
   Burch J.R., 1990, VLSI 91
   Butler ShawnA., 2002, ICSE 2002 P 24 INT C, P232, DOI DOI 10.1145/581339.581370
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Casanova P., 2011, P 5 EUR C SOFTW ARCH
   Cheng S.-W., 2005, LNCS, V3460
   Cheng S.-W., 2008, CMUISR08113 SCH COMP
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   Clements P., 2003, SEI S SOFTW
   da Silva CE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P86, DOI 10.1109/SEAMS.2009.5069077
   Damianou N, 2001, LECT NOTES COMPUT SC, V1995, P18
   Dashofy E.M., 2002, Towards architecture-based self-healing systems, P21
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Edwards G, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P142, DOI 10.1109/SEAMS.2009.5069083
   Frye C., 2003, APPL DEV TRENDS  SEP, P29
   Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   Garlan D, 2003, LECT NOTES COMPUT SC, V2677, P61
   Garlan D., 2004, IEEE COMP, V37
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Georgas J.C., 2008, Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self- managing Systems, P105
   Ghemawat S., 2003, ACM SIGOPS OPERATING, V37, P29, DOI [DOI 10.1145/945445.945450, DOI 10.1145/1165389.945450, 10.1145/1165389.945450]
   Ghezzi Carlo., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems, SEAMS '10, P59
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   GORLICK MM, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P23, DOI 10.1109/ICSE.1991.130620
   Holzmann G.J., 1997, P FORTE 1999, V28, P481
   Irmert F., 2008, P SEAMS 08, P97
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P76, DOI 10.1109/SEAMS.2009.5069076
   Kim JS, 2010, J SYST SOFTWARE, V83, P1216, DOI 10.1016/j.jss.2010.01.049
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Medvidovic N, 1997, LECT NOTES COMPUT SC, V1301, P60, DOI 10.1145/267896.267903
   Microsoft Corporation, 2008, SYST CTR OP MAN 2007
   Mitchell T.M., 2017, MACH LEARN
   Morrison R, 2007, LECT NOTES COMPUT SC, V4758, P2
   Mukhija A, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P368, DOI 10.1109/ICDCSW.2004.1284056
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Petrucci V., P 2009 ACM S APPL CO, P1034, DOI [10.1145/1529282.1529509, DOI 10.1145/1529282.1529509]
   Poladian V., 2003, 5 WORKSH EC DRIV SOF
   Poladian V, 2007, FIRST IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, P214, DOI 10.1109/SASO.2007.35
   Scott K., 2002, INFORM WEEK
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sheng-Wen Cheng, 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P45
   Sousa J. P., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P29
   Sousa J. P., 2005, CMUCS05123 SCH COMP
   Sykes Daniel., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC '10, P431, DOI DOI 10.1145/1774088.1774180
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Weyns Danny., 2008, SEAMS 08, P41
   Wikipedia, 2008, UT WIK FREE ENC
   Wolf A.L., 2001, P WORK C COMPL DYN S
NR 62
TC 87
Z9 96
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2012
VL 85
IS 12
SI SI
BP 2860
EP 2875
DI 10.1016/j.jss.2012.02.060
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031VB
UT WOS:000310669500014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Méndez, JR
   Reboiro-Jato, M
   Díaz, F
   Díaz, E
   Fdez-Riverola, F
AF Mendez, Jose R.
   Reboiro-Jato, M.
   Diaz, Fernando
   Diaz, Eduardo
   Fdez-Riverola, Fiorentino
TI Grindstone4Spam: An optimization toolkit for boosting e-mail
   classification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE SpamAssassin framework; Genetic algorithm optimization; Naive Bayes;
   Content-based techniques; Spam detection
ID CONCEPT DRIFT; SPAM; PERFORMANCE; SYSTEM; IMPACT
AB Resulting from the huge expansion of Internet usage, the problem of unsolicited commercial e-mail (UCE) has grown astronomically. Although a good number of successful content-based anti-spam filters are available, their current utilization in real scenarios is still a long way off. In this context, the SpamAssassin filter offers a rule-based framework that can be easily used as a powerful integration and deployment tool for the fast development of new anti-spam strategies. This paper presents Grindstone4Spam, a publicly available optimization toolkit for boosting SpamAssassin performance. Its applicability has been verified by comparing its results with those obtained by the default SpamAssassin software as well as four well-known anti-spam filtering techniques such as Naive Bayes, Flexible Bayes, Adaboost and Support Vector Machines in two different case studies. The performance of the proposed alternative clearly outperforms existing approaches working in a cost-sensitive scenario. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Mendez, Jose R.; Reboiro-Jato, M.; Fdez-Riverola, Fiorentino] Univ Vigo, Escuela Super Ingn Informat, Orense, Spain.
   [Diaz, Fernando] Univ Valladolid, Escuela Univ Informat, Segovia, Spain.
   [Diaz, Eduardo] Ultreia Comunicac SL, Vigo, Spain.
   [Fdez-Riverola, Fiorentino] Univ Vigo, Dept Comp Sci, Vigo, Spain.
   [Diaz, Fernando] Univ Valladolid, Dept Comp Sci, E-47002 Valladolid, Spain.
C3 Universidade de Vigo; Universidad de Valladolid; Universidade de Vigo;
   Universidad de Valladolid
RP Fdez-Riverola, F (corresponding author), ESEI Escuela Super Ingn Informat, Edificio Politecn,Campus Univ Lagoas S-N, Orense 32004, Spain.
EM moncho.mendez@uvigo.es; mrjato@uvigo.es; fdiaz@infor.uva.es;
   ediaz@ultreia.es; riverola@uvigo.es
RI Diaz, Fernando/Y-6802-2019; Fdez-Riverola, Florentino/G-1411-2011;
   Reboiro-Jato, Miguel/AAB-8453-2022; Méndez Reboredo, José
   Ramón/F-3993-2016
OI Diaz, Fernando/0000-0002-1767-5130; Fdez-Riverola,
   Florentino/0000-0002-3943-8013; Reboiro-Jato,
   Miguel/0000-0001-8749-2703; Méndez Reboredo, José
   Ramón/0000-0002-1935-4760
FU Xunta de Galicia [09TICO28E, 08TIC041E]
FX This work was partially funded by the projects Optimizacion de sistemas
   antispam (08TIC041E) and Deseno e validacion de filtro antispam
   intelixente baseado en analise contextual ponderado do contido das
   mensaxes (09TICO28E) from Xunta de Galicia.
CR Androutsopoulos I., 2000, Proceedings of the Workshop on Machine Learning in the New Information Age, P9
   [Anonymous], VIP RAZ
   [Anonymous], 20042 NCSR DEM
   [Anonymous], 2007, RFC 4871
   [Anonymous], AP SPAMASSASSIN PROJ
   [Anonymous], 1999, Statistics for Engineering and Information Science
   [Anonymous], P 14 INT JT C ART IN
   [Anonymous], SPAMHAUS PROJ
   [Anonymous], MCAFEE SPAMKILLER PR
   [Anonymous], P 15 IR C ART INT CO
   [Anonymous], FUZZY OCR
   [Anonymous], MESSAGELABS INT
   [Anonymous], PYZ
   [Anonymous], EXPERT SYSTEMS APPL
   [Anonymous], LEARNING TEXT CATEGO
   [Anonymous], SYM BRIGHTM GAT
   [Anonymous], SPAMASSASSIN PUBLIC
   [Anonymous], PRO OPENSSH
   [Anonymous], JGC SPAM ANTISPAM NE
   [Anonymous], DISTR CHECKS CLEAR
   [Anonymous], 1995, TECHNICAL REPORT
   [Anonymous], INFORM RETRIEVAL
   [Anonymous], P 4 ACM INT C WEB SE
   [Anonymous], 2006, RFC 4408
   [Anonymous], P 4 COMP NAT LANG LE
   [Anonymous], 2001, 2822 RFC
   [Anonymous], SUBV
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Chang M, 2009, J SYST SOFTWARE, V82, P1036, DOI 10.1016/j.jss.2009.01.013
   Cid I, 2008, LECT NOTES ARTIF INT, V5077, P228, DOI 10.1007/978-3-540-70720-2_18
   Cohen WW, 1999, ACM T INFORM SYST, V17, P141, DOI 10.1145/306686.306688
   Cunningham P., 2003, P ICCBR 03 WORKSHOP, P115
   Davis L., 1991, Handbook of Genetic Algorithms
   Delany SJ, 2005, KNOWL-BASED SYST, V18, P187, DOI 10.1016/j.knosys.2004.10.002
   Drucker H, 1999, IEEE T NEURAL NETWOR, V10, P1048, DOI 10.1109/72.788645
   Duan ZH, 2007, COMPUT NETW, V51, P2616, DOI 10.1016/j.comnet.2006.11.015
   Fdez-Riverola F, 2007, EXPERT SYST APPL, V33, P36, DOI 10.1016/j.eswa.2006.04.011
   Fdez-Riverola F, 2007, DECIS SUPPORT SYST, V43, P722, DOI 10.1016/j.dss.2006.11.012
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Gee K.R., 2003, P ACM S APPL COMPUTI, P460
   Guzella TS, 2009, EXPERT SYST APPL, V36, P10206, DOI 10.1016/j.eswa.2009.02.037
   Hu Y, 2010, EXPERT SYST APPL, V37, P8557, DOI 10.1016/j.eswa.2010.05.020
   Joachims T., 1997, International conference on machine learning, P143, DOI DOI 10.1016/J.ESWA.2016.09.009
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Lai GH, 2009, EXPERT SYST APPL, V36, P6645, DOI 10.1016/j.eswa.2008.08.075
   MARCUS D., 2009, MCAFEE THREATS REPOR
   Marsono MN, 2009, COMPUT NETW, V53, P835, DOI 10.1016/j.comnet.2008.11.012
   Méndez JR, 2008, LECT NOTES ARTIF INT, V5077, P213, DOI 10.1007/978-3-540-70720-2_17
   Méndez JR, 2007, LECT NOTES ARTIF INT, V4571, P364
   Méndez JR, 2006, LECT NOTES ARTIF INT, V4065, P106
   Méndez JR, 2009, EXPERT SYST APPL, V36, P1601, DOI 10.1016/j.eswa.2007.11.037
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rennie J.D.M., 2000, P KDD WORKSH TEXT MI
   Sakkis G, 2003, INFORM RETRIEVAL, V6, P49, DOI 10.1023/A:1022948414856
   Schapire RE, 2000, MACH LEARN, V39, P135, DOI 10.1023/A:1007649029923
NR 56
TC 12
Z9 12
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2012
VL 85
IS 12
SI SI
BP 2909
EP 2920
DI 10.1016/j.jss.2012.06.027
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031VB
UT WOS:000310669500017
DA 2024-07-18
ER

PT J
AU Lo, D
   Mariani, L
   Santoro, M
AF Lo, David
   Mariani, Leonardo
   Santoro, Mauro
TI Learning extended FSA from software: An empirical assessment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE FSA inference; Empirical validation; Behavioral models
AB A number of techniques that infer finite state automata from execution traces have been used to support test and analysis activities. Some of these techniques can produce automata that integrate information about the data-Flow, that is, they also represent how data values affect the operations executed by programs.
   The integration of information about operation sequences and data values into a unique model is indeed conceptually useful to accurately represent the behavior of a program. However, it is still unclear whether handling heterogeneous types of information, such as operation sequences and data values, necessarily produces higher quality models or not.
   In this paper, we present an empirical comparative study between techniques that infer simple automata and techniques that infer automata extended with information about data-Flow. We investigate the effectiveness of these techniques when applied to traces with different levels of sparseness, produced by different software systems. To the best of our knowledge this is the first work that quantifies both the effect of adding data-Flow information within automata and the effectiveness of the techniques when varying sparseness of traces. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Mariani, Leonardo; Santoro, Mauro] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 University of Milano-Bicocca; Singapore Management University
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Viale Sarca 336, Milan, Italy.
EM mariani@disco.unimib.it
RI ; Lo, David/A-2493-2012
OI Mariani, Leonardo/0000-0001-9527-7042; Lo, David/0000-0002-4367-7201
CR AMMONS G, 2002, P S PRINC PROGR LANG
   [Anonymous], P INT S SOFTW REL EN
   Antunes J., 2011, P WORK C REV ENG
   Bertolino A., 2009, P JOINT M EUR SOFTW
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Bogdanov K., 2009, P WORK C REV ENG
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   DALLMEIER V., 2010, P INT S SOFTW TEST A
   Dallmeier V., 2006, P INT WORKSH DYN SYS
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Hangal S., 2002, P INT C SOFTW ENG
   Henkel J., 2003, P EUR C OBJ OR PROGR
   Krka I., 2010, P INT C SOFTW ENG NI
   Lo D., 2007, P SIGKDD INT C KNOWL
   Lo D., 2006, P 13 WORK C REV ENG
   Lo D., 2009, P INT C AUT SOFTW EN
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Lorenzoli D., 2008, P INT C SOFTW ENG
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mariani L., 2010, P 2 INT WORKSH PRINC
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Mariani L, 2011, CH CRC DATA MIN KNOW, P29
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Pradel M, 2010, PROC IEEE INT CONF S
   Raffelt H., 2006, P INT C FUND APPR SO
   Ramanathan M.K., 2007, P INT C SOFTW ENG
   Raz O., 2002, P INT C SOFTW ENG
   Reiss S.P., 2001, P INT C SOFTW ENG
   Safyallah H., 2006, P INT C PROGR COMPR
   Schneider S., 2010, P WORKSH MAN SYST VI
   Thummalapenta S., 2009, P INT C AUT SOFTW EN
   Walkinshaw N., 2007, P WORK C REV ENG
   Walkinshaw N., 2008, P INT C AUT SOFTW EN
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang J., 2006, P INT C SOFTW ENG
   Zhong H., 2009, P INT C AUT SOFTW EN
NR 37
TC 35
Z9 37
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2012
VL 85
IS 9
BP 2063
EP 2076
DI 10.1016/j.jss.2012.04.001
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 978GL
UT WOS:000306728500007
DA 2024-07-18
ER

PT J
AU Dehuri, S
   Roy, R
   Cho, SB
   Ghosh, A
AF Dehuri, Satchidananda
   Roy, Rahul
   Cho, Sung-Bae
   Ghosh, Ashish
TI An improved swarm optimized functional link artificial neural network
   (ISO-FLANN) for classification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Classification; Data mining; Functional link artificial neural networks;
   Multi-layer perception; Particle swarm optimization; Improved particle
   swarm optimization; SVM; FSN
ID PARTICLE SWARM; CONVERGENCE ANALYSIS; ALGORITHM; IDENTIFICATION;
   CLASSIFIERS; INTELLIGENT; TESTS
AB Multilayer perceptron (MLP) (trained with back propagation learning algorithm) takes large computational time. The complexity of the network increases as the number of layers and number of nodes in layers increases. Further, it is also very difficult to decide the number of nodes in a layer and the number of layers in the network required for solving a problem a priori. In this paper an improved particle swarm optimization (IPSO) is used to train the functional link artificial neural network (FLANN) for classification and we name it ISO-FLANN. In contrast to MLP, FLANN has less architectural complexity, easier to train, and more insight may be gained in the classification problem. Further, we rely on global classification capabilities of IPSO to explore the entire weight space, which is plagued by a host of local optima. Using the functionally expanded features; FLANN overcomes the non-linear nature of problems. We believe that the combined efforts of FLANN and IPSO (IPSO + FLANN = ISO - FLANN) by harnessing their best attributes can give rise to a robust classifier. An extensive simulation study is presented to show the effectiveness of proposed classifier. Results are compared with MLP, support vector machine(SVM) with radial basis function (RBF) kernel, FLANN with gradiend descent learning and fuzzy swarm net (FSN). (C) 2012 Elsevier Inc. All rights reserved.
C1 [Dehuri, Satchidananda] Fakir Mohan Univ, Dept Informat & Commun Technol, Vyasa Vihar 756019, Balasore, India.
   [Roy, Rahul] Indian Stat Unit, Machine Intelligence Unit, Kolkata 700108, India.
   [Cho, Sung-Bae] Yonsei Univ, Dept Comp Sci, Soft Comp Lab, Seoul 120749, South Korea.
   [Ghosh, Ashish] Indian Stat Inst, Ctr Soft Comp Res, Kolkata 700108, India.
C3 Fakir Mohan University; Indian Statistical Institute; Yonsei University;
   Indian Statistical Institute; Indian Statistical Institute Kolkata
RP Dehuri, S (corresponding author), Fakir Mohan Univ, Dept Informat & Commun Technol, Vyasa Vihar 756019, Balasore, India.
EM satchi.lapa@gmail.com; link2rahulroy@gmail.com; sbcho@cs.yonsei.ac.kr;
   ash@isical.ac.in
RI Dehuri, Satchidananda/AFQ-1029-2022; Dehuri,
   Satchidananda/AAN-7798-2021; Roy, Rahul/HGD-6009-2022
OI Dehuri, Satchidananda/0000-0003-1435-4531; Roy,
   Rahul/0000-0002-7312-3269; GHOSH, ASHISH/0000-0003-1548-5576
CR [Anonymous], FUZZY NET SYST
   [Anonymous], 2007, Journal of Computer Science, DOI [10.3844/jcssp.2007.948.955, DOI 10.3844/JCSSP.2007.948.955]
   Bäck T, 1993, EVOL COMPUT, V1, P1, DOI 10.1162/evco.1993.1.1.1
   Blake Catherine, UCI repository of machine learning databases
   Carvalho Marcio, 2007, 7th International Conference on Hybrid Intelligent Systems, HIS 2007, P336
   Chang CG, 2007, ICNC 2007: THIRD INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 1, PROCEEDINGS, P750
   Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692
   Decker R, 2007, STUD CLASS DATA ANAL, P425, DOI 10.1007/978-3-540-70981-7_48
   Dehuri S, 2008, APPL SOFT COMPUT, V8, P477, DOI 10.1016/j.asoc.2007.02.009
   Dehuri S, 2010, EXPERT SYST APPL, V37, P4379, DOI 10.1016/j.eswa.2009.11.090
   Dehuri S, 2010, NEURAL COMPUT APPL, V19, P317, DOI 10.1007/s00521-009-0310-y
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Eberhart RC, 2000, IEEE C EVOL COMPUTAT, P84, DOI 10.1109/CEC.2000.870279
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Ge HW, 2008, NONLINEAR ANAL-REAL, V9, P1345, DOI 10.1016/j.nonrwa.2007.03.008
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Guerra FA, 2008, CHAOS SOLITON FRACT, V35, P967, DOI 10.1016/j.chaos.2006.05.077
   Hamamoto Y, 1997, IEEE T PATTERN ANAL, V19, P73, DOI 10.1109/34.566814
   Han F, 2008, INFORM SCIENCES, V178, P907, DOI 10.1016/j.ins.2007.09.008
   Hsu CW, 2002, IEEE T NEURAL NETWOR, V13, P415, DOI 10.1109/72.991427
   Jiang M, 2007, INFORM PROCESS LETT, V102, P8, DOI 10.1016/j.ipl.2006.10.005
   Kang M, 2008, INFORM SCIENCES, V178, P3802, DOI 10.1016/j.ins.2008.05.011
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kennedy J., 2001, SWARM INTELLIGENCE M
   King R. D., 1995, APPL ARTIF INTELL, V9, P289
   Liu B, 2005, CHAOS SOLITON FRACT, V25, P1261, DOI 10.1016/j.chaos.2004.11.095
   Liu HB, 2004, PROCEEDINGS OF THE 2004 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P3157, DOI 10.1109/ICMLC.2004.1378577
   Luengo J, 2009, EXPERT SYST APPL, V36, P7798, DOI 10.1016/j.eswa.2008.11.041
   Marinakis Y, 2009, EXPERT SYST, V26, P433, DOI 10.1111/j.1468-0394.2009.00506.x
   Mazurowski MA, 2008, NEURAL NETWORKS, V21, P427, DOI 10.1016/j.neunet.2007.12.031
   Mishra BB, 2008, CSI J COMPUTER SCI E, V5, P1
   PAO YH, 1992, INT J CONTROL, V56, P263, DOI 10.1080/00207179208934315
   Pao YH., 1989, Adaptive Pattern Recognition and Neural Networks
   Park HS, 2006, LECT NOTES COMPUT SC, V4115, P381
   Pereira M, 2009, LECT N BIOINFORMAT, V5676, P121, DOI 10.1007/978-3-642-03223-3_11
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rudolph G., 1997, IEEE Transactions on Evolutionary Computation, V1, P249, DOI 10.1109/4235.687885
   Schutte JF, 2005, J GLOBAL OPTIM, V31, P93, DOI 10.1007/s10898-003-6454-x
   Schwefel H.P., 1981, Numerical optimization of computer models
   SHI Y, 1999, P IEEE WORLD C EV CO, P6
   Trelea IC, 2003, INFORM PROCESS LETT, V85, P317, DOI 10.1016/S0020-0190(02)00447-7
   van den Bergh F, 2006, INFORM SCIENCES, V176, P937, DOI 10.1016/j.ins.2005.02.003
   Wu JS, 2006, LECT NOTES COMPUT SC, V3973, P1202
   Yager RR, 2006, INFORM SCIENCES, V176, P577, DOI 10.1016/j.ins.2004.12.006
   Yang JM, 2001, NEURAL COMPUT APPL, V10, P214, DOI 10.1007/s521-001-8050-2
   Yi D, 2005, NEUROCOMPUTING, V63, P527, DOI 10.1016/j.neucom.2004.07.002
   Yu JB, 2007, NEURAL PROCESS LETT, V26, P217, DOI 10.1007/s11063-007-9053-x
   Yusiong JPT, 2006, LECT NOTES COMPUT SC, V4221, P879
   Zhang GQP, 2000, IEEE T SYST MAN CY C, V30, P451, DOI 10.1109/5326.897072
   Zhang JR, 2007, APPL MATH COMPUT, V185, P1026, DOI 10.1016/j.amc.2006.07.025
   Zhao L, 2009, EXPERT SYST APPL, V36, P2805, DOI 10.1016/j.eswa.2008.01.061
NR 51
TC 90
Z9 93
U1 0
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2012
VL 85
IS 6
BP 1333
EP 1345
DI 10.1016/j.jss.2012.01.025
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936YQ
UT WOS:000303626300009
DA 2024-07-18
ER

PT J
AU Lee, S
   Lee, HR
   Lee, S
   Kim, J
AF Lee, Sangho
   Lee, Hay-Rim
   Lee, Seungkwang
   Kim, Jong
TI DRMFS: A file system layer for transparent access semantics of
   DRM-protected contents
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Digital rights management; Transparent access semantics; FUSE;
   Cryptographic file system
AB In many digital rights management (DRM) schemes, only a specialized application can decode DRM-protected contents. This restriction is harmful to users because they want to use their purchased digital contents with their preferred applications. To relax this restriction. DRM technology should provide transparent access semantics of DRM-protected contents to authorized applications. Some previous schemes achieve limited transparent access semantics but have efficiency and applicability problems. In this paper, we propose a DRM control scheme at the file system layer (DRMFS) that achieves transparent access semantics of DRM-protected contents with efficiency, applicability, and portability. Since DRMFS is working at the file system layer, any authorized application can access DRM-protected content in the same way as using general files. To implement a prototype of DRMFS, we use the Filesystem in Userspace (FUSE) library that is a well known library used to develop user level file systems. We explain details of the implementation and evaluate its performance. The evaluation results show that DRMFS has acceptable overheads. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Lee, Sangho; Lee, Hay-Rim; Lee, Seungkwang] Pohang Univ Sci & Technol POSTECH, Dept Comp Sci & Engn, Pohang, South Korea.
   [Kim, Jong] Pohang Univ Sci & Technol POSTECH, Div IT Convergence Engn, Pohang, South Korea.
C3 Pohang University of Science & Technology (POSTECH); Pohang University
   of Science & Technology (POSTECH)
RP Lee, S (corresponding author), Pohang Univ Sci & Technol POSTECH, Dept Comp Sci & Engn, Pohang, South Korea.
EM sangho2@postech.ac.kr; hayrlee@postech.ac.kr; skwang@postech.ac.kr;
   jkim@postech.ac.kr
RI Lee, Seungkwang/GRX-2122-2022
FU MKE (The Ministry of Knowledge Economy), Korea under ITRC (Information
   Technology Research Center); Ministry of Education, Science and
   Technology through the National Research Foundation of Korea [R31-10100]
FX This research was supported by the MKE (The Ministry of Knowledge
   Economy), Korea, under the ITRC (Information Technology Research Center)
   support program supervised by the NIPA (National IT Industry Promotion
   Agency) (NIPA-2011-C1090-1131-0009) and World Class University program
   funded by the Ministry of Education, Science and Technology through the
   National Research Foundation of Korea(R31-10100).
CR [Anonymous], 2011, TPM MAIN 1
   [Anonymous], 2003, P USENIX ANN TECHN C
   Apple, 2009, CHANG COM ITUNES STO
   Arnab A, 2007, AXMEDIS 2007: THIRD INTERNATIONAL CONFERENCE ON AUTOMATED PRODUCTION OF CROSS MEDIA CONTENT FOR MULTI-CHANNEL DISTRIBUTION, PROCEEDINGS, P39
   Bhatt S, 2009, COMPUT SECUR, V28, P327, DOI 10.1016/j.cose.2009.03.001
   Blaze M., 1993, P 1 ACM C COMP COMM, P9
   Cattaneo G, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P199
   Cornell B, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P19
   Cross D.B., 2008, United States Patent, Patent No. [2008/0235807, 20080235807]
   Demmer M., 2008, P 6 USENIX C FIL STO
   Doerr G., 2008, DIG RIGHTS MAN WORKS, P39
   Engadget, 2007, AM LAUNCH DRM FREE A
   Halcrow MichaelAustin., 2005, OTTAWA LINUX S, P201
   Hansen D, 2010, GMAIL FILESYSTEM FUS
   ISO/IEC FDIS 21000-5:2003(E), 2003, 2100052003E ISOIEC F
   Koenen RH, 2004, P IEEE, V92, P883, DOI 10.1109/JPROC.2004.827357
   Koster P, 2005, LECT NOTES COMPUT SC, V3677, P42
   Martinez J., 2010, MediaInfo
   Michiels S., 2005, DIGITAL RIGHTS MANAG
   Microsoft, 2009, WIND MED DRM CLIENT
   Mori R., 1990, Transactions of the Institute of Electronics, Information and Communication Engineers E, VE73, P1133
   Nair S.K., 2008, DRM 2008, P87
   Ongtang M., 2010, P ANN COMP SEC APPL
   Open Mobile Alliance, 2008, DRM CONT FORM APPR V
   Open Mobile Alliance, 2008, DRM ARCH APPR VERS 2
   Open Mobile Alliance, 2008, DRM RIGHTS EXPR LANG
   OpenOffice.org, 2009, COLD START SIM OPENO
   Qtopia, 2007, DOCUMENT SYSTEM DRM
   Rosenblatt Bill., 2002, Digital Rights Management: Business and Technology
   Shapiro W., 2001, P ACM WORKSH SEC PRI
   Singh A., 2008, MACFUSE
   Sun Microsystems Inc., 1989, 1094 RFC SUN MICR IN
   Szeredi M., 2008, SSH FILESYSTEM
   Szeredi M., 2010, FILESYSTEM USERSPACE
   Taban G., 2006, The Sixth Workshop on Digital Rights Management, P69
   Viega J., 2002, Network security with openSSL: cryptography for secure communications
   Weil S.A., 2006, P 7 USENIX S OP SYST
   Zadok E., 2006, ACM Transaction on Storage, V2, P161, DOI 10.1145/1149976.1149979
NR 38
TC 3
Z9 3
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2012
VL 85
IS 5
BP 1058
EP 1066
DI 10.1016/j.jss.2011.12.008
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 912VF
UT WOS:000301828800003
DA 2024-07-18
ER

PT J
AU Guo, FC
   Mu, Y
   Susilo, W
AF Guo, Fuchun
   Mu, Yi
   Susilo, Willy
TI Improving security of <i>q</i>-SDH based digital signatures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Digital signatures; q-SDH assumption; Security proof
AB In Eurocrypt 2009, Hohenberger and Waters pointed out that a complexity assumption, which restricts the adversary to a single correct response, seems inherently more reliable than their flexible counterparts. The q-SDH assumption is less reliable than standard assumptions because its solution allows exponential answers. On the other hand, the q-SDH assumption exhibits the nice feature of tight reduction in security proof. In this paper, we propose a variant of the q-SDH assumption, so that its correct answers are polynomial and no longer exponentially many. The new assumption is much more reliable and weaker than the original q-SDH assumption. We propose a new digital signature scheme that can tightly reduce the security to the proposed assumption in the standard model. We show that our signature scheme shares most properties with the q-SDH based signature schemes. We also propose a new approach to construct fully secure signatures from weakly secure signature against known-message attacks. Although our security transformation is conditional and not completely generic, it offers another efficient approach to construct fully secure signatures. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Guo, Fuchun; Mu, Yi; Susilo, Willy] Univ Wollongong, Sch Comp Sci & Software Engn, Ctr Comp & Informat Secur Res, Wollongong, NSW 2522, Australia.
C3 University of Wollongong
RP Guo, FC (corresponding author), Univ Wollongong, Sch Comp Sci & Software Engn, Ctr Comp & Informat Secur Res, Wollongong, NSW 2522, Australia.
EM fg278@uow.edu.au; ymu@uow.edu.au; wsusilo@uow.edu.au
RI Susilo, Willy/A-3724-2008; Mu, Yi/AAC-3871-2019; Guo, Fuchun/J-9243-2018
OI Susilo, Willy/0000-0002-1562-5105; Guo, Fuchun/0000-0001-6939-7710
CR [Anonymous], 2001, Advances in Cryptology-ASIACRYPT 2001 (Lecture Notes in Computer Science, DOI [DOI 10.1007/3-540-45682-1_30, DOI 10.1007/3-540-45682-130]
   [Anonymous], 1993, ACM CCS
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2001, LNCS
   Bellare M, 1998, LECT NOTES COMPUT SC, V1403, P236, DOI 10.1007/BFb0054130
   Bellare M, 2009, LECT NOTES COMPUT SC, V5479, P407, DOI 10.1007/978-3-642-01001-9_24
   Boneh D, 2004, LECT NOTES COMPUT SC, V3027, P56
   Boneh D, 2008, J CRYPTOL, V21, P149, DOI 10.1007/s00145-007-9005-7
   Canetti R., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P209, DOI 10.1145/276698.276741
   Cheon JH, 2006, LECT NOTES COMPUT SC, V4004, P1
   EVEN S, 1990, LECT NOTES COMPUT SC, V435, P263
   Gentry C, 2006, LECT NOTES COMPUT SC, V4004, P445
   Goh EJ, 2003, LECT NOTES COMPUT SC, V2656, P401
   GOLDWASSER S, 1988, SIAM J COMPUT, V17, P281, DOI 10.1137/0217017
   Hofheinz D, 2008, LECT NOTES COMPUT SC, V5157, P21, DOI 10.1007/978-3-540-85174-5_2
   Hohenberger S, 2009, LECT NOTES COMPUT SC, V5677, P654, DOI 10.1007/978-3-642-03356-8_38
   Hohenberger S, 2009, LECT NOTES COMPUT SC, V5479, P333, DOI 10.1007/978-3-642-01001-9_19
   Krawczyk H., 2000, PROC NDSS, P143
NR 18
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2011
VL 84
IS 10
BP 1783
EP 1790
DI 10.1016/j.jss.2011.05.023
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 816BF
UT WOS:000294573000016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wijayasiriwardhane, T
   Lai, R
AF Wijayasiriwardhane, Thareendhra
   Lai, Richard
TI Component Point: A system-level size measure for Component-Based
   Software Systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Component-Based Software System; Component Point; Function Point;
   Software measures; Software sizing
ID METRICS; COST; FRAMEWORK; DESIGN; MODEL; CODE
AB System-level size measures are particularly important in software project management as tasks such as planning and estimating the cost and schedule of software development can be performed more accurately when a size estimate of the entire system is available. However, due to the black-box nature of components, the traditional software measures are not adequate for Component-Based Software Systems (CBSS). In this paper, we describe a Function Point-like measure, named Component Point (CP), for measuring the system-level size of a CBSS specified in the Unified Modelling Language. Our approach integrates three software measures and extends an existing size measure from the more matured Object-Oriented paradigm to the related and relatively young CBSS discipline. We then apply the proposed measure to a Global Positioning System and demonstrate its viability in sizing a CBSS. An empirical analysis is also provided in order to prove the validity and usefulness of the CP measure. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Wijayasiriwardhane, Thareendhra; Lai, Richard] La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
C3 La Trobe University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
OI Wijayasiriwardhane, Thareendhra/0000-0002-8657-6224
FU Australian Government
FX The authors would like to acknowledge the financial support provided by
   the Australian Government through the Endeavour Programme for the
   success of this research. A special thank goes to Dr. Nael Salman and
   Professor Ali Dogru of the Department of Computer Engineering, Middle
   East Technical University, Turkey for sharing their data with us for
   validation of this research work. Helpful comments and constructive
   criticisms of unanimous reviewers are also appreciated.
CR ABRAHAO S, 2006, SOFTWARE SYSTEM MODE, V5, P48
   ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A., 1997, American Programmer, V10, P32
   ABRAN A, 1999, COSMIC FFP MEASUREME
   ABTS C, 2004, EXTENDING COCOMO 2 S
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1999, FUNCT POINT COUNT PR
   [Anonymous], SOFTWARE ENG FORMAL
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Banker R., 1992, J MANAGE INFORM SYST, V8, P127
   BANKER RD, 1994, IEEE T SOFTWARE ENG, V20, P169, DOI 10.1109/32.268919
   Berry W. D., 1985, SAGE U PAPER SERIES
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   BOEHM AW, 1995, ANN SOFTW ENG, V1, P57
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P303, DOI 10.1109/ICSE.1999.841021
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Cechich A, 2003, LECT NOTES COMPUT SC, V2693, P1
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   CHEESMAN J, 2001, SIMPLE PROCESS SPECI
   CLEARY D, 2000, P IFPUG ANN C SAN DI
   Cockcroft S, 1996, INFORM SOFTWARE TECH, V38, P391, DOI 10.1016/0950-5849(95)01065-3
   *COST XPERT GROUP, 2002, EST INT DEV
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   DeMarco T, 1986, CONTROLLING SOFTWARE
   DEMARCO T, 1984, ACM SIGMETRICS PERFO, V12, P13
   Diev S., 2006, Software Engineering Notes, ACM, V31, P1
   Dreger J.B., 1989, FUNCTION POINT ANAL
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   FOX J, 1991, SAGE U PAPER SERIES, V7079
   GILL NS, 2003, ACM SIGSOFT SOFTWARE, V28, P1
   GOULAO MA, 2002, P 6 EUR C OBJ OR PRO
   Hakuta M, 1997, J SYST SOFTWARE, V37, P253, DOI 10.1016/S0164-1212(96)00020-9
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Han J, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P110, DOI 10.1109/APSEC.1998.733601
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   International Standardization Organization (ISO), 2003, 209262003 ISOIEC
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   Jones C., 1985, Programming Productivity
   Jones C., 1996, APPL SOFTWARE MEASUR
   Kanmani S, 2007, ICCTA 2007: INTERNATIONAL CONFERENCE ON COMPUTING: THEORY AND APPLICATIONS, PROCEEDINGS, P261
   Kanmani S., 2008, 1st India Software Engineering Conference. ISEC 2008, P141
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kralj T, 2005, J SYST SOFTWARE, V77, P81, DOI 10.1016/j.jss.2004.12.012
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   LONGSTREET DH, 1995, AM PROGRAM, V83, P25
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   Mahmood S, 2007, IET SOFTW, V1, P57, DOI 10.1049/iet-sen:20060045
   Mahmood S, 2005, INFORM SOFTWARE TECH, V47, P693, DOI 10.1016/j.infsof.2005.03.007
   Mahmood S, 2008, SOFTWARE PRACT EXPER, V38, P117, DOI 10.1002/spe.769
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Mendes E., 2000, Proceedings 2000 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.2000.844577
   MINKIEWICZ AF, 1997, P APPL SOFTW MEAS C
   Murali CS, 1997, INFORM SOFTWARE TECH, V39, P399, DOI 10.1016/S0950-5849(96)00004-3
   Narasimhan VL, 2007, INFORM SCIENCES, V177, P844, DOI 10.1016/j.ins.2006.07.010
   POELS G, 1996, GUIDE SHARE EUROPE J, V1, P9
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   SALMAN N, 2004, INTEGRATED DESIGN PR, V8, P83
   SALMAN N, 2002, P 6 BIENN WORLD C IN
   Santillo L. ESE, 2002, IT MEASUREMENT PRACT, P391
   Sedigh-Ali S, 2003, LECT NOTES COMPUT SC, V2693, P374
   Sedigh-Ali S, 2001, COMPUTER, V34, P44, DOI 10.1109/2.920611
   Seker R, 2004, IEEE T SYST MAN CY C, V34, P475, DOI 10.1109/TSMCC.2004.829297
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   *STAND GROUP INT I, 2004, 2004 3 QUART RES REP
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   SYMONS CR, 2001, P 4 EUR C SOFTW MEAS
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   SZYPERSKI C, 2002, ARCHITECTURE DESIGN, V2008
   Tadayon N, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P815, DOI 10.1109/ITCC.2005.210
   Tessier P, 2003, P IEEE RAP SYST PROT, P9, DOI 10.1109/IWRSP.2003.1207024
   *UKSMA, 1998, MKII FUNCT POINT AN
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
   VESTERINEN P, 1999, ACM SIGSOFT SOFTWARE, V24, P63
   Vitharana P, 2003, COMMUN ACM, V46, P97, DOI 10.1145/948383.948387
   WHITMIRE SA, 1996, P APPL SOFTW MEAS C
   WIJAYASIRIWARDH.T, 2008, P 8 INT C QUAL SOFTW, P329
   WILLIAMS J, 2001, COMPONENT BASED SOFT, P79
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 92
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2010
VL 83
IS 12
SI SI
BP 2456
EP 2470
DI 10.1016/j.jss.2010.07.008
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686CK
UT WOS:000284674200008
DA 2024-07-18
ER

PT J
AU Cicirelli, F
   Furfaro, A
   Nigro, L
AF Cicirelli, Franco
   Furfaro, Angelo
   Nigro, Libero
TI A service-based architecture for dynamically reconfigurable workflows
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service oriented computing; Petri nets; Business process modelling;
   Workflow systems; Dynamic reconfiguration
ID TIME PETRI NETS; MANAGEMENT; SYSTEM; FLOW
AB In the last few years, business process management systems have been employed for handling information systems of ever increasing complexity. As a consequence, the adoption of modelling languages enabling smooth and seamless transitions among the various phases of the process lifecycle, the ability of exploiting coordination schema over distributed execution contexts and the support for dynamic evolution and reconfiguration have become software engineering issues of great importance. This paper proposes the use of PN-Engine, a decentralized Petri nets execution engine, as a business process enactment engine. PN-Engine, which is based on the Jini service architecture, supports the decentralized execution of process models specified as Petri nets (PNs) enhanced with modular constructs and offers suitable mechanisms for dealing with the aforementioned design issues. PN-Engine allows to deploy and enact a new version of an existing process model without requiring the stopping/removal of older instances that are still running. The paper presents a novel approach enabling a decentralized migration procedure where concurrent portions of older instances migrate asynchronously to the new process model. Advantages of the proposed approach are demonstrated by means of an example concerning a workflow for a wine-production process. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Cicirelli, Franco; Furfaro, Angelo; Nigro, Libero] Univ Calabria, Lab Ingn Software, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Furfaro, A (corresponding author), Univ Calabria, Lab Ingn Software, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
EM f.cicirelli@deis.unical.it; a.furfaro@deis.unical.it; l.nigro@unical.it
RI Furfaro, Angelo/N-2923-2019
OI Furfaro, Angelo/0000-0003-2537-8918
CR Adams M, 2007, LECT NOTES COMPUT SC, V4803, P95
   Adams M, 2006, LECT NOTES COMPUT SC, V4275, P291
   [Anonymous], 2009, BUS PROC MOD NOT
   Aversano L, 2002, P INT COMP SOFTW APP, P1054, DOI 10.1109/CMPSAC.2002.1045148
   BARESI L, 2006, ELECT COMMUNICATIONS, V3
   Benatallah B, 2003, IEEE INTERNET COMPUT, V7, P40, DOI 10.1109/MIC.2003.1167338
   Bennett K, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/APSEC.2000.896702
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   Carriero Nicholas., 1990, WRITE PARALLEL PROGR
   Casati F, 2001, INFORM SYST, V26, P143, DOI 10.1016/S0306-4379(01)00014-X
   Cassez F, 2006, J SYST SOFTWARE, V79, P1456, DOI 10.1016/j.jss.2005.12.021
   CHAFLE GB, 2004, WWW ALT 04, P134
   CHRISTOPHIDES V, 2001, P WORKSH TECHN E SER, P58
   Cicirelli F, 2006, PROC ANNU SIMUL SYMP, P261, DOI 10.1109/ANSS.2006.12
   Cicirelli Franco, 2007, International Journal of Simulation: Systems, Science & Technology, V8, P8
   CICIRELLI F, 2007, P 19 EUR MOD SIM S E
   Cicirelli F, 2007, INFORM-J COMPUT INFO, V31, P29
   Cicirelli F, 2007, P IEEE I C SERV COMP, P278
   Cicirelli F, 2007, REAL-TIME SYST, V35, P153, DOI 10.1007/s11241-006-9006-x
   Cicirelli F, 2008, EUROPEAN SIMULATION AND MODELLING CONFERENCE 2008, P479
   Compton P., 1988, LECT NOTES ARTIF INT, P292
   DUN H, 2008, P 2 IFIP IEEE INT S, P166
   EDWARDS WK, 2001, CORE JINI
   ELLIS C, 1995, P C ORG COMP SYST, P10
   Flenner R., 2001, JINI JAVASPACES APPL
   Guan ZJ, 2006, CONCURR COMP-PRACT E, V18, P1115, DOI 10.1002/cpe.988
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Hollingsworth David, 1995, TC00-1003
   KINDLER E, 2001, P 8 WORKSH ALG WERKZ, P7
   LAZCANO A, 2000, INT J COMPUTER SYSTE, V15
   MECELLA M, 2002, P 3 INT WORKSH TECHN, P38
   Mecella M, 2008, 17TH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURES FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P227, DOI 10.1109/WETICE.2008.50
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   *OASIS, 2009, WEB SERV BUS PROC EX
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Perrey R, 2003, 2003 SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P116, DOI 10.1109/SAINTW.2003.1210138
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Purvis M, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P311, DOI 10.1109/APSEC.2000.896713
   Qiu ZM, 2007, COMPUT IND, V58, P453, DOI 10.1016/j.compind.2006.09.014
   RAMCHANDANI C, 1974, TR120 MIT
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   Rinderle S, 2004, DATA KNOWL ENG, V50, P9, DOI 10.1016/j.datak.2004.01.002
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Shegalov G, 2001, VLDB J, V10, P91
   *SUN MICR, 2009, JAV MESS SERV JMS
   *SUN MICR, 2008, JIN NETW TECHN SPEC
   Sun P, 2009, INFORM SOFTWARE TECH, V51, P284, DOI 10.1016/j.infsof.2008.02.004
   Tan W, 2006, GCC 2006: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING WORKSHOPS, PROCEEDINGS, P308
   van der Aalst WMP, 2000, COMPUT SYST SCI ENG, V15, P267
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   van der Aalst WMP, 2001, INFORM SYST FRONT, V3, P297, DOI 10.1023/A:1011409408711
   VERBEEK H., 2005, Proceedings of the Second International Workshop on Applications of Petri Nets to Coordination, Workow and Business Process Management, P59
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   VERBEEK HMW, 2002, CAISE 02 WES 02, P93
   Workflow Management Coalition, 2009, XPDL SUPP RES
   Workflow Management Coalition, 2009, WORKFL REF MOD
NR 61
TC 16
Z9 18
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2010
VL 83
IS 7
SI SI
BP 1148
EP 1164
DI 10.1016/j.jss.2010.01.003
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 609KY
UT WOS:000278656500007
DA 2024-07-18
ER

PT J
AU Lee, CF
   Chen, HL
AF Lee, Chin-Feng
   Chen, Hsing-Ling
TI A novel data hiding scheme based on modulus function
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data hiding; Steganography; Modulus operation
ID DIGITAL IMAGE WATERMARKING; RIGHTFUL OWNERSHIP; LSB SUBSTITUTION;
   GRAYSCALE IMAGES; STEGANALYSIS
AB Four criteria are generally used to evaluate the performance of data hiding scheme: the embedding capacity, the visual quality of the stego-image, the security, and the complexity of the data-embedding algorithm. However, data hiding schemes seldom take all these factors into consideration. This paper proposes a novel data hiding scheme that uses a simple modulus function to address all the performance criteria listed above. According to the input secret keys, the encoder and decoder use the same set-generation functions H(r)() and H(c)() to first generate two sets Kr and Kc. A variant Cartesian product is then created using Kr and Kc. Each cover pixel then forms a pixel group with its neighboring pixels by exploiting an efficient modulus function; the secret data are then embedded or extracted via a mapping process between the variant of the Cartesian product and each pixel group. The proposed scheme offers several advantages, namely (1) the embedding capacity can be scaled, (2) a good visual quality of the stego-image can be achieved, (3) the computational cost of embedding or extracting the secret data is low and requires little memory space, (4) secret keys are used to protect the secret data and (5) the problem of overflow or underflow does not occur, regardless of the nature of the cover pixels.
   We tested the performance of the proposed scheme by comparing it with Mielikainen's and Zhang and Wang's schemes for gray-scale images. The experimental results showed that our proposed scheme outperforms Mielikainen's in three respects, namely scalable embedding capacity, embedding rate, and level of security. Our data hiding scheme also achieved a higher embedding capacity than Zhang and Wang's. The proposed scheme can easily be applied to both gray-scale and color images. Analyses of its performance showed that our proposed scheme outperforms Tsai and Wang's in terms of its time complexity and memory space requirement. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Lee, Chin-Feng] Chaoyang Univ Technol, Dept Informat Management, Wufong Township 41349, Taichung County, Taiwan.
   [Chen, Hsing-Ling] Chaoyang Univ Technol, Grad Inst Informat, Doctoral Program, Wufong Township 41349, Taichung County, Taiwan.
C3 Chaoyang University of Technology; Chaoyang University of Technology
RP Lee, CF (corresponding author), Chaoyang Univ Technol, Dept Informat Management, 168 Jifong E Rd, Wufong Township 41349, Taichung County, Taiwan.
EM lcf@cyut.edu.tw; hsingling@cyut.edu.tw
CR Chan CK, 2004, PATTERN RECOGN, V37, P469, DOI 10.1016/j.patcog.2003.08.007
   Chang CC, 2008, J SYST SOFTWARE, V81, P1118, DOI 10.1016/j.jss.2007.07.036
   Fridrich J, 2003, MULTIMEDIA SYST, V9, P288, DOI 10.1007/s00530-003-0100-9
   Ker AD, 2005, IEEE SIGNAL PROC LET, V12, P441, DOI 10.1109/LSP.2005.847889
   Lee IS, 2009, PATTERN RECOGN, V42, P1604, DOI 10.1016/j.patcog.2009.01.014
   Liao Z., 2007, INT J NETWORK SECURI, V5, P140
   Lin PL, 2001, J SYST SOFTWARE, V55, P261, DOI 10.1016/S0164-1212(00)00075-3
   Mielikainen J, 2006, IEEE SIGNAL PROC LET, V13, P285, DOI 10.1109/LSP.2006.870357
   Qi HY, 2008, SIGNAL PROCESS, V88, P174, DOI 10.1016/j.sigpro.2007.07.020
   Qi XJ, 2007, SIGNAL PROCESS, V87, P1264, DOI 10.1016/j.sigpro.2006.11.002
   Tsai YY, 2007, J SYST SOFTWARE, V80, P429, DOI 10.1016/j.jss.2006.06.016
   Wang CM, 2008, J SYST SOFTWARE, V81, P150, DOI 10.1016/j.jss.2007.01.049
   Wang HQ, 2004, COMMUN ACM, V47, P76, DOI 10.1145/1022594.1022597
   Wang RZ, 2001, PATTERN RECOGN, V34, P671, DOI 10.1016/S0031-3203(00)00015-7
   Wu HC, 2005, IEE P-VIS IMAGE SIGN, V152, P611, DOI 10.1049/ip-vis:20059022
   Wu MN, 2008, J SYST SOFTWARE, V81, P1505, DOI 10.1016/j.jss.2007.09.017
   WU N, 2007, INT J NETWORK SECURI, V14, P1
   Zhang XP, 2006, IEEE COMMUN LETT, V10, P781, DOI 10.1109/LCOMM.2006.060863
NR 18
TC 45
Z9 47
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2010
VL 83
IS 5
BP 832
EP 843
DI 10.1016/j.jss.2009.12.018
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 581PE
UT WOS:000276535500009
DA 2024-07-18
ER

PT J
AU Boone, B
   Van Hoecke, S
   Van Seghbroeck, G
   Joncheere, N
   Jonckers, V
   De Turck, F
   Develder, C
   Dhoedt, B
AF Boone, Bas
   Van Hoecke, Sofie
   Van Seghbroeck, Gregory
   Joncheere, Niels
   Jonckers, Viviane
   De Turck, Filip
   Develder, Chris
   Dhoedt, Bart
TI SALSA: QoS-aware load balancing for autonomous service brokering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Load balancing; Weighted round-robin; Autonomous system; Service
   brokering; Simulated annealing; High throughput
AB The evolution towards "Software as a Service", facilitated by various web service technologies, has led to applications composed of a number of service building blocks. These applications are dynamically composed by web service brokers, but rely critically on proper functioning of each of the composing subparts which is not entirely under control of the applications themselves. The problem at hand for the provider of the service is to guarantee non-functional requirements such as service access and performance to each customer. To this end, the service provider typically divides the load of incoming service requests across the available server infrastructure. In this paper we describe an adaptive load balancing strategy called SALSA (Simulated Annealing Load Spreading Algorithm), which is able to guarantee for different customer priorities, such as default and premium customers, that the services are handled in a given time and this without the need to adapt the servers executing the service logic themselves. It will be shown that by using SALSA, web service brokers are able to autonomously meet SLAs, without a priori over-dimensioning resources. This will be done by taking into account a real time view of the requests by measuring the Poisson arrival rates at that moment and selectively drop some requests from default customers. This way the web servers' load is reduced in order to guarantee the service time for premium customers and provide best effort to default customers. We compared the results of SALSA with weighted round-robin (WRR), nowadays the most used load balancing strategy, and it was shown that the SALSA algorithm requires slightly more processing than WRR but is able to offer guarantees - contrary to WRR by dynamically adapting its load balancing strategy. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Boone, Bas] Univ Ghent, Dept Informat Technol, Fac Sci Appl, INTEC Broadband Commun Networks IBCN,IBBT, Ghent, Belgium.
   [Joncheere, Niels; Jonckers, Viviane] Vrije Univ Brussel, SSEL, Brussels, Belgium.
C3 Ghent University; Vrije Universiteit Brussel
RP Boone, B (corresponding author), Univ Ghent, Dept Informat Technol, Fac Sci Appl, INTEC Broadband Commun Networks IBCN,IBBT, Ghent, Belgium.
EM bas.boone@intec.ugent.be; sofie.vanhoecke@intec.ugent.be;
   gregory.vanseghbroeck@intec.ugent.be
RI Van Seghbroeck, Gregory/JMR-0356-2023; Van Hoecke, Sofie/KAM-3603-2024;
   Dhoedt, Bart AGMH/K-5851-2015; Develder, Chris/S-6359-2019
OI Dhoedt, Bart AGMH/0000-0002-7271-7479; Develder,
   Chris/0000-0003-2707-4176; Van Seghbroeck, Gregory/0000-0001-9459-7407;
   Joncheere, Niels/0000-0003-3356-7938; De Turck,
   Filip/0000-0003-4824-1199; Jonckers, Viviane/0000-0001-7724-3412
FU Research Foundation Flanders (Fonds Wetenschappelijk Onderzoek
   Vlaanderen); IWT (Institute for the Promotion of Innovation through
   Science and Technology in Flanders); BOF (Bijzonder Ginderzoeksfonds) of
   Ghent University
FX Part of this work is supported by the Research Foundation Flanders
   (Fonds Wetenschappelijk Onderzoek Vlaanderen) in the context of the
   DyBroWS project on "Intelligent dynamic brokering of Web services".;
   Sofie Van Hoecke and Gregory Van Seghbroeck would like to thank the IWT
   (Institute for the Promotion of Innovation through Science and
   Technology in Flanders), and Bas Boone would like to thank the BOF
   (Bijzonder Ginderzoeksfonds) of Ghent University, for financial support
   through their Ph.D. grant.
CR *AP, AP AXIS2 JAV
   ARDAGNA D, 2008, LNCS
   Bryhni H, 2000, IEEE NETWORK, V14, P58, DOI 10.1109/65.855480
   Cardellini V, 1999, IEEE INTERNET COMPUT, V3, P28, DOI 10.1109/4236.769420
   CHRISTODOULOPOU.K, 2007, P 11 C OPT NETW DES
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   CORTES A, 1999, P 32 ANN HAW INT C S
   Di Stefano A, 1999, J SYST SOFTWARE, V48, P105, DOI 10.1016/S0164-1212(99)00050-3
   Garofalakis J, 2006, J WEB ENG, V5, P265
   Gross D., 1998, FUNDAMENTALS QUEUEIN
   GROSU D, 2002, P PAR DISTR PROC S
   KANODIA V, 2000, P IEEE IFIP INT WORK
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Levy R, 2003, INT FED INFO PROC, V118, P247, DOI 10.1109/INM.2003.1194184
   LIU Y, 2004, P WWW 04
   NAHRSTEDT K, 1995, IEEE MULTIMEDIA MAGA, V2
   NAMI MR, 2007, P 3 INT C AUT AUT SY
   Roberts JW, 2001, IEEE COMMUN MAG, V39, P94, DOI 10.1109/35.894382
   Salamon P., 2002, SIAM MONOGRAPHS MATH
   Shirazi B.A., 1995, Scheduling and Load Balancing in Parallel and Distributed Systems
   Sterritt R, 2005, ADV ENG INFORM, V19, P181, DOI 10.1016/j.aei.2005.05.012
   TAO Y, 2004, P IEEE INT C E TECHN
   VERHEECKE B, 2007, THESIS VRIJE U BRUSS
   ZHANG J, 2001, P INF INF ICII01 BEI
   ZHANG Y, 2007, P 16 INT C COMP COMM
NR 26
TC 13
Z9 17
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2010
VL 83
IS 3
BP 446
EP 456
DI 10.1016/j.jss.2009.09.033
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 569XA
UT WOS:000275634900008
OA Green Published
DA 2024-07-18
ER

PT J
AU Chen, YS
   Tsai, HL
   Lo, SW
AF Chen, Ya-Shu
   Tsai, Hsin-Liang
   Lo, Shi-Wu
TI Multi-layer bus minimization for SoC
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-layer bus; System-on-chip; HW/SW codesign; Scheduling
AB The deployment of multiple processing elements such as a microprocessor or a Digital Signal Processor in embedded systems often results in significant communication overheads. The challenge lies in resolving the communication cost minimization problem, while simultaneously satisfying the timing constraints of job executions. In this paper, we explore bus-layer minimization problems by first identifying factors that contribute to the NP-hardness of these problems. Existing proposed algorithms and NP-hard problems are then identified and elucidated. A simulated annealing algorithm is proposed and compared with heuristics-based algorithms to provide further insights for system designers. Lastly, a series of extensive simulations is carried out and a case study is presented to show comparisons among different approaches and workloads. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Chen, Ya-Shu] Natl Taiwan Univ Sci & Technol, Dept Elect Engn, Taipei 106, Taiwan.
   [Tsai, Hsin-Liang] Natl Taiwan Univ, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
   [Lo, Shi-Wu] Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Minsyong, Taiwan.
C3 National Taiwan University of Science & Technology; National Taiwan
   University; National Chung Cheng University
RP Chen, YS (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Elect Engn, 43 Keelung Rd,Sec 4, Taipei 106, Taiwan.
EM yschen@mail.ntust.edu.tw; hsinliang@gmail.com; shiwulo@cs.ccu.edu.tw
FU NSC [NSC 97-2221-E-011-044-MY2]
FX This work is supported by a grant from the NSC program NSC
   97-2221-E-011-044-MY2.
CR [Anonymous], 1998, P INT WORKSH HARDW S
   *ARM, 2001, AHB EX AMBA SYST ARM
   *ARM, 1999, AMBA 2 0 SPEC
   *ARM, 2004, MULT AHB OV
   *ARM, 2006, VERS AB926EJ S
   *ATM, 2009, AT91CAP9S500A ATM
   CALDARI M, 2003, P C DES AUT TEST EUR
   CHOU RBB, 1995, P INT S SYST SYNTH
   ELES P, 1998, P C DES AUT TEST EUR
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   GUPTA RK, 1993, IEEE DESIGN TEST COM, V10
   HU TC, 1961, OPERATIONS RES, V9
   KAMBE T, 2001, P AS S PAC DES AUT C
   LEE CLS, 2004, P IEEE INT C SOC
   LIEN CM, 2007, P WORKSH SOFTW TECHN
   MASRUR A, 2007, THESIS TU MUNCHEN
   McCreary C., 1996, THESIS AUBURN U US
   Michalewicz Z., 2000, How to Solve It: Modern Heuristics
   MOK AK, 1984, P REAL TIM SYST S
   OGAWA O, 2003, P C DES AUT TEST EUR
   SECELEANU T, 2005, P IEEE INT C SOC
   SHELIGA M, 1995, P GREAT LAK S VLSI
   SRINIVASAN S, 2005, P IEEE INT C SOC
   VANMEEUWEN T, 2001, P INT S SYST SYNTH
   YANG Q, 1988, IEEE T COMPUTERS, V37
   YEN TY, 1998, IEEE T PARALLEL DIST, V9
NR 26
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2010
VL 83
IS 1
BP 121
EP 132
DI 10.1016/j.jss.2009.07.041
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 529OX
UT WOS:000272528200013
DA 2024-07-18
ER

PT J
AU Chou, SC
   Huang, CH
AF Chou, Shih-Chien
   Huang, Chun-Hao
TI An extended XACML model to ensure secure information access for web
   services
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web service; Information flow control; Security; Prevent information
   leakage
ID OBJECT-ORIENTED SYSTEMS; FLOW CONTROL
AB More and more software systems based on web services have been developed. Web service development techniques are thus becoming crucial. To ensure secure information access, access control should be taken into consideration when developing web services. This paper proposes an extended XACML model named EXACML to ensure secure information access for web services. It is based on the technique of information flow control. Primary features offered by the model are: (1) both the information of requesters and that of web services are protected, (2) the access control of web services is more precise than just "allow or reject" policy in existing models, and (3) the model will deny non-secure information access during the execution of a web service even when a requester is allowed to invoke the web service. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Chou, Shih-Chien; Huang, Chun-Hao] Natl Dong Hwa Univ, Dept Comp Sci & Informat Math, Hsinchu, Taiwan.
C3 National Dong Hwa University
RP Chou, SC (corresponding author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Math, Hsinchu, Taiwan.
EM scchou@mail.ndhu.edu.tw
CR [Anonymous], WEB SERV ARCH
   [Anonymous], ACM T INF SYST SECUR, DOI DOI 10.1145/605434.605435
   Ardagna CA, 2006, ELECTRON NOTES THEOR, V142, P47, DOI 10.1016/j.entcs.2004.09.044
   Bertino E., 2001, ACM Transactions on Information and Systems Security, V4, P191, DOI 10.1145/501978.501979
   Bertino E, 2006, INT J WEB SERV RES, V3, P27, DOI 10.4018/jwsr.2006070102
   Bhatti R., 2005, ACM Transactions on Information and Systems Security, V8, P187, DOI 10.1145/1065545.1065547
   Bhatti R, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P184, DOI 10.1109/ICWS.2004.1314738
   Chou SC, 2006, J SYST SOFTWARE, V79, P507, DOI 10.1016/j.jss.2005.04.008
   Chou SC, 2004, J SYST SOFTWARE, V71, P143, DOI 10.1016/S0164-1212(02)00158-9
   Koshutanski H, 2005, LECT NOTES COMPUT SC, V3477, P256
   KOSHUTANSKI H, 2003, ACM WORKSH XML SEC, P15
   Maamir A, 2003, INT J SOFTW ENG KNOW, V13, P313, DOI 10.1142/S0218194003001317
   Mecella M., 2006, INT WORLD WID WEB C, P257
   Myers AC, 2000, ACM T SOFTW ENG METH, V9, P410, DOI 10.1145/363516.363526
   Myers AC, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P186, DOI 10.1109/SECPRI.1998.674834
   *OASIS, 2003, 18 OASIS
   Paurobally S, 2005, ENG APPL ARTIF INTEL, V18, P237, DOI 10.1016/j.engappai.2004.12.005
   Samarati P, 1997, IEEE T KNOWL DATA EN, V9, P524, DOI 10.1109/69.617048
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SEAMANS KE, 2001, NETW DISTR SYST SEC
   Shen HB, 2006, SEVENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES, PROCEEDINGS, P74
   SIRER EG, 2002, P ACM S ACC CONTR MO, P23
   SKOGSRUD H, 2004, INT WORLD WID WEB C, P53
   Srivatsa M, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P1
   Wonohoesodo R, 2004, P IEEE I C SERV COMP, P49
NR 25
TC 5
Z9 5
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2010
VL 83
IS 1
SI SI
BP 77
EP 84
DI 10.1016/j.jss.2009.06.045
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 529OX
UT WOS:000272528200009
DA 2024-07-18
ER

PT J
AU Kraemer, FA
   Slåtten, V
   Herrmann, P
AF Kraemer, Frank Alexander
   Slatten, Vidar
   Herrmann, Peter
TI Tool support for the rapid composition, analysis and implementation of
   reactive services
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service engineering; Service composition; UML; Model-driven development;
   Temporal logic; Model checking
ID MODEL CHECKING
AB We present the integrated set of tools Arctis for the rapid development of reactive services. In our method, services are composed of collaborative building blocks that encapsulate behavioral patterns expressed as UML 2.0 collaborations and activities. Due to our underlying semantics in temporal logic, building blocks as well as their compositions can be transformed into formulas and model checked incrementally in order to guarantee that important system properties are kept. The process of model checking is fully automated. Error traces are presented to the users as easily understandable animations, so that no expertise in temporal logic is needed. In addition, the results of model checking are analyzed, so that in some cases automated diagnoses and fixes can be provided as well. The formal semantics also enables the correct, automatic synthesis of the activities to state machines which form the input of our code generators. Thus, the collaborative models can be fully automatically transformed into executable Java code. We present the development of a mobile treasure hunt system to exemplify the method and the tools. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Kraemer, Frank Alexander; Slatten, Vidar; Herrmann, Peter] Norwegian Univ Sci & Technol NTNU, Dept Telemat, N-7034 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Kraemer, FA (corresponding author), Norwegian Univ Sci & Technol NTNU, Dept Telemat, OS Bragstads Plass 2A, N-7034 Trondheim, Norway.
EM kraemer@item.ntnu.no; vidarsl@item.ntnu.no; herrmann@item.ntnu.no
OI Herrmann, Peter/0000-0003-3830-466X
FU Research Council of Norway [180122]
FX The research on which this article reports has partly been funded by the
   Research Council of Norway through the project ISIS (Infrastructure for
   Integrated Services, #180122).
CR ABADI M, 1991, THEOR COMPUT SCI, V82, P253, DOI 10.1016/0304-3975(91)90224-P
   AMNELL T, 2001, LNCS, V2067, P99
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   BRAEK R, 1993, BCS PRACTITIONER SER
   BRAEK R, 1981, 4 INT C SOFTW ENG TE, V198, P111
   BRAEK R, 2002, SERVICEFRAME WHITEPA
   BURMESTER S, 2004, P INT WORKSH SPEC VA, P1
   Carrez C, 2008, LECT NOTES COMPUT SC, V5053, P16
   Dong Y., 2003, P 10 IEEE INT C WORK, P47
   Dorsch J, 2005, LECT NOTES COMPUT SC, V3319, P50
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   FLENDER C, 2006, P 13 WORKSH ALG TOOL, P47
   Foster H., 2007, Test and Analysis of Web Services, P87, DOI DOI 10.1007/978-3-540-72912-9_4
   Goldsby H, 2006, LECT NOTES COMPUT SC, V4199, P707
   Guelfi N, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P283, DOI 10.1109/APSEC.2005.7
   HAUGEN O, 2000, P ERICSS C SOFTW ENG
   HAUGSRUD S, 2008, THESIS NORWEGIAN U S
   HEITMANN N, 2008, THESIS NORWEGIAN U S
   Herrmann P, 2000, COMPUT NETW, V34, P317, DOI 10.1016/S1389-1286(00)00089-X
   Hooman J, 2008, SOFTW SYST MODEL, V7, P131, DOI 10.1007/s10270-006-0043-7
   ITU-T, 2002, Z100 ITUT, pZ100
   Kathayat SB, 2009, 2009 INTERNATIONAL CONFERENCE ON MOBILE, HYBRID, AND ON-LINE LEARNING (ELML), P53, DOI 10.1109/eLmL.2009.16
   KNAPP A, 2002, FM TOOLS 2002, P59
   Kraemer F.A., 2007, NETW EL COMM RES C 2, P194
   Kraemer FA, 2008, THESIS NORWEGIAN U S
   KRAEMER FA, 2007, P 4 INT WORKSH RAP I
   KRAEMER FA, 2003, THESIS U STUTTGART
   KRAEMER FA, 2007, P 6 INT WORKSH GRAPH, V7
   Kraemer FA, 2007, LECT NOTES COMPUT SC, V4745, P166
   Kraemer FA, 2006, 2006 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY, WORKSHOPS PROCEEDINGS, P129, DOI 10.1109/WI-IATW.2006.121
   Kraemer FA, 2006, LECT NOTES COMPUT SC, V4276, P1613
   Lamport L., 2002, SPECIFYING SYSTEMS
   Lilius J., 1999, 14th IEEE International Conference on Automated Software Engineering, P255, DOI 10.1109/ASE.1999.802301
   Magee Jeff., 2006, CONCURRENCY STATE MO
   MERHA BT, 2008, THESIS NORWEGIAN U S
   MIKKONEN T, 1999, WICSA1
   Ober I, 2004, LECT NOTES COMPUT SC, V2989, P127
   *OBJ MAN GROUP, 2007, FORMAL20070203 OBJ M
   Object Management Group, 2003, OMG20030601
   Rushby J, 2000, HIGH ASS SYST ENG S, P95
   Samset H, 2008, STUD COMPUT INTELL, V150, P173, DOI 10.1007/978-3-540-70561-1_13
   Sanders RT, 2005, LECT NOTES COMPUT SC, V3713, P460, DOI 10.1007/11557432_35
   SANGVANPHANT N, 2008, THESIS NORWEGIAN U S
   SLATTEN V, 2008, THESIS NORWEGIAN U S
   STOYLE AK, 2004, THESIS NORWEGIAN U S
   van der Aalst: W.M.P., 1999, Systems Analysis Modeling Simulation, Volume, V35, Pages, P345
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Victor B., 1994, CAV 94, P428, DOI DOI 10.1007/3-540-58179-0_73
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
NR 51
TC 39
Z9 40
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2009
VL 82
IS 12
BP 2068
EP 2080
DI 10.1016/j.jss.2009.06.057
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 523GR
UT WOS:000272061000012
DA 2024-07-18
ER

PT J
AU Sun, WC
   Chen, YM
AF Sun, Wen-Chen
   Chen, Yi-Ming
TI On the design of an global intrusion tolerance network architecture
   against the internet catastrophes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Intrusion tolerance; Virtual machine; Fatal attack; Worm; Survivability
AB Today's security communities face a daunting challenges - how to protect the Internet from new, unknown zero day worms. Due to their innovation, these worms are hard to be stopped by traditional security mechanisms. Therefore, instead of trying to prevent the intrusion of every such a thread, this paper proposes a new system architecture, named Virtual Machine based Intrusion Tolerance Network (VMITN), which will tolerate the new worm attack until administrators remove the Vulnerability lever-aged by the worm. The VMITN adopts a rough-set based recognition mechanism to detect zero day worms and a virtual machine based overlay network to mitigate attacks. We have implemented a concept proof prototype system and use NS-2 simulations to study the performance of the VMITN in a large scale network. The behavior of the famous Witty worm is simulated within the NS-2 module and the simulations result showed that our VMITN architecture can provide the reliability and survivability under severe worm attacks. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Sun, Wen-Chen; Chen, Yi-Ming] Natl Cent Univ, Dept Informat Management, Jhongli 320, Taoyuan County, Taiwan.
C3 National Central University
RP Sun, WC (corresponding author), Natl Cent Univ, Dept Informat Management, 300 Jhongda Rd, Jhongli 320, Taoyuan County, Taiwan.
EM nivek@mgt.ncu.edu.tw
CR Ahamed S.I, 2006, ENTERPRISE INFORM SY, P215
   Armbruster B, 2007, EUR J OPER RES, V176, P1283, DOI 10.1016/j.ejor.2005.09.031
   ARSENAULT D, 2007, P 2 INT C AV REL SEC
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baldoni R., 2003, Journal of Discrete Algorithms, V1, P185, DOI 10.1016/S1570-8667(03)00025-X
   BRIESEMEISTER L, 2006, P MALW 06
   Correia M, 2007, J SYST SOFTWARE, V80, P178, DOI 10.1016/j.jss.2006.03.034
   Crandall J.R., 2005, P ACM CCS
   Deswarte Y, 2006, P IEEE, V94, P432, DOI 10.1109/JPROC.2005.862320
   Djemaiel Y, 2008, INT J COMMUN SYST, V21, P211, DOI 10.1002/dac.895
   DUNLAP G, 2002, P 2002 S OSDI
   FRAGA J.S., 1985, Proceedings of the 3rd International Conference on Computer Security, P203
   Goldberg DavidE., 2007, Genetic Algorithms in Search, Optimization Machine Learning
   *GT ITM, 2003, MOD TOP LARG INT
   Haridasan M, 2008, COMPUT COMMUN, V31, P563, DOI 10.1016/j.comcom.2007.08.028
   IM EG, 2006, P 2006 IEEE ISI SAN
   JIANG X, 2004, P 13 USENIX SEC S SE
   JOHANSEN H, 2006, P EUR
   Junqueira F., 2005, P USENIX ANN TECHN C
   JUST J, 2002, P 5 INT S REC ADV IN
   KANG SM, 2006, P INT C COMM ICC 06
   Kim Y, 2006, IEEE T DEPEND SECURE, V3, P141, DOI 10.1109/TDSC.2006.25
   KRUEGEL C, 2005, P REC ADV INTR DET R
   Li H.C., 2006, P 7 S OP SYST DES IM
   Liang Z., 2005, P ACM CCS
   Malkhi D, 2001, DISCEX'01: DARPA INFORMATION SURVIVABILITY CONFERENCE & EXPOSITION II, VOL II, PROCEEDINGS, P126, DOI 10.1109/DISCEX.2001.932165
   *MIR NETW, 2003, COMB RAP PROP THREAT
   MOHAMMED H, 2007, J SYST SOFTWARE, V80, P700
   NEWSOME J, 2005, P SEC PRIV S
   Park K., 2001, PROC ACM C APPL TECH, P15
   Shannon Colleen., 2004, SPREAD WITTY WORM
   Shyng JY, 2007, EXPERT SYST APPL, V32, P56, DOI 10.1016/j.eswa.2005.11.002
   STROUD R, 2004, P DEP SYST NETW C DS
   SUN WC, 2006, INT COMP S ICS 2006
   SYSWERDA G, 1989, P 3 INT C GEN ALG G
   Tseng CT, 2008, EUR J OPER RES, V191, P360, DOI 10.1016/j.ejor.2007.08.030
   VANOORSCHOT PC, 2006, INT J INF SECUR, V5, P186, DOI DOI 10.1007/S10207-006-0081-8
   Wang YX, 2006, J SYST SOFTWARE, V79, P1, DOI 10.1016/j.jss.2004.08.017
   Wehner S, 2007, J COMPUT SECUR, V15, P303, DOI 10.3233/JCS-2007-15301
   Wuu LC, 2007, J SYST SOFTWARE, V80, P1699, DOI 10.1016/j.jss.2006.12.546
   Znati T, 2006, PROC ANNU SIMUL SYMP, P2, DOI 10.1109/ANSS.2006.18
   Zou C.C., 2003, Proceedings of the 10th ACM Conference on Computer and Communications Security, P190, DOI DOI 10.1145/948109.948136
   Zulkernine M, 2005, J SYST SOFTWARE, V74, P15, DOI 10.1016/j.jss.2003.05.006
   2006, NS 2 SOFTWARE PACKAG
NR 44
TC 0
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2009
VL 82
IS 8
SI SI
BP 1313
EP 1325
DI 10.1016/j.jss.2009.02.030
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 489NA
UT WOS:000269425600009
DA 2024-07-18
ER

PT J
AU DeBardeleben, N
   Sass, R
   Stanzione, D
   Ligon, WB
AF DeBardeleben, Nathan
   Sass, Ron
   Stanzione, Daniel, Jr.
   Ligon, Walter B., III
TI Building problem-solving environments with the Arches framework
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Problem-solving environments; High-performance computing clusters;
   Reconfigurable computing
AB The computational problems that scientists face are rapidly escalating in size and scope. Moreover, the computer systems used to solve these problems are becoming significantly more complex than the familiar, well-understood sequential model on their desktops. While it is possible to re-train scientists to use emerging high-performance computing (HPC) models, it is much more effective to provide them with a higher-level programming environment that has been specialized to their particular domain. By fostering interaction between HPC specialists and the domain scientists, problem-solving environments (PSEs) provide a collaborative environment. A PSE environment allows scientists to focus on expressing their computational problem while the PSE and associated tools Support mapping that domain-specific problem to a high-performance computing system.
   This article describes Arches, an object-oriented framework for building domain-specific PSEs. The framework was designed to Support a wide range of problem domains and to be extensible to support very different high-performance computing targets. To demonstrate this flexibility, two PSEs have been developed from the Arches framework to solve problem in two different domains and target very different computing platforms. The Coven PSE supports parallel applications that require large-scale parallelism found in cost-effective Beowulf clusters. In contrast, RCADE targets FPGA-based reconfigurable computing and was originally designed to aid NASA Earth scientists studying satellite instrument data. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Sass, Ron] Univ N Carolina, Charlotte, NC 28223 USA.
   [DeBardeleben, Nathan] Los Alamos Natl Lab, LA UR 09 01325, Los Alamos, NM 87544 USA.
   [Stanzione, Daniel, Jr.] Arizona State Univ, Fulton Sch Deans Off, Tempe, AZ 85287 USA.
   [Ligon, Walter B., III] Clemson Univ, Dept Elect & Comp Engn, Clemson, SC 29634 USA.
C3 University of North Carolina; University of North Carolina Charlotte;
   United States Department of Energy (DOE); Los Alamos National
   Laboratory; Arizona State University; Arizona State University-Tempe;
   Clemson University
RP Sass, R (corresponding author), Univ N Carolina, 235F Woodward Hall, Charlotte, NC 28223 USA.
EM ndebard@lanl.gov; rsass@uncc.edu; dstanzi@asu.edu; walt@ces.clemson.edu
CR Allen G., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P57, DOI 10.1109/HPDC.1999.805282
   *ANN MICR, 2008, COR
   Armstrong R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P115, DOI 10.1109/HPDC.1999.805289
   Bellows P, 1998, IEEE SYMPOSIUM ON FPGAS FOR CUSTOM COMPUTING MACHINES, PROCEEDINGS, P175, DOI 10.1109/FPGA.1998.707895
   de St Germain J.D., 2002, P 4 INT S HIGH PERF, P190
   DeBardeleben NA, 2002, 11TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P291, DOI 10.1109/HPDC.2002.1029929
   DEBARDELEBEN NA, 2004, THESIS CLEMSON U
   DEBARDELEBEN NA, 2002, P 2002 IEEE AER C
   Fayad M, 2002, SOFTWARE PRACT EXPER, V32, P735, DOI 10.1002/spe.455
   Fayad ME, 2000, ACM COMPUT SURV, V32, P1, DOI 10.1145/351936.351937
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   FERRARO R, 2003, INT GEOSC REM SENS S
   Germain JDDS, 2000, NINTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P33, DOI 10.1109/HPDC.2000.868632
   Houstis E, 1997, IEEE COMPUT SCI ENG, V4, P18, DOI 10.1109/MCSE.1997.615427
   Johnson C, 2002, CONCURR COMP-PRACT E, V14, P1337, DOI 10.1002/cpe.693
   MELERO K, 2001, OPEN SOURCE SOFTWARE
   *MESS PASS INT FOR, 1994, CS93213 MESS PASS IN
   *PALL GMBH, 2004, VAMPIR VIS AN MPI RE
   RASURE J, 1992, KHOROS APPL DEV ENV
   SHENDE S, 2001, P 2001 JOINT ACM ISC, P87
   Stanzione DC, 2000, LECT NOTES COMPUT SC, V1800, P314
   *STARBR SYST, 2008, VIV
   *XIL INC, 2004, FORG
NR 23
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2009
VL 82
IS 7
BP 1137
EP 1151
DI 10.1016/j.jss.2009.02.027
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 477KU
UT WOS:000268518800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yoo, M
AF Yoo, Myungryun
TI Real-time task scheduling by multiobjective genetic algorithm
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Soft real-time task; Multiobjective genetic algorithm
ID MACHINE
AB Real-time tasks are characterized by computational activities with timing constraints and classified into two categories: a hard real-time task and a soft real-time task. In hard real-time tasks, tardiness can be catastrophic. The goal of hard real-time tasks scheduling algorithms is to meet all tasks' deadlines, in other words, to keep the feasibility of scheduling through admission control. However, in the case of soft real-time tasks, slight violation of deadlines is not so critical.
   In this paper, we propose a new scheduling algorithm for soft real-time tasks using multiobjective genetic algorithm (moGA) on multiprocessors system. It is assumed that tasks have precedence relations among them and are executed on homogeneous multiprocessor environment.
   The objective of the proposed scheduling algorithm is to minimize the total tardiness and total number of processors used. For these objectives, this paper combines adaptive weight approach (AWA) that utilizes some useful information from the current population to readjust weights for obtaining a search pressure toward a positive ideal point. The effectiveness of the proposed algorithm is shown through simulation studies. (C) 2008 Elsevier Inc. All rights reserved.
C1 Musashi Inst Technol, Fac Knowledge Engn, Setagaya Ku, Tokyo 1588557, Japan.
C3 Tokyo City University
RP Yoo, M (corresponding author), Musashi Inst Technol, Fac Knowledge Engn, Setagaya Ku, 1-28-1 Tamazutsumi, Tokyo 1588557, Japan.
EM yoo@cs.musashi-tech.ac.jp
CR AlSharaeh S, 1996, PROCEEDINGS OF THE TWENTY-EIGHTH SOUTHEASTERN SYMPOSIUM ON SYSTEM THEORY, P467, DOI 10.1109/SSST.1996.493549
   Bernat G, 2001, IEEE T COMPUT, V50, P308, DOI 10.1109/12.919277
   BUDIN L, 1999, P IND EL, P84
   Cheng BC, 1997, AUTOMATICA, V33, P921, DOI 10.1016/S0005-1098(96)00245-2
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Dhodhi MK, 2002, J PARALLEL DISTR COM, V62, P1338, DOI 10.1006/jpdc.2002.1850
   DU JZ, 1990, MATH OPER RES, V15, P483, DOI 10.1287/moor.15.3.483
   Gen M., 1997, GENETIC ALGORITHM EN
   Gen M., 2000, Genetic Algorithms and Engineering Optimization
   Jackson LE, 2003, IEEE T PARALL DISTR, V14, P795, DOI 10.1109/TPDS.2003.1225058
   KIM MH, 1997, P MULT COMP SYST, P484
   KRISHNA CM, 1997, REAL TIME SYSTEM
   Lenstra JK, 1977, STUDIES INTEGER PROG, P343, DOI [DOI 10.1016/S0167-5060(08)70743-X, 10.1016/S0167-5060, DOI 10.1016/S0167-5060]
   LIN M, 1999, P 6 INT C REAL TIM C, P382
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   López JM, 2004, IEEE T PARALL DISTR, V15, P642, DOI 10.1109/TPDS.2004.25
   Mitra H., 1993, Proceeding of the Twenty-Sixth Hawaii International Conference on System Sciences (Cat. No.93TH0501-7), P556, DOI 10.1109/HICSS.1993.284070
   Monnier Y, 1998, EUROMICRO CONF PROC, P708, DOI 10.1109/EURMIC.1998.708092
   Oh J, 2004, J SYST SOFTWARE, V71, P245, DOI 10.1016/S0164-1212(02)00147-4
   Page A. J., 2005, P 19 IEEE INT PAR DI
   SANCHO NGF, 1986, ENG OPTIMIZ, V10, P71
   Theys MD, 2001, W S PA DI C, P135
   Yalaoui F, 2002, INT J PROD ECON, V76, P265, DOI 10.1016/S0925-5273(01)00175-X
   YOO MR, 2002, SCHEDULING ALGORITHM
   Yoo M, 2007, COMPUT OPER RES, V34, P3084, DOI 10.1016/j.cor.2005.11.016
   ZHU K, 2000, P 20 ANN JOINT C IEE, P1493
NR 26
TC 29
Z9 31
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2009
VL 82
IS 4
SI SI
BP 619
EP 628
DI 10.1016/j.jss.2008.08.039
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 434ZU
UT WOS:000265313700009
DA 2024-07-18
ER

PT J
AU Gokhale, SS
AF Gokhale, Swapna S.
TI Model-based performance analysis using block coverage measurements
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model-based performance analysis; Profile data; Test coverage
ID SOFTWARE
AB The primary advantage of model-based performance analysis is its ability to facilitate sensitivity and predictive analysis, in addition to providing an estimate of the application performance. To conduct model-based analysis, it is necessary to build a performance model of an application which represents the application structure in terms of the interactions among its components, using an appropriate modeling paradigm. While several research efforts have been devoted to the development of the theoretical aspects of model-based analysis, its practical applicability has been limited despite the advantages it offers. This limited practical applicability is due to the lack of techniques available to estimate the parameters of the performance model of the application. Since the model parameters cannot be estimated in a realistic manner, the results obtained from model-based analysis may not be accurate.
   In this paper, we present an empirical approach in which profile data in the form of block coverage measurements is used to parameterize the performance model of an application. We illustrate the approach using a network routing simulator called Maryland routing simulator (MaRS). Validation of the performance estimate of MaRS obtained from the performance model parameterized using our approach demonstrates the viability of our approach. We then illustrate how the model could be used for predictive performance analysis using two scenarios. By the virtue of using code coverage measurements to parameterize a performance model, we integrate two mature, yet independent research areas, namely, software testing and model-based performance analysis.. (c) 2008 Elsevier Inc. All rights reserved.
C1 Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
C3 University of Connecticut
RP Gokhale, SS (corresponding author), Univ Connecticut, Dept Comp Sci & Engn, 371 Fairfield Rd,U-2155, Storrs, CT 06269 USA.
EM ssg@engr.uconn.edu
FU CAREER award from the US National Science Foundation [CNS-0643971]
FX This research is supported in part by a CAREER award from the US
   National Science Foundation (#CNS-0643971).
CR Agrawal H, 1998, COMPUTER, V31, P64, DOI 10.1109/2.689678
   ALAETTINOGLU C, 1992, UMIACSTR92103CSTR296
   ALATTINOGLU C, 1994, J INTERNETWORKING RE, V5, P17
   Amdahl G., 1967, Proceedings of AFIPS Spring Join Computer Conference, P483, DOI DOI 10.1145/1465482.1465560
   [Anonymous], P 21 ACM SIGPLAN SIG
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Arora S, 2005, P REL MAINT S, P621, DOI 10.1109/RAMS.2005.1408433
   FALL K, 2005, NS MANUAL TECHNICAL
   FIONDELLA L, 2007, P IASTED INT C SOFTW
   Gokhale SS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P64, DOI 10.1109/ISSRE.2002.1173214
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Horgan J., 1991, INT S SOFTWARE TESTI, P87, DOI 10.1145/120807.120815
   Kemeny John G., 1976, FINITE MARKOV CHAINS
   LYU MR, 1994, IEEE T RELIAB, V43, P527, DOI 10.1109/24.370230
   MUSA JD, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.60588
   Peterson L.L., 2000, COMPUTER NETWORKS SY, V2nd
   SHARMA V, 2005, EVALUATING PERFORMAN, P66
   Sharma VibhuSaujanya., 2005, Proceedings of the 5th international workshop on Software and performance, WOSP '05, P217
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Voas J, 1999, IEEE SOFTWARE, V16, P48, DOI 10.1109/52.776948
   *XSUDS TEAM T, 1998, XSUDS SOFTW UND SYST
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
NR 23
TC 3
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2009
VL 82
IS 1
SI SI
BP 121
EP 130
DI 10.1016/j.jss.2008.06.051
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 391JZ
UT WOS:000262230900010
DA 2024-07-18
ER

PT J
AU Santos, R
   Lipari, G
   Santos, J
AF Santos, Rodrigo
   Lipari, Giuseppe
   Santos, Jorge
TI Improving the schedulability of soft real-time open dynamic systems: The
   inheritor is actually a debtor
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE open systems; soft real-time; scheduling
AB This paper presents the Clearing Fund Protocol, a three layered protocol designed to schedule soft real-time sets of precedence related tasks with shared resources. These sets are processed in an open dynamic environment. Open because new applications may enter the system at any time and dynamic because the schedulability is tested on-line as tasks request admission. Top-down, the three layers are the Clearing Fund, the Bandwidth Inheritance and two versions of the Constant Bandwidth Server algorithms. Bandwidth Inheritance applies a priority inheritance mechanism to the Constant Bandwidth Server. However, a serious drawback is its unfairness. In fact, a task executing in a server can potentially steal the bandwidth of another server without paying any penalty. The main idea of the Clearing Fund Algorithm is to keep track of processor-time debts contracted by lower priority tasks that block higher priority ones and are executed in the higher priority servers by having inherited the higher priority. The proposed algorithm reduces the undesirable effects of those priority inversions because the blocked task can finish its execution in its own server or in the server of the blocking task, whichever has the nearest deadline. If demanded, debts are paid back in that way. Inheritors are therefore debtors. Moreover, at certain instants in time, all existing debts may be waived and the servers are reset making a clear restart of the system. The Clearing Fund Protocol showed definite better performances when evaluated by simulations against Bandwidth Inheritance, the protocol it tries to improve. (c) 2007 Elsevier Inc. All rights reserved.
C1 [Santos, Rodrigo; Santos, Jorge] Univ Nacl Sur, Dep Ing Elect & Comp, RA-8000 Bahia Blanca, Buenos Aires, Argentina.
   [Lipari, Giuseppe] Scuola Super Sant Anna, RETIS Lab, I-56127 Pisa, Italy.
C3 National University of the South; Scuola Superiore Sant'Anna
RP Santos, R (corresponding author), Univ Nacl Sur, Dep Ing Elect & Comp, Avda Alem 1253, RA-8000 Bahia Blanca, Buenos Aires, Argentina.
EM ierms@criba.edu.ar; lipari@sssup.it; iesantos@criba.edu.ar
RI Santos, Rodrigo Rodrigues da Silva/HJH-6210-2023; Lipari,
   Giuseppe/E-7761-2010; Santos, Rodrigo/J-4255-2019
OI Santos, Rodrigo/0000-0003-0382-477X; Lipari,
   Giuseppe/0000-0002-7544-5309
CR Abeni L, 1998, REAL TIM SYST SYMP P, P4, DOI 10.1109/REAL.1998.739726
   BAKER TP, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P191, DOI 10.1109/REAL.1990.128747
   Caccamo M, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P161, DOI 10.1109/REAL.2001.990607
   Deng Z, 1997, REAL TIM SYST SYMP P, P308, DOI 10.1109/REAL.1997.641292
   Lipari G, 2004, IEEE T COMPUT, V53, P1591, DOI 10.1109/TC.2004.120
   Lipari G, 2000, J SYST ARCHITECT, V46, P327, DOI 10.1016/S1383-7621(99)00009-0
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Marzario L, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/RTTAS.2004.1317266
   Palencia J. C., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P328, DOI 10.1109/REAL.1999.818860
   RAJKUMAR R, P REAL TIM LIN WORKS
   Ramamritham K., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P108, DOI 10.1109/ICDCS.1990.89256
   RAMOSTHUEL S, 1994, P 15 IEEE REAL TIM S, P22
   Saewong S., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P90, DOI 10.1109/REAL.1999.818831
   SANTOS R, 2004, 10 INT C REAL TIM CO
   SANTOS R, 2003, P WIP 15 EUR C REAL
   Santos RM, 2004, J SYST SOFTWARE, V69, P115, DOI 10.1016/S0164-1212(03)00079-7
   SHAD L, 1990, IEEE T COMPUT, V39, P1175
   Sprunt B., 1989, Real-Time Systems, V1, P27, DOI 10.1007/BF02341920
   Sprunt B., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P251, DOI 10.1109/REAL.1988.51120
   STROSNIDER JK, 1995, IEEE T COMPUT, V44, P73, DOI 10.1109/12.368008
NR 20
TC 8
Z9 9
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2008
VL 81
IS 7
BP 1093
EP 1104
DI 10.1016/j.jss.2007.07.004
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 318LW
UT WOS:000257094200003
OA Green Published
DA 2024-07-18
ER

PT J
AU Lucrédio, D
   Brito, KD
   Alvaro, A
   Garcia, VC
   de Almeida, ES
   Fortes, RPM
   Meira, SL
AF Lucredio, Daniel
   Brito, Kellyton dos Santos
   Alvaro, Alexandre
   Garcia, Vinicius Cardoso
   de Almeida, Eduardo Santana
   de Mattos Fortes, Renata Pontin
   Meira, Silvio Lemos
TI Software reuse:: The Brazilian industry scenario
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE survey; software reuse; reuse success factors; survey; best practices
ID SUCCESS
AB This paper aims at identifying some of the key factors in adopting an organization-wide software reuse program. The factors are derived from practical experience reported by industry professionals, through a survey involving 57 Brazilian small, medium and large software organizations. Some of them produce software with commonality between applications, and have mature processes, while others successfully achieved reuse through isolated, ad hoe efforts. The paper compiles the answers from the survey participants, showing which factors were more associated with reuse success. Based on this relationship, a guide is presented, pointing out which factors should be more strongly considered by small, medium and large organizations attempting to establish a reuse program. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Lucredio, Daniel; de Mattos Fortes, Renata Pontin] Univ Sao Paulo, ICMC Inst Math & Comp Sci, BR-13560970 Sao Carlos, SP, Brazil.
   [Brito, Kellyton dos Santos; Alvaro, Alexandre; Garcia, Vinicius Cardoso; de Almeida, Eduardo Santana; Meira, Silvio Lemos] Univ Fed Pernambuco, Informat Ctr, BR-50740540 Recife, PE, Brazil.
   [Brito, Kellyton dos Santos; Alvaro, Alexandre; Garcia, Vinicius Cardoso; de Almeida, Eduardo Santana; Meira, Silvio Lemos] Recife Ctr Adv Studies & Syst CESAR, BR-50030390 Recife, PE, Brazil.
C3 Universidade de Sao Paulo; Universidade Federal de Pernambuco; Centro de
   Estudos e Sistemas Avancados do Recife (CESAR)
RP Lucrédio, D (corresponding author), Univ Sao Paulo, ICMC Inst Math & Comp Sci, Av Trabalhador Sao Carlense 400, BR-13560970 Sao Carlos, SP, Brazil.
EM lucredio@icmc.usp.br; kellyton.brito@cesar.org.br;
   alexandre.alvaro@cesar.org.br; vinicius.garcia@cesar.org.br;
   eduardo.almeida@-cesar.org.br; renata@icmc.usp.br; silvio@cesar.org.br
RI FORTES, RENATA PONTIN DE MATTOS/A-3211-2010; Lucredio,
   Daniel/I-1793-2012; Meira, Silvio/AAT-9381-2020; de Almeida,
   Eduardo/JJC-2493-2023; Garcia, Vinicius Cardoso/B-1327-2017; Lucredio,
   Daniel/AAN-3070-2021; Brito, Kellyton/HPD-5273-2023
OI FORTES, RENATA PONTIN DE MATTOS/0000-0001-9994-8923; Lucredio,
   Daniel/0000-0002-1360-4036; Garcia, Vinicius
   Cardoso/0000-0001-6904-7470; Lucredio, Daniel/0000-0002-1360-4036;
   Brito, Kellyton/0000-0002-6883-8657
CR Aggarwal KK, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P48, DOI 10.1109/SERA.2005.60
   ALMEIDA ESD, 2005, IEEE INT C INF REUS
   ALVARO A, 2005, IEEE EUR C CBSE TRAC
   ANASTASOPOULES M, 2001, SSR 01, P109
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Buregio V.A.D.A., 2007, 31 IEEE ANN INT COMP
   Clements P., 2002, Software product lines
   ENDRES A, 1993, IEEE SOFTWARE, V10, P58, DOI 10.1109/52.232401
   Fichman RG, 2001, J SYST SOFTWARE, V57, P45, DOI 10.1016/S0164-1212(00)00116-3
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   FRAKES WB, 1994, IEEE SOFTWARE, V11, P15
   GRISS ML, 1995, IEEE SOFTWARE, V12, P105, DOI 10.1109/52.363160
   GUO J, 2000, 7 IEEE INT C WORKSH, P92
   John I, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2006.1691572
   JOOS R, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.311058
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Krueger CW, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P95, DOI 10.1109/SPLINE.2006.1691581
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lucrédio D, 2004, EUROMICRO CONF PROC, P152, DOI 10.1109/EURMIC.2004.1333367
   Lynex A, 1998, ANN SOFTW ENG, V5, P105, DOI 10.1023/A:1018928608749
   MASCENA JCC, 2005, IEEE INT C INF REUS
   MCILROY MD, 1968, NATO SOFTW ENG C NAT, P138
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Mili R, 1997, IEEE T SOFTWARE ENG, V23, P445, DOI 10.1109/32.605762
   Moore MM, 2001, IEEE SOFTWARE, V18, P86, DOI 10.1109/MS.2001.951501
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   PAIVA DMB, 2005, 17 INT C SOFTW ENG K, P342
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   POULIN J, 2006, 9 INT C SOFTW REUS T
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Rine DC, 1997, COMPUTER, V30, P43, DOI 10.1109/MC.1997.625303
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   RINE DC, 1997, ACM S APPL COMP SAN, P182
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   SEACORD RC, 1999, INT WORKSH COMP BAS
   Sherif K, 2006, INT J INFORM MANAGE, V26, P70, DOI 10.1016/j.ijinfomgt.2005.08.007
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   [No title captured]
NR 40
TC 15
Z9 16
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2008
VL 81
IS 6
BP 996
EP 1013
DI 10.1016/j.jss.2007.08.036
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 308LK
UT WOS:000256391400013
DA 2024-07-18
ER

PT J
AU Cuadrado-Gallego, JJ
   Machado-Piriz, F
   Aroba-Páez, J
AF Cuadrado-Gallego, Juan J.
   Machado-Piriz, Fernando
   Aroba-Paez, Javier
TI On the conversion between IFPUG and COSMIC software functional size
   units:: A theoretical and empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Joint Meeting of the International Workshop on Software Measurement
   (IWSM)/International Conference on Software Process and Product
   Measurement (MENSURA)
CY NOV 05-07, 2007
CL Palma de Mallorca, SPAIN
DE functional size measurement; IFPUG; COSMIC; software estimation
AB Since 1984 the International Function Point Users Group (IFPUG) has produced and maintained a set of standards and technical documents about a functional size measurement methods, known as IFPUG, based on Albrecht function points. On the other hand, in 1998, the Common Software Measurement International Consortium (COSMIC) proposed an improved measurement method known as full function points (FFP). Both the IFPUG and the COSMIC methods both measure functional size of software, but produce different results. In this paper, we propose a model to convert functional size measures obtained with the IFPUG method to the corresponding COSMIC measures. We also present the validation of the model using 33 software projects measured with both methods. This approach may be beneficial to companies using both methods or migrating to COSMIC such that past data in IFPUG can be considered for future estimates using COSMIC and as a validation procedure. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Cuadrado-Gallego, Juan J.] Univ Alcala, Madrid 28805, Spain.
   [Machado-Piriz, Fernando] Univ Catolica Uruguay, Montevideo 11003, Uruguay.
   [Aroba-Paez, Javier] Univ Huelva, SIN, Huelva, Spain.
C3 Universidad de Alcala; Universidad Catolica del Uruguay; Universidad de
   Huelva
RP Cuadrado-Gallego, JJ (corresponding author), Univ Alcala, Madrid 28805, Spain.
EM jjcg@uah.es; fmachado@ucu.edu.uy; aroba@diesia.uhu.es
OI Aroba Paez, Javier/0000-0003-3947-1822
CR [Anonymous], 209262003 ISOIEC
   *COSMIC, 2005, 2 COSMICFFP
   *COSMIC, 2003, COSMIC MEAS MAN VER
   *COSMIC, 2005, GUID SIZ BUS APPL SO
   FETCKE T, 1999, 199920 TU BERL FACHB
   *IBM, 2004, COURS REG SYST
   *IFPUG, 2005, IFPUG CAS STUD 1 REL
   *IFPUG, 2001, PRACT GUID COUNT LOG
   *IFPUG, 2000, FUNCT POINT COUNT PR
   *ISO IEC, 1998, 1414311998 ISOIEC 1
   *ISO IEC, 2002, 1414342002 ISOIEC 4
   *ISO IEC, 2002, 1414322002 ISOIEC 2
   *ISO IEC, 2003, 141433200 ISOIEC 3
   *ISO IEC, 2004, 1414352004 ISOIEC 5
NR 14
TC 14
Z9 17
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2008
VL 81
IS 5
BP 661
EP 672
DI 10.1016/j.jss.2007.07.042
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 292WD
UT WOS:000255295900006
DA 2024-07-18
ER

PT J
AU Guan, L
   Awan, IU
   Woodward, ME
   Wang, XG
AF Guan, L.
   Awan, I. U.
   Woodward, M. E.
   Wang, Xingang
TI Discrete-time performance analysis of a congestion control mechanism
   based on RED under multi-class bursty and correlated traffic
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE queueing theory; queue thresholds; congestion control; MMBP-2; RED;
   quality of service (QoS)
AB Internet traffic congestion control using queue thresholds is a well known and effective mechanism. This motivates the stochastic analysis of a discrete-time queueing systems for the performance evaluation of the active queue management (AQM) based congestion control mechanism called Random Early Detection (RED) with bursty and correlated traffic using a two-state Markov-Modulated Bernoulli arrival process (MMBP-2) as the traffic source. A two-dimensional discrete-time Markov chain is introduced to model the RED mechanism for two traffic classes where each dimension corresponds to a traffic class with its own parameters. This mechanism takes into account the reduction of incoming traffic arrival rate due to packets dropped probabilistically with the drop probability increasing linearly with system contents. The stochastic analysis of the queue considered could be of interest for the performance evaluation of the RED mechanism for the multi-class traffic with short range dependent (SRD) traffic characteristics. The performance metrics including mean system occupancy, mean packet delay, packet loss probability and system throughput are computed from the analytical model for a dropping policy which is a function of the thresholds and maximum drop probability. Typical numerical results are included to illustrate the credibility of the proposed mechanism in the context of external bursty and correlated traffic. These results clearly demonstrate how different threshold settings can provide different trade-offs between loss probability and delay to suit different service requirements. The effects on various performance measures of changes in the input parameters and of burstiness and correlations exhibited by the arrival process are also presented. The model would be applicable to high-speed networks which use slotted protocols. Crown Copyright (c) 2007 Published by Elsevier Inc. All rights reserved.
C1 Loughborough Univ, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
   Univ Bradford, Dept Comp, Bradford BD7 1DP, W Yorkshire, England.
   Univ Plymouth, Sch Comp Commun & Elect, Plymouth PL4 8AA, Devon, England.
C3 Loughborough University; University of Bradford; University of Plymouth
RP Awan, IU (corresponding author), Loughborough Univ, Dept Comp Sci, Holywell Pk, Loughborough LE11 3TU, Leics, England.
EM L.Guan@lboro.ac.uk; I.U.Awan@Bradford.ac.uk; M.E.Woodward@Bradford.ac.uk
RI Guan, Lin/B-8691-2018
OI Guan, Lin/0000-0003-4781-7168; wang, xingang/0000-0002-8665-7024
CR ALAZEMI H, 2001, IEEE INT C COMM ICC, V8, P2385
   Alazemi HM, 2000, GLOB TELECOMM CONF, P1747, DOI 10.1109/GLOCOM.2000.891935
   Athuraliya S., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P1425, DOI 10.1109/INFCOM.2000.832540
   Bonald T., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P1415, DOI 10.1109/INFCOM.2000.832539
   BRADEN B, 1998, 2309 IETF RFC
   FISCHER W, 1993, PERFORM EVALUATION, V18, P149, DOI 10.1016/0166-5316(93)90035-S
   Floyd S, 1993, IEEE ACM T NETWORK, V1, P397, DOI 10.1109/90.251892
   GIBBENS R, 1999, P 16 INT TEL C ED SC
   HOOLOT C, 2000, 0042 CMPSCI
   KUNNIYUR S, 2000, P INFOCOM 2000 TEL A
   KUNNIYUR S, 2001, P INFOCOM 2001 AL AN
   Lapsley D, 1999, GLOBECOM'99: SEAMLESS INTERCONNECTION FOR UNIVERSAL SERVICES, VOL 1-5, P1747, DOI 10.1109/GLOCOM.1999.832461
   Li JM, 1998, PERFORM EVALUATION, V34, P147, DOI 10.1016/S0166-5316(98)00030-3
   MOKHTAR A, 1999, P IEEE ATM WORKSH 99, P45
   NILSSON AA, 1994, 26 SE S SYST THEOR M
   RAIF O, 1993, ONVURAL ATM NETWORK
   Salvador P, 2003, TELECOMMUN SYST, V23, P123, DOI 10.1023/A:1023672904130
NR 17
TC 13
Z9 15
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2007
VL 80
IS 10
BP 1716
EP 1725
DI 10.1016/j.jss.2006.12.549
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 211UG
UT WOS:000249548200012
DA 2024-07-18
ER

PT J
AU Karahasanovic, A
   Levine, AK
   Thomas, R
AF Karahasanovic, Amela
   Levine, Annette Kristin
   Thomas, Richard
TI Comprehension strategies and difficulties in maintaining object-oriented
   systems: An explorative study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE maintenance; program comprehension; experiment; object-oriented
ID PROGRAM COMPREHENSION; MAINTENANCE; SUPPORT; DESIGN; MODEL
AB Program comprehension is a major time-consuming activity in software maintenance. Understanding the underlying mechanisms of program comprehension is therefore necessary for improving software maintenance. It has been argued that acquiring knowledge of how a program works before modifying it (the systematic strategy) is unrealistic in larger programs. The goal of the experiment presented in this paper is to explore this claim. The experiment examines strategies for program comprehension and cognitive difficulties of developers who maintain an unfamiliar object-oriented system. The subjects were 38 students in their third or fourth year of study in computer science. They used a professional Java tool to perform several maintenance tasks on a medium-size Java application system in a 6-h long experiment. The results showed that the subjects who applied the systematic strategy were more likely to produce correct solutions. Two major groups of difficulties were related to the comprehension of the application structure, namely to the understanding of GUI implementation and OO comprehension and programming. Acquisition of strategic knowledge might improve program comprehension in software maintenance. (C) 2006 Elsevier Inc. All rights reserved.
C1 Software Engn Dept, Simula Res Lab, NO-1325 Lysaker, Norway.
   Software Innovat ASA, NO-1366 Lysaker, Norway.
   Univ Western Australia, Sch Comp Sci & Software Engn, Crawley, WA 6009, Australia.
C3 University of Western Australia
RP Karahasanovic, A (corresponding author), Software Engn Dept, Simula Res Lab, Martin Linges Vei 17,Fornebu POB 134, NO-1325 Lysaker, Norway.
EM amela@simula.no; annette.levine@software-innovation.no;
   richard@csse.uwa.edu.au
CR [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], EMPIR SOFTW ENG
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Burkhardt JM, 1998, PROG COMPREHEN, P82, DOI 10.1109/WPC.1998.693294
   Chi MTH, 1997, J LEARN SCI, V6, P271, DOI 10.1207/s15327809jls0603_1
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   CORRITORE CL, 2000, 8 INT WORKSH PROGR C
   DALE N, 2005, NON SIGCSE MEMBERS S
   DALE N, 2005, SIGCSE MEMBERS SURVE
   DALY J, 1996, EMPIR SOFTW ENG, V1, P31
   DAVIES SP, 1993, INT J MAN MACH STUD, V39, P237, DOI 10.1006/imms.1993.1061
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   Detienne F, 1997, INTERACT COMPUT, V9, P47, DOI 10.1016/S0953-5438(97)00006-4
   Dreyfus H. L., 1986, MIND MACHINE
   Dunsmore A, 2000, J SYST SOFTWARE, V52, P121, DOI 10.1016/S0164-1212(99)00138-7
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Eriksson Hans-Erik., 1998, UML TOOLKIT
   HENRY S, 1993, J OBJECT-ORIENT PROG, V6, P41
   Holgeid KK, 2000, INFORM SOFTWARE TECH, V42, P687, DOI 10.1016/S0950-5849(00)00111-7
   Hughes J, 2003, BEHAV INFORM TECHNOL, V22, P127, DOI 10.1080/0144929031000081341
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   KARAHASANOVIC A, IN PRESS BEHAV IT
   Khazaei B, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P19, DOI 10.1109/HCC.2002.1046336
   Ko AJ, 2003, PROG COMPREHEN, P175
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LIENTZ BP, 1983, ISSUES SOFTWARE MAIN, V15, P271
   LITTMAN DC, 1986, EMPIRICAL STUDIES PR
   LITTMAN DC, 1986, 1 WORKSH EMP STUD PR, P80
   Meyer Bertrand, 1988, OBJECT ORIENTED SOFT
   Mosemann R, 2001, PROG COMPREHEN, P79, DOI 10.1109/WPC.2001.921716
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   O'Brien MP, 2001, PROG COMPREHEN, P71, DOI 10.1109/WPC.2001.921715
   Parkin P, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P221, DOI 10.1109/ASWEC.2004.1290475
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Pennington Nancy, 1987, Empirical studies of programmers, P100
   Pfleeger S.L., 1987, SOFTWARE ENG PRODUCT
   Rosson M. B., 1990, Human-Computer Interaction, V5, P345, DOI 10.1207/s15327051hci0504_1
   Sheetz SD, 2002, J SYST SOFTWARE, V64, P23, DOI 10.1016/S0164-1212(02)00019-5
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Soloway E., 1988, The nature of expertise, P129
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Tegarden DP, 2001, INT J HUM-COMPUT ST, V54, P779, DOI 10.1006/ijhc.1999.0462
   THOMAS R, 2003, ASCILITE 2003 C U AD, P715
   Torchiano M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P184, DOI 10.1109/CSMR.2004.1281419
   UPCHURCH R, 2002, CODE READING PROGRAM
   Van Someren M., 1994, The Thinking Aloud Method. A practical guide to modelling cognitive processes
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   vonMayrhauser A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P12, DOI 10.1109/ICSM.1997.624226
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONMAYRHAUSER A, 1993, 6 INT WORKSH COMP AI, P230
   Wiedenbeck S, 1999, INTERACT COMPUT, V11, P255, DOI 10.1016/S0953-5438(98)00029-0
   Wiedenbeck S, 1999, INT J HUM-COMPUT ST, V51, P71, DOI 10.1006/ijhc.1999.0269
   ZELKOWITZ MV, 1978, COMPUT SURV, V10, P197, DOI 10.1145/356725.356731
   [No title captured]
NR 63
TC 21
Z9 28
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2007
VL 80
IS 9
BP 1541
EP 1559
DI 10.1016/j.jss.2006.10.041
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 210RB
UT WOS:000249472200012
DA 2024-07-18
ER

PT J
AU He, Z
   Lai, R
   Marquez, A
   Blackburn, S
AF He, Zhen
   Lai, Richard
   Marquez, Alonso
   Blackburn, Stephen
TI Opportunistic prioritised clustering framework for improving OODBMS
   performance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE object-oriented databases; clustering; caching; performance optimization
AB In object oriented database management systems, clustering has proven to be one of the most effective performance enhancement techniques. Existing clustering algorithms are mainly static, that is re-clustering the object base when the database is off-line. However, this type of re-clustering cannot be used when 24-h database access is required. In such situations dynamic clustering is necessary, since it can re-cluster the object base while the database is in operation. We find that most existing dynamic clustering algorithms do not address the following important points: the use of opportunism to impose the smallest I/O footprint for re-organisation; the re-use of prior research on static clustering algorithms; and the prioritisation of re-clustering so that the worst clustered pages are re-clustered first. Our main achievement in this paper is to create the Opportunistic Prioritised Clustering Framework (OPCF). The framework allows any static clustering algorithm to be made dynamic. Most importantly it allows the created algorithm to have the properties of I/O opportunism and clustering prioritisation which are missing in most existing dynamic clustering algorithms. We have used OPCF to make the static clustering algorithms "Graph Partitioning" and "Probability Ranking Principle" into dynamic algorithms. In our simulation study we found these algorithms outperformed two existing highly competitive dynamic algorithms in a variety of situations. (C) 2006 Elsevier Inc. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
   Australian Natl Univ, Dept Comp Sci, Canberra, ACT 0200, Australia.
C3 La Trobe University; Australian National University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM z.he@latrobe.edu.au; r.lai@latrobe.edu.au; alonso@cs.anu.edu.au;
   steveb@cs.anu.edu.au
OI Blackburn, Stephen/0000-0001-6632-6001; He, Zhen/0000-0003-0302-5775
CR Ailamaki A, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P266
   ARMONT J, 2000, LNCS, V1944, P71
   BANERJEE J, 1988, IEEE T SOFTWARE ENG, V14, P1684, DOI 10.1109/32.9055
   BULLAT F, 1996, P EUR C OBJ OR PROGR, P344
   CAREY M, 1991, P ACM SIGMOD INT C M, P357
   Darmont J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P254
   Darmont J, 1998, LECT NOTES COMPUT SC, V1377, P326
   DEUX O, 1991, COMMUN ACM, V34, P34, DOI 10.1145/125223.125238
   DREW P, 1990, P INT C VER LARG DAT, P135
   FRANKLIN MJ, 1993, P INT C VER LARG DAT, P641
   GAY JY, 1997, LNCS, V1308, P81
   GERLHOF A, 1996, ACM SIGMOD RECORD, V25, P28
   GERLHOF C, 1993, P INT C FDN DAT ORG, P301
   Gray Jim., 1987, Proceedings of the 1987 ACM SIGMOD international conference on Management of data, P395
   HE Z, 2003, P 14 INT C DAT EXP S, P662
   HUDSON E, 1989, ACM T DATAB SYS  SEP, P291
   KERNIGHAN B, 1970, BELL SYST TECH J, V29, P291
   KNAFLA N, 1999, THESIS U EDINBURGH
   MCIVER WJ, 1994, P ACM SIGMOD INT C M, P407
   Singhal Vivek., 1992, POS, P11
   TSANGARIS EMM, 1992, THESIS U WISCONSIN M
   TSANGARIS MM, 1991, P ACM SIGMOD INT C M, P12
   TSANGARIS MM, 1992, P ACM SIGMOD INT C M, P144
   WIETRZYK VS, 1999, P INT DAT ENG APPL S
   WILSON PR, 1995, INT WORKSH MEM MAN K
NR 25
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2007
VL 80
IS 3
BP 371
EP 387
DI 10.1016/j.jss.2006.04.017
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 144YY
UT WOS:000244833700007
DA 2024-07-18
ER

PT J
AU Lin, JW
AF Lin, Jenn-Wei
TI Providing fault-tolerant authentication and authorization in wireless
   mobile IP networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mobile IP; authentication; authorization; fault tolerance; M/G/c/c
   queuing model
AB In wireless Mobile IP systems, the authentications and authorizations are performed by AAA (Authentication, Authorization, and Accounting) servers. An AAA server associates with a mobility agent to form an administrative domain. If an AAA server fails, all the mobile nodes (MNs) within the corresponding domain (failure-effected MNs) are unable to execute data services since their authentications and authorizations cannot be performed by the faulty AAA server. To tolerate the failure of the AAA server, this paper presents an efficient fault-tolerant approach. Once a failure is detected in an AAA server of an administrative domain, the proposed approach utilizes the AAA servers in other administrative domains to virtually generate a backup AAA server. To further reduce the fault-tolerant cost, the proposed approach additionally uses two techniques: preservation and tracking to assist the generation of the backup AAA server. Due to introducing these two techniques, the proposed approach does not need to retrieve the AAA records of failure-effected MNs while performing fault tolerance. Finally, we use M/G/c/c queuing model to analyze the effectiveness of the proposed approach over previous approaches. The analytical results are also validated by simulations. (C) 2006 Elsevier Inc. All rights reserved.
C1 Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, Hsinchuang 24205, Taipei, Taiwan.
C3 Fu Jen Catholic University
RP Lin, JW (corresponding author), Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, 510 Chung Cheng Rd, Hsinchuang 24205, Taipei, Taiwan.
EM jwlin@csie.fju.edu.tw
CR Agrawal D., 2011, INTRO WIRELESS MOBIL, V3rd
   [Anonymous], 2904 IETF RFC
   [Anonymous], 3539 RFC
   Cheung CC, 2000, IEEE ACM T NETWORK, V8, P679, DOI 10.1109/90.879353
   de Laat C., 2000, 2903 IETF RFC
   FARRELL S, 2000, 2905 IETF RFC
   FARRELL S, 2000, 2906 IETF RFC
   GLASS S, 2000, 2977 IETF RFC
   HILLER T, 2001, 3141 RFC
   Lin JW, 2003, IEEE T MOBILE COMPUT, V2, P207, DOI 10.1109/TMC.2003.1233527
   Lin P, 2001, IEEE T VEH TECHNOL, V50, P375, DOI 10.1109/25.923050
   McCann PJ, 2000, IEEE PERS COMMUN, V7, P26, DOI 10.1109/98.863993
   Metz C, 1999, IEEE INTERNET COMPUT, V3, P6
   MISTRY R, 1997, IEEE COMM MAGAZI MAR, P70
   Perkins C., 2002, IETF RFC 3344
   Sarikaya B, 2000, IEEE COMMUN MAG, V38, P164, DOI 10.1109/35.868157
   Trivedi KishorS., 2002, PROBABILITY STAT REL, V2nd
   Wang KC, 2001, IEEE T VEH TECHNOL, V50, P942, DOI 10.1109/25.938571
NR 18
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2007
VL 80
IS 2
BP 149
EP 163
DI 10.1016/j.jss.2006.02.052
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 133QB
UT WOS:000244026300001
DA 2024-07-18
ER

PT J
AU Maqbool, O
   Babri, HA
AF Maqbool, O.
   Babri, H. A.
TI Automated software clustering: An insight using cluster labels
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software clustering; cluster labeling; weighted combined algorithm;
   complete algorithm
AB Clustering techniques have shown promising results for the architecture recovery and re-modularization of legacy software systems. Clusters that are obtained as a result of the clustering process may not be easy to interpret until they are assigned appropriate labels. Automatic labeling of clusters reduces the time required to understand them and can also be used to evaluate the effectiveness of the clustering process, if the assigned labels are meaningful and convey the purpose of each cluster effectively. In this paper, we present a labeling scheme based on identifiers of an entity. As the clustering process proceeds, keywords within identifiers are ranked using two ranking schemes: frequency and inverse frequency. We present experimental results to demonstrate the effectiveness of our labeling approach. A comparison between the ranking schemes reveals the inverse frequency scheme to form more meaningful labels, especially for small clusters. A comparison of clustering results of the complete and weighted combined algorithms based on labels of the clusters produced by them during clustering shows that the latter produces a more understandable cluster hierarchy with easily identifiable software sub-systems. (c) 2006 Elsevier Inc. All rights reserved.
C1 Lahore Univ Management Sci, Lahore, Pakistan.
   Univ Management & Technol, Lahore, Pakistan.
C3 Lahore University of Management Sciences; University of Management &
   Technology (UMT)
RP Maqbool, O (corresponding author), Lahore Univ Management Sci, Lahore, Pakistan.
EM onaiza@lums.edu.pk; babri@umt.edu.pk
CR Abd-El-Hafiz S. K., 2000, Automated Software Engineering, V7, P239, DOI 10.1023/A:1008718105516
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Davey J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P268, DOI 10.1109/WCRE.2000.891478
   Demeyer S., 2003, OBJECT ORIENTED REEN
   Duda R. O., 2000, PATTERN CLASSIFICATI
   Everitt B., 2001, Cluster analysis
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   KOSCHKE R, 2000, THESIS U STUTTGART S
   Lakhotia A, 1997, J SYST SOFTWARE, V36, P211, DOI 10.1016/0164-1212(95)00098-4
   LEGENDRE L., 1983, NUMERICAL ECOLOGY
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LUCCA GAD, 2004, J SOFTWARE MAINTENAN, V16, P71
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Martin J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P207, DOI 10.1109/WCRE.2000.891470
   Riva C, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P42, DOI 10.1109/WCRE.2000.891451
   Saeed M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P301, DOI 10.1109/CSMR.2003.1192438
   Sartipi K, 2003, J SOFTW MAINT EVOL-R, V15, P265, DOI 10.1002/smr.277
   SCHWANKE RW, 1989, 2 INT WORKSH SOFTW C, P86
   STROULIA E, 2003, AUTOMATED SOFTWARE E, V10, P371
   Tonella P, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P41, DOI 10.1109/WSE.2003.1234007
   TZERPOS V, 2001, THESIS U TORONTO TOR
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 24
TC 15
Z9 16
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2006
VL 79
IS 11
BP 1632
EP 1648
DI 10.1016/j.jss.2006.03.013
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 108OR
UT WOS:000242249600014
DA 2024-07-18
ER

PT J
AU Lung, CH
   Xu, X
   Zaman, M
   Srinivasan, A
AF Lung, Chung-Horng
   Xu, Xia
   Zaman, Marzia
   Srinivasan, Anand
TI Program restructuring using clustering techniques
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 4th IEEE International Workshop on Source Code Analysis and Manipulation
CY SEP 15-16, 2004-5004
CL Chicago, IL
SP IEEE Comp Soc, Tech Council Software Engn, Loyola Coll Maryland, Raincode, VASTT Grp, Brunel Univ
DE program restructuring; clustering
ID DESIGN; FRAMEWORK; RECOVERY
AB Program restructuring is a key method for improving the quality of ill-structured programs, thereby increasing the understandability and reducing the maintenance cost. It is a challenging task and a great deal of research is still ongoing. This paper presents an approach to program restructuring inside of a function based on clustering techniques with cohesion as the major concern. Clustering has been widely used to group related entities together. The approach focuses on automated support for identifying ill-structured or low-cohesive functions and providing heuristic advice in both the development and evolution phases. A new similarity measure is defined and studied intensively specifically from the function perspective. A comparative study on three different hierarchical agglomerative clustering algorithms is also conducted. The best algorithm is applied to restructuring of functions of a real industrial system. The empirical observations show that the heuristic advice provided by the approach can help software designers make better decision of why and how to restructure a program. Specific source code level software metrics are presented to demonstrate the value of the approach. (C) 2006 Elsevier Inc. All rights reserved.
C1 Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   Cistel Technol, Ottawa, ON, Canada.
   EION Inc, Ottawa, ON, Canada.
C3 Carleton University
RP Lung, CH (corresponding author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM chlung@sce.carleton.ca; xiaxu@sce.carleton.ca; marzia@cistel.com;
   anand@eion.com
CR [Anonymous], 2001, 3031 RFC
   [Anonymous], 1997, 2205 RFC
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], P 6 WORK C REV ENG
   Anquetil N., 2003, IEE Proceedings-Software, V150, P185, DOI 10.1049/ip-sen:20030581
   ARNOLD RS, 1989, P IEEE, V77, P607, DOI 10.1109/5.24146
   Awduche D., 2001, 3209 RFC
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CHOI SC, 1990, IEEE SOFTWARE, V7, P66, DOI 10.1109/52.43051
   CHU WC, 1992, P C SOFTW MAINT, P165
   DHAMA H, 1995, J SYST SOFTWARE, V29, P65, DOI 10.1016/0164-1212(94)00128-A
   Everitt B., 1974, CLUSTER ANAL
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Girard J.-F., 1999, Automated Software Engineering, V6, P357, DOI 10.1023/A:1008715506131
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   Kang BK, 1999, J SOFTW MAINT-RES PR, V11, P245, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<245::AID-SMR193>3.0.CO;2-8
   Kang BK, 1998, J SYST SOFTWARE, V42, P175, DOI 10.1016/S0164-1212(98)10008-0
   KIM HS, 1994, INT J SOFTW ENG KNOW, V4, P349, DOI 10.1142/S0218194094000179
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   LAKHOTIA A, 1993, PROC INT CONF SOFTW, P35, DOI 10.1109/ICSE.1993.346057
   Lakhotia A, 1997, J SYST SOFTWARE, V36, P211, DOI 10.1016/0164-1212(95)00098-4
   LAKHOTIA A, 1999, P IEEE WORK C REV EN, P36
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   LUNG CH, 1998, P 3 INT WORKSH SOFTW, P101
   LUNG CH, 2004, P INT C SOFTW ENG RE, P853
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   MANCORIDIS S, 1999, P INT WORKSH PROGR C
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   MITCHELL BS, 2001, P INT C SOFTW MAINT
   Muller H., 1995, Object-oriented techology for database and software systems, P240, DOI [10.1142/9789812831163_0016, DOI 10.1142/9789812831163_0016]
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Munson C. J., 2003, SOFTWARE ENG MEASURE
   Pressman R.S., 1997, Software Engineering: a Practitioner's Approach
   Romesburg H.C., 1990, CLUSTER ANAL RES
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Sneath PHA, 1973, NUMERICAL TAXONOMY P
   Sommerville I., 1996, Software Engineering, V5th
   TZERPOS V, 1998, P 20 ANN INT C IEEE, V3, P811
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 43
TC 21
Z9 28
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2006
VL 79
IS 9
SI SI
BP 1261
EP 1279
DI 10.1016/j.jss.2006.02.037
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 083TI
UT WOS:000240480700005
DA 2024-07-18
ER

PT J
AU Jalote, P
   Jain, G
AF Jalote, Pankaj
   Jain, Gourav
TI Assigning tasks in a 24-h software development model
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 11th Asia-Pacific Software Engineering Conference (APSEC 2004)
CY NOV 30-DEC 03, 2004
CL Busan, SOUTH KOREA
SP Korea Informat Sci Soc, Korea Soc Engn Fdn, Samsung Elect, Samsung SDS, LG Elect, Korea IT Ind Promto Agcy, Elect & Telecommun Res Inst
DE software development; 24-h software development; project scheduling;
   task allocation; dependency graph; optimal schedule
AB With the advent of globalization and the Internet, the concept of global software development is gaining ground. The global development model opens up the possibility of 24-h software development by effectively utilizing the time zone differences. To harness the potential of the 24-h software development model for reducing the overall development time, a key issue is the allocation of project tasks to the resources in the distributed team. In this paper, we examine this issue of task allocation in order to minimize the completion time of a project. We discuss a model for distributed team across time zones and propose a task allocation algorithm for the same. We apply the approach on tasks of a few synthetic projects and two real projects and show that there is a potential to reduce the project duration as well as improve the resource utilization through 24-h development. (c) 2005 Elsevier Inc. All rights reserved.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kanpur
RP Jalote, P (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Kanpur 208016, Uttar Pradesh, India.
EM jalote@iitk.ac.in; jain.gourav@gmail.com
CR Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Jalote P, 2004, ADV COMPUT, V62, P67, DOI 10.1016/S0065-2458(03)62002-4
   Jalote P, 2004, J SYST SOFTWARE, V70, P117, DOI [10.1016/S0164-1212(03)00010-4, 10.1016/S0164-1212(02)00010-4]
   Jalote P., 2000, CMM PRACTICE PROCESS
   Jalote PM., 2002, SOFTWARE PROJECT MAN
   KASAHARA H, 1984, IEEE T COMPUT, V33, P1023, DOI 10.1109/TC.1984.1676376
   Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Repenning I, 2001, IEEE SOFTWARE, V18, P38, DOI 10.1109/52.914739
NR 15
TC 18
Z9 20
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2006
VL 79
IS 7
BP 904
EP 911
DI 10.1016/j.jss.2005.06.040
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 060GJ
UT WOS:000238790300003
DA 2024-07-18
ER

PT J
AU Helms, JW
   Arthur, JD
   Hix, D
   Hartson, HR
AF Helms, James W.
   Arthur, James D.
   Hix, Deborah
   Hartson, H. Rex
TI A field study of the Wheel - a usability engineering process model
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE usability engineering; interaction design; process model; interactive
   systems development; user-centered design; field study
AB Interactive system developers are increasingly including usability engineering as an integral part of interactive system development. With recognition of the importance of usability come attempts to structure this new aspect of overall system development, leading to a variety of processes and methodologies. Unfortunately, these processes often lack flexibility, customizability, completeness, and breadth of coverage. This paper describes our development of a meta process or process model that we call the Wheel. This innovative approach to creating and tailoring usability engineering processes addresses these shortcomings, and describes an evaluation of its application in a real-world commercial development environment.
   The Wheel process model for usability engineering is not a process itself, but instead, it provides a general framework into which developers can fit specific existing or new techniques, methods, or activities to apply "best usability practices". It grew out of our examination. adaptation. and extension of several existing usability engineering and software methodologies. The methods that most strongly guided creation of the Wheel were the LUCID framework of interaction design, the Star life cycle of usability engineering, and the waterfall and spiral models of software engineering. The resulting process model assumes the form of a sequence of distinct cycles (each of which produces a product form), allowing developers to focus on each cycle separately. Each cycle has the same four activity types: Analyze. Design. Implement, and Evaluate. Each activity type in a cycle is instantiated using an existing usability engineering technique.
   Working with an Internet technology company in northern Virginia under grant sponsorship from the Virginia Center for Innovative Technology (a research and development incubator for the Commonwealth of Virginia), we instantiated the Wheel process model and used it to develop a Web-based device management system. The process model performed remarkably well for this development environment. overcoming the tight constraints of budget and schedule cuts to produce an excellent process instance that resulted in a demonstration prototype of the company's target system. (C) 2005 Elsevier Inc. All rights reserved.
C1 Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
   Harmonia Inc, Blacksburg, VA 24062 USA.
   Virginia Tech, Syst Res Ctr, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University; Virginia Polytechnic
   Institute & State University
RP Arthur, JD (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
EM jhelms@harmonia.com; arthur@vt.edu; hix@vt.edu; hartson@vt.edu
CR BASS L, 2001, IEEE COMPUTER    OCT, P113
   Beyer H., 2002, CONTEXTUAL DESIGN CU
   Beyer H.R., 1996, Interactions, V3, P44
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   CHISALITA C, 2003, UPGRADE EUROPEAN ONL, P46
   Gabbard JL, 1999, IEEE COMPUT GRAPH, V19, P51, DOI 10.1109/38.799740
   Good M., 1986, PROC CHI 86 HUMAN FA, P241, DOI DOI 10.1145/22339.22378
   HARTSON HR, 1989, INT J MAN MACH STUD, V31, P477, DOI 10.1016/0020-7373(89)90005-9
   HELMS JW, 2001, THESIS VIRGINIA TECH
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   McCrickard DS, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P148
   PYLA PS, 2003, INT 2003 WORKSH CLOS, P67
   Rakers G, 2001, USER INTERFACE DESIGN FOR ELECTRONIC APPLIANCES, P29
   Sommerville I., 2004, Software Engineering
   STEFFAH A, 2005, HUMAN COMPUTER INTER, V8
   VANDERVEER GC, 2004, HDB TASK ANAL HUMAN, P173
   2003, WORKSH INTERACT 2003, P67
NR 18
TC 9
Z9 10
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2006
VL 79
IS 6
BP 841
EP 858
DI 10.1016/j.jss.2005.08.023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 050IT
UT WOS:000238081600008
DA 2024-07-18
ER

PT J
AU Eeckhout, L
   De Bosschere, K
AF Eeckhout, Lieven
   De Bosschere, Koen
TI Yet shorter warmup by combining no-state-loss and MRRL for sampled LRU
   cache simulation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE computer architecture; sampled simulation; cold-start problem; warmup
ID PREDICTION
AB Sampling is a well known technique for speeding up time-consuming architectural simulations. An important issue with sampling is the hardware state at the beginning of each sampling unit. This paper presents a highly accurate and highly efficient warmup method for sampled cache simulation by combining 'no-state-loss (NSL)' and 'memory reference reuse latency (MRRL)'. Our combined warmup scheme MRRL-NSL achieves the same accuracy for sampled LRU cache simulation as MRRL with a two orders of magnitude shorter warmup. Compared to NSL, MRRL-NSL has a factor 2-6 shorter warmup while inducing a small absolute miss rate error of 0.1%. (c) 2005 Elsevier Inc. All rights reserved.
C1 Univ Ghent, ELI Dept, B-9000 Ghent, Belgium.
C3 Ghent University
RP Eeckhout, L (corresponding author), Univ Ghent, ELI Dept, St Pietersnieuwstr 41, B-9000 Ghent, Belgium.
EM leeckhou@elis.ugent.be; kdb@elis.ugent.be
RI De Bosschere, Koen OM/P-6865-2014
CR BURGER D., 1997, SIMPLESCALAR TOOL SE
   Conte TM, 1998, IEEE T COMPUT, V47, P714, DOI 10.1109/12.689650
   Conte TM, 1996, PR IEEE COMP DESIGN, P468, DOI 10.1109/ICCD.1996.563595
   CROWLEY P, 1998, P 1 WORKSH WORKL CHA
   Haskins JW, 2003, INT SYM PERFORM ANAL, P195, DOI 10.1109/ISPASS.2003.1190246
   Haskins JW, 2001, PR IEEE COMP DESIGN, P32, DOI 10.1109/ICCD.2001.955000
   KESSLER RE, 1994, IEEE T COMPUT, V43, P664, DOI 10.1109/12.286300
   Khalid H, 2000, IEEE MICRO, V20, P76, DOI 10.1109/40.888706
   KOBAYASHI M, 1989, IEEE T COMPUT, V38, P798, DOI 10.1109/12.24288
   LAFAGE T, 2000, IEEE 3 ANN WORKSH WO
   LAHA S, 1988, IEEE T COMPUT, V37, P1325, DOI 10.1109/12.8699
   LAUTERBACH G, 1993, TR9322 SMLI
   MARTONOSI M, 1993, P 1993 ACM SIGMETRIC, P248
   Nguyen AT, 1997, IPPS PROC, P39, DOI 10.1109/IPPS.1997.580842
   POURSEPANJ A, 1994, COMMUN ACM, V37, P47, DOI 10.1145/175208.175214
   Sherwood T., 2002, SIGPLAN Notices, V37, P45, DOI 10.1145/605432.605403
   Sherwood T, 2001, 2001 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P3, DOI 10.1109/PACT.2001.953283
   Skadron K, 1999, IEEE T COMPUT, V48, P1260, DOI 10.1109/12.811115
   SRIVASTAVA A, 1994, 942 W RES LAB
   SUGAMAR RA, 1993, P 1993 ACM C MEAS MO, P24
   THIEBAUT D, 1989, IEEE T COMPUT, V38, P1012, DOI 10.1109/12.30852
   WOOD DA, 1991, P 1991 SIGMETRICS C, P79
   WUNDERLICH RE, 2003, P 30 ANN INT S COMP
NR 23
TC 4
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2006
VL 79
IS 5
BP 645
EP 652
DI 10.1016/j.jss.2005.06.016
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 041NR
UT WOS:000237463400007
DA 2024-07-18
ER

PT J
AU Lai, R
   Tsang, T
   Kim, YS
   Hwang, DH
   Lee, CS
   Han, YK
AF Lai, R
   Tsang, T
   Kim, YS
   Hwang, DH
   Lee, CS
   Han, YK
TI A method for analysing multimedia protocol performance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Time-Estelle; GSPN; RSVP; multimedia protocol; performance analysis;
   GreatSPN
ID STOCHASTIC PETRI NETS
AB Performance analysis derived from a formal specification of a multimedia protocol provides important information on the performance characteristics of a multimedia system before implementation. The major problem of existing performance methodology is the lack of feasibility in time-dependent and functional behaviours, as well as statistical traffic characteristics for distributed multimedia systems. The internationally standardised Formal Description Technique, Estelle, does not have enough expressive power to specify the time-dependent performance characteristics of a multimedia system. To address this limitation of Estelle, we have developed a variant of Estelle, called Time-Estelle. In this paper, we describe a method for analysing the performance of a multimedia protocol specified in Time-Estelle. To aid the analysis, we introduce a traffic model called the Time-interval Performance Indices in order to capture the burstiness and time correlations of realistic multimedia traffic. Thus, performance parameters of multimedia systems, such as the long-term average rate and short-term peak rate allocation, and exploitation of statistical resources utilisation, can be analysed. To demonstrate the soundness of our method, we have applied it to the Resource ReSerVation Protocol and some results are included in this paper. (c) 2005 Elsevier Inc. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
   Kyungwon Univ, Coll Software, Songnam 461701, Kyunggi Do, South Korea.
C3 La Trobe University; Gachon University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM lai@cs.latrobe.edu.au
CR BUDKOWSKI S, 1992, COMPUT NETWORKS ISDN, V25, P63, DOI 10.1016/0169-7552(92)90124-9
   CHIOLA G, 1993, IEEE T SOFTWARE ENG, V19, P89, DOI 10.1109/32.214828
   CHIOLA G, 1995, PERFORM EVALUATION, V24, P47, DOI 10.1016/0166-5316(95)00008-L
   CHIOLA G, 1991, P 5 INT WORKSH MOD T
   COURTIAT JP, 1995, P 5 IEEE WORKSH FUT
   COURTIAT JP, 1996, P ACM MULT C ACM
   ESTELLE, 1989, 9074 ISO IS
   FISCHER S, 1996, FORMAL DESCRIPTION T, V8
   FISCHER S, 1998, COMPUTER NETWORKS IS, V30
   HENDAZ M, 1995, FORMAL DESCRIPTION T, V8
   LEONARD L, 1997, COMPUTER NETWORKS IS, V29
   LEUE S, 1995, PROTOCOL SPECIFICATI
   *LOTOS, 1989, 8807 IS
   Marsan M. Ajmone, 1984, ACM T COMPUTER SYSTE, V2
   MORK S, 1996, FORMAL DESCRIPTION T, V8
   TSANG T, 1998, SOFTWARE PRACTICE EX, V28
   TSANG T, 1997, P 4 IEEE INT C MULT
   TSENG CC, 2003, WIRELESS NETWORKS, V9
   ZHANG L, 1993, IEEE NETWORK     SEP
NR 19
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2006
VL 79
IS 4
BP 454
EP 465
DI 10.1016/j.jss.2005.06.025
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 033GI
UT WOS:000236834600002
DA 2024-07-18
ER

PT J
AU Donzelli, P
   Basili, V
AF Donzelli, P
   Basili, V
TI A practical framework for eliciting and modeling system dependability
   requirements: Experience from the NASA high dependability computing
   project
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE system dependability; requirements elicitation; non-functional
   requirements
AB The dependability of a system is contextually subjective and reflects the particular stakeholder's needs. In different circumstances, the focus will be on different system properties, e.g., availability, real-time response, ability to avoid catastrophic failures, and prevention of deliberate intrusions, as well as different levels of adherence to such properties. Close involvement from stakeholders is thus crucial during the elicitation and definition of dependability requirements. In this paper, we suggest a practical framework for eliciting and modeling dependability requirements devised to support and improve stakeholders' participation. The framework is designed around a basic modeling language that analysts and stakeholders can adopt as a common toot for discussing dependability, and adapt for precise (possibly measurable) requirements. An air traffic control system, adopted as testbed within the NASA High Dependability Computing Project, is used as a case study. (c) 2005 Elsevier Inc. All rights reserved.
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM donzelli@cs.umd.edu; basili@cs.umd.edu
CR [Anonymous], UML PROF MOD QUAL SE
   [Anonymous], MILSTD882D US DEP DE
   [Anonymous], 1992, Dependability: Basic Concepts and Terminology
   ASGARI S, 2004, P ICSE 2004 WORKSH A
   AVIZIENIS A, 2001, N0114K LAASCNRS
   Basili V, 2004, IEEE SOFTWARE, V21, P19, DOI 10.1109/MS.2004.30
   BASILI V, 2004, CSTR4601 U MAR COLL
   Boehm B, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.1293073
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   BOEHM B, 2003, NATURE INFORM SYSTEM
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clements P., 2003, SEI S SOFTW
   DENNIS G, 2003, THESIS MIT BOSTON MA
   Erzberger H., 2001, P 4 US EUR AIR TRAFF
   *EUR UN, 2002, EUR IN DEP DEP INF R
   Fowler M., 2004, UML DISTILLED, VThird
   HE J, 2004, P INT C DEP SYST NET
   *IBM RES, ORTH DEF CLASS
   *IFIP, WG104 IFIP
   JOG NSB, 1995, P IFIP 2 6 VIS DAT S
   KNIGHT J, 2002, P INT C SOFTW ENG OR
   LITTLEWOOD B, 2000, P ACM FUT SOFTW ENG
   MELHART B, 2000, P 7 IEEE C ENG COMP
   MELLOR P, 1992, INFORM SOFTWARE TECH, V34, P640, DOI 10.1016/0950-5849(92)90069-2
   MOTEFF C, 2003, RL31556 LIB C
   *OMG, 2001, UML PROF SCHED PERF
   RANDEL B, 1998, P COMP SEC DEP ASS N
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification
   SHAW M, 2002, P 13 INT S SOFTW REL
   Sommerville I., 2004, Software Engineering
   Sommerville I., 2003, P 11 SAF CRIT SYST S
   U.S. Department of Defence, 1985, TRUST COMP SYST EV C
   *US, 2003, NAT STRAT SEC CYB RE
   WALKERDINE J, 2004, P ICSE 2004 WORKSH A
   WEINSTOCK CB, 2004, CMUSEI2004TN016 PA
   WENGER A, 2004, INT CIIP HDB
NR 37
TC 21
Z9 23
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2006
VL 79
IS 1
BP 107
EP 119
DI 10.1016/j.jss.2005.03.011
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 011CV
UT WOS:000235246300009
DA 2024-07-18
ER

PT J
AU Chang, WK
   Jeng, SL
AF Chang, WK
   Jeng, SL
TI Impartial evaluation in software reliability practice
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software reliability; impartial reliability; Markov chain; Prior
   information; stastistical usage testing
ID USAGE MODELS; QUALITY
AB In the past decade. the size scale of software systems and their technical complexity has become much more complicated. Accordingly. quality assessment of software applications has been intensively investigated lately. Among popular software quality metrics. software reliability has been proven to be one of the most useful indices in evaluating software applications. In the literature, statistical usage testing has been widely shown to be effective in estimating software reliability. Essentially, it first transfers the practical operations of a software system into a usage model, which then forms a basis for performing statistical testing and analyzing software reliability. This research investigates the extension of statistical usage testing by considering any prior information or prejudgment on soffivare quality before performing a validation test, and propose the derivation of impartial reliability evaluation that is fair for both the software producer and consumer (end user). A numerical demonstration of validating the correctness of hyper links on a web site via the proposed computation is illustrated and discussed. The suggested mechanism with some prior information will converge much more quickly than other similar reliability models. In addition, the proposed framework also provides the flexibility of taking the practical prejudgment into account. (C) 2004 Elsevier Inc. All rights reserved.
C1 Tunghai Univ, Dept Comp Sci & Informat Engn, Taichung 407, Taiwan.
   Tunghai Univ, Dept Stat, Taichung, Taiwan.
C3 Tunghai University; Tunghai University
RP Chang, WK (corresponding author), Tunghai Univ, Dept Comp Sci & Informat Engn, POB 5-809, Taichung 407, Taiwan.
EM wkc@mail.thu.edu.tw; sljeng@mail.thu.edu.tw
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   BENNETT JM, 1995, ASA P SECT SECT PHYS, P55
   Cai KY, 1998, J SYST SOFTWARE, V40, P93, DOI 10.1016/S0164-1212(97)00003-4
   Chang W.K., 1999, FESMA 99, P261
   CHANG WK, 2000, 7 WORKSH OBJ OR TECH, P633
   Chantre P, 2002, PHYTOMEDICINE, V9, P3, DOI 10.1078/0944-7113-00078
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1979, P COMPCON
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Kelly DP, 2000, INFORM SOFTWARE TECH, V42, P801, DOI 10.1016/S0950-5849(00)00124-5
   Kouchakdjian A, 2000, INFORM SOFTWARE TECH, V42, P809, DOI 10.1016/S0950-5849(00)00126-9
   Kuo L., 1995, Journal of Computational and Graphical Statistics, V4, P65
   LITTLEWOOD B, 1979, IEEE T RELIAB, V28, P241, DOI 10.1109/TR.1979.5220576
   LITTLEWOOD B, 2000, 22 INT C SOFTW ENG I, P177
   Mich L, 2003, IEEE MULTIMEDIA, V10, P34, DOI 10.1109/MMUL.2003.1167920
   Munson J., 1996, HDB SOFTWARE RELIABI, P493
   Pham H., 2000, SOFTWARE RELIABILITY
   Poore J, 2000, INFORM SOFTWARE TECH, V42, P825, DOI 10.1016/S0950-5849(00)00101-4
   Rodrigues J, 1998, COMMUN STAT-THEOR M, V27, P2165, DOI 10.1080/03610929808832220
   Satty T.L., 1980, ANAL HIERARCHY PROCE
   Sayre K, 2000, INFORM SOFTWARE TECH, V42, P845, DOI 10.1016/S0950-5849(00)00100-2
   Smidts C, 2002, J SYST SOFTWARE, V61, P213, DOI 10.1016/S0164-1212(01)00149-2
   Taylor HM, 1998, An Introduction to Stochastic Modeling, Vthird
   TRAMMELL CJ, 1995, P 7 ANN SOFTW TECHN
   WALTON GH, 1995, SOFTWARE PRACT EXPER, V25, P97, DOI 10.1002/spe.4380250106
   WANG TP, 2001, THESIS TUNGHAI U TAI
   WANG TP, 2000, P INT COMP S TAIW, P552
   Whittaker J, 2000, INFORM SOFTWARE TECH, V42, P889, DOI 10.1016/S0950-5849(00)00122-1
   WHITTAKER JA, 2000, IEEE COMPUT, P36
   WILSON AP, 2000, ROBUST BAYESIAN ANAL, P385
   Xie M., 1991, SOFTWARE RELIABILITY
   Yamada S, 1998, ELECTRON COMM JPN 2, V81, P33, DOI [10.1002/(SICI)1520-6440(199804)81:4<33::AID-ECJC4>3.0.CO;2-4, 10.1002/(SICI)1520-6432(199805)81:5<33::AID-ECJB5>3.0.CO;2-5]
   1998, TOOLSET CERTIFY
NR 33
TC 3
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2005
VL 76
IS 2
BP 99
EP 110
DI 10.1016/j.jss.2004.03.029
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 901XF
UT WOS:000227314900001
DA 2024-07-18
ER

PT J
AU Leung, CM
   Schormans, JA
AF Leung, CM
   Schormans, JA
TI Measurement-based end to end latency performance prediction for SLA
   verification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
AB End-to-end delay is one of the important metrics used to define perceived quality of service. Measurement is a fundamental tool of network management to assess the performance of the network. The conventional approach to measure the performance metrics is on an intrusive basis that may cause extra-burden to the network. In contrast to this, our scheme can be considered as nonintrusive. The main idea relies on the knowledge of the queuing behaviour. The queue length is non-intrusively monitored, and then we capture the parameters of the queue state distribution of every queue along the path in order to deduce the end-to-end delay performance. (C) 2004 Elsevier Inc. All rights reserved.
C1 Queen Mary Univ London, Dept Elect Engn, London E1 4NS, England.
C3 University of London; Queen Mary University London
RP Queen Mary Univ London, Dept Elect Engn, London E1 4NS, England.
EM jimmy.leung@elec.qmul.ac.uk; john.schormans@elec.qmul.ac.uk
CR *AG TECHN, 2000, PACK SON SDH POS FUN
   AIDA M, 2002, P 2002 S APPL INT WO
   [Anonymous], NETW SIM NS VERS 2
   Breslau L., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P1233, DOI 10.1109/INFCOM.2000.832506
   Chang C.-S., 2000, TELEC NETW COMP SYST
   COLE RG, 2000, FRAMEWORK ACTIVE PRO
   DUFFIELD N, 1998, APPL LARGE DEVIATION
   Eun DY, 2001, IEEE INFOCOM SER, P924, DOI 10.1109/INFCOM.2001.916284
   Gradshteyn I. S., 2014, Table of Integrals, Series, and Products
   Grossglauser M, 1999, IEEE ACM T NETWORK, V7, P629, DOI [10.1109/90.803379, 10.1145/248157.248159]
   Jamin S, 1997, IEEE INFOCOM SER, P973, DOI 10.1109/INFCOM.1997.631035
   KESIDIS G, 1999, SPIE C PERF CONTR NE
   LIU E, 2002, THESIS U LONDON
   OSTERBO O, 2002, APPROXIMATE METHOD C
   Pitts J.M., 2000, Introduction to IP and ATM Design and Performance, VSecond
   SEUNG YN, 2000, GLOBECOM 00, P1766
   Shalunov S., 2001, ONE WAY DELAY MEASUR
   STEWART RA, 2002, THESIS U LONDON
   Taqqu M. S., 1997, Computer Communication Review, V27, P5, DOI 10.1145/263876.263879
   *TEL FOR, 2001, SLA MAN HDB
   VERMA D, 1999, SUPPORT SERVICE LEVE
   VLEESCHAUWER D, 1995, B ISDN TEL MOD S FEB, P105
NR 22
TC 3
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB 1
PY 2005
VL 74
IS 3
BP 243
EP 254
DI 10.1016/j.jss.2003.12.031
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 872YV
UT WOS:000225246300002
DA 2024-07-18
ER

PT J
AU Miller, J
AF Miller, J
TI Statistical significance testing - a panacea for software technology
   experiments?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE empirical; hypothesis; replication
ID KNOWLEDGE; ECOLOGY
AB Empirical software engineering has a long history of utilizing statistical significance testing, and in many ways, it has become the backbone of the topic. What is less obvious is how much consideration has been given to its adoption. Statistical significance testing was initially designed for testing hypotheses in a very different area, and hence the question must be asked: does it transfer into empirical software engineering research? This paper attempts to address this question. The paper finds that this transference is far from straightforward, resulting in several problems in its deployment within the area. Principally problems exist in: formulating hypotheses, the calculation of the probability values and its associated cut-off value, and the construction of the sample and its distribution. Hence, the paper concludes that the topic should explore other avenues of analysis, in an attempt to establish which analysis approaches are preferable under which conditions, when conducting empirical software engineering studies. (C) 2003 Elsevier Inc. All rights reserved.
C1 Univ Alberta, Dept Elect & Comp Engn, STEAM Res Ctr, Edmonton, AB T6H 5M3, Canada.
C3 University of Alberta
RP Univ Alberta, Dept Elect & Comp Engn, STEAM Res Ctr, Edmonton, AB T6H 5M3, Canada.
EM jm@ece.ualberta.ca
CR [Anonymous], MUTLIMETHOD RES SYNT
   [Anonymous], 1987, Statistical Science, DOI [DOI 10.1214/SS/1177013238, 10.1214/ss/1177013238]
   [Anonymous], 1988, Statistical Decision Theory and Related Topics IV, DOI DOI 10.1007/978-1-4613-8768-8
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASILI VR, 1981, IEEE T SOFTWARE ENG, V7, P299, DOI 10.1109/TSE.1981.230841
   BECHHOFER RE, 1954, ANN MATH STAT, V25, P16, DOI 10.1214/aoms/1177728845
   BERGER JO, 1987, J AM STAT ASSOC, V82, P112, DOI 10.2307/2289131
   BERRY SM, 1995, 635 CARN MELL U DEPT
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   CARVER RP, 1978, HARVARD EDUC REV, V48, P378, DOI 10.17763/haer.48.3.t490261645281841
   Cohen J., 1988, STAT POWER ANAL BEHA
   CORNFIELD J, 1959, JNCI-J NATL CANCER I, V22, P173
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   GARDNER MJ, 1986, BMJ-BRIT MED J, V292, P746, DOI 10.1136/bmj.292.6522.746
   HILBORN R, 1982, ACTA BIOTHEOR, V31, P145, DOI 10.1007/BF01857238
   HONORTON C, 1985, REPEATABILITY PROBLE, P238
   Iman R.L., 1994, A data-based approach to statistics
   Jefferys WH., 1990, Journal of Scientific Exploration, V4, P153
   Jeffreys H., 1961, THEORY PROBABILITY
   Johnson DH, 1999, J WILDLIFE MANAGE, V63, P763, DOI 10.2307/3802789
   Lindley D., 1972, BAYESIAN STAT
   LINDLEY DV, 1957, BIOMETRIKA, V44, P187
   Matthews R, 1997, NEW SCI, V156, P36
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Nester MR, 1996, J R STAT SOC C-APPL, V45, P401
   NUNNALLY J, 1960, EDUC PSYCHOL MEAS, V20, P641, DOI 10.1177/001316446002000401
   Popper K., 2005, The logic of scientific discovery
   QUINN JF, 1983, AM NAT, V122, P602, DOI 10.1086/284161
   RAO KR, 1985, REPLICABILITY PROBLE, P22
   ROZEBOOM WW, 1960, PSYCHOL BULL, V57, P416, DOI 10.1037/h0042040
   SAMUELS M, 1993, SIMPSONS PARADOX REL, P81
   Schmidt FL, 1996, PSYCHOL METHODS, V1, P115, DOI 10.1037/1082-989X.1.2.115
   SEINDENFELD T, 1990, DECISIONS WITHOUT OR, P143
   SELKE T, 1999, 9913 DUK U I STAT DE
   SELVIN HC, 1966, AM STAT, V20, P20, DOI 10.2307/2681493
   SHAVER JP, 1993, J EXP EDUC, V61, P293, DOI 10.1080/00220973.1993.10806592
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Smith G., 1985, STAT REASONING
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 43
TC 24
Z9 25
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2004
VL 73
IS 2
BP 183
EP 192
DI 10.1016/j.jss.2003.12.019
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 849VZ
UT WOS:000223570800002
DA 2024-07-18
ER

PT J
AU Sohn, S
   Seong, P
AF Sohn, S
   Seong, P
TI Quantitative evaluation of safety critical software testability based on
   fault tree analysis and entropy
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software testability; software fault tree; entropy
AB One of the definitions for testability is the probability whether tests will detect a fault, given that a fault in the program exists. The testability can be estimated from the probability of each statement fault leading to output failure. The probability of the test detecting a fault depends on the probability of individual statement faults appearing as an output failure when a fault exists at a statement. The testability measure of the software has been introduced based on output failure probability and the entropy of the importance of basic statements to the output failure from the software fault tree analysis. The output failure probability and the importance of statements are calculated from software fault tree analysis. The Suggested testability measure has been applied to the two modules of the safety system in a nuclear power plant. The proposed testability measure can be used for the selection of output variables or to determine the modules that are more vulnerable to undetected faults. (C) 2003 Elsevier Inc. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Sohn, S (corresponding author), KOPEC, Dept Inst, Control,150 Dukjin Dong, Taejon 305600, South Korea.
EM sdsohn@kopec.co.kr; phseong@mail.kaist.ac.kr
RI Seong, Poong Hyun/C-2017-2011
CR *AECL, 1994, SDSI SOFTWARE HAZARD
   [Anonymous], 1949, MATH MODEL COMMUNICA
   Bertolino A, 1996, IEEE T SOFTWARE ENG, V22, P97, DOI 10.1109/32.485220
   CHA SS, 1988, 10 INT C SOFTW ENG, P377
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   *KNFC, 1988, FUNCTIONAL DESIGN RE
   LEVESON NG, 1983, IEEE T SOFTWARE ENG, V9, P569, DOI 10.1109/TSE.1983.235116
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   SEONG PH, 1987, THESIS MIT BOST MASS
   VOAS JM, 1993, J SYST SOFTWARE, V20, P207, DOI 10.1016/0164-1212(93)90064-5
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   WOLFE WA, 1978, FAULT TREE ANLA ATOM
NR 13
TC 11
Z9 17
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2004
VL 73
IS 2
BP 351
EP 360
DI 10.1016/j.jss.2003.10.028
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 849VZ
UT WOS:000223570800015
DA 2024-07-18
ER

PT J
AU Chan, JT
   Yang, W
   Huang, JW
AF Chan, JT
   Yang, W
   Huang, JW
TI Traps in Java
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Java; language design; language definition; object-oriented programming
AB Though the Java programming language was designed with extreme care, there are still a few ambiguities and irregularities left in the language. The ambiguities are those issues that are not defined clearly in the Java language specification. The different results produced by different compilers on several example programs justify our observations. The irregularities are issues that often confuse programmers. It is hard for a confused programmer to write robust programs. Furthermore, a few issues of the Java language are left intentionally open to the compiler writers. Their effects on Java programs are discussed. The problems of ambiguity, irregularity, and dependence on implementations frequently trap an incautious Java programmer. Some suggestions and solutions for the problems are provided in this paper. (C) 2003 Elsevier Inc. All rights reserved.
C1 Natl Chiao Tung Univ, Dept Comp & Informat Sci, Hsinchu 300, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Natl Chiao Tung Univ, Dept Comp & Informat Sci, 1001 Ta Hsueh Rd, Hsinchu 300, Taiwan.
EM maxchan@cis.nctu.edu.tw; wuuyang@cis.nctu.edu.tw;
   gis86809@cis.netu.edu.tw
CR Alexander RT, 2000, COMPUTER, V33, P4
   CHEN JT, 2002, COMPUTER LANGUAGES S, V28, P203
   DACONTA MC, 2000, JAVA PITFALLS TIME S
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gosling J., 2000, The Java Language Specification
   Gosling J., 1996, The Java Language Environment, A White Paper
   *IBM, 2001, VIS JAVA
   *IBM, 2001, JAVA DEV KITS
   *SUN MICR INC, 2001, JAVA2 PLATF STAND ED
   Thimbleby H, 1999, SOFTWARE PRACT EXPER, V29, P457, DOI 10.1002/(SICI)1097-024X(19990425)29:5<457::AID-SPE243>3.0.CO;2-5
   WALSH J, 1977, SOFTWARE PRACTICE EX, V7, P685
   Yang W, 2001, JOOP, V13, P12
NR 12
TC 1
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2004
VL 72
IS 1
BP 33
EP 47
DI 10.1016/S0164-1212(03)00040-2
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 815YQ
UT WOS:000221078000003
DA 2024-07-18
ER

PT J
AU Ding, HB
   Samadzadeh, MH
AF Ding, HB
   Samadzadeh, MH
TI Extraction of Java program fingerprints for software authorship
   identification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE authorship; fingerprint; Java; software
AB Computer programs belong to the authors who design, write, and test them. Authorship identification is concerned with determining the likelihood of a particular author having written some piece(s) of code, usually based on other code samples from the same programmer. Java is a popular object-oriented computer programming language. Programming fingerprints attempt to characterize the features that are unique to each programmer. In this study, we investigated the extraction of a set of software metrics of a given Java source code-by a program written in Visual C++-that could be used as a fingerprint to identify the author of the Java code. The contributions of the selected metrics to authorship identification were measured by a statistical process, namely canonical discriminant analysis, using the statistical software package SAS. Out of the 56 extracted metrics, 48 metrics were identified as being contributive to authorship identification. The authorship of 62.6-67.2% of the Java programs considered could be correctly identified with the extracted metrics. The identification rate could be as high as 85.8%, with derived canonical variates. Moreover, layout metrics played a more important role in authorship identification than the other metrics. (C) 2003 Elsevier Inc. All rights reserved.
C1 Oklahoma State Univ, Dept Comp Sci, Stillwater, OK 74078 USA.
C3 Oklahoma State University System; Oklahoma State University - Stillwater
RP Oklahoma State Univ, Dept Comp Sci, 218 MSCS, Stillwater, OK 74078 USA.
EM haibiao@cs.okstate.edu; samad@cs.okstate.edu
CR [Anonymous], 1964, Inference and disputed authorship: The Federalist
   BUDD T, 1999, C JAVA PROGRAMMERS
   Cha SH, 2000, FIFTH IEEE WORKSHOP ON APPLICATIONS OF COMPUTER VISION, PROCEEDINGS, P42, DOI 10.1109/WACV.2000.895401
   Daconta Michael C, 1996, JAVA C C PROGRAMMERS
   ELLIOTT W, 1991, NOTES QUERIES, V38, P501
   Gray A, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P252, DOI 10.1109/SEEP.1998.707658
   Gray Andrew., 1997, Proceedings of the 3rd Biannual Conference of the International Association of Forensic Linguists (LAFL), P1
   KILGOUR R, 1997, P 1997 INT C NEUR IN, P865
   KRSUL I, 1996, CSDTR96052 PURD U W
   MACDONELL SG, 1999, P 6 INT C NEUR INF D, V1, P66
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   OMAN P, 1989, P 17 ANN ACM COMP SC, P244
   OMAN PW, 1991, J SYST SOFTWARE, V15, P287, DOI 10.1016/0164-1212(91)90044-7
   Sallis P., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P481, DOI 10.1109/SEEP.1996.534037
   SALLIS P, 1994, NZ J COMPUTING, V5, P85
   *SAS, 1990, SAS STAT US GUID VER
   Spafford E. H., 1993, Computers & Security, V12, P585, DOI 10.1016/0167-4048(93)90055-A
NR 17
TC 40
Z9 50
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2004
VL 72
IS 1
BP 49
EP 57
DI 10.1016/S0164-1212(03)00049-9
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 815YQ
UT WOS:000221078000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cesário, W
   Gauthier, L
   Lyonnard, D
   Nicolescu, G
   Jerraya, AA
AF Cesário, W
   Gauthier, L
   Lyonnard, D
   Nicolescu, G
   Jerraya, AA
TI Object-based hardware/software component interconnection model for
   interface design in system-on-a-chip circuits
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
AB The design of system-on-a-chip (SoC) circuits requires the integration of complex hardware/software components that are customized to efficiently execute a specific application. Nowadays, these components include many different embedded processors executing concurrent software tasks. In this paper, we present an object-based component interconnection model to represent both hardware and software components within a system architecture in a very high level of abstraction. This model is used in a design flow for automatic generation of hardware/software interfaces for SoC circuits. Design tools for automatic generation of embedded operating systems, hardware interfaces and associated device drivers are presented and evaluated using the results obtained with a VDSL application. (C) 2003 Elsevier Inc. All rights reserved.
C1 TIMA Lab, F-38000 Grenoble, France.
   Inst Syst & Informat Technol, Momochihama, Japan.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
EM wander.cesario@imag.fr; lovic-gauthier@isit.or.jp; lyonnard@imag.fr;
   gabriela.nicolescu@imag.fr; ahmed.jerraya@imag.fr
RI Jerraya, Ahmed/R-2556-2019
CR ALEXANDER P, 2000, P 7 IEEE INT C WORKS
   BAGHADI A, 2001, P DES AUT TEST EUR M
   BUCK J, 2000, P 8 INT WORKSH HARDW
   *CAD DES SYST INC, 2001, P 12 IEEE INT WORKSH
   Chang H., 1999, SURVIVING SOC REVOLU
   CONNELL J, 2002, EARLY HW SW INTEGRAT
   Ernst R, 1999, IEEE COMP SOC ANN, P9, DOI 10.1109/IWV.1999.760458
   Ferretti A., 1999, Second International Workshop on ERS SAR Interferometry, 'FRINGE99', Liege, Belgium, 10-12 Nov 1999, P1
   Gajski D.D., 2000, SpecC: Specification Language and Methodology
   GARG P, 2001, P DES AUT TEST EUR M
   GAUTHIER L, 2001, P DES AUT TEST EUR D
   JERRAYA AA, 2001, APPL SPECIFIC MULTIP
   KEUTZER K, 1999, P IEEE INT C COMP DE
   KEUTZER K, 2000, IEEE T COMP AID DES, V19
   Lee E, 2000, M0012 UCBERL
   Lee E. A., 1999, M9940 UCBERL
   LENNARD C, 2000, P DES AUT TEST EUR C
   LYONNARD D, 2001, P DES AUT C DAC LAS
   MARTIN G, 1998, P DES AUT TEST EUR D
   Mestdagh DJG, 2000, IEEE COMMUN MAG, V38, P90, DOI 10.1109/35.841831
   Nicolescu G., 2001, P DES AUT TEST EUR D
   *RAT SOFTW CORP, UML UN MOD LANG
   SANGIOVANNIVINC.A, 2000, IEEE DESIGN TEST COM, V17
   SELIC B, 1994, REAL TIME OBJECT OR
   SIEGMUND R, 2002, IEEE DESIGN TEST COM, V19
   SVARSTAD K, 2001, P DES AUT TEST EUR D
   Verkest D., 1996, Design Automation for Embedded Systems, V1, P357, DOI 10.1007/BF00209910
   YOO S, 2001, INT S HW SW COD CODE
NR 28
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2004
VL 70
IS 3
BP 229
EP 244
DI 10.1016/S0164-1212(03)00071-2
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 774XR
UT WOS:000189012100002
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Teigen, KH
   Molokken, K
AF Jorgensen, M
   Teigen, KH
   Molokken, K
TI Better sure than safe? Over-confidence in judgement based software
   development effort prediction intervals
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID REGRESSION; ACCURACY; IMPACT
AB The uncertainty of a software development effort estimate can be indicated through a prediction interval (PI), i.e., the estimated minimum and maximum effort corresponding to a specific confidence level. For example, a project manager may be "90% confident" or believe that is it "very likely" that the effort required to complete a project will be between 8000 and 12,000 work-hours. This paper describes results from four studies (Studies A-D) on human judgement (expert) based PIs of software development effort. Study A examines the accuracy of the PIs in real software projects. The results suggest that the PIs were generally much too narrow to reflect the chosen level of confidence, i.e., that there was a strong over-confidence. Studies B-D try to understand the reasons for the observed over-confidence. Study B examines the possibility that the over-confidence is related to type of experience or estimation process. Study C examines the possibility that the concept of confidence level is difficult to interpret for software estimators. Finally, Study D examines the possibility that there are unfortunate feedback mechanisms that reward over-confidence. (C) 2003 Elsevier Inc. All rights reserved.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
   Univ Oslo, Dept Psychol, N-0317 Oslo, Norway.
C3 University of Oslo
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no; k.h.teigen@psykologi.uio.no;
   kjetilmo@ifi.uio.no
RI Jorgensen, Magne/H-4402-2016
CR Alpert M., 1982, Judgment Under Uncertainty: Heuristics and Biases, P294, DOI DOI 10.1017/CBO9780511809477.022
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P INT C PROJ MAN
   Arkes HR, 2001, INT SER OPER RES MAN, V30, P495
   BLATTBERG RC, 1990, MANAGE SCI, V36, P887, DOI 10.1287/mnsc.36.8.887
   Bongaarts John., 2000, Beyond Six Billion: Forecasting the World's Population. Panel on Population Projections
   BREHMER B, 1980, ACTA PSYCHOL, V45, P223, DOI 10.1016/0001-6918(80)90034-7
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Dawes RM., 1988, RATIONAL CHOICE UNCE
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   FEWSTER R, 2001, INT SOFTW METR S LON, P338
   FISCHHOFF B, 1975, J EXP PSYCHOL HUMAN, V1, P288, DOI 10.1037/0096-1523.1.3.288
   GRAY A, 1999, 6 INT SOFTW METR S I, P216
   Hammond K.R., 1996, Human judgement and social policy : Irreducible uncertainty, inevitable error, unavoidable injustice
   HENRION M, 1993, ORGAN BEHAV HUM DEC, V55, P207, DOI 10.1006/obhd.1993.1031
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   JORGENSE M, IRMA 2003 C
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   JORGENSEN M, 1997, NORW INF C VOSS NORW, P7
   JORGENSEN M, IN PRESS J INFORMATI
   KAHNEMAN D, 1993, MANAGE SCI, V39, P17, DOI 10.1287/mnsc.39.1.17
   Kahnemann D., 1982, JUDGEMENT UNCERTAINT
   Kansala K, 1997, IEEE SOFTWARE, V14, P61, DOI 10.1109/52.589236
   Keren G, 2001, PSYCHON B REV, V8, P191, DOI 10.3758/BF03196156
   Lichtenstein S., 1981, Calibration of Probabilities: The State of the Art to 1980
   McClelland A. G. R., 1994, SUBJECTIVE PROBABILI
   MCCONNEL S, 1998, SOFTWARE PROJECT SUR
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Moder J.J., 1995, PROJECT MANAGEMENT C, V3rd
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   *NASA SOFTW ENG LA, 1990, MAN HDB SOFTW DEV
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Wright G.E., 1994, SUBJECTIVE PROBABILI
   Yaniv I, 1997, J BEHAV DECIS MAKING, V10, P21, DOI 10.1002/(SICI)1099-0771(199703)10:1<21::AID-BDM243>3.0.CO;2-G
NR 37
TC 73
Z9 76
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2004
VL 70
IS 1-2
BP 79
EP 93
DI 10.1016/S0164-1212(02)00160-7
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 766MN
UT WOS:000188380300006
DA 2024-07-18
ER

PT J
AU Hwang, MS
   Yang, WP
AF Hwang, MS
   Yang, WP
TI Controlling access in large partially ordered hierarchies using
   cryptographic keys
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE access control cryptography; data security; hierarchy; key management
ID ASSIGNMENT SCHEME; OPTIMAL ALGORITHM; TREE HIERARCHY
AB The problem of access control in a hierarchy is present in many application areas. Since computing resources have grown tremendously, access control is more frequently required in areas such as computer networks, database management systems, and operating systems. Many schemes based on cryptography have been proposed to solve this problem. However, previous schemes need large values associated with each security class. In this paper, we propose a new scheme to solve this problem achieving the following two goals. One is that the number of keys is reduced without affecting the security of the system. The other goal is that when a security class is added to the system, we need only update a few keys of the related security classes with simple operations. (C) 2002 Elsevier Inc. All rights reserved.
C1 Chaoyang Univ Technol, Dept Informat Management, Taichung 413, Taiwan.
   Natl Chiao Tung Univ, Dept Comp & Informat Sci, Hsinchu 300, Taiwan.
C3 Chaoyang University of Technology; National Yang Ming Chiao Tung
   University
RP Hwang, MS (corresponding author), Chaoyang Univ Technol, Dept Informat Management, 168 Gifeng E Rd, Taichung 413, Taiwan.
CR AKL SG, 1983, ACM T COMPUT SYST, V1, P239, DOI 10.1145/357369.357372
   [Anonymous], INFORMATICA
   [Anonymous], CACM
   BELL D, 1975, ESDTR75306 HANSC AIR
   CHANDRASEKARAN R, 1992, IFDC SP PUB, V17, P3
   Chang CC, 1996, ELECTRON LETT, V32, P1365, DOI 10.1049/el:19960886
   CHANGCHIEN SW, IN PRESS INT J COMPU
   DeLaurentis J.M., 1984, CRYPTOLOGIA, V8, P253
   Denning D. E., 1984, Proceedings of the 1984 Symposium on Security and Privacy, P52
   Denning D. E., 1986, Proceedings of the 1986 IEEE Symposium on Security and Privacy (Cat. No.86CH2292-1), P156
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   FRAIM LJ, 1983, IEEE COMPUTER    JUL, P26
   Harn L., 1990, Computers & Security, V9, P539, DOI 10.1016/0167-4048(90)90132-D
   Hwang MS, 1999, COMPUT MATH APPL, V37, P19, DOI 10.1016/S0898-1221(99)00042-5
   Hwang MS, 1997, MATH COMPUT MODEL, V26, P27, DOI 10.1016/S0895-7177(97)00120-9
   Hwang MS, 2000, INFORM PROCESS LETT, V73, P97, DOI 10.1016/S0020-0190(00)00013-2
   Hwang MS, 1999, IEE P-COMPUT DIG T, V146, P219, DOI 10.1049/ip-cdt:19990552
   HWANG MS, 1993, ELECTRON LETT, V29, P2095, DOI 10.1049/el:19931400
   Hwang MS, 2000, INT J COMPUT MATH, V73, P463, DOI 10.1080/00207160008804909
   LIAW HT, 1993, COMPUT MATH APPL, V25, P109, DOI 10.1016/0898-1221(93)90305-F
   LIAW HT, 1993, BIT, V33, P46, DOI 10.1007/BF01990342
   LU WP, 1992, IEEE T COMMUN, V40, P658, DOI 10.1109/26.141416
   LU WP, 1988, P 1988 INFCOM NEW OR, P1095
   MACKINNON SJ, 1985, IEEE T COMPUT, V34, P797, DOI 10.1109/TC.1985.1676635
   McCullough D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P161
   McHugh J., 1986, Proceedings of the 1986 IEEE Symposium on Security and Privacy (Cat. No.86CH2292-1), P34
   MCILROY MD, 1992, SOFTWARE PRACT EXPER, V22, P673, DOI 10.1002/spe.4380220805
   SANDHU RS, 1988, INFORM PROCESS LETT, V27, P95, DOI 10.1016/0020-0190(88)90099-3
   Schneier B., 2015, APPL CRYPTOGRAPHY, VSecond
   Yeh J.H., 1998, P INT S INT TECHN, P54
NR 30
TC 24
Z9 31
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG 15
PY 2003
VL 67
IS 2
BP 99
EP 107
DI 10.1016/S0164-1212(02)00091-2
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 708DR
UT WOS:000184552300004
DA 2024-07-18
ER

PT J
AU Prechelt, L
   Unger, B
   Philippsen, M
   Tichy, W
AF Prechelt, L
   Unger, B
   Philippsen, M
   Tichy, W
TI A controlled experiment on inheritance depth as a cost factor for code
   maintenance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE controlled experiment; inheritance depth; maintenance; cost model
ID OBJECT-ORIENTED DESIGN; METRICS
AB In two controlled experiments we compare the performance on code maintenance tasks for three equivalent programs with 0, 3, and 5 levels of inheritance. For the given tasks, which focus on understanding effort more than change effort, programs with less inheritance were faster to maintain. Daly et al. previously reported similar experiments on the same question with quite different results. They found that the 5-level program tended to be harder to maintain than the 0-level program, while the 3-level program was significantly easier to maintain than the 0-level program. We describe the design and setup of our experiment, the differences to the previous ones, and the results obtained. Ours and the previous experiments are different in several ways: We used a longer and more complex program, made an inheritance diagram available to the subjects, and added a second kind of maintenance task.
   When taken together, the previous results plus ours suggest that there is no such thing as usefulness or harmfulness of a certain inheritance depth as such. Code maintenance effort is hardly correlated with inheritance depth, but rather depends on other factors (partly related to inheritance depth). Using statistical modeling, we identify the number of relevant methods to be one such factor. We use it to build an explanation model of average code maintenance effort that is much more powerful than a model relying on inheritance depth. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Univ Karlsruhe, Fak Informat, D-76128 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Tichy, W (corresponding author), Univ Karlsruhe, Fak Informat, Kaiserstr 12, D-76128 Karlsruhe, Germany.
OI Philippsen, Michael/0000-0002-3202-2904
CR [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 181998 U KARLSR FAK
   [Anonymous], 1993, MONOGR STAT APPL PRO
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Cartwright M, 1998, INFORM SOFTWARE TECH, V40, P795, DOI 10.1016/S0950-5849(98)00105-0
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Christensen L.B., 1994, EXPT METHODOLOGY, V6th
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   DALY J, 1996, THESIS U STRATHCLYDE
   DVORAK J, 1994, COMPUTER, V27, P59, DOI 10.1109/2.294856
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HARRISON R, 1999, P 3 INT C EMP ASS EV
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Sommerville I., 1992, SOFTWARE ENG, V4th
   WILDE N, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.207232
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
NR 16
TC 32
Z9 34
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB 15
PY 2003
VL 65
IS 2
BP 115
EP 126
DI 10.1016/S0164-1212(02)00053-5
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 693MC
UT WOS:000183720500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bombarda, A
   Gargantini, A
AF Bombarda, Andrea
   Gargantini, Angelo
TI Design, implementation, and validation of a benchmark generator for
   combinatorial interaction testing tools
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Combinatorial testing; Benchmarks; Test generators; Validation
AB Combinatorial testing is a widely adopted technique for efficiently detecting faults in software. The quality of combinatorial test generators plays a crucial role in achieving effective test coverage. Evaluating combinatorial test generators remains a challenging task that requires diverse and representative benchmarks. Having such benchmarks might help developers to test their tools, and improve their performance.For this reason, in this paper, we present BENCIGEN, a highly configurable generator of benchmarks to be used by combinatorial test generators, empowering users to customize the type of benchmarks generated, including constraints and parameters, as well as their complexity. An initial version of such a tool has been used during the CT-Competition, held yearly during the International Workshop on Combinatorial Testing. This paper describes the requirements, the design, the implementation, and the validation of BENCIGEN. Tests for the validation of BENCIGEN are derived from its requirements by using a combinatorial interaction approach. Moreover, we demonstrate the tool's ability to generate benchmarks that reflect the characteristics of real software systems.BENCIGEN not only facilitates the evaluation of existing generators but also serves as a valuable resource for researchers and practitioners seeking to enhance the quality and effectiveness of combinatorial testing methodologies.
C1 [Bombarda, Andrea; Gargantini, Angelo] Univ Bergamo, Dept Engn, Bergamo, Italy.
C3 University of Bergamo
RP Bombarda, A (corresponding author), Univ Bergamo, Dept Engn, Bergamo, Italy.
EM andrea.bombarda@unibg.it; angelo.gargantini@unibg.it
RI Bombarda, Andrea/AHB-9415-2022
OI Bombarda, Andrea/0000-0003-4244-9319
FU PNRR-ANTHEM (AdvaNced Technologies for HumancentrEd Medicine)
   [PNC0000003 - CUP: B53C22006700001-Spoke 1-Pilot 1.4]
FX This work has been partially funded by PNRR-ANTHEM (AdvaNced
   Technologies for HumancentrEd Medicine) - Grant PNC0000003 - CUP:
   B53C22006700001-Spoke 1-Pilot 1.4.
CR Ansotegui Carlos, 2023, arXiv
   Bombarda A, 2023, IEEE ICST WORKSHOP, P197, DOI 10.1109/ICSTW58534.2023.00044
   Bombarda A, 2022, IEEE ICST WORKSHOP, P74, DOI 10.1109/ICSTW55395.2022.00027
   Bombarda A, 2021, IEEE ICST WORKSHOP, P48, DOI 10.1109/ICSTW52544.2021.00021
   Bombarda Andrea, P 38 ACMSIGAPP S APP
   Bombarda Andrea, 2022, Ct-Competition 2022 page
   Bombarda Andrea, 2023, Ct-Competition 2023 GitHub page
   Cerquitelli T, 2023, COMPUT NETW, V230, DOI 10.1016/j.comnet.2023.109807
   Derks C, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111736
   Ferrer J, 2011, IFIP ADV INF COMM TE, V364, P378
   Gargantini Angelo, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P220, DOI 10.1007/978-3-319-13338-6_17
   Gargantini A, 2018, IEEE ICST WORKSHOP, P308, DOI 10.1109/ICSTW.2018.00066
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Hasselbring W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P365, DOI 10.1145/3463274.3463361
   Jin H, 2020, LECT NOTES COMPUT SC, V12543, P302, DOI 10.1007/978-3-030-64881-7_20
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   KARP RM, 1989, J ALGORITHM, V10, P429, DOI 10.1016/0196-6774(89)90038-2
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Microsoft Inc, 2023, PICT GitHub page
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Segall Itai, 2011, P 2011 INT S SOFTWAR
   Thum Thomas, 2020, P 24 ACM C SYSTEMS S
   Toda Takahisa, 2016, Journal of Experimental Algorithmics (JEA), V21, P1, DOI DOI 10.1145/2975585
   Tzoref-Brill R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P235, DOI 10.1145/3236024.3236067
   Wagner M, 2020, IEEE ICST WORKSHOP, P191, DOI 10.1109/ICSTW50294.2020.00041
   Younes Abdunnaser, 2005, P 7 ANN WORKSHOP GEN
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
NR 31
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2024
VL 209
AR 111920
DI 10.1016/j.jss.2023.111920
EA DEC 2023
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK9O8
UT WOS:001138940200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Song, J
   Bae, DH
AF Song, Jiyoung
   Bae, Doo-Hwan
TI Continuous verification with acknowledged MAPE-K pattern and time
   logic-based slicing: A platooning system of systems case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE System of systems; Continuous verification; MAPE-K pattern; PCTL; Model
   slicing
ID MANAGEMENT
AB A system of Systems (SoS) has emerged to achieve goals beyond the capabilities of a single system. Platooning is a representative SoS where vehicles are driven in a group for energy efficiency. A leader of a platoon can control followers, but the followers can also leave the platoon independently. During follower leave, energy efficiency and the independent operation of followers may conflict. To resolve the conflicts of the platooning SoS and operate safe platooning maneuvers, continuous verification of platooning is required. Continuous verification is performed repeatedly in a control loop that allows system monitoring and verification. However, there are two problems in the existing approaches: there are no suitable control loop patterns to support the resilient reconfiguration, and the SoS verification cost is high. We propose an approach, called continuous verification of platooning (CVP), that solves these two problems. CVP includes an acknowledged MAPE-K pattern for resilience and a fast and accurate slicing for low verification costs. The acknowledged MAPE-K pattern and slicing algorithm proposed in the paper can be independently used for other systems and models. In the case of the acknowledged MAPE-K pattern, we applied it to a mass casualty incident response SoS, which is another acknowledged type of SoS in the paper, and showed its effectiveness. Our experiments on CVP showed that the pattern reduced the incidence rate of 10 types of failure by 97.3%, and ensured the leave of followers. We also proved the correctness of slicing and demonstrated experimentally that it reduces the verification costs by 68.62. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board. (c) 2023 Elsevier Inc. All rights reserved.
C1 [Song, Jiyoung] Hannam Univ, Comp Engn, 70 Hannamro, Daejeon 34430, South Korea.
   [Bae, Doo-Hwan] Korea Adv Inst Sci & Technol KAIST, Sch Comp, 291 Daehak Ro, Daejeon 34141, South Korea.
C3 Hannam University; Korea Advanced Institute of Science & Technology
   (KAIST)
RP Song, J (corresponding author), Hannam Univ, Comp Engn, 70 Hannamro, Daejeon 34430, South Korea.
EM jysong@hnu.kr; bae@se.kaist.ac.kr
RI Song, Jiyoung/JPY-3535-2023
FU 2023 Hannam University Research Fund [2015-0-00250]
FX 4` This research was supported by (No. 2015-0-00250, (SW Star Lab)
   Software R&D for Model-based Analysis and Verification of Higher-order
   Large Complex System) supervised by the IITP (Institute of Information &
   Communications Technology Planning & Evaluation) . 4`4` This work was
   supported by 2023 Hannam University Research Fund.
CR Ali N, 2015, IEEE INT CONF MO, P407, DOI [10.1109/MobServ.2015.62, 10.1109/MS.2015.62]
   Alm Alexander M, 2006, AMIA Annu Symp Proc, P842
   Amoozadeh M, 2015, VEH COMMUN, V2, P110, DOI 10.1016/j.vehcom.2015.03.004
   Androutsopoulos K, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501667
   Androutsopoulos K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/1985793.1985834
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   [Anonymous], 1976, Algorithms and Complexity: New Directions and Recent Results
   Axelsson J, 2019, 2019 14TH ANNUAL CONFERENCE SYSTEM OF SYSTEMS ENGINEERING (SOSE), P113, DOI [10.1109/sysose.2019.8753887, 10.1109/SYSOSE.2019.8753887]
   Baresi Luciano, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P83, DOI 10.1109/ICWS.2013.21
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Chang TF, 1997, P ANN HICSS, P273, DOI 10.1109/HICSS.1997.663184
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   Colangelo D, 2006, LECT NOTES COMPUT SC, V4229, P243
   Cook T.S., 2007, 2007 IEEE INT C SYST, P1
   Cordeiro Lucas, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P160, DOI 10.1109/ECBS.2010.24
   Dahmann JS, 2008, 2008 2ND ANNUAL IEEE SYSTEMS CONFERENCE, P133
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Dobranszki Judit, 2017, ACAD QUESTIONS, V30, P65, DOI DOI 10.1007/S12129-017-9621-0
   Edwards G, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P142, DOI 10.1109/SEAMS.2009.5069083
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fujita M, 1997, FORM METHOD SYST DES, V10, P149, DOI 10.1023/A:1008647823331
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gambi A, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P10, DOI 10.1109/SEAMS.2009.5069069
   Georgiadis I., 2002, P 1 WORKSHOP SELF HE, P33, DOI DOI 10.1145/582128.582135.
   Ghezzi Carlo, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P3, DOI 10.1109/SEFM.2010.8
   Ghezzi Carlo, 2013, Software Engineering for Self-Adaptive Systems II, P191
   Grenfell Tower Inquiry, 2018, Fire Saf. Eng.
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hur CK, 2014, ACM SIGPLAN NOTICES, V49, P133, DOI [10.1145/2666356.2594303, 10.1145/2594291.2594303]
   Hyun S, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2023.111613
   Hyun S, 2021, IEEE I C SQRS-C, P506, DOI 10.1109/QRS-C55045.2021.00079
   Hyun S, 2019, ASIA PAC SOFWR ENG, P212, DOI 10.1109/APSEC48747.2019.00037
   Janowska A, 2006, FUND INFORM, V72, P181
   Jin MY, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1698, DOI 10.1145/3167132.3167426
   Kephart J., 2003, IBM White paper, P2
   Kim H., 2021, 2021 IEEE INT S AUT
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Kwiatkowska M., 2012, The PRISM benchmark suite
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lei C., 2011, 2011 11th International Conference on ITS Telecommunications (ITST), P381, DOI 10.1109/ITST.2011.6060086
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Logan DC, 2009, J EXP BOT, V60, P712, DOI 10.1093/jxb/erp043
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Mallozzi P, 2016, LECT NOTES COMPUT SC, V9823, P62, DOI 10.1007/978-3-319-45892-2_5
   Mignogna A, 2013, ELECTRON P THEOR COM, P67, DOI 10.4204/EPTCS.133.7
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Oquendo F, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P555, DOI [10.1109/SoSE50414.2020.9130553, 10.1109/sose50414.2020.9130553]
   Park S, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P2, DOI 10.1109/SESoS/WDES.2019.00009
   Raheja R, 2010, LECT NOTES COMPUT SC, V6090, P21, DOI 10.1007/978-3-642-14412-7_2
   Seo D, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P12, DOI [10.1109/SESoS.2016.011, 10.1145/2897829.2897833]
   Shen WF, 2014, J ZHEJIANG UNIV-SC B, V15, P1072, DOI 10.1631/jzus.B1400225
   Song J., 2022, Inf. Softw. Technol
   Sousa-Poza Andres, 2008, International Journal of Systems of Systems Engineering, V1, P1, DOI 10.1504/IJSSE.2008.018129
   Svenson P, 2021, 2021 16TH INTERNATIONAL SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE), P179, DOI 10.1109/SOSE52739.2021.9497474
   Svenson P, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P361, DOI [10.1109/sose50414.2020.9130539, 10.1109/SoSE50414.2020.9130539]
   Tim L., 2016, INSIGHT, V19, P55
   Tsugawa S, 2016, IEEE T INTELL VEHICL, V1, P68, DOI 10.1109/TIV.2016.2577499
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Vizcarrondo J, 2017, IEEE LAT AM T, V15, P1163, DOI 10.1109/TLA.2017.7932705
   Vromant Pieter., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. SEAMS 2011, P202, DOI DOI 10.1145/1988008.1988037
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Weyns D., 2013, INT WORKSHOP SOFTWAR, P47
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
NR 67
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2023
VL 206
AR 111840
DI 10.1016/j.jss.2023.111840
EA SEP 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T2LW7
UT WOS:001076359100001
DA 2024-07-18
ER

PT J
AU Khan, AA
   Ahmad, A
   Waseem, M
   Liang, P
   Fahmideh, M
   Mikkonen, T
   Abrahamsson, P
AF Khan, Arif Ali
   Ahmad, Aakash
   Waseem, Muhammad
   Liang, Peng
   Fahmideh, Mahdi
   Mikkonen, Tommi
   Abrahamsson, Pekka
TI Software architecture for quantum computing systems - A systematic
   review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Quantum computing; Quantum software engineering; Quantum software
   architecture; Systematic literature review
ID PROGRAMMING-LANGUAGES; DESIGN; CLASSIFICATION; GUIDELINES; AGREEMENT
AB Quantum computing systems rely on the principles of quantum mechanics to perform a multitude of computationally challenging tasks more efficiently than their classical counterparts. The architecture of software-intensive systems can empower architects who can leverage architecture-centric processes, practices, description languages to model, develop, and evolve quantum computing software (quantum software for short) at higher abstraction levels. We conducted a Systematic Literature Review (SLR) to investigate (i) architectural process, (ii) modelling notations, (iii) architecture design patterns, (iv) tool support, and (iv) challenging factors for quantum software architecture. Results of the SLR indicate that quantum software represents a new genre of software-intensive systems; however, existing processes and notations can be tailored to derive the architecting activities and develop modelling languages for quantum software. Quantum bits (Qubits) mapped to Quantum gates (Qugates) can be represented as architectural components and connectors that implement quantum software. Tool-chains can incorporate reusable knowledge and human roles (e.g., quantum domain engineers, quantum code developers) to automate and customise the architectural process. Results of this SLR can facilitate researchers and practitioners to develop new hypotheses to be tested, derive reference architectures, and leverage architecture-centric principles and practices to engineer emerging and next generations of quantum software.& COPY; 2023 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu 90014, Finland.
   [Ahmad, Aakash] Univ Lancaster, Sch Comp & Commun, D-04109 Leipzig, Germany.
   [Waseem, Muhammad; Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Fahmideh, Mahdi] Univ Southern Queensland, Sch Business, Toowoomba, Qld, Australia.
   [Mikkonen, Tommi; Abrahamsson, Pekka] Tampere Univ, Fac Informat Technol & Commun Sci, Tampere 33014, Finland.
C3 University of Oulu; Wuhan University; University of Southern Queensland;
   Tampere University
RP Khan, AA (corresponding author), Univ Oulu, Empir Software Engn Res Unit M3S, Oulu 90014, Finland.
EM arif.khan@oulu.fi; a.ahmad13@lancaster.ac.uk; m.waseem@whu.edu.cn;
   liangp@whu.edu.cn; mahdi.fahmideh@usq.edu.au; tommi.j.mikkonen@jyu.fi;
   pekka.abrahamsson@tuni.fi
RI Khan, Arif Ali/ABG-2862-2020
OI Khan, Arif Ali/0000-0002-8479-1481; Fahmideh, Mahdi/0000-0001-7196-7217
FU Academy of Finland [8582/31/2022]; Business Finland (project TORQS); 
   [DEQSE 349945]
FX This work has been supported by the Academy of Finland (project DEQSE
   349945) and Business Finland (project TORQS 8582/31/2022) .
CR Abbott BP, 2018, CLASSICAL QUANT GRAV, V35, DOI 10.1088/1361-6382/aaaafa
   Abreu Rui, 2021, ACM SIGSOFT SOFTW EN, V46, P30
   Abreu Rui, 2021, ACM SIGSOFT SOFTW EN, V46, P23
   Ali Shaukat, 2022, Communications of the ACM, V65, P84, DOI 10.1145/3512340
   Alreshidi A, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11070153
   [Anonymous], 2021, 900032018 ISOIECIEEE
   [Anonymous], 2022, QUANTUM COMPUTING RE
   [Anonymous], 2022, INTRO QUANTUM FLAGSH
   [Anonymous], 2022, 420102011 ISOIECIEEE
   Baczewski Andrew David, 2017, SAND20170164C
   Barzen J, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C), P94, DOI 10.1109/ICSA-C52384.2021.00024
   Barzen Johanna, 2022, IEEE INT C QUANT SOF
   Behera BK, 2019, QUANTUM INF PROCESS, V18, DOI 10.1007/s11128-019-2436-x
   Bertels K, 2021, IEEE MICRO, V41, P24, DOI 10.1109/MM.2021.3099195
   Biamonte J, 2017, NATURE, V549, P195, DOI 10.1038/nature23474
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Campos J, 2021, 2021 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON QUANTUM SOFTWARE ENGINEERING (Q-SE 2021), P28, DOI 10.1109/Q-SE52541.2021.00013
   Chen Lianping, 2010, 14 INT C EVALUATION
   Childs AM, 2018, P NATL ACAD SCI USA, V115, P9456, DOI 10.1073/pnas.1801723115
   Chong FT, 2017, NATURE, V549, P180, DOI 10.1038/nature23459
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Courtland R, 2017, IEEE SPECTRUM, V54, P9, DOI 10.1109/MSPEC.2017.7934217
   De Stefano M, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111326
   DEUTSCH D, 1985, P ROY SOC LOND A MAT, V400, P97, DOI 10.1098/rspa.1985.0070
   Dey N, 2020, Arxiv, DOI arXiv:2010.08053
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Diadamo Stephen, 2021, IEEE Transactions on Quantum Engineering, V2, DOI 10.1109/TQE.2021.3092395
   Dirac P., 1958, PRINCIPLES QUANTUM M
   Dorfman Merlin, 1997, SOFTWARE ENG
   Everitt MJ, 2016, INT C TRANS OPT NETW
   Fahmideh M, 2021, Arxiv, DOI arXiv:2102.10708
   Fahmideh M, 2021, Arxiv, DOI arXiv:2105.01881
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   García DP, 2023, Arxiv, DOI arXiv:2201.04093
   Garcia J, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P150, DOI 10.1109/ICSA51549.2021.00022
   Garhwal S, 2021, ARCH COMPUT METHOD E, V28, P289, DOI 10.1007/s11831-019-09372-6
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gay SJ, 2006, MATH STRUCT COMP SCI, V16, P581, DOI 10.1017/S0960129506005378
   Gill SS, 2022, SOFTWARE PRACT EXPER, V52, P66, DOI 10.1002/spe.3039
   Goled Shraddha, 2021, TOP COUNTRIES PUMPIN
   Graef Sebastian, 2021, ARXIV
   Grimsley HR, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-10988-2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He Zhang, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P56, DOI 10.1049/ic.2011.0007
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Khammassi N, 2022, ACM J EMERG TECH COM, V18, DOI 10.1145/3474222
   Khan A.A., 2022, arXiv
   Khan Arif Ali, 2022, REPLICATION PACKAGE
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kruger Tom, 2020, P IEEEACM 42 INT C S, P445, DOI DOI 10.1145/3387940.3391472
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lapedus Mark, 2021, GREAT QUANTUM COMPUT
   Leymann F, 2019, LECT NOTES COMPUT SC, V11413, P218, DOI 10.1007/978-3-030-14082-3_19
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Magnani Roberto, 2022, QUANTUM COMPUTING SK
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   McArdle S, 2020, REV MOD PHYS, V92, DOI 10.1103/RevModPhys.92.015003
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Microsoft, 2021, QUANTUM COMPUTING
   Miranskyy A, 2022, Arxiv, DOI arXiv:2203.03575
   Moguel Enrique, 2020, QCE, P5
   Moin A, 2022, Arxiv, DOI arXiv:2107.06708
   Montanaro A, 2016, NPJ QUANTUM INFORM, V2, DOI 10.1038/npjqi.2015.23
   Mosca M, 2018, IEEE SECUR PRIV, V16, P38, DOI 10.1109/MSP.2018.3761723
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Naveh Yehuda, 2021, QUANTUM SOFTWARE DEV
   Nguyen T, 2022, Arxiv, DOI arXiv:2211.13355
   Pérez J, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110657
   Pérez-Castillo R, 2022, COMPUTING, V104, P2375, DOI 10.1007/s00607-022-01091-4
   Perez-Castillo Ricardo, 2021, ARXIV
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   Pizard S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09953-9
   Rebentrost P, 2014, PHYS REV LETT, V113, DOI 10.1103/PhysRevLett.113.130503
   Sajjad M, 2020, IEEE T EMERG TOP COM, V8, P814, DOI 10.1109/TETC.2018.2791459
   Shepard Jeff, 2021, QUANTUM COMPUTING SY
   Sofge DA, 2008, SECOND INTERNATIONAL CONFERENCE ON QUANTUM-, NANO- AND MICRO-TECHNOLOGIES: ICQNM 2008, PROCEEDINGS, P66, DOI 10.1109/ICQNM.2008.15
   Stepney S, 2005, INT J PARALLEL EMERG, V20, P5, DOI 10.1080/17445760500033291
   Svore KM, 2006, COMPUTER, V39, P74, DOI 10.1109/MC.2006.4
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Wang XY, 2022, Arxiv, DOI arXiv:2204.08561
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Weder B., 2022, Quantum Software Engineering, P61, DOI DOI 10.1007/978-3-031-05324-54
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Xu XW, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P243, DOI 10.1109/ICSA.2017.33
   Ying M., 2016, Foundations of Quantum Programming
   Zanni Junior P.E., 2021, arXiv
   Zeilinger A, 1999, REV MOD PHYS, V71, pS288, DOI 10.1103/RevModPhys.71.S288
   Zhao Jianjun, 2020, arXiv
   Zhao PZ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1373, DOI 10.1109/ASE51524.2021.9678908
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 95
TC 10
Z9 10
U1 20
U2 29
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2023
VL 201
AR 111682
DI 10.1016/j.jss.2023.111682
EA APR 2023
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q0ER7
UT WOS:001054330900001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Ben Sassi, S
   Edded, S
   Mazo, R
   Ben Ghezala, H
   Salinesi, C
AF Ben Sassi, Sihem
   Edded, Sabrine
   Mazo, Raul
   Ben Ghezala, Henda
   Salinesi, Camille
TI Colla-Config: A stakeholders preferences-based approach for product
   lines collaborative configuration
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product lines; Collaborative configuration; Stakeholder
   preferences; Usability tool test
AB During collaborative configuration of software product lines (SPL), multiple stakeholders contribute together in building a single product specification. Conflicting situations can arise during the configu-ration process due to contradictions between some/all stakeholders' configuration choices. Detecting and resolving such situation rise two major challenges: choosing which choices to omit, and taking stakeholders' preferences into account. Several SPL collaborative configuration approaches are avail-able. However, they either do not present detailed information on the strategies for conflict resolution, or they rely on a systematic process that resolves conflicts by prioritizing configuration decisions made at earlier stage, constraining therefore some of stakeholders' choices. The lack of flexibility may hinder conflict resolution as choices taken at earlier stages overlay those at later phases. To mitigate these limitations, we propose a new collaborative configuration approach (Colla-Config) that provides a preference-based conflict resolution method within a free-order configuration process; each stakeholder expresses his/her preferences through a set of substitution rules, and freely makes his/her configuration decisions towards the desired product, without being constrained by the configuration decisions made by the other ones. To assess the feasibility and the usability of the proposed approach, we conducted a usability test designed following the ISO/IEC 25062:2006 Common Industry Format for usability tests. Results of the experiments provide preliminary evidence of the approach feasibility and the tool ability to properly support the SPL collaborative configuration. (c) 2022 Elsevier Inc. All rights reserved.
C1 [Ben Sassi, Sihem; Edded, Sabrine; Ben Ghezala, Henda] Manouba Univ, Natl Sch Comp Sci, RIADI Lab, Manouba, Tunisia.
   [Edded, Sabrine; Salinesi, Camille] Univ Paris 1 Pantheon Sorbonne, Ctr Rech Informat CRI, Paris, France.
   [Ben Sassi, Sihem] Univ Taibah, CBA, Al Madinah, Saudi Arabia.
   [Mazo, Raul] ENSTA Bretagne, Lab STICC, Brest, France.
   [Mazo, Raul] Univ Eafit, GIDITIC, Medellin, Colombia.
C3 Universite de la Manouba; Taibah University; ENSTA Bretagne; Universite
   de Bretagne Occidentale; Universidad EAFIT
RP Ben Sassi, S (corresponding author), Manouba Univ, Natl Sch Comp Sci, RIADI Lab, Manouba, Tunisia.
EM Henda.benghezala@ensi.rnu.tn; Sabrineedded@gmail.com;
   Raul.mazo@ensta-bretagne.fr; Henda.benghezala@ensi.rnu.tn;
   Camille.salinesi@univ-paris1.fr
RI Ben Ghezala, Henda Hajjami/AAK-7052-2021
OI Ben Ghezala, Henda Hajjami/0000-0002-6874-1388; Ben Sassi,
   Sihem/0000-0002-1925-4989
CR [Anonymous], 2009, P 42 IEEE ANN HAWAII
   [Anonymous], 2007, P 40 HAWAII INT C SY, DOI DOI 10.1109/HICSS.2007.27
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P16, DOI 10.1007/978-3-642-15579-6_2
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bevan N., 2006, Interactions, V13, P42, DOI 10.1145/1167948.1167976
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K., 2005, INT WORKSH SOFTW FAC, P16
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Donkers B, 2020, J MARKETING RES, V57, P1096, DOI 10.1177/0022243720956642
   Edded S, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110422
   Elfaki AO, 2009, STUD COMPUT INTELL, V253, P159, DOI 10.1007/978-3-642-05441-9_14
   Feichtinger K, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P25, DOI 10.1109/SEAA53835.2021.00012
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holl G, 2012, ASIA PAC SOFWR ENG, P137, DOI 10.1109/APSEC.2012.41
   Hubaux A, 2010, LECT NOTES COMPUT SC, V6182, P106, DOI 10.1007/978-3-642-14192-8_12
   Hvistendahl M, 2013, SCIENCE, V342, P1035, DOI 10.1126/science.342.6162.1035
   ISO/IEC, 2006, SOFTW ENG SOFTW PROD
   Junior C.M., 2011, P 14 IB AM C SOFTW E, P143
   Kang K. C., 1990, Technical Report
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Mazo, 2020, P INT C EV NOV APPR, P1, DOI DOI 10.5220/0009346102970304
   Mendonça M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P108
   Nieke M, 2022, SOFTW SYST MODEL, V21, P225, DOI 10.1007/s10270-021-00906-w
   Nielsen J, 2010, MORG KAUF SER INTER, P3, DOI 10.1016/B978-0-12-375114-0.00004-9
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Ochoa L., 2015, P 2015 ACM SIGPLAN I, P149, DOI DOI 10.1145/2814251.2814263
   Ochoa L, 2017, LECT NOTES COMPUT SC, V10034, P98, DOI 10.1007/978-3-319-55961-2_10
   Pereira JA, 2017, PROC IEEE ACM INT C, P94, DOI 10.1109/ICSE-C.2017.154
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Sagar K., 2017, International Journal of Information Technology, P1, DOI DOI 10.1007/S41870-017-0048-1
   Salinesi C., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P243, DOI 10.1109/RE.2010.36
   Sauro J., 2010, PRACTICAL GUIDE MEAS
   Sauro J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2347
   Shahin R, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P145, DOI 10.1109/MODELS50736.2021.00023
   Siegel R, 2012, CA-CANCER J CLIN, V62, P10, DOI 10.3322/caac.20138
   Soltani Samaneh., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V1, P56, DOI DOI 10.1145/2362536.2362548
   Stein J, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P132, DOI 10.1145/2648511.2648525
   Le VM, 2021, PROC IEEE ACM INT C, P266, DOI 10.1109/ICSE-Companion52605.2021.00123
   White J., 2009, AUTOMATED REASONING, P11
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Yanes N, 2017, J SYST SOFTWARE, V132, P283, DOI 10.1016/j.jss.2017.07.031
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
NR 44
TC 0
Z9 0
U1 2
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111586
DI 10.1016/j.jss.2022.111586
EA DEC 2022
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M8EC
UT WOS:000906883600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, AP
   Fang, LM
   Ge, CP
   Li, PJ
   Liu, Z
AF Zhang, Aiping
   Fang, Liming
   Ge, Chunpeng
   Li, Piji
   Liu, Zhe
TI Efficient transformer with code token learner for code clone detection
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code clone detection; Code token learner; Efficient transformer
AB Deep learning techniques have achieved promising results in code clone detection in the past decade. Unfortunately, current deep learning-based methods rarely explicitly consider the modeling of long codes. Worse, the code length is increasing due to the increasing requirement of complex functions. Thus, modeling the relationship between code tokens to catch their long-range dependencies is crucial to comprehensively capture the information of the code fragment. In this work, we resort to the Transformer to capture long-range dependencies within a code, which however requires huge computational cost for long code fragments. To make it possible to apply Transformer efficiently, we propose a code token learner to largely reduce the number of feature tokens in an automatic way. Besides, considering the tree structure of the abstract syntax tree, we present a tree-based position embedding to encode the position of each token in the input. Apart from the Transformer that captures the dependency within a code, we further leverage a cross-code attention module to capture the similarities between two code fragments. Our method significantly reduces the computational cost of using Transformer by 97% while achieves superior performance with state-of-the-art methods. Our code is available at https://github.com/ArcticHare105/Code-Token-Learner.(c) 2022 Elsevier Inc. All rights reserved.
C1 [Zhang, Aiping; Fang, Liming; Ge, Chunpeng; Li, Piji; Liu, Zhe] Nanjing Univ Aeronaut & Astronaut, Nanjing, Jiangsu, Peoples R China.
   [Fang, Liming] Nanjing Univ Aeronaut & Astronaut, Shenzhen Res Inst, Shenzhen, Guangdong, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics
RP Fang, LM (corresponding author), Nanjing Univ Aeronaut & Astronaut, Nanjing, Jiangsu, Peoples R China.; Fang, LM (corresponding author), Nanjing Univ Aeronaut & Astronaut, Shenzhen Res Inst, Shenzhen, Guangdong, Peoples R China.
EM zhangap@nuaa.edu.cn; fangliming@nuaa.edu.cn; gecp@nuaa.edu.cn;
   lipiji.pz@gmail.com; zhe.liu@nuaa.edu.cn
RI LIU, zhe/HGD-6875-2022; ZHANG, XUCHEN/KBB-7989-2024
FU National Key R&D Program of China [2021YFB3100700]; National Natural
   Science Foundation of China [62272228]; Shenzhen Science and Technology
   Program [JCYJ20210324134408023]
FX This work is supported by the National Key R&D Program of China (Grant
   No. 2021YFB3100700) , the National Natural Science Foundation of China
   (Grant No. 62272228) and Shenzhen Science and Technology Program (Grant
   No. JCYJ20210324134408023) .
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Baevski A., 2018, arXiv
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Baker BS, 1996, J COMPUT SYST SCI, V52, P28, DOI 10.1006/jcss.1996.0003
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Carion Nicolas, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12346), P213, DOI 10.1007/978-3-030-58452-8_13
   Chen T., 2021, arXiv, DOI DOI 10.48550/ARXIV.2109.10852
   Chirkova N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P703, DOI 10.1145/3468264.3468611
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dosovitskiy A, 2021, Arxiv, DOI arXiv:2010.11929
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Guo Daya, 2020, INT C LEARNING REPRE
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hua W, 2022, APPL INTELL, V52, P8895, DOI 10.1007/s10489-021-02894-2
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kingma D. P., 2014, arXiv
   Li MQ, 2021, Arxiv, DOI arXiv:1909.06865
   Li QM, 2018, AAAI CONF ARTIF INTE, P3538
   Liu Z, 2021, Arxiv, DOI [arXiv:2103.14030, DOI 10.48550/ARXIV.2103.14030]
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Paszke A, 2019, ADV NEUR IN, V32
   Radford A., 2019, LANGUAGE MODELS ARE
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Svyatkovskiy Alexey, 2020, ESEC/FSE 2020: Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1433, DOI 10.1145/3368089.3417058
   Tsung-Yi Lin, 2017, 2017 IEEE International Conference on Computer Vision (ICCV), P2999, DOI 10.1109/ICCV.2017.324
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Q, 2019, Arxiv, DOI [arXiv:1906.01787, DOI 10.48550/ARXIV.1906.01787]
   Wang WH, 2021, Arxiv, DOI arXiv:2102.12122
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang WH, 2020, Arxiv, DOI arXiv:2003.03238
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 45
TC 6
Z9 6
U1 2
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111557
DI 10.1016/j.jss.2022.111557
EA NOV 2022
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8Q1PA
UT WOS:000926985500010
DA 2024-07-18
ER

PT J
AU Sunman, N
   Soydan, Y
   Sözer, H
AF Sunman, Nezih
   Soydan, Yigit
   Sozer, Hasan
TI Automated Web application testing driven by pre-recorded test cases
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web application testing; Model-based testing; Test case generation; Test
   automation; Exploratory testing
AB There are fully automated approaches proposed for Web application testing. These approaches mainly rely on tools that explore an application by crawling it. The crawling process results in a state transition model, which is used for generating test cases. Although these approaches are fully automated, they consume too much time and they usually require manual configuration. This is due to the lack of insight and domain knowledge of crawling tools regarding the application under test. We propose a semi-automated approach instead. We introduce a tool that takes a set of recorded event sequences as input. These sequences can be captured during exploratory tests. They are replayed as pre-recorded test cases. They are also exploited for steering the crawling and test case generation process. We performed a case study with 5 Web applications. These applications were randomly tested with state-of-the-art tools. Our approach can reduce the crawling time by hours, while compromising the coverage achieved by 0.2% to 7.43%. In addition, our tool does not require manual configuration before crawling. The input for the tool was created within 15 min of exploratory testing. (c) 2022 Elsevier Inc. All rights reserved.
C1 [Sunman, Nezih] Siemens AS, Corparate Technol, Istanbul, Turkey.
   [Sunman, Nezih; Soydan, Yigit; Sozer, Hasan] Ozyegin Univ, Istanbul, Turkey.
C3 Siemens AG; Ozyegin University
RP Sözer, H (corresponding author), Ozyegin Univ, Nisantepe Mah Orman Sk 34-36, TR-34794 Istanbul, Turkey.
EM nezih.sunman@ozu.edu.tr; yigit.soydan@ozu.edu.tr;
   hasan.sozer@ozyegin.edu.tr
RI Sözer, Hasan/A-4722-2015
OI Sözer, Hasan/0000-0002-2968-4763
CR [Anonymous], 1990, Software testing techniques {
   Bach J, 2003, Exploratory testing explained
   Benjamin K, 2011, LECT NOTES COMPUT SC, V6757, P74, DOI 10.1007/978-3-642-22233-7_6
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Biagiola M, 2020, IEEE INT CONF SOFTW, P175, DOI 10.1109/ICST46399.2020.00027
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Biagiola M, 2017, LECT NOTES COMPUT SC, V10452, P18, DOI 10.1007/978-3-319-66299-2_2
   Choudhary Suryakant, 2013, Web Engineering. 13th International Conference, ICWE 2013. Proceedings: LNCS 7977, P291, DOI 10.1007/978-3-642-39200-9_25
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Dimeshift, 2021, DIMESHIFT EASIEST WA
   Dincturk Mustafa Emre, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P362, DOI 10.1007/978-3-642-31753-8_29
   Fard A. M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE'14, P67, DOI 10.1145/2642937.2642991
   Fard A. M., 2013, PROC IEEE 24 INT S S, P278
   Fenton N., 2015, Software Metrics: A Rigorous and Practical Approach
   Gebizli CS, 2017, SOFTWARE QUAL J, V25, P979, DOI 10.1007/s11219-016-9338-2
   Gebizli CS, 2017, IEEE ICST WORKSHOP, P23, DOI 10.1109/ICSTW.2017.8
   Hetzel W.C., 1991, COMPLETE GUIDE SOFTW
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J, 2016, IEEE SOFTWARE, V33, P90, DOI 10.1109/MS.2015.85
   Le Breton G, 2014, IEEE INT C ENG COMP, P81, DOI 10.1109/ICECCS.2014.20
   Leotta M, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P449, DOI 10.1109/ISSREW.2014.17
   Malik Qaisar A., 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P291, DOI 10.1109/ECBS.2010.41
   Massol Vincent., 2003, JUNIT ACTION
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   PetClinic, 2021, ANGULAR VERSION SPRI
   Phoenix, 2021, PHOENIX TRELLO TRIBU
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   RetroBoard, 2021, RETROSPECTIVE BOARD
   Splittypie, 2021, SPLITTYPIE EASY EXPE
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Weissleder S., 2010, INFORMATIK 2010 SERV, V2, P321
   Yandrapally R, 2020, PROC INT CONF SOFTW, P186, DOI 10.1145/3377811.3380416
NR 34
TC 5
Z9 5
U1 1
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2022
VL 193
AR 111441
DI 10.1016/j.jss.2022.111441
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D3TQ8
UT WOS:000967989300008
DA 2024-07-18
ER

PT J
AU Zhou, Y
   Shen, JJ
   Zhang, XQ
   Yang, WH
   Han, TT
   Chen, TL
AF Zhou, Yu
   Shen, Juanjuan
   Zhang, Xiaoqing
   Yang, Wenhua
   Han, Tingting
   Chen, Taolue
TI Automatic source code summarization with graph attention networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Source code summarization; Recurrent neural network; Graph neural
   network
ID PROGRAM; COMPREHENSION; CONTEXT
AB Source code summarization aims to generate concise descriptions for code snippets in a natural language, thereby facilitates program comprehension and software maintenance. In this paper, we propose a novel approach-GSCS-to automatically generate summaries for Java methods, which leverages both semantic and structural information of the code snippets. To this end, GSCS utilizes Graph Attention Networks to process the tokenized abstract syntax tree of the program, which employ a multi-head attention mechanism to learn node features in diverse representation sub-spaces, and aggregate features by assigning different weights to its neighbor nodes. GSCS further harnesses an additional RNN-based sequence model to obtain the semantic features and optimizes the structure by combining its output with a transformed embedding layer. We evaluate our approach on two widely adopted Java datasets; the experiment results confirm that GSCS outperforms the state-of-the-art baselines. (c) 2022 Elsevier Inc. All rights reserved.
C1 [Zhou, Yu; Shen, Juanjuan; Zhang, Xiaoqing; Yang, Wenhua] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Han, Tingting; Chen, Taolue] Birkbeck Univ London, Dept Comp Sci, London, England.
   [Zhou, Yu; Yang, Wenhua; Chen, Taolue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; University of London;
   Birkbeck University London; Nanjing University
RP Chen, TL (corresponding author), Birkbeck Univ London, Dept Comp Sci, London, England.
EM t.chen@bbk.ac.uk
RI HAN, TINGTING/GQZ-8692-2022
OI Chen, Taolue/0000-0002-5993-1665
FU National Natural Science Foundation of China (NSFC) [61972197]; Natural
   Science Foundation of Jiangsu Province, China [BK20201292];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization, China; Qing Lan Project, China; Birkbeck BEI School
   Project (EFFECT) , China; NSFC, China [61872340, 62072309]; EPSRC
   [EP/P015387/1] Funding Source: UKRI
FX This work was partially supported by the National Natural Science
   Foundation of China (NSFC, No. 61972197) , the Natural Science
   Foundation of Jiangsu Province, China (No. BK20201292) , the
   Collaborative Innovation Center of Novel Software Tech-nology and
   Industrialization, China, and the Qing Lan Project, China. T. Chen is
   partially supported by Birkbeck BEI School Project (EFFECT) , China and
   NSFC, China grant (No. 61872340, No. 62072309) .
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2016, PR MACH LEARN RES, V48
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Cho K., 2014, ARXIV14061078
   Chung J., 2014, NIPS 2014 WORKSH DEE
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Duan JJ, 2020, 2020 3RD INTERNATIONAL CONFERENCE ON SMART BLOCKCHAIN (SMARTBLOCK), P137, DOI 10.1109/SmartBlock52591.2020.00032
   Fernandes P., 2018, ARXIV181101824 CORR
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Han Y, 2020, IEEE ACCESS, V8, P21314, DOI 10.1109/ACCESS.2020.2969473
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain Hamel, 2019, CoRR abs/1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kingma D. P., 2014, arXiv
   Kipf TN, 2017, INT C LEARN REPR
   Leclair A., 2019, Recommendations for datasets for source code summarization
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Lv JH, 2020, 11TH IEEE INTERNATIONAL CONFERENCE ON KNOWLEDGE GRAPH (ICKG 2020), P157, DOI 10.1109/ICBK50248.2020.00032
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shido Y, 2019, IEEE IJCNN
   Song XT, 2019, IEEE ACCESS, V7, P111411, DOI 10.1109/ACCESS.2019.2931579
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Sutskever I, 2014, ADV NEUR IN, V27
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic Petar, 2017, ARXIV171010903, DOI DOI 10.48550/ARXIV.1710.10903
   Wei BL, 2019, ADV NEUR IN, V32
   Wilcoxon F., 2010, ANN NEW YORK ACAD SC, V52, P808
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Xia X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P584, DOI 10.1145/3180155.3182538
   Xia Y., 2016, Dual learning for machine translation; advances in neural information processing systems (NIPS)
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhou Y, 2019, J SYST SOFTWARE, V156, P328, DOI 10.1016/j.jss.2019.07.087
   Zugner Daniel, INT C LEARN REPR
NR 49
TC 15
Z9 17
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2022
VL 188
AR 111257
DI 10.1016/j.jss.2022.111257
EA MAR 2022
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N9EY
UT WOS:000783133900006
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Brataas, G
   Martini, A
   Hanssen, GK
   Ræder, G
AF Brataas, Gunnar
   Martini, Antonio
   Hanssen, Geir Kjetil
   Raeder, Georg
TI Agile elicitation of scalability requirements for open systems: A case
   study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Performance requirements; Software performance engineering; Agile
   software development; Non-functional requirements; Open systems; Design
   science; Quality requirements; Requirements engineering; Workload
   charaterization
ID ENGINEERING PRACTICES
AB Eliciting scalability requirements during agile software development is complicated and poorly described in previous research. This article presents a lightweight artifact for eliciting scalability requirements during agile software development: the ScrumScale model. The ScrumScale model is a simple spreadsheet. The scalability concepts underlying the ScrumScale model are clarified in this design science research, which also utilizes coordination theory. This paper describes the open banking case study, in which a legacy banking system becomes open. This challenges the scalability of this legacy system. The first step in understanding this challenge is to elicit the new scalability requirements. In the open banking case study, key stakeholders from TietoEVRY spent 55 h eliciting the scalability requirements of TietoEVRY's open banking project. According to TietoEVRY, the ScrumScale model provided a systematic way of producing scalability requirements. For TietoEVRY, the scalability concepts behind the ScrumScale model also offered significant advantages in dialogs with other stakeholders. (C) 2021 The Authors. Published by Elsevier Inc.
C1 [Brataas, Gunnar; Hanssen, Geir Kjetil] SINTEF Digital, POB 4760, NO-7465 Trondheim, Norway.
   [Martini, Antonio] Univ Oslo, Oslo, Norway.
   [Raeder, Georg] TietoEVRY, Fornebu, Norway.
C3 SINTEF; University of Oslo
RP Brataas, G (corresponding author), SINTEF Digital, POB 4760, NO-7465 Trondheim, Norway.
EM Gunnar.Brataas@sintef.no
OI Brataas, Gunnar/0000-0003-4130-3991
FU Research Council of Norway [256669, 285542, 309811]
FX The research leading to these results has received funding from the
   Research Council of Norway; ScrumScale: Scalability in Agile Software
   Development (grant #256669) , SMED: Smarter In-novation with Digital
   Transformation of Innovative Procurement (grant #285542) , and CapGuard:
   Capacity Guard of Public Digital Services (grant #309811) . We thank
   TietoEVRY for its hospitality, which made this case study possible
   through access to this business' critical open banking project and to
   critical stakeholders and vital documentation.
CR Aldave A, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110396
   Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Becker Steffen, 2017, Engineering Scalable, Elastic, and Cost-Efficient Cloud Computing Applications: The CloudScale Method
   Behutiye W, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106225
   Bellomo S., 2014, Cutter IT Journal, V27, P12
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bourque P., 2014, SWEBOK GUIDE SOFTWAR
   Brataas G., 2021, 2020 2 INT C SOC AUT, DOI [10.1109/SA51175.2021.9507110, DOI 10.1109/SA51175.2021.9507110]
   Brataas G., 2017, ICPE ACM SPEC INT C, P413, DOI 10.1145/3030207.3030240
   Brataas G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P285, DOI 10.1109/ICAC.2017.34
   Brataas G, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P17, DOI 10.1145/3185768.3186302
   Brataas G, 2020, IEEE SOFTWARE, V37, P77, DOI 10.1109/MS.2019.2923184
   Brataas G, 2018, LECT NOTES BUS INF P, V314, P248, DOI 10.1007/978-3-319-91602-6_17
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Clarke Victoria, 2015, Qualitative psychology: a practical guide to research methods, V3rd, DOI 10.1080/17439760.2016.1262613
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Ghanbari H, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3177746
   Hanssen GK, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P48, DOI 10.1109/TechDebt.2019.00014
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jogalakar P., 2000, IEEE T PARALL DISTR, V11
   KRAVITZ DA, 1986, J PERS SOC PSYCHOL, V50, P936, DOI 10.1037/0022-3514.50.5.936
   Lehrig S, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P83, DOI 10.1145/2737182.2737185
   Mårtensson T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P131, DOI 10.1109/ICSA.2019.00022
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2016.31
   Medeiros J, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106194
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Poort ER, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P2, DOI 10.1109/WICSA.2011.11
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rygg K.H., 2013, INT C PERF ENG, P125, DOI [10.1145/2479871.2479890, DOI 10.1145/2479871.2479890]
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Wohlrab R, 2014, INT REQUIR ENG CONF, P344, DOI 10.1109/RE.2014.6912285
   Wong LR, 2017, J ENG SCI TECHNOL, V12, P296
NR 39
TC 7
Z9 7
U1 4
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2021
VL 182
AR 111064
DI 10.1016/j.jss.2021.111064
EA SEP 2021
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WC1XH
UT WOS:000704056400001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Alabdulatif, A
AF Alabdulatif, Abdulatif
TI Practical hybrid confidentiality-based analytics framework with Intel
   SGX
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing; Data confidentiality; Data clustering; Intel SGX;
   Internet of Things
ID ENCRYPTION
AB Massive cloud infrastructure capabilities, including efficient, scalable, and elastic computing resources, have led to a widespread adoption of Internet of Things (IoT) cloud-enabled services. This involves giving complete control to cloud service providers (CSPs) of sensitive IoT data by moving data storage and processing in cloud. An efficient and lightweight advanced encryption standard (AES) cryptosystem can play a major role in protecting IoT data from exposure to CSPs by protecting the privacy of outsourced data. However, AES lacks computation capabilities, which is a critical factor that prevents individuals and organizations from taking full advantage of cloud computing services. When Intel software guard extensions (SGX) is used with AES cryptosystem, the developing framework can provide a practical solution to build a confidentiality-based data analytics framework for IoT-enabled applications in various domains. In this paper, a privacy-preserving data analytics framework is developed that relies on a hybrid-integrated approach, in which both software- and hardware-based solutions are applied to ensure confidentiality and process-sensitive outsourced data in the cloud environment. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Alabdulatif, Abdulatif] Qassim Univ, Dept Comp Sci, Buraydah 51452, Saudi Arabia.
C3 Qassim University
RP Alabdulatif, A (corresponding author), Qassim Univ, Dept Comp Sci, Buraydah 51452, Saudi Arabia.
EM ab.alabdulatif@qu.edu.sa
RI Alabdulatif, Abdulatif/V-1395-2019
OI Alabdulatif, Abdulatif/0000-0002-3167-8020
CR Agrawal R, 2000, SIGMOD REC, V29, P439, DOI 10.1145/335191.335438
   Arnautov S, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P689
   Atallah MJ, 2001, ADV COMPUT, V54, P215
   Backes Michael, 2013, P 2013 ACM SIGSAC C, P863
   Chadwick DW, 2012, J COMPUT SYST SCI, V78, P1359, DOI 10.1016/j.jcss.2011.12.019
   Chen GX, 2020, IEEE SECUR PRIV, V18, P28, DOI 10.1109/MSEC.2019.2963021
   Daemen J., 2020, INFORM SECURITY CRYP, VSecond
   Doganay M.C., 2008, Proceedings of the 2008 international workshop on Privacy and anonymity in information society, P3, DOI DOI 10.1145/1379287.1379291
   Du W., 2003, P 9 ACM SIGKDD INT C, P505
   Duan Y., 2014, LARGE SCALE DATA ANA, P219
   ELGAMAL T, 1985, IEEE T INFORM THEORY, V31, P469, DOI 10.1109/TIT.1985.1057074
   Flexera, 2019, CLOUD COMPUTING TREN
   Fränti P, 2006, PATTERN RECOGN, V39, P761, DOI 10.1016/j.patcog.2005.09.012
   Gentry C, 2011, LECT NOTES COMPUT SC, V6632, P129, DOI 10.1007/978-3-642-20465-4_9
   Goldreich Oded, 2005, Foundations and Trends in Theoretical Computer Science, V1, P1, DOI 10.1561/0400000001
   Grobauer B, 2011, IEEE SECUR PRIV, V9, P50, DOI 10.1109/MSP.2010.115
   Hunt T, 2018, ACM T COMPUT SYST, V35, DOI 10.1145/3231594
   Inan A, 2007, DATA KNOWL ENG, V63, P646, DOI 10.1016/j.datak.2007.03.015
   Langenberg B., 2020, IEEE Transactions on Quantum Engineering, V1, P1, DOI 10.1109/TQE.2020.2965697
   Li J, 2014, IEEE T PARALL DISTR, V25, P2201, DOI 10.1109/TPDS.2013.271
   McKeen F., 2013, HARDWARE ARCHITECTUR
   Murdock K, 2020, P IEEE S SECUR PRIV, P1466, DOI 10.1109/SP40000.2020.00057
   Nechvatal J, 2001, J RES NATL INST STAN, V106, P511, DOI 10.6028/jres.106.023
   Ohrimenko O, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P619
   Oleksenko O, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P227
   Orenbach M, 2020, PROCEEDINGS OF THE FIFTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS'20), DOI 10.1145/3342195.3387541
   Oukili S., 2017, 2017 INT S NETWORKS, P1
   Patel S.J., 2015, INT J NETW SECUR, V17, P328
   Ren K, 2012, IEEE INTERNET COMPUT, V16, P69, DOI 10.1109/MIC.2012.14
   RIVEST RL, 1978, COMMUN ACM, V21, P120, DOI [10.1145/359340.359342, 10.1145/357980.358017]
   Rupanagudi SR, 2019, INT CONF KNOWL SMART, P181, DOI [10.1109/KST.2019.8687545, 10.1109/kst.2019.8687545]
   Sasy Sajin, 2018, NDSS 18
   Schuster F, 2015, P IEEE S SECUR PRIV, P38, DOI 10.1109/SP.2015.10
   Sundareswaran S, 2012, IEEE T DEPEND SECURE, V9, P556, DOI 10.1109/TDSC.2012.26
   Wang J, 2010, C HUM SYST INTERACT, P472, DOI 10.1109/HSI.2010.5514526
   Zheng WT, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P283
   Zhou M, 2011, IEEE INT CONF TRUST, P83, DOI 10.1109/TrustCom.2011.14
   Zissis D, 2012, FUTURE GENER COMP SY, V28, P583, DOI 10.1016/j.future.2010.12.006
NR 38
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2021
VL 181
AR 111045
DI 10.1016/j.jss.2021.111045
EA AUG 2021
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO6EH
UT WOS:000694786100019
DA 2024-07-18
ER

PT J
AU Rani, P
   Panichella, S
   Leuenberger, M
   Di Sorbo, A
   Nierstrasz, O
AF Rani, Pooja
   Panichella, Sebastiano
   Leuenberger, Manuel
   Di Sorbo, Andrea
   Nierstrasz, Oscar
TI How to identify class comment types? A multi-language approach for class
   comment classification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Natural language processing technique; Code comment analysis; Software
   documentation
ID TRACEABILITY LINKS; CLASSIFIERS; CODE
AB Most software maintenance and evolution tasks require developers to understand the source code of their software systems. Software developers usually inspect class comments to gain knowledge about program behavior, regardless of the programming language they are using. Unfortunately, (i) different programming languages present language-specific code commenting notations and guidelines; and (ii) the source code of software projects often lacks comments that adequately describe the class behavior, which complicates program comprehension and evolution activities.
   To handle these challenges, this paper investigates the different language-specific class commenting practices of three programming languages: Python, Java, and Smalltalk. In particular, we systematically analyze the similarities and differences of the information types found in class comments of projects developed in these languages. We propose an approach that leverages two techniques - namely Natural Language Processing and Text Analysis - to automatically identify class comment types, i.e., the specific types of semantic information found in class comments. To the best of our knowledge, no previous work has provided a comprehensive taxonomy of class comment types for these three programming languages with the help of a common automated approach.
   Our results confirm that our approach can classify frequent class comment information types with high accuracy for the Python, Java, and Smalltalk programming languages. We believe this work can help in monitoring and assessing the quality and evolution of code comments in different programming languages, and thus support maintenance and evolution tasks. (C) 2021 The Authors. Published by Elsevier Inc.
C1 [Rani, Pooja; Leuenberger, Manuel; Nierstrasz, Oscar] Univ Bern, Software Composit Grp, Bern, Switzerland.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Di Sorbo, Andrea] Univ Sannio, Dept Engn, Benevento, Italy.
C3 University of Bern; Zurich University of Applied Sciences; University of
   Sannio
RP Rani, P (corresponding author), Univ Bern, Software Composit Grp, Bern, Switzerland.
EM pooja.rani@inf.unibe.ch; panc@zhaw.ch; manuel.Leuenberger@inf.unibe.ch;
   disorbo@unisannio.it; oscar.nierstrasz@inf.unibe.ch
OI Di Sorbo, Andrea/0000-0002-3192-739X; Panichella,
   Sebastiano/0000-0003-4120-626X; , Pooja Rani/0000-0001-5127-4042
FU Swiss National Science Foundation for the project "Agile Software
   Assis-tance" (SNSF) [200020-181973]
FX We gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the project "Agile Software Assis-tance" (SNSF
   project No. 200020-181973, Feb. 1, 2019-April 30, 2022) . We also thank
   Ivan Kravchenko for helping us to extract the data for Java and Python.
CR Alexandre LA, 2001, PATTERN RECOGN LETT, V22, P1283, DOI 10.1016/S0167-8655(01)00073-3
   [Anonymous], 26 IEEE INT C SOFTW
   [Anonymous], 1983, P GUIDE 48
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2013, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2013.32
   Binkley D, 2013, PROC IEEE INT CONF S, P432, DOI 10.1109/ICSM.2013.65
   Choi N, 2006, SIGMOD REC, V35, P34, DOI 10.1145/1168092.1168097
   Cioch FA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P286, DOI 10.1109/ICSM.1996.565018
   Cline A, 2015, AGILE DEV REAL WORLD, P221
   Curiel A., 2013, SHORT PAPERS ASS COM, P328
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Dogan T, 2020, J INFORMETR, V14, DOI 10.1016/j.joi.2020.101076
   Euzenat J., 2001, WORKSHOP ONTOL INF S, V47, P19
   Farooq M., 2015, J QUAL TECHNOL MANAG, V10
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Fucci D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/3338906.3338943
   Gall H.C., 2019, IEEE T SOFTWARE ENG
   Geist V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P622, DOI [10.1109/SANER48275.2020.9054838, 10.1109/saner48275.2020.9054838]
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Goldstein I.P., 1980, P 1980 ACM C LISP FU, P75, DOI [10.1145/800087.802792, DOI 10.1145/800087.802792]
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Jingyi Zhang, 2018, Web Information Systems and Applications. 15th International Conference, WISA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11242), P39, DOI 10.1007/978-3-030-02934-0_4
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   LOVINS JB, 1968, MECH TRANSL, V11, P22
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Misra V, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P110, DOI 10.1145/3341105.3374009
   Moreno L, 2017, PROC IEEE ACM INT C, P511, DOI 10.1109/ICSE-C.2017.169
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Müller SC, 2013, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSM.2013.40
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P1418, DOI 10.1007/s10664-018-9664-z
   Nurvitadhi E., 2003, 33 ANN FRONT ED 2003, V1
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rajlich V, 2000, IEEE SOFTWARE, V17, P102, DOI 10.1109/52.877875
   Rani P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09981-5
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Scowen R. S., 1974, Software - Practice and Experience, V4, P181, DOI 10.1002/spe.4380040211
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Tan L., 2007, HOTOS
   Triola M, 2014, Elementary Statistics, V12th
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
   Yu Hai, 2016, Journal of Computer Applications, V36, P3448, DOI 10.11772/j.issn.1001-9081.2016.12.3448
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 65
TC 22
Z9 24
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2021
VL 181
AR 111047
DI 10.1016/j.jss.2021.111047
EA JUL 2021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO6EH
UT WOS:000694786100020
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Hora, A
AF Hora, Andre
TI Characterizing top ranked code examples in Google
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code examples; API usage; Software quality; Code search; Google search
   engine
ID SEARCH ENGINE; MODELS
AB Developers often look for code examples on the web to improve learning and accelerate development. Google indexes millions of pages with code examples: pages with better content are likely to be top ranked. In practice, many factors may influence the rank: page reputation, content quality, etc. Consequently, the most relevant information on the page, i.e., the code example, may be overshadowed by the search engine. Thus, a better understanding of how Google would rank code examples in isolation may provide the basis to detect its strengths and limitations on dealing with such content. In this paper, we assess how the Google search engine ranks code examples. We build a website with 1,000 examples and submit it to Google. After being fully indexed, we query and analyze the returned examples. We find that pages with multiple code examples are more likely to top ranked by Google. Overall, single code examples that are higher ranked are larger, however, they are not necessarily more readable and reusable. We predict top ranked examples with a good level of confidence, but generic factors have more importance than code quality ones. Based on our results, we provide insights for researchers and practitioners. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Hora, Andre] Univ Fed Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Hora, A (corresponding author), Univ Fed Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM andrehora@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330
FU CAPES; CNPq
FX This research is supported by CAPES and CNPq.
CR [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2008, IEEE T SOFTW ENG, DOI DOI 10.1145/1377612.1377619
   Awadallah A.H., 2019, ARXIV191209519
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   BUCKLAND ST, 1993, J APPL ECOL, V30, P478, DOI 10.2307/2404188
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Couto C, 2014, J SYST SOFTWARE, V93, P24, DOI 10.1016/j.jss.2014.01.033
   Cutrell E, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P407
   Diakopoulos N., 2018, DIGITAL DOMINANCE PO, V22
   Diakopoulos N, 2015, DIGIT JOURNAL, V3, P398, DOI 10.1080/21670811.2014.976411
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Evans MP, 2007, INTERNET RES, V17, P21, DOI 10.1108/10662240710730470
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Grechanik M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P259, DOI 10.1145/1810295.1810347
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hannak A., 2013, P 22 INT C WORLD WID, P527, DOI [DOI 10.1145/2488388.2488435, 10.1145/2488388.2488435]
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Holmes R, 2009, PROC IEEE INT CONF S, P555, DOI 10.1109/ICSM.2009.5306387
   Hora A., 2021, INT C MIN SOFTW REP, P1
   Hora A, 2021, SOFTWARE PRACT EXPER, V51, P319, DOI 10.1002/spe.2906
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Hu DS, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P693, DOI 10.1145/3308558.3313654
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiarpakdee Jirayus, 2019, IEEE T SOFTW ENG
   Kaisser M., 2008, P ACL 08 HLT, P701
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim J., 2010, C ART INT
   Kim J, 2013, ACM T INFORM SYST, V31, DOI 10.1145/2414782.2414783
   Kliman-Silver C, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P121, DOI 10.1145/2815675.2815714
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lima C, 2020, SOFTWARE QUAL J, V28, P425, DOI 10.1007/s11219-019-09476-z
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Menezes G, 2019, INT SYMP EMP SOFTWAR, P352
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Parnin C, 2012, 11 GEORG I TECHN
   Peters F., 2013, WORK C MIN SOFTW REP
   Philip Kavita., 2012, P ACM 2012 C COMPUTE, P1361
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Ragkhitwetsagul C., 2019, IEEE T SOFTW ENG
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Retherford R.D., 2011, Statistical Models for Causal Analysis
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Romano J., 2006, ANN M FLORIDA ASS IN
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Sandvig C., 2014, DATA DISCRIM CONVERT, V22
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Sidorov G, 2014, COMPUT SIST, V18, P491
   Sim S.E., 2013, Finding Source Code on the Web for Remix and Reuse, P53
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Thung F., 2012, WORK C REV ENG
   Tian Y., 2014, INT C SOFTW MAINT EV
   Treude C, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P19, DOI 10.1145/3194793.3194796
   Vincent Danielle, 2018, Code example guidelines
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xiong Y, 2018, INT C DIGITAL HOME, P82, DOI 10.1109/ICDH.2018.00023
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
   Zhu ZX, 2014, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2014.52
NR 80
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2021
VL 178
AR 110971
DI 10.1016/j.jss.2021.110971
EA APR 2021
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SF6FA
UT WOS:000652847800013
DA 2024-07-18
ER

PT J
AU Chai, M
   Wang, HF
   Tang, T
   Liu, HJ
AF Chai, Ming
   Wang, Haifeng
   Tang, Tao
   Liu, Hongjie
TI Runtime verification of train control systems with parameterized modal
   live sequence charts
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Runtime verification; Live sequence chart; Train control system
ID SEMANTICS; TIME; LIFE; LTL
AB With the growing complexity of railway control systems, it is required to preform runtime safety checks of system executions that go beyond conventional runtime monitoring of pre-programmed safety conditions. Runtime verification is a lightweight and rigorous formal method that dynamically analyses execution traces against some formal specifications. A challenge in applying this method in railway systems is defining a suitable monitoring specification language, i.e., a language that is expressive, of reasonable complexity, and easy to understand. In this paper, we propose parameterized modal live sequence charts (PMLSCs) by introducing the alphabet of the specification into charts to distinguish between silent events and unexpected events. We further investigate the expressiveness and complexity theories of the language. In particular, we prove that PMLSCs are closed under negation and the complexity of a subclass of PMLSCs is linear, which allows the language to be used to monitor a system online. Finally, we use PMLSCs to monitor an RBC system in the Chinese high-speed railway and evaluate the performance. The experimental results show that the PMLSC has high monitoring efficiency, and can reduce false alarm rate by introducing alphabets of charts. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Chai, Ming; Wang, Haifeng; Liu, Hongjie] Beijing Jiaotong Univ, Natl Engn Res Ctr Rail Transportat Operat & Contr, Beijing 100044, Peoples R China.
   [Chai, Ming; Wang, Haifeng; Liu, Hongjie] Beijing Lab Urban Rail Transit, Beijing 100044, Peoples R China.
   [Tang, Tao] Beijing Jiaotong Univ, State Key Lab Rail Traff Control & Safety, Beijing 100044, Peoples R China.
C3 Beijing Jiaotong University; Beijing Jiaotong University
RP Liu, HJ (corresponding author), Beijing Jiaotong Univ, Natl Engn Res Ctr Rail Transportat Operat & Contr, Beijing 100044, Peoples R China.; Liu, HJ (corresponding author), Beijing Lab Urban Rail Transit, Beijing 100044, Peoples R China.
EM haiming@bjtu.edu.cn; hfwang@bjtu.edu.cn; ttang@bjtu.edu.cn;
   hjliu2@bjtu.edu.cn
OI Liu, Hongjie/0000-0001-8268-4618
FU Beijing Natural Science Foundation, China [L181005]
FX This work was supported by the Beijing Natural Science Foundation, China
   (grant number L181005) .
CR Aceto L., 2017, 37 IARCS ANN C FDN S
   Aceto L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290365
   Aceto L, 2020, J LOG ALGEBR METHODS, V111, DOI 10.1016/j.jlamp.2019.100515
   Aceto L, 2019, LECT NOTES COMPUT SC, V11724, P433, DOI 10.1007/978-3-030-30446-1_23
   Aceto L, 2018, LECT NOTES COMPUT SC, V10803, P203, DOI 10.1007/978-3-319-89366-2_11
   Ahrendt W, 2017, FORM METHOD SYST DES, V51, P200, DOI 10.1007/s10703-017-0274-y
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Ancona Davide, 2016, Theory and Practice of Formal Methods. Essays Dedicated to Frank de Boer on the Occasion of His 60th Birthday. LNCS 9660, P47, DOI 10.1007/978-3-319-30734-3_6
   Ancona D., 2013, LNCS, V7784, P76, DOI DOI 10.1007/978-3-642-37890-45
   [Anonymous], 2009, ACM S APPL COMPUTING
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Basin D., 2012, LNCS, V7186, P260, DOI [10.1007/978-3-642-29860-8_20, DOI 10.1007/978-3-642-29860-8_20, 10.1007/978-3-642-29860-8, DOI 10.1007/978-3-642-29860-8]
   Basin D, 2020, LECT NOTES COMPUT SC, V12166, P432, DOI 10.1007/978-3-030-51074-9_25
   Basin D, 2017, LECT NOTES COMPUT SC, V10548, P85, DOI 10.1007/978-3-319-67531-2_6
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Bauer A, 2015, FORM METHOD SYST DES, V46, P286, DOI 10.1007/s10703-015-0227-2
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Boer Frank S., 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P217, DOI 10.1007/978-3-319-07317-0_6
   Bonakdarpour B, 2020, P IEEE COMPUT SECUR, P366, DOI 10.1109/CSF49147.2020.00033
   Bonakdarpour B, 2018, P IEEE COMPUT SECUR, P162, DOI 10.1109/CSF.2018.00019
   Bontemps Y., 2007, J APPL LOGIC, V5, P252
   Chai M., 2013, Proceedings of the 22nd International Workshop on Concurrency, Specification and Programming, Warsaw, Poland, P61
   Chai M, 2017, FUND INFORM, V153, P173, DOI 10.3233/FI-2017-1536
   Chen F, 2005, LECT NOTES COMPUT SC, V3440, P546
   Clavel M., 2011, U ILLINOIS URBANA CH, V1, P4
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Colombo C, 2009, LECT NOTES COMPUT SC, V5596, P135, DOI 10.1007/978-3-642-03240-0_13
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Diekert V, 2015, LECT NOTES COMPUT SC, V9399, P39, DOI 10.1007/978-3-319-25150-9_3
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Francalanza A, 2017, LECT NOTES COMPUT SC, V10548, P8, DOI 10.1007/978-3-319-67531-2_2
   Francalanza A, 2015, FORM METHOD SYST DES, V46, P226, DOI 10.1007/s10703-014-0217-9
   Franceschet M, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P166
   Harel D, 2002, LECT NOTES COMPUT SC, V2517, P378
   Harel D, 2002, MASCOTS 2002: 10TH IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS, PROCEEDINGS, P193, DOI 10.1109/MASCOT.2002.1167077
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Harel D, 2008, LECT NOTES COMPUT SC, V4800, P351, DOI 10.1007/978-3-540-78127-1_19
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund K, 2014, LECT NOTES COMPUT SC, V8803, P254, DOI 10.1007/978-3-662-45231-8_18
   Havelund Klaus, 2005, LNCS, V4171, P374, DOI [DOI 10.1007/978-3-540-69149-5, 10.1007/978-3-540-69149-540, DOI 10.1007/978-3-540-69149-540]
   Havelund Klaus., 2018, Monitoring Events that Carry Data, P61, DOI [10.1007/978-3-319-75632-5_3, DOI 10.1007/978-3-319-75632-5_3]
   Kari J, 2007, LECT NOTES COMPUT SC, V4664, P72
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   Kumar R, 2009, ELECTRON NOTES THEOR, V250, P33, DOI 10.1016/j.entcs.2009.08.016
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Rosu G., 2005, Automated Software Engineering, V12, P151, DOI 10.1007/s10515-005-6205-y
   Sokolsky O, 2012, FORM METHOD SYST DES, V41, P233, DOI 10.1007/s10703-012-0174-0
   Sun J, 2005, IEEE INT C ENG COMP, P529
   Yang NH, 2012, TELECOMMUN SYST, V51, P147, DOI 10.1007/s11235-011-9424-5
NR 56
TC 26
Z9 26
U1 2
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2021
VL 177
AR 110962
DI 10.1016/j.jss.2021.110962
EA APR 2021
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RO9JQ
UT WOS:000641355800006
DA 2024-07-18
ER

PT J
AU Alanazi, R
   Gharibi, G
   Lee, Y
AF Alanazi, Rakan
   Gharibi, Gharib
   Lee, Yugyung
TI Facilitating program comprehension with call graph multilevel
   hierarchical abstractions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Program comprehension; Static analysis; Static call graphs; Machine
   learning; Hierarchical clustering
AB Program comprehension is a fundamental prerequisite for software maintenance and evolution. In order to understand a software structure, developers often read its codebase or documentation-if available and not outdated. Both approaches are tedious, time-consuming, and inefficient. Recent methods and tools have emerged to facilitate program comprehension, such as static call graphs, which depict the structure of the software system as a directed graph. However, the usage of call graphs still faces two main challenges: (1) large call graphs can be difficult to understand, and (2) they are limited to a single level of granularity, such as function calls. In this paper, we introduce a coarsening technique to create multi-level, hierarchical representations of the call graph. Specifically, we propose a hierarchical clustering approach of the execution paths to visualize the call graph at different granularity levels and for different software units, including packages, classes, and functions. Our overarching goal is to assist software developers in understanding the software system from a high-level of abstraction to the low-level of implementation with the ability to focus on particular parts of the system individually. To validate our approach and tool support, we conducted a user study of 18 software engineers from more than 11 industries who carried out several tasks using our system and then answered a survey. The results demonstrate that our approach is feasible to automatically construct multi-level abstractions of the call graph and hierarchically cluster them into meaningful abstractions. A video demo of the tool is available at https://rakanalanazi.github.io/CodEx/. (C) 2021 The Author(s). Published by Elsevier Inc.
C1 [Alanazi, Rakan; Gharibi, Gharib; Lee, Yugyung] Univ Missouri, Sch Comp & Engn, Kansas City, MO 64110 USA.
   [Alanazi, Rakan] Northern Border Univ, Fac Comp & Informat Technol, Rafha, Saudi Arabia.
C3 University of Missouri System; University of Missouri Kansas City;
   Northern Border University
RP Alanazi, R (corresponding author), Univ Missouri, Sch Comp & Engn, Kansas City, MO 64110 USA.
EM rna9r3@mail.umkc.edu; ggk89@mail.umkc.edu; LeeYu@umkc.edu
RI Alanazi, Rakan Nazal M/AAE-9275-2022; Alanazi, Rakan/IQR-6362-2023
OI Alanazi, Rakan Nazal M/0000-0002-1204-0910; 
FU Northern Border University; NSF, USA [1747751, 1935076, 1951971];
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1951971] Funding Source: National Science Foundation;
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1935076] Funding Source: National Science Foundation
FX We would like to thank the industry participants who helped in
   conducting the user study and evaluate the software system. We also
   thank the anonymous reviewers for their time and effort in reviewing
   this work. The first author would like to thank Northern Border
   University for the scholarship. The coauthor, Yugyung Lee, would like to
   acknowledge the partial support of the NSF, USA Grant No. 1747751,
   1935076, and 1951971.
CR Alanazi R., 2021, CODEX VISUAL CLUSTER
   Alnabhan M, 2018, 2018 INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND COMPUTER VISION (ISCV2018)
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Bogar A.M., 2018, ARXIV PREPRINT ARXIV
   Bohnet J., 2006, P 2006 ACM S SOFTW V, P95
   Brooke J., 1996, USABILITY EVAL IND, V189
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Chan A, 2003, PROG COMPREHEN, P237
   Chevalier C, 2009, LECT NOTES COMPUT SC, V5851, P191, DOI 10.1007/978-3-642-11169-3_14
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Davey J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P268, DOI 10.1109/WCRE.2000.891478
   Feng Y, 2018, INT C PROGRAM COMPRE, P86, DOI 10.1145/3196321.3196343
   Gansner E., 2017, GRAPHVIZ GRAPH VISUA
   Gharibi G, 2018, IEEE INT CONF AUTOM, P880, DOI 10.1145/3238147.3240484
   Gharibi G, 2018, IEEE INT CONF BIG DA, P4016, DOI 10.1109/BigData.2018.8622426
   Gousios G., 2019, JAVA CALLGRAPH JAVA
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Grinberg Miguel, 2018, Flask web development: developing web applications with python
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Hagberg A., 2008, EXPLORING NETWORK ST
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hoogendorp H., 2010, THESIS FACULTY SCI E
   HOPCROFT J, 1973, COMMUN ACM, V16, P372, DOI 10.1145/362248.362272
   Horner E., 2021, CONSTRUCTING CALL GR
   Islam S, 2014, J SYST SOFTWARE, V88, P1, DOI 10.1016/j.jss.2013.07.040
   Jin WX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P67, DOI 10.1109/ICSE-Companion.2019.00040
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kosara R, 2003, IEEE COMPUT GRAPH, V23, P20, DOI 10.1109/MCG.2003.1210860
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   LaToza TD, 2011, S VIS LANG HUM CEN C, P117, DOI 10.1109/VLHCC.2011.6070388
   Lemos OAL, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P49, DOI 10.1109/SBES.2013.7
   Lewis JR, 2018, J USABILITY STUD, V13, P158
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mark Otto J.T., 2019, BOOTSTRAP
   Merino L, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1923
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   Naeimian A., 2019, THESIS U WATERLOO
   Naseem R, 2013, J SYST SOFTWARE, V86, P2045, DOI 10.1016/j.jss.2013.03.080
   Oliphant TE, 2007, COMPUT SCI ENG, V9, P10, DOI 10.1109/MCSE.2007.58
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   Salis V., 2020, NATURE, V15, P16
   Sander J, 2003, LECT NOTES ARTIF INT, V2637, P75
   Santos G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P224, DOI 10.1109/CSMR-WCRE.2014.6747174
   Shah MD, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P86, DOI 10.1109/VISSOFT.2016.14
   Sun XB, 2017, SCI PROGRAMMING-NETH, V2017, DOI 10.1155/2017/4382348
   Tunali V, 2020, PAMUKKALE U J ENG SC, V26, P352, DOI 10.5505/pajes.2019.63239
   Walunj V, 2019, IEEE INT CONF BIG DA, P4799, DOI 10.1109/BigData47090.2019.9005560
   Wettel R., 2010, THESIS U SVIZZERA IT
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 56
TC 4
Z9 5
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2021
VL 176
AR 110945
DI 10.1016/j.jss.2021.110945
EA MAR 2021
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH7CH
UT WOS:000636371400005
OA hybrid
DA 2024-07-18
ER

PT J
AU Abdellatif, M
   Shatnawi, A
   Mili, H
   Moha, N
   El Boussaidi, G
   Hecht, G
   Privat, J
   Guéhéneuc, YG
AF Abdellatif, Manel
   Shatnawi, Anas
   Mili, Hafedh
   Moha, Naouel
   El Boussaidi, Ghizlane
   Hecht, Geoffrey
   Privat, Jean
   Gueheneuc, Yann-Gael
TI A taxonomy of service identification approaches for legacy software
   systems modernization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service identification; Microservices; Taxonomy; Legacy system;
   Migration
ID WEB SERVICES; CODE
AB The success of modernizing legacy software systems to Service-Oriented Architecture (SOA) depends on Service Identification Approaches (SIAs), which identify reusable functionalities that could become services. The literature describes several SIAs. However, the selection of an identification approach that is suitable for a practitioner is difficult because it depends on several factors, including the goal of modernization, the available legacy artifacts, the organization's development process, the desired output, and the usability of the approach. Accordingly, to select a suitable service identification approach, a practitioner must have a comprehensive view of existing techniques.
   We report a systematic literature review (SLR) that covers 41 SIAs based on software-systems analyses. Based on this SLR, we create a taxonomy of SIAs and build a multi-layer classification of existing identification approaches. We start from a high-level classification based on the used inputs, the applied processes, the given outputs, and the usability of the SIAs. We then divide each category into a fine-grained taxonomy that helps practitioners in selecting a suitable approach for identifying services in legacy software systems. We build our SLR based on our experience with legacy software modernization, on discussions and experiences working with industrial partners, and analyses of existing SIAs. We validate the correctness and the coverage of our review with industrial experts who modernize(d) legacy software systems to SOA. The results show that our classification conforms to the industrial experts' experiences. We also show that most of the studied SIAs are still at their infancy. Finally, we identify the main challenges that SIAs need to address, to improve their quality. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Abdellatif, Manel] Polytech Montreal, Montreal, PQ, Canada.
   [Shatnawi, Anas; Mili, Hafedh; Hecht, Geoffrey; Privat, Jean] Univ Quebec Montreal, Montreal, PQ, Canada.
   [Moha, Naouel; El Boussaidi, Ghizlane] Ecole Technol Super, Montreal, PQ, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Quebec;
   University of Quebec Montreal; University of Quebec; Ecole de
   Technologie Superieure - Canada; Concordia University - Canada
RP Abdellatif, M (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM manel.abdellatif@polymtl.ca; shatnawi.anas@uqam.ca; mili.hafedh@uqam.ca;
   naouel.moha@etsmtl.ca; ghizlane.elboussaidi@etsmtl.ca;
   hecht.geoffrey@uqam.ca; privat.jean@uqam.ca;
   yann-gael.gueheneuc@concordia.ca
RI Mili, Hafedh/JAO-1456-2023; Abdellatif, manel/JFS-0902-2023; Hecht,
   Geoffrey/AAV-8847-2020
OI Hecht, Geoffrey/0000-0003-1052-9947; Abdellatif,
   Manel/0000-0002-8647-1676
FU Fonds de Recherche du Quebec Nature et Technologies (FRQNT)
   [N2016-PR-191087]
FX The authors would like to thank all the practitioners who replied to us.
   This work was supported by the Fonds de Recherche du Quebec Nature et
   Technologies (FRQNT) N2016-PR-191087.
CR Abdelkader M, 2013, INT J COMPUT APPL T, V47, P152, DOI 10.1504/IJCAT.2013.054348
   Abdellatif M, 2018, LECT NOTES COMPUT SC, V11236, P634, DOI 10.1007/978-3-030-03596-9_46
   Adjoyan S., 2014, The 26th International Conference on Software Engineering and Knowledge Engineering, Hyatt Regency, Vancouver, BC, Canada, July 1-3, 2013, P1
   Aggarwal M, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION TECHNOLOGY (ICCCT), P133, DOI 10.1109/ICCCT.2012.34
   Al Ani B, 2015, INT J COMPUT APPL T, V52, P1
   Alahmari Saad, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P614, DOI 10.1109/SCC.2010.56
   Alkkiomäki V, 2016, SERV ORIENTED COMPUT, V10, P207, DOI 10.1007/s11761-015-0181-2
   Alwis Adambarage Anuruddha Chathuranga, 2018, On the Move to Meaningful Internet Systems. OTM 2018 Conferences. Confederated International Conferences: CoopIS, C&TC, and ODBASE 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11230), P60, DOI 10.1007/978-3-030-02671-4_4
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   Amiri MJ, 2016, COMPUT SCI INF SYST, V13, P335, DOI 10.2298/CSIS151105011A
   [Anonymous], J APPL SCI
   [Anonymous], 2005, Enterprise SOA: service-oriented architecture best practices
   Aversano L, 2008, IEEE INTL SYMPOS WEB, P37, DOI 10.1109/WSE.2008.4655393
   Baghdadi Y, 2006, INFORM SYST FRONT, V8, P395, DOI 10.1007/s10796-006-9007-2
   Balabanovic M, 1997, COMMUN ACM, V40, P66, DOI 10.1145/245108.245124
   Bani-Ismail B, 2018, COMM COM INF SC, V877, P191, DOI 10.1007/978-3-319-95204-8_17
   Bani-Ismail B, 2018, COMM COM INF SC, V877, P203, DOI 10.1007/978-3-319-95204-8_18
   Bechhofer S., 2009, ENCY DATABASE SYSTEM, P2008, DOI DOI 10.1007/978-0-387-39940-9_1073
   Bell M., 2009, SOA modeling patterns for service oriented discovery and analysis
   Birkhoff Garrett, 1940, LATTICE THEORY, V25
   Birkmeier D., 2015, Enterprise Modelling and Information Systems Architectures, V4, P20
   Birkmeier D, 2009, LECT NOTES COMPUT SC, V5582, P1, DOI 10.1007/978-3-642-02414-6_1
   Boerner Rene, 2009, 2009 3rd IEEE International Conference on Digital Ecosystems and Technologies (DEST), P588, DOI 10.1109/DEST.2009.5276742
   Cai X, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P372, DOI 10.1109/APSEC.2000.896722
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P23
   Charmaz K., 2012, HDB INTERVIEW RES CO, V2, P347, DOI DOI 10.4135/9781452218403.N25
   Chen F, 2009, P INT COMP SOFTW APP, P486, DOI 10.1109/COMPSAC.2009.71
   Cohen S., 2007, Microsoft Architecture Journal, V11, P30
   De Alwis AAC, 2018, LECT NOTES COMPUT SC, V11236, P37, DOI 10.1007/978-3-030-03596-9_3
   Del Grosso C, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P287
   Djeloul Mostefai Abdelkadermalki Mimounboudchiha, 2012, WSEAS Transactions on Computers, V11, P19
   Erl T., 2007, SOA Principles of Service Design
   Erl T., 2005, Service-oriented architecture, V8
   Erl T., 2008, SOA Design Patterns
   Escobar Daniel, 2016, 2016 XLII Latin American Computing Conference (CLEI), P1
   Felizardo KatiaRomero., 2016, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P53
   Feuerlicht George, 2007, INT C SYST INT DEP I
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Fuhr A., 2011, 2011 18th Working Conference on Reverse Engineering, P275, DOI 10.1109/WCRE.2011.41
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Ganter B, 2010, LECT NOTES ARTIF INT, V5986, P312, DOI 10.1007/978-3-642-11928-6_22
   Gratzer George, 2009, Lattice theory: First concepts and distributive lattices
   Gu Q, 2010, LECT NOTES COMPUT SC, V6481, P37, DOI 10.1007/978-3-642-17694-4_4
   Guo Chenghao, 2010, Proceedings First International Conference on Networking and Distributed Computing (ICNDC 2010), P94, DOI 10.1109/ICNDC.2010.28
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   Huergo R.S., 2014, IT Convergence Practice, V2, P1
   Huergo R.S., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1225
   Huergo RS, 2014, SERV ORIENTED COMPUT, V8, P199, DOI 10.1007/s11761-014-0161-y
   Jain AK, 2010, PATTERN RECOGN LETT, V31, P651, DOI 10.1016/j.patrec.2009.09.011
   Jain H., 2004, International Journal of Web Services Research, V1, P1, DOI 10.4018/jwsr.2004010101
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Khadka Ravi, 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P2, DOI 10.1109/MESOCA.2013.6632729
   Khadka R, 2015, PROC IEEE INT CONF S, P477, DOI 10.1109/ICSM.2015.7332499
   Kim Y, 2007, LECT NOTES COMPUT SC, V4439, P108
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lewis Grace, 2005, TECHNICAL REPORT
   Rodriguez JM, 2013, IEEE INTERNET COMPUT, V17, P44, DOI 10.1109/MIC.2011.162
   Marchetto Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P427, DOI 10.1007/s10009-009-0123-4
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Murtagh F, 2014, J CLASSIF, V31, P274, DOI 10.1007/s00357-014-9161-z
   Nakamur Masahide, 2012, INFORM SYST SERV SEC, V237
   Nakamura M, 2009, IEEE RADIO WIRELESS, P483
   Newman S., 2015, BUILDING MICROSERVIC
   Nord R.L., 2004, CMUSEI2004TN017
   Nord Robert L, 2003, TECHNICAL REPORT
   Nunes L, 2019, LECT NOTES COMPUT SC, V11681, P37, DOI 10.1007/978-3-030-29983-5_3
   Peng K, 2010, INT CONF COMP SCI, P1, DOI 10.1109/ICCSIT.2010.5564459
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Polyvyanyy A, 2012, LECT NOTES COMPUT SC, V7481, P335, DOI 10.1007/978-3-642-32885-5_26
   Rodriguez-Echeverria R., 2014, Information System Development, P433
   Saha D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P448, DOI 10.1109/ICWS.2015.66
   Schmuller Joseph, 2018, EUR C SERV OR CLOUD, P65
   Senthil Mani, 2008, 2008 IEEE International Conference on Web Services (ICWS), P78, DOI 10.1109/ICWS.2008.86
   Shatnawi A, 2018, INT C PROGRAM COMPRE, P189, DOI 10.1145/3196321.3196349
   Simin Cai, 2011, Proceedings of the 2011 IEEE Asia-Pacific Services Computing Conference (APSCC), P464, DOI 10.1109/APSCC.2011.12
   Sindhgatta R, 2009, LECT NOTES COMPUT SC, V5900, P485, DOI 10.1007/978-3-642-10383-4_36
   Sneed Harry M., 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P31, DOI 10.1109/MESOCA.2013.6632732
   Sneed Harry, 2007, P INT
   Sneed HM, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3
   Sosa Encarna, 2013, 2013 15th IEEE International Symposium on Web Systems Evolution (WSE), P61, DOI 10.1109/WSE.2013.6642418
   Sosa E, 2014, IEEE WORLD CONGR SER, P470, DOI 10.1109/SERVICES.2014.90
   Souza E, 2017, PROCEEDINGS OF THE 2017 17TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2017)
   Taibi Davide, 2019, 8 INT C CLOUD COMP S
   Tyszberowicz Shmuel, 2018, Dependable Software Engineering. Theories, Tools, and Applications. 4th International Symposium, SETTA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 10998), P50, DOI 10.1007/978-3-319-99933-3_4
   Vale T., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V2, P156
   Vemulapalli A, 2009, LECT NOTES COMPUT SC, V5872, P337, DOI 10.1007/978-3-642-05290-3_46
   Wagner C., 2014, Model-Driven Software Migration: A Methodology: Reengineering, Recovery and Modernization of Legacy Systems
   Wille R, 2009, LECT NOTES ARTIF INT, V5548, P314
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Zadeh A.T., 2012, J APPL SCI, V12, P1232, DOI DOI 10.3923/jas.2012.1232.1244
   Zhang ZP, 2006, INT CONF QUAL SOFTW, P385
   Zhang Zhuopeng, 2005, SEKE, V5, P620
   Zhang ZP, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P196
   Zhao SX, 2008, PROCEEDINGS OF THE 2008 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P153
   Zhao Y., 2009, Proceedings of BMEI, P1
NR 99
TC 18
Z9 21
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2021
VL 173
AR 110868
DI 10.1016/j.jss.2020.110868
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PQ2ZA
UT WOS:000606416400004
DA 2024-07-18
ER

PT J
AU Kretschmer, R
   Khelladi, DE
   Egyed, A
AF Kretschmer, Roland
   Khelladi, Djamel Eddine
   Egyed, Alexander
TI Transforming abstract to concrete repairs with a generative approach of
   repair values
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model repair; Inconsistency repair; Abstract repair; Concrete repair
AB Software models, often comprise of interconnected diagrams, change continuously, and developers often fail in keeping these diagrams consistent. Detecting inconsistencies quickly and efficiently is state of the art. However, repairing them is not trivial, because there are typically multiple model elements that need to be repaired, leading to an exponentially growing space of combinations of repair choices. Despite extensive research on consistency checking, existing approaches either provide abstract repairs only (i.e., identifying the model element but failing to describe the change), which is not satisfactory. This paper presents a novel approach that provides concrete repair choices based on values from the inconsistent models. Thus, our approach first retrieves repair values from the model, turn them to repair choices, and groups them based on their effects. This grouping lets our approach explore the repair space in its entirety, providing quick example-like feedback for all possible repairs. Our approach and its tool implementation have been empirically assessed on 10 case studies from industry, academia, and GitHub to demonstrate its feasibility and scalability. A comparison with three versioned models shows that our approach identifies useful repair values that developers have chosen. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Kretschmer, Roland; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Khelladi, Djamel Eddine] Univ Rennes 1, CNRS, IRISA, UMR6074, Rennes, France.
C3 Johannes Kepler University Linz; Centre National de la Recherche
   Scientifique (CNRS); Universite de Rennes
RP Kretschmer, R (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM roland.kretschmer@jku.at; djamel-eddine.khelladi@irisa.fr;
   alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
FU Austrian Science Fund FWF [P 31989]; Pro2Future, a COMET K1-Center of
   the Austrian Research Promotion Agency (FFG) [854184]; LIT Secure and
   Correct System Lab - State of Upper Austria; CNRS PEPS 2019; AIS Rennes
   Metropole [190270]
FX This research was supported by the Austrian Science Fund FWF P 31989, by
   Pro2Future, a COMET K1-Center of the Austrian Research Promotion Agency
   (FFG), grant no. 854184, and by the LIT Secure and Correct System Lab
   funded by the State of Upper Austria. This research was also supported
   by funding from the CNRS PEPS 2019 and from the AIS Rennes Metropole
   under grant no. 190270
CR Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Demuth A, 2016, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2016.50
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Kolovos Dimitrios S., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P356, DOI 10.1109/ICST.2008.23
   Kretschmer R, 2017, ASIA PAC SOFWR ENG, P456, DOI 10.1109/APSEC.2017.52
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSME.2016.66
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P115, DOI 10.1109/ASE.2001.989797
   Ohlsson M.C., 2012, EXPT SOFTWARE ENG
   OMG, 2014, OBJECT CONSTRAINT LA
   Puissant Jorge Pinna, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P146, DOI 10.1007/978-3-642-31491-9_13
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2013, IEEE T SOFTWARE ENG, V39, P1531, DOI 10.1109/TSE.2013.30
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shah SMA, 2010, LECT NOTES COMPUT SC, V6002, P158
   Taentzer G, 2017, LECT NOTES COMPUT SC, V10202, P283, DOI 10.1007/978-3-662-54494-5_16
   Torre D., 2014, P 18 INT C EV ASS SO, P6
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wimmer M, 2013, LECT NOTES COMPUT SC, V8107, P203, DOI 10.1007/978-3-642-41533-3_13
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 42
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2021
VL 175
AR 110889
DI 10.1016/j.jss.2020.110889
EA FEB 2021
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QO4FV
UT WOS:000623099500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Linsbauer, L
   Schwägerl, F
   Berger, T
   Grünbacher, P
AF Linsbauer, Lukas
   Schwaegerl, Felix
   Berger, Thorsten
   Gruenbacher, Paul
TI Concepts of variation control systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Variability management; Software product lines; Configuration
   management; Version control; Software repositories
ID SOFTWARE; PRODUCT; VARIABILITY; REVISION; MODELS; IMPACT
AB Version control systems are an integral part of today's software engineering. They facilitate the collaborative management of revisions (sequential versions) and variants (concurrent versions) of software systems under development. Typical version control systems maintain revisions of files and variants of whole software systems. Variants are supported via branching or forking mechanisms that conceptually clone whole systems in a coarse-grained way. Unfortunately, such cloning leads to high maintenance efforts. To avoid these disadvantages and support fine-grained variation, developers need to employ custom configuration mechanisms, which leads to a misappropriation of tools and undesired context switches. Addressing this trade-off, a number of variation control systems has been conceived, providing a richer set of capabilities for handling variants. Variation control systems decompose a software system into finer-grained variable entities and offer high-level metaphors to automatically manage this variability. In this paper, we classify and compare variation control systems and illustrate their core concepts and characteristics. All investigated variation control systems offer an iterative (checkout-modify-commit) workflow, but there are essential differences affecting developers. We highlight challenges and discuss research perspectives for developing the next generation of version and variation control systems. (c) 2020 Elsevier Inc. All rights reserved.
C1 [Linsbauer, Lukas] Tech Univ Carolo Wilhelmina Braunschweig, ISF, Braunschweig, Germany.
   [Schwaegerl, Felix] Univ Bayreuth, Appl Comp Sci 1, Bayreuth, Germany.
   [Berger, Thorsten] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Gruenbacher, Paul] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Braunschweig University of Technology; University of Bayreuth; Chalmers
   University of Technology; Johannes Kepler University Linz
RP Grünbacher, P (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM l.linsbauer@tu-braunschweig.de; felix.schwaegerl@uni-bayreuth.de;
   thorsten.berger@cse.gu.se; paul.gruenbacher@jku.at
RI Grunbacher, Paul/C-2970-2013
OI Grunbacher, Paul/0000-0002-1951-5288
FU Austrian Federal Ministry for Digital and Economic Affairs; National
   Foundation for Research, Technology and Development, Austria; KEBA AG
   Austria; Swedish Research Council, Vinnova Sweden; Knut and Alice
   Wallenberg Foundation, Sweden
FX This work has been supported by the Austrian Federal Ministry for
   Digital and Economic Affairs, the National Foundation for Research,
   Technology and Development, Austria, KEBA AG Austria, the Swedish
   Research Council, Vinnova Sweden, and the Knut and Alice Wallenberg
   Foundation, Sweden.
CR Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P121, DOI 10.5381/jot.2007.6.1.a4
   Angerer F, 2015, IEEE INT CONF AUTOM, P385, DOI 10.1109/ASE.2015.58
   Angerer F, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P52, DOI 10.1145/2648511.2648517
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2014, ACM SIGPLAN INT C GE
   [Anonymous], 1990, SEI90TR21 CMU
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P532, DOI 10.1145/2591062.2591126
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Atkins D. L., 1998, System Configuration Management. ECOOP'98 SCM-8 Symposium. Proceedings, P146, DOI 10.1007/BFb0053886
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2004, PROC INT CONF SOFTW, P702, DOI 10.1109/ICSE.2004.1317496
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Berger T., 2010, 14 INT SOFTW PROD LI
   Berger T., 2019, DAGSTUHL REPORTS
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/2950290.2950315
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Businge J, 2018, PROC IEEE INT CONF S, P625, DOI 10.1109/ICSME.2018.00072
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Coplien J. O., 1987, AT T TECHN PAP INT S
   CRONK RD, 1992, BYTE, V17, P177
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Favre JM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P287, DOI 10.1109/WCRE.1996.558940
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   FRASER CW, 1987, ACM T PROGR LANG SYS, V9, P277, DOI 10.1145/22719.22948
   GANTER B, 2017, P 14 INT C FORM CONC, P23
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   GENTLEMAN WM, 1989, ACM SIGSOFT, V17, P152, DOI 10.1145/72910.73365
   Goldstein Ira P, 1980, CSL805 PAL ALT RES C
   GULLA B, 1991, SOFTWARE ENG J, V6, P378, DOI 10.1049/sej.1991.0039
   Hinterreiter D, 2020, CONCURRENT ENG-RES A, V28, P265, DOI 10.1177/1063293X20958930
   Hinterreiter D, 2019, PROCEEDINGS OF THE 18TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE '19), P115, DOI 10.1145/3357765.3359515
   Hinterreiter D, 2019, LECT NOTES COMPUT SC, V11412, P169, DOI 10.1007/978-3-030-15538-4_12
   Hinterreiter D, 2018, IEEE INT C EMERG, P107, DOI 10.1109/ETFA.2018.8502557
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hofer Wanja., 2010, Proceedings of the 2nd International Workshop on Feature-Oriented Software Development, FOSD 2010, Eindhoven, Netherlands, October 10, 2010, P18, DOI DOI 10.1145/1868688.1868692
   Holager P., 1988, STF44A88023
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Krueger J., 2020, 28 ACM SIGSOFT INT S
   Krueger J, 2020, VAMOS
   KRUSKAL V, 1984, IBM J RES DEV, V28, P74, DOI 10.1147/rd.281.0074
   Kruskal Vincent, 2000, WORKSH MULT SEP CONC
   Kullbach B, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2001.957805
   Lie A., 1989, SIGSOFT Software Engineering Notes, V14, P56, DOI 10.1145/73337.73348
   Lie Anund, 1990, THESIS
   Lillack M, 2019, PROC INT CONF SOFTW, P831, DOI 10.1109/ICSE.2019.00090
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Linsbauer L, 2017, SOFTW SYST MODEL, V16, P1179, DOI 10.1007/s10270-015-0512-y
   Linsbauer L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P803, DOI 10.1145/2889160.2889262
   Linsbauer L, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P57, DOI 10.1109/SST.2015.16
   Linsbauer L, 2014, PROC IEEE INT CONF S, P426, DOI 10.1109/ICSME.2014.67
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Linsbauer Lukas, 2016, THESIS
   MacKay Stephen A., 1995, ICSE SCM 4 SCM 5 WOR
   Mahler Axel, 1995, CONFIGURATION MANAGE, P73
   Melo J, 2016, PROC INT CONF SOFTW, P679, DOI 10.1145/2884781.2884831
   Munch Bjorn P., 1993, THESIS
   Munch BjrnP., 1993, P 4 INT WORKSHOP SOF, P188
   Munch BP, 1996, INTEGR COMPUT-AID E, V3, P5
   Nesic D., 2019, 27 ACM SIGSOFT INT S
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pal A. A., 1989, P 7 INT C SOFTW ENG
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Passos L., 2018, IEEE Trans. Softw. Eng
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Sarnak N., 1988, WORKSH SOFTW VERS CO
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schwäger F, 2019, SOFTW SYST MODEL, V18, P3373, DOI 10.1007/s10270-019-00722-3
   Schwägerl F, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P15, DOI 10.5220/0006071800150028
   Schwägerl F, 2016, ICSOFT-PT: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 2, P83, DOI 10.5220/0005971300830094
   Schwägerl F, 2016, IEEE INT CONF AUTOM, P822, DOI 10.1145/2970276.2970288
   Seidl C., 2014, 8 INT WORKSH VAR MOD
   Seidl C., 2013, P 8 INT WORKSH VAR M
   Software Maintenance & Development Systems Inc Software Maintenance & Development Systems Inc, 1990, AID CAMP PROD OV CON
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Stanciulescu S, 2016, PROC IEEE INT CONF S, P323, DOI 10.1109/ICSME.2016.88
   Tichy Walter, 1988, TECHNICAL REPORT
   von Rhein A, 2016, J LOG ALGEBR METHODS, V85, P125, DOI 10.1016/j.jlamp.2015.06.007
   Wang AI, 1998, LECT NOTES COMPUT SC, V1487, P75
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
   Westfechtel Bernhard., 2009, Proceedings of the 1st International Workshop on Model-Driven Product Line Engineering (MDPLE 2009). CTIT Proceedings, P57
   Wong C-P, 2020, P INT C SOFTW ENG SO
NR 100
TC 19
Z9 19
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2021
VL 171
AR 110796
DI 10.1016/j.jss.2020.110796
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV9DC
UT WOS:000592500400002
DA 2024-07-18
ER

PT J
AU Palomba, F
   Tamburri, DA
AF Palomba, Fabio
   Tamburri, Damian Andrew
TI Predicting the emergence of community smells using socio-technical
   metrics: A machine-learning approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Community smells; Social debt; Empirical software engineering
ID BUG PREDICTION; SELECTION; TURNOVER; CLASSIFIERS
AB Community smells represent sub-optimal conditions appearing within software development commu-nities (e.g., non-communicating sub-teams, deviant contributors, etc.) that may lead to the emergence of social debt and increase the overall project's cost. Previous work has studied these smells under different perspectives, investigating their nature, diffuseness, and impact on technical aspects of source code. Furthermore, it has been shown that some socio-technical metrics like, for instance, the wellknown socio-technical congruence, can potentially be employed to foresee their appearance. Yet, there is still a lack of knowledge of the actual predictive power of such socio-technical metrics. In this paper, we aim at tackling this problem by empirically investigating (i) the potential value of socio-technical metrics as predictors of community smells and (ii) what is the performance of withinand cross-project community smell prediction models based on socio-technical metrics. To this aim, we exploit a dataset composed of 60 open-source projects and consider four community smells such as ORGANIZATIONAL SILO, BLACK CLOUD, LONE WOLF, and BOTTLENECK. The key results of our work report that a within project solution can reach F-Measure and AUC-ROC of 77% and 78%, respectively, while cross-project models still require improvements, being however able to reach an F-Measure of 62% and overcome a random baseline. Among the metrics investigated, socio-technical congruence, communicability, and turnover-related metrics are the most powerful predictors of the emergence of community smells. (c) 2020 Elsevier Inc. All rights reserved.
C1 [Palomba, Fabio] Univ Salerno, SeSa Lab, Fisciano, Italy.
   [Tamburri, Damian Andrew] Eindhoven Univ Technol, JADE Lab, Jheronimus Acad Data Sci, Eindhoven, Netherlands.
C3 University of Salerno; Eindhoven University of Technology
RP Palomba, F (corresponding author), Univ Salerno, SeSa Lab, Fisciano, Italy.
EM fpalomba@unisa.it; d.a.tamburri@tue.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961
FU Swiss National Science Foundation through the SNF Project
   [PZ00P2_186090]; European Commission [0421, 787061, 825040, 825480]
FX The authors would like to thank the Associate Editor and the anonymous
   Reviewers for their insightful comments provided during the peer-review
   process of the article, which were instrumental to improve the quality
   of the manuscript. Fabio Palomba gratefully acknowledges the support of
   the Swiss National Science Foundation through the SNF Project No.
   PZ00P2_186090 (TED). Furthermore, Damians' work is partially supported
   by the European Commission grant no. 0421 (Interreg ICT), Werkinzicht
   and the European Commission grants no. 787061 (H2020), ANITA, no. 825040
   (H2020), RADON, and no. 825480 (H2020), SODALITE.
CR [Anonymous], 2018, IEEE T SOFTW ENG
   Argentieri T, 2017, INT WORKSHOP DATABAS, P57, DOI 10.1109/DEXA.2017.28
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Avelino Guilherme, 2017, PEERJ PREPRINTS, V5, pe1233
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Ceci M, 2011, MATHEMATICAL APPROACHES TO POLYMER SEQUENCE ANALYSIS AND RELATED PROBLEMS, P87, DOI 10.1007/978-1-4419-6800-5_5
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Choobdar S, 2012, INT CONF DAT MIN WOR, P210, DOI 10.1109/ICDMW.2012.111
   DALTON DR, 1981, J APPL PSYCHOL, V66, P716, DOI 10.1037/0021-9010.66.6.716
   Dekker SWA, 2014, COGN TECHNOL WORK, V16, P541, DOI 10.1007/s10111-014-0284-0
   Dess GG, 2001, ACAD MANAGE REV, V26, P446, DOI 10.2307/259187
   Di Nucci D, 2018, INT WORK REAL ARTIF, P48, DOI 10.1145/3194104.3194112
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Dodge Y., 2008, SPEARMAN RANK CORREL, P502, DOI [10.1007/978-0-387-32833-1_379, DOI 10.1007/978-0-387-32833-1_379]
   Du WY, 2013, IEEE T ENG MANAGE, V60, P59, DOI 10.1109/TEM.2012.2206114
   Flach P., 2012, MACHINE LEARNING ART, DOI [10.1017/CBO9780511973000, DOI 10.1017/CBO9780511973000]
   GASTWIRT.JL, 1972, REV ECON STAT, V54, P306, DOI 10.2307/1937992
   Glebbeek AC, 2004, ACAD MANAGE J, V47, P277, DOI [10.2307/20159578, 10.5465/20159578]
   Greenhoe Daniel J, 2016, PEERJ PREPRINTS, V4, pe2055
   Gren Lucas, 2019, CORR
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hannemann Anna, 2009, LNI, V150, P239
   Hofstede G.J., 2008, International Workshop on Multi-Agent Systems and Agent-Based Simulation, P1
   Jaakkola Hannu, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P291, DOI 10.1007/978-3-642-28279-9_20
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee Jirayus, 2019, IEEE T SOFTW ENG
   JOBLIN M, 2015, ICSE 15, V1, P563
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Joblin Mitchell, 2016, ARXIV160400830
   KABINNA S, 2016, SOFTW AN EV REENG SA, V1, P326
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Krishna Rahul, 2018, IEEE T SOFTW ENG
   Krstajic D, 2014, J CHEMINFORMATICS, V6, DOI 10.1186/1758-2946-6-10
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Leifer R, 1978, Acad Manage Rev, V3, P40, DOI 10.2307/257575
   Leskovec J, 2009, INTERNET MATH, V6, P29, DOI 10.1080/15427951.2009.10129177
   Levina N, 2005, MIS QUART, V29, P335
   Li HQ, 2018, ECONOMET REV, V37, P867, DOI 10.1080/00927872.2016.1178871
   Manteli C, 2014, INT CONF RES CHAL
   Manteli C, 2014, INFORM SOFTWARE TECH, V56, P1309, DOI 10.1016/j.infsof.2014.04.012
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Martini A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P179, DOI 10.1109/ICSAW.2017.42
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Mursa BEM, 2019, LECT NOTES ARTIF INT, V11734, P73, DOI 10.1007/978-3-030-29859-3_7
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Packirisamy P, 2017, INT J HUM CAP INF TE, V8, P49, DOI 10.4018/IJHCITP.2017070104
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba Fabio, 2019, PREDICTING EMERGENCE
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Pecorelli Fabiano, 2019, ROLE DATA BALANCING
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Qiu Huilian Sophie, 2019, PACMHCI, V122, P1
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ralph Paul, 2016, EASE
   Reich Y, 1999, ARTIF INTELL ENG, V13, P257, DOI 10.1016/S0954-1810(98)00021-1
   Repenning Alexander, P 3 INT C END US DEV, P325
   Ricca Filippo, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P337, DOI 10.1007/978-3-642-21843-9_26
   Russo B, 2018, IEEE WORK CONF MIN S, P203, DOI 10.1145/3196398.3196426
   Sanchez-Anguix V., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P628, DOI 10.1109/HICSS.2012.436
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Singha S, 2018, MACH LEARN, V107, P2027, DOI 10.1007/s10994-018-5728-y
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Tamburri D., 2020, ABS200612086 ARXIV
   Tamburri D.A., 2019, IEEE T SOFTW ENG, V1
   Tamburri DA, 2019, EMPIR SOFTW ENG, V24, P1369, DOI 10.1007/s10664-018-9659-9
   Tamburri DA, 2019, IEEE T COMPUT SOC SY, V6, P20, DOI 10.1109/TCSS.2018.2886433
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Tamburri DA, 2020, SOFTWARE PRACT EXPER, V50, P1930, DOI 10.1002/spe.2874
   Tamburri Damian Andrew Andrew, 2019, IEEE T SOFTW ENG
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Trockman A, 2018, PROC IEEE ACM INT C, P524, DOI 10.1145/3183440.3190335
   Trucco P, 2008, RELIAB ENG SYST SAFE, V93, P845, DOI 10.1016/j.ress.2007.03.035
   Viana Davi, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P121, DOI 10.1049/ic.2012.0015
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Whelan Eoin, 2005, ECKM, P615
   ZHANG P, 1993, ANN STAT, V21, P299, DOI 10.1214/aos/1176349027
NR 98
TC 25
Z9 26
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2021
VL 171
AR 110847
DI 10.1016/j.jss.2020.110847
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OV9CU
UT WOS:000592499600006
DA 2024-07-18
ER

PT J
AU Pradhan, S
   Nanniyur, V
AF Pradhan, Satya
   Nanniyur, Venky
TI Large scale quality transformation in hybrid development organizations -
   A case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quality transformation; Quality management system; Agile; Waterfall;
   Hybrid development organization
AB As the software industry transitions to a subscription-based software-as-a-service (SaaS) model, soft-ware development companies are transforming to hybrid development organizations with increased adoption of Agile and Continuous Integration/ Continuous Delivery (CI/CD) development practices for newer products while continuing to use Waterfall methods for older products. This transformation is a huge undertaking impacting all aspects of the software development life cycle (SDLC), including the quality management system. This paper presents a case study of a large-scale transformation of a legacy quality management system to a modern system developed and implemented at Cisco Systems. The framework for this transformation is defined by six distinct areas: metrics, process, measurement, reporting, quality analytics, and culture & leadership. Our implementation leveraged recent advances in Machine Learning (ML), Artificial Intelligence (AI), connected data, integrated operations, and big data technologies to solve the challenges created by a hybrid software development organization. We believe this case study will help researchers and industry leaders understand the benefits and potential challenges of such sizeable transformations. (c) 2020 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Pradhan, Satya; Nanniyur, Venky] Cisco Syst Inc, San Jose, CA 95134 USA.
C3 Cisco Systems Inc
RP Pradhan, S (corresponding author), Cisco Syst Inc, San Jose, CA 95134 USA.
EM satpradh@cisco.com; vnanniyu@cisco.com
CR Akinwande MO., 2015, OPEN J STAT, V5, P14, DOI DOI 10.4236/OJS.2015.57075
   Almaliki M, 2015, INT CONF RES CHAL, P100, DOI 10.1109/RCIS.2015.7128868
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2010, SOFTWARE QUALITY TRA
   [Anonymous], 2000, ADDISON WESLEY INFOR
   [Anonymous], 2010, 2010 IEEE ACIS 9 INF
   Anthony S. D., 2019, Harvard business ReviewJanuary 2
   Basili VR, 2014, Aligning Organizations Through Measurement-the GQM+Strategies Approach
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Bunkhumpornpat C, 2009, LECT NOTES ARTIF INT, V5476, P475, DOI 10.1007/978-3-642-01307-2_43
   Chemuturi M., 2011, MASTERING SOFTWARE Q
   Chillarege R., 1992, IEEE T SOFTW ENG, V18
   CHOUDHURY S, 2018, IEEE SOFTWARE, V35
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Forbes Insight, 2018, WORKF CULT CAN TRANS
   Grundy J, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, pXXXIII
   Hammouri A, 2018, INT J ADV COMPUT SC, V9, P78
   Handscomb C, 2018, How to Mess Up Your Agile Transformation in Seven Easy (Mis)Steps
   Horch J., 2003, Practical guide to software quality management, V2nd
   Jacob D., 2017, QUALITY 4 0 IMPACT S
   Jones Capers, 2011, The Economics of Software Quality
   Kan S. H., 2003, METRICS MODELS SOFTW
   King T., 2019, CIO REV
   Knaster R., 2019, SAFE DISTILLED APPLY
   Lunardon N, 2014, R J, V6, P79
   Miller G.J., 2013, PMI GLOB C 2013 PROJ
   Nauman M., 2017, STARWEST 2017 SOFTW
   Nir R., 2020, ROLES ATLASSIAN TOOL
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pettey C., 2018, MOVING SOFTWARE SUBS
   Pradhan S, 2019, PROC INT SYMP SOFTW, P402, DOI 10.1109/ISSRE.2019.00047
   Prasad M.C. M., 2015, International Journal of Database Theory and Application, V8, P179, DOI [DOI 10.14257/IJDTA.2015.8.3.15, 10.14257/ijdta.2015.8.3, DOI 10.14257/IJDTA.2015.8.3]
   Pruitt John, 2003, P 2003 C DES US EXP, P1, DOI 10.1145/997078.997089
   Quality Management Software, 2020, QUAL MAN SOFTW
   Shobha D.V., 2018, ADV EC BUS, V6, P332
   Yackel R., 2020, BEST PRACTICES SHIFT
NR 37
TC 4
Z9 4
U1 3
U2 39
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2021
VL 171
AR 110836
DI 10.1016/j.jss.2020.110836
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV9CU
UT WOS:000592499600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Britto, R
   Smite, D
   Damm, LO
   Börstler, J
AF Britto, Ricardo
   Smite, Darja
   Damm, Lars-Ola
   Borstler, Jurgen
TI Evaluating and strategizing the onboarding of software developers in
   large-scale globally distributed projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Onboarding; Global Software Engineering; Large-scale software
   development
ID ORGANIZATIONAL COMMITMENT; TEAM PERFORMANCE; SOCIALIZATION; NEWCOMERS;
   EXPERIENCES; CHALLENGES; OUTCOMES
AB The combination of scale and distribution in software projects makes the onboarding of new developers problematic. To the best of our knowledge, there is no research on the relationship between onboarding strategies and the performance evolution of newcomers in large-scale, globally distributed projects. Furthermore, there are no approaches to support the development of strategies to systematically onboard developers. In this paper, we address these gaps by means of an industrial case study. We identified that the following aspects seem to be related to the observed onboarding results: the distance to mentors, the formal training approach used, the allocation of large and distributed tasks in the early stages of the onboarding process, and team instability. We conclude that onboarding must be planned well ahead and should consider avoiding the aspects mentioned above. Based on the results of this investigation, we propose a process to strategize and evaluate onboarding. To develop the process, we used business process modeling. We conducted a static validation of the proposed process utilizing interviews with experts. The static validation of the process indicates that it can help companies to deal with the challenges associated with the onboarding of newcomers through more systematic, effective, and repeatable onboarding strategies. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Britto, Ricardo; Damm, Lars-Ola] Ericsson AB, S-37173 Karlskrona, Sweden.
   [Britto, Ricardo; Smite, Darja; Borstler, Jurgen] Blekinge Inst Technol BTH, Dept Software Engn DIPT, S-37179 Karlskrona, Sweden.
C3 Ericsson; Blekinge Institute Technology
RP Britto, R (corresponding author), Blekinge Inst Technol BTH, Dept Software Engn DIPT, S-37179 Karlskrona, Sweden.
EM ricardo.britto@ericsson.com; darja.smite@ericsson.com;
   lars-ola.damm@ericsson.com; jurgen.borstler@bth.se
RI Harrison, Dylan/AFP-8142-2022; Börstler, Jürgen/IWE-4001-2023
OI Börstler, Jürgen/0000-0003-0639-4234
FU Swedish Knowledge Foundation under the KK-Hog grant [2009/0249]
FX This research was funded by the Swedish Knowledge Foundation under the
   KK-Hog grant 2009/0249 and is a part of the TEDD research project. The
   authors are very thankful to Ericsson and all the company employees
   involved in and being sincerely interested in our research.
CR Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   Ashforth B.E., 2001, ROLE TRANSITIONS ORG, P353
   Bauer T.N., 2011, TECH REP, P1
   Bauer T.N., 2011, Maintaining, expanding, and contracting the organization, V3, P51, DOI [DOI 10.1037/12171-002, 10.1037/12171-002]
   Bauer TN, 2007, J APPL PSYCHOL, V92, P707, DOI 10.1037/0021-9010.92.3.707
   Bauer TN, 1998, RES PERS H, V16, P149
   BAUER TN, 1994, J APPL PSYCHOL, V79, P211, DOI 10.1037/0021-9010.79.2.211
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   Bondi AB, 2009, INT CONF GLOBAL SOFT, P254, DOI 10.1109/ICGSE.2009.34
   Britto Ricardo, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0029-2
   Britto R, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962636
   Britto R, 2019, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2019.00000
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Britto R, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2016.146
   BUCHANAN B, 1974, ADMIN SCI QUART, V19, P533
   Burchell J., 2016, PERS PSYCHOL, V54, P1
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Cataldo M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P101, DOI 10.1145/1595696.1595714
   CHAO GT, 1994, J APPL PSYCHOL, V79, P730, DOI 10.1037/0021-9010.79.5.730
   Chen KR, 2001, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2001.972736
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Ebert C, 2007, Second IEEE International Conference on Global Software Engineering, Proceedings, P177
   Eldh Sigrid, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P412, DOI 10.1109/ICST.2010.58
   Espinosa JA, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P12
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Fagerholm F, 2014, IEEE SOFTWARE, V31, P54, DOI 10.1109/MS.2014.107
   Fagerholm Fabian, 2014, P 8 ACM IEEE INT S E, DOI DOI 10.1145/2652524.2652540
   FELDMAN DC, 1976, ADMIN SCI QUART, V21, P433, DOI 10.2307/2391853
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   GREEN SB, 1991, MULTIVAR BEHAV RES, V26, P499, DOI 10.1207/s15327906mbr2603_7
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   Holt J., 2009, BRIT COMP SOC SERIES
   Jabangwe R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P41, DOI 10.1109/ICGSE.2012.30
   Jabangwe R, 2013, ASIA PAC SOFWR ENG, P289, DOI 10.1109/APSEC.2013.47
   Johnson M, 2010, J WORKPLACE LEARN, V22, P180, DOI 10.1108/13665621011028620
   JONES GR, 1986, ACAD MANAGE J, V29, P262, DOI 10.5465/256188
   Klein HJ, 2006, J VOCAT BEHAV, V68, P96, DOI 10.1016/j.jvb.2005.02.001
   Klein HJ, 2000, PERS PSYCHOL, V53, P47, DOI 10.1111/j.1744-6570.2000.tb00193.x
   Klein HJ, 2008, RES PERS H, V27, P279, DOI 10.1016/S0742-7301(08)27007-6
   Klein HJ, 2015, INT J SELECT ASSESS, V23, P263, DOI 10.1111/ijsa.12113
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Labuschagne A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P381, DOI 10.1109/MSR.2015.45
   Maier GW, 2001, J APPL PSYCHOL, V86, P1034, DOI 10.1037//0021-9010.86.5.1034
   Maxwell SE, 2000, PSYCHOL METHODS, V5, P434, DOI 10.1037/1082-989X.5.4.434
   MEYER JP, 1988, J OCCUP PSYCHOL, V61, P195, DOI 10.1111/j.2044-8325.1988.tb00284.x
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Molokken-Ostvold K, 2004, EMPIR SOFTW ENG, V9, P315, DOI 10.1023/B:EMSE.0000039882.39206.5a
   Morrison EW, 2002, ACAD MANAGE J, V45, P1149, DOI 10.5465/3069430
   Narayanan S, 2009, MANAGE SCI, V55, P1861, DOI 10.1287/mnsc.1090.1057
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Nicholson B., 2001, INFORM ORGAN-UK, V11, P25, DOI DOI 10.1016/S0959-8022(00)00008-4
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   OSTROFF C, 1993, J VOCAT BEHAV, V42, P170, DOI 10.1006/jvbe.1993.1012
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Ramasubbu N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P261, DOI 10.1145/1985793.1985830
   Robson C., 2016, REAL WORLD RES, P560
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Smite D, 2016, IEEE SOFTWARE, V33, P60, DOI 10.1109/MS.2015.82
   Smite D, 2015, IEEE SOFTWARE, V32, P26, DOI 10.1109/MS.2015.102
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Smite D, 2012, J SOFTW-EVOL PROC, V24, P605, DOI 10.1002/smr.550
   Smite D, 2011, IEEE SOFTWARE, V28, P60, DOI 10.1109/MS.2010.112
   Steinmacher Igor, 2014, Collaboration and Technology. 20th International Conference, CRIWG 2014. Proceedings: LNCS 8658, P349, DOI 10.1007/978-3-319-10166-8_31
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Trochim W, 2015, Research methods: The essential knowledge base, V2nd
   van Maanen J., 1979, RES ORGAN BEHAV, V1, P209, DOI DOI 10.1108/S2046-410X(2013)0000001006
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   Vierhauser M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P125, DOI 10.1145/2591062.2591179
   von Rosing M., 2014, The complete business process handbook: Body of knowledge from process modeling to BPM
NR 76
TC 9
Z9 12
U1 5
U2 30
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2020
VL 169
AR 110699
DI 10.1016/j.jss.2020.110699
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NL6FO
UT WOS:000567509300006
DA 2024-07-18
ER

PT J
AU Lacerda, G
   Petrillo, F
   Pimenta, M
   Guéhéneuc, YG
AF Lacerda, Guilherme
   Petrillo, Fabio
   Pimenta, Marcelo
   Gueheneuc, Yann Gael
TI Code smells and refactoring: A tertiary systematic review of challenges
   and observations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Code smells; Refactoring; Tertiary systematic review
ID SOFTWARE ENGINEERING JOURNALS; TECHNICAL DEBT; BAD SMELLS; CITED
   ARTICLES; OPPORTUNITIES; IMPACT; MANAGEMENT; EVOLUTION; KNOWLEDGE;
   INDUSTRY
AB Refactoring and smells have been well researched by the software-engineering research community these past decades. Several secondary studies have been published on code smells, discussing their implications on software quality, their impact on maintenance and evolution, and existing tools for their detection. Other secondary studies addressed refactoring, discussing refactoring techniques, opportunities for refactoring, impact on quality, and tools support.
   In this paper, we present a tertiary systematic literature review of previous surveys, secondary systematic literature reviews, and systematic mappings. We identify the main observations (what we know) and challenges (what we do not know) on code smells and refactoring. We perform this tertiary review using eight scientific databases, based on a set of five research questions, identifying 40 secondary studies between 1992 and 2018.
   We organize the main observations and challenges about code smell and their refactoring into: smells definitions, most common code-smell detection approaches, code-smell detection tools, most common refactoring, and refactoring tools. We show that code smells and refactoring have a strong relationship with quality attributes, i.e., with understandability, maintainability, testability, complexity, functionality, and reusability. We argue that code smells and refactoring could be considered as the two faces of a same coin. Besides, we identify how refactoring affects quality attributes, more than code smells. We also discuss the implications of this work for practitioners, researchers, and instructors. We identify 13 open issues that could guide future research work.
   Thus, we want to highlight the gap between code smells and refactoring in the current state of software-engineering research. We wish that this work could help the software-engineering research community in collaborating on future work on code smells and refactoring. (C) 2020 Published by Elsevier Inc.
C1 [Lacerda, Guilherme] Univ Vale Rio dos Sinos, Polytech Sch, Sao Leopoldo, RS, Brazil.
   [Lacerda, Guilherme; Pimenta, Marcelo] Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Dept Comp Sci & Math, Chicoutimi, PQ, Canada.
   [Gueheneuc, Yann Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Universidade do Vale do Rio dos Sinos (Unisinos); Universidade Federal
   do Rio Grande do Sul; University of Quebec; University of Quebec
   Chicoutimi; Concordia University - Canada
RP Lacerda, G (corresponding author), Univ Vale Rio dos Sinos, Polytech Sch, Sao Leopoldo, RS, Brazil.; Lacerda, G (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
EM guilhermeslacerda@gmail.com; fabio@petrillo.com; mpimenta@inf.ufrgs.br;
   yann-gael.gueheneuc@concordia.ca
RI Lacerda, Guilherme/G-9839-2012
OI Lacerda, Guilherme/0000-0002-9773-3264; Petrillo,
   Fabio/0000-0002-8355-1494
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abebe M., 2014, ADV SCI TECHNOLOGY L, DOI [10.14257/astl.2014.46.59, DOI 10.14257/ASTL.2014.46.59]
   Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Aivosto, 2018, PROJ AN V10 2 VIS BA
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 2006, 2006 INT C POWER SYS
   [Anonymous], PATTERNS AGILE PRACT
   [Anonymous], 2004, XP Ser
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 1991, 9126 ISOIEC
   [Anonymous], COMP 21 ACM SIGPLAN
   B da Silva F.Q., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p33:1, DOI DOI 10.1145/1852786.1852830
   Bandi A, 2013, WORK CONF REVERSE EN, P341, DOI 10.1109/WCRE.2013.6671309
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BARRETT AR, 1995, EXPERT SYST APPL, V8, P169, DOI 10.1016/0957-4174(94)E0007-H
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Bian YX, 2014, ADV INTELL SYST, V250, P141, DOI 10.1007/978-81-322-1695-7_17
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Cairo A.S., 2018, J INF SCI TECHNOL EN, V9, P1, DOI [10.20944/preprints201810.0059.v1, DOI 10.20944/PREPRINTS201810.0059.V1]
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   Cardoso B., 2015, P ANN C BRAZ S INF S, V1, P347
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Dig D., 2017, SIGPLAN NOTICES, V52, P1, DOI [10.1145/3170492.3148040, DOI 10.1145/3170492.3148040]
   Neto BFD, 2015, EXPERT SYST APPL, V42, P1652, DOI 10.1016/j.eswa.2014.09.022
   Express D., 2018, CODERUSH IDE PRODUCT
   Fanta R, 1998, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSM.1998.738515
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler Martin, 2019, REFACTORING IMPROVIN
   Gamma Erich., 1994, DESIGN PATTERNS
   Garousi V, 2020, IEEE SOFTWARE, V37, P65, DOI 10.1109/MS.2019.2914663
   Garousi V, 2020, IEEE SOFTWARE, V37, P68, DOI 10.1109/MS.2018.2880823
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Goldman Alfredo, 2004, J BRAZILIAN COMPUTER, V10, P4
   GRADISNIKMITJA, 2018, SQAMIA 2018, P1, DOI [10.20944/preprints201810.0059.v1, DOI 10.20944/PREPRINTS201810.0059.V1]
   Griffith I., 2011, P 24 INT C COMP APPL, P1
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   Gupta A, 2017, LECT NOTES COMPUT SC, V10408, P665, DOI 10.1007/978-3-319-62404-4_49
   Haendler T., 2019, 11 INT C COMP SUPP E, V1, P1
   Haendler T., 2019, 52 HAW INT C SYST SC, P1
   Haendler Thorsten, 2018, P 13 INT C SOFTW TEC, P363
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hozano M, 2018, INFORM SOFTWARE TECH, V93, P130, DOI 10.1016/j.infsof.2017.09.002
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Jemerov Dmitry, 2008, 2 ACM WORKSH REF TOO, P13, DOI [10.1145/1636642.1636655, DOI 10.1145/1636642.1636655]
   JetBrains, 2018, MOST INT EXT VIS STU
   Kerievsky J., 2004, REFACTORING PATTERNS
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koschke R., 2007, DAGSTUHL SEMINAR P, P1
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lacerda G., 2019, ONLINE REPOSITORY TE
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lahtinen S, 2016, PROCEEDINGS OF THE 10TH TRAVELLING CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (VIKINGPLOP'16), DOI 10.1145/3022636.3022642
   Le Goues C, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.3571235
   Lee YY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1181, DOI 10.1109/ICSE.2013.6606673
   Leppänen M, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P61, DOI 10.1109/MTD.2015.7332627
   Leppänen M, 2015, IEEE SOFTWARE, V32, P62, DOI 10.1109/MS.2015.132
   Li H., 2008, P 7 ACM SIGPLAN ERL, P12
   Li HQ, 2012, LECT NOTES COMPUT SC, V7212, P501, DOI 10.1007/978-3-642-28872-2_34
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   López C, 2014, 2014 International Symposium on Computers in Education (SIIE), P35, DOI 10.1109/SIIE.2014.7017701
   Löwe W, 2005, INT J SOFTW ENG KNOW, V15, P995, DOI 10.1142/S0218194005002622
   Man B.R., 2018, BICYCLE REPAIR MAN
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mantyla Mika., 2003, Bad Smells in Software - a Taxonomy and an Empirical Study
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Martin R. C., 2007, Agile principles, patterns, and practices in C#
   McCall J.A., 1977, US Rome Air Development Center Reports, VI
   Mealy E., 2006, 2006 Australian Software Engineering Conference
   Mealy E, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASWEC.2007.24
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2003, ELECTRON NOTES THEOR, V82, P483, DOI [10.1016/S1571-0661(05)82624-6, DOI 10.1016/S1571-0661(05)82624-6]
   Mihancea PF, 2006, INT C PROGRAM COMPRE, P285, DOI 10.1109/ICPC.2006.48
   Mihancea PF, 2009, EUR CON SFTWR MTNCE, P7, DOI 10.1109/CSMR.2009.31
   Min Zhang, 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, P161, DOI 10.1109/SEW.2008.26
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Moha N., 2010, IEEE T SOFTW ENG
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Murphy-Hill E., 2007, P 2007 OOPSLA WORKSH, P1
   Murphy-Hill E., 2007, P OOPSLA WORKSH ECL, P1
   Murphy-Hill E., 2008, P RS SE, P36
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Offutt J, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2001.989461
   Opdyke W.F., 1992, REFACTORING OBJECT O
   Parnin C, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P77
   Pate JR, 2013, J SOFTW-EVOL PROC, V25, P261, DOI 10.1002/smr.579
   Perez J., 2011, REFACTORING PLANNING
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Piveta E.K., 2009, IMPROVING SEARCH REF
   Piveta EK, 2006, J UNIVERS COMPUT SCI, V12, P811
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rattan D, 2016, INTERNATIONAL CONFERENCE ON ADVANCES IN INFORMATION COMMUNICATION TECHNOLOGY & COMPUTING, 2016, DOI 10.1145/2979779.2979855
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Roberts D.B., 1999, Practical Analysis for Refactoring
   Rochimah S., 2015, International Journal of Software Engineering and Its Applications, V9, P197
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Saadeh Emmad., 2009, Proceedings of the 2009 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists (SAICSIT '09), P22, DOI 10.1145/1632149.1632154
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Sandalski M, 2011, CYBERN INF TECHNOL, V11, P46
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sheikh Javed Anjum, 2011, Human Interface and the Management of Information. Interacting with Information. Proceedings Symposium on Human Interface 2011. Held as Part of HCI International 2011, P48, DOI 10.1007/978-3-642-21793-7_6
   Sheneamer A., 2016, INT J COMPUT APPL, V137, P975, DOI [10.1109/MITICON.2016.8025227, DOI 10.1109/MITICON.2016.8025227]
   Sidhu BK, 2018, INT J SOFTW ENG KNOW, V28, P1287, DOI 10.1142/S0218194018500365
   Singh R., 2018, INT J FUT REVOL COMP, V8, P62
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Smith S., 2006, SIGCSE Bulletin, V38, P349, DOI 10.1145/1124706.1121451
   Software W.T., 2018, VISUAL ASSIST VISUAL
   Sousa BL, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1528, DOI 10.1145/3167132.3167295
   Stoecklin S, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P145, DOI 10.1145/1227504.1227364
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Telea A, 2011, COMPUTATION STAT, V26, P635, DOI 10.1007/s00180-011-0248-2
   Tempero E, 2017, COMMUN ACM, V60, P54, DOI 10.1145/3131873
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N., 2010, EVALUATION IMPROVEME
   Tsantalis N, 2018, JDEODORANT
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   Vedurada J, 2017, PROC IEEE ACM INT C, P305, DOI 10.1109/ICSE-C.2017.97
   Wake W.C., 2003, Refactoring Workbook, V1st
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Wohlin C, 2008, INFORM SOFTWARE TECH, V50, P3, DOI 10.1016/j.infsof.2007.10.002
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   [No title captured]
NR 156
TC 74
Z9 77
U1 4
U2 40
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2020
VL 167
AR 110610
DI 10.1016/j.jss.2020.110610
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LX9TB
UT WOS:000540166800010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bidlake, L
   Aubanel, E
   Voyer, D
AF Bidlake, Leah
   Aubanel, Eric
   Voyer, Daniel
TI Systematic literature review of empirical studies on mental
   representations of programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Mental representations; Program comprehension; Systematic literature
   review
ID UNDERSTANDING BEHAVIOR; SOFTWARE MAINTENANCE; SEMANTIC COMPLEXITY; SKILL
   DIFFERENCES; COMPREHENSION; NOVICE; EXPERT; KNOWLEDGE; PERFORMANCE;
   STRATEGIES
AB Programmers are frequently tasked with modifying, enhancing, and extending applications. To perform these tasks, programmers must understand existing code by forming mental representations. Empirical research is required to determine the mental representations constructed during program comprehension to inform the development of programming languages, instructional practices, and tools. To make recommendations for future work a systematic literature review was conducted that summarizes the empirical research on mental representations formed during program comprehension, how the methods and tasks have changed over time, and the research contributions.
   The data items included in the systematic review are empirical studies of programmers that investigated the comprehension and internal representation of code written in a formal programming language. The eligibility criteria used in the review were meant to extract studies with a focus on knowledge representation as opposed to knowledge utilization.
   The results revealed a lack of incremental research and a dramatic decline in the research meaning that newly developed or popularized languages and paradigms have not been a part of the research reviewed. Accordingly, we argue that there needs to be a resurgence of empirical research on the psychology of programming to inform the design of tools and languages, especially in new and emerging paradigms. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Bidlake, Leah; Aubanel, Eric] Univ New Brunswick, Fac Comp Sci, 550 Windsor St, Windsor, NB E3B 5A3, Canada.
   [Voyer, Daniel] Univ New Brunswick, Dept Psychol, Windsor, NB, Canada.
C3 University of New Brunswick; University of New Brunswick
RP Bidlake, L (corresponding author), Univ New Brunswick, Fac Comp Sci, 550 Windsor St, Windsor, NB E3B 5A3, Canada.
EM leah.bidlake@unb.ca; aubanel@unb.ca; voyer@unb.ca
RI Bidlake, Leah/CAJ-3256-2022
OI Bidlake, Leah/0009-0008-9725-415X
CR ADELSON B, 1981, MEM COGNITION, V9, P422, DOI 10.3758/BF03197568
   ADELSON B, 1984, J EXP PSYCHOL LEARN, V10, P483, DOI 10.1037/0278-7393.10.3.483
   Alardawi AS, 2015, 2015 WORLD CONGRESS ON INFORMATION TECHNOLOGY AND COMPUTER APPLICATIONS (WCITCA)
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], 2017, WORKSHOP PSYCHOL PRO
   [Anonymous], P 9 EUR C COGN ERG C
   [Anonymous], 2015, 2015 13 INT C ENG MO, DOI DOI 10.1109/EMES.2015.7158420
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], P 9 ANN INT ACM C IN
   [Anonymous], COGNITION COMPUTER P
   [Anonymous], TECHNICAL REPORT
   [Anonymous], SPECIAL TOPICS SUPER
   [Anonymous], 2013, INDIA SOFTWARE ENG C
   ARAB M, 1992, SIGPLAN NOTICES, V27, P37, DOI 10.1145/130973.130975
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   BARFIELD W, 1986, BEHAV INFORM TECHNOL, V5, P15, DOI 10.1080/01449298608914495
   Barfield W, 1997, PERCEPT MOTOR SKILL, V85, P1471, DOI 10.2466/pms.1997.85.3f.1471
   BASILI VR, 1981, IEEE T SOFTWARE ENG, V7, P299, DOI 10.1109/TSE.1981.230841
   BATESON AG, 1987, INT J MAN MACH STUD, V26, P649, DOI 10.1016/S0020-7373(87)80058-5
   BERGANTZ D, 1991, INT J MAN MACH STUD, V35, P313, DOI 10.1016/S0020-7373(05)80131-2
   Boehm-Davis D. A., 1987, Proceedings of the 1987 International Conference on Systems, Man, and Cybernetics (Cat. No.87CH2503-1), P990
   BOEHMDAVIS DA, 1992, INT J MAN MACH STUD, V36, P21, DOI 10.1016/0020-7373(92)90051-L
   Boshernitsan M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P567
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Burkhardt J.-M., 1995, Human-Computer Interaction. Interact '95, P133
   Burkhardt JM, 1998, PROG COMPREHEN, P82, DOI 10.1109/WPC.1998.693294
   Burkhardt JM, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P339
   Chamberlain B., 2000, PROC ACMIEEE C SUPER, P46
   Corritore C. L., 1991, International Journal of Human-Computer Interaction, V3, P199, DOI 10.1080/10447319109526004
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   Crk I, 2016, ACM T COMPUT-HUM INT, V23, DOI 10.1145/2829945
   DAVIES SP, 1994, INT J HUM-COMPUT ST, V40, P703, DOI 10.1006/ijhc.1994.1032
   DAVIES SP, 1995, HUM-COMPUT INTERACT, V10, P227, DOI 10.1207/s15327051hci1002&3_3
   DAVIES SP, 1990, INT J MAN MACH STUD, V32, P461, DOI 10.1016/S0020-7373(05)80143-9
   DAVIES SP, 1990, BEHAV INFORM TECHNOL, V9, P201, DOI 10.1080/01449299008924237
   DETIENNE F, 1990, INT J MAN MACH STUD, V33, P323, DOI 10.1016/S0020-7373(05)80122-1
   Detienne Francoise, 2001, Software design cognitive aspects.
   Dingsoyr T., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P27, DOI 10.1109/CHASE.2012.6223016
   Ebcioglu K., 2006, WORKSH PROD PERF HIG, P30
   Ehrlich K., 1984, HUMAN FACTORS COMPUT, P113
   Ericsson KA., 2006, The Cambridge handbook of expertise and expert performance, DOI DOI 10.1017/CBO9780511816796
   FIX V, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P74
   GILMORE DJ, 1988, Q J EXP PSYCHOL-A, V40, P423, DOI 10.1080/02724988843000005
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green T. R. G., 1995, Human-Computer Interaction. Interact '95, P139
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   GUERIN B, 1990, J GEN PSYCHOL, V117, P379, DOI 10.1080/00221309.1990.9921144
   Hochstein L., 2005, SC 05, P35
   Hochstein L, 2008, J SYST SOFTWARE, V81, P1920, DOI 10.1016/j.jss.2007.12.798
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Khazaei B, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P19, DOI 10.1109/HCC.2002.1046336
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Korel B, 1998, PROG COMPREHEN, P145, DOI 10.1109/WPC.1998.693339
   KOUBEK RJ, 1991, ERGONOMICS, V34, P1095, DOI 10.1080/00140139108964849
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Mattson T, 2008, DES AUT CON, P7
   MCKEITHEN KB, 1981, COGNITIVE PSYCHOL, V13, P307, DOI 10.1016/0010-0285(81)90012-8
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Mosemann R, 2001, PROG COMPREHEN, P79, DOI 10.1109/WPC.2001.921716
   MYNATT BT, 1984, INT J MAN MACH STUD, V21, P91, DOI 10.1016/S0020-7373(84)80060-7
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Navarro-Prieto R, 2001, INT J HUM-COMPUT ST, V54, P799, DOI 10.1006/ijhc.2000.0465
   Pariser E., 2011, FILTER BUBBLE WHAT I
   Parkin P, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P221, DOI 10.1109/ASWEC.2004.1290475
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Pennington Nancy, 1987, Empirical studies of programmers, P100
   Petre M, 1999, INT J HUM-COMPUT ST, V51, P7, DOI 10.1006/ijhc.1999.0267
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Ramalingam V., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P124, DOI 10.1145/266399.266411
   ROBERTSON SP, 1990, INT J MAN MACH STUD, V33, P343, DOI 10.1016/S0020-7373(05)80123-3
   Romero P, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P223, DOI 10.1109/VLHCC.2004.50
   Romero P, 2001, INT J HUM-COMPUT ST, V54, P211, DOI 10.1006/ijhc.2000.0408
   Sajaniemi J, 2005, PROG COMPREHEN, P55, DOI 10.1109/WPC.2005.8
   SCHMIDT AL, 1986, INT J MAN MACH STUD, V25, P399, DOI 10.1016/S0020-7373(86)80068-2
   Scholtz J., 1990, International Journal of Human-Computer Interaction, V2, P51, DOI 10.1080/10447319009525970
   Shaft T. M., 1998, Journal of Management Information Systems, V15, P51
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   SHNEIDERMAN B, 1976, INT J COMPUT INF SCI, V5, P123, DOI 10.1007/BF00975629
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   STONE DN, 1990, INT J MAN MACH STUD, V33, P81, DOI 10.1016/S0020-7373(05)80116-6
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Sulír M, 2015, ACSIS-ANN COMPUT SCI, V5, P997, DOI 10.15439/2015F301
   TEASLEY BE, 1994, INT J HUM-COMPUT ST, V40, P757, DOI 10.1006/ijhc.1994.1036
   Teh A, 2012, IEEE SOFTWARE, V29, P53, DOI 10.1109/MS.2011.157
   Tubaishat A, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P321, DOI 10.1109/AICCSA.2001.934005
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   VESSEY I, 1987, INT J MAN MACH STUD, V27, P65, DOI 10.1016/S0020-7373(87)80044-5
   VIHMALO A, 1988, Z PSYCHOL, V196, P401
   von Mayrhauser A, 1998, PROG COMPREHEN, P164, DOI 10.1109/WPC.1998.693345
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Whalley Jacqueline, 2014, Proceedings of the 2014 Conference on Innovation Technology in Computer Science Education, ITiCSE '14, P279, DOI DOI 10.1145/2591708.2591762
   WIEDENBECK S, 1991, INT J MAN MACH STUD, V35, P517, DOI 10.1016/S0020-7373(05)80090-2
   WIEDENBECK S, 1993, INT J MAN MACH STUD, V39, P793, DOI 10.1006/imms.1993.1084
   Wiedenbeck S, 1999, INTERACT COMPUT, V11, P255, DOI 10.1016/S0953-5438(98)00029-0
   Wiedenbeck S, 1999, INT J HUM-COMPUT ST, V51, P71, DOI 10.1006/ijhc.1999.0269
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wong SY, 1998, INT J PSYCHOL, V33, P259, DOI 10.1080/002075998400303
   Ye N, 1996, BEHAV INFORM TECHNOL, V15, P139, DOI 10.1080/014492996120229
NR 113
TC 5
Z9 5
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110565
DI 10.1016/j.jss.2020.110565
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LJ5DR
UT WOS:000530186500013
DA 2024-07-18
ER

PT J
AU Li, T
   Chen, ZS
AF Li, Tong
   Chen, Zhishuai
TI An ontology-based learning approach for automatically classifying
   security requirements
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE security requirements ontology; security requirements classification;
   linguistic pattern; natural language processing; machine learning
AB Although academia has recognized the importance of explicitly specifying security requirements in early stages of system developments for years, in reality, many projects mix security requirements with other types of requirements. Thus, there is a strong need for precisely and efficiently classifying such security requirements from other requirements in requirement specifications. Existing studies leverage lexical evidence to build probabilistic classifiers, which are domain-dependent by design and cannot effectively classify security requirements from different application domains. In this paper, we propose an ontology-driven learning approach to automatically classify security requirements. Our approach consists of a conceptual layer and a linguistic layer, which understands security requirements based on not only lexical evidence but also conceptual domain knowledge. In particular, we apply a systematic approach to identify linguistic features of security requirements based on an extended security requirements ontology and linguistic knowledge, connecting the conceptual layer with the linguistic layer. Such linguistic features are then used to train domain-independent security requirements classifiers by using machine learning techniques. We have carried out a series of experiments to evaluate the performance and generalization ability of our proposal against existing approaches. The results of the experiments show that the proposed approach outperforms existing approaches with a significant increase of Fi score (0.63 VS. 0.44) when the training dataset and the testing dataset come from different application domains, i.e., the classifiers trained by our approach can be generalized to classify security requirements from different domains. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Li, Tong; Chen, Zhishuai] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
C3 Beijing University of Technology
RP Li, T (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
EM litong@bjut.edu.cn
RI li, tong/JYO-7530-2024
FU National Key R&D Program of China [2018YFB0804703]; National Natural
   Science of Foundation of China [61902010]
FX This work is supported by National Key R&D Program of China (No.
   2018YFB0804703) and the National Natural Science of Foundation of China
   (No.61902010).
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P496, DOI 10.1109/RE.2017.36
   [Anonymous], 2012, Non-functional requirements in software engineering
   [Anonymous], 2009, P 4 INT S INF COMP C, DOI DOI 10.1145/1533057.1533084
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Binkhonain M, 2019, Expert Systems with Applications
   Ceccato M., 2014, FOR C ADV INF SYST E, V204, P215, DOI DOI 10.1007/978-3-319-19270-314
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Committee B., 2005, BSI IT GRUNDSCH CAT
   Committee I., 2005, 27002 ISOIEC
   Committee I., 2012, 270002012 ISOIEC
   Elahi G, 2009, LECT NOTES COMPUT SC, V5829, P99, DOI 10.1007/978-3-642-04840-1_10
   Firesmith D.G., 2005, INT WORKSHOP HIGH AS, P29
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hoo K.S., 2001, Secure Business Quarterly, V1, pQ4
   Institute P., 2018, 2018 COST DATA BREAC
   Kaiya H, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P189
   Kim A, 2005, LECT NOTES COMPUT SC, V3761, P1483
   Knauss E, 2011, LECT NOTES COMPUT SC, V6606, P4, DOI 10.1007/978-3-642-19858-8_2
   Lasheras J, 2009, J RES PRACT INF TECH, V41, P119
   Li T, 2017, ASIA PAC SOFWR ENG, P388, DOI 10.1109/APSEC.2017.45
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Massacci F, 2011, LECT NOTES BUS INF P, V83, P622
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mouratidis H, 2003, LECT NOTES ARTIF INT, V2773, P1387
   Munaiah N, 2017, INT REQUIR ENG CONF, P506, DOI 10.1109/RE.2017.79
   NIST S., 2003, SPEC PUBL N IN PRESS, P800
   PICARD RR, 1984, J AM STAT ASSOC, V79, P575, DOI 10.2307/2288403
   Rashwan A, 2013, P INT COMP SOFTW APP, P381, DOI 10.1109/COMPSAC.2013.64
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Rudolph M, 2016, INT REQUIR ENG CONF, P283, DOI 10.1109/RE.2016.22
   Saeki M, 2013, INT J SOFTW ENG KNOW, V23, P695, DOI 10.1142/S0218194013500174
   Salini P., 2016, NOVEL METHOD ONTOLOG, P1
   Souag A, 2015, LECT NOTES COMPUT SC, V8978, P157, DOI 10.1007/978-3-319-15618-7_13
   Souag A, 2012, LECT NOTES BUS INF P, V112, P61
   Tóth L, 2018, LECT NOTES COMPUT SC, V10964, P492, DOI 10.1007/978-3-319-95174-4_39
   Tsoumas B, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1, PROCEEDINGS, P985
   Tulloch M., 2003, Microsoft Encyclopedia of Security
   Wang WT, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P443, DOI 10.1109/REW.2017.56
NR 44
TC 20
Z9 23
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110566
DI 10.1016/j.jss.2020.110566
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LJ5DR
UT WOS:000530186500002
DA 2024-07-18
ER

PT J
AU Sodja, A
   Skrjanc, I
   Zupancic, B
AF Sodja, Anton
   Skrjanc, Igor
   Zupancic, Borut
TI Cyber-physical modelling in Modelica with model-reduction techniques
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Continuous systems modelling; Object oriented modelling; Realisation
   preserving modelling; Model reduction; Ranking metrics; Modelica
ID ORDER
AB Object-oriented modelling of cyber-physical systems with Modelica and similar environments has brought many advantages, especially the efficient re-use of models and thus the possibility of creating powerful multi-domain libraries. Unfortunately, the models have become highly complex, which causes serious problems during processing and execution. Consequently, verification and debugging is becoming an increasingly challenging task. The continuous investigation of simplifications and reductions in all phases of model developments is thus urgent.
   The present paper deals with reduction methods based on metric ranking and preserve realisation, which means that the structure and the parameters of the model remain physically interpretable. Two model reduction methods are described and implemented in Open Modelica. The first operates on a set of differential-algebraic equations, and the second is based on modified bond-graphs-reduction techniques. The latter approach is suitable for component-based models in Modelica that are usually represented graphically with object diagrams. The paper briefly describes the research area, the problems of the adoption of the developed model reduction techniques to the Modelica environments, and the final implementation. Both proposed approaches are tested on the model of a car suspension system and briefly discussed. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Sodja, Anton; Skrjanc, Igor; Zupancic, Borut] Univ Ljubljana, Fac Elect Engn, Trzaska 25, Ljubljana 1000, Slovenia.
C3 University of Ljubljana
RP Zupancic, B (corresponding author), Univ Ljubljana, Fac Elect Engn, Trzaska 25, Ljubljana 1000, Slovenia.
EM borut.zupancic@fe.uni-lj.si
FU Slovenian Research Agency [P2-0219]
FX This work has been supported by Slovenian Research Agency with the
   Research Programme P2-0219.
CR [Anonymous], THESIS
   [Anonymous], 2012, OP SOURC MOD CONS
   Borchers C., 1997, THESIS
   Borutsky W., 2010, BOND GRAPH METHODOLO
   Cellier EE., 2009, P 7 INT MOD C COM 20, P142
   Cellier RE., 1991, CONTINOUS SYSTEM MOD
   Chang S.Y., 2001, P ASME DYN SYST CONT, P363
   Ersal T., 2007, THESIS
   Ersal T, 2008, J DYN SYST-T ASME, V130, DOI 10.1115/1.2977484
   Fritzson P., 2014, PRINCIPLES OBJECT OR, DOI DOI 10.1002/9781118989166
   Kokotovic P., 1968, IEEE Transactions on Automatic Control, Vac-13, P377, DOI 10.1109/TAC.1968.1098927
   Louca L.S., 1998, THESIS
   Manzoni V., 2011, P 8 MOD C DRESD GERM, P784
   Marko D., 1992, PRENTICE HALL INT SE
   Modelica Association, 2010, MOD STAND LIB 3 1 US
   Modelica Association, 2012, MOD SPEC VERS 3 3
   Murray-Smith J.D., 2009, SIMULATION NEWS EURO, V19, P47
   Sheehan B. N., 1999, 1999 IEEE/ACM International Conference on Computer-Aided Design. Digest of Technical Papers (Cat. No.99CH37051), P200, DOI 10.1109/ICCAD.1999.810649
   Sodja A., 2012, THESIS
   Sodja A., 2012, P 7 VIENN C MATH MOD, P322
   Sodja A, 2019, SIMUL-T SOC MOD SIM, V95, P607, DOI 10.1177/0037549718815338
   Sommer R., 2000, P 6 INT WORKSH SYMB
   Sommer R, 2008, SIMUL MODEL PRACT TH, V16, P1024, DOI 10.1016/j.simpat.2008.04.012
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Wichmann T., 2004, THESIS
   WICHMANN T, 2003, P APPL MATH MECH, V2, P448
   Wolfram Research Inc., 2012, Mathematica
   Ye Y., 1999, Proceedings of the 1999 American Control Conference (Cat. No. 99CH36251), P4486, DOI 10.1109/ACC.1999.786433
   Ye Y., 2002, THESIS
   Zupancic B, 2013, SIMUL MODEL PRACT TH, V33, P45, DOI 10.1016/j.simpat.2012.03.009
   [No title captured]
NR 31
TC 3
Z9 4
U1 2
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2020
VL 163
AR 110517
DI 10.1016/j.jss.2019.110517
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT2WS
UT WOS:000518876900007
DA 2024-07-18
ER

PT J
AU Wu, XX
   Zheng, W
   Chen, X
   Wang, F
   Mu, DJ
AF Wu, Xiaoxue
   Zheng, Wei
   Chen, Xiang
   Wang, Fang
   Mu, Dejun
TI CVE-assisted large-scale security bug report dataset construction method
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Security bug report prediction; Voting classification; Dataset
   construction; Common vulnerabilities and exposures
AB Identifying SBRs (security bug reports) is crucial for eliminating security issues during software development. Machine learning are promising ways for SBR prediction. However, the effectiveness of the state-of-the-art machine learning models depend on high-quality datasets, while gathering large-scale datasets are expensive and tedious. To solve this issue, we propose an automated data labeling approach based on iterative voting classification. It starts with a small group of ground-truth traing samples, which can be labeled with the help of authoritative vulnerability records hosted in CVE (Common Vulnerabilities and Exposures). The accuracy of the prediction model is improved with an iterative voting strategy. By using this approach, we label over 80k bug reports from OpenStack and 40k bug reports from Chromium. The correctness of these labels are then manually reviewed by three experienced security testing members. Finally, we construct a large-scale SBR dataset with 191 SBRs and 88,472 NSBRs (non-security bug reports) from OpenStack; and improve the quality of existing SBR dataset Chromium by identifying 64 new SBRs from previously labeled NSBRs and filtering out 173 noise bug reports from this dataset. These share datasets as well as the proposed dataset construction method help to promote research progress in SBR prediction research domain, (C) 2019 Elsevier Inc. All rights reserved.
C1 [Wu, Xiaoxue; Mu, Dejun] Northwestern Polytech Univ, Sch Cybersecur, Xian 710072, Peoples R China.
   [Zheng, Wei; Chen, Xiang] Northwestern Polytech Univ, Sch Software, Xian 710072, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Comp Sci & Technol, Nantong 226019, Peoples R China.
   [Wang, Fang] Northwestern Polytech Univ, Sch Comp Sci, Xian 710072, Peoples R China.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Nantong University; Northwestern Polytechnical University
RP Zheng, W (corresponding author), Northwestern Polytech Univ, Sch Software, Xian 710072, Peoples R China.
EM wuxiaoxue00@gmail.com; wzheng@nwpu.edu.cn; xchencs@ntu.edu.cn;
   wangf@nwpu.edu.co
RI Chen, Xiang/AAG-3663-2019; Wang, Fang/HPC-5174-2023; wang,
   fang/GYD-4295-2022
OI Chen, Xiang/0000-0002-1180-3891; Zheng, Wei/0000-0003-2905-7193
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   Anisetti M, 2017, IEEE INT CONF CLOUD, P294, DOI 10.1109/CLOUD.2017.45
   [Anonymous], 2018, OPENSTACK USER SURVE
   [Anonymous], [No title captured]
   [Anonymous], 2019, IEEE T SOFTW ENG
   [Anonymous], 2017, CORR
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], IEEE COMP SOFTW APPL
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2016, APSYS 16, DOI DOI 10.1145/2967360.2967366
   [Anonymous], [No title captured]
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Chang Y.-Y., 2011, Privacy, Security, Risk and Trust (PASSAT) and 2011 IEEE Third Inernational Conference on Social Computing (SocialCom), 2011 IEEE Third International Conference on, IEEE, P1290
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen QY, 2018, ASIA PAC SOFWR ENG, P345, DOI 10.1109/APSEC.2018.00049
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Fan Y, 2019, INT J NEUROSCI, V129, P30, DOI 10.1080/00207454.2018.1492575
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Garcia W., 2016, P 2016 1 ACM WORKSHO, P67
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Gunawi H. S., 2014, P ACM S CLOUD COMP S
   Jia Tong, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P16, DOI 10.1109/TSA.2015.14
   Junk T, 1999, NUCL INSTRUM METH A, V434, P435, DOI 10.1016/S0168-9002(99)00498-2
   Li GP, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126964
   Martin RA, 2003, IEEE SYS MAN CYBERN, P1528
   Musavi P, 2016, PROC INT SYMP SOFTW, P424, DOI 10.1109/ISSRE.2016.42
   Ng AndrewY., 2004, ICML'04, DOI DOI 10.1145/1015330.1015435
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Romano J., 2006, ANN M FLORIDA ASS IN
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shu R., 2019, INT C AUTOMATED SOFT
   Pham V, 2018, IEEE INT CONF BIG DA, P1296, DOI 10.1109/BigData.2018.8622092
   Wan Z., 2018, IEEE T SOFTW ENG
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zheng W, 2019, J SYST SOFTWARE, V151, P210, DOI 10.1016/j.jss.2019.02.025
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 50
TC 18
Z9 18
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2020
VL 160
AR 110456
DI 10.1016/j.jss.2019.110456
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW5KX
UT WOS:000503091900005
DA 2024-07-18
ER

PT J
AU Pan, MX
   Lu, YF
   Pei, Y
   Zhang, T
   Zhai, J
   Li, XD
AF Pan, Minxue
   Lu, Yifei
   Pei, Yu
   Zhang, Tian
   Zhai, Juan
   Li, Xuandong
TI Effective testing of Android apps using extended IFML models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Interaction Flow Modeling Language; Android apps; Model-based testing
AB The last decade has seen a vast proliferation of mobile apps. To improve the reliability of such apps, various techniques have been developed to automatically generate tests for them. While such techniques have been proven to be useful in producing test suites that achieve significant levels of code coverage, there is still enormous demand for techniques that effectively generate tests to exercise more code and detect more bugs of apps.
   We propose in this paper the Adamant approach to automated Android app testing. Adamant utilizes models that incorporate valuable human knowledge about the behaviours of the app under consideration to guide effective test generation, and the models are encoded in an extended version of the Interaction Flow Modeling Language (IFML).
   In an experimental evaluation on 10 open source Android apps, Adamant generated over 130 test actions per minute, achieved around 68% code coverage, and exposed 8 real bugs, significantly outperforming other test generation tools like Monkey, AndroidRipper, and Gator in terms of code covered and bugs detected. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Pan, Minxue; Lu, Yifei; Zhang, Tian; Zhai, Juan; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Pan, Minxue; Lu, Yifei; Zhai, Juan] Nanjing Univ, Software Inst, Nanjing, Jiangsu, Peoples R China.
   [Zhang, Tian; Li, Xuandong] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Pei, Yu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
C3 Nanjing University; Nanjing University; Nanjing University; Hong Kong
   Polytechnic University
RP Pan, MX; Zhang, T (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.; Pan, MX (corresponding author), Nanjing Univ, Software Inst, Nanjing, Jiangsu, Peoples R China.; Zhang, T (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
EM mxp@nju.edu.cn; lyf@smail.nju.edu.cn; csypei@comp.polyu.edu.hk;
   ztluck@nju.edu.cn; zhaijuan@nju.edu.cn; lxd@nju.edu.cn
RI Pan, Minxue/AIC-5169-2022; Pei, Yu/GRI-9837-2022
OI Pei, Yu/0000-0001-6065-6958
FU National Key RD Program [2017YFB1001801]; National Natural Science
   Foundation [61632015, 61972193, 61802166]; Jiangsu Key R&D Program of
   China [BE2017004-4]; Hong Kong RGC [PolyU 152703/16E]; Hong Kong
   Polytechnic University [1-ZVJ1, G-YBXU]
FX The authors thank the anonymous reviewers for their valuable comments
   and suggestions for improving this article. This work is supported by
   the National Key R&D Program (No. 2017YFB1001801), National Natural
   Science Foundation (Nos. 61632015, 61972193, 61802166) and the Jiangsu
   Key R&D Program (No. BE2017004-4) of China. This work is also partly
   supported by the Hong Kong RGC General Research Fund (GRF) PolyU
   152703/16E and The Hong Kong Polytechnic University internal fund 1-ZVJ1
   and G-YBXU.
CR Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   Amalfitano D, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P33, DOI 10.1109/MobileSoft.2015.11
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2014, TECHNICAL REPORT
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Balagtas-Fernandez Florence T., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P509, DOI 10.1109/ASE.2008.94
   Brajnik G, 2015, LECT NOTES COMPUT SC, V9114, P697, DOI 10.1007/978-3-319-19890-3_60
   Brambilla Marco, 2014, Mobile Web Information Systems. 11th International Conference (MobiWIS 2014). Proceedings: LNCS 8640, P176, DOI 10.1007/978-3-319-10359-4_15
   Chang NN, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P215, DOI 10.1109/QRS.2018.00035
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Farto GD, 2015, ELECTRON NOTES THEOR, V314, P3, DOI 10.1016/j.entcs.2015.05.002
   Frajtak K., 2015, Proceedings of the 2015 Conference on research in adaptive and convergent systems, P509, DOI DOI 10.1145/2811411.2811556
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Heitkotter Henning, 2013, P 28 ANN ACM S APPL, P526
   Jääskeläinen A, 2009, PROC INT CONF SOFTW, P112, DOI 10.1109/ICSE-COMPANION.2009.5070969
   Javed AbuZafer., 2007, AST, P3, DOI DOI 10.1109/AST.2007.2
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Laaz N., 2016, INF TECHN ORG DEV IT, P1
   Li A, 2014, INT CONF SOFTW SECUR, P68, DOI 10.1109/SERE.2014.20
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Liang CJM, 2014, PROCEEDINGS OF THE 20TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING (MOBICOM '14), P519, DOI 10.1145/2639108.2639131
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Mirzaei N, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P461, DOI 10.1109/ISSRE.2015.7381839
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nieminen A., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P131, DOI 10.1109/QSIC.2011.12
   Parada AG, 2012, BRAZ SYM COMPUT SYST, P192, DOI 10.1109/SBESC.2012.44
   Rieger C., 2017, P S APPL COMPUTING, P1599
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
NR 47
TC 5
Z9 6
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2020
VL 159
AR 110433
DI 10.1016/j.jss.2019.110433
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2JD
UT WOS:000502883100006
DA 2024-07-18
ER

PT J
AU Li, SS
   Zhang, H
   Jia, ZJ
   Li, Z
   Zhang, C
   Li, JQ
   Gao, QY
   Ge, JD
   Shan, ZH
AF Li, Shanshan
   Zhang, He
   Jia, Zijia
   Li, Zheng
   Zhang, Cheng
   Li, Jiaqi
   Gao, Qiuya
   Ge, Jidong
   Shan, Zhihao
TI A dataflow-driven approach to identifying microservices from monolithic
   applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Microservices; Monolith; Decomposition; Data flow;
   Business logic(s)
ID SERVICE COMPOSITION; DECOMPOSITION
AB Microservices architecture emphasizes employing multiple small-scale and independently deployable microservices, rather than encapsulating all function capabilities into one monolith. Correspondingly, microservice-oriented decomposition, which has been identified to be an extremely challenging task, plays a crucial and prerequisite role in developing microservice-based systems. To address the challenges in such a task, we propose a dataflow-driven semi-automatic decomposition approach. In particular, a four-step decomposition procedure is defined: (1) conduct the business requirement analysis to generate use case and business logic specification; (2) construct the fine-grained Data Flow Diagrams (DFD) and the process-datastore version of DFD (DFDPS) representing the business logics; (3) extract the dependencies between processes and datastores into decomposable sentence sets; and (4) identify candidate microservices by clustering processes and their closely related datastores into individual modules from the decomposable sentence sets. To validate this microservice-oriented decomposition approach, we performed a case study on Cargo Tracking System that is a typical case decomposed by other microservices identification methods (Service Cutter and API Analysis), and made comparisons in terms of specific coupling and cohesion metrics. The results show that the proposed dataflow-driven decomposition approach can recommend microservice candidates with sound coupling and cohesion through a rigorous and easy to-operate implementation with semi-automatic support. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Li, Shanshan; Zhang, He; Jia, Zijia; Li, Jiaqi; Gao, Qiuya; Ge, Jidong] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
   [Li, Zheng] Univ Concepcion, Dept Comp Sci, Edmundo Larenas 219, Concepcion 4070409, Chile.
   [Zhang, Cheng] Anhui Univ, Sch Comp Sci & Technol, 111 Jiulong Rd, Hefei 230601, Anhui, Peoples R China.
   [Shan, Zhihao] Tencent Bldg,Zhongquyi Rd,Hitech Pk, Shenzhen 518057, Guangdong, Peoples R China.
C3 Nanjing University; Universidad de Concepcion; Anhui University
RP Zhang, C (corresponding author), Anhui Univ, Sch Comp Sci & Technol, 111 Jiulong Rd, Hefei 230601, Anhui, Peoples R China.
EM stu.shanshan.li@gmail.com; hezhang@nju.edu.cn; stu_zijiajia@163.com;
   imlizheng@gmail.com; cheng.zhang@ahu.edu.cn; jachly3@gmail.com;
   g_qiuya@foxmail.com; gjdnju@163.com; cycle44@gmail.com
RI Li, Zheng/R-5781-2016; Li, Shanshan/HLH-7747-2023; Yang,
   Jing/JFK-4046-2023
OI Li, Zheng/0000-0002-9704-7651; Yang, Jing/0009-0004-8274-9863
FU National Natural Science Foundation of China [61572251]
FX This work is supported by the National Natural Science Foundation of
   China (Grant No. 61572251).
CR Abbott Martin L, 2009, The art of scalability: Scalable web architecture, processes
   ADLER M, 1988, IEEE T SOFTWARE ENG, V14, P169, DOI 10.1109/32.4636
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], STRUCTURED DESIGN FU
   [Anonymous], 2015, SOFTWARE ARCHITECTUR
   Arndt T., 1992, Proceedings. Fourth International Conference on Software Engineering and Knowledge Engineering (Cat. No.92TH0438-2), P560, DOI 10.1109/SEKE.1992.227904
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Constantine Larry., 1979, STRUCTURED DESIGN FU
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fritzsch J., 2018, THESIS REUTLINGEN U
   GANE C, 1978, STRUCTURED SYSTEMS A
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Heinrich R, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P223, DOI 10.1145/3053600.3053653
   Ibrahim R., 2011, ARPN J SYST SOFTW, V1, P60
   Fernández-Villamor JI, 2010, ICAART 2010: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 1: ARTIFICIAL INTELLIGENCE, P576
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Jaramillo D, 2016, IEEE SOUTHEASTCON
   Kecskemeti G, 2016, 2016 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS 2016), P591, DOI 10.1109/HPCSim.2016.7568389
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   Lewis James, 2014, Microservices
   Mardukhi F, 2013, APPL SOFT COMPUT, V13, P3409, DOI 10.1016/j.asoc.2012.12.033
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Messina A, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P220, DOI 10.1109/WAINA.2016.71
   Newman S., 2015, BUILDING MICROSERVIC
   Richardson C, 2018, PATTERN MONOLITHIC A
   Richardson C., 2015, Introduction to Microservices (accessed 02/2020)
   Richardson C, 2018, PATTERN MICROSERVICE
   Rosenblatt H.J., 2013, Systems analysis and design
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Sun SX, 2012, INFORM SCIENCES, V199, P138, DOI 10.1016/j.ins.2012.02.061
   Tyszberowicz Shmuel, 2018, Dependable Software Engineering. Theories, Tools, and Applications. 4th International Symposium, SETTA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 10998), P50, DOI 10.1007/978-3-319-99933-3_4
   Vresk T, 2016, 2016 39TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1196, DOI 10.1109/MIPRO.2016.7522321
   Zhao Y., 2009, Proceedings of BMEI, P1
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 38
TC 50
Z9 53
U1 1
U2 35
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2019
VL 157
AR 110380
DI 10.1016/j.jss.2019.07.008
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JA8YP
UT WOS:000488137500013
DA 2024-07-18
ER

PT J
AU Duttagupta, S
   Apte, V
   Gawali, D
AF Duttagupta, Subhasri
   Apte, Varsha
   Gawali, Devidas
TI <i>M</i><SUP>3</SUP>- A hybrid measurement-modeling approach for
   CPU-bound applications on cross-platform architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Benchmark; Performance; Prediction; Multi-tier; Modeling; Cross-platform
AB Predicting performance of CPU intensive applications for a target platform is of significant importance to IT industries. However, the target hardware platform for which we want to predict the performance is often different from the testbed on which the application performance measurements are done, and may not be unavailable for deployment for various practical reasons. This paper presents M-3, a Measure-Measure-Model method, which uses a pipeline of three steps to address this problem. The methodology starts with measuring CPU service demands of the application on the testbed. Then, it builds clones that mimic the application code in terms of the type of operations, the number and size of network calls with external servers and API calls made at different layers of the technology stack. The clones are simple and easy to deploy, yet demonstrate the same speedup factor between the source and the target as the original application. The clones are then deployed on the testbed and on the target to estimate the application CPU service demand under light load generation. In the final step, this estimated CPU service demand is fed into specific performance modeling tools that are capable of predicting application performance on the target under arbitrary higher workload. Predictions made using this approach are validated against direct measurements made on five applications in Java and PHP, and on a number of combinations of testbed and target platforms (Intel and AMD servers) and the prediction error is always less than 20%. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Duttagupta, Subhasri] Amrita Viswa Vidyapeetham, Dept Comp Sci & Engn, Amritapuri Campus, Kollam 690525, Kerala, India.
   [Apte, Varsha; Gawali, Devidas] Indian Inst Technol, Dept Comp Sci & Engn, Mumbai 400076, Maharashtra, India.
   [Duttagupta, Subhasri] Tata Consultancy Serv Ltd, Mumbai, Maharashtra, India.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri;
   Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay; Tata Sons; Tata Consultancy Services Limited
   (TCS)
RP Duttagupta, S (corresponding author), Amrita Viswa Vidyapeetham, Dept Comp Sci & Engn, Amritapuri Campus, Kollam 690525, Kerala, India.
EM subhasrid@am.amrita.edu; varsha@iitb.ac.in; devidas.r.gawali@chase.com
RI Duttagupta, Subhasri/ABF-1752-2020
OI Duttagupta, Subhasri/0000-0003-3716-6947
FU Tata Consultancy Services under the aegis of the TCS-IITB Research Cell
FX This work is sponsored by Tata Consultancy Services under the aegis of
   the TCS-IITB Research Cell.
CR [Anonymous], 2006, P 15 INT C PARALLEL
   Ardalani N, 2015, PROCEEDINGS OF THE 48TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO-48), P725, DOI 10.1145/2830772.2830780
   Balsamo S, 2003, PERFORM EVALUATION, V51, P269, DOI 10.1016/S0166-5316(02)00099-8
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bhulai S., 2007, P INT TEL C MAN TRAF
   Carrington L, 2013, PAR DISTR PROC S WOR, DOI [10.1109/IPDPSW.2013.137, DOI 10.1109/IPDPSW.2013.137]
   Casale G, 2012, IEEE T SOFTWARE ENG, V38, P1040, DOI 10.1109/TSE.2011.87
   Dell, 2007, DVD STOR DAT TEST SU
   Deshpande A., 2008, ACM WOSP, DOI [10.1145/1383559.1383570, DOI 10.1145/1383559.1383570]
   Duttagupta S., 2012, 2012 Fourth International Conference on Computational Intelligence, Modelling and Simulation (CIMSiM 2012), P369, DOI 10.1109/CIMSim.2012.71
   Duttagupta S., 2014, INT S PERF EV COMP T
   Duttagupta S., 2013, COMP MEAS GROUPS C
   Duttagupta S, 2016, ICPE'16 COMPANION: PROCEEDINGS OF THE 2016 COMPANION PUBLICATION FOR THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P45, DOI 10.1145/2859889.2859898
   Gawali D., 2016, INT WORKSH QUAL AW D, DOI [10.1145/2945408.2945414, DOI 10.1145/2945408.2945414]
   Grozev N., 2015, COMPUT J, DOI [10.1093/comjnI/bxt107, DOI 10.1093/COMJNI/BXT107]
   Joshi A., 2006, P IEEE C WORKL CHAR
   Kuperberg M, 2008, LECT NOTES COMPUT SC, V5282, P48, DOI 10.1007/978-3-540-87891-9_4
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li A., 2011, CLOUDPROPHET PREDICT
   Marin G. G., 2004, ACM SIGMETRICS, DOI [10.1145/1005686.1005691, DOI 10.1145/1005686.1005691]
   Sharkawi S., 2009, INT C PAR DISTR PROC, DOI [10.1109/113DPS.2009.5161057, DOI 10.1109/113DPS.2009.5161057]
   Shirodkar S. S., 2007, ACM WWW, DOI [10.1145/1242572.1242814, DOI 10.1145/1242572.1242814]
   Tak B. C., 2013, IEEE INTEGRATED NETW
   Verlekar RP, 2007, I S MOD ANAL SIM COM, P201
   Yang L.T., 2005, Proceedings of the 2005 ACM/IEEE conference on Supercomputing, P40
   YourKit, 2003, PROF MON TOOLS JAV N
   Zheng W, 2009, P USENIX ANN TECHN C
NR 27
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2019
VL 156
BP 232
EP 245
DI 10.1016/j.jss.2019.07.001
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU5WM
UT WOS:000483658000015
DA 2024-07-18
ER

PT J
AU Garousi, V
   Giray, G
   Tüzün, E
   Catal, C
   Felderer, M
AF Garousi, Vahid
   Giray, Gorkem
   Tuzun, Eray
   Catal, Cagatay
   Felderer, Michael
TI Aligning software engineering education with industrial needs: A
   meta-analysis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering education; Industry needs; Important skills;
   Knowledge gap; Systematic literature review (SLR); Meta-analysis
ID ACADEMIA COLLABORATIONS; SYSTEMATIC REVIEWS; CHALLENGES; UNDERGRADUATE;
   GUIDELINES; PROGRAMS
AB Context: According to various reports, many software engineering (SE) graduates often face difficulties when beginning their careers, which is mainly due to misalignment of the skills learned in university education with what is needed in the software industry.
   Objective: Our objective is to perform a meta-analysis to aggregate the results of the studies published in this area to provide a consolidated view on how to align SE education with industry needs, to identify the most important skills and also existing knowledge gaps.
   Method: To synthesize the body of knowledge, we performed a systematic literature review (SLR), in which we systematically selected a pool of 35 studies and then conducted a meta-analysis using data extracted from those studies.
   Results: Via a meta-analysis and using data from 13 countries and over 4,000 data points, highlights of the SLR include: (1) software requirements, design, and testing are the most important skills; and (2) the greatest knowledge gaps are in configuration management, SE models and methods, SE process, design (and architecture), as well as in testing.
   Conclusion: This paper provides implications for both educators and hiring managers by listing the most important SE skills and the knowledge gaps in the industry. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Garousi, Vahid; Catal, Cagatay] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
   [Tuzun, Eray] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
   [Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Wageningen University & Research; Ihsan Dogramaci Bilkent University;
   University of Innsbruck; Blekinge Institute Technology
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM vahid.garousi@wur.nl; gorkemgiray@gmail.com;
   eraytuzun@cs.bilkent.edu.tr; cagatay.catal@wur.nl;
   michael.felderer@uibk.ac.at
RI Tuzun, Eray/AAD-7282-2021; Catal, Cagatay/AAF-3929-2019; Felderer,
   Michael/AAF-4909-2020; Giray, Görkem/AAW-9845-2021
OI Tuzun, Eray/0000-0002-5550-7816; Catal, Cagatay/0000-0003-0959-2930;
   Giray, Görkem/0000-0002-7023-9469; Garousi, Vahid/0000-0001-6590-7576
CR ACM, 2016, COMP ENG CURR 2016
   Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Alain A, 2004, GUIDE SOFTWARE ENG B
   Alain Abran., 2001, GUIDE SOFTWARE ENG B
   American Society for Training Development, 2012, TECHNICAL REPORT
   Anicic KP, 2017, IEEE T EDUC, V60, P191, DOI 10.1109/TE.2016.2633959
   [Anonymous], 2015, SPETP SPICE
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 2013, Proceedings of the 42nd ACM technical symposium on Computer science education, P518
   Ardis M, 2015, COMPUTER, V48, P106, DOI 10.1109/MC.2015.345
   Association for Computing Machinery (ACM), 2004, COMP ENG CURR 2004
   Baker J, 2018S SOFTWARE ENG T
   Beckman K, 1997, IEEE SOFTWARE, V14, P49, DOI 10.1109/52.636668
   Benamati JH, 2010, COMMUN ACM, V53, P152, DOI 10.1145/1666420.1666458
   Bereiter C., 2006, Handbook of educational psychology, P695
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   Cruzes DS, 2017, LECT NOTES BUS INF P, V283, P201, DOI 10.1007/978-3-319-57633-6_13
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Faulk S. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P293, DOI 10.1109/ICSE.2000.870420
   Felderer M, 2015, SOFTW TEST VERIFICAT
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Ford G, 1989, IEEE COMPUT, V22, P59
   Garg AX, 2008, CLIN J AM SOC NEPHRO, V3, P253, DOI 10.2215/CJN.01430307
   Garousi V, 2018, INF SOFTW TECHNOL
   Garousi V, 2017, SOFTWARE QUAL J, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P396, DOI 10.1109/CSEET.2011.5876112
   Garousi V, 2010, CONF SOFTW ENG EDUC, P177, DOI 10.1109/CSEET.2010.40
   Garousi V, 2010, CONF SOFTW ENG EDUC, P89, DOI 10.1109/CSEET.2010.29
   Garousi V, 2010, IEEE T EDUC, V53, P182, DOI 10.1109/TE.2008.2010994
   Giray G., 2016, P TURK NAT SOFTW ENG, P574
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Groves RM, 2004, SURVEY ERRORS SURVEY
   Haser F., 2014, P INT C EV ASS SOFTW
   Institute for Electrical and Electronic Engineers (IEEE-CS) and Association for Computing Machinery (ACM), 2004, COMP CURR SER
   Jacsó P, 2005, ONLINE INFORM REV, V29, P208, DOI 10.1108/14684520510598066
   Kim Y., 2006, J INFORM SYSTEMS ED, V17, P395
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Malik B., 2012, International Journal of Educational and Pedagogical Sciences, V6, P3343
   Marques Maira R., 2014, 2014 IEEE Frontiers in Education Conference (FIE). Proceedings, P1, DOI 10.1109/FIE.2014.7044277
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Nguyen VM, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0132557
   Ouhbi S, 2015, REQUIR ENG, V20, P119, DOI 10.1007/s00766-013-0192-5
   Parnas DL, 1999, IEEE SOFTWARE, V16, P19, DOI 10.1109/52.805469
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Radermacher Alex, 2013, P 44 ACM TECH S COMP, P525, DOI [10.1145/2445196.2445351, DOI 10.1145/2445196.2445351]
   Radermacher Alex D., 2012, THESIS
   Sabin M, 2015, P 16 ANN C INF TECHN
   Seiler R, 2005, LAW ENFORCEMENT TECH, V32, P148
   Sobel A. E. K, 2003, SOFTWARE ENG ED KNOW
   Topi H., 2010, Technical Report
   Tuz E., 2019, IEEE SOFTWARE
   Tuzun E, 2018, PROC INT CONF SOFTW, P68, DOI 10.1145/3183377.3185754
   Wohlin C, 1999, 12TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P16, DOI 10.1109/CSEE.1999.755175
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 70
TC 46
Z9 49
U1 1
U2 32
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2019
VL 156
BP 65
EP 83
DI 10.1016/j.jss.2019.06.044
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU5WM
UT WOS:000483658000005
DA 2024-07-18
ER

PT J
AU Sampaio, G
   Borba, P
   Teixeira, L
AF Sampaio, Gabriela
   Borba, Paulo
   Teixeira, Leopoldo
TI Partially safe evolution of software product lines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Product line evolution; Product line maintenance; Product line
   refinement
AB Software Product Lines allow the automatic generation of related products built with reusable artefacts. In this context, developers may need to perform changes and check whether products are affected. A strategy to perform such analysis is verifying behaviour preservation through the use of formal theories. The product line refinement notion requires behaviour preservation for all existing products. Nevertheless, in evolution scenarios like bug fixes, some products intentionally have their behaviour changed. To support developers in these and other unsafe scenarios, we define a theory of partial product line refinement that helps to precisely understand which products are affected by a change. This provides a kind of impact analysis that could, for example, reduce test effort, since only affected products need to be tested. We provide properties such as compositionality, which deals with changes to a specific product line element, and general properties to support developers when safe and partially safe scenarios are combined. We also define a set of transformation templates, which are classified according to their compatibility to specific types of product lines. To evaluate our work, we analyse two product lines: Linux and Soletta, to discover if our templates could be helpful in evolving these systems. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Sampaio, Gabriela; Borba, Paulo; Teixeira, Leopoldo] Univ Fed Pernambuco, Informat Ctr, Av Jornalista Anibal Fernandes, BR-50740560 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Sampaio, G (corresponding author), Univ Fed Pernambuco, Informat Ctr, Av Jornalista Anibal Fernandes, BR-50740560 Recife, PE, Brazil.
EM gcs@cin.ufpe.br; phmb@cin.ufpe.br; lmt@cin.ufpe.br
RI Borba, Paulo/C-5617-2013; Teixeira, Leopoldo M/G-5937-2016
OI Borba, Paulo/0000-0002-0381-2843; Cunha Sampaio,
   Gabriela/0000-0003-3701-277X
FU INES 2.0; FACEPE [PRONEX APQ-0388-1.03/14, APQ-0399-1.03/17,
   APQ-0570-1.03/14]; CNPq [465614/2014-0, 409335/2016-9, 309172/2017-9,
   408516/2018-6]; CAPES [129599/2016-01]
FX This research was partially funded by INES 2.0,<SUP>20</SUP> FACEPE
   grants PRONEX APQ-0388-1.03/14 and APQ-0399-1.03/17, and CNPq grant
   465614/2014-0. We also acknowledge support from CNPq (grants
   409335/2016-9, 309172/2017-9, and 408516/2018-6), FACEPE
   (APQ-0570-1.03/14) and CAPES (129599/2016-01). Finally, we thank Nicolas
   Dintzner for the FEVER tool and support, members of the SPG for
   feedback.
CR Accioly P, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P775, DOI 10.1109/ICSE.2015.246
   Adams B., 2008, ELECT COMMUN EASST, V8
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], P 15 INT C GEN PROGR
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Benbassat F, 2016, P BRAZ SYMP SOFTW, P11, DOI 10.1109/SBCARS.2016.21
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Cornélio M, 2010, SCI COMPUT PROGRAM, V75, P106, DOI 10.1016/j.scico.2009.10.001
   Dintzner N., 2014, P 8 INT WORKSH VAR M
   Dintzner N., 2017, EMPIR SOFTW ENG, P1
   Gheyi R., 2005, ASE
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kroher C., 2017, SOFTWARETECHNIK TREN, V37
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Mongiovi M, 2011, P ACM INT C COMP OBJ, P213
   Neves L, 2015, J SYST SOFTWARE, V106, P42, DOI 10.1016/j.jss.2015.04.024
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Owre S., 2001, VERSION 2 4 PVS LANG
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Sampaio G., 2016, 20 INT SYSTEMS SOFTW, P124, DOI [10.1145/2934466.2934482, DOI 10.1145/2934466.2934482]
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Teixeira L., 2015, P 19 INT C SOFTW PRO, P171, DOI DOI 10.1145/2791060.2791084
   Teixeira L., 2015, P INT SYST SOFTW PRO
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Zhang L., 2012, FSE, P40
   Ziegler A, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P25, DOI 10.1145/2866614.2866618
NR 30
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2019
VL 155
BP 17
EP 42
DI 10.1016/j.jss.2019.04.051
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE9IN
UT WOS:000472688200002
OA Green Published
DA 2024-07-18
ER

PT J
AU Cámara, J
   Garlan, D
   Schmerl, B
AF Camara, Javier
   Garlan, David
   Schmerl, Bradley
TI Synthesizing tradeoff spaces with quantitative guarantees for families
   of software systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 11th European Conference on Software Architecture (ECSA)
CY SEP 11-15, 2017
CL Univ Kent, Canterbury, ENGLAND
SP Univ Kent, Sch Comp, Univ Lisbon, Fac Sci
HO Univ Kent
DE Tradeoff analysis; Uncertainty; Architectural style; Architecture
   synthesis; Quantitative guarantees; Probabilistic model checking
AB Designing software in a way that guarantees run-time behavior while achieving an acceptable balance among multiple quality attributes is an open problem. Providing guarantees about the satisfaction of the same requirements under uncertain environments is even more challenging. Tools and techniques to inform engineers about poorly-understood design spaces in the presence of uncertainty are needed, so that engineers can explore the design space, especially when tradeoffs are crucial. To tackle this problem, we describe an approach that combines synthesis of spaces of system design alternatives from formal specifications of architectural styles with probabilistic formal verification. The main contribution of this paper is a formal framework for specification-driven synthesis and analysis of design spaces that provides formal guarantees about the correctness of system behaviors and satisfies quantitative properties (e.g., defined over system qualities) subject to uncertainty, which is treated as a first-class entity. We illustrate our approach in two case studies: a service-based adaptive system and a mobile robotics architecture. Our results show how the framework can provide useful insights into how average case probabilistic guarantees can differ from worst case guarantees, emphasizing the relevance of combining quantitative formal verification methods with structural synthesis, in contrast with techniques based on simulation and dynamic analysis that can only provide estimates about average case probabilistic properties. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Camara, Javier] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
   [Garlan, David] Carnegie Mellon Univ, Comp Sci, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Schmerl, Bradley] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 University of York - UK; Carnegie Mellon University; Carnegie Mellon
   University
RP Cámara, J (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
EM javier.camaramoreno@york.ac.uk; garlan@cs.cmu.edu; schmerl@cs.cmu.edu
RI Camara, Javier/ABF-1534-2021
OI Schmerl, Bradley/0000-0001-7828-622X
FU AFRL; DARPA [FA8750-16-2-0042]
FX This material is based on research sponsored by AFRL and DARPA under
   agreement number FA8750-16-2-0042. The U.S. Government is authorized to
   reproduce and distribute reprints for Governmental purposes
   notwithstanding any copyright notation thereon. The views and
   conclusions contained herein are those of the authors and should not be
   interpreted as necessarily representing the official policies or
   endorsements, either expressed or implied, of the AFRL, DARPA or the
   U.S. Government.
CR Aleti A., 2009, P ICSE WORKSH MOD BA, DOI [DOI 10.1109/MOMPES.2009.5069138, 10.1109/MOMPES.2009, 10.1109/MOMPES.2009.5069138]
   [Anonymous], 2012, P 20 INT S FDN SOFTW
   [Anonymous], 2007, P 21 INT PAR DISTR P, DOI DOI 10.1109/IPDPS.2007.370524
   Bagheri H., 2016, P 24 S FDN SOFTW ENG
   Bagheri H., 2014, P 26 INT C SOFTW ENG
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   Bondarev E., 2007, P 6 WS SOFTW PERF
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Camara J., 2015, P 30 ACM S APPL COMP
   Cámara J, 2017, LECT NOTES COMPUT SC, V10475, P3, DOI 10.1007/978-3-319-65831-5_1
   Castro T, 2018, SCI COMPUT PROGRAM, V152, P116, DOI 10.1016/j.scico.2017.10.013
   Chrszon P., 2017, FORM ASP COMPUT, V9633, P287
   Dwivedi V, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS (ITNG), P235, DOI 10.1109/ITNG.2014.107
   Garlan D., 2010, P WORKSH FUT SOFTW E
   Garlan D., 1997, P C CTR ADV STUD COL, DOI [10.1145/782010.782017, DOI 10.1145/782010.782017]
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Hahn E. M., 2010, P COMP AID VER
   Hüttel H, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2873052
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Johnson K., 2013, P 16 INT ACM SIGS S, DOI [10.1145/24654492465456, DOI 10.1145/24654492465456]
   Kang E., 2016, P 24 S FDN SOFTW ENG
   Kim JS, 2010, J SYST SOFTWARE, V83, P1216, DOI 10.1016/j.jss.2010.01.049
   Kwiatkowska Marta, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P5, DOI 10.1007/978-3-319-02444-8_2
   Kwiatkowska M. Z., 2007, P 7 INT SCH FORM MET
   Kwiatkowska M. Z., 2011, P COMP AID VER
   Lanna A, 2018, INFORM SOFTWARE TECH, V94, P59, DOI 10.1016/j.infsof.2017.10.001
   MacCalman AD, 2016, SYSTEMS ENG, V19, P409, DOI 10.1002/sys.21352
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Mao H, 2016, MACH LEARN, V105, P255, DOI 10.1007/s10994-016-5565-9
   Maoz S., 2013, P EUR SOFTW ENG C S, DOI [10.1145/2491411.2491414, DOI 10.1145/2491411.2491414]
   Martens A., 2010, P INT C PERF ENG
   Quigley M., 2009, P ICRA WS OP SOURC S
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Wong S., 2008, P 13 IEEE INT C ENG
   Yan H, 2004, PROC INT CONF SOFTW, P470, DOI 10.1109/ICSE.2004.1317469
NR 38
TC 9
Z9 11
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2019
VL 152
BP 33
EP 49
DI 10.1016/j.jss.2019.02.055
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HU1TP
UT WOS:000465055000004
DA 2024-07-18
ER

PT J
AU Ren, JK
   Xu, ZC
   Yu, C
   Lin, C
   Wu, GW
   Tan, GZ
AF Ren, Jiankang
   Xu, Zichuan
   Yu, Chao
   Lin, Chi
   Wu, Guowei
   Tan, Guozhen
TI Execution allowance based fixed priority scheduling for probabilistic
   real-time systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Probabilistic; Fixed priority scheduling; Real-time systems
ID STOCHASTIC-ANALYSIS; RESPONSE-TIME; GUARANTEES; TASKS; ASSIGNMENT; LINUX
AB Real-time systems tend to be probabilistic in nature because of the performance variations of complex chips. We present an execution allowance based fixed priority scheduling scheme for probabilistic real-time systems. This scheme consists of a probabilistic Worst Case Execution Time reshaping algorithm and a fixed priority scheduling strategy. It assigns a specific execution allowance to each task and schedules tasks under the Rate Monotonic policy. We present a schedulability analysis and show how to determine an appropriate execution allowance for each task. Evaluation shows that our proposed scheme can significantly outperform the existing approaches. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Ren, Jiankang; Yu, Chao; Tan, Guozhen] Dalian Univ Technol, Sch Comp Sci & Technol, 2,Linggong Rd, Dalian 116023, Peoples R China.
   [Xu, Zichuan; Lin, Chi; Wu, Guowei] Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Sch Software Technol, Rd 8, Dalian 116620, Peoples R China.
C3 Dalian University of Technology; Dalian University of Technology
RP Lin, C (corresponding author), Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Sch Software Technol, Rd 8, Dalian 116620, Peoples R China.
EM rjk@dlut.edu.cn; z.xu@dlut.edu.cn; cy496@dlut.edu.cn;
   chilin@mail.dlut.edu.cn; wgwdut@dlut.edu.cn; gztan@dlut.edu.cn
RI Ren, Jiankang/H-1719-2012; Xu, Zichuan/T-5498-2019
OI Ren, Jiankang/0000-0001-6289-1513; Xu, Zichuan/0000-0001-5438-1468
FU National Natural Science Foundation of China [61602080, U1808206,
   61761136019, 61802047, 61802048, 61601080, 61602084, 61772112,
   61872052]; National Key R&D Program of China [2017YFC0704200]; China
   Postdoctoral Science Foundation [2018T110221, 2016M591431]; Natural
   Science Foundation of Liaoning Province [20180550540]; Social Science
   Foundation of Liaoning Province [L17CTQ002]; Fundamental Research Funds
   for the Central Universities [DUT18RC(4)008]
FX This work is supported in part by the National Natural Science
   Foundation of China under Grant No.: 61602080, U1808206, 61761136019,
   61802047, 61802048, 61601080, 61602084, 61772112 and 61872052, the
   National Key R&D Program of China under Grant No.: 2017YFC0704200, the
   China Postdoctoral Science Foundation under Grant No.: 2018T110221 and
   2016M591431, the Natural Science Foundation of Liaoning Province under
   Grant No.: 20180550540, the Social Science Foundation of Liaoning
   Province under Grant No.: L17CTQ002, and the Fundamental Research Funds
   for the Central Universities under Grant No.: DUT18RC(4)008.
CR Abdeddaïm Y, 2017, DES AUT TEST EUROPE, P596, DOI 10.23919/DATE.2017.7927056
   Abella J, 2014, EUROMICRO, P266, DOI 10.1109/ECRTS.2014.16
   Abeni L, 1998, REAL TIM SYST SYMP P, P4, DOI 10.1109/REAL.1998.739726
   Abeni L, 2012, J SYST SOFTWARE, V85, P1147, DOI 10.1016/j.jss.2011.12.042
   Altmeyer S, 2014, P C DES AUT TEST EUR
   [Anonymous], 2014, 2014 7 INT S RESILIE
   [Anonymous], P 20 INT C REAL TIM
   [Anonymous], 2011, RTCADO178C
   Atlas A, 1998, REAL TIM SYST SYMP P, P123, DOI 10.1109/REAL.1998.739737
   Audsley NC, 2001, INFORM PROCESS LETT, V79, P39, DOI 10.1016/S0020-0190(00)00165-4
   Axer P., 2013, P 50 ANN DES AUT C, DOI 10.1145/2463209
   Ben-Amor S, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P99, DOI 10.1145/2997465.2997499
   Bernat G., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P68, DOI 10.1109/REAL.1999.818829
   Bini E, 2005, REAL-TIME SYST, V30, P129, DOI 10.1007/s11241-005-0507-9
   Buffet O., 2010, 1 INT REAL TIM SCHED
   Caccamo M, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P161, DOI 10.1109/REAL.2001.990607
   Cazorla FJ, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465796
   Cucu-Grosjean L, 2012, EUROMICRO, P91, DOI 10.1109/ECRTS.2012.31
   Davis R., 2017, COMMUNICATION
   Davis RI, 2016, J SYST ARCHITECT, V65, P64, DOI 10.1016/j.sysarc.2016.04.002
   Davis RI, 2013, EUROMICRO, P168, DOI 10.1109/ECRTS.2013.27
   Edgar S, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P215, DOI 10.1109/REAL.2001.990614
   Frías BV, 2017, IEEE REAL TIME, P175
   Guet F., 2016, 8 EUROPEAN C EMBEDDE
   Han JH, 2016, IEEE T CIRCUITS-II, V63, P1146, DOI 10.1109/TCSII.2016.2620997
   Hansen J., 2009, INT WORKSHOP WORST C, P1, DOI DOI 10.4230/OASICS.WCET.2009.2291
   HARBOUR MG, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P116, DOI 10.1109/REAL.1991.160365
   Kim K, 2005, IEEE T COMPUT, V54, P1460, DOI 10.1109/TC.2005.174
   Lelli J, 2016, SOFTWARE PRACT EXPER, V46, P821, DOI 10.1002/spe.2335
   Lesage B, 2018, REAL-TIME SYST, V54, P307, DOI 10.1007/s11241-017-9295-2
   Lesage B, 2015, REAL TIM SYST SYMP P, P361, DOI 10.1109/RTSS.2015.41
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   López JM, 2008, REAL-TIME SYST, V40, P180, DOI 10.1007/s11241-008-9053-6
   Manica Nicola., 2012, IEEE Int. Conf, P1
   Masrur A, 2016, DES AUT CON, DOI 10.1145/2897937.2897971
   Maxim D., 2011, RTNS, P129
   Maxim D, 2017, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS (RTNS 2017), P237, DOI 10.1145/3139258.3139276
   Maxim D, 2013, REAL TIM SYST SYMP P, P224, DOI 10.1109/RTSS.2013.30
   Palopoli L, 2016, IEEE T PARALL DISTR, V27, P640, DOI 10.1109/TPDS.2015.2416732
   Palopoli L, 2012, EUROMICRO, P179, DOI 10.1109/ECRTS.2012.19
   Perng NC, 2006, J INF SCI ENG, V22, P31
   Pyka A, 2015, IEEE INTL CONF IND I, P1400, DOI 10.1109/INDIN.2015.7281939
   QUIRK JP, 1962, REV ECON STUD, V29, P140, DOI 10.2307/2295819
   Ren JK, 2019, J SYST ARCHITECT, V93, P20, DOI 10.1016/j.sysarc.2019.01.001
   Ren JK, 2018, DES AUT TEST EUROPE, P213, DOI 10.23919/DATE.2018.8342005
   Ren JK, 2015, EUROMICRO, P25, DOI 10.1109/ECRTS.2015.10
   Santinelli L, 2017, IEEE REAL TIME, P199, DOI 10.1109/RTAS.2017.16
   Santinelli L, 2016, 2016 IEEE INTERNATIONAL SYMPOSIUM ON DEFECT AND FAULT TOLERANCE IN VLSI AND NANOTECHNOLOGY SYSTEMS (DFT), P69, DOI 10.1109/DFT.2016.7684072
   Santinelli L, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2717113
   Tanasa B, 2015, EUROMICRO, P235, DOI 10.1109/ECRTS.2015.28
   Wang TY, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3064813
   Wang TY, 2015, DES AUT TEST EUROPE, P1335
   Zabos A., 2009, 17 INT C REAL TIM NE
NR 53
TC 1
Z9 1
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2019
VL 152
BP 120
EP 133
DI 10.1016/j.jss.2019.03.001
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1TP
UT WOS:000465055000009
DA 2024-07-18
ER

PT J
AU van den Berg, M
   Slot, R
   van Steenbergen, M
   Faasse, P
   van Vliet, H
AF van den Berg, Martin
   Slot, Raymond
   van Steenbergen, Marlies
   Faasse, Peter
   van Vliet, Hans
TI How enterprise architecture improves the quality of IT investment
   decisions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Enterprise architecture; Enterprise architecture maturity; IT
   investments; Quality of IT investment decision outcomes; Enterprise
   architecture insights; Enterprise architecture artifacts
ID MODELS; IMPACT
AB According to literature, enterprise architecture (EA) is supposed to support IT investment decision-making. However, it is not yet clear how EA can do that. The objective of this study is to explore how EA can support IT investment decisions. A quantitative research approach was chosen, in which data were collected from a survey of 142 participants. These data were used to perform a comparative analysis between top and bottom quartile organizations on 1) the EA maturity, 2) the use of EA artifacts in the preparation of IT investments, and 3) the key insights that EA provides in preparation of IT investments. We found that top quartile organizations are more mature in all EA maturity areas. They also make more extensive use of different types of EA artifacts in the preparation of IT investment decisions, especially diagnostic and actionable artifacts. Finally, EA provides top quartile organizations with more key insights in the preparation of IT investment decisions, and in particular, strategic insights. As a result of our research we created a conceptual model that integrates seven propositions. Further research is required to test these propositions and develop instruments to aid enterprise architects to effectively support IT investment decisions. (C) 2019 Elsevier Inc. All rights reserved.
C1 [van den Berg, Martin] Nederlandsche Bank, Dept ICT, Amsterdam, Netherlands.
   [Slot, Raymond] Univ Appl Sci Utrecht, Informat Syst Architecture Res Grp, Utrecht, Netherlands.
   [van Steenbergen, Marlies] Univ Appl Sci Utrecht, Digital Smart Serv Res Grp, Utrecht, Netherlands.
   [Faasse, Peter] Afstudeerbegeleider, Amsterdam, Netherlands.
   [van Vliet, Hans] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 European Central Bank; De Nederlandsche Bank NV; Vrije Universiteit
   Amsterdam
RP van den Berg, M (corresponding author), Nederlandsche Bank, Dept ICT, Amsterdam, Netherlands.
EM bergmart@online.nl
OI van den Berg, Martin/0000-0003-3974-7374
CR Aier S, 2014, INF SYST E-BUS MANAG, V12, P43, DOI 10.1007/s10257-012-0206-8
   Aier S, 2008, ENTERP MODELLING INF, V3, P14
   [Anonymous], 2007, Business research method
   [Anonymous], 2018, TOGAF STAND V 9 2
   Bente S., 2012, Collaborative Enterprise Architecture: Enriching EA with Lean, Agile
   Bittler RS., 2005, G00130849 GARTN RES
   Blosch M., 2014, G00269850 GARTN
   BOURGEOIS LJ, 1988, MANAGE SCI, V34, P816, DOI 10.1287/mnsc.34.7.816
   Brand S., 2017, G00310309 GARTN
   Buchanan R., 2002, ALIGNING EA IT INVES
   Burke B., 2017, G00321942 GARTN
   Byrd TA, 2006, INFORM MANAGE-AMSTER, V43, P308, DOI 10.1016/j.im.2005.07.002
   CIO Council, 2012, CLING COH COR COMP L
   Cohen J., 1988, STAT POWER ANAL BEHA
   Costello AB, 2005, Practical Assessment, Research, & Evaluation, V10, P1, DOI DOI 10.7275/JYJ1-4868
   Dewan S, 2007, MANAGE SCI, V53, P1829, DOI 10.1287/mnsc.1070.0739
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Field A., 2013, DISCOVERING STAT USI
   Foorthuis R. M., 2007, P 2 TRENDS ENT ARCH, P51
   Gotze J, 2013, IEEE INT ENTERP, P319, DOI 10.1109/EDOCW.2013.42
   Greethorst D., 2011, ARCHITECTURE PRINCIP
   Hetebrij M., 2011, GOED BESLUIT IS HET
   IDC, 2018, WORLDW SEM SMALL MED
   Janssen M, 2012, SOC SCI COMPUT REV, V30, P24, DOI 10.1177/0894439310392187
   Johnson P., 2004, 2 ANN C SYST ENG RES, V116
   Jusuf M.B., 2017, P 50 HAW INT C SYST
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Kotusev S., 2018, ENTERPRISE ARCHITECT
   Kotusev S., 2015, INVESTIGATING USAGE
   Kotusev S., 2017, 8 ESSENTIAL ENTERPRI
   Land O, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-540-85232-2
   Lapalme J., 2012, IT PROF, V13, P1
   Lovelock J., 2017, G00324700 GARTN
   Malhotra MK, 1998, J OPER MANAG, V16, P407, DOI 10.1016/S0272-6963(98)00021-7
   Meyer M, 2011, LECT NOTES BUS INF P, V90, P167
   Miller S, 2004, LONG RANGE PLANN, V37, P201, DOI 10.1016/j.lrp.2004.03.003
   Miller S, 1997, ORGAN STUD, V18, P577, DOI 10.1177/017084069701800402
   MINTZBERG H, 1976, ADMIN SCI QUART, V21, P246, DOI 10.2307/2392045
   Morgan DL, 1996, ANNU REV SOCIOL, V22, P129, DOI 10.1146/annurev.soc.22.1.129
   Niemi EI, 2016, DATA BASE ADV INF SY, V47, P55, DOI 10.1145/2980783.2980787
   Nooraie M, 2008, MANAGE DECIS, V46, P640, DOI 10.1108/00251740810865102
   Papadakis V., 2010, Handbook of Decision‐making, P31
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Plessius H., 2014, MED C INF SYST, P23
   Riempp Gerold, 2007, Information Systems and e-Business Management, V5, P359, DOI 10.1007/s10257-007-0052-2
   Roelens B, 2014, PROC EUR CONF INFO, P388
   Saha P., 2006, J ENTERPRISE ARCHITE, V2, P32
   Slot Raymond., 2010, A method for valuing Architecture-Based Business Transformation and Measuring the value of Solutions Architecture
   Standish Group, 2015, CHAOS SUMM 2015 REP
   Stevens JP., 2012, APPL MULTIVARIATE ST, DOI DOI 10.4324/9780203843130
   Sutton SG, 2013, INT J ACCOUNT INF SY, V14, P81, DOI 10.1016/j.accinf.2011.10.001
   Tamm T, 2015, MIS Q EXEC, V14, P181
   Tamm T, 2011, COMMUN ASSOC INF SYS, V28, P141
   Vallerand J, 2017, ENTERP INF SYST-UK, V11, P859, DOI 10.1080/17517575.2015.1091951
   Van den Berg M., 2018, EMPIRICAL INVESTIGAT
   van der Raadt B, 2008, LECT NOTES COMPUT SC, V5281, P103, DOI 10.1007/978-3-540-87879-7_7
   van der Wegen M, 2017, ESTUAR COAST, V40, P37, DOI 10.1007/s12237-016-0129-6
   Van Steenbergen M., 2012, ARCHITECTURE MATURIT
   van Steenbergen M, 2010, LECT NOTES COMPUT SC, V6275, P48
   van Steenbergen M, 2008, LECT NOTES BUS INF P, V12, P240
   Wagter Roel., 2005, Dynamic Enterprise Architecture: How to Make it Work
   Wang XY, 2008, IEEE/SOLI'2008: PROCEEDINGS OF 2008 IEEE INTERNATIONAL CONFERENCE ON SERVICE OPERATIONS AND LOGISTICS, AND INFORMATICS, VOLS 1 AND 2, P740, DOI 10.1109/SOLI.2008.4686496
   Ward J, 2008, MIS Q EXEC, V7, P1
   Weill P., 2004, IT governance: How top performers manage IT decision rights for superior results
   Weiss S., 2013, 34 INT C INF SYST, P1
   Ylimaki T., 2006, Journal of Enterprise Architecture, V2, P29
NR 68
TC 21
Z9 25
U1 1
U2 24
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2019
VL 152
BP 134
EP 150
DI 10.1016/j.jss.2019.02.053
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HU1TP
UT WOS:000465055000010
OA Green Published
DA 2024-07-18
ER

PT J
AU Delgado, R
   You, BJ
   Choi, BW
AF Delgado, Raimarius
   You, Bum-Jae
   Choi, Byoung Wook
TI Real-time control architecture based on Xenomai using ROS packages for a
   service robot
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Real-time control architecture; Robot operating system; Xenomai;
   Cross-domain datagram protocol; Service mobile robots
ID SOFTWARE; SYSTEMS; RTAI
AB This paper proposes a real-time (RT) control architecture based on Xenomai, an RT embedded Linux, to control a service robot along with non-real-time (NRT) robot operating system (ROS) packages. Most software, including device drivers and ROS, are developed to operate under the standard Linux kernel that does not provide RT guarantees. Standard Linux system calls in an RT context stimulates mode switching, resulting in non-deterministic responses and stability problems such as priority inversion and kernel panic. This paper overcomes such issues through a communication interface between RT and NRT tasks, termed cross-domain datagram protocol. The proposed architecture supports priority-based scheduling of multiple tasks while exposing an interface compatible with the original ROS packages. Moreover, it enables standard device driver operation inside RT tasks without developing RT device drivers that requires significant amount of development time. Feasibility is proven by Raspberry Pi 3, a low-cost open embedded hardware platform, and conducted various experiments to analyze its performance and applied it to a service robot using ROS navigation packages. The results indicate that the proposed architecture can effectively provide an RT environment without stability issues when utilizing ROS packages and standard device drivers. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Delgado, Raimarius; Choi, Byoung Wook] Seoul Natl Univ Sci & Technol, Dept Elect & Informat Engn, 232 Gongneung Ro, Seoul 01811, South Korea.
   [You, Bum-Jae] Ctr Human Ctr Interact Coexistence, Hwarangno 14 Gil 5, Seoul 02792, South Korea.
C3 Seoul National University of Science & Technology
RP Choi, BW (corresponding author), Seoul Natl Univ Sci & Technol, Dept Elect & Informat Engn, 232 Gongneung Ro, Seoul 01811, South Korea.
EM raim223@seoultech.ac.kr; ybj@chic.re.kr; bwchoi@seoultech.ac.kr
RI Choi, Byoung Wook/AAI-4360-2020; Delgado, Raimarius/HRC-7853-2023
OI Delgado, Raimarius/0000-0002-6759-4240
FU Human Resources Development of the Korea Institute of Energy Technology
   Evaluation and Planning (KETEP) - Korea government Ministry of Trade,
   Industry Energy [20174030201840]; Global Frontier R&D Program on
   <Human-centered Interaction for Coexistence> - National Research
   Foundation of Korea; Korean Government (MSIP) [2010-0029759]
FX This work was supported by the Human Resources Development of the Korea
   Institute of Energy Technology Evaluation and Planning (KETEP) grant
   funded by the Korea government Ministry of Trade, Industry & Energy.
   (no. 20174030201840) and by the Global Frontier R&D Program on
   <Human-centered Interaction for Coexistence> funded by the National
   Research Foundation of Korea grant funded by the Korean Government
   (MSIP) (2010-0029759).
CR Aagela H., 2017, PROC 23 INT C AUTOMA, P1
   Abbott D, 2013, LINUX EMBEDDED REAL
   Ahmad A, 2016, J SYST SOFTWARE, V122, P16, DOI 10.1016/j.jss.2016.08.039
   Alho P, 2015, J SYST SOFTWARE, V105, P1, DOI 10.1016/j.jss.2015.03.041
   Anistratov P, 2015, PROCEDIA COMPUT SCI, V66, P546, DOI 10.1016/j.procs.2015.11.062
   [Anonymous], 2017, IEEE T EVOLUTIONARY
   [Anonymous], 2018, DET MOD SWITCH
   Beek D, 2006, IEEE T NUCL SCI, V53, P930, DOI 10.1109/TNS.2006.873532
   Blaess C, 2018, XENOMAI PATCH RASPBE
   Bohren J., 2017, The Journal of Open Source Software, V2, P456, DOI [DOI 10.21105/JOSS.00456, 10.21105/joss.00456]
   Bouchier P, 2013, IEEE ROBOT AUTOM MAG, V20, P17, DOI 10.1109/MRA.2013.2255491
   Brown J. H, 2018, FAST IS FAST ENOUGH
   Cardellino A, 2018, FRONT ROBOT AI, V5, DOI 10.3389/frobt.2018.00040
   Cereia M, 2011, IEEE T IND INFORM, V7, P679, DOI 10.1109/TII.2011.2166777
   Chianese Angelo., 2015, Designing a Smart Multisensor Framework Based on Beaglebone Black Board, P391, DOI [10.1007/978-3-662-45402-2_60, DOI 10.1007/978-3-662-45402-2_60]
   Choi BW, 2009, INTEL SERV ROBOT, V2, P139, DOI 10.1007/s11370-009-0040-0
   Dantam NT, 2015, IEEE ROBOT AUTOM MAG, V22, P76, DOI 10.1109/MRA.2014.2356937
   de Oliveira DB, 2016, SOFTWARE PRACT EXPER, V46, P789, DOI 10.1002/spe.2333
   Erwinski K, 2013, IEEE T IND ELECTRON, V60, P628, DOI 10.1109/TIE.2012.2206348
   Ferdoush S, 2014, PROCEDIA COMPUT SCI, V34, P103, DOI 10.1016/j.procs.2014.07.059
   Fischmeister S, 2010, IEEE T IND INFORM, V6, P652, DOI 10.1109/TII.2010.2068304
   Gobillot N, 2018, J INTELL ROB SYST
   Gosewehr F, 2016, IEEE IND ELEC, P6596, DOI 10.1109/IECON.2016.7793116
   Grepl R., 2011, Proceedings of the 2011 IEEE International Conference on Mechatronics (ICM), P881, DOI 10.1109/ICMECH.2011.5971238
   Hasegawa R, 2016, 2016 IEEE 19TH INTERNATIONAL SYMPOSIUM ON REAL-TIME DISTRIBUTED COMPUTING (ISORC 2016), P212, DOI 10.1109/ISORC.2016.37
   Henriksson D., 2002, IFAC P, P417, DOI DOI 10.3182/20020721-6-ES-1901.00975
   Honegger D, 2013, IEEE INT CONF ROBOT, P1736, DOI 10.1109/ICRA.2013.6630805
   Jung T, 2018, IEEE T ROBOT, V34, P1, DOI 10.1109/TRO.2017.2776287
   Kalinski KJ, 2016, MECHATRONICS, V37, P79, DOI 10.1016/j.mechatronics.2016.01.006
   Kay J, 2018, REAL TIME CONTROL RO
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Kiszka J, 2005, REAL TIME DRIVER MOD
   Lee H, 2016, INCLUDING SUBSER LEC, P33
   Li JC, 2010, J SYST SOFTWARE, V83, P235, DOI 10.1016/j.jss.2009.09.043
   Li ZJ, 2016, IEEE T SYST MAN CY-S, V46, P740, DOI 10.1109/TSMC.2015.2465352
   Lin Zhang, 2012, 2012 IEEE International Conference on Mechatronics and Automation (ICMA), P1822, DOI 10.1109/ICMA.2012.6285098
   Lu B, 2007, IEEE T IND ELECTRON, V54, P919, DOI 10.1109/TIE.2007.892253
   Lu CY, 2016, P IEEE, V104, P1013, DOI 10.1109/JPROC.2015.2497161
   Lundberg L, 2002, REAL-TIME SYST, V23, P273, DOI 10.1023/A:1020232013487
   Maruyama Yuya, 2016, 2016 ACM/IEEE 7th International Conference on Cyber-Physical Systems (ICCPS), DOI 10.1109/ICCPS.2016.7479129
   MathWorks, 2019, SIM REAL TIM
   Muratore L, 2017, 2017 FIRST IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P77, DOI 10.1109/IRC.2017.45
   Negus C, 2015, LINUX BIBLE, DOI [10.1002/978111920953, DOI 10.1002/978111920953]
   Open Source Robotics Foundation, 2018, ROS KIN KAM
   Paschali ME, 2017, J SYST SOFTWARE, V134, P211, DOI 10.1016/j.jss.2017.09.009
   Shin Uk Cheol, 2017, [Journal of Institute of Control, Robotics and Systems, 제어.로봇.시스템학회 논문지], V23, P60, DOI 10.5302/J.ICROS.2017.16.0181
   Ubuntu K, 2018, STRESS NG
   Vogel-Heuser B, 2015, J SYST SOFTWARE, V110, P54, DOI 10.1016/j.jss.2015.08.026
   Wei HX, 2016, FUTURE GENER COMP SY, V56, P171, DOI 10.1016/j.future.2015.05.008
   Yang GJ, 2016, INT J ADV ROBOT SYST, V13, DOI 10.5772/62722
   Zappulla R, 2017, J SPACECRAFT ROCKETS, V54, P825, DOI 10.2514/1.A33769
   Zucker M, 2015, J FIELD ROBOT, V32, P336, DOI 10.1002/rob.21570
NR 52
TC 26
Z9 30
U1 0
U2 44
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2019
VL 151
BP 8
EP 19
DI 10.1016/j.jss.2019.01.052
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SL
UT WOS:000462105200002
DA 2024-07-18
ER

PT J
AU Hammad, M
   Bagheri, H
   Malek, S
AF Hammad, Mahmoud
   Bagheri, Hamid
   Malek, Sam
TI DELDROID: An automated approach for determination and enforcement of
   least-privilege architecture in android
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Android security; Software architecture; Multiple-Domain-Matrix (MDM)
ID SOFTWARE
AB Android is widely used for the development and deployment of autonomous and smart systems, including software targeted for loT and mobile devices. Security of such systems is an increasingly important concern. Android relies on a permission model to secure the system's resources and apps. In Android, since the permissions are granted at the granularity of apps, and all components in an app inherit those permissions, an app's components are over-privileged, i.e., components are granted more privileges than they actually need. Systematic violation of least-privilege principle in Android is the root cause of many security vulnerabilities. To mitigate this issue, we have developed DELDROID, an automated system for determination of least privilege architecture in Android and its enforcement at runtime. A key contribution of DELDROID is the ability to limit the privileges granted to apps without modifying them. DELDROID utilizes static analysis techniques to extract the exact privileges each component needs. A Multiple-Domain Matrix representation of the system's architecture is then used to automatically analyze the security posture of the system and derive its least-privilege architecture. Our experiments on hundreds of real-world apps corroborate DELDkow's ability in effectively establishing the least-privilege architecture and its benefits in alleviating the security threats. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Hammad, Mahmoud] Jordan Univ Sci & Technol, Dept Software, Irbid, Jordan.
   [Hammad, Mahmoud; Malek, Sam] Univ Calif Irvine, Dept Informat, Irvine, CA 92717 USA.
   [Bagheri, Hamid] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 Jordan University of Science & Technology; University of California
   System; University of California Irvine; University of Nebraska System;
   University of Nebraska Lincoln
RP Hammad, M (corresponding author), Jordan Univ Sci & Technol, Dept Software, Irbid, Jordan.; Hammad, M (corresponding author), Univ Calif Irvine, Dept Informat, Irvine, CA 92717 USA.
EM hammadm@uci.edu; bagheri@unl.edu; malek@uci.edu
RI Hammad, Mahmoud/AAG-3393-2019; Hammad, Mahmoud/JAC-3964-2023; Bagheri,
   Hamid Reza/GQR-0486-2022
OI Hammad, Mahmoud/0000-0003-2891-0463; Hammad,
   Mahmoud/0000-0003-2891-0463; /0000-0001-6686-466X
FU National Science Foundation [CCF-1755890, CCF-1618132, CCF-1252644];
   Army Research Office [W911NF-09-1-0273]; Department of Homeland Security
   [HSHQDC-14-C-B0040]; Air Force Office of Scientific Research
   [FA95501610030]
FX This work was supported in part by awards CCF-1755890, CCF-1618132 and
   CCF-1252644 from the National Science Foundation, W911NF-09-1-0273 from
   the Army Research Office, HSHQDC-14-C-B0040 from the Department of
   Homeland Security, and FA95501610030 from the Air Force Office of
   Scientific Research.
CR Abiteboul S, 2000, J COMPUT SYST SCI, V61, P236, DOI [10.1006/jcss.2000.1708, 10.1006/JCSS.2000.1708]
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], 2012, 21 USENIX SEC S USEN
   [Anonymous], 2009, P 16 ACM C COMP COMM
   [Anonymous], 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security, DOI [DOI 10.1145/2414456.2414498, 10.1145/2414456.2414498]
   [Anonymous], 2013, INF SECUR TECH REP, DOI DOI 10.1016/J.ISTR.2012.10.006
   Arzt S., 2014, ACM SIGPLAN C PROGR
   Au K. W. Y., 2012, PSCOUT ANAL ANDROID
   Bagheri H., 2016, INT C DEP SYST NETW
   Bagheri H, 2016, J SYST SOFTWARE, V119, P31, DOI 10.1016/j.jss.2016.05.039
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Barth A, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P75
   Behrends E, 2006, RULEML 2006: SECOND INTERNATIONAL CONFERENCE ON RULES AND RULE MARKUP LANGUAGES FOR THE SEMANTIC WEB, PROCEEDINGS, P29
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Bissyande T. F., 2015, INT C SOFTW ENG IEEE
   Bry F, 2006, LECT NOTES COMPUT SC, V4187, P48
   Bugiel S., 2013, USENIX SEC S
   Ceri S., 1997, Designing database applications with objects and rules: the IDEA Methodology
   Chin E.., 2011, 9 INT C MOB SYST APP
   Davi L., 2010, INT C INF SEC BOC RA
   Dietz M., 2011, USENIX SEC S, V31
   Egners A., 2012, INT C TRUST SEC PRIV
   Fang ZR, 2014, COMPUT SECUR, V43, P205, DOI 10.1016/j.cose.2014.02.007
   Felt AP, 2011, WEB 2 0 SEC PRIV WOR
   Fuchs Adam P., 2009, Technical Report CS-TR-4991
   Garcia J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P661, DOI 10.1145/3106237.3106286
   Garlan David., 2010, CASCON 1 DECADE HIGH, P159, DOI DOI 10.1145/1925805.1925814
   Hammad M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P59, DOI 10.1109/ICSA.2017.18
   Heuser S., 2014, USENIX SEC S
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Kantola David., 2012, Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, P69
   Kaochar T., 2009, WORK C REV ENG WASH
   Klieber W., 2014, INT WORKSH STAT ART
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lindemann U., 2007, The future of product development
   Lu L, 2012, C COMP COMM SEC ACM
   Maggi F., 2013, WORKSH SEC PRIV SMAR
   Morris James, 2002, USENIX SEC S
   Octeau D., 2015, INT C SOFTW ENG IEEE
   Octeau D., 2013, USENIX SEC S
   Papamarkos G., 2003, P 1 INT C SEMANTIC W, P294
   Paton N.W., 1999, Active Rules in Database Systems, P3
   Poeplau S, 2014, EXECUTE THIS ANAL UN
   Sadeghi A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P846, DOI 10.1145/3180155.3180172
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Scandariato R., 2010, EUR C SOFTW ARCH COP
   Schmerl B., 2016, EUR C SOFTW ARCH COP
   Seo Jaebaek, 2016, NETW DISTR SYST SEC
   Shehab M., 2014, P 2 INT WORKSH MOB D
   Shekhar Shashi, 2012, USENIX SEC S
   Smalley Stephen., 2013, Security Enhanced (SE) Android: Bringing Flexible MAC to Android
   STEWARD DV, 1981, IEEE T ENG MANAGE, V28, P71, DOI 10.1109/TEM.1981.6448589
   Sun M., 2014, P 2014 ACM C SECURIT, P165, DOI DOI 10.1145/2627393
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Wang X, 2015, DEEPDROID DYNAMICALL
   Wang Y., 2014, 4 ACM C DAT APPL SEC
   Watson R. N, 2001, USENIX TECHN C BOST
   Wei F., 2014, AMANDROID PRECISE GE
   Widom J., 1996, ACTIVE DATABASE SYST
   Wook Shin, 2010, Proceedings 2010 IEEE International Symposium on Policies for Distributed Systems and Networks (POLICY 2010), P107, DOI 10.1109/POLICY.2010.11
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 61
TC 16
Z9 19
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2019
VL 149
BP 83
EP 100
DI 10.1016/j.jss.2018.11.049
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HK4RW
UT WOS:000457951800004
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, CL
   Zhu, LY
   Tang, HL
   Luo, YL
AF Li, Chunlin
   Zhu Liye
   Tang Hengliang
   Luo Youlong
TI Mobile user behavior based topology formation and optimization in ad hoc
   mobile cloud
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Ad hoc mobile cloud; Mobile user behavior; Topology formation
ID PERFORMANCE
AB As more and more mobile users use social networks to interact with other people currently, the resource limitation of mobile devices becomes an urgent problem to be solved. However, being a novel type of mobile cloud, the ad hoc mobile cloud allows participating mobile devices to share resources with other neighboring mobile devices, which can help the mobile device process a large amount of compute-intensive applications and conserve energy. In this paper, a mobile user behavior based topology formation and optimization in ad hoc mobile cloud is proposed. The mobile device nodes having similar behavioral features are grouped and formed as an ad hoc mobile cloud, which can reduce network delay and improve efficiency of node interaction. Subsequently, a flower pollination based offloading strategy is presented to reduce response time and save energy consumption. The experiment results show that our proposed ad hoc mobile cloud topology outperforms in scalability, while the offloading algorithm can reduce approximately 25%-50% response time and energy consumption as compared with that of other benchmark algorithms. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Li, Chunlin; Zhu Liye; Luo Youlong] Wuhan Univ Technol, Sch Comp Sci & Technol, Wuhan 430063, Hubei, Peoples R China.
   [Tang Hengliang] Beijing Wuzi Univ, Sch Informat, Beijing 101149, Peoples R China.
   [Li, Chunlin] Henan Univ Technol, Minist Educ, Key Lab Grain Informat Proc & Control, Zhengzhou, Henan, Peoples R China.
   [Li, Chunlin] Nanjing Univ Informat Sci & Technol, Jiangsu Key Lab Meteorol Observat & Informat Proc, Nanjing, Jiangsu, Peoples R China.
C3 Wuhan University of Technology; Beijing Wuzi University; Henan
   University of Technology; Nanjing University of Information Science &
   Technology
RP Li, CL (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Technol, Wuhan 430063, Hubei, Peoples R China.; Li, CL (corresponding author), Henan Univ Technol, Minist Educ, Key Lab Grain Informat Proc & Control, Zhengzhou, Henan, Peoples R China.; Li, CL (corresponding author), Nanjing Univ Informat Sci & Technol, Jiangsu Key Lab Meteorol Observat & Informat Proc, Nanjing, Jiangsu, Peoples R China.
EM chunlin74@tom.com
RI Zhu, Liye/ABA-7746-2022
OI Zhu, Liye/0000-0001-7857-9364
FU National Natural Science Foundation (NSF) [61873341, 61672397,
   61472294]; Application Foundation Frontier Project of WuHan
   [2018010401011290]; Beijing Intelligent Logistics System Collaborative
   Innovation Center Open Project [BILSCIC-2018KF-02]; Beijing Youth
   Top-notch Talent Plan of High-Creation Plan [2017000026833ZK25]; Canal
   Plan-Leading Talent Project of Beijing Tongzhou District [YHLB2017038];
   Beijing Key Laboratory of Intelligent Logistics System [BZ0211]; Open
   fund of Key Laboratory of Grain Information Processing and Control
   [KFJJ-2018-204]; Jiangsu Key Laboratory of Meteorological Observation
   and Information Processing Open Project [KDXS1804]
FX The work was supported by the National Natural Science Foundation (NSF)
   under grants (No. 61873341, No. 61672397, No. 61472294), Application
   Foundation Frontier Project of WuHan (No. 2018010401011290), Beijing
   Intelligent Logistics System Collaborative Innovation Center Open
   Project (No. BILSCIC-2018KF-02), Beijing Youth Top-notch Talent Plan of
   High -Creation Plan (No. 2017000026833ZK25), Canal Plan-Leading Talent
   Project of Beijing Tongzhou District (No. YHLB2017038), and Beijing Key
   Laboratory of Intelligent Logistics System (No. BZ0211). Open fund of
   Key Laboratory of Grain Information Processing and Control (under Grant
   No. KFJJ-2018-204), Jiangsu Key Laboratory of Meteorological Observation
   and Information Processing Open Project (KDXS1804). Any opinions,
   findings, and conclusions are those of the authors and do not
   necessarily reflect the views of the above agencies.
CR [Anonymous], SOCIAL NETWORK ANAL
   [Anonymous], 2015, COMPUTER SCI ITS APP
   [Anonymous], 2016 IEEE 9 INT C CL
   [Anonymous], CLUSTER COMPUT
   [Anonymous], 2018, CLUSTER COMPUTING
   [Anonymous], KNOWLEDGE INFORM SYS
   [Anonymous], INT C CLOUD COMP
   [Anonymous], SOCIAL NETWORK ANAL
   Bashir S, 2014, KNOWL INF SYST, V41, P189, DOI 10.1007/s10115-014-0759-6
   Ben Ahmed E, 2014, KNOWL INF SYST, V40, P29, DOI 10.1007/s10115-013-0634-x
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Chen M.-H., 2017, IEEE INFOCOM 2017 IE, P1
   CLEVELAND WS, 1988, J AM STAT ASSOC, V83, P596, DOI 10.2307/2289282
   Elgazzar K, 2016, IEEE T CLOUD COMPUT, V4, P279, DOI 10.1109/TCC.2014.2350471
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Gambhir S, 2017, WIRELESS PERS COMMUN, V97, P3519, DOI 10.1007/s11277-017-4683-4
   Jiao L., 2013, P FUT NETW MOB SUMM, P1
   Kang GS, 2015, IEEE T NETW SERV MAN, V12, P554, DOI 10.1109/TNSM.2015.2499265
   Li B, 2015, J SUPERCOMPUT, V71, P3009, DOI 10.1007/s11227-015-1425-9
   Li F, 2009, INT CON DISTR COMP S, P526, DOI 10.1109/ICDCS.2009.28
   Liu ZH, 2016, INT SYMP PARA DISTR, P172, DOI 10.1109/ISPDC.2016.30
   Machado K, 2017, IEEE COMMUN MAG, V55, P38, DOI 10.1109/MCOM.2017.1700244
   Maruf S, 2016, ARAB J SCI ENG, V41, P951, DOI 10.1007/s13369-015-1945-x
   Mihalcea, 2004, P EMNLP, P401, DOI DOI 10.3115/1219044.1219064
   Nabil E, 2016, EXPERT SYST APPL, V57, P192, DOI 10.1016/j.eswa.2016.03.047
   Pang GS, 2015, DATA MIN KNOWL DISC, V29, P593, DOI 10.1007/s10618-014-0358-x
   Perna D, 2018, IEEE T COMPUT SOC SY, V5, P46, DOI 10.1109/TCSS.2017.2762730
   Rahimi MR, 2014, MOBILE NETW APPL, V19, P133, DOI 10.1007/s11036-013-0477-4
   Rahman MM, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P540, DOI 10.1109/SANER.2015.7081873
   Schembra G, 2014, IEEE T NETW SERV MAN, V11, P376, DOI 10.1109/TNSM.2014.2346084
   Shiraz M, 2015, J GRID COMPUT, V13, P1, DOI 10.1007/s10723-014-9323-6
   Song J, 2014, 2014 IEEE 22ND INTERNATIONAL SYMPOSIUM OF QUALITY OF SERVICE (IWQOS), P284, DOI 10.1109/IWQoS.2014.6914329
   Tan SB, 2005, EXPERT SYST APPL, V28, P667, DOI 10.1016/j.eswa.2004.12.023
   Tzou N, 2012, IEEE VLSI TEST SYMP, P140, DOI 10.1109/VTS.2012.6231093
   Wonnacott TH., 1990, INTRO STAT
   Xia F, 2014, INFORM SYST FRONT, V16, P95, DOI 10.1007/s10796-013-9458-1
   Zhang BT, 2015, IEEE T WIREL COMMUN, V14, P2426, DOI 10.1109/TWC.2014.2386865
   Zhang HengJia Zhang HengJia, 2017, Water Saving Irrigation, P1
   Zhang YR, 2015, IEEE T WIREL COMMUN, V14, P177, DOI 10.1109/TWC.2014.2334661
NR 39
TC 14
Z9 15
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2019
VL 148
BP 132
EP 147
DI 10.1016/j.jss.2018.11.005
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HG4TC
UT WOS:000454966900008
DA 2024-07-18
ER

PT J
AU Zhang, XQ
   Wu, TM
   Chen, MS
   Wei, TQ
   Zhou, JL
   Hu, SY
   Buyya, R
AF Zhang, Xinqian
   Wu, Tingming
   Chen, Mingsong
   Wei, Tongquan
   Zhou, Junlong
   Hu, Shiyan
   Buyya, Rajkumar
TI Energy-aware virtual machine allocation for cloud with resource
   reservation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing; Virtual machine allocation; Evolutionary algorithm;
   Energy efficiency; VM acceptance ratio
ID CONSOLIDATION
AB To reduce the price of pay-as-you-go style cloud applications, an increasing number of cloud service providers offer resource reservation-based services that allow tenants to customize their virtual machines (VMS) with specific time windows and physical resources. However, due to the lack of efficient management of reserved services, the energy efficiency of host physical machines cannot be guaranteed. In today's highly competitive cloud computing market, such low energy efficiency will significantly reduce the profit margin of cloud service providers. Therefore, how to explore energy efficient VM allocation solutions for reserved services to achieve maximum profit is becoming a key issue for the operation and maintenance of cloud computing. To address this problem, this paper proposes a novel and effective evolutionary approach for VM allocation that can maximize the energy efficiency of a cloud data center while incorporating more reserved VMs. Aiming at accurate energy consumption estimation, our approach needs to simulate all the VM allocation updates, which is time-consuming using traditional cloud simulators. To overcome this, we have designed a simplified simulation engine for CloudSim that can accelerate the process of our evolutionary approach. Comprehensive experimental results obtained from both simulation on CloudSim and real cloud environments show that our approach not only can quickly achieve an optimized allocation solution for a batch of reserved VMs, but also can consolidate more VMs with fewer physical machines to achieve better energy efficiency than existing methods. To be specific, the overall profit improvement and energy savings achieved by our approach can be up to 24% and 41% as compared to state-of-the-art methods, respectively. Moreover, our approach could enable the cloud data center to serve more tenant requests. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Zhang, Xinqian; Wu, Tingming; Chen, Mingsong; Wei, Tongquan] East China Normal Univ, Shanghai Key Lab Trustworthy Comp & MOE Int Joint, Shanghai 200062, Peoples R China.
   [Zhou, Junlong] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Jiangsu, Peoples R China.
   [Hu, Shiyan] Michigan Technol Univ, Dept Elect & Comp Engn, Houghton, MI 49931 USA.
   [Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 East China Normal University; Nanjing University of Science &
   Technology; Michigan Technological University; University of Melbourne
RP Chen, MS (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp & MOE Int Joint, Shanghai 200062, Peoples R China.
EM mschen@sei.ecnu.edu.cn
RI Chen, Ming/GVU-8412-2022; Hu, Shiyan/D-4459-2015; Buyya,
   Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496
FU Natural Science Foundation of China [61872147, 61802185]; Fundamental
   Research Funds for the Central Universities, Shanghai Municipal Natural
   Science Foundation [16ZR1409000]; Natural Science Foundation of Jiangsu
   Province [BK20180470]; China HGJ Project [2017ZX01038102-002]
FX This work was supported by Natural Science Foundation of China (Grant
   Nos. 61872147 and 61802185), the Fundamental Research Funds for the
   Central Universities, Shanghai Municipal Natural Science Foundation
   (Grant No. 16ZR1409000), Natural Science Foundation of Jiangsu Province
   under Grant BK20180470, and China HGJ Project under Grant
   2017ZX01038102-002.
CR Amazon Elastic Compute Cloud, 2016, AM EL COMP CLOUD RES
   [Anonymous], 2017, PRICING ALIBABA CLOU
   Barroso Luiz Andr., 2013, The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, V2nd
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Berl A, 2010, COMPUT J, V53, P1045, DOI 10.1093/comjnl/bxp080
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Calheiros RN, 2014, INT CONF CLOUD COMP, P342, DOI 10.1109/CloudCom.2014.20
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen MS, 2020, IEEE T CLOUD COMPUT, V8, P443, DOI 10.1109/TCC.2016.2586067
   Corradi A, 2014, FUTURE GENER COMP SY, V32, P118, DOI 10.1016/j.future.2012.05.012
   Dai XM, 2016, IEEE T CLOUD COMPUT, V4, P210, DOI 10.1109/TCC.2015.2481401
   Fan XB, 2007, CONF PROC INT SYMP C, P13, DOI 10.1145/1273440.1250665
   FUERST C., 2016, IEEE INFOCOM 2016 - The 35th Annual IEEE International Conference on Computer Communications, P1
   Gao YQ, 2013, J COMPUT SYST SCI, V79, P1230, DOI 10.1016/j.jcss.2013.02.004
   Goudarzi H, 2016, IEEE T CLOUD COMPUT, V4, P222, DOI 10.1109/TCC.2015.2474369
   Hwang I, 2013, IEEE INT CONF CLOUD, P196, DOI 10.1109/CLOUD.2013.79
   Hwang RH, 2014, IEEE T SERV COMPUT, V7, P561, DOI 10.1109/TSC.2013.35
   Kim KH, 2011, CONCURR COMP-PRACT E, V23, P1491, DOI 10.1002/cpe.1712
   Lee YC, 2012, J SUPERCOMPUT, V60, P268, DOI 10.1007/s11227-010-0421-3
   Li KL, 2014, IEEE T PARALL DISTR, V25, P2867, DOI 10.1109/TPDS.2013.270
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Meisner D, 2009, ACM SIGPLAN NOTICES, V44, P205, DOI 10.1145/1508284.1508269
   Nguyen Quang-Hung, 2013, Information and Communication Technology. International Conference, ICT-EurAsia 2013. Proceedings: LNCS 7804, P183, DOI 10.1007/978-3-642-36818-9_19
   Paya A, 2017, IEEE T CLOUD COMPUT, V5, P15, DOI 10.1109/TCC.2015.2396059
   Pietri Ilia, 2016, ACM Computing Surveys, V49, DOI 10.1145/2983575
   Tsai JT, 2013, COMPUT OPER RES, V40, P3045, DOI 10.1016/j.cor.2013.06.012
   Wajid U, 2016, IEEE T CLOUD COMPUT, V4, P138, DOI 10.1109/TCC.2015.2453988
   Wang W, 2013, INT CON DISTR COMP S, P400, DOI 10.1109/ICDCS.2013.20
   Xu XL, 2016, IEEE T CLOUD COMPUT, V4, P166, DOI 10.1109/TCC.2015.2453966
   Zhan ZH, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2788397
   Zhang S, 2016, IEEE T PARALL DISTR, V27, P964, DOI 10.1109/TPDS.2015.2425403
   Zhao HZ, 2009, 2009 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CIRCUITS AND SYSTEMS PROCEEDINGS, VOLUMES I & II, P1, DOI 10.1109/ICCCAS.2009.5250581
NR 33
TC 84
Z9 84
U1 0
U2 24
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2019
VL 147
BP 147
EP 161
DI 10.1016/j.jss.2018.09.084
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HG4SU
UT WOS:000454966100009
DA 2024-07-18
ER

PT J
AU Morales, R
   Chicano, F
   Khomh, F
   Antoniol, G
AF Morales, Rodrigo
   Chicano, Francisco
   Khomh, Foutse
   Antoniol, Giuliano
TI Efficient refactoring scheduling based on partial order reduction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software refactoring; Refactoring schedule; Anti-patterns; Design
   quality; Ant colony optimization; Genetic algorithm
ID GENETIC ALGORITHM; CODE
AB Anti-patterns are poor solutions to design problems that make software systems hard to understand and to extend. Components involved in anti-patterns are reported to be consistently related to high changes and faults rates. Developers are advised to perform refactoring to remove anti-patterns, and consequently improve software design quality and reliability. However, since the number of anti-patterns in a system can be very large, the process of manual refactoring can be overwhelming. To assist a software engineer who has to perform this task, we propose a novel approach RePOR (Refactoring approach based on Partial Order Reduction). We perform a case study with five open source systems to assess the performance of RePOR against two well-known meta heuristics (Genetic Algorithm, and Ant Colony Optimization), one conflict-aware refactoring approach and, a new approach based on sampling (sway). Results show that RePOR can correct a median of 73% of anti-patterns (10% more than existing approaches) with a significant reduction in effort (measured by the number of refactorings applied) ranging from 69% to 85%, and a reduction of execution time ranging between 50% and 87%, in comparison to existing approaches.
C1 [Morales, Rodrigo; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, Montreal, PQ, Canada.
   [Chicano, Francisco] Univ Malaga, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
C3 Universite de Montreal; Polytechnique Montreal; Universidad de Malaga
RP Morales, R (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM rodrigomorales2@acm.org
RI Chicano, Francisco/I-5650-2015; Alvarado, Rodrigo Morales/AAR-2780-2021
OI Chicano, Francisco/0000-0003-1259-2990; Alvarado, Rodrigo
   Morales/0000-0002-1350-0560
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 2005, 1 ECOOP WORKSH BUILD
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bulteau L, 2012, SIAM J DISCRETE MATH, V26, P1148, DOI 10.1137/110851390
   Chambers J., 1983, Graphical Methods for Data Analysis
   Chen J., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/TSE.2018.2790925, DOI 10.1109/TSE.2018.2790925.1-1]
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Dea TJ, 2016, LECT NOTES COMPUT SC, V9962, P298, DOI 10.1007/978-3-319-47106-8_26
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dorigo M, 1996, IEEE T SYST MAN CY B, V26, P29, DOI 10.1109/3477.484436
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Hollander M., 2013, Nonparametric statistical methods
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Knuth D., 2014, ART COMPUTER PROGR A, V4A
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Lluch-Lafuente A, 2002, LECT NOTES COMPUT SC, V2318, P112
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Miller B. L., 1995, Complex Systems, V9, P193
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Moghadam I. H., 2015, E INFORM SOFTW ENG J, V9
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R., 2017, RePOR replication package
   Morales R., 2017, AUTOMAT SOFTW ENG, P1
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Morales R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P24, DOI 10.1109/SANER.2016.23
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Qayum F, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/SSBSE.2009.27
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sedgewick R., 2011, Algorithm
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simons CL, 2014, SWARM INTELL-US, V8, P139, DOI 10.1007/s11721-014-0094-2
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2009.30
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
NR 60
TC 7
Z9 7
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2018
VL 145
BP 25
EP 51
DI 10.1016/j.jss.2018.07.076
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GX2UJ
UT WOS:000447575300002
DA 2024-07-18
ER

PT J
AU Ochoa, L
   González-Rojas, O
   Juliana, AP
   Castro, H
   Saake, G
AF Ochoa, Lina
   Gonzalez-Rojas, Oscar
   Juliana, Alves Pereira
   Castro, Harold
   Saake, Gunter
TI A systematic literature review on the semi-automatic configuration of
   extended product lines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Extended product line; Product configuration; Systematic literature
   review
ID ANALYTIC HIERARCHY PROCESS; NONFUNCTIONAL PROPERTIES; SOFTWARE SYSTEMS;
   REQUIREMENTS; VARIABILITY; DESIGN; MODELS; IDENTIFICATION
AB Product line engineering has become essential in mass customisation given its ability to reduce production costs and time to market, and to improve product quality and customer satisfaction. In product line literature, mass customisation is known as product configuration. Currently, there are multiple heterogeneous contributions in the product line configuration domain. However, a secondary study that shows an overview of the progress, trends, and gaps faced by researchers in this domain is still missing. In this context, we provide a comprehensive systematic literature review to discover which approaches exist to support the configuration process of extended product lines and how these approaches perform in practice. Extend product lines consider non-functional properties in the product line modelling. We compare and classify a total of 66 primary studies from 2000 to 2016. Mainly, we give an in-depth view of techniques used by each work, how these techniques are evaluated and their main shortcomings. As main results, our review identified (i) the need to improve the quality of the evaluation of existing approaches, (ii) a lack of hybrid solutions to support multiple configuration constraints, and (iii) a need to improve scalability and performance conditions.
C1 [Ochoa, Lina; Gonzalez-Rojas, Oscar; Castro, Harold] Univ Los Andes, Syst & Comp Engn Dept, Sch Engn, Bogota, Colombia.
   [Juliana, Alves Pereira; Saake, Gunter] Univ Magdeburg, Dept Tech & Business Informat Syst, Sch Comp Sci, Magdeburg, Germany.
   [Ochoa, Lina] Ctr Wiskunde & Informat, Software Anal & Transformat Grp, Amsterdam, Netherlands.
C3 Universidad de los Andes (Colombia); Otto von Guericke University
RP González-Rojas, O (corresponding author), Univ Los Andes, Syst & Comp Engn Dept, Sch Engn, Bogota, Colombia.
EM lm.ochoa750@uniandes.edu.co; o-gonza1@uniandes.edu.co;
   juliana.alves-pereira@ovgu.de; hcastro@uniandes.edu.co;
   gunter.saake@ovgu.de
RI González-Rojas, Oscar/B-3368-2016; Castro, Harold/E-2604-2012
OI González-Rojas, Oscar/0000-0002-8296-6620; Castro,
   Harold/0000-0002-7586-9419; Ochoa Venegas, Lina
   Maria/0000-0002-8767-036X; Alves Pereira, Juliana/0000-0002-0799-2829
FU Brazilian National Council for Scientific and Technological Development
   (CNPq) [202368/2014-9]
FX Juliana Alves Pereira is supported by the Brazilian National Council for
   Scientific and Technological Development (CNPq) grant 202368/2014-9.
CR Afzal U, 2016, COMPUT STAND INTER, V48, P30, DOI 10.1016/j.csi.2016.03.003
   Alonso JA, 2006, INT J UNCERTAIN FUZZ, V14, P445, DOI 10.1142/S0218488506004114
   Alves Pereira Juliana, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P73, DOI 10.1007/978-3-319-14130-5_6
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2012, 16 INT SOFTWARE PROD
   [Anonymous], P 15 INT SOFTW PROD
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], P 18 INT SOFTW PROD
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2013, P 17 INT SOFTWARE PR
   [Anonymous], 2003, Principles of Constraint Programming
   [Anonymous], 2011, P 2011 ACM S APPL CO
   [Anonymous], 2015, P 2015 INT S SOFTWAR, DOI DOI 10.1145/2771783.2771808
   [Anonymous], 2006, Evolutionary Algorithms for Solving Multi-Objective Problems (Genetic and Evolutionary Computation)
   [Anonymous], 2017, P 11 INT WORKSH VAR, DOI DOI 10.1145/3023956.3023959
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Asadi M, 2014, INFORM SOFTWARE TECH, V56, P1144, DOI 10.1016/j.infsof.2014.03.005
   Bagheri Ebrahim, 2014, Canadian Journal of Electrical and Computer Engineering, V37, P94, DOI 10.1109/CJECE.2014.2323958
   Bagheri E, 2014, REQUIR ENG, V19, P187, DOI 10.1007/s00766-013-0165-8
   Bagheri E, 2012, J SOFTW-EVOL PROC, V24, P375, DOI 10.1002/smr.534
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P300, DOI 10.1007/978-3-642-15579-6_21
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P16, DOI 10.1007/978-3-642-15579-6_2
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Chavarriaga J, 2014, LECT NOTES COMPUT SC, V8767, P337, DOI 10.1007/978-3-319-11653-2_21
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2005, P INT WORKSH SOFTW F, P9
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva Jackson Raniel F., 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P466, DOI 10.1109/IRI.2013.6642507
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dou RL, 2016, COMPUT IND ENG, V99, P474, DOI 10.1016/j.cie.2015.11.007
   Du XH, 2003, J ENG DESIGN, V14, P145, DOI 10.1080/0954482031000091482
   Du XH, 2002, CONCURRENT ENG-RES A, V10, P113, DOI 10.1106/106329302027635
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Elo A. E., 1978, The Rating of Chessplayers: Past and Present
   Sánchez LE, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P11, DOI 10.1109/SBCARS.2014.13
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gamez N, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P73, DOI 10.1109/ICWS.2015.20
   Garcia-Galan Jesus, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P416
   Ghezzi Carlo, 2013, Software Engineering for Self-Adaptive Systems II, P191
   Halim S. A., 2015, JURNAL TEKNOLOGI, V77, P75, DOI [10.11113/jtv77.6187, DOI 10.11113/JTV77.6187]
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Hong G, 2008, ADV MATER RES-SWITZ, V44-46, P607, DOI 10.4028/www.scientific.net/AMR.44-46.607
   Hong G, 2008, INT J PROD RES, V46, P3297, DOI 10.1080/00207540601099274
   Hong G, 2010, INT J PROD RES, V48, P6341, DOI 10.1080/00207540903252282
   Hong G., 2006, PROCEEDINGS OF THE 2, P175, DOI [10.1115/DETC2006-99325, DOI 10.1115/DETC2006-99325]
   Hong G, 2010, COMPUT IND, V61, P270, DOI 10.1016/j.compind.2009.09.006
   Jing Chen, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P97, DOI 10.1109/ICSESS.2013.6615264
   Karimpour R, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P34, DOI 10.1109/CMSBSE.2013.6604434
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lee J, 2014, REQUIR ENG, V19, P377, DOI 10.1007/s00766-013-0183-6
   Lei Tan, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P57, DOI 10.1109/APSEC.2014.94
   Leite AF, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P726, DOI 10.1109/CLOUD.2015.101
   Li J, 2011, ADV INTEL SOFT COMPU, V124, P459
   Lian XL, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P191, DOI 10.1109/SANER.2015.7081829
   Liu YJ, 2014, IEEE INT WORKSH MODE, P27, DOI 10.1109/MoDRE.2014.6890823
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Mannion M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P176
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Mazo R., 2014, Recommendation Systems in Software Engineering, P511, DOI 10.1007/978-3-642-45135-5
   Mazo R, 2012, INT J INF SYST MODEL, V3, P33, DOI 10.4018/jismd.2012040102
   Mendonça M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P108
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Myllärniemi V, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P1, DOI 10.1145/2737182.2737183
   Noorian M., 2016, P 31 ANN ACM S APPL, P1296, DOI [10.1145/2851613.2851959, DOI 10.1145/2851613.2851959]
   Noorian Mahdi., 2014, The 26th International Conference on Software Engineering and Knowledge Engineering, Hyatt Regency, Vancouver, BC, Canada, July 1-3, 2013, P671
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Ochoa L., 2015, P 2015 ACM SIGPLAN I, P149, DOI DOI 10.1145/2814251.2814263
   Ochoa L, 2017, LECT NOTES COMPUT SC, V10034, P98, DOI 10.1007/978-3-319-55961-2_10
   Olaechea R., 2012, Proceedings of the Fourth International Workshop on Nonfunctional System Properties in Domain Specific Modeling Languages, p2:1, DOI DOI 10.1145/2420942.2420944
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Ong SK, 2006, INT J PROD RES, V44, P351, DOI 10.1080/00207540500244153
   Ostrosi E, 2012, J INTELL MANUF, V23, P2565, DOI 10.1007/s10845-011-0541-5
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pereira JA, 2017, ACM SIGPLAN NOTICES, V52, P120, DOI [10.1145/3093335.2993249, 10.1145/2993236.2993249]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Quinten C., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P17, DOI 10.1109/PLEASE.2012.6229762
   Quinton C, 2013, P 2013 INT WORKSHOP, P21, DOI [10.1145/2462326.2462332, DOI 10.1145/2462326.2462332]
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Runyu Shi, 2010, Proceedings 2010 International Conference on Progress in Informatics and Computing (PIC 2010), P665, DOI 10.1109/PIC.2010.5687874
   SAATY RW, 1987, MATH MODELLING, V9, P161, DOI 10.1016/0270-0255(87)90473-8
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   Salinesi C., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P243, DOI 10.1109/RE.2010.36
   Sanchez Diana., 2007, ONTOLOGIES HDB PRINC, V14, P3
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seel N. M., 2012, ENCY SCI LEARNING, P1383, DOI [10.1007/978-1-4419-1428-6_4188, DOI 10.1007/978-1-4419-1428-6_4188]
   Shekhar S., 2008, ENCY GIS, P812, DOI [10.1007/978-0-387-35973-1_915, DOI 10.1007/978-0-387-35973-1_915]
   Siegmund N., 2012, Proceedings 2012 2nd International Workshop on Software Engineering for Embedded Systems (SEES), P2, DOI 10.1109/SEES.2012.6225487
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Siegmund N, 2008, ASIA PAC SOFWR ENG, P187, DOI 10.1109/APSEC.2008.45
   Soares LR, 2014, EUROMICRO CONF PROC, P328, DOI 10.1109/SEAA.2014.48
   Soltani Samaneh., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V1, P56, DOI DOI 10.1145/2362536.2362548
   Song H., 2007, P INT DES ENG TECHN, P959, DOI [10.1115/DETC2007-34878, DOI 10.1115/DETC2007-34878]
   Vanderbei Robert J, 2014, Linear Programming: Foundations and Extensions
   Villela Karina, 2012, SPLC
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   White J., 2008, J BRAZILIAN COMPUTER, V14, P25, DOI DOI 10.1007/BF03192550
   White J, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P129, DOI 10.1109/SPLINE.2007.19
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yeh JY, 2005, AI EDAM, V19, P39, DOI 10.1017/S0890060405050043
   Yu X., 2012, Introduction to Evolutionary Algorithms
   Yu YJ, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P645
   Zanardini D, 2016, J LOG ALGEBR METHODS, V85, P173, DOI 10.1016/j.jlamp.2015.08.003
   Zhang GH, 2014, SOFTWARE QUAL J, V22, P365, DOI 10.1007/s11219-013-9197-z
NR 123
TC 13
Z9 13
U1 2
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2018
VL 144
BP 511
EP 532
DI 10.1016/j.jss.2018.07.054
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU6QQ
UT WOS:000445441100030
OA Green Published
DA 2024-07-18
ER

PT J
AU Wei, XM
   Dong, YW
   Li, XL
   Wong, WE
AF Wei, Xiaomin
   Dong, Yunwei
   Li, Xuelin
   Wong, W. Eric
TI Architecture-level hazard analysis using AADL
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Hazard analysis; Model transformation; Semantic preservation; AADL;
   Hazard model annex
ID PERFORMANCE ANALYSIS; SAFETY; MODEL; DEPENDABILITY
AB Software systems are becoming increasingly important in safety-critical areas. Designing safe software requires a significant emphasis on hazards in the early design phase of software development. In this paper, we propose a hazard analysis approach based on Architecture Analysis and Design Language (AADL). First, to make up the deficiencies of Error Model Annex (EMV2), we create Hazard Model Annex (HMA) to specify the hazard sources, hazards, hazard trigger mechanisms, and mishaps. By using HMA, a safety model can be built by annotating an architecture model with the error model and hazard model. Then, an architecture-level hazard analysis approach is proposed to automatically generate the hazard analysis table. The approach contains the model transformation from a safety model to a Deterministic Stochastic Petri Nets (DSPNs) model for calculating the occurrence probability of hazards and mishaps. In addition, we present the formal semantics for each constituent part of the safety model, define the model mapping rules, and verify the semantic preservation of the transformation. Finally, HMA is implemented to build safety models and two Eclipse plug-ins of our methodology are also implemented. A case study on a flight control software system has been employed to demonstrate the feasibility of our proposed technique. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Wei, Xiaomin; Dong, Yunwei] Northwestern Polytech Univ, Sch Comp Sci & Engn, Xian 710072, Shaanxi, Peoples R China.
   [Wei, Xiaomin; Li, Xuelin; Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 Northwestern Polytechnical University; University of Texas System;
   University of Texas Dallas
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
EM Xiaomin.Wei@utdallas.edu; yunweidong@nwpu.edu.cn;
   xxl131630@utdallas.edu; ewong@utdallas.edu
OI Wei, Xiaomin/0000-0003-2658-1694; Li, Xuelin/0000-0001-7204-0616
FU National Key Research and Development Program of China (Basic Research
   Class) [2017YFB0903000]; Aviation Science Foundation of China
   [2016ZC31003]; China Scholarship Council
FX This work was supported by the National Key Research and Development
   Program of China (Basic Research Class) under Grant No. 2017YFB0903000 -
   Basic Theories and Methods of Analysis and Control of the Cyber-Physical
   Systems for Power Grid, the Aviation Science Foundation of China under
   Grant No. 2016ZC31003, and the program of China Scholarship Council.
CR [Anonymous], HAZARD ANAL TECHNIQU
   [Anonymous], THESIS
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2012, RTCADO178C
   [Anonymous], P 33 DIG AV SYST C
   [Anonymous], 1996, ARP4761 SAE INT
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Berthomieu B, 2009, LECT NOTES COMPUT SC, V5570, P207, DOI 10.1007/978-3-642-01924-1_15
   Bertot Y., 2004, TEXT THEORET COMP S
   Bertrand D, 2008, IEEE INT C ENG COMP, P288, DOI 10.1109/ICECCS.2008.29
   Boehm B., 2006, Systems Engineering, V9, P1, DOI 10.1002/sys.20044
   Bozzano M, 2011, COMPUT J, V54, P754, DOI 10.1093/comjnl/bxq024
   Bozzano M, 2010, LECT NOTES COMPUT SC, V6174, P562, DOI 10.1007/978-3-642-14295-6_48
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Collinson R.P.G., 2011, INTRO AVIONICS SYSTE, V3rd, P443
   Delange J, 2014, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2014.20
   Federal Aviation Administration, 2000, MILSTD882D FED AV AD
   Feiler P.H., 2004, AADL WORKSH PAR
   Feiler Peter H, 2012, TECHNICAL REPORT
   Feller P.H., 2012, MODEL BASED ENG AADL
   Filali-Amine M, 2010, LECT NOTES COMPUT SC, V5977, P245, DOI 10.1007/978-3-642-11811-1_19
   Fleming CH, 2013, SAFETY SCI, V55, P173, DOI 10.1016/j.ssci.2012.12.005
   Grunske L, 2008, IEEE HI ASS SYS ENGR, P283, DOI 10.1109/HASE.2008.32
   Gu B, 2014, 2014 IEEE EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C 2014), P213, DOI 10.1109/SERE-C.2014.41
   Johnsen A., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P130, DOI 10.1109/HASE.2012.22
   Kaiser B., 2006, THESIS
   King AL, 2015, LECT NOTES COMPUT SC, V9337, P228, DOI 10.1007/978-3-319-24255-2_17
   Larson B., 2013, P 2013 ACM SIGADA AN, P65
   Lawrence JD, 1997, RELIAB ENG SYST SAFE, V55, P267, DOI 10.1016/S0951-8320(96)00098-1
   Layman L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P623, DOI 10.1145/1985793.1985881
   Leveson N, 2004, SAFETY SCI, V42, P237, DOI 10.1016/S0925-7535(03)00047-X
   Leveson N., 2011, ENG SAFER WORLD SYST, DOI [10.5860/choice.49-6305, DOI 10.5860/CHOICE.49-6305]
   Leveson N. G., 2012, COMPLEX SYSTEMS DESI, P27
   Ma Y, 2013, DES AUT TEST EUROPE, P1173
   MARSAN MA, 1987, LECT NOTES COMPUT SC, V266, P132
   Ölveczky PC, 2010, LECT NOTES COMPUT SC, V6117, P47, DOI 10.1007/978-3-642-13464-7_5
   Pratt R., 2000, IET, DOI [10.1049/pbce057e.57, DOI 10.1049/PBCE057E.57]
   Procter Sam, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P124, DOI 10.1109/MEMCOD.2014.6961850
   Rugina AE, 2008, EDCC-7: SEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P85, DOI 10.1109/EDCC-7.2008.14
   Rugina AE, 2007, LECT NOTES COMPUT SC, V4615, P14
   SAE International, 2001, ARP5580 SAE INT
   SAE International, 2015, R SAE ARCH AN DES LA, V1
   SAE International: Architecture Analysis & Design Language (AADL), 2012, AS5506B SAE INT
   Wei XM, 2015, PROCEEDINGS 2015 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, P103, DOI 10.1109/TASE.2015.10
   Wei X, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P98, DOI 10.1109/PIC.2014.6972304
   Yang ZB, 2014, J SYST SOFTWARE, V93, P42, DOI 10.1016/j.jss.2014.02.058
   Zimmermann A., 2006, MMB 2006
NR 48
TC 12
Z9 14
U1 1
U2 25
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2018
VL 137
BP 580
EP 604
DI 10.1016/j.jss.2017.06.018
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8HN
UT WOS:000425572400037
DA 2024-07-18
ER

PT J
AU Dadeau, F
   Giorgetti, A
   Bouquet, F
   Enderlin, I
AF Dadeau, Frederic
   Giorgetti, Alain
   Bouquet, Fabrice
   Enderlin, Ivan
TI Contract-based testing for PHP with Praspel
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE PHP; Design by Contract; Annotations; Test generation
ID VERIFICATION
AB We summarize several contributions related to the PHP Realistic Annotation and SPEcification Language (Praspel). This language extends PHP programs with annotations for the formal specification of the behavior of their functions and for the declaration of types for their data. These contracts are used to automate test generation, by deriving test cases and test data, and test execution, by checking assertions at run-time in order to establish the test verdict. Our approach to contract-based testing for PHP is fully implemented into a PHP framework currently in use by several web companies. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Dadeau, Frederic; Giorgetti, Alain; Bouquet, Fabrice] Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, Besancon, France.
   [Enderlin, Ivan] Liip Ch, Rue Etraz 4, Lausanne, Switzerland.
C3 Universite de Franche-Comte; Centre National de la Recherche
   Scientifique (CNRS); Universite de Technologie de Belfort-Montbeliard
   (UTBM)
RP Dadeau, F (corresponding author), Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, Besancon, France.
EM frederic.dadeau@femto-st.fr
RI Bouquet, Fabrice/AFV-8248-2022; Giorgetti, Alain/JSL-7797-2023;
   Giorgetti, Alain/I-6035-2019
OI Bouquet, Fabrice/0000-0001-9181-1172; Giorgetti,
   Alain/0000-0002-0990-9611
CR Aichernig BK, 2003, LECT NOTES COMPUT SC, V2757, P34
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2010, SIGSOFT SOFTWARE ENG
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Baudin P, 2013, ACSL ANSI ISO C SPEC
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bouquet F, 2006, LECT NOTES COMPUT SC, V4085, P428
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   Dadeau F, 2007, ELECTRON NOTES THEOR, V190, P21, DOI 10.1016/j.entcs.2007.08.003
   Enderlin I., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P509, DOI 10.1109/ICST.2012.136
   Enderlin I, 2013, IEEE ICST WORKSHOP, P218, DOI 10.1109/ICSTW.2013.80
   Enderlin I, 2011, LECT NOTES COMPUT SC, V7019, P64, DOI 10.1007/978-3-642-24580-0_6
   GAMMA E, 1995, DESIGN PATTERNS
   Giorgetti A, 2008, IET SOFTW, V2, P500, DOI 10.1049/iet-sen:20080008
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Gotlieb A, 2012, KNOWL ENG REV, V27, P343, DOI 10.1017/S0269888912000252
   Gotlieb A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P151, DOI 10.1109/ICST.2009.10
   Hakonen Harri., 2011, Proceedings of the 12th International Conference on Computer Systems and Technologies, CompSysTech'11, P161
   Heidegger P, 2010, LECT NOTES COMPUT SC, V6141, P154, DOI 10.1007/978-3-642-13953-6_9
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   Macworth A., 1977, J ARTIF INTELL, V8, P99
   Madsen P., 2004, J OBJECT TECHNOL, V3
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MEYER B, 1987, SIGPLAN NOTICES, V22, P85, DOI 10.1145/24686.24694
   Meyer B, 2007, LECT NOTES COMPUT SC, V4362, P114
   Meyer B, 2009, COMPUTER, V42, P46, DOI 10.1109/MC.2009.296
   Mosterman P, 2011, Model-based testing for embedded systems
   Oestreicher S., 2014, PHP QUICKCHECK GENER
   Oriat C, 2005, LECT NOTES COMPUT SC, V3712, P242
   Pot E., 2015, SABRE KATANA
   Potencier F., 2014, PICKLE
   Tillmann Nikolai., 2005, SIGSOFT Softw. Eng. Notes, V30, P253
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Weissleder S., 2007, MODELS SOFTWARE ENG, P151
   Xu G.H., 2003, P WORKSH FORM APPR T, P70, DOI DOI 10.1007/978-3-540-24617-66
   Yoonsik Cheon, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P385
   Zaninotto F., 2014, FAKER
   Zimmerman DM, 2011, LECT NOTES COMPUT SC, V6528, P183
NR 41
TC 1
Z9 1
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2018
VL 136
BP 209
EP 222
DI 10.1016/j.jss.2017.06.017
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FR3PR
UT WOS:000418979100013
DA 2024-07-18
ER

PT J
AU Troya, J
   Segura, S
   Ruiz-Cortés, A
AF Troya, Javier
   Segura, Sergio
   Ruiz-Cortes, Antonio
TI Automated inference of likely metamorphic relations for model
   transformations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model-Driven engineering; Metamorphic testing; Metamorphic relations;
   Model transformations; Automatic inference; Generic approach
ID SOFTWARE; VALIDATION; ATL
AB Model transformations play a cornerstone role in Model-Driven Engineering (MDE) as they provide the essential mechanisms for manipulating and transforming models. Checking whether the output of a model transformation is correct is a manual and error-prone task, referred to as the oracle problem. Metamorphic testing alleviates the oracle problem by exploiting the relations among different inputs and outputs of the program under test, so-called metamorphic relations (MRs). One of the main challenges in metamorphic testing is the automated inference of likely MRs.
   This paper proposes an approach to automatically infer likely MRs for ATL model transformations, where the tester does not need to have any knowledge of the transformation. The inferred MRs aim at detecting faults in model transformations in three application scenarios, namely regression testing, incremental transformations and migrations among transformation languages. In the experiments performed, the inferred likely MRs have proved to be quite accurate, with a precision of 96.4% from a total of 4101 true positives out of 4254 MRs inferred. Furthermore, they have been useful for identifying mutants in regression testing scenarios, with a mutation score of 93.3%. Finally, our approach can be used in conjunction with current approaches for the automatic generation of test cases. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Troya, Javier; Segura, Sergio; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Troya, Javier] Univ Seville, ETS Ingn Informat, Room E0-40-A,Avda Reina Mercedes S-N, E-41012 Seville, Spain.
C3 University of Sevilla; University of Sevilla
RP Troya, J (corresponding author), Univ Seville, ETS Ingn Informat, Room E0-40-A,Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM jtroya@us.es
RI Troya, Javier/B-6951-2017; Segura, Sergio/A-9615-2011; Cortés, Antonio
   Ruiz/B-9056-2008
OI Troya, Javier/0000-0002-1314-9694; Segura, Sergio/0000-0001-8816-6213;
   Cortés, Antonio Ruiz/0000-0001-9827-1834
FU Spanish Government under CICYT project BELI [TIN2015-70560-R];
   Andalusian Government project COPAS [P12-TIC-1867]; European Commission
   (FEDER)
FX This work has been partially supported by the European Commission
   (FEDER) and Spanish Government under CICYT project BELI
   (TIN2015-70560-R), and the Andalusian Government project COPAS
   (P12-TIC-1867).
CR Anastasakis K., 2007, MODEVVA
   [Anonymous], P ECMDA WORKSH INT M
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Bergmayr Alexander, 2014, P 29 ACM IEEE INT C, P647, DOI DOI 10.1145/2642937.2642946
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P158, DOI 10.1007/978-3-642-38883-5_15
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Cariou E., 2004, P OCL MDE, P1
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chan WK, 2010, SOFTW TEST VERIF REL, V20, P89, DOI 10.1002/stvr.408
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2009, LECT NOTES COMPUT SC, V5522, P243, DOI 10.1007/978-3-642-02138-1_19
   Cheng Z, 2015, LECT NOTES COMPUT SC, V9152, P133, DOI 10.1007/978-3-319-21155-8_11
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Clavel Manuel, 2007, Lecture Notes in Computer Science, V4350, DOI [10.1007/978-3-540-71999-1, DOI 10.1007/978-3-540-71999-1]
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Etzlstorfer J., 2013, MOD EV WORKSH MODELS
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guderlei R, 2007, INT J SOFTW ENG KNOW, V17, P757, DOI 10.1142/S0218194007003471
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Guyard P., 2005, BRIDGING GRAFCET PET
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Jiang M., 2014, SEKE, P94
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   JOUAULT F, 2005, P EUR C MOD DRIV ARC
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2014, IEEE ICST WORKSHOP, P237, DOI 10.1109/ICSTW.2014.62
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kanewala U, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P48, DOI 10.1109/SECSE.2013.6615099
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Lawley M., 2004, OOPSLA WORKSH BEST P
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P542, DOI [10.1145/2594291.2594333, 10.1145/2666356.2594333]
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mellor S.J., 2004, MDA DISTILLED PRINCI, V88
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mingyue Jiang, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P530, DOI 10.1109/ICSESS.2013.6615365
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Project E. M., 2015, ATLAS TRANSFORMATION
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   Rath I., 2008, P 1 INT C MOD TRANSF, DOI [10.1007/978-3-540-69927-9_8, DOI 10.1007/978-3-540-69927-9_8]
   Razavi A, 2012, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE.2012.6227160
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Su FH, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P55, DOI 10.1109/AST.2015.19
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Troya J., 2016, METAMORPHIC TESTING
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Troya J, 2015, IEEE ICST WORKSHOP
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wimmer M, 2013, LECT NOTES COMPUT SC, V8107, P203, DOI 10.1007/978-3-642-41533-3_13
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang Jing, 2011, Journal of Electronics (China), V28, P623, DOI 10.1007/s11767-012-0743-9
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 99
TC 26
Z9 26
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2018
VL 136
BP 188
EP 208
DI 10.1016/j.jss.2017.05.043
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FR3PR
UT WOS:000418979100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, M
   Jiang, SJ
   Zhang, YM
   Wang, XY
   Yu, Q
AF Zhang, Miao
   Jiang, Shujuan
   Zhang, Yanmei
   Wang, Xingya
   Yu, Qiao
TI A multi-level feedback approach for the class integration and test order
   problem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Test order; Test cost; Stub minimization; Feedback
ID SOFTWARE
AB Class integration and test order (CITO) problem is to devise an optimal inter-class order which can minimize stubbing efforts. The existing approach for this problem, whether it is graph-based or search-based, usually wastes a significant amount of time and efforts in finding test orders, and sometimes may devise sub-optimal solutions. To overcome this limitation, we introduce a multi-level feedback approach to better solve the CITO problem. In this method, we use a multi-level feedback strategy to calculate test profit for each class, and according to test profit, propose a reward and punishment mechanism to assess the performance of class and set its test priority. Instead of breaking cycles or searching for optimum in the previous methods, our method integrates classes by their test priority, therefore significantly reduces the running time. The experiments are conducted on five benchmark programs and eight industrial programs, and the obtained results are compared with graph-based and search-based approaches. The results indicate that our approach can minimize the stubbing cost efficiently for most programs of all typical approaches compared in this work. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Zhang, Miao; Jiang, Shujuan; Zhang, Yanmei; Wang, Xingya; Yu, Qiao] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
   [Zhang, Yanmei] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
C3 China University of Mining & Technology; Guilin University of Electronic
   Technology
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
EM shjjiang@cumt.edu.cn
RI yu, qiao/KFT-2125-2024; Wang, Xingya/J-5857-2014; Jiang,
   Shujuan/K-4178-2012; Yu, Qiao/IAP-6999-2023
OI Jiang, Shujuan/0000-0003-0643-0565; Wang, Xingya/0000-0002-7331-4831
FU National Natural Science Foundation of China [61673384, 61502497];
   Guangxi Key Laboratory of Trusted Software [kx201609]
FX This work is supported in part by the National Natural Science
   Foundation of China (Nos. 61673384 and 61502497), and the Guangxi Key
   Laboratory of Trusted Software (No. kx201609).
CR Abdurazik A., 2006, P 2006 INT WORKSH AU, P50
   [Anonymous], AUTOMATION ELECT POW
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Briand LC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ISSRE.2001.989482
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Briand LC., 2002, EXPT GENETIC ALGORIS
   Cabral RD, 2010, LECT NOTES COMPUT SC, V6435, P16, DOI 10.1007/978-3-642-16573-3_3
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Assunçao WKG, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1867
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Hewett R, 2009, IEEE INT CONF AUTOM, P211, DOI 10.1109/ASE.2009.84
   Jiang SJ, 2012, INFORMATION-TOKYO, V15, P331
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Labiche Y., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P136, DOI 10.1109/ICSE.2000.870405
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Steindl M., 2012, Proceedings of the 2012 10th Workshop on Intelligent Solutions in Embedded Systems (WISES 2012), P63
   Tai KC, 1997, P INT COMP SOFTW APP, P602, DOI 10.1109/CMPSAC.1997.625079
   Tarjan R., 1971, SIAM J COMPUT, V1, P146
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
   Wang Z., 2011, SEKE, P254
   Zhang Y. M., 2016, CHIN J COMPUT ONLINE
NR 23
TC 6
Z9 9
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2017
VL 133
BP 54
EP 67
DI 10.1016/j.jss.2017.08.026
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ3EX
UT WOS:000412614400004
DA 2024-07-18
ER

PT J
AU Taba, SES
   Keivanloo, I
   Zou, Y
   Wang, SH
AF Taba, Seyyed Ehsan Salamati
   Keivanloo, Iman
   Zou, Ying
   Wang, Shaohua
TI An exploratory study on the usage of common interface elements in
   android applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mobile applications; Common UI elements; User-perceived quality
AB The number of mobile applications has increased drastically in the past few years. A recent study has shown that reusing source code is a common practice for Android application development. However, reuse in mobile applications is not necessarily limited to the source code (i.e., program logic). User interface (UI) design plays a vital role in constructing the user-perceived quality of a mobile application. The user-perceived quality reflects the users' opinions of a product. For mobile applications, it can be quantified by the number of downloads and raters. In this study, we extract commonly used UI elements, denoted as Common Element Sets (CESs), from user interfaces of applications. Moreover, we highlight the characteristics of CESs that can result in a high user-perceived quality by proposing various metrics. Through an empirical study on 1292 mobile applications, we observe that (i) CESs of mobile applications widely occur among and across different categories; (ii) certain characteristics of CESs can provide a high user-perceived quality; and (iii) through a manual analysis, we recommend UI templates that are extracted and summarized from CESs for developers. Developers and quality assurance personnel can use our guidelines to improve the quality of mobile applications. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Taba, Seyyed Ehsan Salamati; Wang, Shaohua] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Keivanloo, Iman; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Wang, SH (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM taba@cs.queensu.ca; iman.keivanloo@queensu.ca; ying.zou@queensu.ca;
   shaohua@cs.queensu.ca
RI Wang, Shaohua/AAF-7235-2019; Zou, Ying/KLC-9380-2024
OI wang, shaohua/0000-0001-5777-7759
CR Agrawal Rakesh., 1993, P 1993 ACM SIGMOD IN, P207, DOI DOI 10.1145/170035.170072
   Al-Ekram R., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Amalfitano D., 2012, USING GUI RIPPING AU, DOI [10.1145/2351676.2351717, DOI 10.1145/2351676.2351717]
   [Anonymous], 2014, ANDROID GUIDELINES
   [Anonymous], 2014, ANDROID APPS QUALITY
   [Anonymous], 2014, NUMBER ANDROID APPS
   [Anonymous], CLOSET EFFICIENT ALG
   [Anonymous], 2015, NUMBER FREE PAID MOB
   [Anonymous], 2014, GOOGLES DO IT YOURSE
   [Anonymous], THESIS
   [Anonymous], 2014, DIFFERENT MOBILE PLA
   [Anonymous], 2014, NUMBER OF DOWNLOADS
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen T.-H., 2012, EXPLAINING SOFTWARE
   Chittaro L, 2010, J MULTIMODAL USER IN, V3, P157, DOI 10.1007/s12193-010-0036-2
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Granlund Lafrenire D, 2001, PATTERN SUPPORTED AP
   Grant S., 2010, ESTIMATING OPTIMAL N
   Harman M., 2012, APP STORE MINING ANA, DOI [10.1109/MSR.2012.6224306., DOI 10.1109/MSR.2012.6224306]
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Joorabchi M. E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P177, DOI 10.1109/WCRE.2012.27
   Karlson A.K., 2010, MOBILE TASKFLOW CONT, DOI [10.1145/1753326.1753631., DOI 10.1145/1753326.1753631]
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Minelli R, 2013, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSM.2013.76
   Nilsson EG, 2009, ADV ENG SOFTW, V40, P1318, DOI 10.1016/j.advengsoft.2009.01.017
   Pasquier N, 1999, LECT NOTES COMPUT SC, V1540, P398
   Roy ChanchalK., 2010, Proceedings of the 4th International Workshop on Software Clones, IWSC '10, P17
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Shabtai A., 2010, AUTOMATED STATIC COD, DOI [10.1109/CIS.2010.77, DOI 10.1109/CIS.2010.77]
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Shirazi A. Sahami, 2013, INSIGHTS LAYOUT PATT, DOI [10.1145/2480296.2480308, DOI 10.1145/2480296.2480308]
   Szydlowski M., 2012, CHALLENGES DYNAMIC A, DOI [10.1007/978-3-642-27585-2_6, DOI 10.1007/978-3-642-27585-2_6]
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Yin RobertK., 2009, Case Study Research: Design and Methods, V4th, P5
NR 38
TC 7
Z9 7
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2017
VL 131
BP 491
EP 504
DI 10.1016/j.jss.2016.07.010
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD6SF
UT WOS:000407657500028
DA 2024-07-18
ER

PT J
AU Kevic, K
   Walters, BM
   Shaffer, TR
   Sharif, B
   Shepherd, DC
   Fritz, T
AF Kevic, K.
   Walters, B. M.
   Shaffer, T. R.
   Sharif, B.
   Shepherd, D. C.
   Fritz, T.
TI Eye gaze and interaction contexts for change tasks - Observations and
   potential
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT IEEE/ACM 37th IEEE International Conference on Software Engineering
   (ICSE)
CY MAY 16-24, 2015
CL Florence, ITALY
SP IEEE Comp Soc, ACM
DE Eye-tracking; Interactions; Empirical study
ID SOFTWARE; COMPREHENSION; INFORMATION
AB The more we know about software developers' detailed navigation behavior for change tasks, the better we are able to provide effective tool support. Currently, most empirical studies on developers performing change tasks are, however, limited to very small code snippets or limited by the granularity and detail of the data collected on developer's navigation behavior. In our research, we extend this work by combining user interaction monitoring to gather interaction context - the code elements a developer selects and edits - with eye-tracking to gather more detailed and fine-granular gaze context-code elements a developer looked at. In a study with 12 professional and 10 student developers we gathered interaction and gaze contexts from participants working on three change tasks of an open source system. Based on an analysis of the data we found, amongst other results, that gaze context captures different aspects than interaction context and that developers only read small portions of code elements. We further explore the potential of the more detailed and fine-granular data by examining the use of the captured change task context to predict perceived task difficulty and to provide better and more fine-grained navigation recommendations. We discuss our findings and their implications for better tool support. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Kevic, K.; Fritz, T.] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Walters, B. M.; Shaffer, T. R.; Sharif, B.] Youngstown State Univ, Dept CS & IS, Youngstown, OH 44555 USA.
   [Shepherd, D. C.] ABB Corp Res, Ind Software Syst, Raleigh, NC USA.
C3 University of Zurich; University System of Ohio; Youngstown State
   University; ABB
RP Kevic, K (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM kevic@ifi.uzh.ch
RI Sharif, Bonita/GXZ-5409-2022
OI Sharif, Bonita/0000-0002-5178-7160; Shepherd, David
   C./0000-0003-2017-7842
FU SNF Grant DARINO [200021_ 150050]; ABB Grant; Swiss National Science
   Foundation (SNF) [200021_150050] Funding Source: Swiss National Science
   Foundation (SNF); Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1553573] Funding Source:
   National Science Foundation
FX The authors would like to thank the participants in the study. The
   authors would also like to thank Meghan Allen for her helpful feedback.
   This work was funded in part by the SNF Grant DARINO (200021_ 150050)
   and an ABB Grant.
CR Altmann EM, 2001, INT J HUM-COMPUT ST, V54, P189, DOI 10.1006/ijhc.2000.0407
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   Augustine V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P229, DOI 10.1109/ICSE.2015.151
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bednarik R, 2012, INT J HUM-COMPUT ST, V70, P143, DOI 10.1016/j.ijhcs.2011.09.003
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   DeLine Robert., 2005, SOFTVIS 05, P183, DOI [10.1145/1056018.1056044, DOI 10.1145/1056018.1056044]
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kevic K., 2014, P MSR, P320
   Kevic K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P202, DOI 10.1145/2786805.2786864
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Piorkowski D., 2012, Proc. of the ACM Annual Conference on Human Factors in Computing Systems (CHI'12), P1471
   Piorkowski D, 2011, S VIS LANG HUM CEN C, P109, DOI 10.1109/VLHCC.2011.6070387
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Rist Robert S., 1986, P 1 WORKSH EMP STUD, P28
   Robbes R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P847, DOI 10.1145/1368088.1368219
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Shaffer T. R., 2015, P 10 JOINT M EUR SOF
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   SHARIF B., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67, DOI DOI 10.1145/1987856.1987872
   Sharif B., 2013, VISSOFT, P1
   Sharma B., 2010, P 26 IEEE INT C SOFT, P1, DOI DOI 10.1109/ICSM.2010.5609582
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Turner R., 2014, P S EYE TRACK RES AP, P231
   Uwano Hidetake, 2006, Eye tracking research applications, P133, DOI DOI 10.1145/1117309.1117357
   Walters B., 2014, P 22 INT C PROGRAM C, P201, DOI [10.1145/2597008.2597795, DOI 10.1145/2597008.2597795]
   Walters B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P51, DOI 10.1109/TEFSE.2013.6620154
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Züger M, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2981, DOI 10.1145/2702123.2702593
NR 51
TC 22
Z9 23
U1 1
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2017
VL 128
BP 252
EP 266
DI 10.1016/j.jss.2016.03.030
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EV3QU
UT WOS:000401675000015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mao, K
   Capra, L
   Harman, M
   Jia, Y
AF Mao, Ke
   Capra, Licia
   Harman, Mark
   Jia, Yue
TI A survey of the use of crowdsourcing in software engineering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Crowdsourced software engineering; Software crowdsourcing;
   Crowdsourcing; Literature survey
ID MODEL; DOCUMENTATION; MOTIVATION; QUALITY; SYSTEMS; ISSUES
AB The term 'crowdsourcing' was initially introduced in 2006 to describe an emerging distributed problem solving model by online workers. Since then it has been widely studied and practiced to support software engineering. In this paper we provide a comprehensive survey of the use of crowdsourcing in software engineering, seeking to cover all literature on this topic. We first review the definitions of crowdsourcing and derive our definition of Crowdsourcing Software Engineering together with its taxonomy. Then we summarise industrial crowdsourcing practice in software engineering and corresponding case studies. We further analyse the software engineering domains, tasks and applications for crowdsourcing and the platforms and stakeholders involved in realising Crowdsourced Software Engineering solutions. We conclude by exposing trends, open issues and opportunities for future research on Crowdsourced Software Engineering. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Mao, Ke; Capra, Licia; Harman, Mark; Jia, Yue] UCL, Dept Comp Sci, Malet Pl, London WC1E 6BT, England.
C3 University of London; University College London
RP Mao, K (corresponding author), UCL, Dept Comp Sci, Malet Pl, London WC1E 6BT, England.
EM k.mao@cs.ucl.ac.uk; l.capra@ucl.ac.uk; mark.harman@ucl.ac.uk;
   yue.jia@ucl.ac.uk
FU Dynamic Adaptive Automated Software Engineering (DAASE) programme grant
   [EP/J017515]; EPSRC [EP/J017515/1] Funding Source: UKRI
FX Ke Mao is funded by the UCL Graduate Research Scholarship (GRS), and the
   UCL Overseas Research Scholarship (ORS). This work is also supported by
   the Dynamic Adaptive Automated Software Engineering (DAASE) programme
   grant (EP/J017515), which fully supports Yue Jia, partly supports Mark
   Harman.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Adepetu A., 2012, TECHNICAL REPORT
   Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Agarwal Yuvraj, 2013, P 11 ANN INT C MOB S, P97, DOI DOI 10.1145/2462456.2464460
   Akhawe Devdatta., 2013, Alice in warningland: A large-scale field study of browser security warning effectiveness, P257
   Akiki P.A, 2013, P 5 ACM SIGCHI S ENG, P121
   Ali Raian, 2012, P 7 INT C EV NOV APP
   Allahbakhsh M, 2013, IEEE INTERNET COMPUT, V17, P76, DOI 10.1109/MIC.2013.20
   Almaliki M, 2014, INT CONF RES CHAL
   Alonso Omar, 2008, SIGIR Forum, V42, P9, DOI 10.1145/1480506.1480508
   Amann S., 2014, P 1 INT WORKSH CROWD, P5, DOI 10.1145/2593728.2593730
   [Anonymous], 2012, P 14 WORKSH FORM TEC
   [Anonymous], 2011, Proceedings of the 24th annual ACM symposium on User interface software and technology
   [Anonymous], 2013, Finding Source Code on the Web for Remix and Reuse, DOI DOI 10.1007/978-1-4614-6596-6_15
   [Anonymous], THE CHAOS REPORT
   [Anonymous], 2011, P 24 ANN ACM S USER, DOI DOI 10.1145/2047196.2047202
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   [Anonymous], 2012, TECHNICAL REPORT
   [Anonymous], P 29 ACM IEEE INT C
   [Anonymous], 2013, WIRTSCHAFTSINF
   [Anonymous], ACM SIGPL C COMP OBJ
   [Anonymous], CROWDS IND REP
   [Anonymous], 2011, P IEEE 3 INT C PRIV, DOI DOI 10.1109/PASSAT/SOCIALCOM.2011.203
   [Anonymous], 2012, SIGIR Forum
   [Anonymous], 2012, ACM SIGSOFT SOFTWARE
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Aparicio M., 2012, P WORKSH OP SOURC DE, P13
   Archak N, 2010, P 19 INT C WORLD WO, P21
   Arcuri A, 2008, LECT NOTES COMPUT SC, V5361, P61
   Arellano C, 2010, LECT NOTES COMPUT SC, V6488, P294, DOI 10.1007/978-3-642-17616-6_27
   Auler R, 2014, LECT NOTES COMPUT SC, V8409, P218
   Bacchelli A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P26, DOI 10.1109/RSSE.2012.6233404
   Ball T, 2014, TECHNICAL REPORT
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Begel A., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P33, DOI DOI 10.1145/1882362.1882370
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bergvall-Kåreborn B, 2013, ACCOUNT FORUM, V37, P280, DOI 10.1016/j.accfor.2013.06.001
   Bernstein M., 2010, UIST '10 Adjunct proceedings of the 23nd annual ACM symposium on User interface software and technology, P347
   Bishop J., 2015, P 37 INT C SOFTW ENG
   Blanco R, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P923
   Boehm B.W., 1981, Software engineering economics, V197
   Bozkurt M., 2011, P 6 IEEE INT S SERV
   Brabham D. C, 2008, Convergence, V14, P75, DOI DOI 10.1177/1354856507084420
   Brabham D.C., 2009, Crowdsourcing public participation in transit planning: preliminary results from the next stop design case
   Breaux TD, 2014, INT REQUIR ENG CONF, P163, DOI 10.1109/RE.2014.6912258
   Bruce B., 2015, P 17 ANN GEN EV COMP
   Bruch M., 2012, IDE 2 0 LEVERAGING W
   Bruch M., 2010, P FSESDP WORKSHOP FU, P53
   Burguera I., 2011, P 1 ACM WORKSH SEC P, P15, DOI DOI 10.1145/2046614.2046619
   Challiol Cecilia, 2013, Current Trends in Web Engineering. ICWE 2013 International Workshops ComposableWeb, QWE, MDWE, DMSSW, EMotions, CSE, SSN, and PhD Symposium. Revised Selected Papers: LNCS 8295, P223, DOI 10.1007/978-3-319-04244-2_21
   Chatfield AT, 2014, P ANN HICSS, P2231, DOI 10.1109/HICSS.2014.281
   Chen C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P456, DOI 10.1145/2591062.2591128
   Chen FX, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P320, DOI 10.1145/2786805.2786819
   Chen KT, 2010, IEEE NETWORK, V24, P28, DOI 10.1109/MNET.2010.5430141
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Cheng B.H.C., 2008, SOFTWARE ENGINERRING
   Chilana P.K., 2013, P 31 ANN CHI C HUM F
   Chilana P.K., 2013, SUPPORTING USERS SOF
   Chilana Parmit K., 2012, P SIGCHI C HUM FACT, P1549, DOI [10.1145/2207676.2208620, DOI 10.1145/2207676.2208620]
   Cleland-Huang J, 2012, PROC INT CONF SOFTW, P1329, DOI 10.1109/ICSE.2012.6227087
   Cochran RA, 2015, ACM SIGPLAN NOTICES, V50, P677, DOI [10.1145/2676726.2676973, 10.1145/2775051.2676973]
   Cook C., 1994, CROSSTALK, V7, P26
   Cooper S, 2010, NATURE, V466, P756, DOI 10.1038/nature09304
   Cox LP, 2011, IEEE SECUR PRIV, V9, P74, DOI 10.1109/MSP.2011.145
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Dibbern J., 2004, Data Base for Advances in Information Systems, V35, P6, DOI 10.1145/1035233.1035236
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Ebner W., 2008, HAWAII INT C SYSTEM, P417
   Ernst M.D., 2012, TECHNICAL REPORT
   Esselink B., 2000, PRACTICAL GUIDE LOCA, V4
   Estellés-Arolas E, 2012, J INF SCI, V38, P189, DOI 10.1177/0165551512437638
   Exton Chris, 2009, Localisation Focus, V8, P81
   Farrell J, 1996, J ECON PERSPECT, V10, P103, DOI 10.1257/jep.10.3.103
   Fast E, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2491, DOI 10.1145/2556288.2556998
   Fitzgerald B, 2015, LECT NOTES COMPUT SC, V8939, P58, DOI 10.1007/978-3-662-46078-8_6
   Fried D., 2010, Crowdsourcing in the Software Development Industry
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Fry ZP, 2010, PROC IEEE INT CONF S
   Gardlo B, 2014, IEEE ICC, P1070, DOI 10.1109/ICC.2014.6883463
   Goldau M., 2011, 2011 IEEE Symposium on Biological Data Visualization, P23, DOI 10.1109/BioVis.2011.6094044
   Goldman Max., 2012, Software development with real-time collaborative editing
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Greenwood P, 2012, PROC INT CONF SOFTW, P1321, DOI 10.1109/ICSE.2012.6227089
   Gritti A., 2012, CROWD OUTSOURCING SO
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P1, DOI 10.1145/2593929.2600116
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P247
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   He HF, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/283740
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hosseini M., 2013, P 20 INT WORK C REQ
   Hosseini M., 2015, P 9 INT C RES CHALL
   Hossfeld T, 2014, COMPUTER, V47, P98, DOI 10.1109/MC.2014.245
   Hossfeld T, 2014, IEEE T MULTIMEDIA, V16, P541, DOI 10.1109/TMM.2013.2291663
   Howe J, 2006, WIRED, V14, P1, DOI DOI 10.1086/599595
   Howe Jeff., 2006, Crowdsourcing: A Definition
   Hu ZH, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P446, DOI 10.1109/SOSE.2014.79
   Huang YX, 2013, PR SOUTH BIOMED ENG, P17, DOI 10.1109/SBEC.2013.17
   Hughes J. M., 2010, US Patent, Patent No. [7778866 B2, 7778866]
   Huhns M.N., 2013, DAGSTUHL REPORTS, V3, P34, DOI [10.4230/DagRep.3.9.34, DOI 10.4230/DAGREP.3.9.34]
   Ipeirotis P. G., 2010, P ACM SIGKDD WORKSHO, P64, DOI 10.1145/1837885.1837906
   Ismail Q, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P467, DOI 10.1145/2702123.2702370
   James S., 2004, WISDOM CROWDS
   Janice Warner., 2011, P 12 ANN INT DIGITAL, P177, DOI DOI 10.1145/2037556.2037582
   Jayakanthan R., 2011, P 2 INT WORKSH UB CR, P25
   Jayakanthan R., 2011, P 11 INT C WEB ENG, P177
   Johnson R., 2014, NAT CHEM, V6, P87, DOI [10.1038/nchem.1867., DOI 10.1038/NCHEM.1867]
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kallenbach M., 2011, HELPMEOUT CROWDSOURC
   Kazman R, 2010, FSE SDP WORKSH FUT S, P187, DOI [10.1145/1882362.1882402, DOI 10.1145/1882362.1882402]
   Kazman R, 2009, COMMUN ACM, V52, P76, DOI 10.1145/1538788.1538808
   Khatib F, 2011, NAT STRUCT MOL BIOL, V18, P1175, DOI 10.1038/nsmb.2119
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Lakhani K. R., 2010, Topcoder (a): developing software through crowdsourcing
   Lakhani KR, 2013, NAT BIOTECHNOL, V31, P108, DOI 10.1038/nbt.2495
   Lakhotia K, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P95, DOI 10.1109/TAICPART.2009.15
   Langdon W.B., 2015, P 17 ANN GEN EV COMP
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Lasecki WS, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1925, DOI 10.1145/2702123.2702565
   LaToza T.D., 2015, P 37 ACM IEEE INT C
   LaToza T.D., 2015, P 37 INT C SOFTW ENG
   Latoza T.D., 2014, P 1 INT WORKSH CONT, P2
   LaToza TD, 2013, CROWDCONF
   LaToza TD, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P85, DOI 10.1109/CHASE.2013.6614737
   LaToza ThomasD., 2014, Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST '14, P43, DOI DOI 10.1145/2642918.2647349
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Leimeister JM, 2009, J MANAGE INFORM SYST, V26, P197, DOI 10.2753/MIS0742-1222260108
   Leone S., 2011, INFORM COMPONENTS BA
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li K, 2013, P INT COMP SOFTW APP, P812, DOI 10.1109/COMPSAC.2013.133
   Li W, 2015, PROGR IS, P1, DOI 10.1007/978-3-662-47011-4
   Li W., 2012, P 49 ANN DES AUT C, P2
   Liang C.-J.M., 2014, P 20 ANN INT C MOB C
   Lim S L., 2010, Social Networks and Collaborative Filtering for Large-Scale Requirements Elicitation
   Lim SL, 2013, 2013 8TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P13, DOI 10.1109/SYSoSE.2013.6575235
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Lim SL, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1022, DOI 10.1145/1985793.1985983
   Lim Soo Ling, 2010, P 2010 INT C COMP IN, P295, DOI DOI 10.1145/1806799.1806844
   Lin JL, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P501
   Lin Jialiu, 2013, Technical Report
   Liu Di, 2012, Proceedings of the American Society for Information Science and Technology, V49, P1, DOI DOI 10.1002/MEET.14504901100
   Long TT, 2014, ARTIF INTELL, V214, P89, DOI 10.1016/j.artint.2014.04.005
   Lu Xiao, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P11, DOI 10.1109/ASWEC.2014.11
   Lydon M, 2012, TOPCODER OVERVIEW
   Maalej W., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P864, DOI 10.1109/DASC.2011.146
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Manzoor J., 2011, CROWDSOURCING FRAMEW
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   Mao K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1205, DOI 10.1109/ICSE.2013.6606679
   Meier Florian, 2013, Design, User Experience, and Usability. Web, Mobile, and Product Design. Second International Conference, DUXU 2013 Held as Part of HCI International 2013. Proceedings. LNCS 8015, P248, DOI 10.1007/978-3-642-39253-5_27
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Mijnhardt A., 2013, THESIS
   Minder P., 2011, P 3 HUM COMP WORKSH, P103
   Minder P., 2012, P 4 INT C SOC INF
   Misra A, 2014, TRANSPORT RES REC, P1, DOI 10.3141/2414-01
   Mooty Mathew, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P15, DOI 10.1109/VLHCC.2010.12
   Morisaki S., 2011, P JOINT C 21 INT WOR, P32
   Muganda N., 2012, SSRN ELECT J
   Mujumdar Dhawal, 2011, CHI 11 EXTENDED ABST, P1525, DOI [10.1145/1979742, DOI 10.1145/1979742]
   Muller CL, 2015, INT J CLIMATOL, V35, P3185, DOI 10.1002/joc.4210
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Nag S., 2012, Collaborative competition for crowdsourcing spaceflight software and STEM education using SPHERES Zero Robotics
   Nag Sreeja, 2012, AER C 2012 IEEE, P1
   Nascimento P., 2012, 2012 Proceedings of IEEE 16th International Conference on Computer Supported Cooperative Work in Design (CSCWD 2012), P387, DOI 10.1109/CSCWD.2012.6221847
   Nayebi M., 2014, P 7 INT WORKSH COOP, P64
   Nebeling Michael, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P494, DOI 10.1007/978-3-642-31753-8_52
   Nebeling M, 2012, P 12 INT C WEB ENG, P1
   Nebeling M., 2011, P 11 INT C WEB ENG, P167
   Nebeling M, 2013, ACM SIGCHI S ENG INT, P23
   Nebeling M, 2011, LECT NOTES COMPUT SC, V6757, P243, DOI 10.1007/978-3-642-22233-7_17
   Nebeling Michael, 2013, P 5 ACM SIGCHI S ENG
   Norman TC, 2011, SCI TRANSL MED, V3, DOI 10.1126/scitranslmed.3002678
   Olson D. L., 2012, SERVICE BUSINESS, V7, P499
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Papamartzivanos D., 2014, P 18 PANH C INF
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Pawlik A, 2015, COMPUT SCI ENG, V17, P28, DOI 10.1109/MCSE.2014.93
   Peng X, 2014, IEEE SOFTWARE, V31, P30, DOI 10.1109/MS.2014.31
   Pereira Graziela, 2014, P 1 INT WORKSH CROWD, P7
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Petke J., 2014, P 17 EUR C GEN PROGR, P132
   Phair D., 2012, OPEN CROWDSOURCING L
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1209, DOI 10.1109/ICSE.2013.6606680
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Ponzanelli L, 2012, EXPLOITING CROWD KNO
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P577, DOI 10.1109/ICSME.2014.99
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Prikladnicki Rafael, 2014, INT WORKSH CROWD SOU, P1
   Ramakrishnan S., 2014, P 7 INT WORKSH COOP, P115
   Saengkhattiya M., 2012, QUALITY CROWDSOURCIN
   Saxe J, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON MALICIOUS AND UNWANTED SOFTWARE: THE AMERICAS (MALWARE), P68, DOI 10.1109/MALWARE.2014.6999417
   Saxton GD, 2013, INFORM SYST MANAGE, V30, P2, DOI 10.1080/10580530.2013.739883
   Schiller T.W., 2014, REDUCING USABILITY B
   Schiller TW, 2012, ACM SIGPLAN NOTICES, V47, P95, DOI 10.1145/2398857.2384624
   Schneider C, 2011, P 20 INT C INF SYST
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P37, DOI 10.1109/RE.2010.15
   Shah N., 2009, P 3 INT C THEOR PRAC, P253
   Sharifi M, 2011, IEEE SYS MAN CYBERN, P1346, DOI 10.1109/ICSMC.2011.6083845
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Sherief Nada, 2014, P 18 INT C EV ASS SO, P1, DOI [10. 1145/2601248.2601300, DOI 10.1145/2601248.2601300]
   Simon H. A, 1960, The new science of management decision, DOI 10.1037/13978-000
   Snijders R., 2015, CROWD CTR REQUIREMEN
   Snijders R., 2014, P 2 INT WORKSH CROWD
   Sobel Dava., 1995, LONGITUDE TRUE STORY
   Soo Ling Lim, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P239, DOI 10.1145/1810295.1810340
   Starov O., 2013, Cloud platform for research crowdsourcing in mobile testing
   Stol K., 2014, RES PROTOCOL CASE ST
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Stol Klass-Jan., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, P7, DOI DOI 10.1145/2593728.2593731
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Stolee KT, 2013, IEEE T SOFTWARE ENG, V39, P1654, DOI 10.1109/TSE.2013.42
   Stolee Kathryn T, 2010, P 2010 ACM IEEE INT, P1
   Stork M, 2010, INT CONF CIRC SYST S, P359
   Tajedin H., 2013, P 2013 ANN C COMP PE, P173
   Tajedin H, 2014, P ANN HICSS, P1396, DOI 10.1109/HICSS.2014.181
   Teinum A., 2013, User testing tool: towards a tool for crowdsource-enabled accessibility evaluation of websites
   Tillmann N., 2011, P 10 SIGPLAN S NEW I, P49, DOI DOI 10.1145/2048237.2048245
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tsai WT, 2014, IEEE INTERNET COMPUT, V18, P78, DOI 10.1109/MIC.2014.46
   Tung YH, 2013, J SYST SOFTWARE, V86, P2143, DOI 10.1016/j.jss.2013.03.079
   Varshney LR, 2012, ANN ALLERTON CONF, P996, DOI 10.1109/Allerton.2012.6483327
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Visconti M, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P179, DOI 10.1109/SCCC.2002.1173192
   Vliegendhart R., 2012, P ACM MULT 2012 WORK, P21, DOI DOI 10.1145/2390803.2390813
   Vukovic M., 2010, P 10 INT C WEB ENG
   Wang H, 2014, INT CONF GLOBAL SOFT, P65, DOI 10.1109/ICGSE.2014.26
   Watro R., 2014, 8 INT C EM SEC INF S
   Watson Christopher, 2012, Advances in Web-Based Learning - ICWL 2012. Proceedings of the 11th International Conference, P228, DOI 10.1007/978-3-642-33642-3_25
   Wenjun Wu, 2013, International Journal of Creative Computing, V1, P57, DOI 10.1504/IJCRC.2013.056925
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wightman D., 2013, SEARCH INTERFACES IN
   Wolfson S.M., 2011, P AM SOC INFORM SCI, V48, P1, DOI DOI 10.1002/MEET.2011
   Wu E, 2015, P 17 ANN GEN EV COMP
   Wu WJ, 2013, FRONT COMPUT SCI-CHI, V7, P694, DOI 10.1007/s11704-013-2320-2
   Xie T., 2015, P 2 INT WORKSH CROWD
   Xie T., 2002, KEYNOTE PAPER, P1
   Xu X., 2014, ADV MAT RES, P4441
   Xu X.L., 2014, ADV MAT RES, V989-994, P4708
   Xue H., 2013, USING REDUNDANCY IMP
   Yan M, 2014, ABSTR APPL ANAL, DOI 10.1155/2014/935923
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zogaj S., 2013, P 21 EUR C INF SYST
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 256
TC 176
Z9 194
U1 3
U2 74
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2017
VL 126
BP 57
EP 84
DI 10.1016/j.jss.2016.09.015
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM3PB
UT WOS:000395226000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fernández-Sánchez, C
   Garbajosa, J
   Yagüe, A
   Perez, J
AF Fernandez-Sanchez, Carlos
   Garbajosa, Juan
   Yague, Agustin
   Perez, Jennifer
TI Identification and analysis of the elements required to manage technical
   debt by means of a systematic mapping study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Technical debt; Technical debt management; Systematic mapping; Decision
   making; Basic decision-making factors; Cost estimation techniques;
   Practices and techniques for decision-making; Stakeholders' points of
   view; Engineering Engineering management; Business-organizational
   management; Framework
ID SOFTWARE-DEVELOPMENT
AB Technical debt, a metaphor for the long-term consequences of weak software development, must be managed to keep it under control. The main goal of this article is to identify and analyze the elements required to manage technical debt. The research method used to identify the elements is a systematic mapping, including a synthesis step to synthesize the elements definitions. Our perspective differs from previous literature reviews because it focused on the elements required to manage technical debt and not on the phenomenon of technical debt or the activities used in performing technical debt management. Additionally, the rigor and relevance for industry of the current techniques used to manage technical debt are studied. The elements were classified into three groups (basic decision-making factors, cost estimation techniques, practices and techniques for decision-making) and mapped according three stakeholders' points of view (engineering, engineering management, and business-organizational management). The definitions, classification, and analysis of the elements provide a framework that can be deployed to help in the development of models that are adapted to the specific stakeholders' interests to assist the decision-making required in technical debt management and to assess existing models and methods. The analysis indicated that technical debt management is context dependent. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Fernandez-Sanchez, Carlos; Garbajosa, Juan; Yague, Agustin; Perez, Jennifer] Tech Univ Madrid UPM, CITSEM, Ctra Valencia Km7, E-28031 Madrid, Spain.
   [Garbajosa, Juan; Yague, Agustin; Perez, Jennifer] Tech Univ Madrid UPM, ETSISI, Ctra Valencia Km7, E-28031 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Centro de Investigacion en
   Tecnologias Software Sistemas Multimedia para la Sostenibilidad
   (CITSEM); Universidad Politecnica de Madrid
RP Fernández-Sánchez, C (corresponding author), Tech Univ Madrid UPM, CITSEM, Ctra Valencia Km7, E-28031 Madrid, Spain.
EM carlos.fernandez@upm.es; jgs@etsisi.upm.es; agustin.yague@upm.es;
   jenifer.perez@upm.es
RI PEREZ, JENIFER/M-2506-2014; Yagüe, Agustin/T-9400-2019; Garbajosa,
   Juan/B-5818-2012
OI PEREZ, JENIFER/0000-0003-3192-7995; Yagüe, Agustin/0000-0002-4761-0901;
   Garbajosa, Juan/0000-0003-0161-3485; FERNANDEZ SANCHEZ,
   CARLOS/0000-0003-2885-5169
FU MESC (Spain) [DPI2013-47450-C2-2-R]
FX This work was partially sponsored by MESC DPI2013-47450-C2-2-R (Spain).
CR Akbarinasaji S., 2015, MEASURING DEFECT DEB, V1469, P15
   Alves N., 2014, INT WORKSH MAN TECHN
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Alzaghoul E., 2013, INT WORKSH MAN TECHN
   Alzaghoul E., 2014, ASWEC 2014
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], EASE
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Bohnet J., 2011, P 2 WORKSHOP MANAGIN
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brondum J., 2012, INT WORKSH MAN TECHN
   Brown N., 2010, FSE SDP WORKSH
   Buschmann F, 2011, IEEE SOFTWARE, V28, P29, DOI 10.1109/MS.2011.150
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Codabux Z., 2013, INT WORKSH MAN TECHN
   Codabux Z., 2014, SERP
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   de Groot J., 2012, INT WORKSH MAN TECHN
   Eliasson U, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P33, DOI 10.1109/MTD.2015.7332622
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Falessi D., 2015, P 2015 EUR C SOFTW A
   Falessi D., 2013, INT WORKSH MAN TECHN
   Falessi D, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P41, DOI 10.1109/MTD.2015.7332623
   Falessi D, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P1, DOI 10.1109/MTD.2015.7332618
   Fernandez-Sanchez C., 2014, HICSS
   Fernandez-Sanchez C., 2015, SAM 2015
   Fernández-Sánchez C, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P69, DOI 10.1109/MTD.2015.7332628
   Griffith I., 2014, WSC 2014
   Guo Y., 2011, ICSM
   Guo Y., 2011, INT WORKSH MAN TECHN
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Ho J., 2014, MTD WORKSH
   Holvitie J., 2015, Int J Softw Eng its Appl, V9, P109, DOI DOI 10.14257/IJSEIA.2015.9.6.12
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Izurieta C., 2015, QOSA 2015
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li Z., 2014, Economics-Driven Software Architecture, P183
   Li Z., 2014, QOSA 2014
   Li ZY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P65, DOI 10.1109/WICSA.2015.19
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martini A., 2014, SEAA 2014
   Mayr A., 2014, QSIC 2014
   Mendes T., 2015, VISMINERTD OPEN SOUR, V2, P457
   Naedele M, 2015, J SYST SOFTWARE, V101, P59, DOI 10.1016/j.jss.2014.11.015
   Naedele M, 2014, COMMUN ACM, V57, P33, DOI 10.1145/2629458
   Nord R., 2012, WICSA ECSA
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nugroho A., 2011, INT WORKSH MAN TECHN
   Oliveira F, 2015, 2015 AGILE CONFERENCE, P50, DOI 10.1109/Agile.2015.7
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Peters L., 2014, INT WORKSH MAN TECHN
   Posnakides D, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P1, DOI 10.1109/ISCC.2015.7405445
   Power K., 2013, INT WORKSH MAN TECHN
   Ramasubbu N., 2013, INT WORKSH MAN TECHN
   Ramasubbu N, 2015, IEEE SOFTWARE, V32, P22, DOI 10.1109/MS.2015.45
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P758, DOI 10.1109/TSE.2014.2327027
   Reimanis D., 2014, ESEM 2014
   Schmid K., 2013, QOSA
   Schmid K., 2013, MTD WORKSH
   Schwanke R., 2013, ICSE
   Seaman C., 2012, MTD WORKSH
   Shull F., 2013, PERSPECTIVES FUTURE, P179, DOI DOI 10.1007/978-3-642-37395-4_12
   Siebra CA, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P92, DOI 10.1109/ISSREW.2014.59
   Singh V., 2014, INT WORKSH MAN TECHN
   Skourletopoulos G, 2014, IEEE INT WORKSH COMP, P36, DOI 10.1109/CAMAD.2014.7033201
   Sneed H., 2014, LECT NOTES BUSINESS
   Strauss A., 1990, BASICS QUALITATIVE R, P15
   Suomalainen T, 2011, J SYST SOFTWARE, V84, P958, DOI 10.1016/j.jss.2011.01.031
   Tockey S., 2014, EC DRIVEN SOFTWARE A, P37
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tricco AC, 2008, J CLIN EPIDEMIOL, V61, P422, DOI 10.1016/j.jclinepi.2007.10.017
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yli-Huumo J., 2014, LECT NOTES COMPUTER
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zazworka N., 2011, MTD WORKSH
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 80
TC 34
Z9 36
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2017
VL 124
BP 22
EP 38
DI 10.1016/j.jss.2016.10.018
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EG1XH
UT WOS:000390827200002
DA 2024-07-18
ER

PT J
AU Yang, HJ
   Chen, F
   Aliyu, S
AF Yang, Hongji
   Chen, Feng
   Aliyu, Suleiman
TI Modern software cybernetics: New trends
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software cybernetics; Control engineering; Software engineering;
   Computer science; Artificial intelligence
ID SUPERVISORY CONTROL; ENABLED CONTROL; DISCRETE; METRICS
AB Software cybernetics research is to apply a variety of techniques from cybernetics research to software engineering research. For more than fifteen years since 2001, there has been a dramatic increase in work relating to software cybernetics. From cybernetics viewpoint, the work is mainly on the first-order level, namely, the software under observation and control. Beyond the first-order cybernetics, the software, developers/users, and running environments influence each other and thus create feedback to form more complicated systems. We classify software cybernetics as Software Cybernetics I based on the first-order cybernetics, and as Software Cybernetics II based on the higher order cybernetics. This paper provides a review of the literature on software cybernetics, particularly focusing on the transition from Software Cybernetics I to Software Cybernetics II. The results of the survey indicate that some new research areas such as Internet of Things, big data, cloud computing, cyber-physical systems, and even creative computing are related to Software Cybernetics II. The paper identifies the relationships between the techniques of Software Cybernetics II applied and the new research areas to which they have been applied, formulates research problems and challenges of software cybernetics with the application of principles of Phase II of software cybernetics; identifies and highlights new research trends of software cybernetic for further research. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Yang, Hongji] Bath Spa Univ, Ctr Creat Comp, Creat Comp, Bath, Avon, England.
   [Chen, Feng; Aliyu, Suleiman] De Montfort Univ, Sch Comp Sci & Informat, Leicester LE1 9BH, Leics, England.
C3 Bath Spa University; De Montfort University
RP Yang, HJ (corresponding author), Bath Spa Univ, Ctr Creat Comp, Creat Comp, Bath, Avon, England.
EM hongji.yang@gmail.com
RI Yang, Hongji/AAJ-4079-2020
CR Abuseta Y, 2015, INT CONF SOFTW ENG, P70, DOI 10.1109/ICSESS.2015.7339008
   Adami D, 2015, IEEE ICC, P6074, DOI 10.1109/ICC.2015.7249290
   Ahuja K, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON ISSUES AND CHALLENGES IN INTELLIGENT COMPUTING TECHNIQUES (ICICT), P471, DOI 10.1109/ICICICT.2014.6781328
   Alvares F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P187, DOI 10.1109/ICAC.2015.31
   [Anonymous], 2007, WILEY ENCY COMPUTER, DOI DOI 10.1002/9780470050118.ECSE707
   [Anonymous], 2008, CHINESE PEOPLES LIBE, DOI DOI 10.1007/978-0-387-77743-6.21
   [Anonymous], J SYST SOFTW
   [Anonymous], IEEE C REL MAINT S R
   [Anonymous], J SYST SOFTW
   [Anonymous], ARXIV13110257 CORR
   [Anonymous], 33 IEEE AIAA DIG AV
   [Anonymous], SOCIOCYBERNETICS
   [Anonymous], SOFTWARE ENG KEY ENA
   [Anonymous], 23 IEEE INT C COMP C
   [Anonymous], 2014, INT C REC ADV INN EN
   [Anonymous], 2013, P INT C C COMPUTER S
   [Anonymous], INT C COMP INT SOFTW
   [Anonymous], COMMUNICATION
   Baeten J, 2015, SCI COMPUT PROGRAM, V97, P17, DOI 10.1016/j.scico.2013.11.016
   Bai XY, 2007, P INT COMP SOFTW APP, P233
   Bay JS, 2003, IEEE CONTR SYST MAG, V23, P19, DOI 10.1109/MCS.2003.1172826
   Belli F, 2006, J SYST SOFTWARE, V79, P1483, DOI 10.1016/j.jss.2006.03.037
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Buyya R, 2012, PROC INT CONF EMERG, P3, DOI 10.1109/EAIT.2012.6407847
   Cai KY, 2008, J SYST SOFTWARE, V81, P1406, DOI 10.1016/j.jss.2007.11.721
   Cai KY, 2007, J SYST SOFTWARE, V80, P1328, DOI 10.1016/j.jss.2006.11.008
   Cai KY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P198
   Cai KY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P77
   Cai KY, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/HASE.2002.1173129
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   Cangussu JW, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P232, DOI 10.1109/ISSRE.2001.989477
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   Chang Liu, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P473, DOI 10.1109/COMPSAC.2009.178
   Chang V, 2017, J SYST SOFTWARE, V124, P195, DOI 10.1016/j.jss.2015.12.031
   Chen JG, 2009, INT C INTEL HUM MACH, P274, DOI 10.1109/IHMSC.2009.192
   Choi TM, 2017, IEEE T CYBERNETICS, V47, P81, DOI 10.1109/TCYB.2015.2507599
   Co Michele, 2009, 2009 2nd International Symposium on Resillient Control Systems (ISRCS 2009), P19, DOI 10.1109/ISRCS.2009.5251353
   Cotroneo D., 2011, Proceedings of the 2011 IEEE Third International Workshop on Software Aging and Rejuvenation (WoSAR 2011), P1, DOI 10.1109/WoSAR.2011.15
   Coutinho EF, 2015, LANOMS 2015 8TH LATIN AMERICAN NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P111, DOI 10.1109/LANOMS.2015.7332681
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   Ding ZH, 2017, J SYST SOFTWARE, V124, P247, DOI 10.1016/j.jss.2016.03.012
   Dobson S, 2007, IEEE INT C ENG COMP, P229, DOI 10.1109/ICECCS.2007.6
   Donaires OS, 2010, SYST RES BEHAV SCI, V27, P667, DOI 10.1002/sres.1014
   Fernandes J M., 2007, Proceedings of the Sixth International Workshop on Scenarios and State Machines, P2, DOI [10.1109/SCESM.2007.1, DOI 10.1109/SCESM.2007.1]
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Forsyth H., 2011, Proceedings of the 2011 4th International Conference on Developments in e-systems Engineering (DeSE 2011), P370, DOI 10.1109/DeSE.2011.109
   Gang L., 2009, International Conference on E-Business and Information System Security (EBISS '09), P1
   Gaudin B, 2011, IEEE ANNU SOFTW ENG, P97, DOI 10.1109/SEW.2011.20
   Girard A, 2007, IEEE T AUTOMAT CONTR, V52, P782, DOI 10.1109/TAC.2007.895849
   Hai Hu, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P853, DOI 10.1109/COMPSAC.2008.186
   Harman M., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P1, DOI 10.1109/RAISE.2012.6227961
   Harman M., 2006, 10th European Conference on Software Maintenance and Reengineering
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2013, J SYST SOFTWARE, V86, P2225, DOI 10.1016/j.jss.2012.10.027
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Heck BS, 2001, P AMER CONTR CONF, P3433, DOI 10.1109/ACC.2001.946161
   Heylighen F., 2001, ENCY PHYS SCI TECHNO
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Ionescu D., 2011, Proceedings of the 2011 3rd IEEE International Symposium on Logistics and Industrial Informatics (LINDI 2011), DOI 10.1109/LINDI.2011.6031133
   Julius AA, 2009, IEEE T AUTOMAT CONTR, V54, P1193, DOI 10.1109/TAC.2009.2019791
   Kandjani H., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P169, DOI 10.1109/ICGSE.2012.19
   Kenett R. S., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P43, DOI 10.1109/COMPSACW.2011.18
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   Konstanteli K, 2014, IEEE T CLOUD COMPUT, V2, P348, DOI 10.1109/TCC.2014.2325034
   Kundu J, 2014, PROC INT CONF EMERG, P127, DOI 10.1109/EAIT.2014.29
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Liangdong Wang, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P158, DOI 10.1109/COMPSACW.2012.38
   Liao HW, 2013, IEEE T CONTR SYST T, V21, P2067, DOI 10.1109/TCST.2012.2226034
   Lin P, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P88, DOI 10.1109/ASWEC.2005.19
   Liu C, 2012, ASIA PAC SOFWR ENG, P440, DOI 10.1109/APSEC.2012.77
   Liu HX, 2017, J SYST SOFTWARE, V124, P212, DOI 10.1016/j.jss.2016.01.031
   Liu J, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P1115, DOI 10.1109/CLOUD.2015.164
   Liu L, 2007, P INT COMP SOFTW APP, P229
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Machida F., 2010, PROC IEEE 2 INT WORK, P1, DOI DOI 10.1109/WOSAR.2010.5722098
   Mayer P, 2014, 2013 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SELF-ADAPTATION AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P90, DOI 10.1109/SASOW.2013.16
   Miller SD, 2006, J SYST SOFTWARE, V79, P1486, DOI 10.1016/j.jss.2006.03.033
   Nakano T, 2011, IEEE T SYST MAN CY C, V41, P630, DOI 10.1109/TSMCC.2010.2090141
   Novikov D., 2016, CYBERNETICS FUTURE
   Gutierrez-Garcia JO, 2013, APPL INTELL, V38, P436, DOI 10.1007/s10489-012-0380-x
   Okamura H., 2011, 2011 Tenth International Symposium on Autonomous Decentralized Systems (ISADS), P647, DOI 10.1109/ISADS.2011.92
   Park J, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P41, DOI 10.1109/COMPSACW.2013.21
   Park JS, 2015, 2015 IEEE/ACM 4TH SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P33, DOI 10.1109/GTSE.2015.12
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Perera C, 2016, KNOWL-BASED SYST, V109, P122, DOI 10.1016/j.knosys.2016.06.030
   Phoha V, 2005, QUANTITATIVE MEASURE FOR DISCRETE EVENT SUPERVISORY CONTROL, P207, DOI 10.1007/0-387-23903-0_8
   Ponisio L, 2012, IET SOFTW, V6, P438, DOI 10.1049/iet-sen.2011.0199
   Qiliang Yang, 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P13, DOI 10.1109/COMPSACW.2011.13
   Rammig FJ, 2014, BRAZ SYM COMPUT SYST, P37, DOI 10.1109/SBESC.2014.15
   Ravindran K., 2013, International Conference on the Network of the Future (NOF), P1
   Ross Ashby W., 1957, An Introduction to Cybernetics
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shankar PR, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND CYBERNETICS (CYBERNETICSCOM), P83, DOI 10.1109/CyberneticsCom.2012.6381622
   Sim KM, 2015, IEEE T CLOUD COMPUT, V3, P358, DOI 10.1109/TCC.2015.2389839
   Sim KM, 2012, IEEE T SERV COMPUT, V5, P564, DOI 10.1109/TSC.2011.52
   Singh S, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2843889
   Solomon B., 2007, Proceedings of the 2007 InternationalWorkshop on Software Engineering for Adaptive and Self-Managing Systems, P10
   Souza VES, 2012, PROC INT CONF SOFTW, P1635, DOI 10.1109/ICSE.2012.6227218
   Tilei Gao, 2011, Proceedings of the 2011 International Conference on Information Technology, Computer Engineering and Management Sciences (ICM 2011), P171, DOI 10.1109/ICM.2011.183
   Vinnakota T, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND CYBERNETICS (CYBERNETICSCOM), P85, DOI 10.1109/CyberneticsCom.2013.6865787
   Von Foerster H., 1979, COMMUNICATION CONTRO, P5
   Wang P, 2006, INT CONF QUAL SOFTW, P159
   Wang XY, 2012, CHIN CONT DECIS CONF, P775, DOI 10.1109/CCDC.2012.6244119
   Wiener N., 1948, Cybernetics or Control and Communication in the Animal and the Machine
   Xin Peng, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P104, DOI 10.1109/RE.2010.22
   Xu H, 2006, J SYST SOFTWARE, V79, P1504, DOI 10.1016/j.jss.2006.03.050
   Yang HJ, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P19, DOI 10.1109/COMPSACW.2014.7
   Yang Y, 2005, IEEE INT CON AUTO SC, P410
   Yau SS, 2007, INT WKSHP FUT TR DIS, P149, DOI 10.1109/FTDCS.2007.7
   Ye F, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P87, DOI 10.1109/PRDC.2009.22
   Zhang L, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P31, DOI 10.1109/COMPSACW.2014.9
   Zhang LC, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION (ICIA), P548, DOI 10.1109/ICInfA.2014.6932715
   Zhao XiuHai, 2014, Forest Ecosystems, V1, P8, DOI 10.1186/2197-5620-1-8
NR 114
TC 14
Z9 16
U1 3
U2 53
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2017
VL 124
BP 169
EP 186
DI 10.1016/j.jss.2016.08.095
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EG1XH
UT WOS:000390827200010
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Lin, C
   Wu, YK
   Liu, ZC
   Obaidat, MS
   Yu, CW
   Wu, GW
AF Lin, Chi
   Wu, Youkun
   Liu, Zhicheng
   Obaidat, Mohammad S.
   Yu, Chang Wu
   Wu, Guowei
TI GTCharge: A game theoretical collaborative charging scheme for wireless
   rechargeable sensor networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Wireless rechargeable sensor networks; Game theory; Collaborative
   charging
ID ENERGY-TRANSFER; POWER TRANSFER
AB Collaborative charging schemes are indeed helpful for energy replenishment. However, classic and traditional collaborative charging schemes are still suffering from a series of severe problems, which are almost neglected. The lack of homogeneity and dynamic charging decisions on collaborative charging schemes in Wireless Rechargeable Sensor Networks (WRSN) deteriorate the charging efficiency. To enhance charging performance, especially in terms of charging efficiency, in this paper, a game theoretical collaborative charging scheme, namely GTCharge is devised. The charging process is converted into a collaborative game taken between wireless charging vehicles (WCVs). We investigate the functionalities of contribution degree, charging priority and profits. Then GTCharge is demonstrated in detail, in which each WCV seeks for the maximum profit when fulfilling charging tasks. The conditions including all WCVs' charging strategies are proven to reach a Nash Equilibrium point. Finally, extensive simulations are conducted to show the advantages of the proposed scheme. Simulation results demonstrate the merits of the proposed scheme in terms of charging efficiency. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Lin, Chi; Wu, Youkun; Liu, Zhicheng; Wu, Guowei] Dalian Univ Technol, Sch Software Technol, Rd 8, Dalian 116620, Peoples R China.
   [Lin, Chi; Wu, Youkun; Liu, Zhicheng; Wu, Guowei] Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116621, Peoples R China.
   [Obaidat, Mohammad S.] Fordham Univ, Comp & Informat Sci, Bronx, NY 10458 USA.
   [Yu, Chang Wu] Chung Hua Univ, Dept Comp Sci & Informat Engn, Hsinchu, Taiwan.
C3 Dalian University of Technology; Fordham University; Chung Hua
   University
RP Lin, C (corresponding author), Dalian Univ Technol, Sch Software Technol, Rd 8, Dalian 116620, Peoples R China.; Lin, C (corresponding author), Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116621, Peoples R China.
EM c.lin@dlut.edu.cn; msobaidat@gmail.com
RI Yu, Chang Wu/A-6334-2010; Obaidat, Mohammad S./KBC-2747-2024
OI Yu, Chang Wu/0000-0001-7783-1513; Obaidat, Mohammad
   S./0000-0002-1569-9657
FU National Natural Science Foundation of China [61402078]; Fundamental
   Research Funds for the Central Universities [DUT16RC(4)61]; National
   Undergraduate Training Programs for Innovation and Entrepreneurship
FX We would like to show our greatest respects to Adelina Madhja from
   Computer Technology Institute and Press "Diophantus" (CTI) & University
   of Patras, Greece for her good contributions and suggestions. This
   research is sponsored in part by the National Natural Science Foundation
   of China (No.61402078). This research is also sponsored in part
   supported by the Fundamental Research Funds for the Central Universities
   (DUT16RC(4)61), it is also supported by National Undergraduate Training
   Programs for Innovation and Entrepreneurship.
CR [Anonymous], 2011, Network Protocols (ICNP), 2011 19th IEEE International Conference on
   [Anonymous], 2012, P 15 ACM INT C MOD A
   Cheng P, 2013, IEEE T WIREL COMMUN, V12, P3072, DOI 10.1109/TWC.2013.050313.121691
   Dai HP, 2013, IEEE INT CONF MOB, P10, DOI 10.1109/MASS.2013.60
   Dai HP, 2013, 2013 IEEE WIRELESS COMMUNICATIONS AND NETWORKING CONFERENCE (WCNC), P986
   Dai HN, 2013, INT J DISTRIB SENS N, DOI 10.1155/2013/760834
   Fachang Jiang, 2011, 2011 IEEE 8th International Conference on Mobile Ad-Hoc and Sensor Systems, P69, DOI 10.1109/MASS.2011.19
   Fu LK, 2016, IEEE T VEH TECHNOL, V65, P278, DOI 10.1109/TVT.2015.2391119
   Fu LK, 2013, IEEE INFOCOM SER, P2922
   He L, 2015, IEEE T MOBILE COMPUT, V14, P1861, DOI 10.1109/TMC.2014.2368557
   He L, 2013, IEEE INT CONF MOB, P28, DOI 10.1109/MASS.2013.51
   He SB, 2013, IEEE T MOBILE COMPUT, V12, P1931, DOI 10.1109/TMC.2012.161
   Jiang LT, 2014, L N INST COMP SCI SO, V131, P732, DOI 10.1007/978-3-319-11569-6_62
   Jiang LT, 2014, MOBILE NETW APPL, V19, P543, DOI 10.1007/s11036-014-0522-y
   Kurs A, 2007, SCIENCE, V317, P83, DOI 10.1126/science.1143254
   Liguang Xie, 2013, IEEE Wireless Communications, V20, P140, DOI 10.1109/MWC.2013.6590061
   Liguang Xie, 2012, 2012 9th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks (SECON), P10, DOI 10.1109/SECON.2012.6275766
   Lin C., 2015, 17 IEEE INT C HIGH P, P803
   Lin C., 2016, J SYST ARCH
   Lin C, 2016, J SYST SOFTWARE, V113, P381, DOI 10.1016/j.jss.2015.12.017
   LIN S, 1973, OPER RES, V21, P498, DOI 10.1287/opre.21.2.498
   Madhja A, 2016, COMPUT NETW, V97, P98, DOI 10.1016/j.comnet.2016.01.007
   Madhja A, 2015, COMPUT NETW, V80, P89, DOI 10.1016/j.comnet.2015.01.018
   Shi Y, 2011, IEEE INFOCOM SER, P1350, DOI 10.1109/INFCOM.2011.5934919
   Shu Y., 2016, IEEE T MOBI IN PRESS
   Tong B, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.61
   Wang C, 2014, IEEE INT CONF SENS, P468, DOI 10.1109/SAHCN.2014.6990385
   Wang C, 2013, INT PARALL DISTRIB P, P1101, DOI 10.1109/IPDPS.2013.22
   Welzl E., 1991, SMALLEST ENCLOSING D
   Wu J, 2014, J COMPUT SCI TECH-CH, V29, P550, DOI 10.1007/s11390-014-1449-2
   Xie L., 2013, P 14 ACM INT S MOB A, P109
   Xie LG, 2013, IEEE INFOCOM SER, P1636
   Xie LG, 2012, IEEE ACM T NETWORK, V20, P1748, DOI 10.1109/TNET.2012.2185831
   Xu WZ, 2014, 2014 IEEE 25TH ANNUAL INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR, AND MOBILE RADIO COMMUNICATION (PIMRC), P1269, DOI 10.1109/PIMRC.2014.7136363
   Yang Y., 2015, WIRELESS RECHARGEABL
   Zhang S, 2015, IEEE T COMPUT, V64, P654, DOI 10.1109/TC.2013.2297926
   Zhang S, 2012, IEEE INT CONF MOB, P84, DOI 10.1109/MASS.2012.6502505
   Zhang YM, 2016, IEEE ACM T NETWORK, V24, P1632, DOI 10.1109/TNET.2015.2425146
NR 38
TC 51
Z9 54
U1 0
U2 45
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2016
VL 121
BP 88
EP 104
DI 10.1016/j.jss.2016.08.046
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY1OO
UT WOS:000384864500007
DA 2024-07-18
ER

PT J
AU Li, Z
   Atre, R
   Huda, Z
   Jannesari, A
   Wolf, F
AF Li, Zhen
   Atre, Rohit
   Huda, Zia
   Jannesari, Ali
   Wolf, Felix
TI Unveiling parallelization opportunities in sequential programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Parallelism discovery; Program analysis; Profiling; Data dependence;
   Parallelization
ID DATA-DEPENDENCE
AB The stagnation of single-core performance leaves application developers with software parallelism as the only option to further benefit from Moore's Law. However, in view of the complexity of writing parallel programs, the parallelization of myriads of sequential legacy programs presents a serious economic challenge. A key task in this process is the identification of suitable parallelization targets in the source code. In this paper, we present an approach to automatically identify potential parallelism in sequential programs of realistic size. In comparison to earlier approaches, our work combines a unique set of features that make it superior in terms of functionality: It not only (i) detects available parallelism with high accuracy but also (ii) identifies the parts of the code that can run in parallel even if they are spread widely across the code, (iii) ranks parallelization opportunities according to the speedup expected for the entire program, while (iv) maintaining competitive overhead both in terms of time and memory. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Li, Zhen; Huda, Zia; Jannesari, Ali; Wolf, Felix] Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
   [Atre, Rohit] Rhein Westfal TH Aachen, D-52062 Aachen, Germany.
   [Jannesari, Ali] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 Technical University of Darmstadt; RWTH Aachen University; University of
   California System; University of California Berkeley
RP Li, Z (corresponding author), Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
EM li@cs.tu-darmstadt.de; atre@aices.rwth-aachen.de;
   huda@cs.tu-darmstadt.de; jannesari@eecs.berkeley.edu;
   wolf@cs.tu-darmstadt.de
OI Huda, Zia Ul/0000-0002-2223-4452; Atre, Rohit/0000-0003-0979-5308;
   Jannesari, Ali/0000-0001-8672-5317
CR Anderson M. J., 2011, Proceedings of ESMATS 2011 - 14th European Space Mechanisms and Tribology Symposium
   [Anonymous], 2010, PROC FOSER 10
   BAILEY DH, 1991, INT J SUPERCOMPUT AP, V5, P63, DOI 10.1177/109434209100500306
   Bienia C., 2011, Ph.D. dissertation
   Cai Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P450, DOI 10.1145/2786805.2786839
   Duran Alejandro, 2009, Proceedings of the 2009 International Conference on Parallel Processing (ICPP 2009), P124, DOI 10.1109/ICPP.2009.64
   Garcia S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P458
   Grosser T, 2012, PARALLEL PROCESS LET, V22, DOI 10.1142/S0129626412500107
   Jannesari A., 2009, IEEE INT S PARALLEL, P1
   Kennedy Ken., 2002, Optimizing compilers for modern architectures: a dependence-based approach
   Ketterlin A, 2012, INT SYMP MICROARCH, P437, DOI 10.1109/MICRO.2012.47
   Kim M., 2010, P 2 USENIX WORKSH HO
   Kim Minjang., 2010, INT S MICROARCHITECT, P535, DOI DOI 10.1109/MICRO.2010.49
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lattner C., 2011, P 2011 FREE OP SOURC, P1
   Li Z., 2015, Tools for High Performance Computing 2014, P37
   Li Z, 2015, INT PARALL DISTRIB P, P484, DOI 10.1109/IPDPS.2015.41
   Li Z, 2013, PROC INT CONF PARAL, P1004, DOI 10.1109/ICPP.2013.119
   Moseley T, 2007, INT SYM CODE GENER, P198
   Ottoni G, 2005, INT SYMP MICROARCH, P105
   Pingali K, 2011, ACM SIGPLAN NOTICES, V46, P12, DOI 10.1145/1993316.1993501
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Sanchez D, 2007, INT SYMP MICROARCH, P123, DOI 10.1109/MICRO.2007.24
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   Ul Huda Z, 2014, ACM T ARCHIT CODE OP, V11, DOI 10.1145/2688905
   Vanka Rajeshwar., 2012, CODE GENERATION OPTI, P186, DOI DOI 10.1145/2259016.2259041
   Zhang XY, 2009, INT SYM CODE GENER, P47, DOI 10.1109/CGO.2009.15
NR 27
TC 16
Z9 17
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 282
EP 295
DI 10.1016/j.jss.2016.03.045
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800019
DA 2024-07-18
ER

PT J
AU Chandakanna, VR
   Vatsavayi, VK
AF Chandakanna, Veerabhadra Rao
   Vatsavayi, Valli Kumari
TI A QoS-aware self-correcting observation based load balancer
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Dynamic load balancing; Fault tolerance; Quality of Service
ID DATA REPLICATION; FAULT-TOLERANCE; MECHANISM; BEHAVIOR; SYSTEM
AB Any service offered by a load balanced cluster is deployed on every member of the cluster. The Sliding window based Self-Learning and Adaptive Load Balancer (SSAL) is an observation based load balancer that optimizes throughput. It gives single point entry to access any service hosted on the cluster. This paper proposes a QoS-aware and Self-correcting observation based Load Balancer (QSLB) that extends the SSAL to (i) prevent the single point of failure of the load balancer, (ii) manage the cluster capacity, (iii) support the QoS monitoring, and (iv) estimate the cluster capacity needed to meet the QoS benchmarks. Redundant QSLBs collaborate to estimate the capabilities of the individual cluster members, share the available cluster capacity, and monitor the QoS parameters. Two models to estimate the cluster capacity needed to meet the QoS benchmarks are proposed. Experiments were conducted to test the QSLB's features. The experimental results confirmed that (i) the overhead to support these QSLB features is minimal, (ii) the QSLBs retained their share of the cluster capacity even in dynamic environments, and (iii) using the recommended cluster capacity improved the QoS met percentage. The proposed model improves fault tolerance, assists in cluster capacity management, and monitors the QoS. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Chandakanna, Veerabhadra Rao] JNTUK, MVGR Coll Engn, CSE Dept, Vizianagaram 535005, Andhra Pradesh, India.
   [Vatsavayi, Valli Kumari] Andhra Univ, AU Coll Engn, Dept Comp Sci & Syst Engn, Visakhapatnam 530003, Andhra Pradesh, India.
C3 Jawaharlal Nehru Technological University - Kakinada; JNTUK University
   College of Engineering, Vizianagaram; Andhra University
RP Chandakanna, VR (corresponding author), JNTUK, MVGR Coll Engn, CSE Dept, Vizianagaram 535005, Andhra Pradesh, India.
EM cvrao1972@gmail.com; vallikumari@gmail.com
RI Vatsavayi, Valli Kumari/AAH-1539-2019
OI Vatsavayi, Valli Kumari/0000-0002-7252-8301
CR Abawajy JH, 2014, IEEE T COMPUT, V63, P2975, DOI 10.1109/TC.2013.183
   Agneeswaran VS, 2009, IEEE T SYST MAN CY A, V39, P807, DOI 10.1109/TSMCA.2009.2015960
   Ammendola R, 2015, FUTURE GENER COMP SY, V53, P90, DOI 10.1016/j.future.2014.12.015
   Babu LDD, 2013, APPL SOFT COMPUT, V13, P2292, DOI 10.1016/j.asoc.2013.01.025
   Bandara HMND, 2013, IEEE T PARALL DISTR, V24, P1752, DOI 10.1109/TPDS.2012.270
   Cerotti D, 2015, ELECTRON NOTES THEOR, V310, P49, DOI 10.1016/j.entcs.2014.12.012
   Chandakanna VR, 2015, J NETW COMPUT APPL, V56, P188, DOI 10.1016/j.jnca.2015.07.001
   Chandakanna VR, 2014, J SYST SOFTWARE, V89, P193, DOI 10.1016/j.jss.2013.11.1112
   Cheng H, 2013, EXPERT SYST APPL, V40, P1381, DOI 10.1016/j.eswa.2012.08.050
   Chervenak AL, 2009, IEEE T PARALL DISTR, V20, P1260, DOI 10.1109/TPDS.2008.151
   citrix.com, 2015, LOAD BALANCING ALGOR
   Citrix.com, 2015, NETSCALER APPLICATIO
   Devcentral.f5.com, 2015, INTRO TO LOAD BALANC
   Dong B, 2012, J PARALLEL DISTR COM, V72, P1254, DOI 10.1016/j.jpdc.2012.05.006
   F5.com, 2015, BIG IP PRODUCT MODUL
   Fernandez A. Diaz, 2012, P 2 ED PROGR SYST LA, P95, DOI DOI 10.1145/2414639.2414651
   Garg SK, 2013, J PARALLEL DISTR COM, V73, P450, DOI 10.1016/j.jpdc.2012.09.012
   Goel S., 2015, DATA REPLICATION STR
   Gopinath PPG, 2015, PROCEDIA COMPUT SCI, V50, P427, DOI 10.1016/j.procs.2015.04.009
   Han QN, 2016, COMPUT NETW, V94, P250, DOI 10.1016/j.comnet.2015.10.025
   Hao YS, 2012, FUTURE GENER COMP SY, V28, P657, DOI 10.1016/j.future.2011.10.010
   Izakian H, 2010, FUTURE GENER COMP SY, V26, P228, DOI 10.1016/j.future.2009.08.010
   Keskinturk T, 2012, COMPUT OPER RES, V39, P1225, DOI 10.1016/j.cor.2010.12.003
   Lin JW, 2013, IEEE T CLOUD COMPUT, V1, P101, DOI 10.1109/TCC.2013.1
   Mohamed N, 2013, J NETW COMPUT APPL, V36, P1116, DOI 10.1016/j.jnca.2013.01.006
   Moiz SA., 2011, Int. J. Comput. Appl, V13, P1
   Nukarapu DT, 2011, IEEE T PARALL DISTR, V22, P1299, DOI 10.1109/TPDS.2010.207
   Pacini E, 2015, ADV ENG SOFTW, V84, P31, DOI 10.1016/j.advengsoft.2015.01.005
   Penmatsa S, 2011, J PARALLEL DISTR COM, V71, P537, DOI 10.1016/j.jpdc.2010.11.016
   Philippi S, 2003, RELIAB ENG SYST SAFE, V82, P195, DOI 10.1016/S0951-8320(03)00169-8
   Pinheiro Eduardo., 2001, Proceedings of the Workshop on Compilers and Operating Systems for Low Power, P182
   Scully T, 2009, KNOWL-BASED SYST, V22, P529, DOI 10.1016/j.knosys.2008.10.008
   Shah S, 2013, INFORM SCIENCES, V221, P297, DOI 10.1016/j.ins.2012.09.004
   Straková H, 2013, PROCEDIA COMPUT SCI, V18, P189, DOI 10.1016/j.procs.2013.05.182
   Tenzekhti F, 2002, MICROPROCESS MICROSY, V26, P301, DOI 10.1016/S0141-9331(02)00037-6
   Zhuo L, 2003, J PARALLEL DISTR COM, V63, P927, DOI 10.1016/S0743-7315(03)00095-9
NR 36
TC 4
Z9 4
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2016
VL 115
BP 111
EP 129
DI 10.1016/j.jss.2016.01.042
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI3PS
UT WOS:000373411400008
DA 2024-07-18
ER

PT J
AU Cerpa, N
   Bardeen, M
   Astudillo, CA
   Verner, J
AF Cerpa, Narciso
   Bardeen, Matthew
   Astudillo, Cesar A.
   Verner, June
TI Evaluating different families of prediction methods for estimating
   software project outcomes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Project outcome predictors; Classification techniques; AUC analysis
ID CLASSIFICATION MODELS; LOGISTIC-REGRESSION; SUCCESS; PRACTITIONERS;
   PERCEPTIONS; ACCEPTANCE; THINK; EASE
AB Software has been developed since the 1960s but the success rate of development projects is still low. Classification models have been used to predict defects and effort estimation, but little work has been done to predict the outcome of these projects. Previous research shows that it is possible to predict outcome using classifiers based on key variables during development, but it is not clear which techniques provide more accurate predictions. We benchmark classifiers from different families to determine the outcome of a software project and identify variables that influence it. A survey-based empirical investigation was used to examine variables contributing to project outcome. Classification models were built and tested to identify the best classifiers for this data by comparing their AUC values. We reduce the dimensionality of the data with Information Gain and build models with the same techniques. We use Information Gain and classification techniques to identify key attributes and their relative importance. We find that four classification techniques provide good results for survey data, regardless of dimensionality reduction. We conclude that Random Forest is the most appropriate technique for predicting project outcome. We identified key attributes which are related to communication, estimation, and process review. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Cerpa, Narciso; Bardeen, Matthew; Astudillo, Cesar A.] Univ Talca, Talca, Chile.
   [Verner, June] Univ Oulu, SF-90100 Oulu, Finland.
C3 Universidad de Talca; University of Oulu
RP Cerpa, N (corresponding author), Univ Talca, Talca, Chile.
EM ncerpa@utalca.cl; mbardeen@utalca.cl; castudillo@utalca.cl;
   june.verner@gmail.com
RI Cerpa, Narciso/A-7823-2010
OI Astudillo, Cesar A./0000-0002-2109-3192
FU Chilean Grants FONDECYT [1030785, 11121350]
FX This research was partially supported by the Chilean Grants FONDECYT
   1030785 and 11121350. We also thank Barbara Kitchenham and Colin
   Bellinger for their insightful discussions regarding this study.
CR Abe S., 2006, 28th International Conference on Software Engineering Proceedings, P600, DOI 10.1145/1134285.1134371
   Alpaydin E, 1999, NEURAL COMPUT, V11, P1885, DOI 10.1162/089976699300016007
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   Baccarini D., 1999, PROJ MANAG J, V30, P25, DOI DOI 10.1177/875697289903000405
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baheti P., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P208
   Ben-Hur A, 2002, J MACH LEARN RES, V2, P125, DOI 10.1162/15324430260185565
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   BLEISTEIN S., 2005, 2005 ACM S APPL COMP, P1300, DOI [10.1145/1066677.1066972, DOI 10.1145/1066677.1066972]
   Boehm BW., 1981, Software Engineering Economics
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Cheng M., 2008, P 25 INT S AUT ROB C
   Cleary J.G., 1995, PROC 12 INT C MACHIN, P108, DOI [DOI 10.1016/B978-1-55860-377-6.50022-0, 10.1016/B978-1-55860-377-6.50022-0]
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Dreiseitl S, 2002, J BIOMED INFORM, V35, P352, DOI 10.1016/S1532-0464(03)00034-0
   Egorova E, 2010, J SYST SOFTWARE, V83, P1907, DOI 10.1016/j.jss.2010.05.077
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Field A., 2012, INTRO STAT METHODS, V58
   Garrity EJ, 1998, S INF TECHN MANAG, P1
   Gefen D, 1998, DATA BASE ADV INF SY, V29, P35
   Gefen D., 2000, Data Base for Advances in Information Systems, V31, P65
   Gefen D., 2000, J ASSOC INF SYST, V1, DOI [10.17705/1jais.00008, DOI 10.17705/1JAIS.00008]
   Glass R. L., 1997, SOFTWARE RUNAWAYS MO
   Gray D., 2011, P EVALUATION ASSESSM
   Hagerty N., 2000, P SIGCPR C EV IL, P192
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hoffman T., 1999, Computerworld, V33, P24
   Ishman M., 1998, INFORM SYSTEM SUCCES
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kohavi R., 1998, Machine Learning, V30, P271
   Kotsiantis S. B., 2007, Emerging artificial intelligence applications in computer engineering, DOI DOI 10.31449/INF.V31I3.148
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D.D., 1994, Proceeding of the Third Annual Symposium on Document Analysis and Information Retrieval, V33, P1
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Lobo JM, 2008, GLOBAL ECOL BIOGEOGR, V17, P145, DOI 10.1111/j.1466-8238.2007.00358.x
   Loh WY, 2011, WIRES DATA MIN KNOWL, V1, P14, DOI 10.1002/widm.8
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Mizuno O., 2004, EMPIRICAL EVALUATION
   Nasrabadi N.M, 2007, Pattern recognition and machine learning, V16
   Paulk M., 1993, TECHNICAL REPORT
   Pereira J., 2004, P WORKSH ING SOFTW A
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Pinto J.K., 1988, PROJ MANAG J, V19, P67
   PINTO JK, 1990, IEEE T ENG MANAGE, V37, P269, DOI 10.1109/17.62322
   Pressman R, 1998, IEEE SOFTWARE, V15, P50, DOI 10.1109/52.646881
   Procaccino J. D, 2001, P 12 EUR SOFTW CONTR, P107
   Procaccino JD, 2006, J SYST SOFTWARE, V79, P1541, DOI 10.1016/j.jss.2006.01.010
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   PROCACCINO JD, 2002, INT J COMPUTERS INTE, V10, P20
   Reyes F, 2011, J SYST SOFTWARE, V84, P775, DOI 10.1016/j.jss.2010.12.036
   SIEGEL S, 1957, AM STAT, V11, P13, DOI 10.2307/2685679
   Smite D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P103
   Takagi Y, 2005, EMPIR SOFTW ENG, V10, P495, DOI 10.1007/s10664-005-3864-z
   The Standish Group, 1994, TECHNICAL REPORT
   Verner J., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on International Symposium on Empirical Software Engineering - ISESE '06, P154, DOI DOI 10.1145/1159733.1159758
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Verner J. M., 2003, P ICSSEA 2003, V4, P1
   Verner JM, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P70, DOI 10.1109/ASWEC.2005.14
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Verner JM, 1999, INFORM SOFTWARE TECH, V41, P1021, DOI 10.1016/S0950-5849(99)00077-4
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Walczak S, 1999, INFORM SOFTWARE TECH, V41, P107, DOI 10.1016/S0950-5849(98)00116-5
   Wang Y. L., 2007, THESIS
   Wateridge J., 1995, International Journal of Project Management, V13, P169, DOI 10.1016/0263-7863(95)00020-Q
   Wateridge J., 1998, International Journal of Project Management, V16, P59, DOI 10.1016/S0263-7863(97)00022-7
   Weber R, 2003, LECT NOTES ARTIF INT, V2689, P595
   Weber R., 2004, P 17 ANN C INT FLOR, P207
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C, 2005, LECT NOTES COMPUT SC, V3547, P385
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2000, J SOFTW QUAL, V9, P43
   Wolpert DH, 2002, SOFT COMPUTING AND INDUSTRY, P25
   Woodroof JB, 1998, S INF TECHN MANAG, P122
NR 88
TC 24
Z9 26
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2016
VL 112
BP 48
EP 64
DI 10.1016/j.jss.2015.10.011
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CZ9IO
UT WOS:000367411500004
DA 2024-07-18
ER

PT J
AU Afzal, W
   Alone, S
   Glocksien, K
   Torkar, R
AF Afzal, Wasif
   Alone, Snehal
   Glocksien, Kerstin
   Torkar, Richard
TI Software test process improvement approaches: A systematic literature
   review and an industrial case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Software test process improvement; Systematic literature review; Case
   study
ID FRAMEWORK
AB Software test process improvement (STPI) approaches are frameworks that guide software development organizations to improve their software testing process. We have identified existing STPI approaches and their characteristics (such as completeness of development, availability of information and assessment instruments, and domain limitations of the approaches) using a systematic literature review (SLR). Furthermore, two selected approaches (TPI NEXT and TMMi) are evaluated with respect to their content and assessment results in industry. As a result of this study, we have identified 18 STPI approaches and their characteristics. A detailed comparison of the content of TPI NEXT and TMMi is done. We found that many of the STPI approaches do not provide sufficient information or the approaches do not include assessment instruments. This makes it difficult to apply many approaches in industry. Greater similarities were found between TPI NEXT and TMMi and fewer differences. We conclude that numerous STPI approaches are available but not all are generally applicable for industry. One major difference between available approaches is their model representation. Even though the applied approaches generally show strong similarities, differences in the assessment results arise due to their different model representations. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Afzal, Wasif] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Afzal, Wasif] Bahria Univ, Dept Comp Sci, Islamabad, Pakistan.
   [Alone, Snehal; Glocksien, Kerstin; Torkar, Richard] Univ Gothenburg, Chalmers Univ Technol, Gothenburg, Sweden.
C3 Malardalen University; Chalmers University of Technology; University of
   Gothenburg
RP Afzal, W (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM wasif.afzal@gmail.com; Snehal.Alone@gmail.com;
   Kerstin.Glocksien@gmail.com; richard.torkar@cse.gu.se
RI Szopka, Katarzyna/A-8579-2017; Afzal, Wasif/C-8028-2013
OI Afzal, Wasif/0000-0003-0611-2655
FU Knowledge Foundation (KKS) [20130085]; Swedish Innovation Agency
   (VINNOVA) [2014-03397]; Vinnova [2014-03397] Funding Source: Vinnova
FX This work was funded by The Knowledge Foundation (KKS) through the
   project 20130085: Testing of Critical System Characteristics (TOCSYC)
   and by the Swedish Innovation Agency (VINNOVA) through grant 2014-03397
   (IMPRINT).
CR [Anonymous], REAL WORLD RES RESOU
   [Anonymous], P 9 INT C QUAL SOFTW
   [Anonymous], 2012, EXPT SOFTWARE ENG CO
   [Anonymous], SOFTWARE QUALITY PRO
   Ares Casal J. M., 1998, P 18 INT C CHIL SOC
   Basili V. R., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P68
   Bertolino A., 2007, P C FUT SOFTW ENG FO
   Burnstein I., 1996, P 1996 INT TEST C IT
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   CARD DN, 2004, P 28 ANN INT COMP SO
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Collofello J. S., 1996, P 1996 IEEE 15 ANN I
   Dangle KC, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.162
   Ericson T., 1997, Software Testing, Verification and Reliability, V7, P229, DOI 10.1002/(SICI)1099-1689(199712)7:4<229::AID-STVR149>3.0.CO;2-M
   Ewijk A., 2013, TPI NEXT BUSINESS DR
   Farooq A., 2008, P 2008 IEEE INT MULT
   Farooq A., 2007, SIGSOFT SOFTW ENG NO, V32, P1
   Farooq A, 2008, LECT NOTES COMPUT SC, V4895, P114
   Fitzgerald B, 1999, IEEE SOFTWARE, V16, P37, DOI 10.1109/52.765785
   Garcia Cecilia, 2014, P 14 INT C SOFTW PRO, P84
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Harrold M.J., 2000, P C FUT SOFTW ENG IC
   Heiskanen Henri, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P17, DOI 10.1007/978-3-642-31063-8_3
   Ho C.-W., 2006, P 2006 AG C AGILE 06
   Homyen A., 1998, THESIS ILLINOIS I TE
   Ilyas F., 2003, P 7 INT MULT C INMIC, P434
   Jacobs J., 2000, XOOTIC MAGAZINE, V8, P23
   Jacobs J.C., 2002, P 10 INT WORKSH SOFT
   Karlström D, 2005, SOFTW TEST VERIF REL, V15, P145, DOI 10.1002/stvr.317
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kasurinen J, 2011, COMM COM INF SC, V172, P25
   Kiiskila J., 1998, P 24 EUR C EUROMICRO
   Kitchenham B., 2007, Joint Report
   KOOMEN T, 2002, WORLDWIDE SURVEY TES
   Koomen T., 1999, TEST PROCESS IMPROVE
   Kulkarni S., 2006, P 6 ANN INT SOFTW TE
   Leffingwell D., 2003, Managing Software Requirements: A Use Case Approach
   Meng C.-X., 2009, P 2009 INT FOR INF T
   Oh H., 2008, P 8 INT C QUAL SOFTW
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Rana K. K., 2005, Information Professional, P30, DOI 10.1049/inp:20050206
   Rasking M, 2011, COMM COM INF SC, V155, P190
   Reid S., 2012, Achieving Systems Safety, P237
   Rinkevics K, 2013, INFORM SOFTWARE TECH, V55, P267, DOI 10.1016/j.infsof.2012.08.004
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryu H., 2008, P 7 IEEE ACIS INT C
   Saldaña-Ramos J, 2012, IET SOFTW, V6, P405, DOI 10.1049/iet-sen.2011.0182
   Schweigert T., 2014, COMMUN COMPUT PHYS, P309, DOI DOI 10.1007/978-3-662-43896-1_
   Steiner M, 2012, J SOFTW-EVOL PROC, V24, P471, DOI 10.1002/smr.507
   Sulayman M., 2011, P 15 ANN C EV ASS SO
   Suwannasart T., 1996, THESIS ILLINOIS I TE
   Swinkels R., 2000, 1241FP
   Taipale O., 2006, P 2006 ACM IEEE INT P 2006 ACM IEEE INT
   Talby D, 2006, IEEE SOFTWARE, V23, P30, DOI 10.1109/MS.2006.93
   Tayamanon T., 2011, P 21 INT C SYST ENG
   THOMAS M, 1994, IEEE SOFTWARE, V11, P12, DOI 10.1109/52.300121
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Veenendal E., 2008, TEST MATURITY MODEL
   Varkoi T. K., 1998, P INT C ENG TECHN MA
   Wang Y., 1999, P 25 EUROMICRO C EUR
   Xin-ke L., 2009, WRI WORLD C SOFTW EN
   Xu-Xiang L., 2010, P 2010 INT C APP COM
   Yin R.K., 2011, Qualitative research from start to finish
   Zil-e-Huma, 2012, P 15 INT MULT C INMI
NR 65
TC 58
Z9 61
U1 3
U2 45
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2016
VL 111
BP 1
EP 33
DI 10.1016/j.jss.2015.08.048
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DE2NA
UT WOS:000370462800001
DA 2024-07-18
ER

PT J
AU Nostro, N
   Spalazzese, R
   Di Giandomenico, F
   Inverardi, P
AF Nostro, Nicola
   Spalazzese, Romina
   Di Giandomenico, Felicita
   Inverardi, Paola
TI Achieving functional and non functional interoperability through
   synthesized connectors
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Connector synthesis for interoperability; Dependability; Performance
ID SUPERVISORY CONTROL; DEPENDABILITY; MODEL
AB Our everyday life is pervaded by the use of a number of heterogeneous systems that are continuously and dynamically available in the networked environment to interoperate to achieve some goal. Goals may include both functional and non functional aspects and the evolving nature of such environment requires automated solutions as means to reach the needed level of flexibility. Achieving interoperability in such environment is a challenging problem. Even though some of such systems may in principle interact since they have compatible functionalities and similar interaction protocols, mismatches in their protocols and non functional issues arising from the environment may undermine their seamless interoperability. In this paper, we propose an approach for the automated synthesis of application layer connectors between heterogeneous networked systems (NSs) addressing both functional and some non functional interoperability. Our contributions are: (i) an automated connectors synthesis approach for NSs interoperability taking into account functional, performance and dependability aspects spanning pre-deployment time and run-time; (ii) a connector adaptation process, related to the performance and dependability aspects; and (iii) a stochastic model-based implementation of the performance and dependability analysis. In addition, we implemented, analyzed, and critically discussed a case study. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Nostro, Nicola] Univ Florence, I-50121 Florence, Italy.
   [Inverardi, Paola] Univ Aquila, Dept Informat Engn Comp Sci & Math, I-67100 Laquila, Italy.
   [Spalazzese, Romina] Malmo Univ, Dept Comp Sci, Nordenskioldsgatan 1, S-21119 Malmo, Sweden.
   [Spalazzese, Romina] Malmo Univ, Internet Things & People Res Ctr, S-21119 Malmo, Sweden.
   [Di Giandomenico, Felicita] CNR Pisa, Pisa, Italy.
C3 University of Florence; University of L'Aquila; Malmo University; Malmo
   University; Consiglio Nazionale delle Ricerche (CNR)
RP Spalazzese, R (corresponding author), Malmo Univ, Dept Comp Sci, Nordenskioldsgatan 1, S-21119 Malmo, Sweden.
EM nicola.nostro@unifl.it; romina.spalazzese@mah.se;
   f.digiandomenico@isti.cnr.it; paola.inverardi@univaq.it
RI Spalazzese, Romina/J-5388-2014; Di Giandomenico, Felicita/AAY-7572-2020
OI Spalazzese, Romina/0000-0003-0326-0556; 
FU Knowledge Foundation through Internet of Things and People research
   profile (Malmo University, Sweden); Software Center
FX This work was partially financed by the Knowledge Foundation through the
   Internet of Things and People research profile (Malmo University,
   Sweden) and by the Software Center (http://www.software-center.se/).
CR [Anonymous], DEPENDABLE COMPUTING
   [Anonymous], CCIS
   [Anonymous], INT THINGS PAN EUR R
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bennaceur A, 2015, IEEE T SOFTWARE ENG, V41, P221, DOI 10.1109/TSE.2014.2364844
   Bertolino A, 2011, LECT NOTES COMPUT SC, V6659, P350, DOI 10.1007/978-3-642-21455-4_11
   Bertolino A, 2010, LECT NOTES COMPUT SC, V6416, P251, DOI 10.1007/978-3-642-16561-0_26
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   BRANDIN BA, 1994, IEEE T AUTOMAT CONTR, V39, P329, DOI 10.1109/9.272327
   Brito PHS, 2009, J COMPUT SCI TECH-CH, V24, P212, DOI 10.1007/s11390-009-9219-2
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   CALVERT KL, 1990, IEEE J SEL AREA COMM, V8, P127, DOI 10.1109/49.46852
   Carmona J, 2009, NINTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P181, DOI 10.1109/ACSD.2009.6
   Cavallaro L, 2009, LECT NOTES COMPUT SC, V5900, P159, DOI 10.1007/978-3-642-10383-4_11
   CONNECT Consortium, 2012, DEL 6 3 EXP SCEN
   CONNECT Consortium, 2012, DEL 5 4 FIN DEP FRAM
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Daly D, 2000, LECT NOTES COMPUT SC, V1786, P332
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Di Giandomenico Felicita, 2013, International Journal of Adaptive, Resilient and Autonomic Systems, V4, P1, DOI 10.4018/jaras.2013010101
   Di Giandomenico F, 2014, RELIAB ENG SYST SAFE, V132, P220, DOI 10.1016/j.ress.2014.08.001
   Di Marco A, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P133, DOI 10.1109/SEAMS.2013.6595500
   Gierds C, 2012, IEEE T SERV COMPUT, V5, P72, DOI 10.1109/TSC.2010.57
   Inverardi P, 2011, LECT NOTES COMPUT SC, V6659, P148, DOI 10.1007/978-3-642-21455-4_5
   Inverardi P, 2010, LECT NOTES COMPUT SC, V6416, P236, DOI 10.1007/978-3-642-16561-0_25
   Jian-min Jiang, 2011, Proceedings of the 2011 IEEE Asia-Pacific Services Computing Conference (APSCC), P442, DOI 10.1109/APSCC.2011.81
   Jian-min Jiang, 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P87, DOI 10.1109/SERVICES.2011.76
   LAM SS, 1988, IEEE T SOFTWARE ENG, V14, P1376, DOI 10.1109/32.6181
   Luckey M, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P143, DOI 10.1109/SEAMS.2013.6595501
   Masci Paolo, 2011, Software Engineering for Resilient Systems. Proceedings Third International Workshop (SERENE 2011), P78, DOI 10.1007/978-3-642-24124-6_7
   Mirandola R, 2014, J SYST SOFTWARE, V89, P109, DOI 10.1016/j.jss.2013.11.002
   Montecchi L, 2014, 2014 TENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P82, DOI 10.1109/EDCC.2014.33
   Moscato F, 2012, IEEE T AUTOM SCI ENG, V9, P83, DOI 10.1109/TASE.2011.2161981
   Motahari Nezhad H.R., 2010, Protocol-aware matching of web service interfaces for adapter development, P731
   Movaghar A., 1984, Proceedings of the Real-Time Systems Symposium (Cat. No. 84CH2105-5), P215
   Nicol DM, 2004, IEEE T DEPEND SECURE, V1, P48, DOI 10.1109/TDSC.2004.11
   Okumura K., 1986, Computer Communication Review, V16, P30, DOI 10.1145/1013812.18176
   Oster Z. J., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P267, DOI 10.1109/ICWS.2011.110
   Pasha Maruf, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P290, DOI 10.1109/ITNG.2010.225
   Passerone R, 2002, IEEE/ACM INTERNATIONAL CONFERENCE ON CAD-02, DIGEST OF TECHNICAL PAPERS, P132, DOI 10.1109/ICCAD.2002.1167525
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   Rugina AE, 2008, EDCC-7: SEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P85, DOI 10.1109/EDCC-7.2008.14
   Rugina AE, 2007, LECT NOTES COMPUT SC, V4615, P14
   Sanders W. H., 2001, Lectures on Formal Methods and Performance Analysis. First EEF/Euro Summer School on Trends in Computer Science. Revised Lectures (Lecture Notes in Computer Science Vol.2090), P315
   Spalazzese R, 2010, LECT NOTES COMPUT SC, V6285, P335, DOI 10.1007/978-3-642-15114-9_26
   Spitznagel B, 2003, PROC INT CONF SOFTW, P374, DOI 10.1109/ICSE.2003.1201216
   Spitznagel B., 2004, THESIS CARNEGIE MELL
   Tivoli M, 2007, LECT NOTES COMPUT SC, V4424, P185
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
NR 50
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2016
VL 111
BP 185
EP 199
DI 10.1016/j.jss.2015.09.038
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DE2NA
UT WOS:000370462800011
DA 2024-07-18
ER

PT J
AU Ghabi, A
   Egyed, A
AF Ghabi, Achraf
   Egyed, Alexander
TI Exploiting traceability uncertainty among artifacts and code
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Traceability; Artifacts to code mapping; Analysis
ID IMPACT ANALYSIS; REQUIREMENTS; ARCHITECTURE; DESIGN
AB Traceability between software development artifacts and code has proven to save effort and improve quality. However, documenting and maintaining such traces remains highly unreliable. Traceability is rarely captured immediately while artifacts and code co-evolve. Instead they are recovered later. By then key people may have moved on or their recollection of facts may be incomplete and inconsistent. This paper proposes a language for capturing traceability that allows software engineers to express arbitrary assumption about the traceability between artifacts and code - even assumptions that may be inconsistent or incomplete. Our approach takes these assumptions to reasons about their logical consequences (hence increasing completeness) and to reveal inconsistencies (hence increasing correctness). In doing so, our approach's reasoning is correct even in the presence of known inconsistencies. This paper demonstrates the correctness and scalability of our approach on several, large-scale third-party software systems. Our approach is automated and tool supported. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Ghabi, Achraf; Egyed, Alexander] Johannes Kepler Univ Linz, A-4040 Linz, Austria.
C3 Johannes Kepler University Linz
RP Ghabi, A (corresponding author), Johannes Kepler Univ Linz, Altenbergerstr 69, A-4040 Linz, Austria.
EM a@ghabi.net; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) [P 23115-N23]
FX We gratefully acknowledge funding from the Austrian Science Fund (FWF):
   P 23115-N23.
CR ABBATTISTA F, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P253, DOI 10.1109/ICSM.1994.336769
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   Antoniol G, 2001, SCI COMPUT PROGRAM, V40, P213, DOI 10.1016/S0167-6423(01)00016-8
   Bianchi A, 2000, PROG COMPREHEN, P149, DOI 10.1109/WPC.2000.852489
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   Clarke S, 1999, ACM SIGPLAN NOTICES, V34, P325, DOI 10.1145/320385.320420
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cox Lisa., 2001, Proceedingsofthe9thinternationalconferenceonconceptualstructures,ICCS, P117
   Dagenais Barthelemy., 2007, ASE 07, P254, DOI DOI 10.1145/1321631.1321669
   DOHYUNG K, JAVA MPEG PLAYER
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2004, IEEE SOFTWARE, V21, P50, DOI 10.1109/MS.2004.40
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Egyed A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P221, DOI 10.1109/RE.2010.34
   Egyed A., 2004, Software Engineering Notes, V29, P3, DOI 10.1145/1041685.1029899
   Egyed A., 2005, P IEEEACM INT C AUTO, P360, DOI DOI 10.1145/1101908.1101970
   Ghabi A., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P171, DOI 10.1109/WICSA-ECSA.212.25
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Haumer P., 1999, Proceedings of the 32nd Annual Hawaii International Conference on Systems Sciences. 1999. HICSS-32. Abstracts and CD-ROM of Full Papers, DOI 10.1109/HICSS.1999.772891
   Jackson J., 1991, IEE C COMP CONTR DIV
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Lee M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P61, DOI 10.1109/TOOLS.2000.868959
   Li CM, 2009, FRONT ARTIF INTEL AP, V185, P613, DOI 10.3233/978-1-58603-929-5-613
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Mader Patrick, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P444, DOI 10.1109/ASE.2011.6100095
   Mäder P, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P171, DOI 10.1109/ICSM.2012.6405269
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   Neumüller C, 2006, IEEE INT CONF AUTOM, P145
   Nohrer A., 2012, VAMOS, P83
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   Richardson J, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ASE.2004.1342721
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
NR 44
TC 10
Z9 11
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2015
VL 108
BP 178
EP 192
DI 10.1016/j.jss.2015.06.037
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CO2EQ
UT WOS:000358969300009
DA 2024-07-18
ER

PT J
AU Ahmad, M
   Belloir, N
   Bruel, JM
AF Ahmad, Manzoor
   Belloir, Nicolas
   Bruel, Jean-Michel
TI Modeling and verification of Functional and Non-Functional Requirements
   of ambient Self-Adaptive Systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Non Functional Requirements; Model Driven Engineering; Relax; Dynamic
   Adaptive Systems; Properties verification; Goal Oriented Requirements
   Engineering
AB Self-Adaptive Systems modify their behavior at run-time in response to changing environmental conditions. For these systems, Non-Functional Requirements play an important role, and one has to identify as early as possible the requirements that are adaptable. We propose an integrated approach for modeling and verifying the requirements of Self-Adaptive Systems using Model Driven Engineering techniques. For this, we use RELAx, which is a Requirements Engineering language which introduces flexibility in Non-Functional Requirements. We then use the concepts of Goal-Oriented Requirements Engineering for eliciting and modeling the requirements of Self-Adaptive Systems. For properties verification, we use OMEGA2/IFx profile and toolset. We illustrate our proposed approach by applying it on an academic case study. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Ahmad, Manzoor; Belloir, Nicolas] Univ Pau & Pays Adour, LIUPPA, F-64000 Pau, France.
   [Bruel, Jean-Michel] Univ Toulouse, CNRS IRIT, F-31062 Toulouse, France.
C3 Universite de Pau et des Pays de l'Adour; Centre National de la
   Recherche Scientifique (CNRS); Universite de Toulouse; Universite
   Toulouse III - Paul Sabatier
RP Belloir, N (corresponding author), Univ Pau & Pays Adour, LIUPPA, F-64000 Pau, France.
EM manzoor.ahmad@univ-pau.fr; nicolas.belloir@univ-pau.fr; bruel@irit.fr
RI Bruel, Jean-Michel/ABD-5184-2020
OI Bruel, Jean-Michel/0000-0002-3653-0148; Belloir,
   Nicolas/0000-0002-0163-8757
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Ahmad M., 2013, Proceedings of the 2013 3rd International Workshop on Comparing Requirements Modeling Approaches (CMA@RE), P37, DOI 10.1109/CMA-RE.2013.6664183
   Ahmad M., 2010, 2010 10th Annual International Conference on New Technologies of Distributed Systems (NOTERE), P285, DOI 10.1109/NOTERE.2010.5536629
   AHMAD M, 2012, 3 INT C AMB SYST NET, V10, P474, DOI DOI 10.1016/J.PROCS.2012.06.061
   Ahmad Manzoor, 2012, JOURN GDR GPL CIEL
   Ahmad Manzoor, 2013, THESIS U TOULOUSE MI
   Ahmad Manzoor, 2013, 3 INT C SIM MOD METH
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2012, CHURCH FAITH CULT M
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Apvrille L, 2004, IEEE T SOFTWARE ENG, V30, P473, DOI 10.1109/TSE.2004.34
   Assmann Uwe, 2011, DAGSTUHLREPORTS, V1
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bascans Jeremy, 2013, COOL RELAX EDITOR M2
   Benghazi K, 2009, LECT NOTES COMPUT SC, V5872, P381, DOI 10.1007/978-3-642-05290-3_50
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Clarke EM, 1999, MODEL CHECKING, P1
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Courtiat JP, 2000, COMPUT COMMUN, V23, P1104, DOI 10.1016/S0140-3664(99)00240-6
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   DRAGOMIR I, 2012, 17 INT C ENG COMPL C, P189, DOI DOI 10.1109/ICECCS.2012.1
   GNAHO C, 2010, INFORSID 2010 MARS F, P277
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Kasten Eric P., 2003, P 9 IEEE WORKSH FUT
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Laleau Regine, 2010, INNOVATIONS SYSTEMS, V6
   Lapouchnian Alexei., 2005, DEAS 05, P1
   Lutz Robyn R., 1993, J SYST SOFTW, V34, P223
   Moon SI, 2004, IEEE T SYST MAN CY B, V34, P1045, DOI 10.1109/TSMCB.2003.819485
   Nehmer J., 2006, 28th International Conference on Software Engineering Proceedings, P43, DOI 10.1145/1134285.1134293
   Ober I, 2010, IEEE INT C ENG COMP, P373, DOI [10.1109/ICECCS.2010.41, 10.1109/ICECCS.2010.59]
   Ramirez Andres J., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P53, DOI 10.1007/978-3-642-33666-9_5
   Ramirez Andres J., 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P198, DOI 10.1007/978-3-642-33119-0_15
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Verimag Irit, 2011, OMEGA2 IFX UML SYSML
   Welsh K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P560, DOI 10.1109/ASE.2011.6100125
   Welsh K, 2010, LECT NOTES COMPUT SC, V6182, P2, DOI 10.1007/978-3-642-14192-8_2
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Whittle Jon, 2008, INT WORKSH SERV OR C
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Yu YJ, 2008, LECT NOTES ARTIF INT, V4994, P1
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
NR 47
TC 27
Z9 30
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2015
VL 107
BP 50
EP 70
DI 10.1016/j.jss.2015.05.028
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OE
UT WOS:000358699700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez, FD
   Acuña, ST
   Juristo, N
AF Rodriguez, Francy D.
   Acuna, Silvia T.
   Juristo, Natalia
TI Design and programming patterns for implementing usability
   functionalities in web applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Design patterns; Programming patterns
ID SOFTWARE; REUSE
AB Usability is a software system quality attribute. There are usability issues that have an impact not only on the user interface but also on the core functionality of applications. In this paper, three web applications were developed to discover patterns for implementing two usability functionalities with an impact on core functionality: Abort Operation and Progress Feedback. We applied an inductive process in order to identify reusable elements to implement the selected functionalities. For communication purposes, these elements are specified as design and programming patterns (PHP, VB.NET and Java). Another two web applications were developed in order to evaluate the patterns. The evaluation explores several issues such as ease of pattern understanding and ease of pattern use, as well as the final result of the applications.
   We found that it is feasible to reuse the identified solutions specified as patterns. The results also show that usability functionalities have features, like the level of coupling with the application or the complexity of each component of the solution, that simplify or complicate their implementation. In this case, the Abort Operation functionality turned out to be more feasible to implement than the Progress Feedback functionality. (c) 2015 Elsevier Inc. All rights reserved.
C1 [Rodriguez, Francy D.; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, E-28660 Madrid, Spain.
   [Acuna, Silvia T.] Univ Autonoma Madrid, Dept Ingn Informat, E-28049 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Autonomous University of Madrid
RP Rodríguez, FD (corresponding author), Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Campus Montegancedo S-N, E-28660 Madrid, Spain.
EM fd.rodriguez@alumnos.upm.es; silvia.acunna@uam.es; natalia@fi.upm.es
RI Acuña, Silvia/A-7395-2008; Rodriguez, Francy D./K-6497-2014
OI Rodriguez, Francy D./0000-0002-3354-4819
FU Spanish Ministry of Science and Innovation "Tecnologias para la
   Replicacion y Sintesis de Experimentos en IS" [TIN2011-23216]; Spanish
   Ministry of Science and Innovation "Go Lite" [TIN2011-24139]; Spanish
   Ministry of Science and Innovation "eMadrid" [P2013/ICE2715]
FX This research has been funded by the Spanish Ministry of Science and
   Innovation "Tecnologias para la Replicacion y Sintesis de Experimentos
   en IS" (TIN2011-23216), "Go Lite" (TIN2011-24139) and "eMadrid"
   (P2013/ICE2715) projects.
CR Alexander C., 1997, A Pattern Language: Towns, Buildings and Construction
   Alexander C., 1979, The Timeless Way of Building
   Alur D., 2003, CORE J2EE PATTERNS
   [Anonymous], 1997, DESIGN PATTERNS ELEM
   [Anonymous], 2009, 9241 210 2010 ERGONO, DOI DOI 10.3403/30388991
   [Anonymous], 2010, DESIGNING INTERFACES
   Bass L, 2004, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2004.1317502
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   Bass L, 2001, COMPUTER, V34, P113, DOI 10.1109/2.955105
   BASS L, 2001, CMUSEI2001TR005
   Bosch J, 2003, PROC INT CONF SOFTW, P757, DOI 10.1109/ICSE.2003.1201273
   Bushmann F., 1996, PATTERN ORIENTED SOF
   Carvajal L, 2013, IEEE T SOFTWARE ENG, V39, P1582, DOI 10.1109/TSE.2013.29
   Folmer E, 2006, INFORM SOFTWARE TECH, V48, P69, DOI 10.1016/j.infsof.2005.02.005
   Folmer E., 2003, Software Process Improvement and Practice, V8, P67, DOI 10.1002/spip.171
   Goodliffe P., 2006, Code craft: The practice of writing excellent code
   John BE, 2005, LECT NOTES COMPUT SC, V3425, P1
   John BE, 2009, EICS'09: PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P3
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Mellarkod V, 2007, INFORM MANAGE-AMSTER, V44, P613, DOI 10.1016/j.im.2007.03.006
   Panach JI, 2015, INFORM SOFTWARE TECH, V58, P338, DOI 10.1016/j.infsof.2014.07.002
   Postmus D, 2008, INFORM SOFTWARE TECH, V50, P753, DOI 10.1016/j.infsof.2007.07.009
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Toxboe A., 2015, USER INTERFACE DESIG
   Van Duyne D., 2006, The Design of Sites: Patterns for Creating Winning Wed Sites, VSecond
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 36
TC 10
Z9 10
U1 1
U2 31
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2015
VL 105
BP 107
EP 124
DI 10.1016/j.jss.2015.04.023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7VB
UT WOS:000355707300008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zarour, M
   Abran, A
   Desharnais, JM
   Alarifi, A
AF Zarour, Mohammad
   Abran, Alain
   Desharnais, Jean-Marc
   Alarifi, Abdulrahman
TI An investigation into the best practices for the successful design and
   implementation of lightweight software process assessment methods: A
   <i>systematic literature review</i>
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE software process assessment; systematic literature review; assessment
   method design
ID PROCESS IMPROVEMENT; ISO/IEC 29110; EXPERIENCES; CMMI
AB Software process assessment (SPA) is an effective tool to understand an organization's process quality and to explore improvement opportunities. However, the knowledge that underlies the best practices required to develop assessment methods, either lightweight or heavyweight methods, is unfortunately scattered throughout the literature. This paper presents the results of a systematic literature review to organize those recognized as the best practices in a way that helps SPA researchers and practitioners in designing and implementing their assessment methods. Such practices are presented in the literature as assessment requirements, success factors, observations, and lessons learned. Consequently, a set of 38 best practices has been collected and classified into five main categories, namely practices related to SPA methods, support tools, procedures, documentation, and users. While this collected set of best practices is important for designing lightweight as well as heavyweight assessment methods, it is of utmost importance in designing lightweight assessment methods, as the design of which depends on individual experience. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Zarour, Mohammad] Prince Sultan Univ, Coll Comp Sci & Informat Syst, Riyadh 11586, Saudi Arabia.
   [Abran, Alain; Desharnais, Jean-Marc] Ecole Technol Super, Dept Software & IT Engn, Montreal, PQ H3C IK3, Canada.
   [Alarifi, Abdulrahman] King AbdulAziz City Sci & Technol, Comp Res Inst, Riyadh 11442, Saudi Arabia.
C3 Prince Sultan University; University of Quebec; Ecole de Technologie
   Superieure - Canada
RP Zarour, M (corresponding author), Prince Sultan Univ, Coll Comp Sci & Informat Syst, Raffia St,POB 66833, Riyadh 11586, Saudi Arabia.
EM mzarour@psu.edu.sa; Alain.abran@etsmtl.ca; desharnaisjm@gmail.com;
   aarifi@kacst.edu.sa
RI Zarour, Mohammad I./D-5253-2009; Abran, Alain/I-2493-2016
OI Zarour, Mohammad I./0000-0002-1169-9502; Abran,
   Alain/0000-0003-2670-9061
CR Abrahamsson P., 2001, Scandinavian Journal of Information Systems, V13, P69
   Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   Ali R. Z. R. M., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P177, DOI 10.1109/MySEC.2011.6140665
   Anacleto A., 2004, 4 INT SPICE C PROC A
   ANACLETO A, 2004, 4 INT SPICE C PROC A
   [Anonymous], 2012, EXPERIMENTATION SOFT
   [Anonymous], 2011, 2911032001 ISOIEC
   [Anonymous], 2003, Soil Quality-Determination of Nitrate, Nitrite and Ammonium in Field Moist Soils by Extraction with Potassium Chloride Solution-Part 1: Manual Method, P1
   Bekkers Willem., 2010, Proceedings of the 18th European conference on information systems, P1
   Boucher Q, 2012, COMM COM INF SC, V301, P169
   Cater-Steel A., 2002, IASTED 6 INT C SOFTW, P737
   Cater-Steel A. P., 2004, SCH COMPUTING TECHNO
   Cater-Steel A. P., 2004, AUSTR SOFTW ENG C AS
   Cater-Steel A, 2006, INFORM SOFTWARE TECH, V48, P323, DOI 10.1016/j.infsof.2005.09.012
   Cater-Steel AP, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASWEC.2001.948520
   Charters S., 2007, GUIDELINES PERFORMIN
   Choi Y, 2005, 7TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P933, DOI 10.1109/ICACT.2005.246109
   Cignoni G. A., 1999, EUROMICRO 99 MIL IT
   CMMI-Team, 2011, CMUSEI2011TR006 CMMI
   CMMI-Team, 2006, CMUSEI2006TE011 CMMI
   Curtis W., 1994, P 2 INT S SOFTW METE
   Ekdahl F, 2006, EUROMICRO CONF PROC, P216, DOI 10.1109/EUROMICRO.2006.37
   El Emam K., 1999, An Empirical Review of Software Process Assessments
   El-Emam K., 1999, SOFTWARE PROCESS IMP
   El-Emam K., 1996, SOFTWARE PROCESS IMP, V2, P291
   Fabbrini F., 2003, 3 INT SPICE C PROC A, P81
   Fabbrini F, 2008, LECT NOTES COMPUT SC, V5007, P357, DOI 10.1007/978-3-540-79588-9_31
   Garcia Ivan, 2010, Proceedings 8th ACIS International Conference on Software Engineering Research, Management and Applications (SERA 2010), P198, DOI 10.1109/SERA.2010.33
   Garcia Ivan, 2010, Proceedings of the 2010 2nd International Conference on Electronic Computer Technology (ICECT 2010), P256, DOI 10.1109/ICECTECH.2010.5479933
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Grceva S, 2012, TEM J, V1, P65
   Grunbacher P, 1997, EUROMICRO CONF PROC, P123, DOI 10.1109/EURMIC.1997.617236
   Habra N., 1999, EUR C SOFTW PROC IMP
   Habra N., 1999, INT C PROD FOC SOFTW
   Humphrey W. S., 1989, SEI SERIES ENG
   Humphrey W. S., 1987, CMUSEI87TR16
   Ibrahim S., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P25, DOI 10.1109/MySEC.2011.6140638
   Johnson D.L., 1997, SOFTWARE PROCESS NEW, V8
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Kelly DP, 1999, COMPUTER, V32, P41, DOI 10.1109/2.796108
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Komi-Servio S., 2004, DEV EVALUATION SOFTW, P190
   Komiyama T., 2001, CROSSTALK J DEFENSE, V14, P22
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   Kuvaja P, 1999, SOFTWARE QUAL J, V8, P149, DOI 10.1023/A:1008909011736
   Laiyd A., 2000, P 1 ARG S SOFTW ENG, P133
   Laporte C., 2005, SWDC REK INT C SOFTW
   Laporte C., 2005, INT RES WORKSH PROC
   Lepmets M, 2012, J SYST SOFTWARE, V85, P1440, DOI 10.1016/j.jss.2012.01.038
   Lok RH, 1997, THIRD IEEE INTERNATIONAL SOFTWARE ENGINEERING STANDARDS SYMPOSIUM AND FORUM (ISESS 97) - EMERGING INTERNATIONAL STANDARDS, PROCEEDINGS, P25, DOI 10.1109/SESS.1997.595563
   Loon H., 2004, PROCESS ASSESSMENT I, V2nd
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   McCaffery F, 2010, J SOFTW MAINT EVOL-R, V22, P255, DOI 10.1002/spip.439
   Moe N. B., 1999, EUR SOFTW PROC IMPR
   Montoni Mariano Angel, 2009, Software Process: Improvement and Practice, V14, P289, DOI 10.1002/spip.428
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P196, DOI 10.1109/QSIC.2003.1319103
   O'Connor R., 2012, 19 EUR C SYST SOFTW
   O'Connor R., 2010, P 11 INT C PROD FOC, P4, DOI DOI 10.1145/1961258.1961259
   O'Connor RV, 2012, COMM COM INF SC, V290, P277
   O'Connor RV, 2011, COMM COM INF SC, V172, P225
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Reifer DJ, 2000, J SYST SOFTWARE, V50, P97, DOI 10.1016/S0164-1212(99)00119-3
   REO DA, 1999, MEASURING SOFTWARE P
   Rout T. P., 2000, 1 INT SPICE C LIM I
   Salvaneschi P., 2006, Software Process Improvement and Practice, V11, P309, DOI 10.1002/spip.274
   Santos G, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P187, DOI 10.1109/QUATIC.2007.22
   Saracevic T., 1995, SIGIR Forum, P138
   Schoeffel P, 2012, IEEE LAT AM T, V10, P1634, DOI 10.1109/TLA.2012.6187609
   Sjoberg O. K., 2007, FUTURE EMPIRICAL MET, P358
   Stambollian A., 2006, SPICE 06 LUX
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Varkoi T, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P436, DOI 10.1109/QUATIC.2010.80
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   von Wangenheim C. G., 2006, Software Process Improvement and Practice, V11, P329, DOI 10.1002/spip.276
   Wangenheim C. G. v., 2005, EUROSPI 05 HUNG, P1
   Wiegers KE, 2000, IEEE SOFTWARE, V17, P62, DOI 10.1109/52.819970
   Xian Chen, 2007, 2007 IEEE Congress on Services, P153
   Zarour M., 2010, P 10 SOFTW PROC IMPR, P39
   Zarour M., 2009, Methods to Evaluate Lightweight Software Process Assessment Methods Based on Evaluation Theory and Engineering Design Principles
NR 90
TC 17
Z9 20
U1 0
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2015
VL 101
BP 180
EP 192
DI 10.1016/j.jss.2014.11.041
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB3CY
UT WOS:000349507000014
DA 2024-07-18
ER

PT J
AU Kabbedijk, J
   Bezemer, CP
   Jansen, S
   Zaidman, A
AF Kabbedijk, Jaap
   Bezemer, Cor-Paul
   Jansen, Slinger
   Zaidman, Andy
TI Defining multi-tenancy: A systematic mapping study on the academic and
   the industrial perspective
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-tenancy; Systematic mapping study; Definition
ID SERVICE; SOFTWARE
AB Software as a service is frequently offered in a multi-tenant style, where customers of the application and their end-users share resources such as software and hardware among all users, without necessarily sharing data. It is surprising that, with such a popular paradigm, little agreement exists with regard to the definition, domain, and challenges of multi-tenancy. This absence is detrimental to the research community and the industry, as it hampers progress in the domain of multi-tenancy and enables organizations and academics to wield their own definitions to further their commercial or research agendas.
   In this article, a systematic mapping study on multi-tenancy is described in which 761 academic papers and 371 industrial blogs are analysed. Both the industrial and academic perspective are assessed, in order to get a complete overview. The definition and topic maps provide a comprehensive overview of the domain, while the research agenda, listing four important research topics, provides a roadmap for future research efforts. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Kabbedijk, Jaap; Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
   [Bezemer, Cor-Paul; Zaidman, Andy] Delft Univ Technol, Dept Software & Comp Technol, NL-2600 AA Delft, Netherlands.
C3 Utrecht University; Delft University of Technology
RP Kabbedijk, J (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
EM j.kabbedijk@uu.nL; c.bezemer@tudelft.nl; slinger.jansen@uu.nl;
   a.e.zaidman@tudelft.nl
RI Roijackers, Slinger/Y-4244-2019; Zaidman, Andy/O-6542-2014
OI Roijackers, Slinger/0000-0003-3752-2868; Zaidman,
   Andy/0000-0003-2413-3935; Bezemer, Cor-Paul/0000-0002-0474-5718
CR Anjum M., 2012, P 16 INT C EV ASS SO, P57
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Azeez Afkham, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P458, DOI 10.1109/CLOUD.2010.50
   Bennett K, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/APSEC.2000.896702
   Bezemer C.-P., 2010, Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE), P88
   Bezemer CP, 2010, PROC IEEE INT CONF S
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Chong Frederick., 2006, ARCHITECTURE STRATEG, P9
   Copi I.M., 1972, INTRO LOGIC STUDY GU
   Du J., 2010, HPDC '10:Proceedings of the 19th ACM International Symposium on High Performance Distributed Computing, P85
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fisher S, 2007, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSECOMPANION.2007.76
   Forbes, 2012, CLOUD COMP ENT SOFTW
   Guo CJ, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P551, DOI 10.1109/CEC-EEE.2007.4
   IBM, 2011, BEST PRACT CLOUD COM
   Kabbedijk J., 2012, P WICSA ECAS 2012 CO, P143
   Kitchenham B.A., 2010, P EV ASS SOFTW ENG E, P195
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kwok T, 2008, P IEEE I C SERV COMP, P179, DOI 10.1109/SCC.2008.138
   Li XH, 2008, LECT NOTES COMPUT SC, V5364, P649
   Microsoft, 2012, PRINC SHAR SHAR 1 WO
   Natis Y.V., 2008, GARTNER, V3, P4
   Oracle, 2009, MULT NON VIRT
   Osipov C., 2009, DEV DEPLOY MULT WE 2
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petticrew M., 2009, Systematic reviews in the social sciences
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Smith MA, 2004, INFORM MANAGE-AMSTER, V41, P977, DOI 10.1016/j.im.2003.08.019
   Strauch S, 2013, INT J NEXT-GENER COM, V4, P230
   Wieringa R, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P361, DOI 10.1109/RE.2009.17
   Wilkes MV., 1975, TIME SHARING COMPUTE
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 32
TC 31
Z9 34
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2015
VL 100
BP 139
EP 148
DI 10.1016/j.jss.2014.10.034
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AY7KM
UT WOS:000347739200012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fan, M
   Han, QS
   Liu, S
   Ren, SL
   Quan, G
   Ren, SP
AF Fan, Ming
   Han, Qiushi
   Liu, Shuo
   Ren, Shaolei
   Quan, Gang
   Ren, Shangping
TI Enhanced fixed-priority real-time scheduling on multi-core platforms by
   exploiting task period relationship
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Partitioned scheduling; RMS; Harmonic
ID SYSTEMS
AB One common approach for multi-core partitioned scheduling problem is to transform this problem into a traditional bin-packing problem, with the utilization of a task being the "size" of the object and the utilization bound of a processing core being the "capacity" of the bin. However, this approach ignores the fact that some implicit relations among tasks may significantly affect the feasibility of the tasks allocated to each local core. In this paper, we study the problem of partitioned scheduling of periodic real-time tasks on multi-core platforms under the Rate Monotonic Scheduling (RMS) policy. We present two effective and efficient partitioned scheduling algorithms, i.e. PSER and HAPS, by exploiting the fact that the utilization bound of a task set increases as task periods are closer to harmonic on a single-core platform. We formally prove the schedulability of our partitioned scheduling algorithms. Our extensive experimental results demonstrate that the proposed algorithms can significantly improve the scheduling performance compared with the existing work. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Fan, Ming; Han, Qiushi; Liu, Shuo; Ren, Shaolei; Quan, Gang] Florida Int Univ, Dept Elect & Comp Engn, Miami, FL 33174 USA.
   [Ren, Shangping] IIT, Dept Comp Sci, Chicago, IL 60616 USA.
   [Ren, Shaolei] Florida Int Univ, Sch Comp & Informat Sci, Miami, FL 33199 USA.
C3 State University System of Florida; Florida International University;
   Illinois Institute of Technology; State University System of Florida;
   Florida International University
RP Han, QS (corresponding author), Florida Int Univ, Dept Elect & Comp Engn, 10555 West Flagler St, Miami, FL 33174 USA.
EM mfan001@fiu.edu; qhan001@fiu.edu; sliu005@fiu.edu; sren@cs.fiu.edu;
   ganquan@fiu.edu; ren@iit.edu
RI Quan, Gang/JVZ-6756-2024; Ren, Shaolei/K-6526-2013; Ren,
   Shangping/B-5683-2019
OI Quan, Gang/0000-0002-1007-4850; Ren, Shaolei/0000-0001-9003-4324
FU NSF [CNS-0969013, CNS-1423137, CAREER-0746643, CNS-1018731, CNS-0917021,
   CNS-1018108]; Direct For Computer & Info Scie & Enginr; Division Of
   Computer and Network Systems [1018108] Funding Source: National Science
   Foundation
FX This work is supported in part by NSF under projects CNS-0969013,
   CNS-1423137, CAREER-0746643, CNS-1018731, CNS-0917021 and CNS-1018108.
CR Andersson B, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P193, DOI 10.1109/REAL.2001.990610
   Andersson B, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P111, DOI 10.1109/RTCSA.2007.31
   Anoersson B., 2003, 15 EUR REAL TIM SYST, P33
   BURCHARD A, 1995, IEEE T COMPUT, V44, P1429, DOI 10.1109/12.477248
   Coffman E. G., 1996, Approximation algorithms for bin packing: A survey, P46
   Darera VN, 2006, 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P315, DOI 10.1109/RTCSA.2006.63
   Fan M., 2011, 2011 IFIP 9 INT C EM, P27
   Fan M., 2014, 2014 15 INT S QUAL E, P284
   Han CC, 1996, IEEE T COMPUT, V45, P814, DOI 10.1109/12.508320
   HAN CC, 1997, P IEEE REAL TIM SYST
   Jnail S.K., 1978, OPER RES, V26, P127
   Kandhalu A., 2012, IEEE REAL TIM EMB TE
   KUO TW, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P160, DOI 10.1109/REAL.1991.160369
   Lauzac S., 1998, IPPS SPDP PAR PROC S
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   López JM, 2004, IEEE T PARALL DISTR, V15, P642, DOI 10.1109/TPDS.2004.25
   López JM, 2001, EUROMICRO, P67, DOI 10.1109/EMRTS.2001.934003
   SHIN KG, 1994, P IEEE, V82, P6, DOI 10.1109/5.259423
   Yeh D, 2008, IEEE DES TEST COMPUT, V25, P272, DOI 10.1109/MDT.2008.85
NR 19
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2015
VL 99
BP 85
EP 96
DI 10.1016/j.jss.2014.09.010
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX8AB
UT WOS:000347131600006
DA 2024-07-18
ER

PT J
AU Huang, RB
   Chen, JF
   Towey, D
   Chan, ATS
   Lu, YS
AF Huang, Rubing
   Chen, Jinfu
   Towey, Dave
   Chan, Alvin T. S.
   Lu, Yansheng
TI Aggregate-strength interaction test suite prioritization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Combinatorial interaction testing; Fixed-strength prioritization;
   Aggregate-strength prioritization
ID TEST-GENERATION; SEARCH
AB Combinatorial interaction testing is a widely used approach. In testing, it is often assumed that all combinatorial test cases have equal fault detection capability, however it has been shown that the execution order of an interaction test suite's test cases may be critical, especially when the testing resources are limited. To improve testing cost-effectiveness, test cases in the interaction test suite can be prioritized, and one of the best-known categories of prioritization approaches is based on "fixed-strength prioritization", which prioritizes an interaction test suite by choosing new test cases which have the highest uncovered interaction coverage at a fixed strength (level of interaction among parameters). A drawback of these approaches, however, is that, when selecting each test case, they only consider a fixed strength, not multiple strengths. To overcome this, we propose a new "aggregate-strength prioritization", to combine interaction coverage at different strengths. Experimental results show that in most cases our method performs better than the test-case-generation, reverse test-case-generation, and random prioritization techniques. The method also usually outperforms "fixed-strength prioritization", while maintaining a similar time cost. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Huang, Rubing; Chen, Jinfu] Jiangsu Univ, Sch Comp Sci & Telecommun Engn, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Huang, Rubing; Lu, Yansheng] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Wuhan 430074, Hubei, Peoples R China.
   [Towey, Dave] Univ Nottingham, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
   [Chan, Alvin T. S.] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Jiangsu University; Huazhong University of Science & Technology;
   University of Nottingham Ningbo China; Hong Kong Polytechnic University
RP Huang, RB (corresponding author), Jiangsu Univ, Sch Comp Sci & Telecommun Engn, 301 Xuefu Rd, Zhenjiang 212013, Jiangsu, Peoples R China.
EM rbhuang@ujs.edu.cn; jinfuchen@ujs.edu.cn; dave.towey@nottingham.edu.cn;
   cstschan@comp.polyu.edu.hk; lys@hust.edu.cn
RI Huang, Rubing/R-7367-2019; Towey, Dave/K-3160-2014
OI Huang, Rubing/0000-0002-1769-6126; Towey, Dave/0000-0003-0877-4353;
   Chen, Jinfu/0000-0002-3124-5452
FU Senior Personnel Scientific Research Foundation of Jiangsu University
   [14JDG039]; National Natural Science Foundation of China [61202110];
   Natural Science Foundation of Jiangsu Province [BK2012284]
FX The authors would like to thank Christopher M. Lott for providing us the
   source code and failure reports for count and nametbl, and the
   Software-artifact Infrastructure Repository (SIR) (Do et al., 2005) for
   providing the source code and fault data for flex and grep. We would
   also like to thank D. Richard Kuhn for providing us the ACTS tool, and
   Justyna Petke for helping in the experimental setup. Additionally, we
   would like to acknowledge T.Y. Chen for the many helpful discussions and
   comments. This work is fully supported by the Senior Personnel
   Scientific Research Foundation of Jiangsu University (Grant No.
   14JDG039), and partly supported by the National Natural Science
   Foundation of China (Grant No. 61202110), and the Natural Science
   Foundation of Jiangsu Province (Grant No. BK2012284).
CR Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC., 2005, A MOST 05 P 1 INT WO, P1
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Chen X, 2009, INT CONF QUAL SOFTW, P347, DOI 10.1109/QSIC.2009.52
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Grindall M, 2006, EMPIR SOFTW ENG, V11, P583, DOI 10.1007/s10664-006-9024-2
   Huang R., 2014, P ACM S APPL COMP, P1058, DOI [10.1145/2554850.2554854, DOI 10.1145/2554850.2554854]
   Huang RB, 2013, P INT COMP SOFTW APP, P502, DOI 10.1109/COMPSAC.2013.84
   Huang RB, 2012, P INT COMP SOFTW APP, P52, DOI 10.1109/COMPSAC.2012.15
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Mei LJ, 2011, J SYST SOFTWARE, V84, P603, DOI 10.1016/j.jss.2010.11.905
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Qu X, 2013, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2013.40
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   SEROUSSI G, 1988, IEEE T INFORM THEORY, V34, P513, DOI 10.1109/18.6031
   Srikanth Hema, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P61, DOI 10.1109/ISSRE.2009.26
   Srikanth H, 2012, J SYST SOFTWARE, V85, P1176, DOI 10.1016/j.jss.2012.01.007
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wang Z., 2009, THESIS SE U NANJING
   Wang ZY, 2011, INT J SOFTW ENG KNOW, V21, P829, DOI 10.1142/S0218194011005499
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoon H, 2011, INT J SOFTW ENG KNOW, V21, P191, DOI 10.1142/S0218194011005220
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
NR 45
TC 14
Z9 14
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2015
VL 99
BP 36
EP 51
DI 10.1016/j.jss.2014.09.002
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX8AB
UT WOS:000347131600003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Rahmani, M
   Azadmanesh, A
   Siy, H
AF Rahmani, M.
   Azadmanesh, A.
   Siy, H.
TI Architectural reliability analysis of framework-intensive applications:
   A web service case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architecture-based software reliability; Petri Net; Service oriented
   architecture
ID PERFORMANCE; PREDICTION
AB A novel methodology for modeling the reliability and performance of web services (WSs) is presented. To present the methodology, an experimental environment is developed in house, where WSs are treated as atomic entities but the underlying middleware is partitioned into layers. WSs are deployed in JBoss AS. Web service requests are generated to a remote middleware on which JBoss runs, and important performance parameters under various configurations are collected. In addition, a modularized simulation model in Petri net is developed from the architecture of the middleware and run-time behavior of the WSs. The results show that (1) the simulation model provides for measuring the performance and reliability of WSs under different loads and conditions that may be of great interest to WS designers and the professionals involved; (2) configuration parameters have substantial impact on the overall performance; (3) the simulation model provides a basis for aggregating the modules (layers), nullifying modules, or to include additional aspects of the WS architecture; and (4) the model is beneficial to predict the performance of WSs for those cases that are difficult to replicate in a field study. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Rahmani, M.; Azadmanesh, A.; Siy, H.] Univ Nebraska, Coll Informat Sci & Technol, Omaha, NE 68182 USA.
C3 University of Nebraska System
RP Azadmanesh, A (corresponding author), Univ Nebraska, Coll Informat Sci & Technol, Omaha, NE 68182 USA.
EM azad@unomaha.edu
FU Department of Defense (DoD)/Air Force Office of Scientific Research
   (AFOSR), NSF [FA9550-07-1-0499]
FX This research is funded in part by Department of Defense (DoD)/Air Force
   Office of Scientific Research (AFOSR), NSF Award Number
   FA9550-07-1-0499, under the title "High Assurance Software".
CR [Anonymous], Structure101," "
   [Anonymous], P 12 IEEE INT S SOFT
   [Anonymous], 2005, CMUPDL05109
   Azadmanesh A., 2008, WSEAS T COMMUN, V7, P663
   Bause F., 2002, Stochastic Petri Nets: An Introduction to the Theory
   Booth D., 2004, 11 W3C
   Cao JH, 2003, ICT'2003: 10TH INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS, VOLS I AND II, CONFERENCE PROCEEDINGS, P1501
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Dufour Bruno, 2007, ACM SIGSOFT Int. Symp. Software Testing and Analysis, DOI [10.1145/1273463.1273480, DOI 10.1145/1273463.1273480]
   Duke, 2012, DUK BANK WEB SERV
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   GOKHALE SS, 2006, 12 PAC RIM INT S DEP
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Grassi V, 2005, LECT NOTES COMPUT SC, V3549, P279
   Grassi V, 2006, IEEE INTERNET COMPUT, V10, P43, DOI 10.1109/MIC.2006.64
   Harkema M., 2004, P INT S PERF EV COMP, P733
   [HSQ] Hsqldb, 2012, HYP STRUCT QUER LANG
   Imre G, 2007, LECT NOTES COMPUT SC, V4473, P202
   Javashot, 2012, JAV DYN CALL GRAPH
   JBoss, 2012, JBOSS APPL SERV
   JENSEN K, 1987, LECT NOTES COMPUT SC, V254, P248
   Krahl D, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P205, DOI 10.1109/WSC.2002.1172886
   Rahmani M., 2011, P 3 INT WORKSH PRINC, P57, DOI DOI 10.1145/1985394.1985403
   Sakaguchi T, 1998, LECT NOTES COMPUT SC, V1469, P369
   Salus P. H., 1994, A Quarter Century of UNIX
   San-Yih Hwang, 2008, IEEE Transactions on Services Computing, V1, P104, DOI 10.1109/TSC.2008.2
   Sanders W.H., 2001, LNCS, V2090, P314
   Shooman M. L., 2002, Reliability of Computer Systems and Networks: FaultTolerance, Analysis ,and Design
   Singh H, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ISSRE.2001.989454
   Souza F., 2006, PROCEEDING 5 INT WOR, P1
   Srinivasan S, 2013, IEEE T COMPUT, V62, P2054, DOI 10.1109/TC.2012.122
   Van der Mei RD, 2001, TELECOMMUN SYST, V16, P361, DOI 10.1023/A:1016667027983
   Web Container, 2012, WEB CONTAINER
   Wells L, 2001, INT WORKSH PETRI NET, P59, DOI 10.1109/PNPM.2001.953356
   Xiao X., 2010, INT J SOFTW ENG APPL, V4, P19, DOI DOI 10.18000/IJABEG.10065
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
   Zhong DH, 2006, LECT NOTES COMPUT SC, V4277, P116
NR 37
TC 6
Z9 6
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2014
VL 94
SI SI
BP 186
EP 201
DI 10.1016/j.jss.2014.03.070
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK4KI
UT WOS:000338393200014
DA 2024-07-18
ER

PT J
AU Caballer, M
   de Alfonso, C
   Moltó, G
   Romero, E
   Blanquer, I
   García, A
AF Caballer, Miguel
   de Alfonso, Carlos
   Molto, German
   Romero, Eloy
   Blanquer, Ignacio
   Garcia, Andres
TI CodeCloud: A platform to enable execution of programming models on the
   Clouds
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing; Virtual infrastructures; Elasticity
ID IMPLEMENTATION; SCIENCE; SYSTEM; DESIGN
AB This paper presents a platform that supports the execution of scientific applications covering different programming models (such as Master/Slave, Parallel/MPI, MapReduce and Workflows) on Cloud infrastructures. The platform includes (i) a high-level declarative language to express the requirements of the applications featuring software customization at runtime, (ii) an approach based on virtual containers to encapsulate the logic of the different programming models, (iii) an infrastructure manager to interact with different IaaS backends, (iv) a configuration software to dynamically configure the provisioned resources and (v) a catalog and repository of virtual machine images. By using this platform, an application developer can adapt, deploy and execute parallel applications agnostic to the Cloud backend. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Caballer, Miguel; de Alfonso, Carlos; Molto, German; Romero, Eloy; Blanquer, Ignacio; Garcia, Andres] Univ Politecn Valencia, Inst Instrumentac Imagen Mol I3M, Ctr Mixto CSIC, CIEMAT, Valencia 46022, Spain.
C3 Consejo Superior de Investigaciones Cientificas (CSIC); Universitat
   Politecnica de Valencia; CSIC-UPV-CIEMAT - Instituto de Instrumentacion
   para Imagen Molecular (I3M); Centro de Investigaciones Energeticas,
   Medioambientales Tecnologicas
RP Caballer, M (corresponding author), Univ Politecn Valencia, Inst Instrumentac Imagen Mol I3M, Ctr Mixto CSIC, CIEMAT, Camino Vera S-N, Valencia 46022, Spain.
EM micafer1@upv.es; caralla@upv.es; elroal@upv.es; iblanque@dsic.upv.es
RI Blanquer, Ignacio/K-8675-2014; Moltó, Germán/C-6994-2008; Blanquer,
   Ignacio/AAH-2524-2020; Caballer, Miguel/K-1912-2012
OI Blanquer, Ignacio/0000-0003-1692-8922; Moltó,
   Germán/0000-0002-8049-253X; Blanquer, Ignacio/0000-0003-1692-8922; de
   Alfonso Laguna, Carlos/0000-0002-2378-021X; Caballer,
   Miguel/0000-0001-9393-3077
FU Spanish Ministry of Economy and Competitiveness [TIN2010-17804]
FX The authors wish to thank the financial support received from both the
   Spanish Ministry of Economy and Competitiveness to develop the project
   "Servicios avanzados para el despliegue y contextualizacion de
   aplicaciones virtualizadas para dar soporte a modelos de programacion en
   entornos cloud", with reference TIN2010-17804.
CR ALTSCHUL SF, 1990, J MOL BIOL, V215, P403, DOI 10.1016/S0022-2836(05)80360-2
   [Anonymous], 2006, Computational Methods in Science and Technology, DOI DOI 10.12921/CMST.2006.12.01.33-45
   [Anonymous], Google app engine
   [Anonymous], 2011, SCIENCECLOU11 P 2 IN
   [Anonymous], 1999, Using MPI: Portable Parallel Programming with the Message Passing Interface
   Bairoch A, 2005, NUCLEIC ACIDS RES, V33, pD154, DOI 10.1093/nar/gki070
   Carrion J.V., 2010, INT ICST C CLOUD COM
   Chohan N, 2010, L N INST COMP SCI SO, V34, P57
   Curcin V., 2008, 2008 CAIR INT BIOM E, V40, P1
   Dannert T, 2005, PHYS PLASMAS, V12, DOI 10.1063/1.1947447
   de Alfonso C., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P517, DOI 10.1109/CloudCom.2011.77
   de Alfonso Carlos, 2008, 2008 The Second International Conference on Advanced Engineering Computing and Applications in Sciences (ADVCOMP), P51, DOI 10.1109/ADVCOMP.2008.14
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deelman E, 2009, FUTURE GENER COMP SY, V25, P528, DOI 10.1016/j.future.2008.06.012
   Goodale T., 2006, Comput. Methods Sci. Technol., P7, DOI [10.12921/cmst.2006.12.01.07-20, DOI 10.12921/CMST.2006.12.01.07-20]
   Gu YH, 2009, PHILOS T R SOC A, V367, P2429, DOI 10.1098/rsta.2009.0053
   Heroku, Cloud application platform
   Jacq N, 2008, J GRID COMPUT, V6, P29, DOI 10.1007/s10723-007-9085-5
   Keahey Katarzyna, 2008, 2008 IEEE Fourth International Conference on eScience, P301, DOI 10.1109/eScience.2008.82
   Marshall Paul, 2012, Proceedings of the ICSOFT 2012. 7th International Conference on Software Paradigm Trends, P409
   Massie ML, 2004, PARALLEL COMPUT, V30, P817, DOI 10.1016/j.parco.2004.04.001
   Miceli C, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P478, DOI 10.1109/CCGRID.2009.87
   Microsoft, WIND AZUR
   Miller F.P., 2010, Amazon Web Services
   Moltó G, 2013, PROCEDIA COMPUT SCI, V18, P159, DOI 10.1016/j.procs.2013.05.179
   Oprescu A., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P351, DOI 10.1109/CloudCom.2010.32
   Pierre G., 2011, P WORKSH POST DEM TR, P1
   Pivotal Software, CLOUD FOUNDR
   Shao G., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P3, DOI 10.1109/HCW.2000.843728
   SNIA, CLOUD DAT MAN INTERF
   Stonebraker M, 2005, SIGMOD REC, V34, P42, DOI 10.1145/1107499.1107504
   The SAGA Project, LIGHT WEIGHT ACC LAY
   Tröger P, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P619
   University of Chicago, NIMB PROJ
   Vecchiola C., 2009, High speed and large scale scientific computing p, P267, DOI DOI 10.3233/978-1-60750-073-5-267
   Wilkins-Diehr N, 2008, COMPUTER, V41, P32, DOI 10.1109/MC.2008.470
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 37
TC 10
Z9 10
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2014
VL 93
BP 187
EP 198
DI 10.1016/j.jss.2014.02.005
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI5AJ
UT WOS:000336877500011
OA Green Published
DA 2024-07-18
ER

PT J
AU Elbouabidi, I
   Zarai, F
   Obaidat, MS
   Kamoun, L
AF Elbouabidi, Imen
   Zarai, Faouzi
   Obaidat, Mohammad S.
   Kamoun, Lotfi
TI An efficient design and validation technique for secure handover between
   3GPP LTE and WLANs systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Heterogeneous wireless networks; Handover; Authentication
ID AUTHENTICATION PROTOCOL
AB Future generations wireless systems, which integrate different wireless access networks together, will support a secured seamless mobility and a wide variety of applications and services with different quality of service (QoS) requirements. Most of the existing re-authentication protocols during vertical handover still have certain limitations such as man in the middle, eavesdropping and session hijacking attacks, and unacceptable delay for real time applications. In this article, we propose two re-authentication schemes to secure handover between 3GPP LTE and WLANs systems: Initial Handover Re-authentication Protocol, and Local Re-authentication Protocol. The second proposed protocol is executed locally in a WLAN network without contacting the authentication server of the home network for credentials verification. In fact, after a successful execution of the Initial Handover Re-authentication Protocol, the local key (LK) is shared between USIM and the authentication server of the WLAN. It is then used for securing handover and traffic in WLAN networks. Performance evaluation results obtained using simulation analysis show that the proposed re-authentication protocol enhances handover parameters such as handover latency, handover blocking rate and packet loss rate. Additionally, the proposed enhanced fast re-authentication protocol has been modeled and verified using the software AVISPA and is found to be safe. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Elbouabidi, Imen; Zarai, Faouzi; Kamoun, Lotfi] Univ Sfax, LETI Lab, Sfax, Tunisia.
   [Obaidat, Mohammad S.] Monmouth Univ, Comp Sci & Software Engn Dept, Long Branch, NJ 07764 USA.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS); Monmouth
   University
RP Zarai, F (corresponding author), Univ Sfax, LETI Lab, Sfax, Tunisia.
EM faouzi.zarai@isecs.rnu.tn; msobaidat@gmail.com
RI Obaidat, Mohammad S./KBC-2747-2024; zarai, Faouzi/KOD-7993-2024
OI zarai, Faouzi/0000-0001-9250-7885; Obaidat, Mohammad
   S./0000-0002-1569-9657
CR Abdo Jacques Bou, 2012, 2012 Symposium on Broadband Networks and Fast Internet (RELABIRA), P73, DOI 10.1109/RELABIRA.2012.6235098
   Aiash M., 2012, INT J NETWORK SECURI, V4
   ALSHIDHANI A, 2007, WIR TEL S WTS 2007 A, P1
   [Anonymous], 2011, 7 INT C WIRELESS COM
   [Anonymous], P COMM ICC MAY
   [Anonymous], P IEEE INT C COMP AP
   [Anonymous], 2013, SELECTED TOPICS WIMA
   ARKKO J, 2006, 4187 IETF RFC
   Cao J, 2012, COMPUT NETW, V56, P2119, DOI 10.1016/j.comnet.2012.02.012
   El Bouabidi I., 2013, LECT NOTES ELECT ENG, V214, P649
   El Bouabidi I., 2012, 3 INT C COMM NETW CO
   El Idrissi YE, 2012, 2012 INTERNATIONAL CONFERENCE ON FUTURE GENERATION COMMUNICATION TECHNOLOGY (FGCT), P137, DOI 10.1109/FGCT.2012.6476561
   Huang CM, 2007, COMPUT J, V50, P739, DOI 10.1093/comjnl/bxm029
   Kwon H., 2006, IEEE INT C COMP COMM
   Kwon H., 2006, 25 C COMP COMM INFOC
   Kwon H, 2007, IEEE VTS VEH TECHNOL, P184, DOI 10.1109/VETECF.2007.53
   Mun Hyeran, 2009, P WIR TEL S WTS, V4, P1
   Ntantogian C, 2009, WIRELESS PERS COMMUN, V48, P569, DOI 10.1007/s11277-008-9548-4
   Sharma Madhu J., 2011, International Journal of Security and Networks, V6, P90, DOI 10.1504/IJSN.2011.043668
   Sharma M.J., 2012, HUMAN CTR COMPUTING, V2, P1
   Tang C, 2008, IEEE T WIREL COMMUN, V7, P1035, DOI 10.1109/TWC.2008.060802
   Tseng YM, 2009, COMPUT STAND INTER, V31, P128, DOI 10.1016/j.csi.2007.11.014
   Wan CS, 2011, CHINESE J ELECTRON, V20, P165
   Yabin Liu, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P295, DOI 10.1109/CIT.2009.112
   Yang GM, 2010, IEEE T WIREL COMMUN, V9, P168, DOI 10.1109/TWC.2010.01.081219
   Zhang MX, 2005, IEEE T WIREL COMMUN, V4, P734, DOI 10.1109/TWC.2004.842941
   Zhou T, 2011, COMPUT NETW, V55, P205, DOI 10.1016/j.comnet.2010.08.008
NR 27
TC 9
Z9 10
U1 0
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2014
VL 91
SI SI
BP 163
EP 173
DI 10.1016/j.jss.2014.01.002
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE5BA
UT WOS:000334001600012
DA 2024-07-18
ER

PT J
AU Boix, EG
   Noguera, C
   De Meuter, W
AF Boix, Elisa Gonzalez
   Noguera, Carlos
   De Meuter, Wolfgang
TI Distributed debugging for mobile networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Distributed debugging; Distributed object-oriented applications; Mobile
   networks
ID MESSAGE-PASSING PROGRAMS; CONCURRENT PROGRAMS; PARALLEL PROGRAMS;
   SYSTEMS; AMBIENTTALK; REPLAY
AB Debuggers are an integral part, albeit often neglected, of the development of distributed applications. Ambient-oriented programming (AmOP) is a distributed paradigm for applications running on mobile ad hoc networks. In AmOP the complexity of programming in a distributed setting is married with the network fragility and open topology of mobile applications. To our knowledge, there is no debugging approach that tackles both these issues. In this paper we argue that a novel kind of distributed debugger that we term an ambient-oriented debugger, is required. We present REME-D (read as remedy), an online ambient-oriented debugger that integrates techniques from distributed debugging (event-based debugging, message breakpoints) and proposes facilities to deal with ad hoc, fragile networks - epidemic debugging, and support for frequent disconnections. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Boix, Elisa Gonzalez; Noguera, Carlos; De Meuter, Wolfgang] Vrije Univ Brussel, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Boix, EG (corresponding author), Vrije Univ Brussel, Pl Laan 2, B-1050 Brussels, Belgium.
EM egonzale@vub.ac.be
OI DE MEUTER, WOLFGANG/0000-0002-5229-5627; Gonzalez Boix,
   Elisa/0000-0002-9966-6421
FU Mobi-CraNT project of the Brussels Institute for Research and Innovation
   (Innoviris)
FX Elisa Gonzalez Boix and Carlos Noguera are funded by the Mobi-CraNT
   project of the Brussels Institute for Research and Innovation
   (Innoviris).
CR Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Astudillo P.J., 2012, THESIS VRIJE U BRUSS
   Bainomugisha E, 2012, SOFTWARE PRACT EXPER, V42, P331, DOI 10.1002/spe.1073
   BATES PC, 1995, ACM T COMPUT SYST, V13, P1, DOI 10.1145/200912.200913
   Baude F., 2001, P 3 INT C LARG SCAL, P193
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   CHEUNG WH, 1990, IEEE SOFTWARE, V7, P106, DOI 10.1109/52.43056
   Dao D, 2009, LECT NOTES COMPUT SC, V5501, P94, DOI 10.1007/978-3-642-00722-4_8
   ELSHOFF IJP, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/69215.69216
   Fonseca R., 2013, 4 USENIX S NETW SYST, P271
   Frumkin M, 1998, FIRST MERGED INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM & SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING, P753, DOI 10.1109/IPPS.1998.670012
   GAIT J, 1985, SOFTWARE PRACT EXPER, V15, P539, DOI 10.1002/spe.4380150603
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   Gonzalez Boix E, 2012, THESIS VRIJE U BRUSS
   Gottbrath C., 2009, TECHNICAL REPORT
   GPy, 2012, Technical Report
   Hood R., 1996, Proc. of the ACM SIGMETRICS Symposium on Parallel and Distributed Tools, P127, DOI 10.1145/238020.238058
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Khoo Y. P., 2013, P 2013 INT C SOFTW E, P352
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kola G, 2005, LECT NOTES COMPUT SC, V3648, P442
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   Marceau G, 2007, AUTOMAT SOFTW ENG, V14, P59, DOI 10.1007/s10515-006-0003-z
   Matthijssen Nick, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P216, DOI 10.1109/ICPC.2010.14
   MCDOWELL CE, 1989, COMPUT SURV, V21, P593, DOI 10.1145/76894.76897
   Meier M. S., 1996, P S PAR DISTR TOOLS, P70
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   Miller MS, 2005, LECT NOTES COMPUT SC, V3705, P195, DOI 10.1007/11580850_12
   Moore K. ., 2008, QUASIEXPERIMENTAL 6
   Mostinckx S, 2009, SOFTWARE PRACT EXPER, V39, P661, DOI 10.1002/spe.909
   Neophytou P., 2013, LECT NOTES COMPUTER, P139
   NETZER RHB, 1992, SUPERCOMPUTING 92 : PROCEEDINGS, P502
   OLSSON RA, 1991, SOFTWARE PRACT EXPER, V21, P209, DOI 10.1002/spe.4380210207
   Pancake C.M., 1993, ACM SIGPLAN Notices, V28, P169
   Pancake C. M., 2004, BIBLIOGRAPHY PARALLE
   Pedersen J., 2013, P INT C PAR DISTR PR, V1, P187
   Pothier G, 2007, ACM SIGPLAN NOTICES, V42, P535, DOI 10.1145/1297105.1297067
   Quigley J., 2007, WHITE PROGRAMMING LA
   Ronsse MA, 1998, PROCEEDINGS OF THE SIXTH EUROMICRO WORKSHOP ON PARALLEL AND DISTRIBUTED PROCESSING - PDP '98, P87, DOI 10.1109/EMPDP.1998.647184
   SISTARE S, 1994, IEEE PARALL DISTRIB, V2, P50, DOI 10.1109/88.311572
   Stanley T., 2009, HPL200978
   Thoai N, 2002, LECT NOTES COMPUT SC, V2550, P34
   Van Cutsem T, 2007, P INT C CHIL COMPUT, P3, DOI 10.1109/SCCC.2007.12
   Wismüller R, 1997, LECT NOTES COMPUT SC, V1332, P295
   WU X, 2002, CLUSTER COMPUT, V5, P365
   Zhang C., 2010, 2010 ACM IEEE 32 INT, V2, P271
NR 47
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2014
VL 90
BP 76
EP 90
DI 10.1016/j.jss.2013.11.1099
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD8BB
UT WOS:000333490400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prieto, VM
   Alvarez, M
   Cacheda, F
AF Prieto, Victor M.
   Alvarez, Manuel
   Cacheda, Fidel
TI SAAD, a content based Web Spam Analyzer and Detector
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web characterization; Web Spam; Malware; Data mining; Statistical
   properties of Web Spam
AB Web Spam is one of the main difficulties that crawlers have to overcome and therefore one of the main problems of the WWW. There are several studies about characterising and detecting Web Spam pages. However, none of them deals with all the possible kinds of Web Spam. This paper shows an analysis of different kinds of Web Spam pages and identifies new elements that characterise it, to define heuristics which are able to partially detect them. We also discuss and explain several heuristics from the point of view of their effectiveness and computational efficiency. Taking them into account, we study several sets of heuristics and demonstrate how they improve the current results. Finally, we propose a new Web Spam detection system called SAAD (Spam Analyzer And Detector), which is based on the set of proposed heuristics and their use in a C4.5 classifier improved by means of Bagging and Boosting techniques. We have also tested our system in some well known Web Spam datasets and we have found it to be very effective. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Prieto, Victor M.; Alvarez, Manuel; Cacheda, Fidel] Univ A Coruna, Commun & Informat Technol Dept, La Coruna 15071, Spain.
C3 Universidade da Coruna
RP Prieto, VM (corresponding author), Univ A Coruna, Commun & Informat Technol Dept, Campus Elvia S-N, La Coruna 15071, Spain.
EM victor.prieto@udc.es
RI Cacheda, Fidel/L-8913-2014; Alvarez, Manuel/L-9574-2014
OI Cacheda, Fidel/0000-0002-6438-1661; Alvarez, Manuel/0000-0001-7204-2689
FU Xunta de Galicia [CN2012/211]; Ministry of Education and Science of
   Spain; FEDER funds of the European Union [TIN2009-14203]
FX This research was supported by Xunta de Galicia CN2012/211, the Ministry
   of Education and Science of Spain and FEDER funds of the European Union
   (Project TIN2009-14203).
CR Amitay E., 2003, Proceedings of the 14th ACM Conference on Hypertext and Hypermedia, P38
   [Anonymous], P SAC 02 17 ACM S AP
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], P 1 INT WORKSH ADV I
   [Anonymous], 2006, P 15 INT C WORLD WID, DOI [DOI 10.1145/1135777.1135794, 10.1145/1135777.1135794]
   [Anonymous], 2005, VLDB'05: Proceedings of the 31st international conference on Very large data bases
   Becchetti L, 2006, AIRWEB
   Chellapilla K., 2007, P 3 INT WORKSH ADV I, P81, DOI [10.1145/1244408.1244423, DOI 10.1145/1244408.1244423]
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Fetterly D., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P170, DOI 10.1145/1076034.1076066
   Fetterly D., 2004, P 7 INT WORKSHOP WEB, P1, DOI DOI 10.1145/1017074.1017077
   Gonzalez Jesus B.W, 2009, IMPLEMENTACION EVALU
   Gyongyi Z, 2004, 200425 STANF INFOLAB
   Henzinger M. R., 2002, SIGIR Forum, V36, P11, DOI 10.1145/792550.792553
   Jansen BJ, 2003, IC'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P65
   Kohavi R., 1995, P 14 INT JOINT C ART, P1137
   Najork M., 2005, US Patent, Patent No. [6,910,077, 6910077]
   Quinlan JR, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P725
   Sahami Mehran., 1998, LEARNING TEXT CATEGO
   Webb S., 2006, P 3 C EM ANTISPAM CE
   Wu B., 2005, WWW 05, P820
   Wu B., 2005, AIRWEB
   Yahoo!, 2011, WEB SPAM CHALL
   Zhang H, 2004, LECT NOTES COMPUT SC, V3243, P92
NR 24
TC 11
Z9 15
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2013
VL 86
IS 11
BP 2906
EP 2918
DI 10.1016/j.jss.2013.07.007
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224OQ
UT WOS:000324898300015
DA 2024-07-18
ER

PT J
AU Walker, M
   Reiser, MO
   Tucci-Piergiovanni, S
   Papadopoulos, Y
   Lönn, H
   Mraidha, C
   Parker, D
   Chen, DJ
   Servat, D
AF Walker, Martin
   Reiser, Mark-Oliver
   Tucci-Piergiovanni, Sara
   Papadopoulos, Yiannis
   Lonn, Henrik
   Mraidha, Chokri
   Parker, David
   Chen, Dejiu
   Servat, David
TI Automatic optimisation of system architectures using EAST-ADL
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-objective optimisation; Architectural description languages;
   Dependability Analysis; Timing Analysis
ID DESIGN; ALGORITHM; SOFTWARE
AB There are many challenges which face designers of complex system architectures, particularly safety-critical or real-time systems. The introduction of Architecture Description Languages (ADLs) has helped to meet these challenges by consolidating information about a system and providing a platform for modelling and analysis capabilities. However, managing this wealth of information can still be problematic, and evaluation of potential design decisions is still often performed manually. Automatic architectural optimisation can be used to assist this decision process, enabling designers to rapidly explore many different options and evaluate them according to specific criteria. In this paper, we present a multi-objective optimisation approach based on EAST-ADL, an ADL in the automotive domain, with the goal of combining the advantages of ADLs and architectural optimisation. The approach is designed to be extensible and leverages the capabilities of EAST-ADL to provide support for evaluation according to different factors, including dependability, timing/performance, and cost. The technique is applied to an illustrative example system featuring both hardware and software perspectives, demonstrating the potential benefits of this concept to the design of embedded system architectures. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Walker, Martin; Papadopoulos, Yiannis; Parker, David] Univ Hull, Kingston Upon Hull HU6 7RX, N Humberside, England.
   [Reiser, Mark-Oliver] Tech Univ Berlin, D-10587 Berlin, Germany.
   [Tucci-Piergiovanni, Sara; Mraidha, Chokri; Servat, David] CEA Saclay NanoINNOV, F-91191 Gif Sur Yvette, France.
   [Lonn, Henrik] Volvo Technol, Dept 6260, S-40508 Gothenburg, Sweden.
   [Chen, Dejiu] KTH Royal Inst Technol, S-10044 Stockholm, Sweden.
C3 University of Hull; Technical University of Berlin; Universite Paris
   Saclay; CEA; Volvo; Royal Institute of Technology
RP Walker, M (corresponding author), Univ Hull, Cottingham Rd, Kingston Upon Hull HU6 7RX, N Humberside, England.
EM martin.walker@hull.ac.uk; mark-oliver.reiser@tu-berlin.de;
   sara.tucci@cea.fr; y.i.papadopoulos@hull.ac.uk; henrik.lonn@volvo.com;
   chokri.mraidha@cea.fr; d.j.parker@hull.ac.uk; chen@md.kth.se;
   david.servat@cea.fr
RI som, nie/JFK-6681-2023; Chen, DeJiu/AAO-6363-2021; Tucci Piergiovanni,
   Sara/H-5172-2013
OI Chen, DeJiu/0000-0001-7048-0108; Tucci Piergiovanni,
   Sara/0000-0001-9738-9021; Papadopoulos, Yiannis/0000-0001-7007-5153;
   Mraidha, Chokri/0000-0003-2993-5734; Walker, Martin/0000-0002-6793-3775
FU European Commission [260057]
FX The authors acknowledge the financial support provided by the European
   Commission (call FP7-2010-ICT-GC, Grant Agreement Number 260057).
CR Abele Andreas, 2012, ACM International Conference Proceeding Series, V2, P246
   Adachi M., 2011, SOFTWARE PRACTICE EX, DOI DOI 10.1002/SPE.104436
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, IEEE INT CONF AUTOM, P505, DOI 10.1109/ASE.2009.59
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], 2001, P EUROGEN 2001 EV ME
   [Anonymous], 2010, P WORKSH CAARS
   Anssi S., 2010, EMBEDDED REAL TIME S
   Bieber Pierre., 2004, BUILDING INFORM SOC, P505
   Bozzano M., 2007, International Journal on Software Tools for Technology Transfer, V9, P5, DOI 10.1007/s10009-006-0001-2
   Chen DJ, 2008, LECT NOTES COMPUT SC, V5219, P72, DOI 10.1007/978-3-540-87698-4_9
   Coit DW, 1996, COMPUT IND ENG, V30, P895, DOI 10.1016/0360-8352(96)00040-X
   Coit DW, 1996, IEEE T RELIAB, V45, P254, DOI 10.1109/24.510811
   Corne DW., 2002, P GEN EV COMP C GECC, P283, DOI [DOI 10.5555/2955239.2955289, 10.5555/2955239.2955289]
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Etemaadi R., 2012, P 8 EUR C MOD FDN AP
   Feiler P.H., 2007, CMUSEI2007TN04
   Grunske L, 2005, LECT NOTES COMPUT SC, V3489, P33
   Grunske L, 2007, LECT NOTES COMPUT SC, V4615, P188
   Joshi A., 2007, DSN 07 WORKSH ARCH D
   Kim HG, 2004, ADVANCED RELIABILITY MODELING, P237, DOI 10.1142/9789812702685_0031
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Koziolek A., 2011, P JOINT ACM SIGSOFT, P33, DOI DOI 10.1145/2000259.2000267
   Koziolek A., 2011, P 14 INT ACM SIGSOFT
   Kulturel-Konak S, 2003, IIE TRANS, V35, P515, DOI 10.1080/07408170390193044
   Liang YC, 2004, IEEE T RELIAB, V53, P417, DOI 10.1109/TR.2004.832816
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   Meedeniya Indika, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P229, DOI 10.1109/ISSRE.2010.19
   Meedeniya I., 2011, QOSAISARCS, P85
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Palencia JC, 1998, REAL TIM SYST SYMP P, P26, DOI 10.1109/REAL.1998.739728
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Papadopoulos Y, 2001, RELIAB ENG SYST SAFE, V71, P229, DOI 10.1016/S0951-8320(00)00076-4
   Papadopoulos Y, 2011, ENG FAIL ANAL, V18, P590, DOI 10.1016/j.engfailanal.2010.09.025
   Parker D., 2010, THESIS U HULL UK
   Selic B, 2000, COMPUTER, V33, P64, DOI 10.1109/2.846320
   Walker M, 2009, CONTROL ENG PRACT, V17, P1115, DOI 10.1016/j.conengprac.2008.10.003
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
NR 38
TC 34
Z9 35
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2013
VL 86
IS 10
BP 2467
EP 2487
DI 10.1016/j.jss.2013.04.001
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 220EF
UT WOS:000324564100002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Kuo, JY
   Huang, FC
   Ma, SP
   Fanjiang, YY
AF Kuo, Jong Yih
   Huang, Fu-Chu
   Ma, Shang-Pin
   Fanjiang, Yong-Yi
TI Applying hybrid learning approach to RoboCup's strategy
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE RoboCup; Case-based reasoning; Strategy; Genetic algorithm
AB RoboCup (Robot world cup tournament) soccer game is a competitive game that has become a popular research domain in recent years since it involves a complex system for the behavior of multiple agents. In this paper, a hybrid approach, case-based reasoning genetic algorithm (CBR-GA) is applied to the soccer game for providing better strategies. By using CBR-GA, the soccer robots can obtain the suitable strategies for different conditions and store the related experiences, which may be reused in the future. Rule-based reasoning (RBR) will be employed to create a new strategy for the soccer robots when CBR-GA cannot provide a suitable one. A multi-agent learning system, constructed by combining case-based reasoning genetic algorithm with RBR strategy (CGRS), is implemented on the latest WrightEagle simulation platform that is released in 2011. In the CGRS system, two kinds of agent, namely "coach agent" and "movement agent", are designed for the soccer game. The coach agent is responsible for deciding on the strategy goal and assigning tasks to the movement agents. Every movement agent will then execute its respective task for achieving the strategy goal. Better basic skills will facilitate the movement agents to execute more effectively the assigned tasks or plans; hence, many basic skills are designed for training the movement agents. To increase learning efficiency, the strategy cycle time is reduced with a suitable case base. To validate the effectiveness of the proposed approach, our soccer team played with the WrightEagle soccer team which has remained in the top two positions in simulation 2d in recent years. Our team gradually gets higher winning frequency in 50 rounds. Furthermore, a comparison experiment shows that the proposed approach has higher winning frequency than other methods including CBR-GA, CBR-RBR and RBR. Finally, the proposed approach is also found to have better learning mechanisms than other learning approaches in soccer game. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Kuo, Jong Yih] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Intelligent Syst Lab, Taipei, Taiwan.
   [Huang, Fu-Chu] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
   [Ma, Shang-Pin] Natl Taiwan Ocean Univ, Dept Comp Sci & Engn, Keelung, Taiwan.
   [Fanjiang, Yong-Yi] Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
C3 National Taipei University of Technology; National Taipei University of
   Technology; National Taiwan Ocean University; Fu Jen Catholic University
RP Huang, FC (corresponding author), Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
EM jykuo@ntut.edu.tw; t7599002@ntut.edu.tw
RI Ma, Shang-Pin/ABC-8834-2020
OI Ma, Shang-Pin/0000-0002-3317-5750
FU National Science Council [101-2221-E-027-066]
FX This work was supported by the National Science Council under grant
   number 101-2221-E-027-066.
CR Al-Jarrah M. A., 2010, INT J MODELING SIMUL, V30
   Brenner M, 2009, AUTON AGENT MULTI-AG, V19, P297, DOI 10.1007/s10458-009-9081-1
   Chen XP, 2009, AUTON AGENT MULTI-AG, V19, P245, DOI 10.1007/s10458-009-9077-x
   Ferreira PR, 2010, AUTON AGENT MULTI-AG, V20, P421, DOI 10.1007/s10458-009-9087-8
   Floyd M. W., 2010, WORKSH CAS BAS REAS, P55
   GHOSHRAY S, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON SYSTEMS, MAN AND CYBERNETICS, VOLS 1-5, P4515, DOI 10.1109/ICSMC.1995.538506
   Isern D, 2011, J SYST SOFTWARE, V84, P169, DOI 10.1016/j.jss.2010.09.005
   Jadhav AS, 2011, J SYST SOFTWARE, V84, P1394, DOI 10.1016/j.jss.2011.03.034
   Kamphorst B., 2009, ESAW
   Kuo J. Y., 2010, INTELL AUTOM SOFT CO, V17, P1
   Kwok C, 2004, IEEE RSJ INT C INT R
   Lai CA, 2007, CIS WORKSHOPS 2007: INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY WORKSHOPS, P144
   Makar R., 2001, 5 INT C AUT AG
   Marling C, 2002, AI MAG, V23, P69
   Mericli C., 2010, 9 INT C AUT AG MULT, P1513
   Meriçli Ç, 2011, INT J ADV ROBOT SYST, V8, P68
   Nakashima T, 2004, IEEE SYS MAN CYBERN, P2023
   Ni ZW, 2003, 2003 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-5, PROCEEDINGS, P1845, DOI 10.1109/ICMLC.2003.1259797
   Panait L, 2005, AUTON AGENT MULTI-AG, V11, P387, DOI 10.1007/s10458-005-2631-2
   Phuong NH, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P883, DOI 10.1109/NAFIPS.2001.944721
   Schank R. C., 1982, Dynamic memory: A theory of reminding and learning
   Sean L., 1998, 1 INT WORKSH ROBOCUP, P115
   Sniezynski B., 2009, SUPERVISED RULE LEAR
   Srinivasan T., 2006, INT C COMP INT MOD C, P113
   Swaminathan A, 1996, IEEE T ROBOTIC AUTOM, V12, P252, DOI 10.1109/70.488945
   Takahashi Y., 2003, P SICE ANN C, P2937
   Ueda R, 2007, IEEE INT CONF ROBOT, P1, DOI 10.1109/ROBOT.2007.363756
   VASUDEVAN C, 1994, PROC INT C TOOLS ART, P624, DOI 10.1109/TAI.1994.346435
   Walsh TJ, 2009, AUTON AGENT MULTI-AG, V18, P83, DOI 10.1007/s10458-008-9056-7
   Weber B, 2004, LECT NOTES COMPUT SC, V3155, P434
NR 30
TC 4
Z9 5
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2013
VL 86
IS 7
BP 1933
EP 1944
DI 10.1016/j.jss.2013.03.031
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 156TU
UT WOS:000319847600018
DA 2024-07-18
ER

PT J
AU Yang, LH
   Zhou, J
   Gong, WH
   Zhao, JK
   Chen, LJ
AF Yang, Liang Huai
   Zhou, Jian
   Gong, Weihua
   Zhao, Jiakui
   Chen, Lijun
TI Lifetime and QoS-aware energy-saving buffering schemes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Energy conservation; Heterogeneous drive; Replacement policy; Buffering
   scheme; QoS
ID WEB; MANAGEMENT; POLICIES; LOCALITY
AB The heterogeneous drive (HDrive), which combines solid-state disk (SSD) and HOD, brings opportunity for energy-saving and has received extensive attention recently. This paper focuses on the file buffering schemes and adaptive disk power management (DPM) scheme for HDrive. As for the first issue, we propose a frequency-energy based replacement (FEBR) scheme based on an energy-cost model; as for the second issue, we present a sliding-window based adaptive DPM scheme by taking the HDD's lifetime into account. To make the trade-off among performance, HDD's lifetime and energy-saving, we contrive a QoS-aware DPM scheme. With extensive experiments on four real-world traces, we have evaluated the effectiveness of existing replacement schemes on energy-efficiency, performance, and HDD's lifetime and compare with our proposed schemes. The experimental results have demonstrated that energy-saving in HDrive is feasible and can reach as high as 60-80%, and that FBR and its variant FEBR, and GDS are the best ones among all those online schemes evaluated while FEBR has some advantage over FBR and GDS on the whole. The results have also revealed that our proposed adaptive sliding-window-based DPM scheme can effectively control the disk's lifetime and the QoS-aware DPM scheme works well in making tradeoffs among performance, HDD's lifetime and energy-saving. (c) 2013 Elsevier Inc. All rights reserved.
C1 [Yang, Liang Huai; Zhou, Jian; Gong, Weihua] Zhejiang Univ Technol, Sch Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Yang, Liang Huai; Zhou, Jian; Gong, Weihua] Key Lab Visual Media Intelligent Proc Technol Zhe, Hangzhou, Zhejiang, Peoples R China.
   [Zhao, Jiakui] State Grid Elect Power Res Inst, Beijing, Peoples R China.
   [Chen, Lijun] Peking Univ, Sch Informat Sci & Technol, Beijing 100871, Peoples R China.
C3 Zhejiang University of Technology; State Grid Corporation of China;
   Peking University
RP Yang, LH (corresponding author), Zhejiang Univ Technol, Sch Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
EM yang.lianghuai@gmail.com
RI Zhou, Jian/M-2461-2018
OI Zhou, Jian/0000-0003-4769-4487; Yang, Liang Huai/0000-0002-4297-4845
FU National Natural Science Foundation of China [61070042]; Zhejiang
   Provincial Natural Science Foundation [Y1090096, Y13F020114]
FX This work was supported by National Natural Science Foundation of China
   (Grant No. 61070042) and Zhejiang Provincial Natural Science Foundation
   (Grant No. Y1090096 and Y13F020114).
CR Albers S, 1999, PROCEEDINGS OF THE TENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P31
   [Anonymous], 2009, P 1 WORKSH INT SOL S
   [Anonymous], 1998, Online computation and competitive analysis
   [Anonymous], MATH PROBLEMS ENG
   Arlitt M, 2000, PERF E R SI, V27, P3, DOI [10.1145/362883.362920, 10.1145/346000.346003]
   BAKER M, 1992, SIGPLAN NOTICES, V27, P10, DOI 10.1145/143371.143380
   Balamash A, 2004, IEEE COMMUN SURV TUT, V6, P44, DOI 10.1109/COMST.2004.5342239
   Bansal S, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P187
   BELADY LA, 1966, IBM SYST J, V5, P78, DOI 10.1147/sj.52.0078
   Bisson T., 2005, P REAL TIM EMB TECHN, P1
   Bisson T, 2007, 24TH IEEE CONFERENCE ON MASS STORAGE SYSTEMS AND TECHNOLOGIES, PROCEEDINGS, P299, DOI 10.1109/MSST.2007.4367989
   Cao P, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P193
   Cao P, 1996, ACM T COMPUT SYST, V14, P311, DOI 10.1145/235543.235544
   Choi J, 2000, PERF E R SI, V28, P286, DOI 10.1145/345063.339424
   Choi J, 1998, INTERNATIONAL WORKSHOP ON MULTI-MEDIA DATABASE MANAGEMENT SYSTEMS- PROCEEDINGS, P172, DOI 10.1109/MMDBMS.1998.709780
   CHROBAK M, 1991, SIAM J DISCRETE MATH, V4, P172, DOI 10.1137/0404017
   Chrobak M, 2010, LECT NOTES COMPUT SC, V6346, P195, DOI 10.1007/978-3-642-15775-2_17
   Colarelli Dennis., 2002, SUPERCOMPUTING 02, P1, DOI DOI 10.1109/SC.2002.10058
   Corbato F.J., 1969, PAGING EXPT MULTICS, P217
   Deng YH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922660
   Denning PJ, 2005, COMMUN ACM, V48, P19, DOI 10.1145/1070838.1070856
   Do Jaeyoung., 2011, Proceedings of the 2011 ACM SIGMOD International Conference on Management of data, SIGMOD '11, P1113, DOI DOI 10.1145/1989323.1989442
   DOUGLIS FRED., 1994, USENIX Winter 1994 Technical Conference, San Francisco, California, January 17-21, 1994, Conference Proceedings, P292
   EFFELSBERG W, 1984, ACM T DATABASE SYST, V9, P560, DOI 10.1145/1994.2022
   Epstein L, 2011, LECT NOTES COMPUT SC, V6755, P195, DOI 10.1007/978-3-642-22006-7_17
   Geer D, 2005, COMPUTER, V38, P11, DOI 10.1109/MC.2005.160
   Glass G., 1997, Performance Evaluation Review, V25, P115, DOI 10.1145/258623.258681
   Graefe G, 2009, COMMUN ACM, V52, P48, DOI 10.1145/1538788.1538805
   Greenawalt P., 1994, WORKSH MOD AN SIM CO, P62
   Hong-Tai Chou, 1985, Very Large Data Bases. Proceedings of the Eleventh International Conference, P127
   HSIEH JW, 2007, P ACM IEEE INT S LOW, P334
   Irani S., 1997, PROC 29 ANN ACM S TH, P701
   Jiang S, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P323
   Jiang Song., 2002, Proceedings of the International Conference on Measurement and Modeling of Computer Systems, P31
   Jin S., 1999, Proceedings of ICDCS, P254
   Johnson T., 1994, P 20 INT C VER LARG, P439
   KEARNS JP, 1989, PERF E R SI, V17, P11, DOI 10.1145/75372.75374
   KEARNS JP, 1983, IEEE T SOFTWARE ENG, V9, P128, DOI 10.1109/TSE.1983.236457
   Kgil T, 2008, CONF PROC INT SYMP C, P327, DOI 10.1109/ISCA.2008.32
   Kgil Taeho., 2006, P 2006 INT C COMPILE, P103, DOI DOI 10.1145/1176760.1176774
   Kim JM, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P119
   Kim Y.-J., 2006, 6 ACM IEEE INT C EMB, P171
   Koltsidas I, 2008, PROC VLDB ENDOW, V1, P514, DOI 10.14778/1453856.1453913
   Lee D, 2001, IEEE T COMPUT, V50, P1352, DOI 10.1109/tc.2001.970573
   Lee S.W., 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, SIGMOD '08, P1075
   Leventhal A, 2008, COMMUN ACM, V51, P47, DOI 10.1145/1364782.1364796
   LI K, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P279
   Li M, 2010, IEEE T PARALL DISTR, V21, P1368, DOI 10.1109/TPDS.2009.162
   Liu S., 2010, P ACM S APPL COMP, P251
   LUOTONEN A, 1994, COMPUT NETWORKS ISDN, V27, P147, DOI 10.1016/0169-7552(94)90128-7
   Marsh B., 1994, Proceedings of the Twenty-Seventh Hawaii Internation Conference on System Sciences Vol. I: Architecture (Cat. No.94TH0607-2), P451, DOI 10.1109/HICSS.1994.323153
   MATTSON RL, 1970, IBM SYST J, V9, P78, DOI 10.1147/sj.92.0078
   Megiddo N, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST'03), P115
   Narayanan D, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P145
   Nicola V. F., 1992, Performance Evaluation Review, V20, P35, DOI 10.1145/149439.133084
   O'Neil E. J., 1993, SIGMOD Record, V22, P297, DOI 10.1145/170036.170081
   Pinheiro E., 2004, INT C SUPERCOMPUTING, P68, DOI DOI 10.1145/1006209.1006220
   Podlipnig S, 2003, ACM COMPUT SURV, V35, P374, DOI 10.1145/954339.954341
   Roberts D, 2009, COMMUN ACM, V52, P98, DOI 10.1145/1498765.1498791
   ROBINSON JT, 1990, PERF E R SI, V18, P134, DOI 10.1145/98460.98523
   Sacco G. M., 1987, Proceedings of the Thirteenth International Conference on Very Large Data Bases: 1987 13th VLDB, P301
   SACCO GM, 1986, ACM T DATABASE SYST, V11, P473, DOI 10.1145/7239.7336
   Smaragdakis Y, 1999, PERFORMANCE EVALUATION REVIEW, SPECIAL ISSUE, VOL 27 NO 1, JUNE 1999, P122, DOI 10.1145/301464.301486
   Tseng HW, 2006, ISLPED '06: PROCEEDINGS OF THE 2006 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P418, DOI 10.1109/LPE.2006.4271879
   Williams S., 1996, Computer Communication Review, V26, P293, DOI 10.1145/248157.248182
   Willick D. L., 1993, Proceedings the 13th International Conference on Distributed Computing Systems (Cat. No.93CH3282-1), P2, DOI 10.1109/ICDCS.1993.287729
   Wong KY, 2006, IEEE NETWORK, V20, P28, DOI 10.1109/MNET.2006.1580916
   YOUNG N, 1994, ALGORITHMICA, V11, P525, DOI 10.1007/BF01189992
   Young NE, 2002, ALGORITHMICA, V33, P371, DOI 10.1007/s00453-001-0124-5
   Zhou YY, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P91
NR 70
TC 1
Z9 1
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2013
VL 86
IS 5
BP 1408
EP 1425
DI 10.1016/j.jss.2013.01.014
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122MO
UT WOS:000317322400018
DA 2024-07-18
ER

PT J
AU Potena, P
AF Potena, Pasqualina
TI Optimization of adaptation plans for a service-oriented architecture
   with cost, reliability, availability and performance tradeoff
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Selecting adaptation plans; Software cost; Software reliability;
   Software performance; Optimization model
ID SOFTWARE; PREDICTION; QUALITY; DESIGN; MODEL
AB A service-based system may require adaptation for several reasons, such as service evolution (e.g., a new version may be available), hardware volatility (e.g., network quality changes), and varying user demands and new requirements (e.g., a new functionality or a different level of quality of service). Therefore, it is suitable to dynamically adapt a service-based system in an automated manner. However, service adaptations often do not consider software quality attributes and, if they do, they relay on a single attribute in isolation. In this paper, we present an optimization model, which aims to minimize the adaptation costs of a Service-Oriented Architecture (SOA), in correspondence with a certain change scenario (i.e., a set of new requirements) under reliability, availability and performance tradeoff. The model predicts the quality of the new SOA obtained by changing both its structure and behavior. Specifically, it suggests how to replace existing services with available instances and/or adding new services, and how to remove or introduce interaction(s) between existing services and/or new services. We show how our model works on a smartphone mobile application example, and through the sensitivity analysis we highlight its potential to drive architectural decisions. (C) 2012 Elsevier Inc. All rights reserved.
C1 Univ Bergamo, Dipartimento Ingn, I-24044 Dalmine, BG, Italy.
C3 University of Bergamo
RP Potena, P (corresponding author), Univ Bergamo, Dipartimento Ingn, Viale Marconi 5, I-24044 Dalmine, BG, Italy.
EM pasqualina.potena@unibg.it
CR Andre F., 2010, P 5 INT C INT WEB AP
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], SOFTWARE ENG MULTIAG
   [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web, DOI DOI 10.1016/J.WEBSEM.2004.03.001
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bass L., 2001, International Workshop on Software Product-Family Engineering, P169, DOI DOI 10.21236/ADA469332
   Becker S., 2004, ARCHITECTING SYSTEMS, P169
   Bhattacharya S, 2007, ICCBSS 2007: SIXTH INTERNATIONAL IEEE CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS)-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P41
   Boehm BW., 1981, Software Engineering Economics
   Bucchiarone A, 2010, LECT NOTES COMPUT SC, V6275, P467
   Calinescu R, 2009, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.2009.5070512
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Cardellini V, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Chiu D, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P655, DOI 10.1109/ICWS.2009.36
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4829, P97
   Cortellessa V, 2006, LECT NOTES COMPUT SC, V4344, P66
   Cortellessa V, 2010, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2010.15
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Fox Jorge, 2009, P 3 INT DISCCOTEC WO, P19
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Guo HP, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P280
   Harney J, 2006, LECT NOTES COMPUT SC, V4294, P179
   He Q., 2008, ICSOC
   Ibrahim N., 2012, ABS09092183 CORR
   Ibrahim N, 2009, INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES (ICPS 2009), P1
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Jae young Bang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P243, DOI 10.1145/1810295.1810341
   Jung HW, 1999, EUR J OPER RES, V112, P613, DOI 10.1016/S0377-2217(98)00169-6
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kim S, 2009, J SYST SOFTWARE, V82, P1211, DOI 10.1016/j.jss.2009.03.102
   Martens A., 2010, P WOSP SIPEW
   Mirandola R., 2010, Proceedings of the 12th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC 2010), P493, DOI 10.1109/SYNASC.2010.16
   Mohamed A, 2008, REQUIR ENG, V13, P147, DOI 10.1007/s00766-008-0062-8
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Oh M, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P605, DOI 10.1109/ICIS.2008.8
   Rao J., 2004, P 1 INT WORKSHOP SEM, P43, DOI DOI 10.1007/978-3-540-30581-1_5
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Rosenberg Florian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P97, DOI 10.1109/SCC.2010.58
   Rosenberg F, 2009, IEEE INT ENTERP DIST, P151, DOI 10.1109/EDOC.2009.14
   Roshandel R, 2007, LECT NOTES COMPUT SC, V4880, P108
   Shan Tang, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P369, DOI 10.1109/COMPSAC.2008.13
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Wattanapongsakorn N, 2007, RELIAB ENG SYST SAFE, V92, P395, DOI 10.1016/j.ress.2005.12.011
   WOSP, 1998, WOSP P INT WORKSH SO
   Yang J, 2009, J SYST SOFTWARE, V82, P319, DOI 10.1016/j.jss.2008.06.039
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 49
TC 14
Z9 17
U1 0
U2 30
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2013
VL 86
IS 3
BP 624
EP 648
DI 10.1016/j.jss.2012.10.929
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090XN
UT WOS:000315013400004
DA 2024-07-18
ER

PT J
AU Chang, CC
   Nguyen, TS
   Lin, CC
AF Chang, Chin-Chen
   Thai Son Nguyen
   Lin, Chia-Chen
TI A novel VQ-based reversible data hiding scheme by using hybrid encoding
   strategies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE VQ; Image compression; SOC; SMVQ; Lossless compression; Reversible data
   hiding
ID INDEX TABLE; ALGORITHM; IMAGES
AB Reversible data hiding is a special algorithm that not only guarantees the confidential data will be extracted accurately but also allows the original cover image to be reconstructed without distortion after the confidential data are completely extracted. This paper proposes a new index compression and reversible data hiding scheme based on side-match vector quantization (SMVQ) and search order coding (SOC). In this proposed scheme, the confidential data are embedded into the transformed index table of a cover image. During the extracting phase, simple steps are employed to extract the confidential data and reconstruct the original cover image. The experimental results show that with a codebook size of 256, the average compression rate of the proposed scheme is 0.325 bpp, which is superior to that of the methods proposed by Chen and Huang (0.426 bpp) and Chang et al. (0.429 bpp). Additionally, the embedding and extracting times of our scheme are 5.491 s and 0.352 s, respectively, demonstrating that the execution time of the proposed scheme is much faster than that of the methods of Chen and Huang and Chang et al. Moreover, our scheme achieves better performance than other selected reversible data hiding schemes with respect to the data embedding and data compression rates. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Chang, Chin-Chen; Thai Son Nguyen] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
   [Chang, Chin-Chen] China Med Univ, Dept Biomed Imaging & Radiol Sci, Taichung 40402, Taiwan.
   [Lin, Chia-Chen] Providence Univ, Dept Comp Sci & Informat Management, Taichung 43301, Taiwan.
   [Chang, Chin-Chen] Asia Univ, Dept Comp Sci & Informat Engn, Taichung 41354, Taiwan.
C3 Feng Chia University; China Medical University Taiwan; Providence
   University - Taiwan; Asia University Taiwan
RP Lin, CC (corresponding author), Providence Univ, Dept Comp Sci & Informat Management, 200 Chung Chi Rd, Taichung 43301, Taiwan.
EM thaison@tvu.edu.vn; mhlin3@pu.edu.tw
RI Nguyen, Thai-Son/AGD-3594-2022; Chang, Ching-Chun/JAN-6210-2023
OI Nguyen, Thai-Son/0000-0001-7008-0462; Lin, Chia-Chen/0000-0003-4480-7351
CR Alattar AM, 2004, IEEE T IMAGE PROCESS, V13, P1147, DOI 10.1109/TIP.2004.828418
   Celik MU, 2002, 2002 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P157
   Chang CC, 2004, PATTERN RECOGN LETT, V25, P1253, DOI 10.1016/j.patrec.2004.04.003
   Chang CC, 2007, J VIS COMMUN IMAGE R, V18, P207, DOI 10.1016/j.jvcir.2006.11.005
   Chao CW, 1996, PIMRC'96 - THE SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR AND MOBILE RADIO COMMUNICATIONS, PROCEEDINGS, VOLS 1-3, P987, DOI 10.1109/PIMRC.1996.568429
   Chen PY, 2003, IEEE T CONSUM ELECTR, V49, P1513, DOI 10.1109/TCE.2003.1261261
   Chen WJ, 2009, DIGIT SIGNAL PROCESS, V19, P433, DOI 10.1016/j.dsp.2008.11.003
   Davis R. M., 1978, IEEE Communications Society Magazine, V16, P5, DOI 10.1109/MCOM.1978.1089771
   Fridrich J, 2002, EURASIP J APPL SIG P, V2002, P185, DOI 10.1155/S1110865702000537
   Gersho A., 2003, Vector Quantization and Signal Compression
   Gray R. M., 1984, IEEE ASSP Magazine, V1, P4, DOI 10.1109/MASSP.1984.1162229
   Hsieh CH, 1996, IEEE T IMAGE PROCESS, V5, P1579, DOI 10.1109/83.541428
   Kim TJ, 1992, IEEE T IMAGE PROCESS, V1, P170, DOI 10.1109/83.136594
   Lee CF, 2010, IMAGE VISION COMPUT, V28, P1293, DOI 10.1016/j.imavis.2010.01.006
   Lin Chih Yang, 2006, J COMPUT, V17, P3
   LINDE Y, 1980, IEEE T COMMUN, V28, P84, DOI 10.1109/TCOM.1980.1094577
   Mielikainen J, 2006, IEEE SIGNAL PROC LET, V13, P285, DOI 10.1109/LSP.2006.870357
   NASRABADI NM, 1988, IEEE T COMMUN, V36, P957, DOI 10.1109/26.3776
   Ni ZC, 2006, IEEE T CIRC SYST VID, V16, P354, DOI 10.1109/TCSVT.2006.869964
   RIVEST RL, 1978, COMMUN ACM, V21, P120, DOI [10.1145/359340.359342, 10.1145/357980.358017]
   Shie SC, 2010, INFORM PROCESS MANAG, V46, P495, DOI 10.1016/j.ipm.2009.07.001
   Thien CC, 2003, PATTERN RECOGN, V36, P2875, DOI 10.1016/S0031-3203(03)00221-8
   Tian J, 2003, IEEE T CIRC SYST VID, V13, P890, DOI 10.1109/TCSVT.2003.815962
   Wang John, 2008, International Journal of Information and Decision Sciences, V1, P1
   Wang RZ, 2001, PATTERN RECOGN, V34, P671, DOI 10.1016/S0031-3203(00)00015-7
   Wang RZ, 2000, ELECTRON LETT, V36, P2069, DOI 10.1049/el:20001429
   Yang B, 2005, Proceedings of the Fifth IASTED International Conference on Visualization, Imaging, and Image Processing, P298
   Yang CH, 2009, J VIS COMMUN IMAGE R, V20, P399, DOI 10.1016/j.jvcir.2009.04.001
   Zhang XP, 2005, IEEE SIGNAL PROC LET, V12, P67, DOI 10.1109/LSP.2004.838214
NR 29
TC 35
Z9 36
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2013
VL 86
IS 2
BP 389
EP 402
DI 10.1016/j.jss.2012.09.001
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 071NI
UT WOS:000313600700011
DA 2024-07-18
ER

PT J
AU Kan, EYY
   Chan, WK
   Tse, TH
AF Kan, Edward Y. Y.
   Chan, W. K.
   Tse, T. H.
TI <i>EClass</i>: An execution classification approach to improving the
   energy-efficiency of software via machine learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE DVFS; Workload prediction; Energy optimization; Energy saving; Machine
   learning
ID POWER MANAGEMENT; AWARE; DVFS
AB Energy efficiency at the software level has gained much attention in the past decade. This paper presents a performance-aware frequency assignment algorithm for reducing processor energy consumption using Dynamic Voltage and Frequency Scaling (DVFS). Existing energy-saving techniques often rely on simplified predictions or domain knowledge to extract energy savings for specialized software (such as multimedia or mobile applications) or hardware (such as NPU or sensor nodes). We present an innovative framework, known as EClass, for general-purpose DVFS processors by recognizing short and repetitive utilization patterns efficiently using machine learning. Our algorithm is lightweight and can save up to 52.9% of the energy consumption compared with the classical PAST algorithm. It achieves an average savings of 9.1% when compared with an existing online learning algorithm that also utilizes the statistics from the current execution only. We have simulated the algorithms on a cycle-accurate power simulator. Experimental results show that EClass can effectively save energy for real life applications that exhibit mixed CPU utilization patterns during executions. Our research challenges an assumption among previous work in the research community that a simple and efficient heuristic should be used to adjust the processor frequency online. Our empirical result shows that the use of an advanced algorithm such as machine learning can not only compensate for the energy needed to run such an algorithm, but also outperforms prior techniques based on the above assumption. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Kan, Edward Y. Y.; Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
C3 City University of Hong Kong; University of Hong Kong
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Hong Kong, Hong Kong, Peoples R China.
EM yyekan@cs.hku.hk; wkchan@cityu.edu.hk; thtse@cs.hku.hk
RI Tse, T.H./C-6590-2008; Chan, Wah Kheong/AGA-6636-2022; Kan,
   Edward/JFJ-3486-2023
OI Tse, T.H./0000-0002-0460-8377; Chan, Wah Kheong/0000-0002-9105-5837;
   Chan, Wing Kwong/0000-0001-7726-6235
FU Council of Hong Kong [111410, 717811]; City University of Hong Kong
   [7002673]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (project numbers 111410 and 717811)
   and a Strategic Research Grant of City University of Hong Kong (project
   number 7002673).
CR Albers S, 2010, COMMUN ACM, V53, P86, DOI 10.1145/1735223.1735245
   Alimonda A, 2009, IEEE T COMPUT AID D, V28, P1691, DOI 10.1109/TCAD.2009.2030439
   [Anonymous], 2008, P NSDI 08 P 5 USENIX
   [Anonymous], 2003, WAS SYST GNU TOOLS V
   [Anonymous], 2010, Elementary Linear Algebra
   [Anonymous], WEK 3 DAT MIN SOFTW
   Baek W, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P198, DOI 10.1145/1806596.1806620
   Berten V, 2009, IEEE INT CONF EMBED, P181, DOI 10.1109/RTCSA.2009.27
   Bertini L, 2010, J SYST SOFTWARE, V83, P585, DOI 10.1016/j.jss.2009.10.040
   Burd T. D., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P288, DOI 10.1109/HICSS.1995.375385
   Chen JJ, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P28, DOI 10.1109/RTCSA.2007.37
   Choi K, 2004, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, VOLS 1 AND 2, PROCEEDINGS, P4, DOI 10.1109/DATE.2004.1268819
   Contreras G, 2005, ISLPED '05: Proceedings of the 2005 International Symposium on Low Power Electronics and Design, P221, DOI 10.1109/LPE.2005.195518
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Dhiman G., 2007, 2007 International Symposium on Low Power Electronics and Design - ISLPED, P207, DOI 10.1145/1283780.1283825
   Grunwald Dirk., 2000, Proceedings of the 4th conference on Symposium on Operating System Design Implementation - Volume 4, OSDI'00, V4, P6
   Herczeg Z., 2009, J EMBEDDED COMPUTING, V3, P209, DOI DOI 10.3233/JEC-2009-0093
   Huang H., 2003, USENIX Annual Technical Conference, P5
   INTEL CORP, 2004, INT XSCALE COR DEV M
   Kan E. Y. Y., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P473, DOI 10.1109/QSIC.2010.59
   Kim J, 2011, IEEE T COMPUT AID D, V30, P110, DOI 10.1109/TCAD.2010.2068630
   Li YF, 2006, IEEE INT C NETW SENS, P528
   Lin Caixue., 2005, RTSS 05, P410
   Liu XT, 2008, IEEE T MOBILE COMPUT, V7, P995, DOI 10.1109/TMC.2007.70767
   Misra S, 2010, J SYST SOFTWARE, V83, P2188, DOI 10.1016/j.jss.2010.06.025
   Rangan KK, 2009, CONF PROC INT SYMP C, P302, DOI 10.1145/1555815.1555793
   Rizvandi NB, 2011, J PARALLEL DISTR COM, V71, P1154, DOI 10.1016/j.jpdc.2011.01.004
   Shaobo Liu, 2010, Proceedings of the 16th ACM/IEEE International Symposium on Low Power Electronics and Design (ISLPED 2010), P325
   Srikantaiah S, 2008, USENIX HOTPOWER 08 W, V12, P1
   Teodorescu R, 2008, CONF PROC INT SYMP C, P363, DOI 10.1109/ISCA.2008.40
   Tiwari V., 1994, IEEE Transactions on Very Large Scale Integration (VLSI) Systems, V2, P437, DOI 10.1109/92.335012
   Wang M, 2010, J SYST SOFTWARE, V83, P772, DOI 10.1016/j.jss.2009.11.727
   Weiser M., 1994, P 1 USENIX S OP SYST
   Wu SL, 2011, J SYST SOFTWARE, V84, P1022, DOI 10.1016/j.jss.2011.01.050
   Zhao BX, 2008, PR IEEE COMP DESIGN, P633, DOI 10.1109/ICCD.2008.4751927
   [No title captured]
NR 36
TC 11
Z9 12
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2012
VL 85
IS 4
BP 960
EP 973
DI 10.1016/j.jss.2011.11.1010
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910IP
UT WOS:000301630700015
DA 2024-07-18
ER

PT J
AU Spinellis, D
   Giannikas, V
AF Spinellis, Diomidis
   Giannikas, Vaggelis
TI Organizational adoption of open source software
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Open source software; Technology adoption; Industrial practice
ID INFORMATION-TECHNOLOGY; EMPIRICAL-EXAMINATION; USER ACCEPTANCE;
   INNOVATION; PRODUCTIVITY; DIFFUSION; SYSTEMS; MODEL; DETERMINANTS;
   PROPRIETARY
AB Organizations and individuals can use open source software (OSS) for free, they can study its internal workings, and they can even fix it or modify it to make it suit their particular needs. These attributes make OSS an enticing technological choice for a company. Unfortunately, because most enterprises view technology as a proprietary differentiating element of their operation, little is known about the extent of OSS adoption in industry and the key drivers behind adoption decisions. In this article we examine factors and behaviors associated with the adoption of OSS and provide empirical findings through data gathered from the US Fortune-1000 companies. The data come from each company's web browsing and serving activities, gathered by sifting through more than 278 million web server log records and analyzing the results of thousands of network probes. We show that the adoption of OSS in large US companies is significant and is increasing over time through a low-churn transition, advancing from applications to platforms. Its adoption is a pragmatic decision influenced by network effects. It is likelier in larger organizations and those with many less productive employees, and is associated with IT and knowledge-intensive work and operating efficiencies. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, GR-10434 Athens, Greece.
   [Giannikas, Vaggelis] Univ Cambridge, Inst Mfg, Cambridge CB3 0FS, England.
C3 Athens University of Economics & Business; University of Cambridge
RP Spinellis, D (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Patis 76, GR-10434 Athens, Greece.
EM dds@aueb.gr; eg366@cam.ac.uk
RI Giannikas, Vaggelis/AAZ-5781-2020; Spinellis, Diomidis/E-3600-2010
OI Giannikas, Vaggelis/0000-0002-5762-5488; Spinellis,
   Diomidis/0000-0003-4231-1897
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Andersen K.V., 2006, HAW INT C SYST SCI, V8, p195c
   [Anonymous], 2003, Diffusion of Innovations
   [Anonymous], 2010, The Economist
   [Anonymous], 2004, SUCCESS OPEN SOURCE
   [Anonymous], 1 MONDAY
   [Anonymous], KNOWLEDGE TECHNOLOGY
   [Anonymous], J BUSINESS CASE STUD
   [Anonymous], 2004, The business of software: What every manager, programmer, and entrepreneur must know to thrive and survive in good times and bad
   ATTEWELL P, 1992, ORGAN SCI, V3, P1, DOI 10.1287/orsc.3.1.1
   AUPPERLE KE, 1985, ACAD MANAGE J, V28, P446, DOI 10.5465/256210
   Bayo-Moriones A, 2007, TECHNOVATION, V27, P352, DOI 10.1016/j.technovation.2007.01.003
   Bessen J, 2002, REV ECON DYNAM, V5, P443, DOI 10.1006/redy.2001.0152
   Boehm B., 2004, BALANCING AGILITY DI
   Bresnahan TF, 2002, Q J ECON, V117, P339, DOI 10.1162/003355302753399526
   BRYNJOLFSSON E, 1993, COMMUN ACM, V36, P67, DOI 10.1145/163298.163309
   Brynjolfsson E., 1996, ADV COMPUT, V43, P179, DOI DOI 10.1016/S0065-2458(08)60644-0
   Carr NG, 2003, HARVARD BUS REV, V81, P41
   Casadesus-Masanell R, 2006, MANAGE SCI, V52, P1072, DOI 10.1287/mnsc.1060.0548
   CHRISTENSEN CM, 1995, RES POLICY, V24, P233, DOI 10.1016/0048-7333(93)00764-K
   CHURCH J, 1992, J IND ECON, V40, P85, DOI 10.2307/2950628
   CLARKSON MBE, 1995, ACAD MANAGE REV, V20, P92, DOI 10.2307/258888
   Coar K., 2006, OPEN SOURCE DEFINITI
   COHEN WM, 1989, ECON J, V99, P569, DOI 10.2307/2233763
   COMPEAU DR, 1995, MIS QUART, V19, P189, DOI 10.2307/249688
   Cordero Ros J.M., 2021, EMODNET OPEN C
   DAMANPOUR F, 1992, ORGAN STUD, V13, P375, DOI 10.1177/017084069201300304
   Davies S., 1975, DIFFUSION PROCESS IN
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dedrick J., 2003, STANDARD MAKING CRIT, P236
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1981, MIS QUART, V5, P65, DOI 10.2307/249328
   Deshpande A, 2008, INT FED INFO PROC, V275, P197
   Deusen P.C., 2003, 5 ANN FOR INV AN S, P203
   Dick A.S., 1994, J ACAD MARKET SCI, V22, P99, DOI [DOI 10.1177/0092070394222001, 10.1177/0092070394222001]
   DUNNE T, 1994, RAND J ECON, V25, P488, DOI 10.2307/2555774
   E-Soft Inc, 2009, WEB SERV SURV
   E-Soft Inc, 2007, MAIL MX SERV SURV
   Economides N, 2006, MANAGE SCI, V52, P1057, DOI 10.1287/mnsc.1060.0549
   Feller J., 2001, UNDERSTANDING OPEN S
   Fichman R.G., 2000, FRAMING DOMAINS IT M, P105
   FICHMAN RG, 1993, SLOAN MANAGE REV, V34, P7
   Fichman RG, 1999, INFORM SYST RES, V10, P255, DOI 10.1287/isre.10.3.255
   Fitzgerald B., 2004, 24 INT C INF SYST, P316
   Forrester, 2008, OPEN SOURCE PAVES WA
   Gallaugher JM, 2002, MIS QUART, V26, P303, DOI 10.2307/4132311
   Gallivan M. J., 2001, Data Base for Advances in Information Systems, V32, P51
   Gamma E., 2004, CONTRIBUTING ECLIPSE
   Gay Joshua, 2002, Free Software Free Society: Selected Essays of Richard M. Stallman
   Geiszler D.A., 2004, 20 C WEATH AN FOR 16, P19
   Glynn E, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P217, DOI 10.1109/ISESE.2005.1541831
   Goldman R., 2005, INNOVATION HAPPENS E, P111
   Gowrisankaran G, 2004, RAND J ECON, V35, P260, DOI 10.2307/1593691
   HANNAN TH, 1984, RAND J ECON, V15, P328, DOI 10.2307/2555441
   Hitt LM, 1996, MIS QUART, V20, P121, DOI 10.2307/249475
   IDC, 2001, TOYOT MOT SAL US RED
   IDC, 2005, W EUR SOFTW END US S
   Jeyaraj A, 2006, J INF TECHNOL-UK, V21, P1, DOI 10.1057/palgrave.jit.2000056
   Jiang JJ, 2000, INFORM MANAGE, V37, P25, DOI 10.1016/S0378-7206(99)00032-4
   KATZ ML, 1986, J POLIT ECON, V94, P822, DOI 10.1086/261409
   KATZ ML, 1994, J ECON PERSPECT, V8, P93, DOI 10.1257/jep.8.2.93
   Kelley M., 1999, ECON INNOV NEW TECH, V8, P79, DOI DOI 10.1080/10438599900000005
   Kerner S., 2007, TROUBLE BIND DNS SER
   KIMBERLY JR, 1981, ACAD MANAGE J, V24, P689, DOI 10.5465/256170
   KING JL, 1994, INFORM SYST RES, V5, P139, DOI 10.1287/isre.5.2.139
   KING JL, 1984, COMMUN ACM, V27, P466, DOI 10.1145/358189.358074
   Krishnamurthy S., 2005, Perspectives on free and open source software, P279
   Kuan J., 2003, 2 C EC SOFTW INT IND
   Majumdar SK, 1998, STRATEGIC MANAGE J, V19, P1045
   Matthews D, 2008, COMPUT SCI ENG, V10, P56, DOI 10.1109/MCSE.2008.144
   Messerschmitt D.C., 2004, SOFTWARE ECOSYSTEM U
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Morgan A, 2006, TECHNOVATION, V26, P980, DOI 10.1016/j.technovation.2005.09.001
   MUNDIE C, 2001, COMMERCIAL SOFTWARE
   Nagy D, 2010, COMMUN ACM, V53, P148, DOI 10.1145/1666420.1666457
   Netcraft Ltd, 2001, COUNT COMP RUNN WEB
   Netcraft Ltd, 2009, FEBR 2009 WEB SERV S
   NOLAN RL, 1973, COMMUN ACM, V16, P399, DOI 10.1145/362280.362284
   Parker GG, 2005, MANAGE SCI, V51, P1494, DOI 10.1287/mnsc.1050.0400
   Prahalad C.K., 1990, HARVARD BUS REV, V6, P8
   Ross S.M., 2004, INTRO PROBABILITY MO, P351
   Rossi B, 2005, LECT NOTES COMPUT SC, V3416, P277
   Rubin H, 2002, IEEE SOFTWARE, V19, P95, DOI 10.1109/52.976948
   SALONER G, 1995, RAND J ECON, V26, P479, DOI 10.2307/2555999
   Samuelson P, 2006, COMMUN ACM, V49, P21, DOI 10.1145/1164394.1164412
   Searls D., 2003, LINUX J, P3
   Searls D., 2004, LINUX J, V4
   Shapiro C., 1999, Information rules: A strategic guide to the network economy
   Simpson K., 2007, FINGERPRINTING WORLD
   Sorensen JB, 2000, ADMIN SCI QUART, V45, P81, DOI 10.2307/2666980
   Spanos YE, 2002, INFORM MANAGE-AMSTER, V39, P659, DOI 10.1016/S0378-7206(01)00141-0
   Spinellis D., 2003, Code Reading: The Open Source Perspective
   Spinellis D., 2006, Code Quality: The Open Source Perspective
   StephenWalli Dave Gynn, 2005, Technical report
   Stiroh K., 2001, Current Issues in Economics and Finance, V7
   Stiroh KJ, 2002, AM ECON REV, V92, P1559, DOI 10.1257/000282802762024638
   Stoneman P, 1996, ECON J, V106, P952, DOI 10.2307/2235366
   STONEMAN P, 1981, ECON J, V91, P375, DOI 10.2307/2232591
   The Dravis Group, 2003, OP SOURC SOFTW CAS S
   THOMPSON RL, 1991, MIS QUART, V15, P125, DOI 10.2307/249443
   TORNATZKY LG, 1982, IEEE T ENG MANAGE, V29, P28, DOI 10.1109/TEM.1982.6447463
   Unisphere Research, 2006, IBM OP SOURC LINUXLI
   US Census Bureau, 2009, 2007 EC CENS COR BUS
   UUNU-MERIT, 2006, STUD EC IMP OP SOURC
   Ven K, 2006, INT FED INFO PROC, V203, P111
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Viorres N, 2007, LECT NOTES COMPUT SC, V4564, P455
   von Hippel E, 1998, MANAGE SCI, V44, P629, DOI 10.1287/mnsc.44.5.629
   von Hippel E, 2001, MIT SLOAN MANAGE REV, V42, P82
   von Hippel E., 1988, The Sources of Innovation
   VONWEIZSACKER CC, 1984, ECONOMETRICA, V52, P1085, DOI 10.2307/1910989
   Voth D, 2003, IEEE SOFTWARE, V20, P73, DOI 10.1109/MS.2003.1159033
   Wang HQ, 2001, IEEE SOFTWARE, V18, P90, DOI 10.1109/52.914753
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   Wheeler D., 2007, WHY OPEN SOURCE SOFT
   Wolff E., 2006, ECON SYST RES, V18, P221, DOI [10.1080/09535310600844193, DOI 10.1080/09535310600844193]
   Wolfgang Mark., 2002, Host Discovery with NMAP
   WolframlAlpha, 2009, TOT US CO PROF 2007
   Woods D., 2005, Open source for the enterprise : managing risks, reaping rewards, V1st
   Yang ZH, 2007, IEEE SOFTWARE, V24, P87, DOI 10.1109/MS.2007.58
   ZAHRA SA, 1993, STRATEGIC MANAGE J, V14, P451, DOI 10.1002/smj.4250140605
NR 121
TC 48
Z9 55
U1 0
U2 33
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2012
VL 85
IS 3
BP 666
EP 682
DI 10.1016/j.jss.2011.09.037
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 908CS
UT WOS:000301468600017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Milo, F
   Bernaschi, M
   Bisson, M
AF Milo, Fabrizio
   Bernaschi, Massimo
   Bisson, Mauro
TI A fast, GPU based, dictionary attack to OpenPGP secret keyrings
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cryptanalysis; Graphics Processing Units; CUDA; OpenPGP
AB We describe the implementation, based on the Compute Unified Device Architecture (CUDA) for Graphics Processing Units (GPU), of a novel and very effective approach to quickly test passphrases used to protect private keyrings of OpenPGP cryptosystems.
   Our combination of algorithm and implementation, reduces the time required to test a set of possible passphrases by three-orders of magnitude with respect to an attack based on the procedure described in the OpenPGP standard and implemented by software packages like GnuPG, and a tenfold speed up if compared to our highly tuned CPU implementation. Our solution can be considered a replacement and an extension of pgpcrack, a utility used in the past for attacking PGP.
   The optimizations described can be applied to other cryptosystems and confirm that the GPU architecture is also very effective for running applications that make extensive (if not exclusive) use of integer operations. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Milo, Fabrizio; Bisson, Mauro] Univ Roma La Sapienza, Dipartimento Informat, Rome, Italy.
   [Bernaschi, Massimo] IAC CNR, Rome, Italy.
C3 Sapienza University Rome; Consiglio Nazionale delle Ricerche (CNR);
   Istituto per le Applicazioni del Calcolo "Mauro Picone" (IAC-CNR)
RP Milo, F (corresponding author), Univ Roma La Sapienza, Dipartimento Informat, Rome, Italy.
EM fabrizio.milo@gmail.com; m.bernaschi@iac.cnr.it; bisson@di.uniroma1.it
CR Abrahams D, 2004, C++ template metaprogramming: concepts, tools, and techniques from Boost and beyond
   Anas Mohd Nazlee F.A.H., 2009, SERPENT ENCRYPTION A
   [Anonymous], 2001, ADV ENCR STAND AES
   [Anonymous], 1990, SYNTHESIS PARALLEL A
   [Anonymous], 2010, CUDA C Best Practices Guide
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Bernaschi M., 2009, J COMPUTER, V4
   Buck I, 2004, ACM T GRAPHIC, V23, P777, DOI 10.1145/1015706.1015800
   Carlisle Adams S.T., 1997, RFC2144 CAST 128 ENC
   CHE S, 2008, APPL SPECIFIC PROCES, P101
   Fatahalian K., 2006, SC 06, P83
   Fernando R., 2003, CG TUTORIAL
   Group O.W., 2007, RFC4880 OPENPGP MESS
   Harrison O., 2009, EFFICIENT ACCELERATI
   Jones P., 2001, RFC3174 US SECURE HA
   Manavski S.A., 2007, CUDA COMPATIBLE GPU
   McCool M., 2004, HIGH LEVEL METAPROGR
   Nguyen Hubert, 2007, GPU GEMS, V3
   Nvidia, 2010, PTX ISA 1 4
   Nvidia, 2010, CUDA PROGR GUID V 3
   Oechslin P, 2003, LECT NOTES COMPUT SC, V2729, P617
   Skala M., 2008, GNU PRIVACY GUARD GN
   van Rossum G., 2011, PYTHON LANGUAGE
NR 23
TC 9
Z9 10
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2011
VL 84
IS 12
BP 2088
EP 2096
DI 10.1016/j.jss.2011.05.027
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840CE
UT WOS:000296415100005
DA 2024-07-18
ER

PT J
AU Escalona, MJ
   Gutierrez, JJ
   Mejías, M
   Aragón, G
   Ramos, I
   Torres, J
   Domínguez, FJ
AF Escalona, M. J.
   Gutierrez, J. J.
   Mejias, M.
   Aragon, G.
   Ramos, I.
   Torres, J.
   Dominguez, F. J.
TI An overview on test generation from functional requirements
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Testing; Early testing; Functional test generation
AB Despite the fact that the test phase is described in the literature as one of the most relevant for quality assurance in software projects, this test phase is not usually developed, among others, with enough resources, time or suitable techniques.
   To offer solutions which supply the test phase, with appropriate tools for the automation of tests generation, or even, for their self-execution, could become a suitable way to improve this phase and reduce the cost constraints in real projects.
   This paper focuses on answering a concrete research question: is it possible to generate test cases from functional requirements described in an informal way? For this aim, it presents an overview of a set of relevant approaches that works in this field and offers a set of comparative analysis to determine which the state of the art is. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Escalona, M. J.] Univ Seville, ETS Ingn Informat, E-41012 Seville, Spain.
C3 University of Sevilla
RP Escalona, MJ (corresponding author), Univ Seville, ETS Ingn Informat, Av Reina Mercedes S-N, E-41012 Seville, Spain.
EM mjescalona@us.es
RI Escalona, María José/G-3900-2010; Torres, Jesús/F-6002-2010;
   Mejias-Risoto, Manuel/N-8708-2014; Gutierrez Rodriguez, Javier
   Jesus/R-9767-2017; Ramos Roman, Isabel/U-7827-2017; Dominguez-Mayo, F.
   J./A-8121-2009
OI Escalona, María José/0000-0002-6435-1497; Torres,
   Jesús/0000-0002-7786-5841; Mejias-Risoto, Manuel/0000-0002-0353-6391;
   Gutierrez Rodriguez, Javier Jesus/0000-0001-6955-0842; Ramos Roman,
   Isabel/0000-0002-9201-0673; Dominguez-Mayo, F. J./0000-0003-3502-8858
FU Ministry of Education and Science, Spain [TIN2007-67843-C06_03,
   TIN2010-20057-C03-02]
FX This research has been supported by the project QSimTest
   (TIN2007-67843-C06_03) and by the Tempros project (TIN2010-20057-C03-02)
   of the Ministry of Education and Science, Spain.
CR [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2008, 8292008 IEEE
   [Anonymous], 1971, ARTIFICIAL INTELLIGE
   BALCER M, 1990, P ACM SIGSOFT 89 3 S, P257
   Bertolino A, 2004, LECT NOTES COMPUT SC, V3014, P181
   BERTOLINO A, 2003, ESEC FSE 03 HELS FIN
   BERTOLINO A, 2002, ALR2002033 AV LABS
   Boddu R, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P262
   Brambilla M, 2009, LECT NOTES COMPUT SC, V5421, P167, DOI 10.1007/978-3-642-01648-6_18
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Denger C., 2003, Test case derived from Requirement Specifications
   Dustin E., 2002, QUALITY WEB SYSTEMS
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   FROHLICH P, 1999, P QUAL WEEK EUR BRUS
   Gutierrez J. J., 2008, P RCIS MOR, P223
   Gutiérrez JJ, 2008, LECT NOTES COMPUT SC, V5301, P83, DOI 10.1007/978-3-540-87875-9_6
   GUTIERREZ JJ, 2006, 4 WORKSH SYST TEST V
   HARTMAN A, 2003, 1 EUR C MOD DRIV SOF, P1
   HECKEL R, 2003, ELECT NOTES THEORECT, V82, P1
   HEUMANN J, 2002, J SOFTWARE TESTING P
   Hsia P, 1997, ANN SOFTW ENG, V3, P291, DOI 10.1023/A:1018938021528
   HSIA P, 1994, IFAC WORKSH FLOR US, P55
   HUEBNER M, 2003, P 7 WORLD MULT SYST, P290
   IBRAHIM R, 2007, IEEE 7 INT C COMP IN
   INSFRAN E, 2002, REQUIREMENTS ENG J, V7
   ISMAIL N, 2007, INT C EL ENG INF I T
   Itschner R, 1998, IEEE INTERNET COMPUT, V2, P46, DOI 10.1109/4236.683799
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   KULIAMIN VV, 2003, 1 EUR C MOD DRIV SOF, P55
   LABICHE Y, 2002, J SOFTWARE SYSTEMS M, V1, P10
   LEGEARD B, 2010, DAGSTUHL SEMINAR P
   Liu SY, 2008, J SYST SOFTWARE, V81, P234, DOI 10.1016/j.jss.2007.05.036
   Mogyorodi G, 2001, TOOLS, V39, P286, DOI 10.1109/TOOLS.2001.941681
   MOGYORODI G, 2003, 15 ANN SOFTW TECHN C
   MOGYORODI G, 2002, J SOFTWARE TESTING P, P21
   NARESH A, 2002, INT C SOFTW TEST AN
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   NEBUT C, 2003, P 14 INT S SOFTW REL
   Oh Jungsup, 2008, [The KIPS Transactions : Part D, 정보처리학회논문지D], V15, P505
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Perez B., 2009, 4 INT C SOFTW DAT TE
   Riebisch M., 2002, UML BASED STAT TEST
   ROBLES E, 2009, LNCS, V5648, P130
   RUDER A, 2004, RUCKBL M BERL
   Rutherford MJ, 2003, LECT NOTES COMPUT SC, V2830, P377
   RYSER J, 1999, WEEK EUR QWE 99 BRUS
   RYSER J, 2003, 200003 U ZUR I INF
   *SEG, 2007, EBSE200701 SEG KEEL
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   TERMAAT P, 2001, SOFTWARE TESTING MAY
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   WOOD D, 2002, USE CASED DERIVED TE
   Zielczynski P., 2006, Traceability from Use Cases to Test Cases
NR 55
TC 27
Z9 29
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2011
VL 84
IS 8
BP 1379
EP 1393
DI 10.1016/j.jss.2011.03.051
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785KJ
UT WOS:000292227600010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pereira, GCCF
   Simplício, MA 
   Naehrig, M
   Barreto, PSLM
AF Pereira, Geovandro C. C. F.
   Simplicio, Marcos A., Jr.
   Naehrig, Michael
   Barreto, Paulo S. L. M.
TI A family of implementation-friendly BN elliptic curves
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Pairing-based cryptosystems; Elliptic curve cryptosystems;
   Pairing-friendly curves
ID SOFTWARE IMPLEMENTATION; CRYPTOGRAPHIC PAIRINGS; SQUARE ROOTS;
   EFFICIENT; EXPONENTIATION; SIGNCRYPTION; COMPUTATION; SIGNATURES
AB For the last decade, elliptic curve cryptography has gained increasing interest in industry and in the academic community. This is especially due to the high level of security it provides with relatively small keys and to its ability to create very efficient and multifunctional cryptographic schemes by means of bilinear pairings. Pairings require pairing-friendly elliptic curves and among the possible choices, Barreto-Naehrig (BN) curves arguably constitute one of the most versatile families.
   In this paper, we further expand the potential of the BN curve family. We describe BN curves that are not only computationally very simple to generate, but also specially suitable for efficient implementation on a very broad range of scenarios. We also present implementation results of the optimal ate pairing using such a curve defined over a 254-bit prime field. (C) 2001 Elsevier Inc. All rights reserved.
C1 [Pereira, Geovandro C. C. F.; Simplicio, Marcos A., Jr.; Barreto, Paulo S. L. M.] Univ Sao Paulo, Escola Politecn, Dept Engn Comp & Sistemas Digitais PCS, BR-05508900 Sao Paulo, Brazil.
   [Naehrig, Michael] Microsoft Res, Redmond, WA 98052 USA.
C3 Universidade de Sao Paulo; Microsoft
RP Pereira, GCCF (corresponding author), Univ Sao Paulo, Escola Politecn, Dept Engn Comp & Sistemas Digitais PCS, Av Prof Luciano Gualberto,Trav 3,158, BR-05508900 Sao Paulo, Brazil.
EM geovandro@larc.usp.br; mnaehrig@microsoft.com; pbarreto@larc.usp.br
RI Barreto, Paulo L/F-5788-2010; Simplicio, Marcos A/D-9248-2012
OI Barreto, Paulo L/0000-0001-8832-3071; Simplicio, Marcos
   A/0000-0001-5227-7165
FU Brazilian National Council for Scientific and Technological Development
   (CNPq) [303163/2009-7]
FX Supported by the Brazilian National Council for Scientific and
   Technological Development (CNPq) under research productivity grant
   303163/2009-7.
CR [Anonymous], P13633 IEEE
   [Anonymous], MULT INT RAT AR C C
   [Anonymous], THESIS TU EINDHOVEN
   [Anonymous], LECT NOTES IN PRESS
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2010, 2010542 CRYPT EPRINT
   [Anonymous], IEEE S COMP AR ARITH
   [Anonymous], 2010134 IACR EPRINT
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1985, LNCS
   Barreto PSLM, 2006, LECT NOTES COMPUT SC, V3897, P319
   Barreto PSLM, 2005, LECT NOTES COMPUT SC, V3788, P515
   Barreto PSLM, 2002, LECT NOTES COMPUT SC, V2442, P354
   Beuchat JL, 2010, LECT NOTES COMPUT SC, V6487, P21, DOI 10.1007/978-3-642-17455-1_2
   Boneh D, 2003, LECT NOTES COMPUT SC, V2656, P416
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Bosma W, 1997, J SYMB COMPUT, V24, P235, DOI 10.1006/jsco.1996.0125
   Costello C, 2010, LECT NOTES COMPUT SC, V6056, P224
   Costello C, 2009, LECT NOTES COMPUT SC, V5671, P89, DOI 10.1007/978-3-642-03298-1_7
   Devegili AJ, 2007, LECT NOTES COMPUT SC, V4575, P197
   Fan JF, 2009, LECT NOTES COMPUT SC, V5747, P240
   Freeman D, 2010, J CRYPTOL, V23, P224, DOI 10.1007/s00145-009-9048-z
   Galbraith SD, 2008, LECT NOTES COMPUT SC, V5209, P211, DOI 10.1007/978-3-540-85538-5_15
   Galbraith SD, 2008, DISCRETE APPL MATH, V156, P3113, DOI 10.1016/j.dam.2007.12.010
   Galbraith SD, 2009, LECT NOTES COMPUT SC, V5479, P518, DOI 10.1007/978-3-642-01001-9_30
   Granger R, 2010, LECT NOTES COMPUT SC, V6056, P209
   Hess F, 2008, LECT NOTES COMPUT SC, V5209, P18, DOI 10.1007/978-3-540-85538-5_2
   Hess F, 2006, IEEE T INFORM THEORY, V52, P4595, DOI 10.1109/TIT.2006.881709
   Icart T, 2009, LECT NOTES COMPUT SC, V5677, P303, DOI 10.1007/978-3-642-03356-8_18
   KOBLITZ N, 1987, MATH COMPUT, V48, P203, DOI 10.1090/S0025-5718-1987-0866109-5
   Kong FY, 2006, INFORM PROCESS LETT, V98, P1, DOI 10.1016/j.ipl.2005.11.015
   Lauter K, 2010, LECT NOTES COMPUT SC, V6487, P1, DOI 10.1007/978-3-642-17455-1_1
   Lee E, 2009, IEEE T INFORM THEORY, V55, P1793, DOI 10.1109/TIT.2009.2013048
   Libert B, 2005, LECT NOTES COMPUT SC, V3352, P220
   Gouvêa CPL, 2009, LECT NOTES COMPUT SC, V5922, P248
   Miller VS, 2004, J CRYPTOL, V17, P235, DOI 10.1007/s00145-004-0315-8
   Müller S, 2004, DESIGN CODE CRYPTOGR, V31, P301, DOI 10.1023/B:DESI.0000015890.44831.e2
   Naehrig M, 2008, LECT NOTES COMPUT SC, V5023, P371
   Naehrig M, 2010, LECT NOTES COMPUT SC, V6212, P109, DOI 10.1007/978-3-642-14712-8_7
   Nogami Y, 2008, LECT NOTES COMPUT SC, V5209, P178, DOI 10.1007/978-3-540-85538-5_13
   Rubin K, 2010, MATH COMPUT, V79, P545, DOI 10.1090/S0025-5718-09-02266-2
   Scott M, 2005, LECT NOTES COMPUT SC, V3376, P293
   Scott M, 2009, LECT NOTES COMPUT SC, V5671, P102, DOI 10.1007/978-3-642-03298-1_8
   Scott M, 2009, LECT NOTES COMPUT SC, V5671, P78, DOI 10.1007/978-3-642-03298-1_6
   Vercauteren F, 2010, IEEE T INFORM THEORY, V56, P455, DOI 10.1109/TIT.2009.2034881
   Zhang FG, 2004, LECT NOTES COMPUT SC, V2947, P277
NR 46
TC 39
Z9 42
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2011
VL 84
IS 8
BP 1319
EP 1326
DI 10.1016/j.jss.2011.03.083
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785KJ
UT WOS:000292227600005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ma, YC
   Chung, CP
   Chen, TF
AF Ma, Yung-Cheng
   Chung, Chung-Ping
   Chen, Tien-Fu
TI Load and storage balanced posting file partitioning for parallel
   information retrieval
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Load balancing; Storage balancing; Parallel information retrieval;
   Inverted file
ID ARCHITECTURES
AB Many recent major search engines on Internet use a large-scale cluster to store a large database and cope with high query arrival rate. To design a large scale parallel information retrieval system, both performance and storage cost has to be taken into integrated consideration. Moreover, a quantitative method to design the cluster in systematical way is required. This paper proposes posting file partitioning algorithm for these requirements. The partitioning follows the partition-by-document-ID principle to eliminate communication overhead. The kernel of the partitioning is a data allocation algorithm to allocate variable-sized data items for both load and storage balancing. The data allocation algorithm is proven to satisfy a load balancing constraint with asymptotical 1-optimal storage cost. A probability model is established such that query processing throughput can be calculated from keyword popularities and data allocation result. With these results, we show a quantitative method to design a cluster systematically. This research provides a systematical approach to large-scale information retrieval system design. This approach has the following features: (1) the differences to ideal load balancing and storage balancing are negligible in real-world application. (2) Both load balancing and storage balancing can be taken into integrated consideration without conflicting. (3) The data allocation algorithm is capable to deal with data items of variable-sizes and variable loads. An algorithm having all these features together is never achieved before and is the key factor for achieving load and storage balanced workstation cluster in a real-world environment. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Ma, Yung-Cheng] Chang Gung Univ, Dept Comp Sci & Informat Engn, Tao Yuan, Taiwan.
   [Chung, Chung-Ping] Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, Hsinchu 30050, Taiwan.
   [Chen, Tien-Fu] Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi, Taiwan.
C3 Chang Gung University; National Yang Ming Chiao Tung University;
   National Chung Cheng University
RP Ma, YC (corresponding author), Chang Gung Univ, Dept Comp Sci & Informat Engn, Tao Yuan, Taiwan.
EM ycma@mail.cgu.edu.tw
CR [Anonymous], 1994, Introduction to parallel computing: design and analysis of algorithms
   [Anonymous], 1949, Human behaviour and the principle of least-effort
   Arpaci-Dusseau A., 1998, P 1998 S PAR DISTR T
   ARPACIDUSSEAU A, 1997, P 1997 ACM SIGMOD C
   Badue C, 2001, EIGHTH SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL, PROCEEDINGS, P10, DOI 10.1109/SPIRE.2001.989733
   Barroso LA, 2003, IEEE MICRO, V23, P22, DOI 10.1109/MM.2003.1196112
   Cacheda F, 2005, INFORM PROCESS MANAG, V41, P1141, DOI 10.1016/j.ipm.2004.05.002
   Cacheda F, 2007, INFORM PROCESS MANAG, V43, P204, DOI 10.1016/j.ipm.2006.06.002
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DOWDY LW, 1982, COMPUT SURV, V14, P287, DOI 10.1145/356876.356883
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Hardman D.K., 1992, P TREC TEXT RETR C
   Horowitz Ellis., 1996, COMPUTER ALGORITHMS
   JEONG BS, 1995, IEEE T PARALL DISTR, V6, P142, DOI 10.1109/71.342125
   Johnson D. S., 1974, SIAM Journal on Computing, V3, P299, DOI 10.1137/0203025
   Lee H., 1995, INFORM SYSTEMS, V20
   Lee LW, 2000, IEEE T COMPUT, V49, P127, DOI 10.1109/12.833109
   Little T D., 1995, Multimedia Systems, V2, P280
   Lucchese C., 2007, INFOSCALE 07 P 2 INT, P1
   Macdonald Craig, 2010, SIGIR Forum, V44, P58, DOI 10.1145/1842890.1842899
   MacFarlane A, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P209, DOI 10.1109/SPIRE.2000.878197
   Moffat A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P348, DOI 10.1145/1148170.1148232
   Moffat A, 2007, INFORM RETRIEVAL, V10, P205, DOI 10.1007/s10791-006-9014-4
   Narendran B, 1997, SYM REL DIST SYST, P97, DOI 10.1109/RELDIS.1997.632803
   Ribeiro-Neto BA, 1998, SCCC'98 - XVIII INTERNATIONAL CONFERENCE OF THE CHILEAN SOCIETY OF COMPUTER SCIENCE, PROCEEDINGS, P149, DOI 10.1109/SCCC.1998.730794
   Rotem D., 1993, IEEE T KNOWL DATA EN, V5, P877
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Serpanos DN, 1998, IEEE T CIRC SYST VID, V8, P13, DOI 10.1109/76.660824
   Tomasic A., 1995, IEEE T PARALL DISTR, V6, P142
   WAH BW, 1984, COMPUTER, V17, P23, DOI 10.1109/MC.1984.1658928
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   Wolf J., 1990, P 10 INT C DISTR COM, V17
NR 32
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2011
VL 84
IS 5
BP 864
EP 884
DI 10.1016/j.jss.2011.01.028
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 745PY
UT WOS:000289179300013
DA 2024-07-18
ER

PT J
AU Folstad, A
   Hornbæk, K
AF Folstad, Asbjorn
   Hornbaek, Kasper
TI Work-domain knowledge in usability evaluation: Experiences with
   Cooperative Usability Testing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Usability evaluation; Cooperative Usability Testing; Work-domain
   knowledge; Work-domain specific system; Impact
AB Usability evaluation helps to determine whether interactive systems support users in their work tasks. However, knowledge about those tasks and, more generally, about the work-domain is difficult to bring to bear on the processes and outcome of usability evaluation. One way to include such work-domain knowledge might be Cooperative Usability Testing, an evaluation method that consists of (a) interaction phases, similar to classic usability testing, and (b) interpretation phases, where the test participant and the moderator discuss incidents and experiences from the interaction phases. We have studied whether such interpretation phases improve the relevance of usability evaluations in the development of work-domain specific systems. The study included two development cases. We conclude that the interpretation phases generate additional insight and redesign suggestions related to observed usability problems. Also, the interpretation phases generate a substantial proportion of new usability issues, thereby providing a richer evaluation output. Feedback from the developers of the evaluated systems indicates that the usability issues that are generated in the interpretation phases have substantial impact on the software development process. The benefits of the interpretation phases may be explained by the access these provide both to the test participants' work-domain knowledge and to their experiences as users. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Hornbaek, Kasper] Univ Copenhagen, Dept Comp, DK-2300 Copenhagen S, Denmark.
   [Folstad, Asbjorn] SINTEF ICT, NO-0314 Oslo, Norway.
C3 University of Copenhagen; SINTEF
RP Folstad, A (corresponding author), Univ Oslo, N-0316 Oslo, Norway.
EM asf@sintef.no; kash@diku.dk
RI Hornbaek, Kasper/F-8286-2014
OI Hornbaek, Kasper/0000-0001-8742-1198
FU Norwegian Research Council
FX The presented study has been conducted as part of the FLAMINKO and
   RECORD projects; both supported by the VERDIKT program of the Norwegian
   Research Council. The study forms part of a doctoral thesis to be
   submitted to the Department of Psychology, University of Oslo. We wish
   to thank Erik Frokjaer (University of Copenhagen) and Jan Heim (SINTEF)
   for their feedback on the study, Line C. Gjerde (University of Oslo) for
   her help in the analyses, and Consafe Logistics
   (www.consafelogistics.no) and Locus (www.locus.no) for their
   participation in the cases of the study.
CR [Anonymous], P 2006 C INT DES CHI
   [Anonymous], P 1994 ACM C COMP SU
   BARK I, 2005, PEOPLE COMPUTERS, V19, P201
   Beyer K., 1998, CONTEXTUAL DESIGN DE
   Bloomberg J., 1993, Participatory Design: Principles and Practices, P123
   Bodker S., 1998, Interactions, V5, P17, DOI 10.1145/278465.278469
   Boren MT, 2000, IEEE T PROF COMMUN, V43, P261, DOI 10.1109/47.867942
   BYRD TA, 1992, MIS QUART, V16, P117, DOI 10.2307/249704
   Chattratichart J., 2004, CHI 04 HUM FACT COMP, P1119
   Cockton G., 2003, HUM FAC ER, P1118
   Cohen J., 1988, STAT POWER ANAL BEHA
   Desurvire H. W., 1992, People and Computers VII. Proceedings of HCI 92, P89
   Dumas J.S., 1999, PRACTICAL GUIDE USAB
   DUMAS JS, 2008, HUMAN COMPUTER INTER, P1171
   Ezzy D., 2002, QUALITATIVE ANAL PRA
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Folstad A, 2007, INT J HUM-COMPUT INT, V22, P217, DOI 10.1080/10447310709336963
   FROKJAER E, 2005, CHI 05 EXTENDED ABST, P1383
   Gray WD, 1998, HUM-COMPUT INTERACT, V13, P203, DOI 10.1207/s15327051hci1303_2
   Hartson HR, 2001, INT J HUM-COMPUT INT, V13, P373, DOI 10.1207/S15327590IJHC1304_03
   Hertzum M, 2006, INT J HUM-COMPUT INT, V21, P125, DOI 10.1207/s15327590ijhc2102_2
   Hoegh RT, 2006, INT J HUM-COMPUT INT, V21, P173, DOI 10.1207/s15327590ijhc2102_4
   Hornbaek K., 2005, Conference on Human Factors in Computing Systems, P391, DOI DOI 10.1145/1054972.1055027
   Hornbaek K, 2010, BEHAV INFORM TECHNOL, V29, P97, DOI 10.1080/01449290801939400
   International Organization For Standardization, 1998, ISO 9241-11
   Karat C., 1992, Proc. CHI'92, P397
   KENSING F, 1993, COMMUN ACM, V36, P78, DOI 10.1145/153571.163278
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Law ELC, 2006, INT J HUM-COMPUT INT, V21, P147, DOI 10.1207/s15327590ijhc2102_3
   Law ELC, 2008, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-1-84628-941-5
   Lindgaard G, 2006, INT J IND ERGONOM, V36, P1069, DOI 10.1016/j.ergon.2006.09.007
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P587, DOI 10.1006/ijhc.2001.0503
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P453, DOI 10.1006/ijhc.2001.0486
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Norgaard M., 2006, Proceedings of the 6th ACM conference on Designing Interactive systems-DIS '06 // Designing interactive systems. DIS2006 University Park, PA, June 26-28, P209
   OHNEMUS KR, 1993, DESIGNING FOR DIVERSITY, VOLS 1 AND 2, P1127
   Rosenbaum S., 2000, CHI 2000 C HUMAN FAC, P337, DOI DOI 10.1145/332040.332454
   Ross S, 1995, INTERACT COMPUT, V7, P335, DOI 10.1016/0953-5438(96)87697-1
   Rubin J., 2008, Handbook of Usability Testing: how to Plan, Design, and Conduct Effective Tests, V2nd ed.
   SAWYER P, 1996, P SIGCHI C HUM FACT, P376
   SUCHMAN L, 1995, COMMUN ACM, V38, P56, DOI 10.1145/223248.223263
   Uldall-Espersen T, 2008, INTERACT COMPUT, V20, P48, DOI 10.1016/j.intcom.2007.08.001
   VENTURI G, 2004, P 3 NORD C HUM COMP, P449
   VERMEEREN A, 2007, PEOPLE COMPUTERS, V21, P139
   Vicente Kim J., 1999, Cognitive Work Analysis Toward Safe, Productive
   Vredenburg K., 2002, Proceedings of CHI'2002 Conference on Human Factors in Computing Systems Proceedings, P471
   WRIGHT PC, 1991, INT J MAN MACH STUD, V35, P891, DOI 10.1016/S0020-7373(05)80167-1
NR 47
TC 21
Z9 22
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2010
VL 83
IS 11
SI SI
BP 2019
EP 2030
DI 10.1016/j.jss.2010.02.026
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 673EJ
UT WOS:000283641600002
DA 2024-07-18
ER

PT J
AU Garousi, V
   Varma, T
AF Garousi, Vahid
   Varma, Tan
TI A replicated survey of software testing practices in the Canadian
   province of Alberta: What has changed from 2004 to 2009?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Survey; Software testing practices; Canada
AB Software organizations have typically de-emphasized the importance of software testing. In an earlier study in 2004, our colleagues reported the results of an Alberta-wide regional survey of software testing techniques in practice. Five years after that first study, the authors felt it is time to replicate the survey and analyze what has changed and what not from 2004 to 2009. This study was conducted during the summer of 2009 by surveying software organizations in the Canadian province of Alberta. The survey results reveal important and interesting findings about software testing practices in Alberta, and point out what has changed from 2004 to 2009 and what not. Note that although our study is conducted in the province of Alberta, we have compared the results to few international similar studies, such as the ones conducted in the US, Turkey, Hong Kong and Australia, The study should thus be of interest to all testing professionals world-wide. Among the findings are the followings: (1) almost all companies perform unit and system testing with a slight increase since 2004, (2) automation of unit, integration and systems tests has increased sharply since 2004, (3) more organization are using observations and expert opinion to conduct usability testing, (4) the choices of test-case generation mechanisms have not changed much from 2004, (5) JUnit and IBM Rational tools are the most widely used test tools, (6) Alberta companies still face approximately the same defect-related economic issues as do companies in other jurisdictions, (7) Alberta software firms have improved their test automation capability since 2004, but there is still some room for improvement, and (8) compared to 2004, more companies are spending more effort on pre-release testing. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Garousi, Vahid; Varma, Tan] Univ Calgary, Software Qual Engn Res Grp SoftQual, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Garousi, V (corresponding author), Univ Calgary, Software Qual Engn Res Grp SoftQual, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca; tvarma@ucalgary.ca
OI Garousi, Vahid/0000-0001-6590-7576
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [341511-07]; Alberta Ingenuity [200600673]
FX Vahid Garousi was supported by the Discovery Grant no. 341511-07 from
   the Natural Sciences and Engineering Research Council of Canada (NSERC)
   and also by the Alberta Ingenuity New Faculty Award no. 200600673. Tan
   Varma was supported by NSERC through the Undergraduate Student Research
   Awards Program (USRA).
CR Abran A., 2001, Guide to the software engineering body of knowledge: trial version
   AMBLER S, 2009, DOBBS J
   [Anonymous], 2000, Kluwer international series in software engineering
   AYTAC T, 2003, 3 INT SPICE C
   CONSULTING T, 2003, OPEN TESTWARE REV JU
   Cusumano M, 2003, IEEE SOFTWARE, V20, P28, DOI 10.1109/MS.2003.1241363
   Cusumano MA, 1999, COMPUTER, V32, P60, DOI 10.1109/2.796110
   Dustin E., 2002, EFFECTIVE SOFTWARE T
   Dutta S, 1998, COMMUN ACM, V41, P77, DOI 10.1145/276609.276623
   GAROUSI V, 2009, SURVEY SOFTWARE TEST
   GELPERIN D, 1988, COMMUN ACM, V31, P687, DOI 10.1145/62959.62965
   Geras AM, 2004, CAN J ELECT COMPUT E, V29, P183, DOI 10.1109/CJECE.2004.1532522
   Hayes M., 2002, INFORMATIONWEEK, V889, P38
   Iberle K., 2001, PAC NW SOFTW QUAL C
   *IND CAN, 2002, INF COMM TECHN ICT S
   *IND CAN, 2009, INF COMM TECHN ICT S
   JONES C, 1999, SOFTWARE QUALITY 199
   Koskela L., 2007, TEST DRIVEN TDD ACCE
   KULIK P, 2002, SOFTWARE METRICS BES
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Nageswaran S, 2001, TEST EFFORT ESTIMATI
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Ng SP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P116, DOI 10.1109/ASWEC.2004.1290464
   NIELSEN J., 2001, Did Poor usability Kill E-Commerce?
   Quality Assurance Institute, 2002, STAT SOFTW TEST
   Rubin H., 1995, IND CANADA WORLDWIDE
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber C., 2005, EVALUATING AUTOMATED
   Schwaber K., 2001, Agile software development with scrum
   Statistics Canada, 2007, SOFTW DEV COMP SERV
   Tassey G., 2002, 023 RTI NIST
   The Standish Group, 2001, EXTR CHAOS
   The Standish Group, 2009, CHAOS MAN
   TMMi Foundation, 2010, TMMI REF MOD V2 0
   US Government Accounting Office, 1983, GAOIMTEC642
   Vredenburg K., 2002, A survey of user-centered design practice, P471
   Wojcicki MargaretA., 2006, P 2006 WORKSHOP PARA, P1
NR 37
TC 38
Z9 40
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2010
VL 83
IS 11
SI SI
BP 2251
EP 2262
DI 10.1016/j.jss.2010.07.012
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673EJ
UT WOS:000283641600019
DA 2024-07-18
ER

PT J
AU Kim, J
   Yi, J
AF Kim, JunSeong
   Yi, Jongsu
TI A pattern-based prediction: An empirical approach to predict end-to-end
   network latency
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE End-to-end network latency; Pattern-based method; Latency prediction;
   Network stability; Network-based applications
ID DELAY
AB Understanding latency in network-based applications has received considerable attention to provide consistent and acceptable levels of services. This paper presents an empirical approach, a pattern-based prediction method, to predict end-to-end network latency. The key idea of the approach is to utilize past history of latency and their variation patterns in latency predictions. After some preliminary study on simple numerical prediction models we examine the effectiveness of the proposed method with real latency data and various definitions of network stability. Our results show that the pattern-based method outperforms any single numerical model obtaining an overall prediction accuracy of 86.2%. Crown Copyright (C) 2010 Published by Elsevier Inc. All rights reserved.
C1 [Kim, JunSeong; Yi, Jongsu] Chung Ang Univ, Sch Elect & Elect Engn, Seoul 156756, South Korea.
C3 Chung Ang University
RP Kim, J (corresponding author), Chung Ang Univ, Sch Elect & Elect Engn, Seoul 156756, South Korea.
EM junkim@cau.ac.kr; xmxm2718@wm.cau.ac.kr
FU Chung-Ang University
FX This research was supported by the Chung-Ang University Research Grants
   in 2010.
CR Belhaj Salem, 2009, Journal of Networks, V4, P528, DOI 10.4304/jnw.4.6.528-535
   Dabek F, 2004, ACM SIGCOMM COMP COM, V34, P15, DOI 10.1145/1030194.1015471
   Hasib M, 2007, IET COMMUN, V1, P507, DOI 10.1049/iet-com:20060271
   Kim J, 1999, IPPS PROC, P372, DOI 10.1109/IPPS.1999.760503
   LUMEZANU C, 2009, ACM SIGCOMM C INT ME, P177
   Mirfakhrai T, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION, VOLS I-IV, PROCEEDINGS, P2178, DOI 10.1109/ROBOT.2002.1014862
   Ohsaki H., 2001, Proceedings of Seventeenth International Teletraffic Congress, V4, P1027, DOI [10.1016/S1388, DOI 10.1016/S1388]
   Parlos AG, 2002, IEEE IJCNN, P2460, DOI 10.1109/IJCNN.2002.1007528
   Shen J. P., 2005, Modern Processor Design
   Wolski R, 1997, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P316, DOI 10.1109/HPDC.1997.626437
   Yang LT, 2006, WILEY SER PARA DIST, pXXIII
   Yang M, 2004, SE SYM SYS THRY, P210
   Zhang L., 1990, Internetworking: Research and Experience, V1, P101
NR 13
TC 3
Z9 3
U1 1
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2010
VL 83
IS 11
SI SI
BP 2317
EP 2321
DI 10.1016/j.jss.2010.07.014
PG 5
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673EJ
UT WOS:000283641600025
DA 2024-07-18
ER

PT J
AU Lee, CF
   Chen, HL
   Tso, HK
AF Lee, Chin-Feng
   Chen, Hsing-Ling
   Tso, Hao-Kuan
TI Embedding capacity raising in reversible data hiding based on prediction
   of difference expansion
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Lossless data hiding; Reversible data hiding; Difference expansion;
   Prediction-error expansion
ID DIGITAL IMAGE WATERMARKING; HISTOGRAM-MODIFICATION; RIGHTFUL OWNERSHIP;
   SCHEME
AB Most of the proposed methods of reversible data hiding based on difference expansion require location maps to recover cover images. Although the location map can be compressed by a lossless compression algorithm, this lowers embedding capacity and increases computational cost during the procedures of embedding and extracting. The study presents an adaptive reversible data scheme based on the prediction of difference expansion. Since each cover pixel generally resembles its surrounding pixels, most of the difference values between the cover pixels and their corresponding predictive pixels are small; therefore, the proposed scheme gains from embedding capacity by taking full advantage of the large quantities of smaller difference values where secret data can be embedded. The proposed scheme offers several advantages, namely, (1) the location map is no more required, (2) the embedding capacity can be adjusted depending on the practical applications, and (3) the high embedding capacity with minimal visual distortion can be achieved. Moreover, the experimental results demonstrate that the proposed scheme yields high embedding capacity by comparing the related schemes that are proposed recently. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Lee, Chin-Feng] Chaoyang Univ Technol, Dept Informat Management, Wufong Township 41349, Taichung County, Taiwan.
   [Chen, Hsing-Ling] Chaoyang Univ Technol, Grad Inst Informat, Doctoral Program, Wufong Township 41349, Taichung County, Taiwan.
   [Tso, Hao-Kuan] Army Acad ROC, Dept Comp Sci & Commun Engn, Taichung Cty, Taiwan.
C3 Chaoyang University of Technology; Chaoyang University of Technology
RP Lee, CF (corresponding author), Chaoyang Univ Technol, Dept Informat Management, 168 Jifong E Rd, Wufong Township 41349, Taichung County, Taiwan.
EM lcf@cyut.edu.tw
CR Alattar AM, 2004, IEEE T IMAGE PROCESS, V13, P1147, DOI 10.1109/TIP.2004.828418
   Barton J. M., 1997, United States Patent, Patent No. [5646997, 5,646,997]
   Celik MU, 2005, IEEE T IMAGE PROCESS, V14, P253, DOI 10.1109/TIP.2004.840686
   Chan CK, 2004, PATTERN RECOGN, V37, P469, DOI 10.1016/j.patcog.2003.08.007
   Chang CC, 2008, J SYST SOFTWARE, V81, P1118, DOI 10.1016/j.jss.2007.07.036
   De Vleeschouwer C, 2003, IEEE T MULTIMEDIA, V5, P97, DOI 10.1109/TMM.2003.809729
   Fridrich J, 2002, EURASIP J APPL SIG P, V2002, P185, DOI 10.1155/S1110865702000537
   Kamstra L, 2005, IEEE T IMAGE PROCESS, V14, P2082, DOI 10.1109/TIP.2005.859373
   Kim HJ, 2008, IEEE T INF FOREN SEC, V3, P456, DOI 10.1109/TIFS.2008.924600
   Kim KS, 2009, PATTERN RECOGN, V42, P3083, DOI 10.1016/j.patcog.2009.04.004
   Lee CF, 2010, IMAGE VISION COMPUT, V28, P1293, DOI 10.1016/j.imavis.2010.01.006
   Lee CF, 2010, J SYST SOFTWARE, V83, P832, DOI 10.1016/j.jss.2009.12.018
   Lee IS, 2009, PATTERN RECOGN, V42, P1604, DOI 10.1016/j.patcog.2009.01.014
   Lin CC, 2008, PATTERN RECOGN, V41, P3582, DOI 10.1016/j.patcog.2008.05.015
   Lin PL, 2001, J SYST SOFTWARE, V55, P261, DOI 10.1016/S0164-1212(00)00075-3
   Lou DC, 2009, COMPUT STAND INTER, V31, P329, DOI 10.1016/j.csi.2008.05.009
   Ni ZC, 2006, IEEE T CIRC SYST VID, V16, P354, DOI 10.1109/TCSVT.2006.869964
   Qi XJ, 2007, SIGNAL PROCESS, V87, P1264, DOI 10.1016/j.sigpro.2006.11.002
   Tai WL, 2009, IEEE T CIRC SYST VID, V19, P904, DOI 10.1109/TCSVT.2009.2017409
   Thodi DM, 2007, IEEE T IMAGE PROCESS, V16, P721, DOI 10.1109/TIP.2006.891046
   Tian J, 2003, IEEE T CIRC SYST VID, V13, P890, DOI 10.1109/TCSVT.2003.815962
   Tsai P, 2009, SIGNAL PROCESS, V89, P1129, DOI 10.1016/j.sigpro.2008.12.017
   Tsai YY, 2007, J SYST SOFTWARE, V80, P429, DOI 10.1016/j.jss.2006.06.016
   Tseng HW, 2009, INFORM SCIENCES, V179, P2460, DOI 10.1016/j.ins.2009.03.014
   Wang XY, 2008, SIGNAL PROCESS, V88, P2193, DOI 10.1016/j.sigpro.2008.03.005
   Yu YH, 2005, PATTERN RECOGN, V38, P691, DOI 10.1016/j.patcog.2004.11.006
NR 26
TC 79
Z9 89
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2010
VL 83
IS 10
BP 1864
EP 1872
DI 10.1016/j.jss.2010.05.078
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653SV
UT WOS:000282117900019
DA 2024-07-18
ER

PT J
AU Suri, N
   Jhumka, A
   Hiller, M
   Pataricza, A
   Islam, S
   Sârbu, C
AF Suri, Neeraj
   Jhumka, Arshad
   Hiller, Martin
   Pataricza, Andras
   Islam, Shariful
   Sarbu, Constantin
TI A software integration approach for designing and assessing dependable
   embedded systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Embedded systems; Dependability; Software integration; Assessment;
   Decision theory
ID SPACE EXPLORATION; OPTIMIZATION; PROPAGATION
AB Embedded systems increasingly entail complex issues of hardware-software (HW-SW) co-design. As the number and range of SW functional components typically exceed the finite HW resources, a common approach is that of resource sharing (i.e., the deployment of diverse SW functionalities onto the same HW resources). Consequently, to result in a meaningful co-design solution, one needs to factor the issues of processing capability, power, communication bandwidth, precedence relations, real-time deadlines, space, and cost. As SW functions of diverse criticality (e.g. brake control and infotainment functions) get integrated, an explicit integration requirement need is to carefully plan resource sharing such that faults in low-criticality functions do not affect higher-criticality functions.
   On this background, the main contribution of this paper is a dependability-driven framework that helps to conduct the integration of SW components onto HW resources such that the maintenance of system dependability over integration of diverse criticality components is assured by design.
   We first develop a clustering strategy for SW components into Fault Containment Modules (FCMs) such that error propagation via interaction is minimized. Subsequently, the rules of composition for FCMs with respect to error propagation are developed. To allocate the resulting FCMs to the existing HW resources we provide several heuristics, each optimizing particular attributes thereof. Further, a framework for assessing the goodness of the achieved HW-SW composition as a dependable embedded system is presented. Two new techniques for quantifying the goodness of the proposed mappings are introduced by examples, both based on a multi-criteria decision theoretic approach. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Suri, Neeraj] Tech Univ Darmstadt, DEEDS Grp, Dept Comp Sci, Darmstadt, Germany.
   [Jhumka, Arshad] Univ Warwick, Coventry CV4 7AL, W Midlands, England.
   [Hiller, Martin] Volvo Technol Corp, Volvo, Sweden.
   [Pataricza, Andras] Budapest Univ Technol & Econ, Budapest, Hungary.
C3 Technical University of Darmstadt; University of Warwick; Volvo;
   Budapest University of Technology & Economics
RP Suri, N (corresponding author), Tech Univ Darmstadt, DEEDS Grp, Dept Comp Sci, Hsch Str 10-S2-02 E217, Darmstadt, Germany.
EM suri@cs.tu-darmstadt.de
RI Pataricza, Andras/HHD-1155-2022; Jhumka, Arshad/KFB-5535-2024;
   Pataricza, András/F-5382-2010
OI Pataricza, Andras/0000-0002-6516-129X; Suri, Neeraj/0000-0003-1688-1167
CR Ahuja R. K., 1993, Network flows: theory, algorithms, and applications
   [Anonymous], 1993, Decisions with Multiple Objectives
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   BALDIN D, 2009, J ANAL ARCHITECTURES, P185
   Carey M.R., 1979, Computers and Intractability: A Guide to the Theory of NP-Completeness
   CHILLAREGE R, 1995, DIG PAP INT SYMP FAU, P424, DOI 10.1109/FTCS.1995.466957
   CRISTIAN F, 1985, INFORM COMPUTATION, P200
   Czyzak P., 1998, Journal of Multi-Criteria Decision Analysis, V7, P34
   David Rene., 1998, Random Testing of Digital Circuits
   Ekelin C., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P640
   Flanagan David, 1999, JAVA NUTSHELL DESKTO
   Ghosh S., 2003, Proceedings of the 23rd International Conference on Distributed Computing Systems, P174
   Hiller M, 2004, IEEE T COMPUT, V53, P512, DOI 10.1109/TC.2004.1275294
   Hiller M, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P24, DOI 10.1109/ICDSN.2000.857510
   Horvitz E. J., 1988, International Journal of Approximate Reasoning, V2, P247, DOI 10.1016/0888-613X(88)90120-X
   ISLAM S, 2009, J DESIGN AUTOMATION, V13, P245
   Islam S, 2007, LECT NOTES COMPUT SC, V4808, P517
   Islam S, 2006, NINTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P485, DOI 10.1109/ISORC.2006.26
   Ismaeel A. A., 1991, Journal of Electronic Testing: Theory and Applications, V1, P245, DOI 10.1007/BF00136314
   Izosimov V, 2005, DES AUT TEST EUROPE, P864, DOI 10.1109/DATE.2005.116
   Jhumka A, 2001, SYM REL DIST SYST, P152, DOI 10.1109/RELDIS.2001.969769
   Jhumka A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P111
   JHUMKA A, 2002, LCTES SCOPES, P75
   JHUMKA A, 2002, HASE, P211
   JHUMKA A, 2005, DATE, V1, P372
   KANDASAMY N, 1999, SRDS, P212
   Kaufman LM, 2002, IEEE T COMPUT, V51, P3, DOI 10.1109/12.980013
   KODASE S, 2003, REAL TIM EMB TECHN A, P181
   Kuchcinski K, 2003, ACM T DES AUTOMAT EL, V8, P355, DOI 10.1145/785411.785416
   Lee YH, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P14, DOI 10.1109/ICDSN.2000.857509
   LIPARI G, 2000, FRAMEWORK ACHIEVING
   LOCKE CD, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P181, DOI 10.1109/REAL.1991.160372
   Luce R.D., 1990, Foundations of measurement
   Mohanty S, 2002, ACM SIGPLAN NOTICES, V37, P18, DOI 10.1145/566225.513835
   MUSTAFIZ S, 2004, FIDJI, P78
   Neema S, 2003, LECT NOTES COMPUT SC, V2855, P290
   OH YF, 1994, REAL-TIME SYST, V7, P315, DOI 10.1007/BF01088524
   PRASAD D, 1999, DEPENDABLE COMPUTING, V7, P339
   Rajkumar R, 1998, REAL TIM SYST SYMP P, P296, DOI 10.1109/REAL.1998.739755
   RANDELL B, 1975, P INT C REL SOFTW, P437, DOI DOI 10.1145/800027.808467
   Rushby J., 1999, CR1999209347
   SAIB SH, 1978, P 11 AS C CIRC SYST, P277
   STANKOVIC JA, 1994, IEEE T COMPUT, V28, P16
   Suri N, 1998, INT CON DISTR COMP S, P406, DOI 10.1109/ICDCS.1998.679755
   TOTE E, 1998, INT S FAULT TOL COMP, P70
   Wang SG, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P219
   *WIND RIV, 2010, WIND RIV HYP
   YIN X, 2006, ESA, P53
   Younis MF, 2004, J SYST ARCHITECT, V50, P649, DOI 10.1016/j.sysarc.20O4.02.005
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 50
TC 7
Z9 8
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2010
VL 83
IS 10
BP 1780
EP 1800
DI 10.1016/j.jss.2010.04.063
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653SV
UT WOS:000282117900012
OA Green Published
DA 2024-07-18
ER

PT J
AU Carrozza, G
   Cotroneo, D
   Natella, R
   Pecchia, A
   Russo, S
AF Carrozza, G.
   Cotroneo, D.
   Natella, R.
   Pecchia, A.
   Russo, S.
TI Memory leak analysis of mission-critical middleware
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software aging; Memory leak analysis; Mission-critical middleware
ID SOFTWARE; REJUVENATION
AB Memory leaks are recognized to be one of the major causes of memory exhaustion problems in complex software systems. This paper proposes a practical approach to detect aging phenomena caused by memory leaks in distributed objects Off-The-Shelf middleware, which are commonly used to develop critical applications. The approach, which is validated on a real-world case study from the Air Traffic Control domain, defines algorithms and ad hoc support tools to perform data filtering and to find the best trade off between experimentation time and statistical accuracy of aging trend estimates. Experiments show that fixing memory leaks is not always the key to solve memory exhaustion problems. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Carrozza, G.; Cotroneo, D.; Natella, R.; Pecchia, A.; Russo, S.] Univ Naples Federico II, Dipartimento Informat & Sistemist, I-80125 Naples, Italy.
   [Natella, R.; Pecchia, A.; Russo, S.] Complesso Univ Monte St Angelo, Lab CINI ITEM Carlo Savy, I-80126 Naples, Italy.
   [Carrozza, G.] Consorzio SESM SCARL, I-80014 Naples, Italy.
C3 University of Naples Federico II
RP Natella, R (corresponding author), Univ Naples Federico II, Dipartimento Informat & Sistemist, Via Claudio 21, I-80125 Naples, Italy.
EM gcarrozza@sesm.it; cotroneo@unina.it; roberto.natella@unina.it;
   antonio.pecchia@consorzio-cini.it; stefano.russo@unina.it
RI Natella, Roberto/AAT-7087-2020; Russo, Stefano/H-7723-2013
OI Natella, Roberto/0000-0003-1084-4824; Russo, Stefano/0000-0002-8747-3446
FU Consorzio Interuniversitario Nazionale per l'Informatica (CINI); Italian
   Ministry for Education. University, and Research (MIUR) [DM23318];
   DOTS-LCCI [DM1407]; Iniziativa Software
FX This work has been partially supported by the Consorzio
   Interuniversitario Nazionale per l'Informatica (CINI) and by the Italian
   Ministry for Education. University, and Research (MIUR) within the
   framework of the private-public laboratory COSMIC ("Centro di ricerca
   sui sistemi Open Source per le applicazioni ed i Servizi Mission
   Critical", DM23318, http://www.cosmiclab.it) and the project DOTS-LCCI
   ("Dependable Off-The-Shelf based middleware systems for Large-scale
   Complex Critical Infrastructures", DM1407, dots-lcci.prin.dis.unina.it).
   It has also been supported by the Italian research project "Iniziativa
   Software", which involves Finmeccanica company and several Italian
   universities (http://www.iniziativasoftware.it).
CR [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Castelli V, 2001, IBM J RES DEV, V45, P311, DOI 10.1147/rd.452.0311
   Cherem S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P480, DOI 10.1145/1250734.1250789
   Cotroneo D, 2007, SYM REL DIST SYST, P127, DOI 10.1109/SRDS.2007.22
   Garg S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P283, DOI 10.1109/ISSRE.1998.730892
   GOLDSMAN D, 2006, NAVAL RES LOGISTICS, V41
   GRORTKE M, 2006, IEEE T RELIAB, P480
   Grottke M., 2005, The Journal of Reliability Engineering Association of Japan, V27, P425
   Grottke M, 2007, COMPUTER, V40, P107, DOI 10.1109/MC.2007.55
   Hollander M., 1973, NONPARAMETRIC STAT M
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Jia YF, 2008, INT CONF QUAL SOFTW, P241, DOI 10.1109/QSIC.2008.54
   Kalyanakrishnam M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P178, DOI 10.1109/RELDIS.1999.805094
   LEE J, 2000, SUMM COMP SIM C, P169
   MAMAGKAKIS S, 2005, P 3 INT C WIR WIR IN, P354
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   Matias R, 2006, P INT COMP SOFTW APP, P189
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   MORAES RLO, 2007, P 37 INT C DEP SYST
   NATARAJAN B, 2002, IEEE WORKSH DEP MIDD
   SCHRUBEN LW, 1982, OPER RES, V30, P569, DOI 10.1287/opre.30.3.569
   SEN PK, 1968, J AM STAT ASSOC, V63, P1379
   Vaidyanathan K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P84, DOI 10.1109/ISSRE.1999.809313
   Wang DZ, 2007, PERFORM EVALUATION, V64, P247, DOI 10.1016/j.peva.2006.04.002
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   [No title captured]
NR 28
TC 25
Z9 27
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2010
VL 83
IS 9
SI SI
BP 1556
EP 1567
DI 10.1016/j.jss.2010.05.027
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638WF
UT WOS:000280928000003
DA 2024-07-18
ER

PT J
AU Gao, J
   Lu, JH
   Wang, TJ
   Yang, DQ
AF Gao, Jun
   Lu, Jiaheng
   Wang, Tengjiao
   Yang, Dongqing
TI Efficient evaluation of query rewriting plan over materialized XML view
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Database; XML; Materialized view
AB The query rewriting plan generation over XML views has received wide attention recently. However, little work has been done on efficient evaluation of the query rewriting plans, which is not trivial since the plan may contain an exponential size of sub-plans. This paper investigates the reason for the potentially exponential number of sub-plans, and then proposes a new space-efficient form called ABCPlan (Plan with Automata Based Combinations) to equivalently represent the original query rewriting plan. ABCPlan contains a set of buckets containing suffix paths in the query tree and an automata to indicate the combination of the suffix paths from different buckets as valid query rewriting sub-plans. We also design an evaluation method called ABCScan, which constructs a unified evaluation tree for the ABCPlan and handles the evaluation tree in one scan of the XML view. In the evaluation, we introduce node existence automata to encode the structure of the sub-tree and convert the satisfaction of the ABCPlan into the intersection problem of deterministic finite automata. The experiments show that ABCPlan based method outperforms existing methods significantly in terms of scalability and efficiency. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Gao, Jun; Wang, Tengjiao; Yang, Dongqing] Peking Univ PR China, Dept Comp Sci, Beijing 100871, Peoples R China.
   [Lu, Jiaheng] Remin Univ PR China, Dept Comp Sci, Beijing 100872, Peoples R China.
   [Gao, Jun; Wang, Tengjiao; Yang, Dongqing] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
C3 Peking University; Renmin University of China; Peking University
RP Gao, J (corresponding author), Peking Univ PR China, Dept Comp Sci, 5 Yihe St, Beijing 100871, Peoples R China.
EM gaojun@pku.edu.cn; jiahenglu@gmail.com; tjwang@pku.edu.cn;
   dqyang@pku.edu.cn
RI Lu, Jiaheng/T-7826-2019
OI Lu, Jiaheng/0000-0003-2067-454X
FU National High Technology Research and Development Program ("863"
   Program) of China [2009AA01Z150, 2009AA01Z133, 2007AA01Z191,
   2006AA01Z230]; National Natural Science Foundation of China [60873062];
   Key Project in Ministry of Education [109004]
FX This work is supported by the National High Technology Research and
   Development Program ("863" Program) of China under Grant Nos.
   2009AA01Z150, 2009AA01Z133, 2007AA01Z191, 2006AA01Z230; the National
   Natural Science Foundation of China under Grant No. 60873062; the Key
   Project in Ministry of Education (No: 109004).
CR AFRATI F, 2001, P SIGMOD, P319
   ANION A, 2007, P VLDB, P87
   Balmin A., 2004, VLDB, P60
   Calvanese D., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P194, DOI 10.1145/303976.303996
   CAUTIS B, 2009, PVLDB, V2, P301
   CAUTIS B, 2008, P WEBDB
   CHEN L, 2002, P ACM SIGMOD INT C M, P618, DOI DOI 10.1145/564691.564771
   Chidlovskii B, 2000, VLDB J, V9, P2, DOI 10.1007/s007780050080
   CHOI B, 2005, P WEBDB, P43
   DIAO Y, 2003, PATH SHARING PREDICA
   GAO J, 2007, P DEXA, P562
   Halevy AY, 2001, VLDB J, V10, P270, DOI 10.1007/s007780100054
   Lakshmanan LaksV. S., 2006, VLDB, P571
   Mandhani B., 2005, VLDB, P469
   MIKLAU G, 2002, PODS, P65, DOI DOI 10.1145/543613.543623
   Neven F, 2003, LECT NOTES COMPUT SC, V2572, P315, DOI 10.1007/3-540-36285-1_21
   Onose Nicola., 2006, SIGMOD C, P443
   Papakonstantinou Y, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P455, DOI 10.1145/304181.304222
   TAJIMA K, 2004, PROC VLDB ENDOW, P48
   Tang N, 2008, PROC INT CONF DATA, P873, DOI 10.1109/ICDE.2008.4497496
   WANG J, 2008, P DEXA, P493
   WU X, 2009, P 18 ACM C INF KNOWL, P475
   XU W, 2005, P 31 INT C VER LARG, P121
   XU W, 2005, P ACM SIGMOD INT C M, P127
NR 24
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2010
VL 83
IS 6
SI SI
BP 1029
EP 1038
DI 10.1016/j.jss.2009.12.027
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 604OF
UT WOS:000278287700013
DA 2024-07-18
ER

PT J
AU Ou, HH
   Hwang, MS
   Jan, JK
AF Ou, Hsia-Hung
   Hwang, Min-Shiang
   Jan, Jinn-Ke
TI A cocktail protocol with the Authentication and Key Agreement on the
   UMTS
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE AKA; Authentication; Key agreement; UMTS
AB At present, the Universal Mobile Telecommunications System (UMTS) is very popular in most parts of the world. It is a third-generation mobile communication technique known for its ability to conduct user authentication and for its security of communication with the use of Authentication and Key Agreement (AKA) protocol. A mobile station (MS), a service network (SN) and a home environment (HE) use the protocol to authenticate each other and make an agreement with a session key. With the UMTS-AKA protocol standard, all authentication vectors (AV) produced by the HE are transferred to the SN for mutual authentication with the MS. In this scenario, authentication is exposed to two kinds of defects. One defect is computational overhead concentrating on the HE and the other is the communication overhead for delivering the AVs. To overcome these congenital defects, this study proposes a unique UMTS-AKA protocol called the cocktail-AKA protocol. The goal of this protocol is to allow the SN to share some medicated authentication vectors (MAV) that are calculated in advance and combined with a prescription at the authentication stage. So, the HE only needs to produce a prescription authentication vector (PAV). Once the authentication stage is initiated, the SN distributes MAV and PAV and produces an effective AV for mutual authentication with the MS. The cocktail-AKA protocol can overcome both the aforesaid defects. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Hwang, Min-Shiang] Natl Chung Hsing Univ, Dept Management Informat Syst, Taichung 402, Taiwan.
   [Ou, Hsia-Hung; Jan, Jinn-Ke] Natl Chung Hsing Univ, Dept Comp Sci & Engn, Taichung 402, Taiwan.
C3 National Chung Hsing University; National Chung Hsing University
RP Hwang, MS (corresponding author), Natl Chung Hsing Univ, Dept Management Informat Syst, 250 Kuo Kuong Rd, Taichung 402, Taiwan.
EM mshwang@nchu.edu.tw
FU Taiwan Information Security Center (TWISC); National Science Council
   [NSC 96-2219-E-001-001, NSC 96-2219-E-009-013]
FX This work was supported in part by Taiwan Information Security Center
   (TWISC), National Science Council under the Grants NSC
   96-2219-E-001-001, and NSC 96-2219-E-009-013.
CR *3GPP, 2006, 33102 3GPP TS
   *3GPP, 2004, 35205 3GPP TS
   *3GPP, 2004, 35909 3GPP TS
   Agah A., 2007, INT J NETW SECUR, V5, P145
   Al-Saraireh J, 2006, EURASIP J WIREL COMM, DOI 10.1155/WCN/2006/98107
   [Anonymous], 2008, INT J NETW SECUR
   [Anonymous], 21133 3GPP TS
   [Anonymous], INT J NETWORK SECURI
   [Anonymous], 2008, INT J NETWORK SECURI
   [Anonymous], P 2003 ACM WORKSH WI
   [Anonymous], 2006, INT J NETWORK SECURI
   Bocan Valer., 2004, Transactions on Automatic Control and Computer Science, V49
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   Chaturvedi A., 2008, Int. J. Netw. Secur., V6, P181
   Dimitriadis C., 2007, International journal of network security, V5, P99
   ETSI, 1993, 0320 ETSI GSM
   Huang HM, 2005, DYNAM CONT DIS SER B, V1, P392
   JUANG WS, 2008, INT J NETWORK SECURI, V7, P120
   Lee W.-B., 2008, INT J NETWORK SECURI, V6, P285
   Wang S., 2008, INT J NETWORK SECURI, V7, P342
   Zhang MX, 2005, IEEE T WIREL COMMUN, V4, P734, DOI 10.1109/TWC.2004.842941
NR 21
TC 26
Z9 27
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2010
VL 83
IS 2
SI SI
BP 316
EP 325
DI 10.1016/j.jss.2009.08.019
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 552FZ
UT WOS:000274275200011
DA 2024-07-18
ER

PT J
AU Huang, SM
   Tsai, CF
   Huang, PC
AF Huang, Shi-Ming
   Tsai, Chih-Fong
   Huang, Po-Chun
TI Component-based software version management based on a
   Component-Interface Dependency Matrix
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Component-based software; Software development; Software maintenance;
   Version control; Version management
AB As much component-based software is developed, a software configuration management (SCM) tool for component-based software is necessary. In this paper, we propose a version management mechanism for impact analysis while components are upgraded. We separately version the components and interfaces based on a Component-Interface Dependency Matrix (CIDM), and analyze impacts according to their dependency relationship. The result of our simulation shows that CIDM is capable of managing large numbers of components without impedance mismatch. in addition, in a well-designed software system, using CIDM to analyze impacts can save resources in the software development phase. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Tsai, Chih-Fong] Natl Cent Univ, Dept Informat Management, Jhongli 32001, Taiwan.
   [Huang, Shi-Ming] Natl Chung Cheng Univ, Dept Accounting & Informat Technol, Chiayi, Taiwan.
   [Huang, Shi-Ming; Huang, Po-Chun] Natl Chung Cheng Univ, Dept Informat Management, Chiayi, Taiwan.
C3 National Central University; National Chung Cheng University; National
   Chung Cheng University
RP Tsai, CF (corresponding author), Natl Cent Univ, Dept Informat Management, 300 Jhongda Rd, Jhongli 32001, Taiwan.
EM actcft@ccu.edu.tw
FU National Science Council [NSC-93-2524-S-194-004]
FX This paper is sponsored by the National Science Council
   (NSC-93-2524-S-194-004).
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], CMUSEI2001TN007
   Banks J., 2010, Discrete-event System Simulation
   BERGSTRAESSER T, 1999, VERSIONS WORKSPACES, P532
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   BRADA P, 2004, THESIS CHARLES U PRA
   COLLOFELLO JS, 1988, INT C SOFTW MAINT
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Crnkovic I, 2002, J SYST SOFTWARE, V61, P201, DOI 10.1016/S0164-1212(01)00148-0
   Fowler M, 2004, INVERSION CONTROL CO
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   *GROUP OMG, UML SPEC VERS 2 0
   Krohn U, 1999, J SOFTW MAINT-RES PR, V11, P151, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<151::AID-SMR189>3.0.CO;2-G
   LARSSON M, 1999, INT S SYST CONF MAN
   LARSSON M, 2000, THESIS UPPSALA U
   Law AverillM., 2000, SIMULATION MODELLING
   Martin R.C., 1996, The Dependency Inversion Principle
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Philippi S, 2005, J SYST SOFTWARE, V77, P193, DOI 10.1016/j.jss.2004.07.252
   PHIPPS D, 2000, CBD PATH UNIFORM COM
   QUEILLE JP, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P234, DOI 10.1109/ICSM.1994.336771
   Robinson S., 2014, SIMULATION PRACTICE
   Saltelli A., 2007, Global Sensitivity Analysis. the Primer, P237, DOI DOI 10.1002/9780470725184
   SANGAL N, 2005, ACM SIGPLAN C OBJ OR, P167
   STUCKENHOLZ A, 2005, SIGSOFT SOFTWARE ENG, V30, P1
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   *WIK, 2005, DEP HELL WIK FREE EN
   *WIK, 2005, DLL HELL WIK FREE EN
   2001, MSDN MAGAZINE
NR 34
TC 2
Z9 4
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2009
VL 82
IS 3
BP 382
EP 399
DI 10.1016/j.jss.2008.06.052
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425PD
UT WOS:000264648700003
DA 2024-07-18
ER

PT J
AU Min, JK
   Lee, JY
   Chung, CW
AF Min, Jun-Ki
   Lee, Jihyun
   Chung, Chin-Wan
TI An efficient XML encoding and labeling method for query processing and
   updating on dynamic XML data
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE XML; Query processing; Update
ID SCHEME
AB In this paper, we propose an efficient encoding and labeling scheme for XML, called EXEL, which is a variant of the region labeling scheme using ordinal and insert-friendly bit strings. We devise a binary encoding method to generate the ordinal bit strings, and an algorithm to make a new bit string inserted between bit strings without any influences on the order of preexisting bit strings. These binary encoding method and bit string insertion algorithm are the bases of the efficient query processing and the complete avoidance of re-labeling for updates. We present query processing and update processing methods based on EXEL. In addition, the Stack-Tree-Desc algorithm is used for an efficient structural join, and the String B-tree indexing is utilized to improve the join performance. Finally, the experimental results show that EXEL enables complete avoidance of re-labeling for updates while providing fairly reasonable query processing performance. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Lee, Jihyun; Chung, Chin-Wan] Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Div Comp Sci, Taejon 305701, South Korea.
   [Min, Jun-Ki] Korea Univ Technol & Educ, Sch Internet Media Engn, Cheonan 330708, Chungnam, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Korea
   University of Technology & Education
RP Chung, CW (corresponding author), Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Div Comp Sci, Taejon 305701, South Korea.
EM jkmin@kut.ac.kr; hyunlee@islab.kaist.ac.kr; chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
FU Ministry of Knowledge Economy, Korea [IITA-2008-C1090-0801-0031]
FX This research was supported by the Ministry of Knowledge Economy, Korea,
   Under the Information Technology Research Center support program
   supervised by the Institute of Information Technology Advancement (Grant
   Number IITA-2008-C1090-0801-0031).
CR Al-Khalifa S, 2002, PROC INT CONF DATA, P141, DOI 10.1109/ICDE.2002.994704
   Amagasa T, 2003, PROC INT CONF DATA, P705, DOI 10.1109/ICDE.2003.1260842
   [Anonymous], 2002, P ACM SIGMOD INT C M
   BOAG DCS, 2005, XQUERY 1 0 XML QUERY
   Bray T., 2004, Extensible Markup Language (XML) 1.0, VThird
   CHIEN SY, 2002, P 28 INT C VER LARG, P263
   Chung C.W., 2002, P ACM SIGMOD INT C M, P121, DOI DOI 10.1145/564691.564706
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   COHEN E, 2002, P 21 ACM SIGMOD SIGA, P271
   COVER R, 2001, XML COVER PAGES
   FERRAGINA P, 1999, J ACM, V46
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   Grust T., 2002, P 2002 ACM SIGMOD IN, P109
   HARDER T, 2007, DATA KNOWLEDGE ENG, V60
   LEHEGARET RWP, 2005, XML PATH LANGUAGE XP
   Li C., 2005, CIKM, P501
   Li C, 2006, IASTED INT CONF ROBO, P13
   LI Q, 2001, P VLDB 2001, P367
   Min J., 2003, P 2003 ACM SIGMOD IN, P122, DOI DOI 10.1145/872757.872775
   MIN JK, 2007, P DASFAA 2007, P715
   O'Neil P., 2004, SIGMOD, P903
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   Wu XD, 2004, PROC INT CONF DATA, P66, DOI 10.1109/ICDE.2004.1319985
   ZHANG C, 2001, P ACM SIGMOD INT C M, P425, DOI DOI 10.1145/375663.375722
NR 24
TC 14
Z9 19
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2009
VL 82
IS 3
BP 503
EP 515
DI 10.1016/j.jss.2008.08.014
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425PD
UT WOS:000264648700012
DA 2024-07-18
ER

PT J
AU Aghdaie, N
   Tamir, Y
AF Aghdaie, Navid
   Tamir, Yuval
TI CORAL: A transparent fault-tolerant web service
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Reliable network services; Fault-tolerant systems; Replication
AB The Web is increasingly used for critical applications and services. We present a client-transparent mechanism, called CORAL, that provides high reliability and availability for Web service. CORAL provides fault tolerance even for requests being processed at the time of server failure. The scheme does not require deterministic servers and can thus handle dynamic content. CORAL actively replicates the TCP connection state while maintaining logs of HTTP requests and replies. In the event of a primary server failure, active client connections fail over to a spare, where their processing continues seamlessly. We describe key aspects of the design and implementation as well as several performance optimizations. Measurements of system overhead, failover performance, and preliminary validation using fault injection are presented. (c) 2008 Elsevier Inc. All rights reserved.
C1 [Aghdaie, Navid; Tamir, Yuval] Univ Calif Los Angeles, Dept Comp Sci, Concurrent Syst Lab, Los Angeles, CA 90095 USA.
C3 University of California System; University of California Los Angeles
RP Tamir, Y (corresponding author), Univ Calif Los Angeles, Dept Comp Sci, Concurrent Syst Lab, Los Angeles, CA 90095 USA.
EM navid@cs.ucla.edu; tamir@cs.ucla.edu
FU CAREER award from the US National Science Foundation [CNS-0643971]
FX This research is supported in part by a CAREER award from the US
   National Science Foundation (#CNS-0643971).
CR Aghdaie N, 2003, 2003 IEEE PACIFIC RIM CONFERENCE ON COMMUNICATIONS, COMPUTERS, AND SIGNAL PROCESSING, VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P29
   Aghdaie N, 2002, IEEE IC COMP COM NET, P63, DOI 10.1109/ICCCN.2002.1043047
   Aghdaie N, 2001, IEEE IPCCC, P209, DOI 10.1109/IPCCC.2001.918654
   AGHDAIE N, 2005, INT C COMM COMP NETW, P202
   Aghdaie Navid, 2003, INT C PAR DISTR COMP, P757
   ALMEIDA J, 1998, 1373 U WISC MAD COMP
   ALVISI L, 2001, WRAPPING SERVER SIDE, P329
   ANDERSON E, 1996, MAGICROUTER APPL FAS
   Andresen D, 1996, 10TH INTERNATIONAL PARALLEL PROCESSING SYMPOSIUM - PROCEEDINGS OF IPPS '96, P850, DOI 10.1109/IPPS.1996.508191
   [Anonymous], 2616 RFC IETF
   BAKER SM, 1999, 8 INT WORLD WID WEB, P1215
   BORG A, 1983, 9TH P ACM S OP SYST, P90
   Breslau L., 1999, WEB CACHING ZIPF LIK
   BRISCO T, 1995, 1794 RFC IETF
   Burton-Krahn N, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XVI), P205
   *CISC SYST INC, 2003, FAIL CONF LOC CISC S
   *CISC SYST INC, 1997, SCAL INT WEB SERV CI
   CUNHA CR, 1995, TR95010 BOST U CS DE
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   DAVIS D, 2008, WEB SERVICES RELIABL
   DIAS DM, 1996, SCALABLE HIGHLY AVAI, P85
   Fang CL, 2007, J SYST ARCHITECT, V53, P21, DOI 10.1016/j.sysarc.2006.06.001
   Frolund S, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P449, DOI 10.1109/ICDSN.2000.857575
   FROLUND S, 1999, IEEE WORKSH FUT TREN
   Gray J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P3
   Garcia DZG, 2007, LA-WEB 2007: 5TH LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P42, DOI 10.1109/LA-Web.2007.16
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   *INT INC, 2001, INT NETSTRUCTURE E C
   *INT INC, 2004, IA 32 INT ARCH SOFTW, V3
   IWASA K, 2004, WS REL 1 1
   KNIGHT S, 1998, 2338 RFC IETF
   Koch RR, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P383, DOI 10.1109/DSN.2003.1209949
   KRISTOL D, 1997, 2109 RFC IEFT
   LUO MY, 2001, CONSTRUCTING ZERO LO, P1781
   Madeira H, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P325, DOI 10.1109/DSN.2002.1028916
   Marwah M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P373, DOI 10.1109/DSN.2003.1209948
   *MATR NETSYSTEMS I, 2001, INT WEATH REP
   *MINDCR INC, 2002, WEBSTONE BENCHM INF
   Moser L. E., 2007, Journal of Software, V2, P14, DOI 10.4304/jsw.2.1.14-26
   *OR INC, 1999, ORACLE82 DISTR DAT S
   PETTERSSON M, 2003, LINUX X86 PERFORMANC
   Plummer D., 1982, 826 RFC IETF
   SCHNEIDER FB, 1984, ACM T COMPUT SYST, V2, P145, DOI 10.1145/190.357399
   SHENOY G, 2000, 20 IEEE INT C DISTR, P699
   SNOEREN AC, 2001, 3 USENIX S INT TECHN, P221
   Stein L., 1999, WRITING APACHE MODUL
   SULTAN F, 2001, DCSTR462 RUTG U
   Suryanarayanan K, 2000, C LOCAL COMPUT NETW, P644, DOI 10.1109/LCN.2000.891111
   TRENT G, 1995, WEBSTONE 1 GENERATIO
   Vingralek R, 1999, PROCEEDINGS OF THE 1999 USENIX ANNUAL TECHNICAL CONFERENCE, P171
   Zagorodnov D, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P393, DOI 10.1109/DSN.2003.1209950
   ZANDY VC, 2002, RELIABLE NETWORK CON, P95
   ZHANG R, 2004, EFFICIENT TCP CONNEC, P1219
   Zhao W, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P138, DOI 10.1109/ISSRE.2001.989467
   ZHAO W, 2007, BFT WS BYZANTINE FAU
NR 55
TC 8
Z9 11
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2009
VL 82
IS 1
SI SI
BP 131
EP 143
DI 10.1016/j.jss.2008.06.036
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 391JZ
UT WOS:000262230900011
DA 2024-07-18
ER

PT J
AU Binkley, D
   Gold, N
   Harman, M
   Li, Z
   Mahdavi, K
AF Binkley, David
   Gold, Nicolas
   Harman, Mark
   Li, Zheng
   Mahdavi, Kiarash
TI An empirical study of the relationship between the concepts expressed in
   source code and dependence
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Australian Software Engineering Conference
CY APR 10-13, 2007
CL Melbourne, AUSTRALIA
SP Data Proc, Infosys Australia, Davies Collison Cave, Object Consulting, Sun Microsyst Lab, Swinburne Univ Technol, IT Today, Elsevier Australia
DE Program slicing; Concept assignment; Software engineering; Program
   comprehension
ID CONCEPT ASSIGNMENT; PROGRAM
AB Programs express domain-level concepts in their source code. It might be expected that such concepts Would have a degree of semantic cohesion. This cohesion ought to manifest itself in the dependence between statements all of which contribute to the computation of the same concept. This paper addresses a set of research questions that capture this informal observation. It presents the results of experiments on 10 programs that explore the relationship between domain-level concepts and dependence in source code. The results show that code associated with concepts has a greater degree of coherence, with tighter dependence. This finding has positive implications for the analysis of concepts as it provides an approach to decompose a program into smaller executable units, each of which captures the behaviour of the program with respect to a domain-level concept. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Binkley, David; Gold, Nicolas; Harman, Mark; Li, Zheng; Mahdavi, Kiarash] Kings Coll London, CREST Ctr, Dept Comp Sci, Strand, London WC2R 2LS, England.
C3 University of London; King's College London
RP Li, Z (corresponding author), Kings Coll London, CREST Ctr, Dept Comp Sci, Strand, London WC2R 2LS, England.
EM zheng.li@kcl.ac.uk
RI Li, Zheng/L-8594-2015
OI Li, Zheng/0000-0002-3938-7033; Harman, Mark/0000-0002-5864-4488
FU EPSRC [EP/F010443/1] Funding Source: UKRI
CR Al-Ekram R, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195, DOI 10.1109/CSMR.2004.1281420
   [Anonymous], EVALUATION CODE METR
   ANTONIOL G, 2000, P 2000 INT C SOFTW M
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Binkley D, 2006, WORK CONF REVERSE EN, P103
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Gold N., 2002, IEE Proceedings-Software, V149, P103, DOI 10.1049/ip-sen:20020549
   Gold NE, 2005, SOFTWARE PRACT EXPER, V35, P977, DOI 10.1002/spe.664
   Harman M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2002.1173060
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Karakostas V., 1992, Journal of Software Maintenance: Research and Practice, V4, P1, DOI 10.1002/smr.4360040102
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Merlo E, 2003, J SOFTW MAINT EVOL-R, V15, P205, DOI 10.1002/smr.274
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   NING JQ, 1993, IEEE WORK C REV ENG, P64
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Weiser MD., 1979, PROGRAM SLICES FORMA
NR 29
TC 7
Z9 8
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2008
VL 81
IS 12
SI SI
BP 2287
EP 2298
DI 10.1016/j.jss.2008.04.007
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 375NE
UT WOS:000261119800013
DA 2024-07-18
ER

PT J
AU McBride, T
AF McBride, Tom
TI The mechanisms of project management of software development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software development; Project management; Project monitoring; Project
   control; Project coordination; Empirical study
ID COORDINATION
AB The changing environments of software development such as component-based, distributed and outsourced software development require matching changes by project managers to monitor, control and coordinate their projects. While the objectives of project management may be well established, the mechanisms with which those objectives are achieved are less well known. An empirical study was undertaken to investigate which mechanisms were used by practising project managers to monitor, control and coordinate software development projects.
   First, the types of mechanisms are discussed so that the mechanisms can be classified usefully. Then, the design of the empirical study is described. The data were collected through structured interview, which provided both quantitative and qualitative data. The data are analysed for each mechanism separately and the findings presented. The study found that project managers use multiple mechanisms to achieve project management objectives and use the same mechanism to serve multiple objectives. Further research is suggested to investigate project management from the opposite orientation, that is, which objectives are served by specific project management mechanisms. (C) 2008 Elsevier Inc. All rights reserved.
C1 Univ Technol Sydney, Fac Informat Technol, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP McBride, T (corresponding author), Univ Technol Sydney, Fac Informat Technol, 1 Broadway, Sydney, NSW 2007, Australia.
EM mcbride@it.uts.edu.au
CR Addison T., 2002, Proceedings of SAICSIT, P128
   ADLER PS, 1995, ORGAN SCI, V6, P147, DOI 10.1287/orsc.6.2.147
   Al-Jibouri SaadH., 2003, International journal of project management, V21, P145, DOI DOI 10.1016/S0263-7863(02)00010-8
   Andres H.P., 2002, Journal of Management Information Systems, V18, P41, DOI DOI 10.1080/07421222.2002.11045695
   [Anonymous], 2000, GUID PROJ MAN BOD KN
   [Anonymous], 2003, Project Management: Planning and Control Techniques
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Choudhury V, 2003, INFORM SYST RES, V14, P291, DOI 10.1287/isre.14.3.291.16563
   Cleland D.I., 2002, PROJECT MANAGEMENT S, V4th
   Crowston K, 1998, IBM SYST J, V37, P227, DOI 10.1147/sj.372.0227
   CROWSTON KG, 1991, THESIS MIT BOSTON
   Davies R. M. G., 1988, International Journal of Project Management, V6, P19, DOI 10.1016/0263-7863(88)90054-3
   Dumke RR, 1997, FIFTH INTERNATIONAL SYMPOSIUM ON ASSESSMENT OF SOFTWARE TOOLS AND TECHNOLOGIES, PROCEEDINGS, P104, DOI 10.1109/AST.1997.599920
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P57, DOI 10.2307/258191
   EISENHARDT KM, 1985, MANAGE SCI, V31, P134, DOI 10.1287/mnsc.31.2.134
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   FLAMHOLTZ EG, 1985, ACCOUNT ORG SOC, V10, P35, DOI 10.1016/0361-3682(85)90030-3
   HAMILTON R.D., 1999, Management International Review, V39, P167
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hughes B., 1999, SOFTWARE PROJECT MAN
   *ISO, 15504 ISO 3
   Kerzner Harold., 1998, PROJECT MANAGEMENT S
   Kirsch LJ, 1996, ORGAN SCI, V7, P1, DOI 10.1287/orsc.7.1.1
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lacity M. C., 1994, Journal of Management Information Systems, V11, P137
   Leedy P.D., 2001, PRACTICAL RES PLANNI, V7th
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   McGarry John., 2002, Practical Software Measurement: Objective Information for Decision Makers
   Navon R, 2003, AUTOMAT CONSTR, V12, P185, DOI 10.1016/S0926-5805(02)00043-2
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   *OGC, 2002, MAN SUCC PROJ PRINCE
   OUCHI WG, 1975, ADMIN SCI QUART, V20, P559, DOI 10.2307/2392023
   OUCHI WG, 1979, MANAGE SCI, V25, P833, DOI 10.1287/mnsc.25.9.833
   RAFFO DM, 2000, INT J SOFTWARE PROCE, V5, P159
   Royce W.E., 1998, AW OBJ TECHNOL S
   Sabherwal R., 2003, Information and Organization, V13, P153, DOI 10.1016/S1471-7727(02)00026-X
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHUMATE K, 1994, ANN INT C AD, P41
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zhuge H, 2002, KNOWL-BASED SYST, V15, P465, DOI 10.1016/S0950-7051(02)00031-X
   Zmud RW, 1980, MIS QUART, V4, P45, DOI 10.2307/249336
NR 45
TC 13
Z9 16
U1 3
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2008
VL 81
IS 12
SI SI
BP 2386
EP 2395
DI 10.1016/j.jss.2008.06.015
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 375NE
UT WOS:000261119800021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Noh, SY
   Gadia, SK
AF Noh, Seo-Young
   Gadia, Shashi K.
TI Benchmarking temporal database models with interval-based and temporal
   element-based timestamping
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Temporal element-based data model; Interval-based data model; Model
   comparisons; Performance evaluations; XML-based temporal DBMS
AB Starting from mid 1980s, there has been a debate about what data model is most appropriate for temporal databases. A fundamental choice one has to make is whether to use intervals of time or temporal elements to timestamp objects and events with the periods of validity. The advantage of using interval timestamps is that Start and End columns can be added to relations for treating them within the framework of classical databases, leading to quick implementation. Temporal elements are finite unions of intervals. The advantage of temporal elements is that timestamps become implicitly associated with values, tuples, and relations. Furthermore, since temporal elements, by design, are closed under set theoretical operations such as union, intersection and complementation, they lead to query languages that are natural. Here, we investigate the ease of use as well as system performance for the two approaches to help settle the debate. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Noh, Seo-Young] LG Elect Adv Recearch Inst, Seoul 137724, South Korea.
   [Gadia, Shashi K.] Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
C3 Iowa State University
RP Noh, SY (corresponding author), LG Elect Adv Recearch Inst, 16 Woomyeon, Seoul 137724, South Korea.
EM rsyoung@lge.com
CR Böhlen MH, 2004, 11TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P3, DOI 10.1109/TIME.2004.1314410
   Bohlen MH, 1998, PROC INT CONF DATA, P192, DOI 10.1109/ICDE.1998.655777
   GADIA SK, 1988, ACM T DATABASE SYST, V13, P418, DOI 10.1145/49346.50065
   GADIA SK, 1993, LECT NOTES COMPUTER, V759, P213
   Gadia SK., 1985, Proceedings of the 4th ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, P51
   Gadia SK., 1993, Proceedings of the International Workshop on an Infrastructure for Temporal Databases, pQ1
   Gao DF, 2005, VLDB J, V14, P2, DOI 10.1007/s00778-003-0111-3
   HUBLER P, 2000, P 15 BRAZ S DAT JOAO
   Jensen C.S., 1993, Proceedings of the International Workshop on an Infrastructure for Temporal Databases, pQQ1
   Ma S., 2004, THESIS IOWA STATE U
   Noh SY, 2006, INFORM SOFTWARE TECH, V48, P807, DOI 10.1016/j.infsof.2005.10.002
   Noh SY, 2005, 12th International Symposium on Temporal Representation and Reasoning, Proceedings, P180
   NOH SY, J SYSTEMS S IN PRESS
   NOH SY, 2004, P 2 INT C COMP SCI A, P312
   NOH SY, 2005, 0522 IOW STAT U DEP
   SNODGRASS R, 1987, ACM T DATABASE SYST, V12, P247, DOI 10.1145/22952.22956
   Soo M. D., 1994, Proceedings. The 10th International Conference Data Engineering (Cat. No.94CH3383-7), P282, DOI 10.1109/ICDE.1994.283042
   Tansel AU., 1993, Temporal Databases: Theory, Design, and Implementation, P92
   Toman D., 1996, Proceedings of the Fifteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1996, P58, DOI 10.1145/237661.237676
   Toman D., 1997, Proceedings of the 5th International Conference on Deductive and Object-Oriented Databases, P103
   W3C, 2007, DOC OBJ MOD
   Wang HC, 2004, ONCOGENE, V23, P824, DOI 10.1038/sj.onc.1207168
   [No title captured]
NR 23
TC 4
Z9 7
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2008
VL 81
IS 11
BP 1931
EP 1943
DI 10.1016/j.jss.2008.01.015
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 363ON
UT WOS:000260276700009
DA 2024-07-18
ER

PT J
AU Ajila, SA
   Kaba, AB
AF Ajila, Samuel A.
   Kaba, Ali B.
TI Evolution support mechanisms for software product line process
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software product line process evolution; software development process;
   product line architecture; transient process; meta-process;
   feature-based object oriented model; use case modeling
ID VARIABILITY
AB Software product family process evolution needs specific support for incremental change. Product line process evolution involves in addition to identifying new requirements the building of a meta-process describing the migration from the old process to the new one. This paper presents basic mechanisms to support software product line process evolution, These mechanisms share four strategies change identification, change impact, change propagation, and change validation. It also examines three kinds of evolution processes - architecture, product line, and product. In addition, change management mechanisms are identified. Specifically we propose support mechanisms for static local entity evolution and complex entity evolution including transient evolution process. An evolution model prototype based on dependency relationships structure of the various product line artifacts is developed. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Ajila, Samuel A.] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Kaba, Ali B.] LORIA, F-54506 Vandoeuvre Les Nancy, France.
C3 Carleton University; Universite de Lorraine
RP Ajila, SA (corresponding author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM ajila@sce.carleton.ca; kaba@loria.fr
OI Ajila, Samuel/0000-0001-8824-1922
CR AJILA S, 1995, SOFTWARE PRACT EXPER, V25, P1155, DOI 10.1002/spe.4380251006
   Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   AJILA SA, 2002, INT C SOFTW ENG RES
   Ajila SA, 2007, J SYST SOFTWARE, V80, P74, DOI 10.1016/j.jss.2006.05.034
   AMERICA P, 1999, P 13 EUR C OBJ OR PR
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Chang SH, 2006, LECT NOTES COMPUT SC, V4034, P334
   Clements P., 2002, Software product lines
   Cook S, 2001, PROC IEEE INT CONF S, P592, DOI 10.1109/ICSM.2001.972776
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Estublier J, 2003, LECT NOTES COMPUT SC, V2786, P46
   Gruhn V, 2000, LECT NOTES COMPUT SC, V1780, P138
   Jacobson I., 2000, Unified Software Development Process
   JOACHIM B, 2001, LNCS, V2290, P409
   KABA AB, 1996, 10 INT SOFTW PROC WO
   KABA AB, 1996, THESIS CTR RECHERCHE
   LEHMAN M, 1985, APIC STUDIES DATA PR, V27
   ROBIN MR, 2003, JAVA DATA OBJECTS
   STEPHEN RS, 2000, SOFTWARE PRODUCT LIN, P437
   Tran HN, 2006, LECT NOTES COMPUT SC, V4034, P429
   Wang AI, 2000, LECT NOTES COMPUT SC, V1780, P115
   XAVIER F, 2003, LNCS, V2786, P74
NR 22
TC 18
Z9 19
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2008
VL 81
IS 10
BP 1784
EP 1801
DI 10.1016/j.jss.2007.12.797
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 351LZ
UT WOS:000259427100012
DA 2024-07-18
ER

PT J
AU Mendonça, NC
   Silva, JAF
   Anido, RO
AF Mendonca, Nabor C.
   Silva, Jose Airton F.
   Anido, Ricardo O.
TI Client-side selection of replicated web services:: An empirical
   assessment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE web service replication; web service selection; empirical evaluation
ID EFFICIENT; ACCESS
AB Replicating web services over physically distributed servers can offer client applications a number of QoS benefits, including higher availability and reduced response time. However, selecting the "best" service replica to invoke at the client-side is not a trivial task, as this requires taking into account factors such as local and external network conditions, and the servers' current workload. This paper presents an empirical assessment of five representative client-side service selection policies for accessing replicated web services. The assessment measured the response time obtained with each of the five policies, at two different client configurations, when accessing a world-wide replicated service with four replicas located in three continents. The assessment's results were analyzed both quantitatively and qualitatively. In essence, the results show that, in addition to the QoS levels provided by the external network and the remote servers, characteristics of the local client environment can have a significant impact on the performance of some of the policies investigated. In this regard, the paper presents a set of guidelines to help application developers in identifying a server selection policy that best suits a particular service replication scenario. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Mendonca, Nabor C.; Silva, Jose Airton F.] Univ Fortaleza, MIA, BR-60811905 Fortaleza, Ceara, Brazil.
   [Anido, Ricardo O.] Univ Estadual Campinas, IC, BR-13084971 Campinas, SP, Brazil.
C3 Universidade Fortaleza; Universidade Estadual de Campinas
RP Mendonça, NC (corresponding author), Univ Fortaleza, MIA, Av Washington Soares 1321, BR-60811905 Fortaleza, Ceara, Brazil.
EM nabor@unifor.br; jairtonfs@hot-mail.com; ranido@ic.unicamp.br
RI Mendonca, Nabor/O-8453-2015
OI Mendonca, Nabor/0000-0002-2972-9423
CR Adel Serhani M, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P113
   AMINI L, 2003, P 12 INT C WORLD WID, P472
   [Anonymous], 2006, 15 INT C WORLD WID W
   *AP, 2006, AXIS VERS 1 4
   CAULDWELF P, 2001, PROFESSIONAL XML WEB
   COSTA LAG, 2004, P IEEE INT C WEB SER
   DAMANI OP, 1997, P INT WORLD WID WEB, P1019
   Dykes S. G., 2000, Proceedings IEEE INFOCOM 2000. Conference on Computer Communications. Nineteenth Annual Joint Conference of the IEEE Computer and Communications Societies (Cat. No.00CH37064), P1361, DOI 10.1109/INFCOM.2000.832533
   HANNA MK, 2001, P 9 IEEE INT C NETW, P290
   Hu JQ, 2005, INT CONF E BUS ENG, P681, DOI 10.1109/ICEBE.2005.101
   Keidl M, 2004, LECT NOTES COMPUT SC, V2992, P826
   Liu Y., 2004, 13 INT WORLD WIDE WE, P66, DOI DOI 10.1145/1013367.1013379
   Makris C, 2006, J SYST SOFTWARE, V79, P480, DOI 10.1016/j.jss.2005.06.002
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   MENDONCA NC, 2005, P 20 ANN ACM S APPL, P1704
   *MICR, 2006, NET FRAM VERS 3 0
   OASIS, 2002, UN DESCR DISC INT UD
   Ouzzani M, 2004, IEEE INTERNET COMPUT, V8, P34
   PADOVITZ A, 2003, P 2 INT JOINT C AUT
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Ran S., 2003, ACM SIGECOM EXCHANGE, V4, P1, DOI DOI 10.1145/844357.844360
   Rodriguez P, 2002, IEEE ACM T NETWORK, V10, P455, DOI 10.1109/TNET.2002.801413
   SAYAL M, 1998, ACM SIGMETRICS PERFO, V26, P44
   *SUN, 2006, JAV WEB SERV DEV PAC
   Tian M, 2004, IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2004), PROCEEDINGS, P152, DOI 10.1109/WI.2004.10084
   W3C, 2003, SIMPL OBJ ACC PROT S
   W3C, 2001, WEB SERV DEF LANG WS
   YOSHIKAWA C, 1997, P USENIX ANN TECHN C
   Yu T, 2005, 2005 IEEE International Conference on e-Technology, e-Commerce and e-Service, Proceedings, P22
   YU T, 2005, J INFORM SYSTEMS E B, V3, P103
   ZHOU C, 2004, INT J WEB SERV RES, V1, P58, DOI DOI 10.4018/JWSR.2004040104
   Zhuge H, 2004, J SYST SOFTWARE, V72, P71, DOI 10.1016/S0164-1212(03)00058-X
NR 32
TC 11
Z9 12
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2008
VL 81
IS 8
BP 1346
EP 1363
DI 10.1016/j.jss.2007.11.002
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 342RJ
UT WOS:000258800900006
DA 2024-07-18
ER

PT J
AU Elish, KO
   Elish, MO
AF Elish, Karim O.
   Elish, Mahmoud O.
TI Predicting defect-prone software modules using support vector machines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Joint Meeting of the International Workshop on Software Measurement
   (IWSM)/International Conference on Software Process and Product
   Measurement (MENSURA)
CY NOV 05-07, 2007
CL Palma de Mallorca, SPAIN
DE software metrics; defect-prone modules; support vector machines;
   predictive models
ID DESIGN; METRICS; TREES
AB Effective prediction of defect-prone software modules can enable software developers to focus quality assurance activities and allocate effort and resources more efficiently. Support vector machines (SVM) have been successfully applied for solving both classification and regression problems in many applications. This paper evaluates the capability of SVM in predicting defect-prone software modules and compares its prediction performance against eight statistical and machine learning models in the context of four NASA datasets. The results indicate that the prediction performance of SVM is generally better than, or at least, is competitive against the compared models. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Elish, Karim O.; Elish, Mahmoud O.] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Elish, MO (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, POB 1082, Dhahran 31261, Saudi Arabia.
EM kelish@kfupm.edu.sa; clish@krupm.edu.sa
RI Elish, Mahmoud/I-8178-2018
OI Elish, Mahmoud/0000-0002-2767-0501
CR Abe S., 2005, ADV PTRN RECOGNIT
   [Anonymous], THESIS U YORK
   Azar D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P285, DOI 10.1109/ASE.2002.1115031
   Bao L, 2002, FEBS LETT, V521, P109, DOI 10.1016/S0014-5793(02)02835-1
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Burbidge R, 2001, COMPUT CHEM, V26, P5, DOI 10.1016/S0097-8485(01)00094-8
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Cai YD, 2002, COMPUT CHEM, V26, P293, DOI 10.1016/S0097-8485(01)00113-9
   Chen WH, 2005, COMPUT OPER RES, V32, P2617, DOI 10.1016/j.cor.2004.03.019
   Cherkassky V, 1997, IEEE Trans Neural Netw, V8, P1564, DOI 10.1109/TNN.1997.641482
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Drucker H, 1999, IEEE T NEURAL NETWOR, V10, P1048, DOI 10.1109/72.788645
   Duda R. O., 2001, PATTERN CLASSIFICATI, P517
   Dumais S, 1998, IEEE INTELL SYST APP, V13, P21
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gun S. R., 1998, SUPPORT VECTOR MACHI
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Han J., 2001, Data Mining: Concepts and Techniques, V3rd edn
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Koru AG, 2003, J SYST SOFTWARE, V67, P153, DOI 10.1016/S0164-1212(02)00126-7
   LIN S, 2003, P EUR WORKSH DAT MIN, P35
   MA Y, 2006, ADV MACHINE LEARNING
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Morris CW, 2001, ECOL MODEL, V146, P57, DOI 10.1016/S0304-3800(01)00296-4
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nadeau C, 2003, MACH LEARN, V52, P239, DOI 10.1023/A:1024068626366
   Osuna E, 1997, PROC CVPR IEEE, P130, DOI 10.1109/CVPR.1997.609310
   Schmidt M, 1996, INT CONF ACOUST SPEE, P105, DOI 10.1109/ICASSP.1996.540301
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Smola A.J., 1998, THESIS TU BERLIN GER
   Tay FEH, 2001, OMEGA-INT J MANAGE S, V29, P309, DOI 10.1016/S0305-0483(01)00026-3
   Webb R., 2002, STAT PATTERN RECOGNI
   Witten I. H., 2005, DATA MINING PRACTICA
NR 53
TC 295
Z9 333
U1 0
U2 29
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2008
VL 81
IS 5
BP 649
EP 660
DI 10.1016/j.jss.2007.07.040
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 292WD
UT WOS:000255295900005
DA 2024-07-18
ER

PT J
AU Burge, JE
   Brown, DC
AF Burge, Janet E.
   Brown, David C.
TI Software Engineering Using RATionale
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Brazilian Symposia on Databases and Software Engineering
CY OCT, 2006
CL Florianopolis, BRAZIL
DE assumptions; inference; rationale; requirements; software maintenance
ID DESIGN
AB Many decisions have to be made when developing a software system and a successful outcome depends on how well thought out these decisions were. One way that the decisions made, and alternatives considered, can be captured is in the rationale for the system. The rationale goes beyond standard documentation by capturing the developers' intent and all alternatives considered rather than only those selected. While the potential usefulness of this information is seldom questioned, it typically is not captured in practice. We feel that the key to motivating capture is to provide compelling uses and tool support integrated with the development environment. Here we describe the Software Engineering Using RATionale system which inferences over the rationale to evaluate decision alternatives and perform impact assessment when requirements, development criteria, and assumptions change. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Burge, Janet E.] Miami Univ, Dept Comp Sci & Syst Anal, Oxford, OH 45056 USA.
   [Brown, David C.] Worcester Polytech Inst, Dept Comp Sci, Worcester, MA 01609 USA.
C3 University System of Ohio; Miami University; Worcester Polytechnic
   Institute
RP Burge, JE (corresponding author), Miami Univ, Dept Comp Sci & Syst Anal, Oxford, OH 45056 USA.
EM burgeje@muohio.edu
CR [Anonymous], 2001, FORMAL ENG DESIGN SY
   Aurum A., 2003, Managing Software Engineering Knowledge
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bennett Keith H, 2000, Software maintenance and evolution, P73, DOI DOI 10.1145/336512.336534
   Boehm B., 1994, Proceedings. Third International Conference on the Software Process. Applying the Software Process (Cat. No.94TH8001), P59, DOI 10.1109/SPCON.1994.344423
   Bose P, 1995, 10TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P105, DOI 10.1109/KBSE.1995.490125
   Bratthall L, 2000, LECT NOTES COMPUT SC, V1840, P126
   BROWN DC, 1992, ENCY ART INT, V1, P331
   BROWN DC, 1997, SPECIAL DOUBLE ISSUE
   Bruegge B., 2000, Object-Oriented Software Engineering Conquering Complex and Changing Systems
   Burge J, 2000, ARTIFICIAL INTELLIGENCE IN DESIGN '00, P611
   Burge JE, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P273
   Burge Janet E., 2005, Ph.D. dissertation
   Burge JE, 2004, DESIGN COMPUTING AND COGNITION '04, P557
   Canfora G, 2000, INT J SOFTW ENG KNOW, V10, P627, DOI 10.1142/S0218194000000316
   Charette RN, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.589232
   Chung L., 2000, Non-functional Requirements in Software Engineering
   *CMU, 2002, QUAL MEAS TAX
   Conklin J., 1995, Design rationale concepts, techniques and use, P293
   Dellen B, 1996, PROCEEDINGS OF THE 11TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, P84, DOI 10.1109/KBSE.1996.552826
   DUTOIT A, 2001, HDB SOFTWARE ENG KNO, P787
   Dutoit AH, 2006, RATIONALE MANAGEMENT
   Edwards JS, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P5
   Falessi D., 2006, P 2006 ACMIEEE INT S, P134
   FILMAN RE, 1998, P WORKSH COMP SOFTW
   GARCIA A, 1993, 82 STANDF U CTR INT
   Ishino Y, 2006, ADV ENG INFORM, V20, P89, DOI 10.1016/j.aei.2005.04.002
   JIRO K, 2000, KJ METHOD SCI APPROA
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Karsenty L., 1996, Proc. SIGCHI conference on humans factors in computing systems (Vancouver, P150
   KLEIN M, 1997, EXCEPTION HANDLING A, P37
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   KUNZ W, 1970, 131 U CAL CTR URB RE
   LEE JT, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P114, DOI 10.1109/ICSE.1991.130629
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Levery M., 1998, Engineering Management Journal, V8, P34, DOI 10.1049/em:19980111
   LIKERT R, 1932, PRINCIPLES SOCIAL PS, P110
   LOUGHER R, 1993, SOFTWARE ENG J, V8, P295, DOI 10.1049/sej.1993.0036
   MacLean A, 1995, DESIGN RATIONALE CON, P201
   MAURER F, 1996, P KNOWL ACQ WORKSH 1, V2, P49
   MORAN T, 1995, DESIGN RATIONALE CON
   Pea-Mora F., 1996, AI EDAM, V11, P93
   Potts C., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P418, DOI 10.1109/ICSE.1988.93722
   RAMESH B, 1994, IEEE EXPERT, V9, P54, DOI 10.1109/64.294137
   Reiss SP, 2002, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSM.2002.1167763
   Shum SJB, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P111
   SIM S, 1994, NOTES ARTIFICIAL INT, P4
   SUTCLIFFE A, 1995, P S DES INT SYST PRO, P33
   Sutcliffe AG, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P164, DOI 10.1109/ICRE.1998.667822
   TONG C, 1992, ARTIF INTELL, V1, P1
   Toulmin S., 1958, The uses of argument
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zaychik V, 2003, RES ENG DES, V14, P75, DOI 10.1007/s00163-002-0027-8
   2005, MECH ENG MAGAZIN JAN, P10
NR 54
TC 45
Z9 51
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2008
VL 81
IS 3
BP 395
EP 413
DI 10.1016/j.jss.2007.05.004
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 284LZ
UT WOS:000254709200008
DA 2024-07-18
ER

PT J
AU Gondra, I
AF Gondra, Iker
TI Applying machine learning to software fault-proneness prediction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software testing; software metrics; ault-proneness; machine learning;
   neural network; sensitivity analysis; support vector machine
ID QUALITY; METRICS
AB The importance of software testing to quality assurance cannot be overemphasized. The estimation of a module's fault-proneness is important for minimizing cost and improving the effectiveness of the software testing process. Unfortunately, no general technique for estimating software fault-proneness is available. The observed correlation between some software metrics and fault-proneness has resulted in a variety of predictive models based on multiple metrics. Much work has concentrated on how to select the software metrics that are most likely to indicate fault-proneness. In this paper, we propose the use of machine learning for this purpose. Specifically, given historical data on software metric values and number of reported errors, an Artificial Neural Network (ANN) is trained. Then, in order to determine the importance of each software metric in predicting fault-proneness, a sensitivity analysis is performed on the trained ANN. The software metrics that are deemed to be the most critical are then used as the basis of an ANN-based predictive model of a continuous measure of fault-proneness. We also view fault-proneness prediction as a binary classification task (i.e., a module can either contain errors or be error-free) and use Support Vector Machines (SVM) as a state-of-the-art classification method. We perform a comparative experimental study of the effectiveness of ANNs and SVMs on a data set obtained from NASA's Metrics Data Program data repository. (c) 2007 Elsevier Inc. All rights reserved.
C1 St Francis Xavier Univ, Dept Math Stat & Comp Sci, Antigonish, NS B2G 2W5, Canada.
C3 Saint Francis Xavier University - Canada
RP Gondra, I (corresponding author), St Francis Xavier Univ, Dept Math Stat & Comp Sci, POB 5000, Antigonish, NS B2G 2W5, Canada.
EM iaondra@stfx.ca
CR [Anonymous], 1969, Applied Optimal Control: Optimization, Estimation and Control
   [Anonymous], 1961, Adaptive control processes: a guided tour, DOI DOI 10.1515/9781400874668
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Gershenfeld N.A., 1993, FUTURE TIME SERIES L, P1
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   JOLLIFFE I, 1986, PRINCIPLA COMPONENT
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   KHOSHGOFTAAR TM, 1990, IEEE J SEL AREA COMM, V8, P253, DOI 10.1109/49.46879
   KHOSHGOFTAAR TM, 1994, IEEE J SEL AREA COMM, V12, P279, DOI 10.1109/49.272878
   Lehman MM, 1998, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSM.1998.738510
   LI HF, 1987, IEEE T SOFTWARE ENG, V13, P697, DOI 10.1109/TSE.1987.233475
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Mercer J, 1909, PHILOS T R SOC LOND, V209, P415, DOI 10.1098/rsta.1909.0016
   Mitchell T. M., 1997, MACHINE LEARNING
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   MUNSON JC, 1990, INFORM SOFTWARE TECH, V32, P106, DOI 10.1016/0950-5849(90)90109-5
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Scott EM, 2000, SENSITIVITY ANAL
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   Wong F, 1991, P IEEE INT JOINT C N, P18
   Xing F, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P213
NR 32
TC 112
Z9 135
U1 1
U2 24
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2008
VL 81
IS 2
BP 186
EP 195
DI 10.1016/j.jss.2007.05.035
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261SJ
UT WOS:000253100000003
DA 2024-07-18
ER

PT J
AU Grinistad, S
   Jorgensen, M
AF Grinistad, Stein
   Jorgensen, Magne
TI Inconsistency of expert judgment-based estimates of software development
   effort
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software development; effort estimation; expert judgment; inconsistency
ID SYSTEMS
AB Expert judgment-based effort estimation of software development work is partly based on non-mechanical and unconscious processes. For this reason, a certain degree of intra-person inconsistency is expected, i.e., the same information presented to the same individual at different occasions sometimes lead to different effort estimates. In this paper, we report. from an experiment where seven experienced software professionals estimated the same sixty software development tasks over a period of three months. Six of the sixty tasks were estimated twice. We found a high degree of inconsistency in the software professionals' effort estimates. The mean difference of the effort estimates of the same task by the same estimator was as much as 71%. The correlation between the corresponding estimates was 0.7. Highly inconsistent effort estimates will, on average, be inaccurate and difficult to learn from. It is consequently important to focus estimation process improvement on consistency issues and thereby contribute to reduced budget-overruns, improved time-to-market, and better quality software. (C) 2007 Elsevier Inc. All rights reserved.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
   Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Grinistad, S (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM steingr@simula.no; magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], INT S EMP SOFTW ENG
   [Anonymous], 2003, IT PROJECT ESTIMATIO
   ARANDA J, 2005, ANCHORING ADJUSTMENT
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Grimstad S., 2006, FRAMEWORK ANAL SOFTW
   GRIMSTAD S, IN PRESS 18 AUSTR C
   GRUSCHKE TM, UNPUB EMPIRICAL STUD
   HARVEY N, 1995, ORGAN BEHAV HUM DEC, V63, P247, DOI 10.1006/obhd.1995.1077
   HEEMSTRA FJ, 1989, INT C ORG INF SYST B
   HOST M, 1998, INT C SOFTW ENG KYOT
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, IN PRESS INT J FOREC
   JORGENSEN M, 2002, COMBINATION SOFTWARE
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   KUSTERS RJ, 1990, INFORM SOFTWARE TECH, V32, P187, DOI 10.1016/0950-5849(90)90176-R
   LEVI K, 1989, IEEE T SYST MAN CYB, V19, P647, DOI 10.1109/21.31070
   Lusk C. M., 1991, Journal of Behavioral Decision Making, V4, P55, DOI 10.1002/bdm.3960040105
   MEEHL PE, 1957, J COUNS PSYCHOL, V4, P268, DOI 10.1037/h0047554
   MOLOKKEN K, 2004, SURVEY SOFTWARE ESTI
   Morera OF, 2001, J BEHAV DECIS MAKING, V14, P223, DOI 10.1002/bdm.374
   ROTHSTEIN HG, 1986, ORGAN BEHAV HUM DEC, V37, P83, DOI 10.1016/0749-5978(86)90045-2
   Shanteau J, 2002, EUR J OPER RES, V136, P253, DOI 10.1016/S0377-2217(01)00113-8
   Simonsohn U, 2007, J BEHAV DECIS MAKING, V20, P143, DOI 10.1002/bdm.545
   Sommerville, 2004, SOFTWARE ENG
   Stewart TR, 2001, INT SER OPER RES MAN, V30, P81
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
NR 31
TC 40
Z9 41
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2007
VL 80
IS 11
BP 1770
EP 1777
DI 10.1016/j.jss.2007.03.001
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224FU
UT WOS:000250433700002
DA 2024-07-18
ER

PT J
AU Müller, MM
AF Mueller, Matthias M.
TI Do programmer pairs make different mistakes than solo programmers?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Evaluation and Assessment in Software
   Engineering (EASE)
CY 2006
CL Keele Univ, Keele, ENGLAND
HO Keele Univ
DE pair programming; solo programming; defect comparison; eureka problems
AB Objective: Comparison of program defects caused by programmer pairs and solo developers.
   Design: Analysis of programs developed during two counter balanced experiments.
   Setting: Programming lab at University.
   Experimental units: 42 programs developed by computer science students participating in an extreme programming lab course.
   Main outcome measures: Programmer pairs make as many algorithmic mistakes but fewer expression mistakes than solo programmers.
   Results: The second result is significant on the 5% level.
   Conclusions: For simple problems, pair programming seems to lead to fewer mistakes than solo programming. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Karlsruhe, Fak Informat, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Müller, MM (corresponding author), Univ Karlsruhe, Fak Informat, Am Fasanengarten 5, D-76131 Karlsruhe, Germany.
EM muellerm@ira.uka.de
RI Müller, Matthias M/A-1055-2017
CR Forsyth D.R., 2006, Group Dynamics, V5th
   Fowler M., 1999, REFRACTORING IMPROVI
   HEIBERG S, 2003, LNCS, V2675, P215
   Hollander M., 1999, NOPARAMETRIC STAT ME
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   MULLER M, 2004, C EXTR PROGR AG PROC, P294
   MULLER M, 2006, EVALUATION ASSESSMEN, P69
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Nawrocki J., 2001, European Software Control and Metrics
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Steiner I. D., 1972, Group process and productivity
   Tomayko J.E., 2002, J COMPUTER SCI ED, V12, P213, DOI DOI 10.1076/CSED.12.3.213.8614
   WEISSTEIN E, 2006, GERSHGORIN CIRCLE TH
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
NR 16
TC 10
Z9 10
U1 1
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2007
VL 80
IS 9
BP 1460
EP 1471
DI 10.1016/j.jss.2006.10.032
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 210RB
UT WOS:000249472200005
DA 2024-07-18
ER

PT J
AU Liu, Y
   Cukic, B
   Fuller, E
   Yerramalla, S
   Gururajan, S
AF Liu, Yan
   Cukic, Bojan
   Fuller, Edgar
   Yerramalla, Sampath
   Gururajan, Srikanth
TI Monitoring techniques for an online neuro-adaptive controller
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Software Cybernetics (IWSC 2005)
CY JUL 25-28, 2005
CL Edinburgh, SCOTLAND
DE neural network; adaptive system; run-time monitoring; dynamic cell
   structure; support vector data description; validity index
AB The appeal of biologically inspired soft computing systems such as neural networks in complex systems comes from their ability to cope with a changing environment. Unfortunately, adaptability induces uncertainty that limits the applicability of static analysis to such systems. This is particularly true for systems with multiple adaptive components or systems with multiple types of learning operation. This work builds a paradigm of dynamic analysis for a neuro-adaptive controller where different types of learning are to be employed for its online neural networks. We use support vector data description as the novelty detector to detect unforeseen patterns that may cause abrupt system functionality changes. It differentiates transients from failures based on the duration and degree of novelties. Further, for incremental learning, we utilize Lyapunov functions to assess real-time performance of the online neural networks. For quasionline learning, we define a confidence measure, the validity index, to be associated with each network output. Our study on the NASA F-15 Intelligent Flight Control System demonstrates that our novelty detection tool effectively filters out transients and detects failures; and our light-weight monitoring techniques supply sufficient evidence for an insightful validation. (c) 2006 Elsevier Inc. All rights reserved.
C1 W Virginia Univ, Dept Math, Morgantown, WV 26506 USA.
   W Virginia Univ, Lane Dept CSEE, Morgantown, WV 26506 USA.
   Motorola Inc, Motorola Labs, Schaumburg, IL 60196 USA.
   W Virginia Univ, Dept Aerosp & Mech Engn, Morgantown, WV 26506 USA.
C3 West Virginia University; West Virginia University; Legend Holdings;
   Lenovo; West Virginia University
RP Fuller, E (corresponding author), W Virginia Univ, Dept Math, Morgantown, WV 26506 USA.
EM yanliu@motorola.com; cukic@csee.wvu.edu; ef@math.wvu.edu;
   sampath@csee.wvu.edu; srikanth@cemrweb.cemr.wvu.edu
RI Fuller, Edgar/ABC-5644-2020; Cukic, Bojan/B-8287-2009
OI Fuller, Edgar/0000-0003-4130-090X; Cukic, Bojan/0000-0001-7130-9054;
   Gururajan, Srikanth/0000-0002-3507-1066
CR [Anonymous], 1998, STAT LEARNING THEORY
   Bennett K.P., 2000, SIGKDD EXPLOR NEWSL, V2, P1, DOI [10.1145/380995.380999, DOI 10.1145/380995.380999]
   BOYD MA, 2001, VALIDATION VERIFICAT
   BRUSKE J, 1995, NEURAL COMPUT, V7, P845, DOI 10.1162/neco.1995.7.4.845
   DARRAH M, 2004, P 17 INT C FLOR ART
   GUPTA P, 2004, P HIGH ASS SOFTW SYS
   *I SCI RES INC, 2001, IFCDCSRD002UNCLASS01
   JORGENSEN C, 1991, WORLD AUT C ISSCI AL
   KOHONEN T, 1990, P IEEE, V78, P1464, DOI 10.1109/5.58325
   Liu Y, 2005, LECT NOTES COMPUT SC, V3610, P750
   MARTINETZ T, 1994, NEURAL NETWORKS, V7, P507, DOI 10.1016/0893-6080(94)90109-0
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   MILI A, 2003, COMPUTATIONAL METHOD
   MLADENOVSKI M, THESIS W VIRGINIA U
   Murphy RR, 1998, IEEE T ROBOTIC AUTOM, V14, P197, DOI 10.1109/70.681240
   MURPHY RR, 1996, FUSION INTEGRATION I, P125
   NAPOLITANO M, 1998, COMPLETE HARDWAR PAC
   *NASA, 1996, NASAGB17401396
   SOLAIMAN B, 1999, IEEE T GEOSCIENCE RE, V37
   Tax D. M., 2001, Proceedings of the 7th Annual Conference of the Advanced School for Computing and Imaging, P234
   Tax DMJ, 1999, PATTERN RECOGN LETT, V20, P1191, DOI 10.1016/S0167-8655(99)00087-2
   TAX DMJ, 1999, P EUR S ART NEUR NET, P241
   YERRAMALLA S, 2005, P DEP SYST NETW
   YERRAMALLA S, 2003, P 6 S SELFST SYST
   Zhou Y., 1997, P IEEE SIGN PROC WOR
   ZUBOV VI, 1964, METHODS AM LYAP THEI
NR 26
TC 5
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2006
VL 79
IS 11
BP 1527
EP 1540
DI 10.1016/j.jss.2006.03.048
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 108OR
UT WOS:000242249600005
DA 2024-07-18
ER

PT J
AU Zhang, L
   Qin, T
   Zhou, ZY
   Hao, D
   Sun, JS
AF Zhang, Lu
   Qin, Tao
   Zhou, Zhiying
   Hao, Dan
   Sun, Jiasu
TI Identifying use cases in source code
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE use case; software maintenance; software metrics; program comprehension;
   reverse engineering; branch-reserving call graph
ID STATIC NONINTERACTIVE APPROACH; FEATURES; SNIAFL; TOOL
AB Understanding the behavior of a software system is an important problem in software maintenance. As use cases have been accepted as an effective means for describing behavioral requirements for a software system, it should be helpful for maintainers to acquire the use case model from source code. In this paper, we propose a novel approach to identifying use cases in source code. The central idea of our approach is based on the observation that branch statements are a primary mechanism to separate one use case from another in source code. Following this idea, we design a static representation of software systems through incorporating branch information into the traditional call graph, which is named the Branch-Reserving Call Graph (BRCG). To effectively use this representation for use case identification, branches that do not serve as the separations of use cases should be pruned off in the BRCG. In this paper, we also provide a metric-based heuristic to automate this pruning. From the pruned BRCG, use cases, which may just undergo some modifications from human experts, can be generated through traversing the pruned BRCG. Overall, our method can effectively reduce the intensive human involvement in use case identification. We have also performed two case studies for this method on two shareware systems. The results from the case studies can confirm the effectiveness of our approach. (c) 2006 Elsevier Inc. All rights reserved.
C1 Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
C3 Peking University
RP Zhang, L (corresponding author), Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
EM zhanglu@sei.pku.edu.cn
RI Hao, Dan/A-8600-2015
OI Hao, Dan/0000-0001-8295-303X
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Di Lucca GA, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P108, DOI 10.1109/WCRE.2000.891458
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   El-Ramly M, 2002, PROG COMPREHEN, P21, DOI 10.1109/WPC.2002.1021305
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   Qin T, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P60, DOI 10.1109/APSEC.2003.1254358
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Simons AJH, 1999, TOOLS, V29, P194, DOI 10.1109/TOOLS.1999.779012
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   WILDE N, 1992, P INT C SOFTW MAINT, P200
   Wong WE, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P194, DOI 10.1109/ASSET.1999.756769
   Zhao W, 2004, PROC INT CONF SOFTW, P293, DOI 10.1109/ICSE.2004.1317452
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 18
TC 6
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2006
VL 79
IS 11
BP 1588
EP 1598
DI 10.1016/j.jss.2006.02.032
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 108OR
UT WOS:000242249600010
DA 2024-07-18
ER

PT J
AU Jeng, FG
   Wang, CM
AF Jeng, Fuh-Gwo
   Wang, Chung-Ming
TI An efficient key-management scheme for hierarchical access control based
   on elliptic curve cryptosystem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE elliptic curve cryptosystem; key management scheme; hierarchical access
   control
AB The elliptic curve cryptosystem is considered to be the strongest public-key cryptosystem known today and is preferred over the RSA cryptosystem because the key length for secure RSA has increased over recent years, and this has put a heavier processing load on its applications. An efficient key management and derivation scheme based on the elliptic curve cryptosystem is proposed in this paper to solve the hierarchical access control problem. Each class in the hierarchy is allowed to select its own secret key. The problem of efficiently adding or deleting classes can be solved without the necessity of regenerating keys for all the users in the hierarchy, as was the case in previous schemes. The scheme is shown much more efficiently and flexibly than the schemes proposed previously. (C) 2006 Elsevier Inc. All rights reserved.
C1 Natl Chiayi Univ, Dept Appl Math, Chiayi 60004, Taiwan.
   Natl Chung Hsing Univ, Inst Comp Sci, Taichung 40227, Taiwan.
C3 National Chiayi University; National Chung Hsing University
RP Jeng, FG (corresponding author), Natl Chiayi Univ, Dept Appl Math, 300 Syuefu Rd, Chiayi 60004, Taiwan.
EM fgjeng@mail.ncyu.edu.tw; cmwang@cs.nchu.edu.tw
CR AKL SG, 1983, ACM T COMPUT SYST, V1, P239, DOI 10.1145/357369.357372
   [Anonymous], 1981, SEMINUMERICAL ALGORI
   CHANDRASEKARAN R, 1992, IFDC SP PUB, V17, P3
   CHANG CC, 1993, COMPUT MATH APPL, V26, P71, DOI 10.1016/0898-1221(93)90075-7
   CHICK GC, 1990, CRYPTO 89, P316
   Fernandes A., 1999, Dr. Dobb's Journal
   Harn L., 1990, Computers & Security, V9, P539, DOI 10.1016/0167-4048(90)90132-D
   KOBLITZ N, 1987, MATH COMPUT, V48, P203, DOI 10.1090/S0025-5718-1987-0866109-5
   MACKINNON SJ, 1985, IEEE T COMPUT, V34, P797, DOI 10.1109/TC.1985.1676635
   MILLER VS, 1986, LECT NOTES COMPUT SC, V218, P417, DOI 10.1007/3-540-39799-x_31
   Stallings W., 2003, CRYPTOGRAPHY NETWORK
   TSAI HM, 1995, COMPUT SECUR, V14, P159, DOI 10.1016/0167-4048(95)97049-G
   Vanstone SA., 1997, Environ Inform Secur Techn Report, V2, P78
   Wu KP, 2001, IEICE T INF SYST, VE84D, P700
   ZHENG Y, 1993, 932 U WOLL DEP COMP
NR 15
TC 25
Z9 27
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2006
VL 79
IS 8
BP 1161
EP 1167
DI 10.1016/j.jss.2006.01.018
PG 7
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 075MW
UT WOS:000239890100011
DA 2024-07-18
ER

PT J
AU López-Nores, M
   Pazos-Arias, J
   García-Duque, J
   Blanco-Fernández, Y
   Ramos-Cabrer, M
   Gil-Solla, A
   Fernández-Vilas, A
   Díaz-Redondo, R
AF Lopez-Nores, Martin
   Pazos-Arias, Jose
   Garcia-Duque, Jorge
   Blanco-Fernandez, Yolanda
   Ramos-Cabrer, Manuel
   Gil-Solla, Alberto
   Fernandez-Vilas, Ana
   Diaz-Redondo, Rebeca
TI Formal specification applied to multiuser distributed services::
   Experiences in collaborative t-learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE multiuser systems; interaction patterns; formal specification
AB The development of multiuser and distributed software systems faces the difficulty to program the applications correctly, in a way that guarantees the desired interaction among the users. Motivated by experiences with collaborative t-learning services (i.e. multiuser educational services over Interactive TV), this paper presents a solution to that problem, based on supplementing visual development with formal specification techniques. As a contribution to the development of interactive systems, a software process is introduced that helps defining the separate and the conjoint behavior of different users, incrementally and using highly-accessible formalisms. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Vigo, Dept Telemat Engn, Vigo, Spain.
C3 Universidade de Vigo
RP López-Nores, M (corresponding author), ETSE Telecomun, Campus Univ S-N, Vigo 36310, Spain.
EM mlnores@det.uvigo.es
RI Díaz Redondo, Rebeca P./L-3108-2014; Arias, José/ITR-8005-2023; Vilas,
   Ana Fernández/L-2055-2014; Nores, Martín López/F-9378-2016; Nores,
   Martín López/AAG-8636-2020; José, Pazos Arias/F-6788-2016; Ramos Cabrer,
   Manuel/F-5339-2016; Blanco-Fernandez, Yolanda/F-8111-2016; Gil,
   Alberto/F-6827-2016
OI Díaz Redondo, Rebeca P./0000-0002-2367-2219; Vilas, Ana
   Fernández/0000-0003-1047-2143; Nores, Martín López/0000-0002-4802-607X;
   José, Pazos Arias/0000-0002-0424-5481; Ramos Cabrer,
   Manuel/0000-0002-1684-2160; Blanco-Fernandez,
   Yolanda/0000-0002-1816-1377; Gil, Alberto/0000-0002-9641-4149
CR Anderson G. E., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P252, DOI 10.1109/ICSE.2000.870416
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 1952, BIBLIOTHECA MATH
   [Anonymous], 1995, Scenario-based design: Envisioning work and technology in system development
   [Anonymous], INFORM RES
   BASS L, 1991, P US INT DEV WORKSH, P2
   Bastide R, 1999, J VISUAL LANG COMPUT, V10, P481, DOI 10.1006/jvlc.1999.0127
   Bastide R., 2002, Proceedings of the CHI'02 Extended Abstracts on Human Factors in Computing Systems, P516, DOI DOI 10.1145/506443.506457
   BASTIDE R, 1994, P E W C HUM COMP INT
   BOUDREAU T., 2002, NetBeans: the definitive guide
   Bowen JP, 2005, P 10 INT WORKSH FORM, P8, DOI DOI 10.1145/1081180.1081183
   Clarke E, 2001, LECT NOTES COMPUT SC, V2000, P176
   CUPPENS E, 2005, P 12 INT WORKSH INT
   d'Avila Garcez A. S., 2003, IEE Proceedings-Software, V150, P25, DOI 10.1049/ip-sen:20030207
   DEWAN P, 1999, ARCHITECTURES COLLAB
   *DIG VID BROADC CO, 2003, 102812 ETSI TS
   DITTMAR A, 2004, P DSV IS HAMB GERM, P59
   Dix A.J., 1991, Formal Methods for Interactive Systems
   Fantinato M, 2003, LECT NOTES COMPUT SC, V2844, P34
   FOWLER M, 2004, NEW METHODOLOGY
   FUGETTA A, 2000, P 22 INT C SOFTW ENG, P25
   Garcez ASD, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P354, DOI 10.1109/ASE.2001.989828
   García-Duque J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P282, DOI 10.1109/ICRE.2002.1048539
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Garrido J. L., 2001, LNCS, V2220, P128
   Gram C., 1995, DESIGN PRINCIPLES IN
   Haber C, 2001, 12TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P519, DOI 10.1109/DEXA.2001.953113
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   HILL R, 1994, ACM T COMPUTER HUMAN, V1
   Hubbers E, 2003, INT FED INFO PROC, V122, P465
   Kallmann M, 2002, J VISUAL LANG COMPUT, V13, P177, DOI 10.1006/jvlc.2001.0229
   KAYAMA M, 2004, ADV TECHNOLOGY LEARN, V1
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   LOPEZ PG, 2001, P EUR C COMP SUPP CO
   Lopez-Nores M., 2004, Proceedings. IEEE Sixth International Symposium on Multimedia Software, P72
   López-Nores M, 2005, LECT NOTES COMPUT SC, V3535, P147
   LOPEZNORES M, 2003, P 1 INT WORKSH MULT, P376
   LOPEZNORES M, 2005, P 3 EUR C INT TEL US, P231
   Lytras M., 2002, P EUR C E LEARN UXBR, P211
   MARTIN R, 1998, UML FINITE STATE MAC
   MATTHEWS J, 2000, INTRO GAME AI
   Moffett J., 1996, Requirements Engineering, V1, P27, DOI 10.1007/BF01235764
   Morris S., 2005, Interactive TV Standards: A Guide to MHP, OCAP
   NAVARRE D, 2001, LNCS, V2220, P88
   Parnas D.L., 1969, PROC 24 NATL ACM C, P379
   Patern'o F., 1999, Model-based design and evaluation of interactive applications
   Pazos Arias J. J., 2001, Formal Aspects of Computing, V13, P50, DOI 10.1007/PL00003939
   PAZOSARIAS J, 2005, ACM SOFTWARE ENG NOT, V30
   PAZOSARIAS JJ, IN PRESS SOFTWARE PR
   PHILLIPS W, 2005, P 12 INT WORKSH INT
   PHILLIPS WG, 1999, 1999425 QUEENS U DEP
   Redondo RebecaP. Diaz., 2005, International Journal of Software Engineering and Knowledge Engineering, V15, P607, DOI [10.1142/S021819400500249X., DOI 10.1142/S021819400500249X]
   ROST S, 2004, EVOLUTION FORMIDABLE
   SAGE M, 1998, P 5 INT WORKSH DES S, P134
   Sakharov A, 2000, ACM SIGPLAN NOTICES, V35, P51, DOI 10.1145/346443.346452
   Sarkisjan G., 1997, ALTORIENTALISCHE FOR, V24, P242
   *SUN MICR, 1997, JAVABEANS SPEC
   White L, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P54, DOI 10.1109/ISSRE.2001.989458
   Wittevrongel J, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P303
   YASUMOTO K, 1994, PROC INT CONF SOFTW, P169, DOI 10.1109/ICSE.1994.296776
NR 60
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2006
VL 79
IS 8
BP 1141
EP 1155
DI 10.1016/j.jss.2005.12.019
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 075MW
UT WOS:000239890100009
DA 2024-07-18
ER

PT J
AU Huang, CM
   Hsu, TH
   Lin, YW
AF Huang, CM
   Hsu, TH
   Lin, YW
TI REDUP: a packet loss recovery scheme for real-time audio streaming over
   wireless IP networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE wireless networks; real-time audio streaming; error control; flow
   control; transcode
AB Due to the characteristics of (1) smaller bandwidth and (2) unreliable transmission media, real-time audio streaming over wireless networks is not trivial. To have smooth audio streaming over wireless networks, we propose a scheme called REDUP in this paper. Two sending modes, in which redundant information is embedded in each packet, that the REDUP scheme contains are (1) the "redundant" mode and (2) the "duplicated" mode. Let a packet i can contain three audio frames i, i - 1, and i - 2. In the redundant mode, frame i uses a codec of better quality than that for frames i - 1 and i - 2. In the duplicated mode, frames i, i - 1, and i - 2 use the same codec, which has lower quality than that for frame i used in the redundant mode. The "redundant" mode may give better quality of sound but consumes more bandwidth, while the "duplicated" mode gives lower quality of sound but consumes less bandwidth. The two modes are selected depending on the networking situation. Round trip time (RTT) between the mobile host and the mobile gateway is used to determine the networking situation. Two thresholds named "upper-ratio" and "lower-ratio" are set. When the average RTT exceeds the upper-ratio multiplies the maximum RTT, the networking situation is set to congested; when the average RTT is under the lower-ratio multiplies the maximum RTT, the networking situation is set to unloaded. The transmission mode is switched from "redundant" to "duplicated" when the networking situation is determined to be congested. The transmission mode is switched from "duplicated" to "redundant" when the networking situation is determined to be unloaded. In this way, the redundant information of packets is adapted to the networking situation and the bandwidth can be utilized more effectively. (c) 2004 Elsevier Inc. All rights reserved.
C1 Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Lab Multimedia Mobile Networking, 1 Univ Rd, Tainan 70101, Taiwan.
EM huangcm@locust.csie.ncku.edu.tw
CR ARRANZ MG, 2001, P PIMRC 01 SAN DIEG, P72
   Bolot JC, 1996, IEEE INFOCOM SER, P232, DOI 10.1109/INFCOM.1996.497898
   Choi JH, 2002, 2002 4TH INTERNATIONAL WORKSHOP ON MOBILE AND WIRELESS COMMUNICATION NETWORK, P592, DOI 10.1109/MWCN.2002.1045834
   Huang L, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P307, DOI 10.1109/CDCS.2001.918722
   Ji MK, 2001, PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P645, DOI 10.1109/ICPADS.2001.934879
   Lee KK, 2002, IEEE T VEH TECHNOL, V51, P1569, DOI 10.1109/TVT.2002.804843
   LEI G, 2002, P IEEE INT S CIRC SY, V5, P629
   Leslie B, 2001, IEE CONF PUBL, P119, DOI 10.1049/cp:20010024
   LU S, 1998, P ACM MOBICOM, P10
   Na SG, 2000, IEEE INTERNATIONAL CONFERENCE ON NETWORKS 2000 (ICON 2000), PROCEEDINGS, P99, DOI 10.1109/ICON.2000.875775
   PADHYE C, 2000, P 19 IEEE INT PERF C, P307
   Park K, 2003, IEEE T CONSUM ELECTR, V49, P359, DOI 10.1109/TCE.2003.1209526
   Perkins C, 1998, IEEE NETWORK, V12, P40, DOI 10.1109/65.730750
   PERKINS CS, 1997, IETF AUDIO VIDEO TRA
   Ratnam K, 1998, THIRD IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P74, DOI 10.1109/ISCC.1998.702450
   Rejaie R, 1999, IEEE INFOCOM SER, P1337, DOI 10.1109/INFCOM.1999.752152
   Rhee I., 2000, TCP EMULATION RECEIV
   Rizzo L., 1997, ACM COMPUTER COMMUNI, V27, P24, DOI DOI 10.1145/263876.263881
   Schmandt C., 2004, P 2 INT C MOB SYST A, P59
   Sinha R., 2003, P P 13 INT WORKSH NE, P100
   SISALEM D, 1998, P INT WORKSH NETW OP, P215
   Tobe Y, 2000, C LOCAL COMPUT NETW, P252, DOI 10.1109/LCN.2000.891037
   WANG Y, 2003, P 11 ACM INT C MULT, P412
   WYSE L, 2003, P 11 ACM INT C MULT, P335
NR 24
TC 2
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2006
VL 79
IS 1
BP 29
EP 42
DI 10.1016/j.jss.2004.11.033
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 011CV
UT WOS:000235246300003
DA 2024-07-18
ER

PT J
AU Nam, JH
   Lee, JW
   Kim, SJ
   Won, DH
AF Nam, JH
   Lee, JW
   Kim, SJ
   Won, DH
TI DDH-based group key agreement in a mobile environment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE group key agreement; mobile device; multicast; DDH assumption
ID EXCHANGE SECURE; PROTOCOLS; AUTHENTICATION
AB A group key agreement protocol is designed to efficiently implement secure multicast channels for a group of parties communicating over an untrusted, open network by allowing them to agree on a common secret key. In the past decade many problems related to group key agreement have been tackled and solved (diminished if not solved), and recently some constant-round protocols have been proven secure in concrete, realistic setting. However, all forward-secure protocols so far are still too expensive for small mobile devices. In this paper we propose a new constant-round protocol well suited for a mobile environment and prove its security under the decisional Diffie-Hellman assumption. The protocol meets simplicity, efficiency, and all the desired security properties. (c) 2004 Elsevier Inc. All rights reserved.
C1 Sungkyunkwan Univ, Sch Informat & Commun Engn, Suwon 440746, South Korea.
C3 Sungkyunkwan University (SKKU)
RP Sungkyunkwan Univ, Sch Informat & Commun Engn, 300 Chunchun Dong, Suwon 440746, South Korea.
EM jhnam@dosan.skku.ac.kr
OI Kim, Seungjoo/0000-0002-2157-0403
CR Amir Y, 2002, INT CON DISTR COMP S, P463, DOI 10.1109/ICDCS.2002.1022291
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2001, P 2 ACM INT WORKSH D
   [Anonymous], P CCS 98
   Ateniese G, 2000, IEEE J SEL AREA COMM, V18, P628, DOI 10.1109/49.839937
   Bellare M, 2000, LECT NOTES COMPUT SC, V1807, P139
   Bellare Mihir, 1993, P ACM CCS 93, P62, DOI [10.1145/168588.168596, DOI 10.1145/168588.168596]
   Borisov N., 2001, MOBICOM 01, P180, DOI DOI 10.1145/381677.381695
   Boyd C, 2003, LECT NOTES COMPUT SC, V2567, P161
   Bresson E, 2003, MOBILE AND WIRELESS COMMUNICATIONS NETWORKS, P59, DOI 10.1142/9789812791146_0013
   Bresson E, 2004, LECT NOTES COMPUT SC, V2947, P115
   Bresson E, 2002, LECT NOTES COMPUT SC, V2332, P321
   Bresson E, 2002, LECT NOTES COMPUT SC, V2501, P497
   Bresson E., 2001, Proceedings of the 8th ACM Conference on Computer and Communication Gold Coast, Dec. 9-13, Berlin Heidelberg, P290, DOI DOI 10.1007/3-540-45682-118
   Bresson Emmanuel., 2001, ACM C COMPUTER COMMU, P255, DOI DOI 10.1145/501983.502018
   Burmester Mike., 1994, EUROCRYPT, P275
   Canetti R, 2001, LECT NOTES COMPUT SC, V2045, P453
   Diffie W., 1992, Designs, Codes and Cryptography, V2, P107, DOI 10.1007/BF00124891
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   ELGAMAL T, 1985, IEEE T INFORM THEORY, V31, P469, DOI 10.1109/TIT.1985.1057074
   GOLDREICH O, 1986, J ACM, V33, P792, DOI 10.1145/6490.6503
   GOLDWASSER S, 1988, SIAM J COMPUT, V17, P281, DOI 10.1137/0217017
   Horn G, 2002, IEEE T VEH TECHNOL, V51, P383, DOI 10.1109/25.994813
   INGEMARSSON I, 1982, IEEE T INFORM THEORY, V28, P714, DOI 10.1109/TIT.1982.1056542
   Katz J, 2007, J CRYPTOL, V20, P85, DOI 10.1007/s00145-006-0361-5
   Kim Y, 2001, INT FED INFO PROC, V65, P229
   Kim Y., 2000, ACM C COMPUTER COMMU, P235, DOI DOI 10.1145/352600.352638
   Lim SH, 2004, J SYST SOFTWARE, V69, P173, DOI 10.1016/S0164-1212(03)00083-9
   Mitchell CJ, 1998, ELECTRON LETT, V34, P980, DOI 10.1049/el:19980686
   NAM J, 2004251 CRYPT EPR AR
   Perrig A, 2001, P IEEE S SECUR PRIV, P247, DOI 10.1109/SECPRI.2001.924302
   PHAN T, 2002, P 8 ACM C MOB COMP N, P23
   Shamir A., 1979, Communications of the ACM, V22, P612, DOI 10.1145/359168.359176
   STEER D, 1988, LECT NOTES COMPUTER, V403, P520, DOI DOI 10.1007/0-387-34799-237
   Steiner M, 2000, IEEE T PARALL DISTR, V11, P769, DOI 10.1109/71.877936
   Tzeng WG, 2000, LECT NOTES COMPUT SC, V1976, P614
   WALLNER D, 1999, 2627 INT ENG TASK FO
   Wong C., 1998, ACM SIGCOMM 98, P68
   Yeh HT, 2004, J SYST SOFTWARE, V72, P97, DOI 10.1016/S0164-1212(03)00093-1
   Zhang JQ, 2004, 18TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1 (LONG PAPERS), PROCEEDINGS, P562
NR 40
TC 43
Z9 46
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2005
VL 78
IS 1
BP 73
EP 83
DI 10.1016/j.jss.2004.10.024
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 937TH
UT WOS:000229948000008
DA 2024-07-18
ER

PT J
AU Otero, MC
   Dolado, JJ
AF Otero, MC
   Dolado, JJ
TI An empirical comparison of the dynamic modeling in OML and UML
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Unified Modeling Language (UML); OPEN Modeling Language (OML); dynamic
   modeling; empirical software engineering; crossover design; semantic
   comprehension
AB This paper presents an empirical research for evaluating the semantic comprehension of two standard languages, UML (Unified Modeling Language) versus OML (OPEN Modeling Language), from the perspective of the dynamic modeling. We carried out two controlled experiments using a 2 x 2 crossover design, where the metrics Studied were the comprehension time and the total score. We examined the OML and UML interaction diagrams and the statecharts of each language corresponding to the design of a real-time embedded system. The results obtained reveal that the specification of the dynamic behavior using OML is faster to comprehend and easier to interpret than using the UML language, regardless of the dynamic diagram type. (c) 2004 Elsevier Inc. All rights reserved.
C1 Univ Basque Country, Dept Comp Languages & Syst, Escuela Univ Ingn, Vitoria 01006, Spain.
C3 University of Basque Country
RP Univ Basque Country, Dept Comp Languages & Syst, Escuela Univ Ingn, Nieves Cano 12, Vitoria 01006, Spain.
EM jipotvim@vc.ehu.es; dolado@si.ehu.es
RI Dolado, José Javier/I-5402-2015
OI Dolado, José Javier/0000-0002-3301-5650; Otero Vidal, Mari
   Carmen/0000-0002-5321-9271
CR [Anonymous], ANAL MESSY DATA
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Armitage P., 2001, STAT METHODS MED RES, V4th
   Barbier F, 2000, ANN SOFTW ENG, V10, P67, DOI 10.1023/A:1018935632373
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Burd E, 2002, PROG COMPREHEN, P107, DOI 10.1109/WPC.2002.1021329
   Dallal GE, 2000, COMPUTER AIDED ANAL
   Dolado JJ, 2003, IEEE T SOFTWARE ENG, V29, P665, DOI 10.1109/TSE.2003.1214329
   FIRESMITH D, 1998, OPEN MODELING LANGUA
   FIRESMITH DG, 1998, DOCUMENTING COMPLETE
   Hahn J., 1999, ACM Transactions on Computer-Human Interaction, V6, P181, DOI 10.1145/329693.329694
   Henderson-Sellers B, 1999, INFORM SOFTWARE TECH, V41, P139, DOI 10.1016/S0950-5849(98)00127-X
   Henderson-Sellers B, 2001, INFORM SOFTWARE TECH, V43, P705, DOI 10.1016/S0950-5849(01)00180-X
   Henderson-Sellers B., 1998, OPEN TOOLBOX TECHNIQ
   HENDERSONSELLER.B, 2000, OPEN MODELING UML
   Jones B., 1989, DESIGN ANAL CROSS OV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KRIK RE, 1995, EXPT DESIGN PROCEDUR
   Krogstie J., 2003, UML and the unified process, P1
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   *NCSS, 2000, NCSS 2000 US GUID 3
   *OMG, 2003, UML 1 5 CURR OFF VER
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   *PASS, 2002, POW AN SAMP SIZ SOFT
   PURCHASE HC, 2001, LNCS, V1984, P5
   Rumbaugh J., 1999, The unified software development process
   Rumbaugh James, 1999, The unified modeling language reference manual
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Simons A., 1999, BEHAV SPECIFICATIONS, P237
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zendler A, 2001, J SYST SOFTWARE, V57, P21, DOI 10.1016/S0164-1212(00)00114-X
   [No title captured]
NR 33
TC 10
Z9 10
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2005
VL 77
IS 2
BP 91
EP 102
DI 10.1016/j.jss.2004.11.022
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 931MI
UT WOS:000229489000002
DA 2024-07-18
ER

PT J
AU Kusmierek, E
   Du, DHC
AF Kusmierek, E
   Du, DHC
TI Streaming video delivery over Internet with adaptive end-to-end QoS
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE video streaming; adaptive multimedia; network-aware application
AB Many multimedia applications rely on video streaming techniques. However, video delivery over a Best Effort network such as today's Internet is a challenge. Traffic load in the network changes dynamically and in an unpredictable way causing the resource availability to vary. Providing an application level end-to-end quality of service in such an environment requires network-awareness and ability to adapt. We address the issue of mapping between application-level quality of service for streaming video and network-level quality of service. We show that continuous playback requires a limit on the delay jitter. We tackle the problem of providing end-to-end video quality given that the network does not guarantee limited delay variability. Our approach is unique in a way we do not model network as a black box but investigate what information about the network status is necessary for an application to make adaptation decisions. We rely on simple multi-level ECN-based mechanism to obtain a feedback from the network as well as on end-point observations to determine available bandwidth. Such an approach allows to obtain better user-perceived video quality by providing additional information to properly interpret the arrival rate observed at the end-point. We propose a 3-rate adaptation mechanism for video streaming to illustrate the philosophy of adaptivity based on network awareness, where the network awareness is not limited to observing network reaction to a set of stimuli. (C) 2004 Elsevier Inc. All rights reserved.
C1 Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities
RP Univ Minnesota, Dept Comp Sci & Engn, 200 Union St SE, Minneapolis, MN 55455 USA.
EM kusmiere@cs.umn.edu; du@cs.umn.edu
CR Bolliger J, 1998, IEEE T SOFTWARE ENG, V24, P376, DOI 10.1109/32.685260
   CARTER RL, 1996, PERFORMANCE EVALUATI
   Dovrolis C, 2001, IEEE INFOCOM SER, P905, DOI 10.1109/INFCOM.2001.916282
   DUFFIELD N, 1999, IEEE ACM T NETWORKIN
   DURRESI A, 2001, 5 WORLD MULT C SYST
   Floyd S, 2000, ACM SIGCOMM COMP COM, V30, P43, DOI 10.1145/347057.347397
   Fung CW, 1999, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA COMPUTING AND SYSTEMS, PROCEEDINGS VOL 2, P67, DOI 10.1109/MMCS.1999.778141
   Jain M, 2002, ACM SIGCOMM COMP COM, V32, P295, DOI 10.1145/964725.633054
   LEI Z, 2003, IEEE INT C MULTIMEDI
   Ma WH, 2002, IEEE T MULTIMEDIA, V4, P539, DOI 10.1109/TMM.2002.806536
   RAMAKRISHNAN K, 2001, 3168 ECN RFC
   RAMAKRISHNAN KK, 1990, ACM T COMPUT SYST, V8, P158, DOI 10.1145/78952.78955
   Rejaie R, 1999, COMP COMM R, V29, P189, DOI 10.1145/316194.316222
   Rejaie R, 1999, IEEE INFOCOM SER, P1337, DOI 10.1109/INFCOM.1999.752152
   SALEHI JD, 1996, MEASUREMENT MODELING, P222
   [No title captured]
NR 16
TC 8
Z9 11
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2005
VL 75
IS 3
BP 237
EP 252
DI 10.1016/j.jss.2003.12.034
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 887WY
UT WOS:000226337400002
DA 2024-07-18
ER

PT J
AU Park, HK
   Son, JH
   Kim, MH
AF Park, HK
   Son, JH
   Kim, MH
TI Adaptive index management for future location-based queries
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE spatiotemporal databases; moving object; indexing; dynamic management
ID OBJECTS
AB Many location-based applications have arisen in various areas including mobile communications, traffic control and military command and control (CZ) systems. And one of the important research issue in these areas is tracking and managing moving objects through spatiotemporal indexing for the efficient location-based services. However, managing exact geometric location information is difficult to be achieved due to continual changes of moving objects.
   Traditionally spatiotemporal index structures focus on optimizing the node accesses during construction and massive updates that do not refer on-line movement updates. In this paper we propose an indexing framework for future location queries based on space partitioning and the dual transformation. Our method provides a constraint database approach for constructing indexes to improve the efficiency of spatiotemporal query answering. In addition, the performance enhancement is achieved by our cost-based dynamic management algorithm that determines the appropriate index reorganization probabilistically induced by various mobility models and query cost functions. This approach can be applied for the predictive range queries on moving object's trajectories specifically in the mobile communication environments. We evaluate our method and compare the performance with the related spatiotemporal index structures in the simulated environments. (C) 2004 Elsevier Inc. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Div Comp Sci, Taejon 305701, South Korea.
   Hanyang Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Hanyang
   University
RP Korea Adv Inst Sci & Technol, Div Comp Sci, Taejon 305701, South Korea.
EM hkpark@dbserver.kaist.ac.kr
RI Kim, Myoung Ho/C-1997-2011
CR Aboulnaga A, 2001, DISTRIB PARALLEL DAT, V10, P111, DOI 10.1023/A:1019256828670
   Agarwal PK, 2000, J COMPUT SYST SCI, V61, P194, DOI 10.1006/jcss.2000.1709
   [Anonymous], P ACM S PRINC DAT SY
   Basch J, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P747
   BERTIMAS D, 1997, INTRO LINEAR OPTIMIZ
   Gaede V, 1998, ACM COMPUT SURV, V30, P170, DOI 10.1145/280277.280279
   KOLLIOS G, 1999, P PODS, P262
   Liang B, 1999, IEEE INFOCOM SER, P1377, DOI 10.1109/INFCOM.1999.752157
   Park HK, 2003, LECT NOTES COMPUT SC, V2574, P78
   Pitoura E, 2001, IEEE T KNOWL DATA EN, V13, P571, DOI 10.1109/69.940733
   Rams ak F., 2000, VLDB, P263
   Ross S. M., 1996, Stochastic processes, V2nd
   Saltenis S, 2000, SIGMOD REC, V29, P331, DOI 10.1145/335191.335427
   Sistla AP, 1997, PROC INT CONF DATA, P422, DOI 10.1109/ICDE.1997.581973
   Tao YF, 2003, ACM T DATABASE SYST, V28, P101, DOI 10.1145/777943.777944
   Tao YF, 2002, PROC INT CONF DATA, P191, DOI 10.1109/ICDE.2002.994709
   Tayeb J, 1998, COMPUT J, V41, P185, DOI 10.1093/comjnl/41.3.185
   Varman PJ, 1997, IEEE T KNOWL DATA EN, V9, P391, DOI 10.1109/69.599929
   Wolfson O, 1999, DISTRIB PARALLEL DAT, V7, P257, DOI 10.1023/A:1008782710752
   Wong VWS, 2000, IEEE NETWORK, V14, P18, DOI 10.1109/65.871336
NR 20
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB 1
PY 2005
VL 74
IS 3
BP 313
EP 324
DI 10.1016/j.jss.2004.03.018
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 872YV
UT WOS:000225246300009
DA 2024-07-18
ER

PT J
AU Clark, J
   Clarke, C
   De Panfilis, S
   Granatella, G
   Predonzani, P
   Sillitti, A
   Succi, G
   Vernazza, T
AF Clark, J
   Clarke, C
   De Panfilis, S
   Granatella, G
   Predonzani, P
   Sillitti, A
   Succi, G
   Vernazza, T
TI Selecting components in large COTS repositories
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE COTS repositories; component selection
AB The growing availability of COTS (commercial-off-the-shelf) components in the software market has concretized the possibility of building whole systems based on components. In this multitude, a recurrent problem is the location and selection of the components that best fit the requirements. Commercial repositories that offer search mechanisms have reduced these difficulties: system integrators can rely on a wider variety of components and can focus better on the composition of systems. The size of the repository can be an initial obstacle but iterative approaches allow integrators to familiarize with the repository's structure and to formulate effective queries. This paper discusses the search techniques in CLARiFi, a component broker project that supports integrators in the selection of components for systems. (C) 2003 Elsevier Inc. All rights reserved.
C1 Univ Genoa, DIST, I-16145 Genoa, Italy.
   BTexact Technol, Ipswich IP5 3RE, Suffolk, England.
   Engn Ingn Informat Spa, I-00185 Rome, Italy.
   Free Univ Bozen, Ctr Appl Software Engn, Fac Comp Sci, I-39100 Bolzano, Italy.
C3 University of Genoa; Free University of Bozen-Bolzano
RP Univ Genoa, DIST, Viale Causa 13, I-16145 Genoa, Italy.
EM justin.clark@bt.com; chris.t.clarke@bt.com; depa@eng.it;
   giampi@dist.unige.it; paolo.predonzani@bt.com; alberto@dist.unige.it;
   giancarlo.succi@unibz.it; tullio@dist.unige.it
RI Succi, Giancarlo/AAZ-2354-2020
OI Succi, Giancarlo/0000-0001-8847-0186
CR BORGIDA A, 1999, 21 INT C SOFTW ENG I
   Damiani E., 1999, ACM T SOFTWARE ENG M, V8
   DURLACHER, 1999, BUSINESS BUSINESS EC
   FRAKES WB, 1994, IEEE T SOFTWARE ENG, V20, P617, DOI 10.1109/32.310671
   HENNINGER S, 1994, IEEE SOFTWARE, V11, P48, DOI 10.1109/52.311059
   HENNINGER S, 1997, ACM T SOFTWARE ENG M, V6
   KRIEGER D, 1998, IEEE COMPUTER, V31
   *OECD, 1999, BUSINESS BUSINESS EL
   PRIETODIAZ R, 1987, CLASSIFYING SOFTWARE, V4
   Szyperski C., 2002, Component Software-Beyond Object-Oriented Programming
   TOSTERTAG E, 1992, ACM T SOFTWARE ENG M, V1
   VANDERLINDEN F, 1994, IEEE SOFTWARE, V12
   VANEMDEBOASLUBS.H, 2000, IBM SYSTEMS J, V39
NR 13
TC 26
Z9 28
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2004
VL 73
IS 2
BP 323
EP 331
DI 10.1016/j.jss.2003.09.019
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 849VZ
UT WOS:000223570800013
DA 2024-07-18
ER

PT J
AU Hwang, JJ
   Whang, KY
   Moon, YS
   Lee, BS
AF Hwang, JJ
   Whang, KY
   Moon, YS
   Lee, BS
TI A top-down approach for density-based clustering using multidimensional
   indexes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE databases; clustering; density-based pruning; multidimensional indexes
AB Clustering on large databases has been studied actively as all increasing number of applications involve huge amount of data. In this paper, we propose all efficient top-down approach for density-based clustering, which is based on the density information stored in index nodes of a multidimensional index. We first provide a formal definition of the cluster based on the concept of region contrast partition. Based on this notion, we propose a novel top-down clustering algorithm, which improves the efficiency through branch-and-bound pruning. For this pruning, we present a technique for determining the bounds based oil sparse and dense internal regions and formally prove the correctness of the bounds. Experimental results show that the proposed method reduces the elapsed time by up to 96 times compared with that of BIRCH, which is a well-known clustering method. The results also show that the performance improvement becomes more marked as the size of the database increases. (C) 2003 Elsevier Inc. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
   Korea Adv Inst Sci & Technol, Adv Informat Technol Res Ctr, Taejon 305701, South Korea.
   Univ Vermont, Dept Comp Sci, Burlington, VT 05405 USA.
C3 Korea Advanced Institute of Science & Technology (KAIST); Korea Advanced
   Institute of Science & Technology (KAIST); University of Vermont
RP Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM jjhwang@mozart.kaist.ac.kr; kywhang@mozart.kaist.ac.kr;
   ysmoon@mozart.kaist.ac.kr; bslee@cs.uvm.edu
RI Whang, Kyu-Young/C-2009-2011; Lee, Byung/JVZ-2098-2024
CR Ankerst M, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P49
   BREUNIG M, 2001, P INT C MAN DAT ACM, P79
   Chen MS, 1996, IEEE T KNOWL DATA EN, V8, P866, DOI 10.1109/69.553155
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Ester Martin., 1995, P 4 INT S LARGE SPAT, P67
   Ganti V, 1999, PROC INT CONF DATA, P502, DOI 10.1109/ICDE.1999.754966
   Guha S., 1998, SIGMOD Record, V27, P73, DOI 10.1145/276305.276312
   HWANG JJ, 2003, CSTR2003189 KAIST
   Karypis G, 1999, COMPUTER, V32, P68, DOI 10.1109/2.781637
   Kaufman L., 2009, FINDING GROUPS DATA
   KUMAR A, 1994, IEEE T KNOWL DATA EN, V6, P341, DOI 10.1109/69.277778
   Lee JH, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P416
   Ng R.T., 1994, P 20 INT C VERY LARG, P144
   Palmer Christopher., 2000, PROC ACM SIGMOD INT, P82
   Schilling Martin, 1996, Digestive Surgery, V13, P2, DOI 10.1159/000172396
   SEEGER B, 1990, VERY LARGE DATA BASES, P590
   Sheikholeslami G., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P428
   WHANG KY, 1990, ACM T DATABASE SYST, V15, P208, DOI 10.1145/78922.78925
   WHANG KY, 1985, RC11516 IBM
   Zhang T., 1996, BIRCH EFFICIENT DATA, V25, P103, DOI [DOI 10.1145/233269.233324, 10.1145/235968.233324]
NR 20
TC 3
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2004
VL 73
IS 1
BP 169
EP 180
DI 10.1016/j.jss.2003.08.237
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840DB
UT WOS:000222836100014
DA 2024-07-18
ER

PT J
AU Pretschner, A
   Lötzbeyer, H
   Philipps, J
AF Pretschner, A
   Lötzbeyer, H
   Philipps, J
TI Model based testing in incremental system development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE cleanroom SW engineering; constraint logic programming; extreme
   programming; incremental development; rapid prototyping; reactive
   systems; test case generation
ID GENERATION; SPECIFICATION
AB The spiraling nature of evolutionary software development processes produces executable parts of the system at the end of each loop. It is argued that these parts should consist not only of programming language code, but of executable graphical system models. As a main benefit of the use of more abstract, yet formal, modeling languages, a method for model based test sequence generation for reactive systems on the grounds of Constraint Logic Programming as well as its implementation in the CASE tool AUTOFOCUS is presented. (C) 2003 Elsevier Inc. All rights reserved.
C1 Tech Univ Munich, Inst Informat, D-85748 Garching, Germany.
C3 Technical University of Munich
RP Tech Univ Munich, Inst Informat, Boltzmannstr 3, D-85748 Garching, Germany.
EM pretschn@in.tum.de
CR Ambler S.W., 2002, AGILE MODELING
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], P IFIP 10 WORLD COMP
   [Anonymous], 1994, LNCS
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bender K, 2002, LECT NOTES CONTR INF, V279, P37
   BINDER R, 2001, TESTING OBJECTING OR
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BOGER M, 2000, P EXTR PROGR FLEX PR
   BOURHFIR C, 1996, 1043 IRO
   BURTON S, 2001, P 1 WORKSH FORM APPR, P31
   CIARLINI A, 1999, 5 WORKSH GERM BRAZ P
   Claessen K., 2000, P INT C FUNCT PROGR
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   CUI B, 1998, LOGIC PROGRAMMING MO, P1
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   DENNEY R, 1991, IEEE SOFTWARE, V8, P49, DOI 10.1109/52.73749
   DUBOUSQUET L, 2000, P 5 INT WORKSH FORM
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   EDELKAMP S, 2001, 8 INT SPIN WORKSH MO
   FERNANDEZ JC, 1996, P 8 INT C COMP AID V
   FETZER JH, 1988, COMMUN ACM, V31, P1048, DOI 10.1145/48529.48530
   FOWLER M, 1999, REFRACTING IMPROVING
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   FRIBOURG L, 1999, P 9 INT WORKSH LOG B, V1817
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   GROCE A, 2002, P INT S SOFTW TEST A
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HOWDEN WE, 1978, SOFTWARE PRACT EXPER, V8, P381, DOI 10.1002/spe.4380080402
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   HOWDEN WE, 1975, IEEE T COMPUT, VC 24, P554, DOI 10.1109/T-C.1975.224259
   HUBER F, 1996, LNCS, V1135
   Jackson M., 1995, SOFTWARE REQUIREMENT
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOCH B, P IEEE INT WORKSH IN
   LEGEARD B, 2001, P APPR FORM ASS DEV, P113
   LEVESON NG, 1999, FOSE 99 FDN SOFTW EN
   LOTZBEYER H, 2000, P CONSTR LOG PROGR
   LOTZBEYER H, 2000, P 2 WORKSH RUL BAS C
   MARRE B, 2000, P 15 IEEE INT C AUT
   MEUDEC C, 2000, P 1 INT WORKSH AUT P
   NTAFOS SC, 1988, IEEE T SOFTWARE ENG, V14, P868, DOI 10.1109/32.6165
   PHILIPPS J, 1999, APSEC 99 IEEE COMP S, P449
   PHILIPPS J, 1997, TUM19718 I INF
   PHILIPPS J, 2001, P 10 OOPSLA WORKSH B, P187
   Pretschner A., 2001, Proceedings 12th International Workshop on Rapid System Prototyping. RSP 2001, P155, DOI 10.1109/IWRSP.2001.933854
   Pretschner A., 2002, TUM10205 I INF
   PRETSCHNER A, 2001, P 6 INT WORKSH FORM, P79
   Prowell S.J., 1999, SEI S SOFTW
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   RAYMOND P, 1998, P 19 IEEE REAL TIM S
   RUSU V, 2000, P INT FORM METH
   SADEGHIPOUR S, 1998, THESIS TU BERLIN
   SCHATZ B, 2002, TUM10204 I INF
   Thompson S., 1999, The Craft of Functional Programming, V2nd
   Tracey N. J., 2000, THESIS U YORK
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   VILKOMIR S, 2001, SBUCISM0101
   VISSER W, 2000, P WORKSH ADV VER
   VRIES R, 2000, PROGR 2000 WORKSH EM, P141
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   WEYUKER EJ, 1986, IEEE T SOFTWARE ENG, V12, P1128, DOI 10.1109/TSE.1986.6313008
   Wimmel G, 2000, SOFTW TEST VERIF REL, V10, P229, DOI 10.1002/1099-1689(200012)10:4<229::AID-STVR213>3.0.CO;2-O
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 66
TC 6
Z9 8
U1 1
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2004
VL 70
IS 3
BP 315
EP 329
DI 10.1016/S0164-1212(03)00076-1
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 774XR
UT WOS:000189012100007
DA 2024-07-18
ER

PT J
AU Ma, YC
   Chiu, JC
   Chen, TF
   Chung, CP
AF Ma, YC
   Chiu, JC
   Chen, TF
   Chung, CP
TI Variable-size data item placement for load and storage balancing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID SYSTEMS
AB The rapid growth of Internet brings the need for a low cost high performance file system. Two objectives are to be pursued in building such a large scale storage system on multiple disks: load balancing and storage minimization. We investigate the optimization problem of placing variable-size data items onto multiple disks with replication to achieve the two objectives. An approximate algorithm, called LSB Placement, is proposed for the optimization problem. The algorithm performs bin packing along with MMPacking to obtain a load balanced placement with near-optimal storage balancing. The key issue in deriving the algorithm is to find the optimal bin capacity for the bin packing to reduce storage cost. We derive the optimal bin capacity and prove that LSB Placement algorithm is asymptotically 1-optimal on storage balancing. That is, when the problem size exceeds certain threshold, the algorithm generates a load balanced placement in which the data sizes allocated on disks are almost balanced. We demonstrate that, for various Web applications, a load balanced placement can be generated with disk capacity not exceeding 10% more than the balanced storage space. This shows that the LSB Placement algorithm is useful in constructing a low cost and high performance storage system. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, Hsinchu 30050, Taiwan.
   Natl Sun Yat Sun Univ, Dept Elect Engn, Kaohsiung 80424, Taiwan.
   Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 600, Taiwan.
C3 National Yang Ming Chiao Tung University; National Sun Yat Sen
   University; National Chung Cheng University
RP Ma, YC (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, 1001 Ta Hsueh Rd, Hsinchu 30050, Taiwan.
CR [Anonymous], 1982, COMBINATORIAL OPTIMI
   COFFMAN EG, 1978, SIAM J COMPUT, V7, P1, DOI 10.1137/0207001
   Dowdy L.W., 1982, ACM COMPUT SURV, V14, P287
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Horowitz Ellis., 1996, COMPUTER ALGORITHMS
   Johnson D. S., 1974, SIAM Journal on Computing, V3, P299, DOI 10.1137/0203025
   KWAN T, 1995, COMPUTER, V28, P67
   LEE H, 1995, INFORMATION SYSTEMS, V20
   Lee LW, 2000, IEEE T COMPUT, V49, P127, DOI 10.1109/12.833109
   Little T D., 1995, Multimedia Systems, V2, P280
   NARENDRAN B, 1997, P 16 S REL DISTR SYS, P97
   Rotem D., 1993, IEEE T KNOWL DATA EN, V5, P877
   Serpanos DN, 1998, IEEE T CIRC SYST VID, V8, P13, DOI 10.1109/76.660824
   WAH BW, 1984, COMPUTER, V17, P23, DOI 10.1109/MC.1984.1658928
   Wolf J., 1990, P 10 INT C DISTR COM, V17
NR 15
TC 1
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY 15
PY 2003
VL 66
IS 2
BP 157
EP 166
DI 10.1016/S0164-1212(02)00073-0
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 690UJ
UT WOS:000183568100007
DA 2024-07-18
ER

PT J
AU Preiss, O
   Wegmann, A
AF Preiss, O
   Wegmann, A
TI Towards a composition model problem based on IEC61850
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 4th ICSE Workshop on Component-Based Software Engineering
CY MAY, 2001
CL TORONTO, CANADA
AB In order to derive real-world model problems for the breath of research challenges in the area of predictable assembly of certifiable software components, this paper introduces the substation automation domain, as a representative for the wide spectrum of data acquisition and process control systems. Special emphasis in the paper is put on those aspects of the application area, which make its employment as a model problem provider attractive. First, the compositions are required to meet several well defined quality requirements besides functionality and must therefore allow for the prediction of these qualities before the final system is assembled and is undergoing a potentially costly factory and/or onsite acceptance test. Second, the upcoming IEC61850 standard defines agreed upon domain models and quality attribute requirements on system operations. In order to make this problem domain attractive to research in the area of compositional reasoning of component assemblies, this paper provides the needed step of relating the domain models and the domain's quality attribute requirements to software components and assembly properties. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 ABB Switzerland Ltd, Corp Res, CH-5405 Baden, Daettwil, Switzerland.
   Swiss Fed Inst Technol, DSC ICA, CH-1015 Lausanne, Switzerland.
C3 ABB; Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP ABB Switzerland Ltd, Corp Res, CH-5405 Baden, Daettwil, Switzerland.
EM otto.preiss@ch.abb.com; wegmann@epfl.ch
CR [Anonymous], OMG UNIFIED MODELING
   Bass L., 1999, Software Architecture in Practice
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   CRNKOVIC I, 2001, P ICSE 4 INT WORKSH
   *IEC, 1990, IEC8704
   *INT EL COMM, 1999, IECTC57WG101112
   Kandé MM, 2000, LECT NOTES COMPUT SC, V1939, P513
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Meyer B., 1992, Eiffel: The Language
   Morris J, 2001, COMPUTER, V34, P30, DOI 10.1109/2.947086
   Nierstrasz Oscar., 1995, OBJECT ORIENTED SOFT
   Preiss O, 2001, EUROMICRO CONF PROC, P114, DOI 10.1109/EURMIC.2001.952445
   PREISS O, 2001, P 4 ICSE WORKSH COMP, P93
   PREISS O, 2000, 003063 TN NST ABB CO
   SANZ R, 2000, 10258DOTS IST DOTS C
   Selic B, 2000, COMPUTER, V33, P64, DOI 10.1109/2.846320
   Shaw M., 1996, P 3 INT C CONF DISTR
   Stafford J., 2001, P 4 ICSE WORKSHOP CO, P13
   STENZEL J, 2001, P ETG K FACHT SCHUTZ
   Szyperski Clemens., 1998, Component Software-Beyond Object-Oriented Programming
   VILLEMEUR A, 1991, RELIABILITY AVAILABI
   Voas J, 2000, COMPUTER, V33, P32, DOI 10.1109/2.863965
NR 22
TC 7
Z9 7
U1 1
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR 15
PY 2003
VL 65
IS 3
BP 227
EP 236
DI 10.1016/S0164-1212(02)00047-X
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 689QN
UT WOS:000183504600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pallewatta, S
   Kostakos, V
   Buyya, R
AF Pallewatta, Samodha
   Kostakos, Vassilis
   Buyya, Rajkumar
TI MicroFog: A framework for scalable placement of microservices-based IoT
   applications in federated Fog environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Fog computing; Microservices; Application placement; Internet of things;
   Microservice composition
ID EDGE
AB MicroService Architecture (MSA) is gaining rapid popularity for developing large-scale IoT applications for deployment within distributed and resource-constrained Fog computing environments. As a cloud-native application architecture, the true power of microservices comes from their loosely coupled, independently deployable and scalable nature, enabling distributed placement and dynamic composition across federated Fog and Cloud clusters. Thus, it is necessary to develop novel placement algorithms that utilise these microservice characteristics to improve the performance of the applications. However, existing Fog computing frameworks lack support for integrating such placement policies due to their shortcomings in multiple areas, including MSA application placement and deployment across multi-fog multi-cloud environments, dynamic microservice composition across multiple distributed clusters, scalability of the framework to operate within federated environments, support for deploying heterogeneous microservice applications, etc. To this end, we design and implement MicroFog, a Fog computing framework compatible with cloud-native technologies such as Docker, Kubernetes and Istio. MicroFog provides an extensible and configurable control engine that executes placement algorithms and deploys applications across federated Fog environments. Furthermore, MicroFog provides a sufficient abstraction over container orchestration and dynamic microservice composition, thus enabling users to easily incorporate new placement policies and evaluate their performance. The capabilities of the MicroFog framework, such as the scalability and flexibility of the design and deployment architecture of MicroFog and its ability to ensure the deployment and composition of microservices across distributed fog-cloud environments, are validated using multiple use cases. Experiments also demonstrate MicroFog's ability to integrate and evaluate novel placement policies and load-balancing techniques. To this end, we integrate multiple microservice placement policies to demonstrate MicroFog's ability to support horizontally scaled placement, service discovery and load balancing of microservices across federated environments, thus reducing the application service response time up to 54%.
C1 [Pallewatta, Samodha; Kostakos, Vassilis; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Australia.
C3 University of Melbourne
RP Pallewatta, S (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Australia.
EM ppallewatta@student.unimelb.edu.au
RI Kostakos, Vassilis/G-8997-2011
OI Kostakos, Vassilis/0000-0003-2804-6038; Pallewatta,
   Samodha/0000-0002-5342-9551
CR [Anonymous], 2023, Fogatlas
   Bellavista P, 2017, 18TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING AND NETWORKING (ICDCN 2017), DOI 10.1145/3007748.3007777
   Deng Q., 2021, P INT WORKSH BIG DAT, P1
   Deng SG, 2021, IEEE T MOBILE COMPUT, V20, P1907, DOI 10.1109/TMC.2020.2970698
   Ericsson, 2023, Enhancing service mobility in the 5g edge cloud and beyond
   Ermolenko D, 2021, IEEE NW RUSS YOUNG, P12, DOI 10.1109/ElConRus51938.2021.9396553
   Falkner J., 2020, Key findings from IDC red hat quarkus lab validation
   Fang J, 2021, IEEE INTERNET THINGS, V8, P12771, DOI 10.1109/JIOT.2020.3007751
   Farhat P, 2020, J SUPERCOMPUT, V76, P388, DOI 10.1007/s11227-019-03032-z
   Farzin P, 2022, 2022 AUSTRALIAN COMPUTER SCIENCE WEEK (ACSW 2022), P106, DOI 10.1145/3511616.3513105
   Faticanti F, 2019, 2019 6TH IEEE INTERNATIONAL CONFERENCE ON CYBER SECURITY AND CLOUD COMPUTING (IEEE CSCLOUD 2019) / 2019 5TH IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING AND SCALABLE CLOUD (IEEE EDGECOM 2019), P196, DOI 10.1109/CSCloud/EdgeCom.2019.00026
   Fu KH, 2021, INT PARALL DISTRIB P, P932, DOI 10.1109/IPDPS49936.2021.00102
   Fulong Xu, 2020, 2020 IEEE 6th International Conference on Computer and Communications (ICCC), P1567, DOI 10.1109/ICCC51575.2020.9345114
   Google, 2023, Google distributed cloud edge overview
   Goudarzi M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3544836
   Guerrero C, 2019, FUTURE GENER COMP SY, V97, P131, DOI 10.1016/j.future.2019.02.056
   Guerrero C, 2019, J AMB INTEL HUM COMP, V10, P2447, DOI 10.1007/s12652-018-0914-0
   Guo FY, 2022, WORLD WIDE WEB, V25, P2019, DOI 10.1007/s11280-022-01017-2
   IBM, 2023, Edge clusters
   Joseph CT, 2019, SOFTWARE PRACT EXPER, V49, P1448, DOI 10.1002/spe.2729
   Lera I, 2019, IEEE INTERNET THINGS, V6, P3641, DOI 10.1109/JIOT.2018.2889511
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Herrera JL, 2021, IEEE GLOB COMM CONF, DOI 10.1109/GLOBECOM46510.2021.9685995
   Mahmud R., 2018, Internet of Everything, P103, DOI [10.1007/978-981-10-5861-5_5, DOI 10.1007/978-981-10-5861-5_5]
   Mahmud R, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111351
   Mahmud R, 2022, IEEE INTERNET THINGS, V9, P4125, DOI 10.1109/JIOT.2021.3103053
   Marchese A, 2023, CLOSER, P261, DOI 10.5220/0011972600003488
   Neha B, 2022, ACM T INTERNET THING, V3, DOI 10.1145/3488247
   Pallewatta S., 2019, P 12 IEEE ACM INT C, P71
   Pallewatta S, 2022, Arxiv, DOI [arXiv:2207.05399, 10.48550/ARXIV.2207.05399]
   Pallewatta S, 2022, FUTURE GENER COMP SY, V131, P121, DOI 10.1016/j.future.2022.01.012
   Martin JP, 2020, SOFTWARE PRACT EXPER, V50, P2337, DOI 10.1002/spe.2896
   Ruuskanen J, 2021, Arxiv, DOI arXiv:2109.01480
   Samanta A, 2020, IEEE INTERNET THINGS, V7, P6164, DOI 10.1109/JIOT.2020.2981958
   Santo W.d.E., 2019, INT CONF NETW SER, P1, DOI DOI 10.23919/cnsm46954.2019.9012677
   Santoro D, 2017, INT CONF CLOUD COMP, P231, DOI 10.1109/CloudCom.2017.62
   Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12
   Tuli S, 2019, J SYST SOFTWARE, V154, P22, DOI 10.1016/j.jss.2019.04.050
   Wang ZT, 2022, PARTICUOLOGY, V67, P1, DOI 10.1016/j.partic.2021.09.008
   Yousefpour A, 2019, IEEE INTERNET THINGS, V6, P5080, DOI 10.1109/JIOT.2019.2896311
NR 40
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2024
VL 209
AR 111910
DI 10.1016/j.jss.2023.111910
EA DEC 2023
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS9T0
UT WOS:001134186800001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Suciu, DM
   Motogna, S
   Molnar, AJ
AF Suciu, Dan Mircea
   Motogna, Simona
   Molnar, Arthur-Jozsef
TI Transitioning a project-based course between onsite and online. An
   experience report
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering education; Soft skills; Teamwork; Online education
AB We present an investigation regarding the challenges faced by student teams across four consecutive iterations of a team-focused, project-based course in software engineering. The studied period includes the switch to fully online activities in the spring of 2020, and covers the return to face to face teaching two years later. We cover the feedback provided by over 1500 students, collected in freetext form on the basis of a survey. A qualitative research method was utilized to discern and examine the challenges and perceived benefits of a course that was conducted entirely online. We show that technical challenges remain a constant in project-based courses, with time management being the most affected by the move to online. Students reported that the effective use of collaborative tools eased team organization and communication while online. We conclude by providing a number of action points regarding the integration of online activities in face-to-face course unfolding related to project management, communication tools, the importance of teamwork, and of active mentor participation. (c) 2023 Elsevier Inc. All rights reserved.
C1 [Suciu, Dan Mircea; Motogna, Simona; Molnar, Arthur-Jozsef] Babes Bolyai Univ, Dept Comp Sci, M Kogalniceanu 1, Cluj Napoca 400084, Romania.
C3 Babes Bolyai University from Cluj
RP Suciu, DM (corresponding author), Babes Bolyai Univ, Dept Comp Sci, M Kogalniceanu 1, Cluj Napoca 400084, Romania.
EM dan.suciu@ubbcluj.ro; simona.motogna@ubbcluj.ro;
   arthur.molnar@ubbcluj.ro
RI Suciu, Dan Mircea/IAQ-0207-2023
OI Suciu, Dan Mircea/0000-0002-5958-419X; Motogna,
   Simona/0000-0002-8208-6949; Molnar, Arthur-Jozsef/0000-0002-4113-2953
CR Adil M, 2022, CSEDU: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON COMPUTER SUPPORTED EDUCATION - VOL 2, P667, DOI 10.5220/0010978000003182
   Ahmed Faheem, 2013, International Journal of Information Processing and Management, V4, P171, DOI 10.4156/ijipm.vol4.issue3.17
   Barr M, 2020, CONF SOFTW ENG EDUC, P244, DOI [10.1109/CSEET49119.2020.9206196, 10.1109/cseet49119.2020.9206196]
   Braun V., 2019, HDB RES METHODS HLTH, P843, DOI [DOI 10.1007/978-981-10-5251-4_103, 10.1007/978-981-10-5251-4103, DOI 10.1007/978-981-10-5251-4103]
   Bastarrica MC, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P137, DOI 10.1109/ICSE-SEET.2017.15
   Corral Luis, 2022, SIGITE '22: The 23rd Annual Conference on Information Technology Education, P66, DOI 10.1145/3537674.3554755
   CoT, 2022, About us
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Fitoussi R, 2021, IEEE GLOB ENG EDUC C, P1733, DOI 10.1109/EDUCON46332.2021.9453896
   Gary KA, 2017, CONF SOFTW ENG EDUC, P236, DOI 10.1109/CSEET.2017.45
   Gregory P, 2015, LECT NOTES BUS INF P, V212, P64, DOI 10.1007/978-3-319-18612-2_6
   Hassan SUN, 2021, EDUC SCI, V11, DOI 10.3390/educsci11030134
   Hazeyama A., 2022, Smart and Sustainable Technology for Resilient Cities and Communities, P223, DOI [10.1007/978-981-16-9101-0_1, DOI 10.1007/978-981-16-9101-0_1]
   Heberle A, 2018, IEEE GLOB ENG EDUC C, P1723, DOI 10.1109/EDUCON.2018.8363442
   Holmes R, 2018, PROC INT CONF SOFTW, P31, DOI 10.1145/3183377.3183380
   Iacob C, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110393
   Kanij T, 2020, CONF SOFTW ENG EDUC, P250, DOI 10.1109/cseet49119.2020.9206204
   Kiger ME, 2020, MED TEACH, V42, P846, DOI 10.1080/0142159X.2020.1755030
   Masood Z, 2018, J SYST SOFTWARE, V144, P501, DOI 10.1016/j.jss.2018.07.011
   Means B., 2020, DIGITAL PROMISE
   Motogna Simona, 2020, EASEAI 2020: Proceedings of the 2nd ACM SIGSOFT International Workshop on Education through Advanced Software Engineering and Artificial Intelligence, P1, DOI 10.1145/3412453.3423194
   Motogna S, 2022, 2022 IEEE/ACM FIRST INTERNATIONAL WORKSHOP ON DESIGNING AND RUNNING PROJECT-BASED COURSES IN SOFTWARE ENGINEERING EDUCATION (DREE 2022), P10, DOI 10.1145/3524487.3527361
   Motogna S, 2021, ENASE: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P362, DOI 10.5220/0010478803620371
   Motogna S, 2022, COMM COM INF SC, V1556, P288, DOI 10.1007/978-3-030-96648-5_13
   Paul J, 2019, FRONT COMP SCI-SWITZ, V1, DOI 10.3389/fcomp.2019.00007
   Presler-marshall Kai, 2022, ICER 2022 V1: Proceedings of the 2022 ACM Conference on International Computing Education Research V.1, P177, DOI 10.1145/3501385.3543980
   Raibulet C, 2022, 2022 IEEE/ACM FIRST INTERNATIONAL WORKSHOP ON DESIGNING AND RUNNING PROJECT-BASED COURSES IN SOFTWARE ENGINEERING EDUCATION (DREE 2022), P20, DOI 10.1145/3524487.3527360
   Raibulet C, 2018, J SYST SOFTWARE, V144, P409, DOI 10.1016/j.jss.2018.07.010
   Ralph P, 2021, Acm sigsoft empirical standards released
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Salas-Pilco SZ, 2022, EDUNINE2022 - VI IEEE WORLD ENGINEERING EDUCATION CONFERENCE (EDUNINE): RETHINKING ENGINEERING EDUCATION AFTER COVID-19: A PATH TO THE NEW NORMAL, DOI 10.1109/EDUNINE53672.2022.9782354
   Souza M, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P537, DOI 10.1145/3350768.3352457
   Suciu D.M., 2022, figshare, DOI [10.6084/m9.figshare.21897000, DOI 10.6084/M9.FIGSHARE.21897000]
   Wlodarski R, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P289, DOI 10.1109/ICSE-SEET52601.2021.00039
   Yamada Y., 2020, CEUR Workshop Proceedings, V2799, P20
NR 35
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2023
VL 206
AR 111828
DI 10.1016/j.jss.2023.111828
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IH9X9
UT WOS:001165565300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hu, J
AF Hu, Jian
TI Trace matrix optimization for fault localization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Fault localization; Coincidental correctness; Imbalanced data; Data
   augmentation
ID SMOTE
AB Fault localization (FL) techniques gather trace information as input data and analyze it to identify the relationship between program statements and failures. Therefore, the input trace matrix is essential for fault localization. However, the current trace matrix faces two main challenges. Firstly, the occurrences of coincidental correctness (CC), which refer to the execution of faulty statements that lead to correct program output, adversely impact the effectiveness of FL. Secondly, the significant disparity in the number of failing and passing test cases poses a data imbalance problem for fault localization. To overcome these issues, we propose TRAIN: a Two-stage tRace mAtrix optImizatioN method for fault localization. In the first stage of optimization, TRAIN leverages an improved cluster analysis to identify and exclude the CC tests to optimize the trace matrix. Subsequently, in the second stage, TRAIN utilizes data augmentation to enhance the failing test cases to further balance the trace matrix. The optimized trace matrix is then used as input data in the FL pipeline to locate the faulty statements. Through extensive experiments conducted on 330 faulty versions of nine large-sized programs (obtained from Defects4J, ManyBugs, and SIR) using six state-of-the-art FL methods, TRAIN demonstrates remarkable improvements in FL effectiveness.
C1 [Hu, Jian] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
C3 Chongqing University
RP Hu, J (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM jianhu@cqu.edu.cn
FU National Key Research and De-velopment Project of China
   [2020YFB1711900]; National Natural Science Foundation of China
   [61902421]
FX <B>Acknowledgments</B> This work was supported by the National Key
   Research and De-velopment Project of China (No. 2020YFB1711900) , and
   the National Natural Science Foundation of China under Grant 61902421.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Ciresan D, 2012, PROC CVPR IEEE, P3642, DOI 10.1109/CVPR.2012.6248110
   Dass S, 2020, P INT COMP SOFTW APP, P1326, DOI 10.1109/COMPSAC48688.2020.00-72
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Donoho DL, 2006, COMMUN PUR APPL MATH, V59, P797, DOI 10.1002/cpa.20132
   Fang C., 2017, INT C SOFTW ENG KNOW, P501
   Feyzi F, 2020, EMPIR SOFTW ENG, V25, P3873, DOI 10.1007/s10664-020-09859-y
   Gao YC, 2013, INT CONF QUAL SOFTW, P288, DOI 10.1109/QSIC.2013.23
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Heiden S, 2019, SOFTWARE PRACT EXPER, V49, P1197, DOI 10.1002/spe.2703
   Heris SR, 2019, 2019 5TH INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P100, DOI [10.1109/ICWR.2019.8765262, 10.1109/icwr.2019.8765262]
   Hierons RM, 2006, ACM T SOFTW ENG METH, V15, P227, DOI 10.1145/1151695.1151696
   Hu J, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107148
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
NR 22
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2024
VL 208
AR e111900
DI 10.1016/j.jss.2023.111900
EA NOV 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA1D0
UT WOS:001122427400001
DA 2024-07-18
ER

PT J
AU Decan, A
   Mens, T
   Delicheh, HO
AF Decan, Alexandre
   Mens, Tom
   Delicheh, Hassan Onsori
TI On the outdatedness of workflows in the GitHub Actions ecosystem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software ecosystem; Dependency management; Continuous integration;
   Collaborative software development; Workflow automation; Technical lag
AB GitHub Actions was introduced as a way to automate CI/CD workflows in GitHub, the largest social coding platform. Thanks to its deep integration into GitHub, GitHub Actions can be used to automate a wide range of social and technical activities. Among its main features, it allows automation workflows to rely on reusable components - the so-called Actions - to enable developers to focus on the tasks that should be automated rather than on how to automate them. As any other kind of reusable software components, Actions are continuously updated, causing many automation workflows to use outdated versions of these Actions. Based on a dataset of nearly one million workflows obtained from 22K+ repositories between November 2019 and September 2022, we provide quantitative empirical evidence that reusing Actions in GitHub workflows is common practice, even if this reuse tends to concentrate on a limited number of Actions. We show that Actions are frequently updated, and we quantify to which extent automation workflows are outdated with respect to these Actions. Using two complementary metrics, technical lag and opportunity lag, we found that most of the workflows are using an outdated Action release, are lagging behind the latest available release for at least 7 months, and had the opportunity to be updated during at least 9 months. This calls for a more rigorous management of Action outdatedness in automation workflows, as well as for better policies and tooling to keep workflows up-to-date.(c) 2023 Elsevier Inc. All rights reserved.
C1 [Decan, Alexandre; Mens, Tom; Delicheh, Hassan Onsori] Univ Mons, Software Engn Lab, Mons, Belgium.
C3 University of Mons
RP Decan, A (corresponding author), Univ Mons, Software Engn Lab, Mons, Belgium.
EM alexandre.decan@umons.ac.be; tom.mens@umons.ac.be;
   hassan.onsoridelicheh@umons.ac.be
RI ; Mens, Tom/B-6518-2013
OI Onsori Delicheh, Hassan/0009-0005-7935-4147; Mens,
   Tom/0000-0003-3636-5020
FU Fonds de la Recherche Scientifique-FNRS [MIS F.4515.23, O.0157.18F-RG43,
   PDR T.0149.22]; Ministere de la Communaute francaise - Direction
   generale de l'Enseignement non obligatoire et de la Recherche
   scientifique [ARC-21/25 UMONS3]
FX This research is supported by the Fonds de la Recherche
   Scientifique-FNRS under grant numbers MIS F.4515.23, O.0157.18F-RG43 and
   PDR T.0149.22, and by ARC-21/25 UMONS3 supported by the Ministere de la
   Communaute francaise - Direction generale de l'Enseignement non
   obligatoire et de la Recherche scientifique.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   [Anonymous], 2021, A06:2021-vulnerable and outdated components
   Avelino G, 2019, INT SYMP EMP SOFTWAR, P328, DOI 10.1109/esem.2019.8870181
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Benedetti G, 2022, PROCEEDINGS OF THE 2022 ACM WORKSHOP ON SOFTWARE SUPPLY CHAIN OFFENSIVE RESEARCH AND ECOSYSTEM DEFENSES, SCORED 2022, P37, DOI 10.1145/3560835.3564554
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bos R, 2022, XPRT Mag., V13, P37
   Chandrasekara C, 2021, Hands-on GitHub Actions: Implement CI/CD with GitHub Action Workflows for Your Applications, DOI [10.1007/978-1-4842-6464-5, DOI 10.1007/978-1-4842-6464-5]
   Chen TT, 2021, IEEE I C SQRS-C, P1089, DOI 10.1109/QRS-C55045.2021.00163
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V48, P2208, DOI 10.1109/TSE.2021.3055123
   Costa JMR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3151
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Decan A, 2022, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSME55016.2022.00029
   Decan A, 2022, IEEE T SOFTWARE ENG, V48, P4087, DOI 10.1109/TSE.2021.3112204
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Elazhary O, 2021, IEEE T SOFTWARE ENG, V48, P2570, DOI 10.1109/TSE.2021.3064953
   Elliott P, 2021, Compromise by git tags
   Fowler M., 2000, Continuous integration
   Gil O, 2021, Bypassing required reviews using GitHub Actions
   GitHub, 2022, Octoverse 2022: The state of open source software
   Golzadeh M, 2022, EUR CON SFTWR MTNCE, P662, DOI 10.1109/SANER53432.2022.00084
   Gonzaga R, 2023, Why you should pin your GitHub Actions by commit-hash
   Gonzalez-Barahona J.M, 2020, INT C SOFTW ENG WORK, DOI [10.1145/3387940.3392202, DOI 10.1145/3387940.3392202]
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Katz T, 2021, Stealing arbitrary GitHub Actions secrets
   Kinsman T, 2021, IEEE WORK CONF MIN S, P420, DOI 10.1109/MSR52588.2021.00054
   Kotovs V., 2009, Sci. J. Riga Tech. Univ., V38, P153, DOI [10.2478/v10143-009-0013-y, DOI 10.2478/V10143-009-0013-Y]
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lauinger T, 2018, COMMUN ACM, V61, P41, DOI 10.1145/3190562
   Liu CW, 2022, PROC INT CONF SOFTW, P672, DOI 10.1145/3510003.3510142
   Lobacevski J, 2021, Keeping your GitHub Actions and workflows secure. Part 3: How to trust your building blocks
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Mazrae PR, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10285-5
   Saroar SG, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P121, DOI 10.1145/3593434.3593475
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Soares E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10114-1
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Stringer J, 2020, ASIA PAC SOFWR ENG, P228, DOI 10.1109/APSEC51365.2020.00031
   Valenzuela-Toledo P, 2022, EUR CON SFTWR MTNCE, P123, DOI 10.1109/SANER53432.2022.00026
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wessel M., 2023, Software Ecosystems: Tooling and Analytics
   Zerouali A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10154-1
   Zerouali A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09908-6
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
NR 56
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2023
VL 206
AR 111827
DI 10.1016/j.jss.2023.111827
EA SEP 2023
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T3YV3
UT WOS:001077385900001
DA 2024-07-18
ER

PT J
AU Bertolotti, F
   Cazzola, W
   Favalli, L
AF Bertolotti, Francesco
   Cazzola, Walter
   Favalli, Luca
TI On the granularity of linguistic reuse
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Reuse and evolution; Language evolution; Domain specific languages;
   Feature modularity; Language product lines; Language composition
ID EVOLUTION; COMPONENTS; LANGUAGES; DESIGN; LISA; DSLS
AB Programming languages are complex software systems integrated across an ecosystem of different applications such as language compilers or interpreters but also an integrated development environ-ment comprehensive of syntax highlighting, code completion, error recovery, and a debugger. The complexity of language ecosystems can be faced using language workbenches-i.e., tools that tackle the development of programming languages, domain specific languages and their ecosystems in a modular way. As with any other software system, one of the priorities that developers struggle to achieve when developing programming languages is reusability. After all, the capacity to easily reuse and adapt existing components to new scenarios can dramatically improve development times. Therefore, as programming languages offer features to reuse existing code, language workbenches should offer tools to reuse existing language assets. However, reusability can be achieved in many different ways. In this work, we identify six forms of linguistic reusability, ordered by level of granularity: (i) sub -languages composition, (ii) language features composition, (iii) syntax and semantics assets composition, (iv) semantic assets composition, (v) actions composition, and. (vi) action extension. We use these mechanisms to extend the taxonomy of language composition proposed by Erdweg et al. To show a concrete application of this taxonomy, we evaluate the capabilities provided by the Neverlang language workbench with regards to our taxonomy and extend it by adding explicit support for any granularity level that was originally not supported. This is done by instantiating two levels of reusability as actual operators-desugaring, and delegation. We evaluate these operators against the clone-and-own approach, which was the only form of reuse at that level of granularity prior to the introduction of explicit operators. We show that with the clone-and-own approach the design quality of the source code is negatively affected. We conclude that language workbenches can benefit from the introduction of mechanisms to explicitly support reuse at all granularity levels. (c) 2023 Elsevier Inc. All rights reserved.
C1 [Bertolotti, Francesco; Cazzola, Walter; Favalli, Luca] Univ Milan, Comp Sci Dept, Milan, Italy.
C3 University of Milan
RP Cazzola, W (corresponding author), Univ Milan, Comp Sci Dept, Milan, Italy.
EM cazzola@di.unimi.it
RI Bertolotti, Francesco/KBC-4204-2024
OI Bertolotti, Francesco/0000-0002-3867-6175; FAVALLI,
   LUCA/0000-0001-7452-2440
FU Italian Ministry of University and Research (MUR) , Italy [PRIN
   2020TL3X8X]
FX This work was partly supported by the Italian Ministry of University and
   Research (MUR) , Italy on the funded project "T-LADIES" (PRIN
   2020TL3X8X) .
CR [Anonymous], 2013, DSL ENG
   Antkiewicz M., 2014, P 36 INT C SOFTW ENG
   Basten B, 2015, SCI COMPUT PROGRAM, V114, P7, DOI 10.1016/j.scico.2015.11.003
   Butting A., 2022, Journal of Object Technology, V21, P1
   Campbell GA, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P57, DOI 10.1145/3194164.3194186
   Cazzola Walter, 2013, Software Composition. 12th International Conference, SC 2013. Proceedings. LNCS 8088, P17, DOI 10.1007/978-3-642-39614-4_2
   Cazzola W., 2012, Lecture Notes in Computer Science, V7306, P162, DOI DOI 10.1007/978-3-642-30564-1_11
   Cazzola W., 2022, EMPIR SOFTW ENG, V27, DOI [10.1145/3514232, DOI 10.1145/3514232]
   Cazzola W., 2010, P 7 ECOOP WORKSH REF
   Cazzola W, 2018, COMPUT LANG SYST STR, V51, P71, DOI 10.1016/j.cl.2017.07.003
   Cazzola W, 2017, IEEE SOFTWARE, V34, P83, DOI 10.1109/MS.2017.4121222
   Cazzola W, 2016, PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY'16), P70, DOI 10.1145/2889443.2889445
   Cazzola W, 2016, IEEE T EMERG TOP COM, V4, P404, DOI 10.1109/TETC.2015.2446192
   Cazzola W, 2016, COMPUT LANG SYST STR, V45, P16, DOI 10.1016/j.cl.2015.12.001
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chowdhary K.R., 2013, P UGC NATL C NEW ADV
   Churchill M., 2014, P 13 INT C MODULARIT, P145
   Churchill M, 2015, LECT NOTES COMPUT SC, V8989, P132, DOI 10.1007/978-3-662-46734-3_4
   Clarke D., 2010, LECT NOTES COMPUTER, V6957
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Combemale B., 2015, LANGUAGE ORIENTED MO, V1
   Combemale B, 2018, COMPUT LANG SYST STR, V54, P139, DOI 10.1016/j.cl.2018.05.004
   Crane ML, 2005, LECT NOTES COMPUT SC, V3713, P97, DOI 10.1007/11557432_8
   Degueule T., 2016, ACM STUDENT RES COMP
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Ekman T, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P1
   Erdweg S., 2012, P 12 WORKSH LANG DES
   Erdweg S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P391
   Favalli Luca, 2020, SPLC 20, P285
   Freeman S., 2006, Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '06, P855, DOI DOI 10.1145/1176617.1176735
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghosh D., 2011, ACM QUEUE MAG, V9, P1
   Grönniger H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P925
   Hemer D, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P235, DOI 10.1109/ASWEC.2001.948517
   Henriques PR, 2005, IEE P-SOFTW, V152, P54, DOI 10.1049/ip-sen:20041317
   Hinterreiter D, 2018, IEEE INT C EMERG, P107, DOI 10.1109/ETFA.2018.8502557
   ISO/IEC/IEEE International Standard, 2017, Standard ISO/IEC/IEEE 24765, DOI [DOI 10.1109/IEEESTD.2017.8016712, 10.1109/ IEEESTD.2017.8016712, 10.1109/IEEESTD.2017.8016712]
   Kang Kyo C, 1990, Technical Report
   Karaila M., 2009, P 9 OOPSLA WORKSH DO, P1
   Kats L.C.L., 2010, P ACM C NEW ID PROGR
   Klint P, 2019, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2019.00023
   Klint P, 2011, LECT NOTES COMPUT SC, V6491, P222, DOI 10.1007/978-3-642-18023-1_6
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Kloibhofer S, 2020, MPLR '20: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON MANAGED PROGRAMMING LANGUAGES AND RUNTIMES, P63, DOI 10.1145/3426182.3426187
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Krishnamurthi S, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P1, DOI 10.1145/2678015.2678016
   Kühn T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P131, DOI 10.1145/3336294.3336301
   Kühn T, 2014, LECT NOTES COMPUT SC, V8706, P141, DOI 10.1007/978-3-319-11245-9_8
   Kuhn T., 2015, P 19 INT C SOFTW PRO, P71, DOI DOI 10.1145/2791060.2791092
   Kuhn Thomas, 2016, P 20 INT SOFTWARE PR, P50
   Latifi Florian, 2021, DLS 2021: Proceedings of the 17th ACM SIGPLAN International Symposium on Dynamic Languages, P35, DOI 10.1145/3486602.3486930
   Lavazza L, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111561
   Leduc M, 2020, SOFTW SYST MODEL, V19, P263, DOI 10.1007/s10270-019-00772-7
   Leduc M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P112, DOI 10.1109/MODELS.2017.23
   Lehman MM, 2002, J SOFTW MAINT EVOL-R, V14, P335, DOI 10.1002/smr.259
   Lindeman RT, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P127
   Long J., 2001, Software Engineering Notes, V26, P68, DOI 10.1145/505482.505492
   Lorenzen F, 2016, ACM SIGPLAN NOTICES, V51, P204, DOI 10.1145/2914770.2837644
   Maga C.R., 2011, IFAC P, V44, P9145
   Mäkitalo N, 2020, COMPUTING, V102, P2385, DOI 10.1007/s00607-020-00833-6
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2002, LECT NOTES COMPUT SC, V2304, P1
   Mernik M, 2013, J SYST SOFTWARE, V86, P2451, DOI 10.1016/j.jss.2013.04.087
   Mosses P.D., 2019, P 5 WORKSH FORM INT, P29
   Mosses PD, 2019, J COMPUT LANG, V50, P39, DOI 10.1016/j.jvlc.2018.11.003
   Niephaus F, 2019, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON MANAGED PROGRAMMING LANGUAGES AND RUNTIMES (MPLR '19), P14, DOI 10.1145/3357390.3361024
   Cardona PAN, 2015, CUAD ACT, P154
   Oliveira BCDS, 2012, LECT NOTES COMPUT SC, V7313, P2, DOI 10.1007/978-3-642-31057-7_2
   Pech V., 2013, P 2013 INT C PRINC P, P165, DOI [DOI 10.1145/2500828.2500846, 10.1145/2500828.2500846]
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Rubin J., 2013, SPLC, P101
   Rumpe B., 2021, MontiCore Language Workbench and Library Handbook: Edition 2021
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   Serebrenik A., 2015, P 2015 EUR C SOFTW A, P1
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   ter Beek MH, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P151, DOI 10.1145/3307630.3342398
   Thanhofer-Pilisch J, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P149, DOI 10.1109/SEAA.2017.25
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Tracz W., 1990, SIGSOFT Software Engineering Notes, V15, P42, DOI 10.1145/382296.382702
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Vacchi E, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P167, DOI 10.1145/2648511.2648529
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Vacchi E, 2013, LECT NOTES COMPUT SC, V8225, P76, DOI 10.1007/978-3-319-02654-1_5
   van Amstel M., 2010, P JOINT ERCIM WORKSH, P48
   van Binsbergen LT, 2019, J LOG ALGEBR METHODS, V103, P184, DOI 10.1016/j.jlamp.2018.12.004
   van Binsbergen LT, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P8, DOI 10.1145/2892664.2893464
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Van Wyk E, 2010, SCI COMPUT PROGRAM, V75, P39, DOI 10.1016/j.scico.2009.07.004
   Voelter M, 2014, LECT NOTES COMPUT SC, V8706, P41, DOI 10.1007/978-3-319-11245-9_3
   Voelter M, 2012, PROC INT CONF SOFTW, P1449, DOI 10.1109/ICSE.2012.6227070
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wimmer C., 2012, P 3 ANN C SYST PROGR, P1
   Wrthinger T., 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   Würthinger T, 2013, ACM SIGPLAN NOTICES, V48, P73, DOI 10.1145/2480360.2384587
   Wurthinger T., 2014, 13 INT C MODULARITY, P3, DOI DOI 10.1145/2584469.2584663
   Yingxiao Xu, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P69, DOI 10.1007/978-3-642-21347-2_6
NR 102
TC 3
Z9 3
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2023
VL 202
AR 111704
DI 10.1016/j.jss.2023.111704
EA MAY 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J4IZ9
UT WOS:001009279800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rio, A
   Abreu, FBE
AF Rio, Americo
   Brito e Abreu, Fernando
TI PHP code smells in web apps: Evolution, survival and anomalies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code smells; PHP; Software evolution; Survival; Web apps
ID MAINTENANCE; BAD
AB Context: Code smells are symptoms of poor design, leading to future problems, such as reduced maintainability. Therefore, it becomes necessary to understand their evolution and how long they stay in code. This paper presents a longitudinal study on the evolution and survival of code smells (CS) for web apps built with PHP, the most widely used server-side programming language in web development and seldom studied.Objectives: We aimed to discover how CS evolve and what is their survival/lifespan in typical PHP web apps. Does CS survival depend on their scope or app life period? Are there sudden variations (anomalies) in the density of CS through the evolution of web apps? Method: We analyzed the evolution of 18 CS in 12 PHP web applications and compared it with changes in app and team size. We characterized the distribution of CS and used survival analysis techniques to study CS' lifespan. We specialized the survival studies into localized (specific location) and scattered CS (spanning multiple classes/methods) categories. We further split the observations for each web app into two consecutive time frames. As for the CS evolution anomalies, we standardized their detection criteria.Results: The CS density trend along the evolution of PHP web apps is mostly stable, with variations, and correlates with the developer's numbers. We identified the smells that survived the most. CS live an average of about 37% of the life of the applications, almost 4 years on average in our study; around 61% of CS introduced are removed. Most applications have different survival times for localized and scattered CS, and localized CS have a shorter life. The CS survival time is shorter and more CS are introduced and removed in the first half of the life of the applications. We found anomalies in the evolution of 5 apps and show how a graphical representation of sudden variations found in the evolution of CS unveils the story of a development project. Conclusion: CS stay a long time in code. The removal rate is low and did not change substantially in recent years. An effort should be made to avoid this bad behavior and change the CS density trend to decrease.(c) 2023 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Rio, Americo; Brito e Abreu, Fernando] ISTAR, Inst Univ Lisboa ISCTE IUL, Lisbon, Portugal.
   [Rio, Americo] Univ Nova Lisboa, NOVA Informat Management Sch NOVA IMS, Lisbon, Portugal.
C3 Instituto Universitario de Lisboa; Universidade Nova de Lisboa
RP Rio, A (corresponding author), ISTAR, Inst Univ Lisboa ISCTE IUL, Lisbon, Portugal.
EM americo.rio@novaims.unl.pt; fba@iscte-iul.pt
RI Brito e Abreu, Fernando/D-2056-2010; Rio, Américo/H-2501-2016
OI Brito e Abreu, Fernando/0000-0002-9086-4122; Rio,
   Américo/0000-0003-2686-7094
FU Portuguese Founda- tion for Science and Technology (FCT)
   [UIDB/04466/2020, UIDP/04466/2020]
FX This work was partially supported by the Portuguese Founda- tion for
   Science and Technology (FCT) projects UIDB/04466/2020 and
   UIDP/04466/2020.
CR Amanatidis T, 2017, INFORM SOFTWARE TECH, V90, P70, DOI 10.1016/j.infsof.2017.05.004
   Amanatidis T, 2016, INFORM SOFTWARE TECH, V72, P48, DOI 10.1016/j.infsof.2015.11.009
   Bessghaier Narjes, 2020, Services Computing - SCC 2020. 17th International Conference Held as Part of the Services Conference Federation, SCF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12409), P67, DOI 10.1007/978-3-030-59592-0_5
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Clark TG, 2003, BRIT J CANCER, V89, P232, DOI 10.1038/sj.bjc.6601118
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Digkas G., 2020, 13 INT C QUALITY INF, V1266, P68, DOI DOI 10.1007/978-3-030-58793-2_6
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   dos Reis JP, 2022, ARCH COMPUT METHOD E, V29, P47, DOI 10.1007/s11831-021-09566-x
   dos Reis JP, 2017, IBER CONF INF SYST
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Herbold S, 2011, EMPIR SOFTW ENG, V16, P812, DOI 10.1007/s10664-011-9162-z
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kyriakakis P, 2014, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2014.60
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Olbrich SM, 2010, PROC IEEE INT CONF S
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Rani A, 2017, 2017 2ND INTERNATIONAL CONFERENCE FOR CONVERGENCE IN TECHNOLOGY (I2CT), P1093, DOI 10.1109/I2CT.2017.8226297
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rio A., 2021, P INT C QUAL INF COM, P82, DOI [10.1007/978-3-030, DOI 10.1007/978-3-030]
   Rio A., 2019, 12 INT C QUALITY INF, P263, DOI [10.1007/978-3-030-29238-6_19, DOI 10.1007/978-3-030-29238-6_19]
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Schuette D., 2021, SURVIVAL ANAL R BEGI
   Sharma T, 2020, EMPIR SOFTW ENG, V25, P4020, DOI 10.1007/s10664-020-09847-2
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 42
TC 0
Z9 0
U1 6
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2023
VL 200
AR 111644
DI 10.1016/j.jss.2023.111644
EA MAR 2023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C5DW9
UT WOS:000962128500001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Koçi, R
   Franch, X
   Jovanovic, P
   Abelló, A
AF Koci, Rediana
   Franch, Xavier
   Jovanovic, Petar
   Abello, Alberto
TI Web API evolution patterns: A usage-driven approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web API evolution; Web API logs; Process mining; Usage patterns
AB As the use of Application Programming Interfaces (APIs) is increasingly growing, their evolution becomes more challenging in terms of the service provided according to consumers' needs. In this paper, we address the role of consumers' needs in WAPIs evolution and introduce a process mining pattern-based method to support providers in WAPIs evolution by analyzing and understanding consumers' behavior, imprinted in WAPI usage logs. We take the position that WAPIs' evolution should be mainly usage-based, i.e., the way consumers use them should be one of the main drivers of their changes. We start by characterizing the structural relationships between endpoints, and next, we summarize these relationships into a set of behavioral patterns (i.e., usage patterns whose occurrences indicate specific consumers' behavior like repetitive or consecutive calls), that can potentially imply the need for changes (e.g., creating new parameters for endpoints, merging endpoints). We analyze the logs and extract several metrics for the endpoints and their relationships, to then detect the patterns. We apply our method in two real-world WAPIs from different domains, education, and health, respectively the WAPI of Barcelona School of Informatics at the Polytechnic University of Catalonia (Facultat d'Informatica de Barcelona, FIB, UPC), and District Health Information Software 2 (DHIS2) WAPI. The feedback from consumers and providers of these WAPIs proved the effectiveness of the detected patterns and confirmed the promising potential of our approach. (c) 2023 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Koci, Rediana; Franch, Xavier; Jovanovic, Petar; Abello, Alberto] Univ Politecn Cataluna, BarcelonaTech, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Koçi, R (corresponding author), Univ Politecn Cataluna, BarcelonaTech, Barcelona, Spain.
EM koci@essi.upc.edu; franch@essi.upc.edu; petar@essi.upc.edu;
   aabello@essi.upc.edu
RI Franch, Xavier/KAM-2369-2024
OI Franch, Xavier/0000-0001-9733-8830; Jovanovic,
   Petar/0000-0003-4635-6646; Koci, Rediana/0000-0003-3367-950X
FU Spanish Ministerio de Ciencia e Innovacion [PID2020-117191RB-I00/AEI]
FX This paper has been funded by the Spanish Ministerio de Ciencia e
   Innovacion under project/funding scheme
   PID2020-117191RB-I00/AEI/10.13039/501100011033. We especially thank Dr.
   Pedro Albajar-Vinas from WHO, who provided us the access to the DHIS2
   WAPI logs, Jaume Moral from inLAb, who provided us the access to the FIB
   WAPI logs, and the developers from EST, MSF, and inLab for participating
   in the interviews.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Bose RPJC, 2009, LECT NOTES COMPUT SC, V5701, P159, DOI 10.1007/978-3-642-03848-8_12
   Chapela-Campa D, 2019, INFORM SCIENCES, V472, P235, DOI 10.1016/j.ins.2018.09.011
   Doerrfeld Bill, 2018, 10 API MONITORING TO
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Gamazo A. Abello, 2017, CAiSE-Forum-DC, P1
   Granli William, 2015, P 14 INT WORKSH PRIN
   Gunther Christian W., 2007, Business Process Management. Proceedings 5th International Conference, BPM 2007. (Lecture Notes in Computer Science vol. 4714), P328
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   Koçi R, 2020, EUROMICRO CONF PROC, P64, DOI 10.1109/SEAA51224.2020.00021
   Koçi R, 2019, IEEE INT ENTERP DIST, P243, DOI 10.1109/EDOC.2019.00037
   Koci Rediana, 2021, RES CHALLENGES INFOR
   Koci Rediana, INT C ADV INFORM SYS, P146
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   Lamothe M, 2020, PROC INT CONF SOFTW, P912, DOI 10.1145/3377811.3380433
   Leemans Maikel, 2014, INT S DAT DRIV PROC
   Macvean Andrew, 2016, PPIG
   Mathijssen M, 2020, Arxiv, DOI arXiv:2006.10481
   Medjaoui Mehdi, 2018, CONTINUOUS API MANAG
   Milo R, 2002, SCIENCE, V298, P824, DOI 10.1126/science.298.5594.824
   Murphy L, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P249, DOI 10.1109/VLHCC.2018.8506523
   Pautasso Cesare, 2009, P 18 INT C WORLD WID
   Pedro San, 2016, INT C BUS PROC MAN
   Przulj N, 2004, BIOINFORMATICS, V20, P3508, DOI 10.1093/bioinformatics/bth436
   Sarajlic A, 2016, SCI REP-UK, V6, DOI 10.1038/srep35098
   Sohan SM, 2015, IEEE WORLD CONGR SER, P245, DOI 10.1109/SERVICES.2015.43
   Suter P, 2015, 2015 THIRD IEEE WORKSHOP ON HOT TOPICS IN WEB SYSTEMS AND TECHNOLOGIES (HOTWEB), P7, DOI 10.1109/HotWeb.2015.19
   Tanasa D, 2004, IEEE INTELL SYST, V19, P59, DOI 10.1109/MIS.2004.1274912
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst Wil M. P., 2013, Web Engineering. 13th International Conference, ICWE 2013. Proceedings: LNCS 7977, P1, DOI 10.1007/978-3-642-39200-9_1
   van der Aalst W, 2013, IEEE T SERV COMPUT, V6, P525, DOI 10.1109/TSC.2012.25
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zibran M. F., 2011, 2011 18th Working Conference on Reverse Engineering, P151, DOI 10.1109/WCRE.2011.26
NR 37
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2023
VL 198
AR 111609
DI 10.1016/j.jss.2023.111609
EA JAN 2023
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H1QK2
UT WOS:000993775500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Cucolas, AA
   Russo, D
AF Cucolas, Adrian-Alexandru
   Russo, Daniel
TI The impact of working from home on the success of Scrum projects: A
   multi-method study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Scrum; Working from home; Project success; Multi-method study
ID SOFTWARE-DEVELOPMENT; MOTIVATION
AB With the COVID-19 pandemic, Scrum teams had to switch abruptly from a traditional working setting into an enforced working from home one. This abrupt switch had an impact on software projects. Thus, it is necessary to understand how potential future disruptive events will impact Agile software teams' ability to deliver successful projects while working from home. To investigate this problem, we used a two-phased Multi-Method study. In the first phase, we uncover how working from home impacted Scrum practitioners through semi-structured interviews. Then, in the second phase, we propose a theoretical model that we test and generalize using Partial Least Squares-Structural Equation Modeling (PLS-SEM) surveying 138 software engineers who worked from home within Scrum projects. We concluded that all the latent variables identified in our model are reliable, and all the hypotheses are significant. This paper emphasizes the importance of supporting the three innate psychological needs of autonomy, competence, and relatedness in the home working environment. We conclude that the ability of working from home and the use of Scrum both contribute to project success, with Scrum acting as a mediator.(c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Cucolas, Adrian-Alexandru] Aalborg Univ, Aalborg, Denmark.
   [Russo, Daniel] Aalborg Univ, Comp Sci, Aalborg, Denmark.
C3 Aalborg University; Aalborg University
RP Russo, D (corresponding author), Aalborg Univ, Comp Sci, Aalborg, Denmark.
EM acucol19@student.aau.dk; daniel.russo@cs.aau.dk
RI Russo, Daniel/O-3002-2019
OI Russo, Daniel/0000-0001-7253-101X; Cucolas,
   Adrian-Alexandru/0000-0002-6081-5928
FU Carlsberg Foundation [CF20-0322]
FX Acknowledgments This work was supported by the Carlsberg Foundation,
   Den- mark under grant agreement number CF20-0322 (PanTra - Pan- demic
   Transformation) . The authors would also like to thank Ioana-M?d?lina
   G?nescu for helping gather and analyzing some interviews.
CR Ågerfalk PJ, 2013, EUR J INFORM SYST, V22, P251, DOI 10.1057/ejis.2013.6
   Ågren P, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10176-9
   [Anonymous], 2007, HAW INT C SYST SCI
   Arntz M., 2019, ZEW-Centre for European Economic Research Discussion Paper, 19-015
   Awan A G., 2015, European Journal of Business and Management, V7, P329
   Bailey DE, 2002, J ORGAN BEHAV, V23, P383, DOI 10.1002/job.144
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bannerman P. L., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5309, DOI 10.1109/HICSS.2012.512
   Barrero J. M., 2021, Why working from home will stick (No. w28731), DOI DOI 10.3386/W28731
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Becker, 2015, SMARTPLS 3
   Belassi W., 1996, International Journal of Project Management, V14, P141
   Butler J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P362, DOI 10.1109/ICSE-SEIP52600.2021.00047
   Cadete S., 2020, INT J SOFTWARE ENG A, V11, P15
   Chin WW, 1998, QUANT METH SER, P295
   Cho JY, 2014, QUAL REP, V19
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Danielsson CB, 2009, J ARCHIT PLAN RES, V26, P241
   Danilova A, 2021, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE43902.2021.00057
   Davis K, 2018, PROJ MANAG J, V49, P38, DOI 10.1177/8756972818786663
   Davis K, 2014, INT J PROJ MANAG, V32, P189, DOI 10.1016/j.ijproman.2013.02.006
   Deshpande A, 2016, INT C INF SYST ICIS
   Digital.ai, 2021, 15th annual state of agile survey report
   Dijkstra TK, 2015, MIS QUART, V39, P297, DOI 10.25300/MISQ/2015/39.2.02
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Faniran VT, 2017, 2017 1ST INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING APPLICATIONS (NEXTCOMP), P36, DOI 10.1109/NEXTCOMP.2017.8016173
   FARMER R, 1986, J PERS ASSESS, V50, P4, DOI 10.1207/s15327752jpa5001_2
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Ghosh G. K., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.46
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Gravetter F. J., 2018, Research methods for the behavioral sciences
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Gupta RK, 2016, P ANN HICSS, P5360, DOI 10.1109/HICSS.2016.663
   Hair J.F., 2016, A premier on partial least squares structural equation modeling (PLS-SEM), V2nd, DOI DOI 10.15358/9783800653614
   Hair JF, 2019, EUR BUS REV, V31, P2, DOI 10.1108/EBR-11-2018-0203
   Hassani-Alaoui S, 2020, HAW INT C SYST SCI
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Holten R., 2016, EUR C INF SYST
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Ika LA, 2009, PROJ MANAG J, V40, P6, DOI 10.1002/pmj.20137
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Johnson J., 2018, Chaos report, decision latency theory: It's all about the interval
   Kahneman D, 2004, SCIENCE, V306, P1776, DOI 10.1126/science.1103572
   Korzynski P., 2013, INT J ACAD RES, V5, P184, DOI DOI 10.7813/2075-4124.2013/5-5/B.28
   Kossek E.E., 2016, OXFORD HDB WORK FAMI, P255
   Labs O., 2018, 2018 GLOBAL STATE RE
   Lous P, 2017, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2017.13
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   Miles J., 2014, TOLERANCE VARIANCE I, DOI DOI 10.1002/9781118445112.STAT06593
   Morgeson FP, 2006, J APPL PSYCHOL, V91, P1321, DOI 10.1037/0021-9010.91.6.1321
   Nagel Thomas, 1986, VIEW NOWHERE
   Newman SA, 2021, ORGAN DYN, V50, DOI 10.1016/j.orgdyn.2020.100802
   Nitzl C, 2016, IND MANAGE DATA SYST, V116, P1849, DOI 10.1108/IMDS-07-2015-0302
   O'Connell P.J., 2005, EQUALITY WORK WORKPL
   Osnowitz D, 2005, GENDER SOC, V19, P83, DOI 10.1177/0891243204270209
   Ozieranska A., 2016, Journal of Economics Management, V25, P79, DOI 10.22367/jem.2016.25.06
   Paasivaara M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P87, DOI 10.1109/ICGSE.2008.38
   Paasivaara M, 2011, INT SYMP EMP SOFTWAR, P363, DOI 10.1109/ESEM.2011.49
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Paulhus D. L., 1991, MEASURES PERSONALITY, V1, P17, DOI DOI 10.1016/B978-0-12-590241-0.50006-X
   Peer E, 2017, J EXP SOC PSYCHOL, V70, P153, DOI 10.1016/j.jesp.2017.01.006
   Pries-Heje L., 2011, Proceedings of the 2011 Agile Conference, P20, DOI 10.1109/AGILE.2011.34
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Ralph P., 2010, ARXIV
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rubin H. J., 2011, QUALITATIVE INTERVIE
   Russo Daniel, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P30, DOI 10.1109/CESSER-IP.2019.00013
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Russo D, 2018, ACM TRANS MANAG INF, V9, DOI 10.1145/3230713
   Russo D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P63, DOI 10.1109/ICSE-SEIP.2017.10
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Schwaber K., 2020, Scrum Guide
   Seckin Ibrahim, 2018, 2018 IEEE/ACM 13th International Conference on Global Software Engineering (ICGSE), P130, DOI 10.1145/3196369.3196381
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Sheldon KM, 2012, MOTIV EMOTION, V36, P439, DOI 10.1007/s11031-012-9279-4
   Shenhar A., 1997, PROJ MANAG J, V28, P5
   Shenhar AJ, 2001, LONG RANGE PLANN, V34, P699, DOI 10.1016/S0024-6301(01)00097-8
   Shmueli G, 2019, EUR J MARKETING, V53, P2322, DOI 10.1108/EJM-02-2019-0189
   Shmueli G, 2016, J BUS RES, V69, P4552, DOI 10.1016/j.jbusres.2016.03.049
   Sonjit P., 2021, ADV PROJECT MANAGEME, V21
   Stol KJ, 2019, IEEE T SOFTWARE ENG, V45, P237, DOI 10.1109/TSE.2017.2774297
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Taufiq A, 2020, INT C ADV COMP SCI I, P241, DOI [10.1109/icacsis51025.2020.9263235, 10.1109/ICACSIS51025.2020.9263235]
   Therrien I, 2009, AGILE 2009 CONFERENCE, P289, DOI 10.1109/AGILE.2009.73
   Vallon R, 2014, 2014 AGILE CONFERENCE (AGILE), P52, DOI 10.1109/AGILE.2014.22
   van der Lippe T, 2020, NEW TECH WORK EMPLOY, V35, P60, DOI 10.1111/ntwe.12153
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vega RP, 2015, J BUS PSYCHOL, V30, P313, DOI 10.1007/s10869-014-9359-4
   Venkatesh V, 2020, INT J INFORM MANAGE, V55, DOI 10.1016/j.ijinfomgt.2020.102197
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   WERTS CE, 1974, EDUC PSYCHOL MEAS, V34, P25, DOI 10.1177/001316447403400104
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhao XS, 2010, J CONSUM RES, V37, P197, DOI 10.1086/651257
NR 101
TC 5
Z9 6
U1 1
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111562
DI 10.1016/j.jss.2022.111562
EA DEC 2022
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8Q1PA
UT WOS:000926985500003
PM 36447955
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Márquez, G
   Astudillo, H
   Kazman, R
AF Marquez, Gaston
   Astudillo, Hernan
   Kazman, Rick
TI Architectural tactics in software architecture: A systematic mapping
   study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architectural tactics; Systematic mapping study; Software architecture;
   Quality attributes
ID SPECIFYING REDUNDANCY TACTICS; REQUIREMENTS; SECURITY; PATTERNS; MODEL
AB Architectural tactics are a key abstraction of software architecture, and support the systematic design and analysis of software architectures to satisfy quality attributes. Since originally proposed in 2003, architectural tactics have been extended and adapted to address additional quality attributes and newer kinds of systems, making quite hard for researchers and practitioners to master this growing body of specialized knowledge. This paper presents the design, execution and results of a systematic mapping study of architectural tactics in software architecture literature. The study found 552 studies in well-known digital libraries, of which 79 were selected and 12 more were added with snowballing, giving a total of 91 primary studies. Key findings are: (i) little rigor has been used to characterize and define architectural tactics; (ii) most architectural tactics proposed in the literature do not conform to the original definition; and (iii) there is little industrial evidence about the use of architectural tactics. This study organizes and summarizes the scientific literature to date about architectural tactics, identifies research opportunities, and argues for the need of more systematic definition and description of tactics.Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.(c) 2022 Elsevier Inc. All rights reserved.
C1 [Marquez, Gaston] Univ Tecn Federico Santa Maria, Dept Elect & Informat, Concepcion, Chile.
   [Astudillo, Hernan] Univ Tecn Federico Santa Maria, Dept Informat, Santiago, Chile.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 Universidad Tecnica Federico Santa Maria; Universidad Tecnica Federico
   Santa Maria; University of Hawaii System
RP Márquez, G (corresponding author), Univ Tecn Federico Santa Maria, Dept Elect & Informat, Concepcion, Chile.
EM gaston.marquez@usm.cl
RI Marquez, Gaston/AAK-9416-2020; Astudillo, Hernan/B-7521-2012
OI Marquez, Gaston/0000-0003-0167-5969; Astudillo,
   Hernan/0000-0002-6487-5813; Kazman, Rick/0000-0003-0392-2783
FU Centro Basal CCTVal from ANID (Chile) [PIA/APOYO AFB180002]; National
   Science Foundation (USA) [CCF-1823214, CCF-1817267]
FX This work was supported in part by the Centro Basal CCTVal (PIA/APOYO
   AFB180002) from ANID (Chile), and by awards CCF-1823214 and CCF-1817267
   from the National Science Foundation (USA). We also thanks to the
   department of Electronics and Informatics from the Universidad Tecnica
   Federico Santa Maria.
CR Adam S., 2016, SEKE, P357, DOI [10.18293/SEKE2016-183, DOI 10.18293/SEKE2016-183]
   Agrawal A, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12040598
   Al Imran MA, 2017, 2017 INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (ICECOS), P131, DOI 10.1109/ICECOS.2017.8167119
   Al-Daajeh S.H., 2012, INT J SOFTW ENG KNOW, V5, P5
   Al-Daajeh S.H., 2011, ENG DEPENDABILITY EM
   Alashqar AM, 2017, INT J SOFTW ENG KNOW, V27, P475, DOI 10.1142/S0218194017500176
   Aldaajeh SH, 2021, IEEE ACCESS, V9, P91328, DOI 10.1109/ACCESS.2021.3091617
   Alebrahim A., 2015, P 20 EUR C PATT LANG, P39, DOI [10.1145/2855321.2855361, DOI 10.1145/2855321.2855361]
   Alenezi M, 2020, IEEE ACCESS, V8, P25543, DOI 10.1109/ACCESS.2020.2970784
   Alpaydin E., 2020, INTRO MACHINE LEARNI, DOI DOI 10.7551/MITPRESS/13811.001.0001
   Alzahrani NAM, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P43, DOI 10.1145/2737182.2737189
   Ampatzoglou A., 2020, Contemporary empirical methods in software engineering, P415
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2020, 25010 ISOIEC
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bachmann F., 2003, Second International Workshop from Software Requirements to Architectures (STRAW '03), P122
   Bachmann F., 2002, LLUMINATING FUNDAMEN
   Bachmann F., 2003, CMUSEI2003TR004
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass L., 2001, APPL GEN SCENARIOS A
   Bass L., 2000, Quality Attribute Design Primitives
   Bass L, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, pXXIII
   Bass Len, 2013, SEI SERIES SOFTWARE
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Bi TT, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111005
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bogner J, 2019, SICS SOFTWARE, V34, P141, DOI 10.1007/s00450-019-00402-z
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cañete-Valdeón JM, 2012, INFORM PROCESS LETT, V112, P656, DOI 10.1016/j.ipl.2012.06.002
   Cervantes H., 2019, 52 HAW INT C SYST SC, P7331
   Chavarriaga Jaime, 2015, 2015 10th Computing Colombian Conference (10CCC). Proceedings, P124, DOI 10.1109/ColumbianCC.2015.7333406
   Chavarriaga J., 2014, P 10 INT ACM SIGS C, P13, DOI [10.1145/2602576.2602580, DOI 10.1145/2602576.2602580]
   Chen HM, 2015, SYM REL DIST SYST, P25, DOI 10.1109/SRDSW.2015.14
   Chinnappan K, 2021, LECT NOTES COMPUT SC, V12857, P164, DOI 10.1007/978-3-030-86044-8_11
   Chung L., 2000, The NFR Framework in Action, P15
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Valle PHD, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1399, DOI 10.1145/3412841.3442015
   Fernandez E.B., 2012, 1 INT S SOFTW ARCH P, P8
   Fernandez EB, 2015, LECT NOTES COMPUT SC, V9278, P55, DOI 10.1007/978-3-319-23727-5_5
   Gesvindr D, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P158, DOI 10.1109/WICSA.2016.42
   Gonzalez D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P31, DOI 10.1109/ICSA.2019.00012
   Gopalakrishnan R, 2017, PROC INT CONF SOFTW, P15, DOI 10.1109/ICSE.2017.10
   Harrison N., 2008, P RISE EFTS JOINT IN, DOI [10.1145/1479772.1479775, DOI 10.1145/1479772.1479775]
   Harrison NB, 2010, P 2 INT WORKSH SOFTW, P12, DOI [10.1145/2401736.2401738, DOI 10.1145/2401736.2401738]
   Harrison NB, 2010, J SYST SOFTWARE, V83, P1735, DOI 10.1016/j.jss.2010.04.067
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hill A.E., 2009, INT C SYSTEM SAFETY, DOI [10.1049/cp.2009.1562, DOI 10.1049/CP.2009.1562]
   Jungwoo Ryoo, 2012, 2012 International Conference on Software Security and Reliability Companion, P85, DOI 10.1109/SERE-C.2012.18
   Kassab M., 2013, SEKE 2013 JANUARY, P441
   Kassab M., 2015, INT ANDREI ERSHOV ME, P158
   Kassab M, 2018, INNOV SYST SOFTW ENG, V14, P263, DOI 10.1007/s11334-018-0319-4
   Kazman R., 2012, SYSTEMS C, P1, DOI [10.1109/SysCon.2012.6189488, DOI 10.1109/SYSCON.2012.6189488]
   Keim J, 2020, LECT NOTES COMPUT SC, V12292, P220, DOI 10.1007/978-3-030-58923-3_15
   Kim D.-K., 2007, Design Pattern Formalization Techniques, P183
   Kim S., 2010, P IEEE ACM INT C AUT, P127, DOI [10.1145/1858996.1859018, DOI 10.1145/1858996.1859018]
   Kim S, 2008, IEEE INT ENTERP DIST, P139, DOI 10.1109/EDOC.2008.18
   Kim S, 2015, INT J AD HOC UBIQ CO, V18, P45, DOI 10.1504/IJAHUC.2015.067780
   Kim S, 2009, J SYST SOFTWARE, V82, P1211, DOI 10.1016/j.jss.2009.03.102
   Kitchenham B., 2007, 2007001 EBSE
   Kjærgaard MB, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P63, DOI 10.1145/2737182.2737196
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Krutz D.E., 2016, P 31 ANN ACM S APPL, P1480, DOI [10.1145/2851613.2851787, DOI 10.1145/2851613.2851787]
   Kuhrmann M, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.62
   Lee SN, 2014, INT J ENG SYST MODEL, V6, P54, DOI 10.1504/IJESMS.2014.058424
   Lewis G, 2019, FUTURE GENER COMP SY, V96, P119, DOI 10.1016/j.future.2019.01.052
   Lewis G, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P53, DOI 10.1145/2737182.2737188
   Lewis G, 2015, J SYST SOFTWARE, V107, P158, DOI 10.1016/j.jss.2015.06.005
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Malavolta I, 2021, IEEE WORK CONF MIN S, P300, DOI 10.1109/MSR52588.2021.00042
   Marew T, 2009, J SYST SOFTWARE, V82, P1642, DOI 10.1016/j.jss.2009.03.032
   Marquez G., 2016, 35 INT C CHILEAN COM, P1, DOI [10.1109/SCCC.2016.7836020, DOI 10.1109/SCCC.2016.7836020]
   Márquez G, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P250, DOI [10.1109/ICSA-C50368.2020.00049, 10.1109/ICSA-050368.2020.00049]
   Márquez G, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P123, DOI 10.1145/3344948.3344996
   Márquez G, 2018, P INT C CHIL COMPUT
   Márquez G, 2017, PROC IEEE ACM INT C, P441, DOI 10.1109/ICSE-C.2017.35
   Milhem H, 2020, INT J SOFTW ENG KNOW, V30, P1819, DOI 10.1142/S021819402040032X
   Mirakhorli M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P123, DOI 10.1109/ICSM.2011.6080779
   Mirakhorli M., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P52, DOI DOI 10.1145/2393596.2393657
   Mirakhorli M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P377, DOI 10.1109/MSR.2015.44
   Mirakhorli M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P739, DOI 10.1145/2635868.2661671
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mirakhorli M, 2013, IEEE INT CONF AUTOM, P762, DOI 10.1109/ASE.2013.6693152
   Mirakhorli M, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P1, DOI 10.1109/TwinPeaks-2.2013.6617352
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Moghaddam FA, 2018, J SYST SOFTWARE, V138, P37, DOI 10.1016/j.jss.2017.11.047
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Mujhid IJ, 2017, J SYST SOFTWARE, V130, P81, DOI 10.1016/j.jss.2016.11.034
   Nanda Smruti Priyambada, 2020, 17th International Conference on Information Technology-New Generations (ITNG 2020). Advances in Intelligent Systems and Computing (AISC 1134), P285, DOI 10.1007/978-3-030-43020-7_38
   Noel R., 2014, P 17 IB AM C SOFTW E, P378
   Nord RL, 2014, LECT NOTES BUS INF P, V199, P43
   Orellana C, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P109, DOI 10.1145/3344948.3344994
   Osses F., 2018, P 12 EUR C SOFTW ARC, P54
   Osses F., 2018, AVANCES INGENIERIA S, V2018, P71
   Paradis C., 2021, 54 HAWAII INT C SYST, P7197
   Pedraza-Garcaa G., 2016, P 10 EUR C SOFTW ARC, P37, DOI DOI 10.1145/2993412.3007552
   Pedraza-Garcia G, 2014, 2014 IEEE COLOMBIAN CONFERENCE ON COMMUNICATIONS AND COMPUTING (COLCOM)
   Petersen K., 2008, 12 INT C EV ASS SOFT, P26, DOI [10.14236/ewic/ease2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Preschern Christopher, 2019, Transactions on Pattern Languages of Programming IV. Lecture Notes in Computer Science (LNCS 10600), P22, DOI 10.1007/978-3-030-14291-9_2
   Preschern C., 2013, P VIKINGPLOP 2013 C, P79
   Preschern C., 2012, P 19 C PATTERN LANGU, P7
   Procaccianti Giuseppe, 2014, 2014 IEEE 8th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2014). Proceedings, P29, DOI 10.1109/MESOCA.2014.12
   Qiu X., 21 ASIA PACIFIC SOFT, V1, P11, DOI [10.1109/APSEC.2014.11, DOI 10.1109/APSEC.2014.11]
   Qiu X, 2014, FRONT COMPUT SCI-CHI, V8, P977, DOI 10.1007/s11704-014-3390-5
   Qiu X, 2013, INT CONF QUAL SOFTW, P183, DOI 10.1109/QSIC.2013.61
   Reza H., 2005, 2005 IEEE International Conference on Electro Information Technology (IEEE Cat. No. 05EX1098C)
   Richards M., 2020, Fundamentals of Software Architecture: An Engineering Approach, V1st
   Ryoo J., 2010, 43 HAW INT C SYST SC, P1, DOI [10.1109/HICSS.2010.18, DOI 10.1109/HICSS.2010.18]
   Ryoo J, 2016, IEEE T RELIAB, V65, P1195, DOI 10.1109/TR.2015.2500367
   Sabry AE, 2015, PROCEDIA COMPUT SCI, V65, P422, DOI 10.1016/j.procs.2015.09.111
   Salama M, 2016, IEEE INT CONF CLOUD, P871, DOI [10.1109/CLOUD.2016.0126, 10.1109/CLOUD.2016.124]
   Sanchez A, 2012, IEEE ANNU SOFTW ENG, P32, DOI 10.1109/SEW.2012.10
   Santos JCS, 2019, J SYST SOFTWARE, V149, P263, DOI 10.1016/j.jss.2018.10.030
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P69, DOI 10.1109/ICSA.2017.39
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shokri A, 2021, Arxiv, DOI arXiv:2102.08372
   Stal M., 2012, FASTER BETTER HIGHER
   System Safety Engineering, SOFTW SAF
   Tahmasebipour S., 2014, J COMPUT SECUR, V1
   TARVAINEN P, 2008, OPEN SOFTWARE ENG J, V2, P1
   The MITRE Corporation, 2020, COMM VULN EXP CVE
   Ullah F, 2019, J SYST SOFTWARE, V151, P81, DOI 10.1016/j.jss.2019.01.051
   Waseem M., 2020, ZENODO, DOI [10.5281/zenodo.3959298, DOI 10.5281/ZENODO.7290575]
   Weihang Wu, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P368, DOI 10.1109/CMPSAC.2004.1342860
   Wessling F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P234, DOI 10.1109/ICSA-C.2019.00048
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wyeth A, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P172
   Yánez W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3442412
NR 131
TC 1
Z9 1
U1 2
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2023
VL 197
AR 111558
DI 10.1016/j.jss.2022.111558
EA DEC 2022
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8Q1PA
UT WOS:000926985500004
OA Bronze
DA 2024-07-18
ER

PT J
AU Rani, P
   Blasi, A
   Stulova, N
   Panichella, S
   Gorla, A
   Nierstrasz, O
AF Rani, Pooja
   Blasi, Arianna
   Stulova, Nataliia
   Panichella, Sebastiano
   Gorla, Alessandra
   Nierstrasz, Oscar
TI A decade of code comment quality assessment: A systematic literature
   review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code comments; Documentation quality; Systematic literature review
ID SOFTWARE DOCUMENTATION; TRACEABILITY; CONTEXT
AB Code comments are important artifacts in software systems and play a paramount role in many software engineering (SE) tasks related to maintenance and program comprehension. However, while it is widely accepted that high quality matters in code comments just as it matters in source code, assessing comment quality in practice is still an open problem. First and foremost, there is no unique definition of quality when it comes to evaluating code comments. The few existing studies on this topic rather focus on specific attributes of quality that can be easily quantified and measured. Existing techniques and corresponding tools may also focus on comments bound to a specific programming language, and may only deal with comments with specific scopes and clear goals (e.g., Javadoc comments at the method level, or in-body comments describing TODOs to be addressed).In this paper, we present a Systematic Literature Review (SLR) of the last decade of research in SE to answer the following research questions: (i) What types of comments do researchers focus on when assessing comment quality? (ii) What quality attributes (QAs) do they consider? (iii) Which tools and techniques do they use to assess comment quality?, and (iv) How do they evaluate their studies on comment quality assessment in general?Our evaluation, based on the analysis of 2353 papers and the actual review of 47 relevant ones, shows that (i) most studies and techniques focus on comments in Java code, thus may not be generalizable to other languages, and (ii) the analyzed studies focus on four main QAs of a total of 21 QAs identified in the literature, with a clear predominance of checking consistency between comments and the code. We observe that researchers rely on manual assessment and specific heuristics rather than the automated assessment of the comment quality attributes, with evaluations often involving surveys of students and the authors of the original studies but rarely professional developers.(c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Rani, Pooja; Stulova, Nataliia; Nierstrasz, Oscar] Univ Bern, Software Composit Grp, Bern, Switzerland.
   [Panichella, Sebastiano] Univ Svizzera italiana, Lugano, Switzerland.
   [Gorla, Alessandra] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Gorla, Alessandra] IMDEA Software Inst, Madrid, Spain.
C3 University of Bern; Universita della Svizzera Italiana; Zurich
   University of Applied Sciences; IMDEA Software Institute
RP Rani, P (corresponding author), Univ Bern, Software Composit Grp, Bern, Switzerland.
EM pooja.rani@unibe.ch; arianna.blasi@usi.ch; nataliia.stulova@unibe.ch;
   panc@zhaw.ch; alessandra.gorla@imdea.org; oscar.nierstrasz@unibe.ch
OI Blasi, Arianna/0000-0002-9635-2400; Panichella,
   Sebastiano/0000-0003-4120-626X; , Pooja Rani/0000-0001-5127-4042;
   Nierstrasz, Oscar/0000-0002-9975-9791; Stulova,
   Nataliia/0000-0002-6804-2253
FU Swiss National Science Foundation (SNSF) [200020-181973]; Spanish
   Government through the SCUM [RTI2018-102043-B-I00]; Madrid Regional
   through the project BLOQUES; Horizon 2020 (EU Commission)
   [957254-COSMOS]
FX We gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the project "Agile Software Assistance"(SNSF
   project No. 200020-181973, Feb 1, 2019-Apr 30, 2022) and the Spanish
   Government through the SCUM grant RTI2018-102043-B-I00, and the Madrid
   Regional through the project BLOQUES. We also acknowledge the Horizon
   2020 (EU Commission) support for the project COSMOS (DevOps for Com-plex
   Cyber-physical Systems), Project No. 957254-COSMOS.
CR Abidi Mouna, 2020, EuroPLoP '20: Proceedings of the European Conference on Pattern Languages of Programs 2020, DOI 10.1145/3424771.3424792
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Aghajani E, 2018, PROC IEEE INT CONF S, P25, DOI 10.1109/ICSME.2018.00012
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Ambler S.W, 2007, AGILELEAN DOCUMENTAT
   [Anonymous], 2011, 1 INT WORKSHOP MODEL
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   [Anonymous], 2011, ORACLE DOCUMENTATION
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arthur J. D., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P40, DOI 10.1109/ICSM.1989.65192
   Auyang SunnyY., 2006, Engineering--An Endless Frontier
   Badshah Sher, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P427, DOI 10.1145/3383219.3383280
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Corazza A, 2018, SOFTWARE QUAL J, V26, P751, DOI 10.1007/s11219-016-9347-1
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dekel U, 2009, INT C PROGRAM COMPRE, P168, DOI 10.1109/ICPC.2009.5090040
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fucci D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/3338906.3338943
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Garousi G, 2015, INFORM SOFTWARE TECH, V57, P664, DOI 10.1016/j.infsof.2014.08.003
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Iammarino M, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9207651
   Jingyi Zhang, 2018, Web Information Systems and Applications. 15th International Conference, WISA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11242), P39, DOI 10.1007/978-3-030-02934-0_4
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Kechagia M, 2018, J SYST SOFTWARE, V142, P248, DOI 10.1016/j.jss.2018.04.034
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Lemos OAL, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P100, DOI 10.1145/3341105.3373972
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   McBurney PW, 2016, EMPIR SOFTW ENG, V21, P17, DOI 10.1007/s10664-014-9344-6
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McMillan C., 2010, Proceedings of the 2Nd International Workshop on Recommendation Systems for Software Engineering, RSSE'10, P21
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Minaee S, 2021, ACM Computing Surveys (CSUR), V54, P1, DOI DOI 10.1145/3439726
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Motwani M, 2019, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2019.00035
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nie PY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3338906.3338965
   Nurvitadhi E., 2003, 33 ANN FRONT ED 2003
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pascarella L, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P43, DOI 10.1109/MALTESQUE.2018.8368458
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pham TMT, 2020, INT C PROGRAM COMPRE, P308, DOI 10.1145/3387904.3389259
   Plösch R, 2014, INT CONF QUAL SOFTW, P333, DOI 10.1109/QSIC.2014.22
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Rama GM, 2015, SOFTWARE PRACT EXPER, V45, P75, DOI 10.1002/spe.2215
   Rani P, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111047
   Rani P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09981-5
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Sohan SM, 2017, S VIS LANG HUM CEN C, P53, DOI 10.1109/VLHCC.2017.8103450
   Song XT, 2019, IEEE ACCESS, V7, P111411, DOI 10.1109/ACCESS.2019.2931579
   Staffs Keele, 2007, Tech. Rep.
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Sun XB, 2016, INT J SOFTW ENG KNOW, V26, P981, DOI 10.1142/S0218194016500339
   Tarhan A., 2017, P 21 INT C EVALUATIO, VF1286, P2, DOI 10.1145/3084226.3084261
   Tomassetti F, 2014, P 18 INT C EV ASS SO, p17:1
   Torngren Martin, 2018, Principles of Modeling - Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 10760), P478, DOI 10.1007/978-3-319-95246-8_27
   Vincenti Walter G., 1990, What Engineers Know and How They Know it, V141
   Visconti M, 2004, LECT NOTES COMPUT SC, V3009, P485
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
   Xi YG, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361246
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yu Hai, 2016, Journal of Computer Applications, V36, P3448, DOI 10.11772/j.issn.1001-9081.2016.12.3448
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
   Zhou Y, 2019, J SYST SOFTWARE, V156, P328, DOI 10.1016/j.jss.2019.07.087
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 102
TC 6
Z9 6
U1 2
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2023
VL 195
AR 111515
DI 10.1016/j.jss.2022.111515
EA OCT 2022
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C9CH
UT WOS:000882302100008
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Palma, F
   Olsson, T
   Wingkvist, A
   Gonzalez-Huerta, J
AF Palma, Francis
   Olsson, Tobias
   Wingkvist, Anna
   Gonzalez-Huerta, Javier
TI Assessing the linguistic quality of REST APIs for IoT applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE REST APIs; IoT applications; Linguistic quality; Pattern; Antipattern;
   Detection
AB Internet of Things (IoT) is a growing technology that relies on connected 'things' that gather data from peer devices and send data to servers via APIs (Application Programming Interfaces). The design quality of those APIs has a direct impact on their understandability and reusability. This study focuses on the linguistic design quality of REST APIs for IoT applications and assesses their linguistic quality by performing the detection of linguistic patterns and antipatterns in REST APIs for IoT applications. Linguistic antipatterns are considered poor practices in the naming, documentation, and choice of identifiers. In contrast, linguistic patterns represent best practices to APIs design. The linguistic patterns and their corresponding antipatterns are hence contrasting pairs. We propose the SARAv2 (Semantic Analysis of REST APIs version two) approach to perform syntactic and semantic analyses of REST APIs for IoT applications. Based on the SARAv2 approach, we develop the REST-Ling tool and empirically validate the detection results of nine linguistic antipatterns. We analyse 19 REST APIs for IoT applications. Our detection results show that the linguistic antipatterns are prevalent and the REST-Ling tool can detect linguistic patterns and antipatterns in REST APIs for IoT applications with an average accuracy of over 80%. Moreover, the tool performs the detection of linguistic antipatterns on average in the order of seconds, i.e., 8.396 s. We found that APIs generally follow good linguistic practices, although the prevalence of poor practices exists. (C) 2022 The Author(s). Published by Elsevier Inc.
C1 [Palma, Francis; Olsson, Tobias; Wingkvist, Anna] Linnaeus Univ, Dept Comp Sci & Media Technol, Vaxjo, Sweden.
   [Gonzalez-Huerta, Javier] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Linnaeus University; Blekinge Institute Technology
RP Palma, F (corresponding author), Linnaeus Univ, Dept Comp Sci & Media Technol, Vaxjo, Sweden.
EM francis.palma@lnu.se; tobias.olsson@lnu.se; anna.wingkvist@lnu.se;
   javier.gonzalez.huerta@bth.se
RI Gonzalez-Huerta, Javier/V-4258-2019; Palma, Francis/HPC-9574-2023
OI Gonzalez-Huerta, Javier/0000-0003-1350-7030; Olsson,
   Tobias/0000-0003-1154-5308; Wingkvist, Anna/0000-0002-0835-823X
FU Knowledge Foundation, Sweden [2017/0176]; Linnaeus University Centre for
   Data Intensive Sciences and Applications (DISA) , Sweden
FX We would like to thank Niklas Emevi, a full stack Web de-veloper at
   Tieto CEM, for taking part in the validation process. We are thankful to
   Osama Zarraa and Ahmad Sadia for their contributions in developing the
   tool. We extend gratitude to The Knowledge Foundation, Sweden that
   partially supported this research through the SHADE H?G-project
   2017/0176. This study was also conducted with the support from Linnaeus
   University Centre for Data Intensive Sciences and Applications (DISA) ,
   Sweden.
CR Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Aghajani E, 2018, PROC IEEE INT CONF S, P25, DOI 10.1109/ICSME.2018.00012
   [Anonymous], 2000, Dissertation
   [Anonymous], 2009, ELECTRONICALLY
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Berners-Lee T., 2005, Uniform Resource Identifier
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brabra H, 2019, INFORM SOFTWARE TECH, V107, P65, DOI 10.1016/j.infsof.2018.10.012
   Brabra H, 2016, LECT NOTES COMPUT SC, V9936, P202, DOI 10.1007/978-3-319-46295-0_13
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Budanitsky A, 2006, COMPUT LINGUIST, V32, P13, DOI 10.1162/coli.2006.32.1.13
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Fredrich T., 2012, RESTful Service Best Practices
   Griffith T., 2006, LATENT SE MANTIC ANM, V440
   Haupt F, 2018, COMPUT SCI-RES DEV, V33, P291, DOI 10.1007/s00450-017-0384-1
   Haupt F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P55, DOI 10.1109/ICSA.2017.40
   Hausenblas M, 2011, REST: FROM RESEARCH TO PRACTICE, P425, DOI 10.1007/978-1-4419-8303-9_19
   Keranen A., 2017, RESTFUL DESIGN INTER
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   KOLB P, 2008, KONVENS 2008 ERGANZU, P37
   Levin G, 2017, REST API DESIGN GUID
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Madakam S., 2015, J COMPUT COMMUN, V3, P164, DOI [10.4236/jcc.2015.35021, DOI 10.4236/JCC.2015.35021]
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Rodriguez JM, 2010, SCI COMPUT PROGRAM, V75, P1001, DOI 10.1016/j.scico.2010.01.002
   Masse Mark., 2012, REST API Design Rulebook
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Microsoft MSDN, 2006, CAP STYL
   Moha N., 2012, 10 INT C SERV OR COM
   OMA, 2012, OP MOB ALL GUID REST
   Palma F, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420011
   Palma F, 2015, LECT NOTES COMPUT SC, V9435, P171, DOI 10.1007/978-3-662-48616-0_11
   Palma F, 2014, LECT NOTES COMPUT SC, V8831, P230, DOI 10.1007/978-3-662-45391-9_16
   Panziera L, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P1407
   Parrish A., 2010, SOCIAL NETWORK APIS
   Petrillo F., 2018, COMMUN COMPUT PHYS, P308, DOI [DOI 10.1007/978-3-319-94959-8, 10.1007/978-3-319-94959-8]
   Petrillo F, 2016, LECT NOTES COMPUT SC, V9936, P157, DOI 10.1007/978-3-319-46295-0_10
   Rahman MM, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P540, DOI 10.1109/SANER.2015.7081873
   Riggins J, 2015, API DESIGN CONSIDERA
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Shah U.S., 2015, SIGSOFT SOFTW ENG NO, V40, P1
   Tilkov Stefan., 2008, REST Anti-Patterns
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Wei FG, 2015, LECT NOTES COMPUT SC, V9097, P501, DOI 10.1007/978-3-319-19069-3_31
   Wilhelm R., 2013, Compiler design: syntactic and semantic analysis
NR 49
TC 4
Z9 4
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2022
VL 191
AR 111369
DI 10.1016/j.jss.2022.111369
EA MAY 2022
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2I1JZ
UT WOS:000814741100004
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Li, YY
   Feng, Y
   Hao, R
   Liu, D
   Fang, CR
   Chen, ZY
   Xu, BW
AF Li, Yuying
   Feng, Yang
   Hao, Rui
   Liu, Di
   Fang, Chunrong
   Chen, Zhenyu
   Xu, Baowen
TI Classifying crowdsourced mobile test reports with image features: An
   empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Crowdsourced testing; Test report classification; Image features
ID FEATURE-SELECTION; TEXT; PREDICTION; BUGS
AB Crowdsourced testing has become a popular mobile application testing method, and it is capable of simulating real usage scenarios and detecting various bugs with a large workforce. However, inspecting and classifying the overwhelming number of crowdsourced test reports has become a time-consuming yet inevitable task. To alleviate such tasks, in the past decades, software engineering researchers have proposed many automatic test report classification techniques. However, these techniques may become less effective for crowdsourced mobile application testing, where test reports often consist of insufficient text descriptions and rich screenshots and are fundamentally different from those of traditional desktop software. To bridge the gap, we firstly fuse features extracted from text descriptions and screenshots to classify crowdsourced test reports. Then, we empirically investigate the effectiveness of our feature fusion approach under six classification algorithms, namely Naive Bayes (NB), k-Nearest Neighbors (kNN), Support Vector Machine (SVM), Decision Tree (DT), Random Forest (RF) and Convolutional Neural Network (CNN). The experimental results on six widely used applications show that (1) SVM with fused features can outperform others in classifying crowdsourced test reports, and (2) image features can improve the test report classification performance. (c) 2021 Elsevier Inc. All rights reserved.
C1 [Li, Yuying; Feng, Yang; Hao, Rui; Liu, Di; Fang, Chunrong; Chen, Zhenyu; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Feng, Y; Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM fengyang@nju.edu.cn; fangchunrong@nju.edu.cn
RI Fang, Chunrong/GPW-9872-2022; Xu, Baowen/IXW-4882-2023; liu,
   di/M-5934-2014
OI Fang, Chunrong/0000-0002-9930-7111; Xu, Baowen/0000-0001-7743-1296; liu,
   di/0000-0003-0539-9279
FU National key research and development program of China [2018YFB1403400];
   National natural science foundation of China [61802171]
FX This research is supported by the National key research and development
   program of China (2018YFB1403400) and the National natural science
   foundation of China (61802171).
CR Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2017, IEEE SOFTWARE
   [Anonymous], 2007, ASSISTING BUG REPORT
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cai Deng, 2003, Vips: a vision-based page segmentation algorithm
   Chan K, 2003, PROC INT CONF SOFTW, P114, DOI 10.1109/ICSE.2003.1201193
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Che W., 2010, Proceedings of the 23rd international conference on computational linguistics: Demonstrations, P13
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Choudhary S.R., 2010, P 2010 IEEE INT C SO, P1, DOI DOI 10.1109/ICSM.2010.5609723
   Cunningham P., 2007, MULTIPLE CLASSIFIER, V34, P1, DOI DOI 10.1145/3459665
   Derhab A, 2020, WIREL COMMUN MOB COM, V2020, DOI 10.1155/2020/6689134
   Dodge Y., 2006, The Oxford dictionary of statistical terms
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Hammouda KM, 2004, IEEE T KNOWL DATA EN, V16, P1279, DOI 10.1109/TKDE.2004.58
   Howe J, 2006, WIRED, V14, P1, DOI DOI 10.1086/599595
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang JY, 2011, IEEE T KNOWL DATA EN, V23, P335, DOI 10.1109/TKDE.2010.122
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Kibriya AM, 2004, LECT NOTES ARTIF INT, V3339, P488
   Kleinberg EM, 1996, ANN STAT, V24, P2319
   Kurlander D., 1988, 1988 IEEE Workshop on Visual Languages (Cat. No.TH0229-5), P127, DOI 10.1109/WVL.1988.18020
   Lazebnik S., COMPUTER VISION PATT, V2, P2169
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Leung K.M., 2007, NAIVE BAYESIAN CLASS
   Li YJ, 2008, IEEE T KNOWL DATA EN, V20, P641, DOI 10.1109/TKDE.2007.190740
   Loper E., 2002, ARXIV
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mao K., 2016, J SYST SOFTWARE, V126
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Michail A, 2005, PROC INT CONF SOFTW, P107
   Michail A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P327, DOI 10.1109/ICSE.2002.1007979
   Murphy G., 2004, P 16 INT C SOFTW ENG
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Phaisangittisagul E, 2016, P INT CONF INTELL, P174, DOI 10.1109/ISMS.2016.14
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rongrong Zhang, 2010, Proceedings 2010 IEEE 2nd Symposium on Web Society (SWS 2010), P351, DOI 10.1109/SWS.2010.5607428
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Thamaraiselvi G., 2004, DATA MINING CONCEPTS, P1
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xuan JF, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P209
   Xue B, 2016, IEEE T EVOLUT COMPUT, V20, P606, DOI 10.1109/TEVC.2015.2504420
   Ying X, 2019, J PHYS CONF SER, V1168, DOI 10.1088/1742-6596/1168/2/022022
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 66
TC 5
Z9 5
U1 1
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2022
VL 184
AR 111121
DI 10.1016/j.jss.2021.111121
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9D3KY
UT WOS:000936000800007
DA 2024-07-18
ER

PT J
AU Corradini, F
   Fornari, F
   Polini, A
   Re, B
   Tiezzi, F
   Vandin, A
AF Corradini, Flavio
   Fornari, Fabrizio
   Polini, Andrea
   Re, Barbara
   Tiezzi, Francesco
   Vandin, Andrea
TI A formal approach for the analysis of BPMN collaboration models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE BPMN; Collaboration; Verification; Model checking; Statistical model
   checking
ID BUSINESS PROCESSES; VERIFICATION; SEMANTICS; FRAMEWORK; LANGUAGE
AB BPMN collaboration models have acquired increasing relevance in software development since they shorten the communication gap between domain experts and IT specialists and permit clarifying the characteristics of software systems needed to provide automatic support for the activities of complex organizations. Nonetheless, the lack of effective formal verification capabilities can hinder the full adoption of the BPMN standard by IT specialists, as it prevents precisely check the satisfaction of behavioral properties, with negative impacts on the quality of the software. To address these issues, this paper proposes BProVe, a novel verification approach for BPMN collaborations. This combines both standard model checking techniques, through the MAUDE's LTL model checker, and statistical model checking techniques, through the statistical analyzer MULTIVESTA. The latter makes BProVe effective also on those scenarios suffering from the state-space explosion problem, made even more acute by the presence of asynchronous message exchanges. To support the adoption of the BProVe approach, we propose a complete web-based tool-chain that allows for BPMN modeling, verification, and result exploration. The feasibility of BProVe has been validated both on synthetically-generated models and on models retrieved from two public repositories. The performed validation highlighted the importance and complementarity of the two supported verification strategies. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Corradini, Flavio; Fornari, Fabrizio; Polini, Andrea; Re, Barbara; Tiezzi, Francesco] Univ Camerino, Via Madonna delle Carceri 7, I-62032 Camerino, Italy.
   [Vandin, Andrea] St Anna Sch Adv Studies, Piazza Martiri Liberta 33, I-56127 Pisa, Italy.
   [Vandin, Andrea] DTU Tech Univ Denmark, Anker Engelunds Vej 1, DK-2800 Lyngby, Denmark.
C3 University of Camerino; Scuola Superiore Sant'Anna; Technical University
   of Denmark
RP Re, B (corresponding author), Univ Camerino, Via Madonna delle Carceri 7, I-62032 Camerino, Italy.
EM falvio.corradini@unicam.it; fabrizio.fornari@unicam.it;
   andrea.polini@unicam.it; barbara.re@unicam.it;
   francesco.tiezzi@unicam.it; andrea.vandin@santannapisa.it
RI Vandin, Andrea/L-4563-2018; Fornari, Fabrizio/AFS-5514-2022
OI Vandin, Andrea/0000-0002-2606-7241; Fornari,
   Fabrizio/0000-0002-3620-1723; Re, Barbara/0000-0001-5374-2364; TIEZZI,
   Francesco/0000-0003-4740-7521; Polini, Andrea/0000-0002-2840-7561
FU PRIN project "SEDUCE" [2017TWRCNB]; PRIN project "Fluidware"
   [2017KRC7KT]
FX This work has been partially supported by the PRIN projects "SEDUCE"n.
   2017TWRCNB and "Fluidware"n. 2017KRC7KT.
CR Agha G, 2006, ELECTRON NOTES THEOR, V153, P213, DOI 10.1016/j.entcs.2005.10.040
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Aldazabal A., 2008, P ECMDA WORKSHOP MOD, P361
   [Anonymous], 2013, SEMINAL CONTRIBUTION
   [Anonymous], 2007, LNCS
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Awad A, 2010, LECT NOTES BUS INF P, V43, P5
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Belzner Lenz, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P188, DOI 10.1007/978-3-642-54624-2_10
   Bentea L., 2013, RECENT TRENDS ALGEBR, V7841, P77
   Bergmann R., 2018, Between KnowledgeEngineering and Software Engineering, VVolume 626, P31, DOI 10.1007/978-3-319-64161-4_2
   Bruni R, 2015, SCI COMPUT PROGRAM, V99, P75, DOI 10.1016/j.scico.2013.11.043
   Campos ALN, 2013, LECT NOTES COMPUT SC, V7983, P338, DOI 10.1007/978-3-642-39259-7_29
   Clarke EM, 1999, MODEL CHECKING, P1
   Corradini F., 2019, BPM, V2420, P149
   Corradini F, 2021, J LOG ALGEBR METHODS, V119, DOI 10.1016/j.jlamp.2020.100630
   Corradini F, 2018, SCI COMPUT PROGRAM, V166, P35, DOI 10.1016/j.scico.2018.05.008
   Corradini F, 2017, IEEE INT CONF AUTOM, P217, DOI 10.1109/ASE.2017.8115635
   Corradini F, 2017, IEEE INT CONF AUTOM, P937, DOI 10.1109/ASE.2017.8115708
   Corradini F, 2010, INFORM SYST MANAGE, V27, P293, DOI 10.1080/10580530.2010.514164
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   dVasconcelos AML, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P193, DOI 10.1109/QUATIC.2012.61
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas Marlon, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P31, DOI 10.1007/978-3-642-31095-9_3
   Dumas M., 2016, Managing Software Process Evolution: Traditional, Agile and beyond-How to Handle Process Change, P165, DOI [10.1007/978-3-319, DOI 10.1007/978-3-319]
   Dumas M., 2018, FUNDAMENTALS BUSINES, DOI DOI 10.1007/978-3-642-33143-5.PDF
   Eckhardt J, 2012, LECT NOTES COMPUT SC, V7212, P78, DOI 10.1007/978-3-642-28872-2_6
   Eid-Sabbagh RH, 2013, LECT NOTES COMPUT SC, V8274, P688, DOI 10.1007/978-3-642-45005-1_61
   Eker Steven., 2004, ELECTRON NOTES THEOR, V71, P162, DOI [DOI 10.1016/S1571-0661(05)82534-4, 10.1016/S1571-0661(05)82534-4]
   El-Saber Nissreen A. S., 2014, P 2014 WORKSHOP BEHA, P1
   Fellman M., 2014, INFORM SYST
   Flavio C., 2010, 2010 Third International Conference on Communication Theory, Reliability, and Quality of Service (CTRQ), P144, DOI 10.1109/CTRQ.2010.32
   Groefsema H., 2013, 3 INT S BUS MOD SOFT, V1, P198
   Hesenius M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P210, DOI 10.1109/ICSA-C.2019.00044
   Houhou S, 2019, LECT NOTES COMPUT SC, V11675, P52, DOI 10.1007/978-3-030-26619-6_6
   JianHong Ye, 2010, Journal of Software, V5, P396, DOI 10.4304/jsw.5.4.396-404
   Kheldoun A, 2017, INFORM SCIENCES, V385, P39, DOI 10.1016/j.ins.2016.12.044
   Kheldoun A, 2015, LECT NOTES COMPUT SC, V9253, P55, DOI 10.1007/978-3-319-23063-4_4
   Kiepuszewski B, 2000, LECT NOTES COMPUT SC, V1789, P431
   Koniewski R, 2006, 20TH EUROPEAN CONFERENCE ON MODELLING AND SIMULATION ECMS 2006, P99, DOI 10.7148/2006-0099
   Lapeña R, 2018, LECT NOTES COMPUT SC, V10816, P359, DOI 10.1007/978-3-319-91563-0_22
   Law A. M., 2015, SIMULATION MODELING
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Legay Axel, 2019, Computing and software science: state of the art and perspectives, P478
   Li J, 2012, LECT NOTES COMPUT SC, V7481, P200, DOI 10.1007/978-3-642-32885-5_16
   Lindsay A, 2003, INFORM SOFTWARE TECH, V45, P1015, DOI 10.1016/S0950-5849(03)00129-0
   Morimoto S, 2008, LECT NOTES COMPUT SC, V5102, P514, DOI 10.1007/978-3-540-69387-1_58
   Mutarraf U, 2018, ADV MECH ENG, V10, DOI 10.1177/1687814018808170
   OMG, 2011, TECHNICAL REPORT
   Pastor O, 2017, LECT NOTES COMPUT SC, V10139, P405, DOI 10.1007/978-3-319-51963-0_31
   Pianini D, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P416, DOI 10.1109/HPCSim.2014.6903715
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Polyvyanyy A, 2014, COMPUT J, V57, P12, DOI 10.1093/comjnl/bxs126
   Polyvyanyy A, 2012, INFORM SYST, V37, P518, DOI 10.1016/j.is.2011.10.005
   Ramadan M., 2011, SOFTWARE ENG APPL
   Schoknecht A., 2017, ENTERPR MODEL INF SY, V12, P2
   Sebastio S., 2013, 7 INT C VALUETOOLS 1, P310, DOI DOI 10.4108/ICST.VALUETOOLS.2013.254377
   Skouradaki M, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P11, DOI 10.1109/SOSE.2015.24
   Souri A, 2018, COMPUT STAND INTER, V58, P1, DOI 10.1016/j.csi.2017.11.007
   Tan W, 2016, IEEE INTERNET COMPUT, V20, P64, DOI 10.1109/MIC.2016.74
   ter Beek M.H., 2015, P 19 INT C SOFTWARE, P11, DOI DOI 10.1145/2791060.2791087
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P114, DOI 10.1007/978-3-319-47166-2_8
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Wenjia Huai, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P422, DOI 10.1109/UIC-ATC.2010.114
   Wisniewski P, 2018, LECT NOTES ARTIF INT, V10842, P788, DOI 10.1007/978-3-319-91262-2_69
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P633, DOI 10.1016/j.scico.2009.09.010
   Wong PYH, 2008, LECT NOTES COMPUT SC, V5256, P355, DOI 10.1007/978-3-540-88194-0_22
   Xiu PB, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P752, DOI 10.1109/ICWS.2017.90
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 71
TC 12
Z9 13
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2021
VL 180
AR 111007
DI 10.1016/j.jss.2021.111007
EA JUL 2021
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0TS
UT WOS:000680064900019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vishnubhotla, SD
   Mendes, E
   Lundberg, L
AF Vishnubhotla, Sai Datta
   Mendes, Emilia
   Lundberg, Lars
TI Understanding the perceived relevance of capability measures: A survey
   of Agile Software Development practitioners
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Individual capability; Team capability; Capability measurement; Agile
   team formation; Survey; Agile Software Development
ID TESTING PRACTICES; TEAM; QUALITY; PERFORMANCE; EXPERIENCE; PERCEPTIONS;
   COMPETENCE; PREDICTORS; IMMIGRANTS; SUCCESS
AB Context: In the light of the swift and iterative nature of Agile Software Development (ASD) practices, establishing deeper insights into capability measurement within the context of team formation is crucial, as the capability of individuals and teams can affect team performance and productivity Although a former Systematic Literature Review (SLR) synthesized the state of the art in relation to capability measurement in ASD - with a focus on selecting individuals to agile teams, and capabilities related to team performance, productivity and success determining to what degree the SLR's results apply to practice can provide progressive insights to both research and practice.
   Objective: Our study investigates how agile practitioners perceive the relevance of individual and team level measures for characterizing the capability of an agile team and its members. Here, the emphasis was also on selecting individuals to agile teams, and capabilities associated with effective teams in terms of their performance, productivity and success. Furthermore, to scrutinize variations in practitioners' perceptions, our study further analyzes perceptions across stratified demographic groups.
   Method: We undertook a Web-based survey using a questionnaire built based on the capability measures identified from a previously conducted SLR.
   Results: Our survey responses (60) indicate that 127 individual and 28 team capability measures were considered as relevant by the majority of practitioners. We also identified seven individual and one team capability measure that have not been previously characterized by our SLR. The surveyed practitioners suggested that an agile team member's responsibility and questioning skills significantly represent the member's capability.
   Conclusion: Results from our survey align with our SLR's findings. Measures associated with social aspects were observed to be dominant compared to technical and innovative aspects. Our results can support agile practitioners in their team composition decisions. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Vishnubhotla, Sai Datta; Mendes, Emilia; Lundberg, Lars] BTH Blekinge Tekniska Hgsk, Dept Comp Sci, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Vishnubhotla, SD (corresponding author), BTH Blekinge Tekniska Hgsk, Dept Comp Sci, Karlskrona, Sweden.
EM sai-datta.vishnubhotla@bth.se; emilia.mendes@bth.se;
   lars.lundberg@bth.se
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
FU KK-stiftelsen-HoG AgileSec research project, Sweden
FX We would like to thank all those who participated in our survey. This
   research was partially funded by the KK-stiftelsen-HoG AgileSec research
   project, Sweden.
CR Abrahamsson P., 2003, Agile software development methods
   Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Alqudah M., 2016, International Journal on Advanced Science, Engineering and Information Technology, V6, P1, DOI [DOI 10.18517/IJASEIT.6.6.1374, 10.18517/IJASEIT.6.6.1374]
   Ambler SW, 2008, DR DOBBS J, V33, P52
   Ameller D, 2016, SOFTWARE QUAL J, V24, P271, DOI 10.1007/s11219-015-9268-4
   Armour PG, 2002, COMMUN ACM, V45, P11
   Auta A, 2014, MED PRIN PRACT, V23, P53, DOI 10.1159/000355473
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Barroso A.S., 2017, ICEIS, DOI [10.5220/0006292800630074, DOI 10.5220/0006292800630074]
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   Bender L.L., 2014, MEASUREMENT NONTECHN, P478
   Boehm B., 2003, CROSSTALKJ DEF SOFTW
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Celar S, 2014, 2014 22ND TELECOMMUNICATIONS FORUM TELFOR (TELFOR), P1134, DOI 10.1109/TELFOR.2014.7034607
   Chagas A, 2015, 2015 AGILE CONFERENCE, P87, DOI 10.1109/Agile.2015.11
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Colomo-Palacios R, 2012, INT J AP MAT COM-POL, V22, P801, DOI 10.2478/v10006-012-0059-9
   Creighton O., 2008, WHO LEADS OUR FUTURE, P23, DOI [10.1145/1373307.1373315, DOI 10.1145/1373307.1373315]
   da Silva FQB, 2013, INFORM SOFTWARE TECH, V55, P1316, DOI 10.1016/j.infsof.2012.11.006
   da Silva FQB, 2011, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2011.14
   Dusek G.A., 2015, INT J DOCTORAL STUDI, V10, P279, DOI DOI 10.28945/2296
   Dutra ACS, 2015, LECT NOTES BUS INF P, V241, P345, DOI 10.1007/978-3-319-29133-8_17
   Fadare JO, 2019, FRONT PHARMACOL, V10, DOI 10.3389/fphar.2019.00592
   Fatema I, 2017, ASIA PAC SOFWR ENG, P737, DOI 10.1109/APSEC.2017.95
   Fernández-Sanz L, 2011, LECT NOTES COMPUT SC, V6786, P257, DOI 10.1007/978-3-642-21934-4_22
   Flint, 2001, SOC RES UPDATE, P33, DOI DOI 10.1111/J.1442-2018.2010.00541.X
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Gehlenborg N., 2012, Points of view: heat maps
   Geras AM, 2004, CAN J ELECT COMPUT E, V29, P183, DOI 10.1109/CJECE.2004.1532522
   Germanakos P., 2014, P 1 INT WORKSH RAP C, P57, DOI DOI 10.1145/2593812.2593815
   Ginsburg AS, 2012, J TROP PEDIATRICS, V58, P389, DOI 10.1093/tropej/fmr103
   Gorla N, 2010, INFORM SOFTWARE TECH, V52, P602, DOI 10.1016/j.infsof.2009.11.012
   Gray A., 2006, AGILE 2006
   Groves R.M., 2011, SURV METHODOL
   Gutiérrez G, 2019, IEEE SOFTWARE, V36, P23, DOI 10.1109/MS.2018.2874324
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Kasunic M., 2005, Tech. Rep..
   Kettunen P., 2013, COMMUN COMPUT INF SC, V364, P131, DOI [10.1007/978-3-642-39179-8_12, DOI 10.1007/978-3-642-39179-8_12]
   Kettunen P, 2014, LECT NOTES BUS INF P, V166, P229
   King DB, 2014, CAN PSYCHOL, V55, P240, DOI 10.1037/a0038087
   Kitchenham B, 2001, ACM SIGSOFT Software Engineering Notes, V26
   Kohl K, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2018), P37, DOI 10.1145/3195570.3195573
   Kollmann T, 2009, J MANAGE INFORM SYST, V25, P51, DOI 10.2753/MIS0742-1222250402
   Kropp M., 2016, Product-Focused Software Process Improvement, P416, DOI [DOI 10.1007/978-3, DOI 10.1007/978-3-319-49094-628, 10.1007/978-3-319-49094-6%2028]
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kuusinen K, 2017, LECT NOTES BUS INF P, V283, P135, DOI 10.1007/978-3-319-57633-6_9
   Lacher L.L., 2015, BEHAV MARKER TOOL ME, P409, DOI DOI 10.18293/SEKE2015-227
   Lai CKY, 2010, J TELEMED TELECARE, V16, P441, DOI 10.1258/jtt.2010.090905
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li XC, 2018, ELEARN SOFTW EDUC, P153, DOI 10.12753/2066-026X-18-021
   Licorish S, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P66, DOI 10.1109/CHASE.2009.5071413
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Matthies C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P158, DOI 10.1109/ICSE-SEET.2019.00025
   Matturro G., 2015, Soft skills in scrum teams. a survey of the most valued to have by product owners and scrum masters, P42, DOI DOI 10.18293/SEKE2015-026
   Matturro G., 2018, EXPLORATORY STUDY
   Melo C., 2011, Proceedings of the 2011 Agile Conference, P57, DOI 10.1109/AGILE.2011.35
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Mendes E, 2018, EUROMICRO CONF PROC, P183, DOI 10.1109/SEAA.2018.00037
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Moustroufas E., 2015, ACM INT C P SERIES, P235, DOI DOI 10.1145/2801948.2801960
   Mundra A, 2013, PROCEEDINGS OF THE 2013 13TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2013), P119, DOI 10.1109/ICCSA.2013.25
   Murphy J., 2013, SOC MEDIA SOCIALITY, P1, DOI DOI 10.1002/9781118751534.CH1
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   Omar M., 2015, ARPN J. Eng. Appl. Sci., V10, P1499
   Park Y, 2011, J IMMIGR REFUG STUD, V9, P367, DOI 10.1080/15562948.2011.616801
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Sharma A, 2011, PROJ MANAG J, V42, P78, DOI 10.1002/pmj.20258
   Sharp M., 2010, PERSPECT HLTH INF MA, V7
   Shin HS, 2007, INT J NURS STUD, V44, P415, DOI 10.1016/j.ijnurstu.2006.04.007
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Strnad D, 2010, APPL SOFT COMPUT, V10, P1178, DOI 10.1016/j.asoc.2009.08.032
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   Sun WY, 2016, IEEE SOFTWARE, V33, P72, DOI 10.1109/MS.2015.106
   Takpuie Deon, 2016, Electronic Journal of Information Systems Evaluation, V19, P36
   Tomczak M.T., 2014, NEED REPORT EFFECT S
   Truong D, 2016, INT J INF TECHNOL PR, V7, P1, DOI 10.4018/IJITPM.2016040101
   VersionOne, 2018, 12 ANN STAT REP
   VersionOne, 2017, 11 ANN STAT AG REP
   Vishnubhotla S.D., P ACM IEEE 11 INT WO, P41
   Vishnubhotla SD, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106335
   Vishnubhotla SD, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P10, DOI 10.1145/3185089.3185096
   Wahla AE, 2018, J ISLAMIC ACCOUNT BU, V9, P2, DOI 10.1108/JIABR-10-2015-0051
   Wang YL, 2011, J MANAGE INFORM SYST, V27, P299, DOI 10.2753/MIS0742-1222270410
   Wood S, 2013, INFORM SOFTWARE TECH, V55, P660, DOI 10.1016/j.infsof.2012.10.002
   Xu P, 2015, 21 AMERICAS C INFORM
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zhang C, 2013, INFORM SOFTWARE TECH, V55, P822, DOI 10.1016/j.infsof.2012.11.003
   Zhang XJ, 2011, J ASSOC INF SYST, V12, P556
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zulzalil H., 2014, International Journal of Software Engineering and its Applications, V8, P129, DOI DOI 10.14257/IJSEIA.2014.8.1.12
NR 105
TC 8
Z9 9
U1 2
U2 20
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2021
VL 180
AR 111013
DI 10.1016/j.jss.2021.111013
EA JUN 2021
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0TS
UT WOS:000680064900015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paulweber, P
   Simhandl, G
   Zdun, U
AF Paulweber, Philipp
   Simhandl, Georg
   Zdun, Uwe
TI On the Understandability of Language Constructs to Structure the State
   and Behavior in Abstract State Machine Specifications: A Controlled
   Experiment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Abstract State Machines; Empirical software engineering;
   Understandability; Language constructs; Controlled experiment
ID STATISTICS
AB State Machine (ASM) theory is a well-known state-based formal method to analyze and specify software and hardware systems. As in other state-based formal methods, the proposed modeling languages for ASMs still lack easy-to-comprehend abstractions to structure state and behavior aspects of specifications. Modern object-oriented languages offer a variety of advanced language constructs, and most of them either offer interfaces, mixins, or traits in addition to classes and inheritance. Our goal is to investigate these language constructs in the context of state-based formal methods using ASMs as a representative of this kind of formal methods. We report on a controlled experiment with 105 participants to study the understandability of the three language constructs in the context of ASMs. Our hypotheses are influenced by the debate of object-oriented communities. We hypothesized that the understandability (measured by correctness and duration variables) shows significantly better understanding for interfaces and traits compared to mixins, as well as at least a similar or better understanding for traits compared to interfaces. The results indicate that understandability of interfaces and traits show a similar good understanding, whereas mixins shows a poorer understanding. We found a significant difference for the correctness of understanding comparing interfaces with mixins. (C) 2021 The Author(s). Published by Elsevier Inc.
C1 [Paulweber, Philipp; Simhandl, Georg; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
C3 University of Vienna
RP Paulweber, P (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
EM philipp.paulweber@univie.ac.at; georg.simhandl@univie.ac.at;
   uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
OI Paulweber, Philipp/0000-0001-9954-4881
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Anlauff M., 2000, Abstract State Machines Theory and Applications. International Workshop, ASM 2000. Proceedings (Lecture Notes in Computer Science Vol.1912), P69
   [Anonymous], 2008, Programming in Scala
   [Anonymous], WORKSH SPEC VER COMP
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   [Anonymous], 2013, BASICS SOFTWARE ENG
   [Anonymous], **DATA OBJECT**, DOI DOI 10.5281/ZENODO.4480316
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG, DOI DOI 10.1145/268946.268961
   Apel Sven, 2006, P 5 INT C GENERATIVE, P59
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Berger T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/2950290.2950315
   Beydeda S., 2005, Model-driven software development, V15
   Bjorner D., 1979, MATH STUDIES INFORM, P326
   BORGEN FH, 1978, J APPL PSYCHOL, V63, P689, DOI 10.1037/0021-9010.63.6.689
   Borger Egon, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P89, DOI 10.1007/978-3-030-03418-4_6
   Borger E., 2003, ABSTRACT STATE MACHI
   Borger Egon., 2018, Modeling Companion for Software Practitioners
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Canning P.S., 1989, ACM SigPlan Notices, V24, P457, DOI [10.1145/74877.74924, DOI 10.1145/74877.74924]
   Cheon Y, 2005, SOFTWARE PRACT EXPER, V35, P583, DOI 10.1002/spe.649
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Czepa C., 2018, IEEE T SOFTW ENG
   Czepa C, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P155, DOI 10.1109/ICSA.2017.10
   DUNN OJ, 1958, ANN MATH STAT, V29, P1095, DOI 10.1214/aoms/1177706443
   Farahbod R, 2007, FUND INFORM, V77, P71
   Ferrarotti F, 2020, J COMPUT LANG, V60, DOI 10.1016/j.cola.2020.100996
   Fowler M., 2010, Domain-specific languages
   Gargantini A, 2008, J UNIVERS COMPUT SCI, V14, P1949
   Garlan D, 2003, LECT NOTES COMPUT SC, V2804, P1
   Glässer U, 2002, INT FED INFO PROC, V91, P21
   Gurevich Y, 2001, J UNIVERS COMPUT SCI, V7, P917
   Gurevich Y., 2004, Formal Methods for Components and Objects. Second International Symposium, FMCO 2003. Revised Lectures (Lecture Notes in Computer Science Vol.3188), P240
   Gurevich Y., 2000, ACM T COMPUT LOG, V1, P77, DOI DOI 10.1145/343369.343384
   Gurevich Yuri, 1995, SPECIFICATION VALIDA, P9
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P180, DOI 10.1109/QUATIC.2014.62
   Huggins J. K., 1998, ACM Transactions on Design Automation of Electronic Systems, V3, P563, DOI 10.1145/296333.296345
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kleppe AnnekeG., 2009, SOFTWARE LANGUAGE EN
   Krall Andreas, 2013, SOFTWARE ENG WORKSHO, P75
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lenic M., 1998, LOBJET, V4, P273
   Lezuo R., 2014, THESIS
   Lezuo R, 2014, ACM SIGPLAN NOTICES, V49, P13, DOI [10.1145/10.1145/2597809.2597813, 10.1145/2666357.2597813]
   Liskov B., 1974, SIGPLAN Notices, V9, P50, DOI 10.1145/942572.807045
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matsakis N. D., 2014, P 2014 ACM SIGADA AN, V34, P103, DOI [DOI 10.1145/2663171.2663188, 10.1145/2663171.2663188]
   Mernik M., 2004, ECOOP WORKSH EV REUS
   MOON DA, 1986, SIGPLAN NOTICES, V21, P1, DOI 10.1145/960112.28698
   Murphy-Hill EmersonR., 2005, OOPSLA 05, P282, DOI 10.1145/1094855.1094963
   Oquendo F., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI DOI 10.1145/986710.986728
   Parsons J.J., 2012, PRACTICAL OPEN SOURC, Vsecond
   Paulweber Philipp, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P39, DOI 10.1007/978-3-319-91271-4_4
   Paulweber P., 2021, TOSEM
   Paulweber P, 2016, LECT NOTES COMPUT SC, V9675, P250, DOI 10.1007/978-3-319-33600-8_17
   Potter Ben., 1996, INTRO FORMAL SPECIFI, V2nd
   Potts A., 2018, JAVA PROGRAMMING LAN
   R Core Team, 2017, R LANGUAGE ENV STAT, DOI DOI 10.1016/J.DENDRO.2008.01.002
   Raschke A., 2020, P 7 INT C ABZ 2020 U, P8
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sasaki H., 1999, P C DES AUT TEST EUR
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Schmid J., 2001, INTRO ASMGOFER
   Shafranovich Y., 2005, RFC 4180
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Van Solingen R., 2002, ENCY SOFTWARE ENG
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
NR 76
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2021
VL 178
AR 110987
DI 10.1016/j.jss.2021.110987
EA APR 2021
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SF6FA
UT WOS:000652847800017
OA hybrid
DA 2024-07-18
ER

PT J
AU Etemadi, V
   Bushehrian, O
   Akbari, R
   Robles, G
AF Etemadi, Vahid
   Bushehrian, Omid
   Akbari, Reza
   Robles, Gregorio
TI A scheduling-driven approach to efficiently assign bug fixing tasks to
   developers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bug assignment; Scheduling-driven; Bug fixing; Software maintenance
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS; SOFTWARE; SEARCH;
   RECOMMENDATION; LOCALIZATION; OPTIMIZATION
AB The efficient assignment of bug fixing tasks to software developers is of major importance in software maintenance and evolution. When those tasks are not efficiently assigned to developers, the software project might confront extra costs and delays. In this paper, we propose a strategy that minimizes the time and the cost in bug fixing by finding the best feasible developer arrangement to handle bug fixing requests. We enhance therefore a state-of-the-art solution that uses an evolutionary bi-objective algorithm by involving a scheduling-driven approach that explores more parts of the search space. Scheduling is the process of evaluating all possible orders that developers can follow to fix the bugs they have been assigned. Through an empirical study we analyze the performance of the scheduling-driven approach and compare it to state of the art solutions. A non-parametric statistical test with four quality indicator metrics is used to assure its superiority. The experiments using two case-studies (JDT and Platform) showed that the scheduling-driven approach is superior to the state of the art approach in 71% and 74% of cases, respectively. Thus, our approach offers superior performance by assigning more conveniently bug fixing tasks to developers, while still avoiding to overload developers. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Etemadi, Vahid; Bushehrian, Omid; Akbari, Reza] Shiraz Univ Technol, Dept Comp Engn & Informat Technol, Shiraz, Iran.
   [Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
C3 Shiraz University of Technology; Universidad Rey Juan Carlos
RP Robles, G (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM grex@gsyc.urjc.es
RI Robles, Gregorio/I-2507-2012; Akbari, Reza/J-8937-2015
OI Robles, Gregorio/0000-0002-1442-6761; Akbari, Reza/0000-0001-6491-7908
FU Government of Spain through project "BugBirth" [RTI2018101963B100]
FX When writing this article, the first author was visiting the lab of the
   last author for eight months for a doctoral research visit. GR
   acknowledges the support of the Government of Spain through project
   "BugBirth" (RTI2018101963B100) .
CR Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Blincoe K, 2015, IEEE T SOFTWARE ENG, V41, P969, DOI 10.1109/TSE.2015.2431680
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Cavalcanti YC, 2016, J SYST SOFTWARE, V115, P82, DOI 10.1016/j.jss.2016.01.038
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Cormen ThomasH., 2009, Introduction to Algorithms, V3rd, P1292
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dechter R., 2003, Constraint Processing
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Du K.-L., 2016, Search and optimization by metaheuristics, P153, DOI [10.1007/978-3-319-41192-7, DOI 10.1007/978-3-319-41192-7]
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Hadka D, 2012, EVOL COMPUT, V20, P423, DOI 10.1162/EVCO_a_00053
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Ishibuchi H, 1996, IEEE C EVOL COMPUTAT, P119, DOI 10.1109/ICEC.1996.542345
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Karim MR, 2016, J SOFTW-EVOL PROC, V28, P1025, DOI 10.1002/smr.1777
   Kearney K.T., 2011, SERVICE LEVEL AGREEM, P43
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Maalej W, 2017, J SYST SOFTWARE, V128, P267, DOI 10.1016/j.jss.2016.11.033
   Pressman R.S., 2010, SOFTWARE ENG PRACTIT, Vseventh, P880
   Ren J, 2011, LECT NOTES COMPUT SC, V6956, P127, DOI 10.1007/978-3-642-23716-4_14
   Ronald S., 1995, THESIS
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Stylianou C., 2014, Software project management in a changing world, P73, DOI [https://doi.org/10.1007/978-3-642-55035-5_4, DOI 10.1007/978-3-642-55035-5_4]
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Van Veldhuizen DA, 1998, TECH REP
   Wu LL, 2015, INT C PAR DISTRIB SY, P440, DOI 10.1109/ICPADS.2015.62
   Wu LL, 2012, J COMPUT SYST SCI, V78, P1280, DOI 10.1016/j.jcss.2011.12.014
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Yeo CheeShin, 2005, Proceedings of the 7th IEEE International Conference on Cluster Computing, Cluster '05, P1, DOI DOI 10.1109/CLUSTR.2005.347075
   Zhang T, 2021, IEEE T SOFTWARE ENG, V47, P2590, DOI 10.1109/TSE.2019.2956941
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
NR 51
TC 7
Z9 7
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2021
VL 178
AR 110967
DI 10.1016/j.jss.2021.110967
EA APR 2021
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SF6FA
UT WOS:000652847800004
DA 2024-07-18
ER

PT J
AU He, TZ
   Toosi, AN
   Buyya, R
AF He, TianZhang
   Toosi, Adel N.
   Buyya, Rajkumar
TI SLA-aware multiple migration planning and scheduling in SDN-NFV-enabled
   clouds
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Live VM migration; Software-defined networking; Deadline violation;
   Multiple migration performance; Energy consumption; Quality of Service
AB In Software-Defined Networking (SDN)-enabled cloud data centers, live migration is a key approach used for the reallocation of Virtual Machines (VMs) and Virtual Network Functions (VNFs). Using live migration, cloud providers can address their dynamic resource management and fault tolerance objectives without interrupting the service of users. However, performing multiple live migrations in arbitrary order can lead to service degradation. Therefore, efficient migration planning is essential to reduce the impact of live migration overheads. In addition, to prevent Quality of Service (QoS) degradations and Service Level Agreement (SLA) violations, it is necessary to set priorities for different live migration requests with various urgency. In this paper, we propose SLAMIG, a set of algorithms that composes deadline-aware multiple migration grouping algorithm and on-line migration scheduling to determine the sequence of VM/VNF migrations. The experimental results show that our approach with reasonable algorithm runtime can efficiently reduce the number of deadline misses and has a good migration performance compared with the one-by-one scheduling and two state-of-the-art algorithms in terms of total migration time, average execution time, downtime, and transferred data. We also evaluate and analyze the impact of multiple migrations on QoS and energy consumption. (C) 2021 Elsevier Inc. All rights reserved.
C1 [He, TianZhang; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Clouds Comp & Distributed Syst CLOUDS Lab, Parkville, Vic 3010, Australia.
   [Toosi, Adel N.] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
C3 University of Melbourne; Monash University
RP He, TZ (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Clouds Comp & Distributed Syst CLOUDS Lab, Parkville, Vic 3010, Australia.
EM tianzhangh@student.unimelb.edu.au; adel.n.toosi@monash.edu;
   rbuyya@unimelb.edu.au
RI Toosi, Adel N./H-7411-2019; He, TianZhang/AEF-2833-2022; Buyya,
   Rajkumar/C-3424-2009
OI Toosi, Adel N./0000-0001-5655-5337; He, TianZhang/0000-0002-5472-7681; 
FU Australian Research Council (ARC) [DP160102414]; China Scholarship
   Council - University of Melbourne PhD Scholarship
FX This work is partially supported by an Australian Research Council (ARC)
   Discovery Project (ID: DP160102414) and a China Scholarship Council
   -University of Melbourne PhD Scholarship. We thank Editor-in-Chief, Area
   Editor, and reviewers for their valuable comments and suggestions that
   helped in improving the paper significantly.
CR Akoush Sherif, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P37, DOI 10.1109/MASCOTS.2010.13
   Al-Fares M, 2008, ACM SIGCOMM COMP COM, V38, P63, DOI 10.1145/1402946.1402967
   [Anonymous], 2014, PROC IFIP NETW C
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Checconi F, 2010, LECT NOTES COMPUT SC, V6043, P454
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Cziva R, 2018, IEEE INFOCOM SER, P693, DOI 10.1109/INFOCOM.2018.8486021
   Deshpande U, 2017, FUTURE GENER COMP SY, V72, P118, DOI 10.1016/j.future.2016.05.003
   Ersoz D., 2007, PROC IEEE INT C DIST, P59
   Ghorbani S., 2012, P 1 WORKSHOP HOT TOP, P67
   Guo T, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602571
   He TZ, 2019, J PARALLEL DISTR COM, V131, P55, DOI 10.1016/j.jpdc.2019.04.014
   Joel Halpern, 2015, RFC 7665, DOI [10.17487/rfc7665, DOI 10.17487/RFC7665]
   Knight S, 2011, IEEE J SEL AREA COMM, V29, P1765, DOI 10.1109/JSAC.2011.111002
   Mann V, 2012, LECT NOTES COMPUT SC, V7289, P190, DOI 10.1007/978-3-642-30045-5_15
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Shribman A, 2013, LECT NOTES COMPUT SC, V7640, P539, DOI 10.1007/978-3-642-36949-0_63
   Son J, 2019, SOFTWARE PRACT EXPER, V49, P1748, DOI 10.1002/spe.2755
   Son JM, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190617
   Son J, 2017, IEEE T SUST COMPUT, V2, P76, DOI 10.1109/TSUSC.2017.2702164
   Sun G, 2016, FUTURE GENER COMP SY, V55, P74, DOI 10.1016/j.future.2015.09.005
   Svärd P, 2011, ACM SIGPLAN NOTICES, V46, P111, DOI 10.1145/2007477.1952698
   Tsakalozos K, 2017, IEEE T PARALL DISTR, V28, P2285, DOI 10.1109/TPDS.2017.2658572
   van Baaren E.-J., 2009, THESIS VU U AMSTERDA
   VanGilder J. W, 2009, WORKSH EN EFF DES, V11
   Wang HD, 2019, IEEE T CLOUD COMPUT, V7, P1168, DOI 10.1109/TCC.2017.2710193
   Wang XD, 2012, IEEE INFOCOM SER, P1125, DOI 10.1109/INFCOM.2012.6195471
   Xu F, 2014, IEEE T COMPUT, V63, P3012, DOI 10.1109/TC.2013.185
NR 28
TC 19
Z9 19
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2021
VL 176
AR 110943
DI 10.1016/j.jss.2021.110943
EA MAR 2021
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH7CH
UT WOS:000636371400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Castellanos, C
   Varela, CA
   Correal, D
AF Castellanos, Camilo
   Varela, Carlos A.
   Correal, Dario
TI ACCORDANT: A domain specific-model and DevOps approach for big data
   analytics architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software architecture; Big data analytics deployment; DevOps;
   Domain-specific model; Quality scenarios; Performance monitoring
AB Big data analytics (BDA) applications use machine learning algorithms to extract valuable insights from large, fast, and heterogeneous data sources. New software engineering challenges for BDA applications include ensuring performance levels of data-driven algorithms even in the presence of large data volume, velocity, and variety (3Vs). BDA software complexity frequently leads to delayed deployments, longer development cycles, and challenging performance assessment. This paper proposes a Domain Specific Model (DSM), and DevOps practices to design, deploy, and monitor performance metrics in BDA applications. Our proposal includes a design process, and a framework to define architectural inputs, software components, and deployment strategies through integrated high-level abstractions to enable QS monitoring. We evaluate our approach with four use cases from different domains to demonstrate a high level of generalization. Our results show a shorter deployment and monitoring times, and a higher gain factor per iteration compared to similar approaches. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Castellanos, Camilo; Correal, Dario] Univ Los Andes, Syst Engn & Comp Dept, Bogota, Colombia.
   [Varela, Carlos A.] Rensselaer Polytech Inst, Dept Comp Sci, Troy, NY 12180 USA.
C3 Universidad de los Andes (Colombia); Rensselaer Polytechnic Institute
RP Castellanos, C (corresponding author), Univ Los Andes, Syst Engn & Comp Dept, Bogota, Colombia.
EM cc.castellanos87@uniandes.edu.co; cvarela@cs.rpi.edu;
   dcorreal@uniandes.edu.co
OI Correal, Dario/0000-0001-9502-4504
FU Fulbright Colombia; Center of Excellence and Appropriation in Big Data
   and Data Analytics (CAOBA); Ministry of Information Technologies and
   Telecommunications of the Republic of Colombia (MinTIC) through
   Colombian Administrative Department of Science, Technology, and
   Innovation (COLCIENCIAS) [FP44842-anexo46-2015]; Amazon Web Services
   Educate
FX This research is supported by Fulbright Colombia and the Center of
   Excellence and Appropriation in Big Data and Data Analytics (CAOBA),
   supported by the Ministry of Information Technologies and
   Telecommunications of the Republic of Colombia (MinTIC) through the
   Colombian Administrative Department of Science, Technology, and
   Innovation (COLCIENCIAS) within contract No. FP44842-anexo46-2015. The
   authors would like to thank an Amazon Web Services Educate for the
   student grant.
CR Alrifai Mohammad, 2014, QUALITY AWARE PROCES
   Anandan S., 2015, P 9 ACM INT C DISTR, P217, DOI DOI 10.1145/2675743.2771879
   [Anonymous], 2016, 2015 DATA SCI SURVEY
   [Anonymous], 2011, ICML
   Artac M, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P156, DOI 10.1109/ICSA.2018.00025
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Castellanos C, 2019, LECT NOTES COMPUT SC, V11681, P195, DOI 10.1007/978-3-030-29983-5_13
   Castellanos C, 2018, LECT NOTES COMPUT SC, V11048, P364, DOI 10.1007/978-3-030-00761-4_24
   Cervantes H., 2016, Designing software architectures: a practical approach
   Chen H.-M., 2017, MIS Q EXEC, V1615, P299
   CloverDX, CLOVERDX DAT INT
   Erl T., 2016, Big data fundamentals: Concepts, drivers & techniques
   Gorton I, 2015, IEEE SOFTWARE, V32, P78, DOI 10.1109/MS.2014.51
   Gribaudo M, 2018, FUTURE GENER COMP SY, V86, P1032, DOI 10.1016/j.future.2017.07.033
   Guerriero M, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P37, DOI [10.1145/2896825.2896835, 10.1109/BIGDSE.2016.015]
   Hong-Mei Chen, 2016, IEEE Transactions on Big Data, V2, P234, DOI 10.1109/TBDATA.2016.2564982
   Huang YC, 2015, 2015 12TH WEB INFORMATION SYSTEM AND APPLICATION CONFERENCE (WISA), P79, DOI 10.1109/WISA.2015.65
   Lechevalier D, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P1428, DOI 10.1109/BigData.2015.7363903
   Marz N., 2015, Big Data: Principles and Best Practices of Scalable Realtime Data Systems
   Open Data Group, FASTSCORE
   Perez-Palacin D, 2019, SOFTW SYST MODEL, V18, P3577, DOI 10.1007/s10270-019-00730-3
   Ranjan R, 2014, IEEE CLOUD COMPUT, V1, P78, DOI 10.1109/MCC.2014.22
   REXER K, 2013, 2013 DATA MINER SURV
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Ullah F, 2019, J SYST SOFTWARE, V151, P81, DOI 10.1016/j.jss.2019.01.051
   Wegener D, 2010, P 8 BPM INT WORKSH E, P264
   Wojcik R., 2006, ATTRIBUTE DRIVEN DES
NR 28
TC 5
Z9 6
U1 1
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2021
VL 172
AR 110869
DI 10.1016/j.jss.2020.110869
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PC2RX
UT WOS:000596855400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lenarduzzi, V
   Nikkola, V
   Saarimäki, N
   Taibi, D
AF Lenarduzzi, Valentina
   Nikkola, Vili
   Saarimaki, Nyyti
   Taibi, Davide
TI Does code quality affect pull request acceptance? An empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Pull requests; PMD rules; Machine learning
ID TECHNICAL DEBT; SMELLS; IMPACT; DIFFUSENESS; ACCURACY
AB Background Pull requests are a common practice for making contributions and reviewing them in both open-source and industrial contexts.
   Objective Our goal is to understand whether quality flaws such as code smells, anti-patterns, security vulnerabilities, and coding style violations in a pull request's code affect the chance of its acceptance when reviewed by a maintainer of the project.
   Method We conducted a case study among 28 Java open-source projects, analyzing the presence of 4.7 M code quality flaws in 36 K pull requests. We analyzed further correlations by applying logistic regression and six machine learning techniques. Moreover, we manually validated 10% of the pull requests to get further qualitative insights on the importance of quality issues in cases of acceptance and rejection.
   Results Unexpectedly, quality flaws measured by PMD turned out not to affect the acceptance of a pull request at all. As suggested by other works, other factors such as the reputation of the maintainer and the importance of the delivered feature might be more important than other qualities in terms of pull request acceptance.
   Conclusions . Researchers have already investigated the influence of the developers' reputation and the pull request acceptance. This is the first work investigating code style violations and specifically PMD rules. We recommend that researchers further investigate this topic to understand if different measures or different tools could provide some useful measures. (c) 2020 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).
C1 [Lenarduzzi, Valentina] LUT Univ, Lahti, Finland.
   [Nikkola, Vili; Saarimaki, Nyyti; Taibi, Davide] Tampere Univ, Tampere, Finland.
C3 Tampere University
RP Taibi, D (corresponding author), Tampere Univ, Tampere, Finland.
EM valentina.lenarduzzi@lut.fi; vili.nikkola@tuni.fi;
   nyyti.saarimaki@tuni.fi; davide.taibi@tuni.fi
RI Taibi, Davide/E-4935-2015
OI Taibi, Davide/0000-0002-3210-3990; Lenarduzzi,
   Valentina/0000-0003-0511-5133; Saarimaki, Nyyti/0000-0001-5538-8557
CR Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Aman Hirohisa, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P51, DOI 10.1109/APSEC.2014.93
   Aman H., 2012, 2012 Fourth International Workshop on Empirical Software Engineering in Practice (IWESEP 2012), P3, DOI 10.1109/IWESEP.2012.12
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Avgeriou P., 2020, IEEE SOFTWARE
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Basili Victor, 1994, ENCY SOFTW ENG, P528
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COX DR, 1958, J R STAT SOC B, V20, P215
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Fontana F.A., 2011, Proceedings of the 4th Workshop on Refactoring Tools, P37, DOI DOI 10.1145/1984732.1984741
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V., 2020, 190412538 ARXIV
   Lenarduzzi V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110750
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rahman M.M., 2014, P 11 WORKING C MININ, P364, DOI DOI 10.1145/2597073.2597121
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saarimaki Nyyti, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3356773.3356799
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Trautsch A., 2019, ARXIV191202179
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Veen E.v.d., 2015, 12 WORK C MIN SOFTW, P357
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zampetti F, 2017, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2017.30
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 77
TC 19
Z9 19
U1 1
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2021
VL 171
AR 110806
DI 10.1016/j.jss.2020.110806
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV9DC
UT WOS:000592500400004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lefticaru, R
   Hierons, RM
   Núñez, M
AF Lefticaru, Raluca
   Hierons, Robert M.
   Nunez, Manuel
TI Implementation relations and testing for cyclic systems with refusals
   and discrete time
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model-based testing; Implementation relations; Cyclic systems
ID FINITE-STATE MACHINES; FRAMEWORK
AB We present a formalism to represent cyclic models and study different semantic frameworks that support testing. These models combine sequences of observable actions and the passing of (discrete) time and can be used to specify a number of classes of reactive systems, an example being robotic systems. We use implementation relations in order to formally define a notion of correctness of a system under test (SUT) with respect to a specification. As usual, the aim is to devise an extension of the classical ioco implementation relation but available timed variants of ioco are not suitable for cyclic models. This paper thus defines new implementation relations that encapsulate the discrete nature of time and take into account not only the actions that models can perform but also the ones that they can refuse. In addition to defining these relations, we study a number of their properties and provide alternative characterisations, showing that the relations are appropriate conservative extensions of trace containment. Finally, we give test derivation algorithms and prove that they are sound and also are complete in the limit. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Lefticaru, Raluca] Univ Bradford, Dept Comp Sci, Bradford BD7 1DP, W Yorkshire, England.
   [Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield SD1 4DP, S Yorkshire, England.
   [Nunez, Manuel] Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
C3 University of Bradford; University of Sheffield; Complutense University
   of Madrid
RP Núñez, M (corresponding author), Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
EM r.lefticaru@bradford.ac.uk; r.hierons@sheffield.ac.uk; mn@sip.ucm.es
RI Lefticaru, Raluca/C-4071-2011; Núñez, Manuel/B-6889-2008
OI Lefticaru, Raluca/0000-0001-5289-0162; Núñez,
   Manuel/0000-0001-9808-6401; Hierons, Robert/0000-0002-4771-1446
FU EPSRC, United Kingdom [EP/R025134/2]; Spanish MINECO-FEDER grant FAME
   [RTI2018-093608-B-C31]; Region of Madrid grant FORTE-CM - EIE Funds of
   the European Union [S2018/TCS-4314]; EPSRC [EP/R025134/2] Funding
   Source: UKRI
FX This work has been supported by EPSRC, United Kingdom grant EP/R025134/2
   RoboTest: Systematic Model-Based Testing and Simulation of Mobile
   Autonomous Robots, the Spanish MINECO-FEDER grant FAME
   (RTI2018-093608-B-C31) and the Region of Madrid grant FORTE-CM
   (S2018/TCS-4314) co-funded by EIE Funds of the European Union.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Ammann P., 2017, INTRO SOFTWARE TESTI
   [Anonymous], 1996, JTCISC21WG7 ISOIEC
   [Anonymous], 2018, WORLD ROB 2018
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Binder RV, 2015, COMMUN ACM, V58, P52, DOI 10.1145/2697399
   Bonfanti S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1943
   Bozejko W., 2019, Modelling and Performance Analysis of Cyclic Systems
   Briones LB, 2005, LECT NOTES COMPUT SC, V3395, P64
   Cavalcanti A., 2019, LNCS, V11823, P21
   Cavalcanti A., 2019, TECHNICAL REPORT
   Cavalcanti A, 2019, SCI COMPUT PROGRAM, V174, P1, DOI 10.1016/j.scico.2019.01.004
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   Fitzgerald J., 2013, IND DEPLOYMENT SYSTE, P123
   Glabbeek R.v., 2001, HDB PROCESS ALGEBRA
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heerink L., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P23
   Hierons R.M., 2008, LNCS, V4949
   Hierons RM, 2019, SCI COMPUT PROGRAM, V177, P1, DOI 10.1016/j.scico.2019.03.004
   Hierons RM, 2017, J SYST SOFTWARE, V132, P319, DOI 10.1016/j.jss.2017.03.011
   Hierons RM, 2017, J LOG ALGEBR METHODS, V86, P408, DOI 10.1016/j.jlamp.2016.02.004
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hierons RM, 2017, IEEE T SOFTWARE ENG, V43, P1033, DOI 10.1109/TSE.2017.2652457
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lefticaru R., 2019, LNCS, V11724, P393
   Marinescu R, 2015, ADV COMPUT, V98, P89, DOI 10.1016/bs.adcom.2015.03.003
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Merayo MG, 2008, COMPUT NETW, V52, P432, DOI 10.1016/j.comnet.2007.10.002
   Merayo MG, 2018, INFORM SOFTWARE TECH, V104, P162, DOI 10.1016/j.infsof.2018.07.013
   Merayo MG, 2018, DISTRIB COMPUT, V31, P327, DOI 10.1007/s00446-017-0308-0
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A., 1996, Testing of Communicating Systems. IFIP TC6 9th International Workshop on Testing of Communicating Systems, P125
   PHILLIPS I, 1987, THEOR COMPUT SCI, V50, P241, DOI 10.1016/0304-3975(87)90117-4
   Rohmer E, 2013, IEEE INT C INT ROBOT, P1321, DOI 10.1109/IROS.2013.6696520
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   van den Bos P, 2019, SOFTWARE QUAL J, V27, P563, DOI 10.1007/s11219-018-9422-x
   van Glabbeek R. J., 1993, CONCUR '93. 4th International Conference on Concurrency Theory Proceedings, P66
NR 44
TC 6
Z9 6
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2020
VL 170
AR 110738
DI 10.1016/j.jss.2020.110738
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OC7RN
UT WOS:000579355100018
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lenarduzzi, V
   Saarimäki, N
   Taibi, D
AF Lenarduzzi, Valentina
   Saarimaki, Nyyti
   Taibi, Davide
TI Some SonarQube issues have a significant but small effect on faults and
   changes. A large-scale empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Change-proneness; Fault-proneness; SonarQube; Empirical study
ID CODE SMELLS; TECHNICAL DEBT; IMPACT; BAD; MAINTENANCE; PROBABILITY;
   PATTERNS
AB Context: Companies frequently invest effort to remove technical issues believed to impact software qualities, such as removing anti-patterns or coding styles violations.
   Objective: We aim to analyze the diffuseness of SonarQube issues in software systems and to assess their impact on code changes and fault-proneness, considering also their different types and severities.
   Methods: We conducted a case study among 33 Java projects from the Apache Software Foundation repository.
   Results: We analyzed 726 commits containing 27K faults and 12M changes in Java files. The projects violated 173 SonarQube rules generating more than 95K SonarQube issues in more than 200K classes. Classes not affected by SonarQube issues are less change-prone than affected ones, but the difference between the groups is small. Non-affected classes are slightly more change-prone than classes affected by SonarQube issues of type Code Smell or Security Vulnerability. As for fault-proneness, there is no difference between non-affected and affected classes. Moreover, we found incongruities in the type and severity assigned by SonarQube.
   Conclusion: Our result can be useful for practitioners to understand which SonarQube issues should be refactored and for researchers to bridge the missing gaps. Moreover, results can also support companies and tool vendors in identifying SonarQube issues as accurately as possible. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Lenarduzzi, Valentina] LUT Univ, Lahti, Finland.
   [Saarimaki, Nyyti; Taibi, Davide] Tampere Univ, Tampere, Finland.
C3 Tampere University
RP Lenarduzzi, V (corresponding author), LUT Univ, Lahti, Finland.
EM valentina.lenarduzzi@lut.fi; nyyti.saarimaki@tuni.fi;
   davide.taibi@tuni.fi
RI Taibi, Davide/E-4935-2015
OI Taibi, Davide/0000-0002-3210-3990; Lenarduzzi,
   Valentina/0000-0003-0511-5133; Saarimaki, Nyyti/0000-0001-5538-8557
CR Amanatidis T, 2017, INFORM SOFTWARE TECH, V90, P70, DOI 10.1016/j.infsof.2017.05.004
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   [Anonymous], 2006, IASTED C SOFTW ENG
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arvanitou EM, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P98, DOI 10.1109/APSECW.2017.21
   Arvanitou EM., 2017, P 21 INT C EV ASS SO, P186, DOI [10.1145/3084226.3084239, DOI 10.1145/3084226.3084239]
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carrillo C, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241446
   Carver J.C., 2010, RESER 10
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Conover W.J., 1999, WILEY SERIES PROBABI
   Cunningham W., 1993, OOPS Messenger, V4, P29
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I., 1999, J SYST SOFTWARE
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Janes A, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P97, DOI 10.1145/3053600.3053618
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V., 2020, ARXIV190412538
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Lenarduzzi Valentina, 2017, 11 EUR C INF SYST MA
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Patton M.Q., 2014, Qualitative Research and Evaluation Methods, V4th
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Sharafat AR, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P27
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tashima K, 2018, EUROMICRO CONF PROC, P154, DOI 10.1109/SEAA.2018.00033
   Tollin I., 2017, 21 INT C EV ASS SOFT, P61
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vassallo C., 2019, EMPIR SOFTW ENG
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 69
TC 18
Z9 18
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2020
VL 170
AR 110750
DI 10.1016/j.jss.2020.110750
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OC7RN
UT WOS:000579355100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Smite, D
   Moe, NB
AF Smite, Darja
   Moe, Nils Brede
TI Vendor Switching: Factors that matter when engineers onboard their own
   replacement
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Global software engineering; Offshore outsourcing; Vendor switching;
   Opportunism; Knowledge transfer; Empirical
ID COMMITMENT
AB Offshore outsourcing is a common way of working, but sourcing collaborations do not always last, and sometimes vendors are switched. Vendor switching results in a complex form of relationship, in which the competing outgoing and incoming vendors are expected to cooperate. The success of such transitions highly depends on successful knowledge transfer and thus the willingness of the outgoing vendor to train their own replacement. While switching decisions have gained attention, the role of the vendor relationship is still relatively unexplored. In this paper, we report findings from a multicase study of vendor switching in three projects based on 22 interviews with 27 interviewees. We developed a theoretical model explaining the complex interplay between the factors affecting such transitions. Our results confirm that opportunistic behavior of outgoing vendors is a probable threat. We found that the vendor relationship moderates the link between initial negative emotions and the opportunistic behavior of the outgoing vendor. Other important factors affecting the success of the transition include the relationship with the client, outgoing vendor's management engagement, and the cultural and organizational fit between vendors. We conclude with recommendations for companies switching vendors. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Smite, Darja] Blekinge Inst Technol, Software Engn, Karlskrona, Sweden.
   [Moe, Nils Brede] SINTEF Digital, Trondheim, Norway.
C3 Blekinge Institute Technology; SINTEF
RP Smite, D (corresponding author), Blekinge Inst Technol, Software Engn, Karlskrona, Sweden.
EM Darja.Smite@bth.se; Nils.B.Moe@sintef.no
RI Moe, Nils Brede/AAD-8183-2021
FU GoLD project; Swedish Knowledge Foundation under the KKHog grant
   [2016/0191]; A-team project; Research council of Norway [267704,
   285542]; SMED project
FX We would like to thank the studied client company for their engagement
   in our research, and especially for opening the doors to their external
   vendors, which is uncommon in outsourcing research studies. This
   research is partially funded by the GoLD project and the Swedish
   Knowledge Foundation under the KKHog grant 2016/0191, by the A-team
   project and the Research council of Norway through grant 267704 and by
   the SMED project and the Research council of Norway through grant
   285542.
CR [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2010, 43 HAWAII INT C SYST
   [Anonymous], 2012, INT J ADV INTELL SYS
   [Anonymous], 2018, J SOFTW-EVOL PROC
   [Anonymous], 2014, QUALITATIVE INQUIRY
   [Anonymous], P 27 INT C INF SYST
   [Anonymous], 2016, REAL WORLD RES
   Barney H.T., 2009, 3 GLOB SOURC WORKSH, P22
   Barney HT, 2009, INFORMATION SYSTEMS DEVELOPMENT: TOWARDS A SERVICE PROVISION SOCIETY, P637, DOI 10.1007/b137171_66
   Britto R, 2019, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2019.00000
   BUCHANAN B, 1974, ADMIN SCI QUART, V19, P533
   Carmel E., 2005, OFFSHORING INFORM SO, P282
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Casey Valentine, 2008, Software Process: Improvement and Practice, V13, P511, DOI 10.1002/spip.404
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chua C.E.H., 2008, 3 INT RES WORK INF T, P19
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Kern T, 2002, J INFORM TECHNOL, V17, P33, DOI 10.1080/02683960210137174
   Lamersdorf A, 2012, J SOFTW-EVOL PROC, V24, P661, DOI 10.1002/smr.576
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Lynch Krishna, 2010, J Healthc Risk Manag, V29, P22, DOI 10.1002/jhrm.20020
   Manning S, 2011, MANAGE INT REV, V51, P381, DOI 10.1007/s11575-011-0081-4
   Moe NB, 2014, EMPIR SOFTW ENG, V19, P1225, DOI 10.1007/s10664-013-9272-x
   Piri A, 2012, J SOFTW-EVOL PROC, V24, P185, DOI 10.1002/smr.476
   Raza B, 2015, 2015 IEEE 10TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2015), P1, DOI 10.1109/ICGSEW.2015.11
   Smite D., 2011, J SOFTW-EVOL PROC, DOI DOI 10.1002/SMR
   Smite D, 2019, INT CONF GLOBAL SOFT, P40, DOI 10.1109/ICGSE.2019.00022
   Smite D, 2016, IEEE SOFTWARE, V33, P60, DOI 10.1109/MS.2015.82
   Smite D, 2011, IEEE SOFTWARE, V28, P60, DOI 10.1109/MS.2010.112
   Soderberg AM, 2013, J INT MANAG, V19, P347, DOI 10.1016/j.intman.2013.04.004
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Van de Velde S., 2012, Proceedings of the 2012 9th Workshop on Positioning, Navigation and Communication (WPNC), P1, DOI 10.1109/WPNC.2012.6268729
   Vitasek Kate, 2012, Strategic Outsourcing, V5, P4, DOI 10.1108/17538291211221924
   Whitten D, 2006, DECISION SCI, V37, P605, DOI 10.1111/j.1540-5414.2006.00140.x
   Whitten D, 2010, INFORM MANAGE-AMSTER, V47, P167, DOI 10.1016/j.im.2010.01.006
   Willcocks Leslie, 2011, Strategic Outsourcing, V4, P5, DOI 10.1108/17538291111108408
   Yin R.K., 2017, Applications of case study research, V3rd
NR 37
TC 1
Z9 1
U1 1
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2020
VL 169
AR 110719
DI 10.1016/j.jss.2020.110719
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NL6FO
UT WOS:000567509300002
DA 2024-07-18
ER

PT J
AU Nagaraju, V
   Jayasinghe, C
   Fiondella, L
AF Nagaraju, Vidhyashree
   Jayasinghe, Chathuri
   Fiondella, Lance
TI Optimal test activity allocation for covariate software reliability and
   security models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software reliability growth model; Software security; Non-homogeneous
   Poisson process; Proportional hazards model; Covariates; Test activity
   allocation
ID GROWTH-MODELS; REGRESSION; METRICS; ERRORS
AB Traditional software reliability growth models enable quantitative assessment of the software testing process by characterizing the fault detection in terms of testing time or effort. However, the majority of these models do not identify specific testing activities underlying fault discovery and thus can only provide limited guidance on how to incrementally allocate effort. Although there are several novel studies focused on covariate software reliability growth models, they are limited to model development, application, and assessment.
   This paper presents a non-homogeneous Poisson process software reliability growth model incorporating covariates based on the discrete Cox proportional hazards model. An efficient and stable expectation conditional maximization algorithm is applied to identify the model parameters. An optimal test activity allocation problem is formulated to maximize fault discovery. The proposed method is illustrated through numerical examples on two data sets. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Nagaraju, Vidhyashree; Fiondella, Lance] Univ Massachusetts Dartmouth, Elect & Comp Engn, Dartmouth, MA 02747 USA.
   [Jayasinghe, Chathuri] Univ Sri Jayewardenepura, Dept Stat, Nugegoda, Sri Lanka.
C3 University of Massachusetts System; University Massachusetts Dartmouth;
   University Sri Jayewardenepura
RP Fiondella, L (corresponding author), Univ Massachusetts Dartmouth, Elect & Comp Engn, Dartmouth, MA 02747 USA.
EM vnagaraju@umassd.edu; chathuri@sjp.ac.lk; lfiondella@umassd.edu
RI Nagaraju, Vidhyashree/ABE-3754-2020
OI Nagaraju, Vidhyashree/0000-0001-5134-061X
FU National Science Foundation, United States [17496 35]; Army Research
   Laboratory, United States [W911NF-19-2-0224]
FX This material is based upon work supported by the National Science
   Foundation, United States under Grant Number (#17496 35). Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the authors and do not necessarily reflect the views of the
   National Science Foundation.; V. Nagaraju was sponsored by the Army
   Research Laboratory, United States and was accomplished under
   Cooperative Agreement Number W911NF-19-2-0224. The views and conclusions
   contained in this document are those of the authors and should not be
   interpreted as representing the official policies, either expressed or
   implied, of the Army Research Laboratory or the U.S. Government. The
   U.S. Government is authorized to reproduce and distribute reprints for
   Government purposes notwithstanding any copyright notation herein.
CR Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   DIAKOULAKI D, 1995, COMPUT OPER RES, V22, P763, DOI 10.1016/0305-0548(94)00059-H
   Farr W, 1984, TR84373 NAVSWC
   Fiondella Lance, 2008, Opsearch, V45, P351
   Fiondella L, 2011, P REL MAINT S
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   Ishii T, 2008, INT J RELIAB QUAL SA, V15, P1, DOI 10.1142/S0218539308002897
   KALBFLEISCH JD, 1973, BIOMETRIKA, V60, P267, DOI 10.1093/biomet/60.2.267
   KHOSHGOFTAAR TM, 1992, IEEE T RELIAB, V41, P390, DOI 10.1109/24.159804
   KHOSHGOFTAAR TM, 1990, IEEE J SEL AREA COMM, V8, P253, DOI 10.1109/49.46879
   KHOSHGOFTAAR TM, 1992, IEEE T SOFTWARE ENG, V18, P979, DOI 10.1109/32.177367
   Li HF, 2006, INT CONF QUAL SOFTW, P337
   Nagaraju V, 2019, SOFTWAREX, V10, DOI 10.1016/j.softx.2019.100357
   Nagaraju V, 2017, IEEE T RELIAB, V66, P722, DOI 10.1109/TR.2017.2716419
   Okamura H, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.2003.1251047
   Okamura Hiroyuki, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P31, DOI 10.1109/ISSRE.2010.14
   Okamura H, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P121, DOI 10.1109/ISSRE.2015.7381806
   Okamura H, 2014, IEEE HI ASS SYS ENGR, P97, DOI 10.1109/HASE.2014.22
   Rinsaka K, 2006, P INT COMP SOFTW APP, P369
   Sakamoto Y., 1986, AKAIKE INFORM CRITER, V81, DOI 10.1080/01621459.1988.10478680
   Sharma K, 2010, IEEE T RELIAB, V59, P266, DOI 10.1109/TR.2010.2048657
   Shibata K, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P52
   SHIBATA T, 2015, INT J PERFORM ENG, V11
   YAMADA S, 1993, IEEE T RELIAB, V42, P100, DOI 10.1109/24.210278
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
   Zeephongsekul P, 2016, IEEE T RELIAB, V65, P1571, DOI 10.1109/TR.2016.2570557
   Zhao M., 1993, Proceedings. Fourth International Symposium on Software Reliability Engineering (Cat. No.93TH0560-3), P218, DOI 10.1109/ISSRE.1993.624291
NR 28
TC 10
Z9 10
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2020
VL 168
AR 110643
DI 10.1016/j.jss.2020.110643
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MX6ZZ
UT WOS:000557871300008
OA hybrid
DA 2024-07-18
ER

PT J
AU Özener, Ö
   Sözer, H
AF Ozener, O. Orsan
   Sozer, Hasan
TI An effective formulation of the multi-criteria test suite minimization
   problem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Regression testing; Test suite minimization; Integer
   programming; Multi-objective optimization
ID PRIORITIZATION; SELECTION; CRITERIA
AB Test suite minimization problem has been mainly addressed by employing heuristic techniques or integer linear programming focusing on a specific criterion or bi-criteria. These approaches fall short to compute optimal solutions especially when there exists overlap among test cases in terms of various criteria such as code coverage and the set of detected faults. Nonlinear formulations have also been proposed recently to address such cases. However, these formulations require significantly more computational resources compared to linear ones. Moreover, they are also subject to shortcomings that might still lead to sub-optimal solutions. In this paper, we identify such shortcomings and we propose an alternative formulation of the problem. We have empirically evaluated the effectiveness of our approach based on a publicly available dataset and compared it with respect to the state-of-the-art based on the same objective function and the same set of criteria including statement coverage, fault-revealing capability, and test execution time. Results show that our formulation leads to either better results or the same results, when the previously obtained results were already the optimal ones. In addition, our formulation is a linear formulation, which can be solved much more efficiently compared to non-linear formulations. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Ozener, O. Orsan; Sozer, Hasan] Ozyegin Univ, Istanbul, Turkey.
C3 Ozyegin University
RP Sözer, H (corresponding author), Ozyegin Univ, Istanbul, Turkey.
EM hasan.sozer@ozyegin.edu.tr
RI Sözer, Hasan/A-4722-2015
OI Sözer, Hasan/0000-0002-2968-4763; Ozener, Okan/0000-0002-9291-1877
CR [Anonymous], 2019, IBM CPLEX OPTIMIZER
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Czyzyk J, 1998, IEEE COMPUT SCI ENG, V5, P68, DOI 10.1109/99.714603
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Li D, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION NETWORKS, P390, DOI 10.1109/CICN.2014.93
   Lin JW, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1039, DOI 10.1145/3180155.3180174
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Miranda B, 2017, J SYST SOFTWARE, V131, P528, DOI 10.1016/j.jss.2016.06.058
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Sampath S, 2013, IEEE T SOFTWARE ENG, V39, P1326, DOI 10.1109/TSE.2013.16
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Shi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P84, DOI 10.1145/3213846.3213875
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Steuer R., 1986, MULTICRITERIA OPTIMI
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Vahabzadeh A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P210, DOI 10.1145/3180155.3180203
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wohlin C., 2012, Experimentation in Software Engineering
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang JM, 2019, IEEE INT CONF SOFTW, P252, DOI 10.1109/ICST.2019.00033
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
NR 35
TC 6
Z9 6
U1 2
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2020
VL 168
AR 110632
DI 10.1016/j.jss.2020.110632
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MX6ZZ
UT WOS:000557871300002
DA 2024-07-18
ER

PT J
AU Garousi, V
   Rainer, A
   Lauvås, P 
   Arcuri, A
AF Garousi, Vahid
   Rainer, Austen
   Lauvas, Per, Jr.
   Arcuri, Andrea
TI Software-testing education: A systematic literature mapping
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Software-testing education; Software-engineering
   education; Education research; Systematic literature review; Systematic
   literature mapping
ID LITERATURE-REVIEWS; CHALLENGES; BENEFITS; AUTOMATE
AB Context: With the rising complexity and scale of software systems, there is an ever-increasing demand for sophisticated and cost-effective software testing. To meet such a demand, there is a need for a highly-skilled software testing work-force (test engineers) in the industry. To address that need, many university educators worldwide have included software-testing education in their software engineering (SE) or computer science (CS) programs. Many papers have been published in the last three decades (as early as 1992) to share experience from such undertakings.
   Objective: Our objective in this paper is to summarize the body of experience and knowledge in the area of software-testing education to benefit the readers (both educators and researchers) in designing and delivering software testing courses in university settings, and to also conduct further education research in this area.
   Method: To address the above need, we conducted a systematic literature mapping (SLM) to synthesize what the community of educators have published on this topic. After compiling a candidate pool of 307 papers, and applying a set of inclusion/exclusion criteria, our final pool included 204 papers published between 1992 and 2019.
   Results: The topic of software-testing education is becoming more active, as we can see by the increasing number of papers. Many pedagogical approaches (how to best teach testing), course-ware, and specific tools for testing education have been proposed. Many challenges in testing education and insights on how to overcome those challenges have been proposed.
   Conclusion: This paper provides educators and researchers with a classification of existing studies within software-testing education. We further synthesize challenges and insights reported when teaching software testing. The paper also provides a reference ("index") to the vast body of knowledge and experience on teaching software testing. Our mapping study aims to help educators and researchers to identify the best practices in this area to effectively plan and deliver their software testing courses, or to conduct further education-research in this important area. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Garousi, Vahid] Queens Univ Belfast, Software Engn, Belfast, Antrim, North Ireland.
   [Rainer, Austen] Queens Univ Belfast, Sch Elect Elect Engn & Comp Sci, Belfast, Antrim, North Ireland.
   [Lauvas, Per, Jr.] Kristiania Univ Coll, Oslo, Norway.
   [Arcuri, Andrea] Kristiania Univ Coll, Software Engn, Oslo, Norway.
C3 Queens University Belfast; Queens University Belfast; Kristiania
   University College; Kristiania University College
RP Garousi, V (corresponding author), Queens Univ Belfast, Software Engn, Belfast, Antrim, North Ireland.
EM v.garousi@qub.ac.uk; a.rainer@qub.ac.uk; andrea.arcuri@kristiania.no
OI Garousi, Vahid/0000-0001-6590-7576; Rainer, Austen/0000-0001-8868-263X
FU Research Council of Norway [274385]
FX Andrea Arcuri is supported by the Research Council of Norway (project on
   Evolutionary Enterprise Testing, grant agreement No 274385). We thank
   the anonymous reviewers and the editor for their constructive comments.
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Ala-Mutka KM, 2005, COMPUT SCI EDUC, V15, P83, DOI 10.1080/08993400500150747
   Alhammad MM, 2018, J SYST SOFTWARE, V141, P131, DOI 10.1016/j.jss.2018.03.065
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Allen E., 2003, SIGCSE Bulletin, V35, P89, DOI 10.1145/792548.611940
   Allevato Anthony, 2009, SIGCSE Bulletin, V41, P173, DOI 10.1145/1539024.1508928
   [Anonymous], 1978, MIND SOC DEV HIGHER
   [Anonymous], 11 STEPS BECOMING SO
   [Anonymous], 2014, 18 INT C EV ASS SOFT
   [Anonymous], ACM CURR REC
   [Anonymous], COM SHORT SOFTW TEST
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], P 36 SIGCSE TECHN S
   [Anonymous], REVERSIBLE DEBUGGING
   [Anonymous], SOFTWARE IS INCREASI
   [Anonymous], BRAZ S COMPUT ED
   [Anonymous], P INT C EV ASS SOFTW
   [Anonymous], IND WARN IT FAC DIR
   [Anonymous], INCREASING COMPLEXIT
   [Anonymous], 2015, SPETP SPICE
   [Anonymous], 2018, NORW C DID IT ED
   [Anonymous], WALL STR J
   [Anonymous], 2011, Modern Applied Science
   [Anonymous], P KOL CALL INT C COM
   [Anonymous], 2010, P KOLI CALLING, DOI 10.1145/1930464.1930480
   [Anonymous], ARXIV190412742
   [Anonymous], FIRMS FACE SHORTAGE
   [Anonymous], I BECAME SELF TAUGHT
   [Anonymous], 2004, Computer Science Education Research
   [Anonymous], P HAW INT C SYST SCI
   AUSTING RH, 1977, COMMUN ACM, V20, P13, DOI 10.1145/359367.359417
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Ben-Ari M., 2001, Journal of Computers in Mathematics and Science Teaching, V20, P45
   Bernhart M., 2006, 28th International Conference on Software Engineering Proceedings, P667, DOI 10.1145/1134285.1134387
   Biggs J.D., 2009, Teaching for quality learning at university: What the student does
   BRUNER JS, 1961, HARVARD EDUC REV, V31, P21
   Buffardi K., 2013, P 9 ANN INT ACM C IN, P83
   Carbone A., 1998, SIGCSE Bulletin, V30, P41, DOI 10.1145/290320.283014
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Cheang B, 2003, COMPUT EDUC, V41, P121, DOI 10.1016/S0360-1315(03)00030-7
   Choy M, 2005, LECT NOTES COMPUT SC, V3583, P267
   Cooper C, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-018-0545-3
   Crawley EF., 2014, Rethinking Engineering Education: The CDIO Approach, DOI [10.1007/978-3-319-05561-9, DOI 10.1007/978-3-319-05561-9]
   Cruzes D.S., 2010, P ACM IEEE INT S EMP
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Daly C, 2004, IEEE T EDUC, V47, P10, DOI 10.1109/TE.2003.816064
   Desai Chetan, 2008, SIGCSE Bulletin, V40, P97, DOI 10.1145/1383602.1383644
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Edwards SH, 2013, CONF SOFTW ENG EDUC, P371, DOI 10.1109/CSEET.2013.6595283
   Etheredge Justin, 2018, SOFTWARE COMPLEXITY
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Garousi V, 2018, INFORM SOFTWARE TECH, V104, P14, DOI 10.1016/j.infsof.2018.06.016
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2016, J SOFTW-EVOL PROC, V28, P272, DOI 10.1002/smr.1758
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Haddaway NR, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0138237
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Haser F., 2014, P INT C EV ASS SOFTW
   Heaton J, 2008, HIST SOC RES, V33, P33
   Higgins C., 2002, SIGCSE Bulletin, V34, P46, DOI 10.1145/637610.544431
   Ismail K, 2009, PROCEEDINGS OF ACADEMY OF INNOVATION AND ENTREPRENEURSHIP 2009, P2
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Johnson D. W., 2002, THEORY RES SMALL GRO, P9, DOI [DOI 10.1007/0-306-47144-2_2, 10.1007/0-306-47144]
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Larson E., 2006, SIGCSE Bulletin, V38, P249, DOI 10.1145/1124706.1121418
   Le Goues C, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.3571235
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Malik B., 2012, International Journal of Educational and Pedagogical Sciences, V6, P3343
   Mallett R, 2012, J DEV EFFECT, V4, P445, DOI 10.1080/19439342.2012.711342
   Marques Maira R., 2014, 2014 IEEE Frontiers in Education Conference (FIE). Proceedings, P1, DOI 10.1109/FIE.2014.7044277
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Misra DP, 2018, J KOREAN MED SCI, V33, DOI 10.3346/jkms.2018.33.e92
   Nascimento DM, 2013, PROC FRONT EDUC CONF
   Nelson GL, 2018, ICER'18: PROCEEDINGS OF THE 2018 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P31, DOI 10.1145/3230977.3230992
   Ouhbi S, 2015, REQUIR ENG, V20, P119, DOI 10.1007/s00766-013-0192-5
   Petersen K., 2008, INT C EV ASS SOFTW E
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfahl D., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, page, P5
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Sant J, 2009, ITICSE 2009: PROCEEDING OF THE 2009 ACM SIGSE ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P308, DOI 10.1145/1595496.1562971
   Scatalon LP, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P421, DOI 10.1145/3287324.3287384
   Scatalon LP, 2017, PROC FRONT EDUC CONF
   Shephard K, 2019, CAMB HANDB PSYCHOL, P276
   Smith GJ, 2013, EXCEPT CHILDREN, V79, P147, DOI 10.1177/001440291307900202
   Souza MRD, 2018, INFORM SOFTWARE TECH, V95, P201, DOI 10.1016/j.infsof.2017.09.014
   Spacco J., 2004, P 2004 OOPSLA WORKSH, P52
   Staffs Keele, 2007, Tech. Rep.
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Thornton M, 2007, IMSCI '07: INTERNATIONAL MULTI-CONFERENCE ON SOCIETY, CYBERNETICS AND INFORMATICS, VOL 2, PROCEEDINGS, P164
   Venables Anne., 2003, ACE '03), P267
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Yu Zhang, 2010, 2010 IEEE/ASME International Conference on Mechatronic and Embedded Systems and Applications (MESA 2010), P65, DOI 10.1109/MESA.2010.5552036
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 105
TC 35
Z9 37
U1 9
U2 48
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110570
DI 10.1016/j.jss.2020.110570
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LJ5DR
UT WOS:000530186500011
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Wu, JT
   Guo, X
   Yang, GJ
   Wu, SH
   Wu, JG
AF Wu, Jintao
   Guo, Xing
   Yang, Guijun
   Wu, Shuhui
   Wu, Jianguo
TI Substructure similarity search for engineering service-based systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service-based system; Substructure similarity search; Service
   composition; Web service; Graph matching
ID WEB SERVICES; MODEL; SELECTION; RESOURCE
AB With the broad application of service-oriented architecture in service-oriented software engineering, service-based systems (SBSs) are becoming ever more widely used. As a result, the selection of appropriate component services destined to fulfill the functional requirements becomes a critical challenge for successfully building SBSs, especially when the pre-specified SBS plan involves a complicated structure. Because building an exact SBS is often too restrictive, a similarity search for complex functional requirements becomes an essential operation that must be efficiently supported. We thus investigate in this work the substructure similarity search problem of building a SBS. To solve this new research problem, we propose a feature-based method, called the substructure similarity search for service-based systems (5S), to help users find similar SBS solutions by progressively relaxing a SBS plan. The 5S approach models each SBS as a set of features and transforms the task of relaxation of a SBS into the maximum allowed missing features, which can filter many SBSs directly without costly structure comparisons. 5S thus opens a new paradigm for efficient SBS engineering that shortens the build cycle. Finally, we discuss a series of experiments using real-world Web service datasets that demonstrate the effectiveness and efficiency of the proposed approach. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Wu, Jintao; Guo, Xing; Wu, Jianguo] Anhui Univ, Sch Comp Sci & Technol, 111 Jiulong Rd, Hefei 230601, Peoples R China.
   [Wu, Jintao; Yang, Guijun] Beijing Res Ctr Informat Technol Agr, Key Lab Quantitat Remote Sensing Agr, Minist Agr, Beijing 100097, Peoples R China.
   [Wu, Shuhui] Hefei Univ Technol, Sch Management, 193 Tunxi Rd, Hefei 230009, Peoples R China.
C3 Anhui University; Ministry of Agriculture & Rural Affairs; Beijing
   Academy of Agriculture & Forestry Sciences (BAAFS); Hefei University of
   Technology
RP Guo, X (corresponding author), Anhui Univ, Sch Comp Sci & Technol, 111 Jiulong Rd, Hefei 230601, Peoples R China.; Yang, GJ (corresponding author), Beijing Res Ctr Informat Technol Agr, Key Lab Quantitat Remote Sensing Agr, Minist Agr, Beijing 100097, Peoples R China.
EM ah_wjt@foxmail.com; guoxingahu@qq.com; yanggj@nercita.org.cn;
   2018010083@mail.hfut.edu.cn; wjg5408@163.com
RI Wu, Jian/AAU-5221-2020; Wu, Jian/AAU-5221-2020
OI Wu, Jian/0000-0001-9933-7364; Yang, Guijun/0000-0002-6425-8321; Wu,
   Jintao/0000-0003-4257-2288; Wu, Jian/0000-0002-3394-1507
FU National Key Research and Development Program of China [2017YFE0122500,
   2016YFD020060306]; National Science and Technology Program of China
   [2015BAK24B00]; Nature Science Program of Anhui Province [1908085MF181];
   Beijing Academy of Agriculture and Forestry Sciences [PT2019-29]
FX This study was supported by the National Key Research and Development
   Program of China (no. 2017YFE0122500 and no. 2016YFD020060306), the
   National Science and Technology Program of China (no. 2015BAK24B00), the
   Nature Science Program of Anhui Province (no. 1908085MF181), and the
   Special Funds for Technology innovation platform building sponsored by
   the Beijing Academy of Agriculture and Forestry Sciences (no.
   PT2019-29).
CR [Anonymous], ACM SIGMOD INT C MAN
   [Anonymous], 2008, P 17 INT C WORLD WID, DOI DOI 10.1145/1367497.1367605
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Barros A. P., 2006, IT Professional, V8, P31, DOI 10.1109/MITP.2006.123
   Berretti S, 2001, IEEE T PATTERN ANAL, V23, P1089, DOI 10.1109/34.954600
   Blake MB, 2011, IEEE T KNOWL DATA EN, V23, P889, DOI 10.1109/TKDE.2010.168
   Bonatti P.A., 2005, Proc. 14th Int'l Conf. World Wide Web (WWW'05), P530
   Bramson M, 2010, PERF E R SI, V38, P275, DOI 10.1145/1811099.1811071
   Brogi A, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1391949.1391953
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cassar G, 2014, IEEE T SERV COMPUT, V7, P654, DOI 10.1109/TSC.2013.28
   Chen FZ, 2017, ENTERP INF SYST-UK, V11, P452, DOI 10.1080/17517575.2015.1081987
   Chen FZ, 2017, EXPERT SYST APPL, V67, P19, DOI 10.1016/j.eswa.2016.09.028
   Cong ZJ, 2015, INFORM SYST FRONT, V17, P799, DOI 10.1007/s10796-014-9525-2
   Deng SG, 2013, KNOWL INF SYST, V36, P579, DOI 10.1007/s10115-012-0541-6
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Feige U, 1998, J ACM, V45, P634, DOI 10.1145/285055.285059
   He Q, 2017, IEEE T SOFTWARE ENG, V43, P658, DOI 10.1109/TSE.2016.2624293
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Hoffmann J, 2007, P 22 NAT C ART INT A, V22, P1013
   Huang G, 2015, IEEE T SERV COMPUT, V8, P494, DOI 10.1109/TSC.2014.2347293
   Huang KC, 2015, J SYST SOFTWARE, V107, P127, DOI 10.1016/j.jss.2015.05.050
   Jatoth C, 2019, FUTURE GENER COMP SY, V94, P185, DOI 10.1016/j.future.2018.11.022
   Klein A, 2014, IEEE T SERV COMPUT, V7, P452, DOI 10.1109/TSC.2013.2
   Klusch M, 2009, J WEB SEMANT, V7, P121, DOI 10.1016/j.websem.2008.10.001
   Kuramochi M, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P313, DOI 10.1109/ICDM.2001.989534
   Kuster U., 2007, P 16 INT C WORLD WID, P1033
   Laleh T, 2018, FUTURE GENER COMP SY, V89, P387, DOI 10.1016/j.future.2018.06.037
   Liu XZ, 2015, IEEE T SERV COMPUT, V8, P2, DOI 10.1109/TSC.2014.2304729
   Oh Seog-Chan, 2008, IEEE Transactions on Services Computing, V1, P15, DOI 10.1109/TSC.2008.1
   Peng Y, 2015, IEEE T KNOWL DATA EN, V27, P1838, DOI 10.1109/TKDE.2014.2316818
   Pistore M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1252
   Plebani P, 2009, IEEE T KNOWL DATA EN, V21, P1629, DOI 10.1109/TKDE.2009.35
   Raymond JW, 2002, COMPUT J, V45, P631, DOI 10.1093/comjnl/45.6.631
   Roman D, 2015, J WEB SEMANT, V31, P39, DOI 10.1016/j.websem.2014.11.006
   Shang HC, 2008, PROC VLDB ENDOW, V1, P364, DOI 10.14778/1453856.1453899
   Shang HC, 2010, PROC INT CONF DATA, P637, DOI 10.1109/ICDE.2010.5447846
   Shasha Dennis, 2002, P PRINC DAT SYST POD, P39, DOI DOI 10.1145/543613.543620
   Subashini S, 2011, J NETW COMPUT APPL, V34, P1, DOI 10.1016/j.jnca.2010.07.006
   Trummer I, 2014, IEEE T SOFTWARE ENG, V40, P167, DOI 10.1109/TSE.2013.61
   Vizcarrondo J, 2017, SERV ORIENTED COMPUT, V11, P345, DOI 10.1007/s11761-017-0217-x
   Vollino B, 2013, INT J WEB SERV RES, V10, P1, DOI 10.4018/jwsr.2013010101
   Wang J, 2017, IEEE ACCESS, V5, P10193, DOI 10.1109/ACCESS.2017.2712744
   Wang XY, 2012, J SYST SOFTWARE, V85, P1135, DOI 10.1016/j.jss.2011.12.043
   Wang YQ, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P147
   Willett P, 1998, J CHEM INF COMP SCI, V38, P983, DOI 10.1021/ci9800211
   Wu Y, 2016, IEEE T SERV COMPUT, V9, P330, DOI 10.1109/TSC.2015.2398442
   Xu QS, 2014, IEEE T VEH TECHNOL, V63, P2071, DOI 10.1109/TVT.2014.2312288
   Yan X., 2005, Proceedings of the 2005 ACM SIGMOD international conference on Management of data, P766, DOI DOI 10.1145/1066157.1066244
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Yuan Y, 2015, VLDB J, V24, P271, DOI 10.1007/s00778-014-0373-y
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang L, 1999, IEEE T NEURAL NETWOR, V10, P925, DOI 10.1109/72.774263
   Zhang Shijie., 2009, EDBT
   Zhao PX, 2010, PROC VLDB ENDOW, V3, P340, DOI 10.14778/1920841.1920887
   Zheng ZB, 2015, IEEE T COMPUT, V64, P219, DOI 10.1109/TC.2013.189
   Zhu Yuanyuan., 2012, EDBT, P456, DOI DOI 10.1145/2247596.2247650
   Zou GB, 2014, IEEE T SERV COMPUT, V7, P2, DOI 10.1109/TSC.2012.27
NR 60
TC 2
Z9 2
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2020
VL 165
AR 110569
DI 10.1016/j.jss.2020.110569
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LJ5DR
UT WOS:000530186500012
DA 2024-07-18
ER

PT J
AU Edded, S
   Ben Sassi, S
   Mazo, R
   Salinesi, C
   Ben Ghezala, H
AF Edded, Sabrine
   Ben Sassi, Sihem
   Mazo, Raul
   Salinesi, Camille
   Ben Ghezala, Henda
TI Collaborative configuration approaches in software product lines
   engineering: A systematic mapping study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Product lines; Collaborative configuration; Systematic mapping study;
   Framework
ID CLASSIFICATION
AB In the context of software product line engineering, collaborative configuration is a decision-making process where multiple stakeholders contribute in building a single product specification. Several approaches addressing collaboration during configuration have already been proposed, but we still have little hard evidence about their effectiveness and little understanding about how collaborative configuration process should be carried out. This paper presents a classification framework to help understand existing collaborative configuration approaches. To elaborate it, a systematic mapping study was conducted guided by three research questions and 41 primary studies was selected out of 238 identified ones. The proposed framework is composed of four dimensions capturing main aspects related to configuration approaches: purpose, collaboration, process and tool. Each dimension is itself multi-faceted and a set of attributes is associated to each facet. Using this framework, we position and classify existing approaches, structure the representation of each approach characteristics, highlight their strengths and weaknesses, compare them to each other, and identify open issues. This study gives a solid foundation for classifying existing and future approaches for product lines collaborative configuration. Researchers and practitioners can use our framework for identifying existing research/technical gaps to attack, better scoping their own contributions, or understanding existing ones. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Edded, Sabrine; Mazo, Raul; Salinesi, Camille] Univ Pantheon Sorbonne, CRI, Paris, France.
   [Ben Sassi, Sihem] Univ Taibah, CBA, MIS Dept, POB 344, Al Madinah, Saudi Arabia.
   [Edded, Sabrine; Ben Sassi, Sihem; Ben Ghezala, Henda] Manouba Univ, Natl Sch Comp Sci, RIADI Lab, Manouba, Tunisia.
   [Mazo, Raul] Univ Eafit, GIDITIC, Medellin, Colombia.
   [Mazo, Raul] ENSTA Bretagne, ULab STICC, Brest, France.
C3 Taibah University; Universite de la Manouba; Universidad EAFIT; ENSTA
   Bretagne
RP Edded, S (corresponding author), Univ Pantheon Sorbonne, CRI, Paris, France.
EM sabrineedded@gmail.com; raul.mazo@univ-parisl.fr;
   camille.salinesi@univ-parisl.fr; henda.benghezala@ensi.rnu.tn
RI Mazo, Raul/AAT-6453-2021; Ben Ghezala, Henda Hajjami/AAK-7052-2021
OI Mazo, Raul/0000-0003-0629-1542; Ben Ghezala, Henda
   Hajjami/0000-0002-6874-1388; Ben Sassi, Sihem/0000-0002-1925-4989
FU PHC Utique program of the French Ministry of Foreign Affairs; Ministry
   of Higher Education and Research; Tunisian Ministry of Higher Education
   and Scientific Research in the CONFIGURE CMCU project [16G1416]
FX This work was financially supported by the PHC Utique program of the
   French Ministry of Foreign Affairs and Ministry of Higher Education and
   Research and the Tunisian Ministry of Higher Education and Scientific
   Research in the CONFIGURE CMCU project number 16G1416.
CR Afzal U, 2016, COMPUT STAND INTER, V48, P30, DOI 10.1016/j.csi.2016.03.003
   Al-Abri A, 2017, TELEMAT INFORM, V34, P878, DOI 10.1016/j.tele.2016.08.006
   [Anonymous], P 1 INT WORKSH AUT C
   [Anonymous], 2009, P 42 IEEE ANN HAWAII
   [Anonymous], 2007, P 40 HAWAII INT C SY, DOI DOI 10.1109/HICSS.2007.27
   [Anonymous], 2017, P 11 INT WORKSH VAR, DOI DOI 10.1145/3023956.3023959
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P16, DOI 10.1007/978-3-642-15579-6_2
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Camarinha-Matos L.M., 2008, Collaborative Networks: Reference Modeling, DOI DOI 10.1007/978-0-387-79426-6
   Chen SL, 2009, IN C IND ENG ENG MAN, P999, DOI 10.1109/ICIEEM.2009.5344221
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   DEGROOTE X, 1994, MANAGE SCI, V40, P933, DOI 10.1287/mnsc.40.7.933
   Djebbi O., 2011, THESIS
   Djebbi O, 2007, LECT NOTES COMPUT SC, V4495, P279
   Dou RL, 2016, COMPUT IND ENG, V99, P474, DOI 10.1016/j.cie.2015.11.007
   Elfaki AO, 2009, STUD COMPUT INTELL, V253, P159, DOI 10.1007/978-3-642-05441-9_14
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Gacitúa R, 2019, J SYST SOFTWARE, V154, P1, DOI 10.1016/j.jss.2019.04.026
   Holl G, 2012, ASIA PAC SOFWR ENG, P137, DOI 10.1109/APSEC.2012.41
   Hubaux A, 2009, PROC INT CONF SOFTW, P367, DOI 10.1109/ICSE-COMPANION.2009.5071023
   Hubaux A, 2010, LECT NOTES COMPUT SC, V6182, P106, DOI 10.1007/978-3-642-14192-8_12
   Junior C.M., 2011, P 14 IB AM C SOFTW E, P143
   Kang K. C., 1990, Technical Report
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Mazo R., 2014, Recommendation Systems in Software Engineering, P511, DOI 10.1007/978-3-642-45135-5
   Mendonça M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P108
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nurcan S., 2004, P BUS PROC MOD DEV S, P192
   Ochoa L., 2015, P 2015 ACM SIGPLAN I, P149, DOI DOI 10.1145/2814251.2814263
   Ochoa L, 2016, P MOV MEAN INT SYST, P98
   Ouali S., 2011, INT J SOFTWARE ENG A, V2, P34, DOI [10.5121/ijsea.2011.2204, DOI 10.5121/IJSEA.2011.2204]
   Pereira JA, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2058, DOI 10.1145/3167132.3167353
   Pereira JA, 2017, PROC IEEE ACM INT C, P94, DOI 10.1109/ICSE-C.2017.154
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pillat R.M., 2013, 7 INT WORKSH VAR MOD, DOI 10.1145/2430502.2430523
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   Rolland C, 1998, LECT NOTES COMPUT SC, V1413, P1, DOI 10.1007/BFb0054216
   Roschelle J., 1995, Computer Supported Collaborative Learning. Proceedings NATO Advanced Research Workshop, P69
   Sabin D, 1998, IEEE INTELL SYST APP, V13, P42, DOI 10.1109/5254.708432
   Salinesi C., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P243, DOI 10.1109/RE.2010.36
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Soares LR, 2018, INFORM SOFTWARE TECH, V98, P44, DOI 10.1016/j.infsof.2018.01.016
   Soltani Samaneh., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V1, P56, DOI DOI 10.1145/2362536.2362548
   Stein J, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P132, DOI 10.1145/2648511.2648525
   Triki R., 2014, P REC SYST, P135
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Ye Bingliang, 2010, 2010 2nd IEEE International Conference on Information Management and Engineering (ICIME 2010), P489, DOI 10.1109/ICIME.2010.5477908
   Zhang H., 2009, TECHNICAL REPORT
NR 54
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2019
VL 158
AR 110422
DI 10.1016/j.jss.2019.110422
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL4BR
UT WOS:000495476500010
OA Green Submitted, Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Danglot, B
   Vera-Perez, O
   Yu, ZX
   Zaidman, A
   Monperrus, M
   Baudry, B
AF Danglot, Benjamin
   Vera-Perez, Oscar
   Yu, Zhongxing
   Zaidman, Andy
   Monperrus, Martin
   Baudry, Benoit
TI A snowballing literature study on test amplification
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Test amplification; Test augmentation; Test optimization; Test
   regeneration; Automatic testing
ID TEST SUITES; AUGMENTATION; GENERATION; ALGORITHMS
AB The adoption of agile approaches has put an increased emphasis on testing, resulting in extensive test suites. These suites include a large number of tests, in which developers embed knowledge about meaningful input data and expected properties as oracles. This article surveys works that exploit this knowledge to enhance manually written tests with respect to an engineering goal (e.g., improve coverage or refine fault localization). While these works rely on various techniques and address various goals, we believe they form an emerging and coherent field of research, which we coin "test amplification". We devised a first set of papers from DBLP, searching for all papers containing "test" and "amplification" in their title. We reviewed the 70 papers in this set and selected the 4 papers that fit the definition of test amplification. We use them as the seeds for our snowballing study, and systematically followed the citation graph. This study is the first that draws a comprehensive picture of the different engineering goals proposed in the literature for test amplification. We believe that this survey will help researchers and practitioners entering this new field to understand more quickly and more deeply the intuitions, concepts and techniques used for test amplification. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Danglot, Benjamin] INRIA, Lille, France.
   [Vera-Perez, Oscar] INRIA, Rennes, France.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
   [Yu, Zhongxing] KTH Royal Inst Technol, Stockholm, Sweden.
   [Monperrus, Martin; Baudry, Benoit] KTH Royal Inst Technol, Software Technol, Stockholm, Sweden.
C3 Inria; Inria; Delft University of Technology; Royal Institute of
   Technology; Royal Institute of Technology
RP Danglot, B (corresponding author), INRIA, Lille, France.
EM benjamin.danglot@inria.fr
RI Yu, Zhongxing/AAH-1064-2019; Monperrus, Martin/I-3640-2012; Zaidman,
   Andy/O-6542-2014
OI Monperrus, Martin/0000-0003-3505-3383; Zaidman,
   Andy/0000-0003-2413-3935; Danglot, Benjamin/0000-0001-9483-5743
FU EU Project STAMP [ICT-16-10, 731529]
FX This work has been partially supported by the EU Project STAMP ICT-16-10
   No. 731529, https://www.stamp-project.eu/.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   [Anonymous], 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA'11
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Apiwattanapong T, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P137, DOI 10.1109/TAIC-PART.2006.18
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Baudry B, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P253
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Blackburn Stephen M., 2006, P 21 ANN ACM SIGPLAN, DOI [10.1145/1167473.1167488, DOI 10.1145/1167473.1167488, DOI 10.1145/1167515.1167488, 10.1145/1167515.1167488]
   Bloem R, 2014, INT CONF QUAL SOFTW, P67, DOI 10.1109/QSIC.2014.40
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Carzaniga A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P931, DOI 10.1145/2568225.2568287
   Cooper H.M., 1998, SYNTHESIZING RES GUI, V2
   Cornu B, 2015, INFORM SOFTWARE TECH, V57, P66, DOI 10.1016/j.infsof.2014.08.004
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Fang LH, 2015, IEEE ST CONF RES DEV, P37, DOI 10.1109/SCORED.2015.7449358
   Fard A. M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE'14, P67, DOI 10.1145/2642937.2642991
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Hamlet D., 1993, SIGSOFT Software Engineering Notes, V18, P89, DOI 10.1145/174146.154246
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   Hetzel William C, 1988, The complete guide to software testing
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Joshi Pallavi., 2007, PROC ESEC FSE, P561, DOI DOI 10.1145/1295014.1295041
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Leung A, 2012, ACM SIGPLAN NOTICES, V47, P383, DOI 10.1145/2345156.2254110
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Marinescu P. D., 2013, KATCH HIGH COVERAGE, P235, DOI [10.1145/2491411.2491438, DOI 10.1145/2491411.2491438]
   Marri MR, 2010, TECHNICAL REPORT
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meszaros G., 2006, XUNIT TEST PATTERNS
   Mirzaaghaei M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P231, DOI 10.1109/ICST.2012.103
   Mirzaaghaei M, 2014, SOFTW TEST VERIF REL, V24, P386, DOI 10.1002/stvr.1527
   Moonen L., 2008, Software Evolution, P173
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mouelhi T, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P171, DOI 10.1109/ICST.2009.49
   Niklasson C, 1999, MONAS ENGN EDUC SER, P219
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Palikareva H, 2016, PROC INT CONF SOFTW, P1181, DOI 10.1145/2884781.2884845
   Palomba F, 2019, EMPIR SOFTW ENG, V24, P2907, DOI 10.1007/s10664-019-09683-z
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Patrick M, 2017, INFORM SOFTWARE TECH, V81, P36, DOI 10.1016/j.infsof.2016.04.009
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pezzè M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P11, DOI 10.1109/ICST.2013.37
   Qi Dawei., 2010, PROC ASE, P397
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Santelices R., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P11, DOI 10.1109/ICST.2011.46
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Wang H, 2014, P INT CONF BUS INTEL, P1, DOI 10.1109/BIFE.2013.1
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xu Z., 2010, PROC GECCO, P1365
   Xu ZH, 2015, SOFTW TEST VERIF REL, V25, P77, DOI 10.1002/stvr.1562
   Xu ZH, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P150, DOI 10.1109/ISSRE.2011.21
   Xu ZH, 2009, ASIA PAC SOFWR ENG, P406, DOI 10.1109/APSEC.2009.29
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Xuan JF, 2016, INFORM SOFTWARE TECH, V76, P65, DOI 10.1016/j.infsof.2016.04.016
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoshida H., 2016, P 25 INT S SOFTW TES
   Yu ZX, 2013, INFORM SOFTWARE TECH, V55, P2076, DOI 10.1016/j.infsof.2013.07.004
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhang J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/2950290.2950313
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 82
TC 39
Z9 41
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2019
VL 157
AR 110398
DI 10.1016/j.jss.2019.110398
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JA8YP
UT WOS:000488137500009
OA Bronze, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Russo, ER
   Di Sorbo, A
   Visaggio, CA
   Canfora, G
AF Russo, Ernesto Rosario
   Di Sorbo, Andrea
   Visaggio, Corrado A.
   Canfora, Gerardo
TI Summarizing vulnerabilities' descriptions to support experts during
   vulnerability assessment activities
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Natural language processing; Software security; Summarization; Software
   maintenance
AB Vulnerabilities affecting software and systems have to be promptly fixed, to prevent violations to integrity, availability and confidentiality policies of targeted organizations. Once a vulnerability is discovered, it is published on the Common Vulnerabilities and Exposures (CVE) database, freely available on the web. However, vulnerabilities are described using natural language, which makes them hard to be automatically interpreted by machines. As a consequence, vulnerability assessment activities tend to be time-consuming and imprecise, as the assessors must manually read the majority of the vulnerabilities concerning the perimeter to be protected, to make a decision on which vulnerabilities have the highest priority for patching. In this paper we present CVErizer, an approach able to automatically generate summaries of daily posted vulnerabilities and categorize them according to a taxonomy modeled for industry. We empirically assess the classification capabilities of the approach on a set of 3369 pre-labeled CVE records and perform an end-to-end evaluation of CVErizer summaries involving 15 cybersecurity master students and 4 professional security experts. Our study demonstrates the high performance of the proposed approach in correctly extracting and classifying information from CVE descriptions. Summaries are also considered highly useful for helping analysts during the vulnerability assessment processes. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Russo, Ernesto Rosario] Univ Bari Aldo Moro, Dept Informat, Bari, Italy.
   [Di Sorbo, Andrea; Visaggio, Corrado A.; Canfora, Gerardo] Univ Sannio, Dept Engn, Benevento, Italy.
   [Russo, Ernesto Rosario] Exprivia SpA, Sede Legate Via A Olivetti 11, I-70056 Molfetta, BA, Italy.
C3 Universita degli Studi di Bari Aldo Moro; University of Sannio
RP Russo, ER (corresponding author), Univ Bari Aldo Moro, Dept Informat, Bari, Italy.; Russo, ER (corresponding author), Exprivia SpA, Sede Legate Via A Olivetti 11, I-70056 Molfetta, BA, Italy.
EM ernestorosario.russo@uniba.it; disorbo@unisannio.it;
   visaggio@unisannio.it; canfora@unisannio.it
OI Di Sorbo, Andrea/0000-0002-3192-739X
CR Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], P 6 INT WORKSH TRAC
   [Anonymous], 2006, PROC 5 INT C LANGUAG
   [Anonymous], EMNLP
   [Anonymous], [No title captured]
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   Arief B, 2015, IEEE SECUR PRIV, V13, P71, DOI 10.1109/MSP.2015.19
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Beattie S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XVI), P233
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Bulazel A., 2017, P 1 REVERSING OFFENS, P2
   Canfora G, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3230845
   Chen ZQ, 2010, COMPUT J, V53, P551, DOI 10.1093/comjnl/bxp040
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Feigenbaum EA, 2003, J ACM, V50, P32, DOI 10.1145/602382.602400
   Feitelson D.G, 2015, ABS151208409 CORR
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gardner BD, 2012, AQUANOMICS: WATER MARKETS AND THE ENVIRONMENT, P1
   Gkortzis A, 2016, INT CONF CLOUD COMP, P533, DOI [10.1109/CloudCom.2016.78, 10.1109/CloudCom.2016.0093]
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guo M., 2009, P 2009 ASEE SE SECT
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Ha Thanh Le, 2011, Proceedings 2011 25th IEEE International Conference on Advanced Information Networking and Applications Workshops (WAINA 2011), P586, DOI 10.1109/WAINA.2011.56
   Joshi A, 2013, IEEE INT C SEMANT CO, P252, DOI 10.1109/ICSC.2013.50
   Joshi C., 2015, INT J ADV RES COMPUT, V5, P742
   Khazaei A, 2016, J INTELL FUZZY SYST, V30, P89, DOI 10.3233/IFS-151733
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lai YP, 2007, COMPUT COMMUN, V30, P2032, DOI 10.1016/j.comcom.2007.03.007
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Liu QX, 2012, J SYST SOFTWARE, V85, P1699, DOI 10.1016/j.jss.2012.03.057
   Lloret E, 2012, ARTIF INTELL REV, V37, P1, DOI 10.1007/s10462-011-9216-z
   Lotufo R, 2015, EMPIR SOFTW ENG, V20, P516, DOI 10.1007/s10664-014-9311-2
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MITRE Corporation, 2016, TERMINOLOGY
   Mokhov S.A., 2014, P I CON VIR SYS MULT, P326, DOI DOI 10.1007/978-3-319-06483-333
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Murray Gabriel, 2008, Proceedings of EMNLP, P773
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Neto JL, 2002, LECT NOTES ARTIF INT, V2507, P205
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Qixin Wang, 2016, Advances in Brain-Inspired Cognitive Systems. 8th International Conference, BICS 2016. Proceedings: LNAI 10023, P34, DOI 10.1007/978-3-319-49685-6_4
   Radev DR, 2002, COMPUT LINGUIST, V28, P399, DOI 10.1162/089120102762671927
   Rastkar S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1193, DOI 10.1109/ICSE.2013.6606676
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Smyth Vincent, 2017, Network Security, V2017, P10, DOI 10.1016/S1353-4858(17)30027-2
   Spencer D., 2009, CARD SORTING DESIGNI
   Tao Wen, 2015, Journal of Communications, V10, P107, DOI 10.12720/jcm.10.2.107-116
   Thongthua A, 2016, 2016 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING RESEARCH AND INNOVATION - ICCCRI 2016, P71, DOI 10.1109/ICCCRI.2016.19
   Toloudis D, 2016, LECT NOTES BUS INF P, V249, P231, DOI 10.1007/978-3-319-39564-7_22
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang J.An., 2009, P 5 ANN WORKSHOP CYB, P1
   Wang JC, 2010, INT J ASIAN BUS INF, V1, P10, DOI 10.4018/jabim.2010010102
   Witten I. H., 2005, DATA MINING PRACTICA
   Wu Y., 2015, CrossTalk, P45
   Wu YX, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0935-3
   Yeasmin S, 2014, PROC IEEE INT CONF S, P421, DOI 10.1109/ICSME.2014.66
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
NR 66
TC 32
Z9 34
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2019
VL 156
BP 84
EP 99
DI 10.1016/j.jss.2019.06.001
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU5WM
UT WOS:000483658000006
DA 2024-07-18
ER

PT J
AU Wei, R
   Kelly, TP
   Dai, XT
   Zhao, S
   Hawkins, R
AF Wei, Ran
   Kelly, Tim P.
   Dai, Xiaotian
   Zhao, Shuai
   Hawkins, Richard
TI Model based system assurance using the structured assurance case
   metamodel
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model driven engineering; Structured assurance case metamodel; Model
   based system assurance; Goal structuring notation;
   Claims-Arguments-Evidence
AB Assurance cases are used to demonstrate confidence in system properties of interest (e.g. safety and/or security). A number of system assurance approaches are adopted by industries in the safety-critical domain. However, the task of constructing assurance cases remains a manual, lenghty and informal process. The Structured Assurance Case Metamodel (SACM) is a standard specified by the Object Management Group (OMG). SACM provides a richer set of features than existing system assurance languages/approaches. SACM provides a foundation for model-based system assurance, which bears great application potentials in growing technology domains such as Open Adaptive Systems. However, the intended usage of SACM has not been sufficiently explained. In addition, there has not been support to interoperate between existing assurance case (models) and SACM models.
   In this article, we explain the intended usage of SACM based on our involvement in the OMG specification process of SACM. In addition, to promote a model-based approach, we provide SACM compliant metamodels for existing system assurance approaches (the Goal Structuring Notation and Claims-Arguments-Evidence), and the transformations from these models to SACM. We also briefly discuss the tool support for model-based system assurance which helps practitioners make the transition from existing system assurance approaches to model-based system assurance using SACM. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Wei, Ran; Kelly, Tim P.; Dai, Xiaotian; Zhao, Shuai; Hawkins, Richard] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Wei, R; Kelly, TP; Dai, XT; Zhao, S (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
EM ran.wei@york.ac.uk; tim.kelly@york.ac.uk; xiaotian.dai@york.ac.uk;
   shuai.zhao@york.ac.uk
RI Dai, Xiaotian/AAE-9820-2020; Wei, Ran/X-8750-2019; Hawkins,
   Richard/IWD-5597-2023
OI Dai, Xiaotian/0000-0002-6669-5234; Wei, Ran/0000-0003-2191-1359; 
FU European Union's Horizon 2020 research and innovation programme through
   the DEIS project [732242]; H2020 - Industrial Leadership [732242]
   Funding Source: H2020 - Industrial Leadership
FX This work is supported by the European Union's Horizon 2020 research and
   innovation programme through the DEIS project (grant agreement No
   732242).
CR [Anonymous], P UK MOD EQ SAF ASS
   [Anonymous], AUTOMATED SOFTWARE E
   Armstrong JM, 2004, LECT NOTES COMPUT SC, V3219, P3
   Attwood Katrina, 2014, Ada User Journal, V35, P251
   Barrot M, 2011, ANESTHESIOLOGY, V114, P493, DOI 10.1097/ALN.0b013e31820a4ef7
   Bishop P., 2000, Safety and Reliability, V20, P34
   Bloomfield R, 2010, MAKING SYSTEMS SAFER, P51, DOI 10.1007/978-1-84996-086-1_4
   Chinneck P, 2004, PRACTICAL ELEMENTS OF SAFETY, P223
   Denney Ewen, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P21, DOI 10.1007/978-3-642-40793-2_3
   Despotou G., 2008, 3 IET INT C SYST SAF
   Fenn J, 2005, Constituents of Modern System-safety Thinking, P21, DOI 10.1007/1-84628-130-X_2
   Hawkins R, 2015, IEEE HI ASS SYS ENGR, P110, DOI 10.1109/HASE.2015.25
   Hawkins R, 2011, ADVANCES IN SYSTEMS SAFETY, P3, DOI 10.1007/978-0-85729-133-2_1
   Hawkins R, 2013, SAFETY SCI, V59, P55, DOI 10.1016/j.ssci.2013.04.007
   Hawkins S, 2015, ASHG POP FOLK MUSIC, P187
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   Karna J., 2009, P 9 OOPSLA WORKSH DO
   Kelly T., 2004, P DEP SYST NETW 2004
   Kelly T. P., 1997, SAFECOMP 97. 16th International Conference on Computer Safety, Reliability and Security, P55
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Larrucea X, 2017, IEEE SOFTWARE, V34, P40, DOI 10.1109/MS.2017.68
   Lautieri S, 2005, CONSTITUENTS OF MODERN SYSTEM-SAFETY THINKING, P65, DOI 10.1007/1-84628-130-X_5
   Luo YP, 2015, COMM COM INF SC, V580, P3, DOI 10.1007/978-3-319-27869-8_1
   Maksimov M., 2018, P 6 INT WORKSH ASS C
   Matsuno Yutaka, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P170, DOI 10.1109/HASE.2010.26
   Matsuno Y, 2014, I C DEPEND SYS NETWO, P630, DOI 10.1109/DSN.2014.97
   Netkachova K., 2014, INT C COMP SAF REL S, P62
   OMG, 2019, STRUCT ASS CAS MET
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taguchi K, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P192, DOI 10.1109/ISSREW.2014.79
   Trapp M., 2013, Perspectives on the Future of Software Engineering, P81
   Wei R, 2018, ACM IEEE 21 INT C MO
   Wei R., 2017, FEDERATION INT C SOF, P409
NR 33
TC 27
Z9 27
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2019
VL 154
BP 211
EP 233
DI 10.1016/j.jss.2019.05.013
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC4NT
UT WOS:000470943300014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Gerostathopoulos, I
   Skoda, D
   Plasil, F
   Bures, T
   Knauss, A
AF Gerostathopoulos, Ilias
   Skoda, Dominik
   Plasil, Frantisek
   Bures, Tomas
   Knauss, Alessia
TI Tuning self-adaptation in cyber-physical systems through architectural
   homeostasis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cyber-physical systems; Software architecture; Run-time uncertainty;
   Self-adaptation strategies; Architecture homeostasis
ID MODELS
AB Self-adaptive software-intensive cyber-physical systems (sasiCPS) encounter a high level of run-time uncertainty. State-of-the-art architecture-based self-adaptation approaches assume designing against a fixed set of situations that warrant self-adaptation. As a result, failures may appear when sasiCPS operate in environment conditions they are not specifically designed for. In response, we propose to increase the homeostasis of sasiCPS, i.e., the capacity to maintain an operational state despite run-time uncertainty, by introducing run-time changes to the architecture-based self-adaptation strategies according to environment stimuli. In addition to articulating the main idea of architectural homeostasis, we introduce four mechanisms that reify the idea: (i) collaborative sensing, (ii) faulty component isolation from adaptation, (iii) enhancing mode switching, and (iv) adjusting guards in mode switching. Moreover, our experimental evaluation of the four mechanisms in two different case studies confirms that allowing a complex system to change its self-adaptation strategies helps the system recover from run-time errors and abnormalities and keep it in an operational state. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Gerostathopoulos, Ilias] Tech Univ Munich, Fak Informat, Munich, Germany.
   [Skoda, Dominik; Plasil, Frantisek; Bures, Tomas] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
   [Knauss, Alessia] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Technical University of Munich; Charles University Prague; Chalmers
   University of Technology
RP Gerostathopoulos, I (corresponding author), Tech Univ Munich, Fak Informat, Munich, Germany.
EM gerostat@in.tum.de; skoda@d3s.mff.cuni.cz; plasil@d3s.mff.cuni.cz;
   bures@d3s.mff.cuni.cz; alessia.knauss@chalmers.se
RI ; Bures, Tomas/G-1821-2014
OI Gerostathopoulos, Ilias/0000-0001-9333-7101; Bures,
   Tomas/0000-0003-3622-9918
FU COST CZ (LD) programme by the Ministry of Education, Youth and Sports of
   the Czech Republic [LD15051]; Charles University [SW-2016-260331];
   PRVOUK; Charles University Grant Agency project [391115]; Bayerisches
   Staatsministerium fur Wirtschaft und Medien, Energie und Technologie
FX This work was partially supported by the project no. LD15051 from COST
   CZ (LD) programme by the Ministry of Education, Youth and Sports of the
   Czech Republic; by Charles University institutional funding
   SW-2016-260331 and PRVOUK; by Charles University Grant Agency project
   No. 391115. This work is part of the TUM Living Lab Connected Mobility
   project and has been funded by the Bayerisches Staatsministerium fur
   Wirtschaft und Medien, Energie und Technologie.
CR [Anonymous], 2005, PRACTICAL MATH OPTIM
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Beetz K., 2012, Model-Based Engineering of Embedded Systems, P3
   Braberman Victor A., 2015, P 1 INT WORKSH CONTR, P9, DOI [10.1145/2804337.2804339, DOI 10.1145/2804337.2804339]
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Bures T, 2016, COMPUTER, V49, P50, DOI 10.1109/MC.2016.377
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   Cheng B. H. C., 2009, P IEEE C SENS MESH A, P1, DOI [DOI 10.1145/1640206.1640216, DOI 10.1007/978-3-642-04425-0_36]
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng SW, 2012, J SYST SOFTWARE, V85, P2860, DOI 10.1016/j.jss.2012.02.060
   de Lemos Rogerio., 2013, Software Engineering for Self-Adaptive Systems II, volume 7475 of Lecture Notes in Computer Science, V7475, P265
   Escoffier C, 2007, P IEEE I C SERV COMP, P474
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Fairbanks G, 2014, IEEE SOFTWARE, V31, P12, DOI 10.1109/MS.2014.82
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Fredericks Erik M., 2015, 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P157, DOI 10.1109/SEAMS.2015.15
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gerostathopoulos I, 2017, ACM TRANS CYBER-PHYS, V1, DOI 10.1145/2823345
   Gerostathopoulos I, 2016, LECT NOTES COMPUT SC, V9839, P113, DOI 10.1007/978-3-319-48992-6_8
   Gerostathopoulos I, 2016, J SYST SOFTWARE, V122, P378, DOI 10.1016/j.jss.2016.02.028
   Goldsby HJ, 2008, LECT NOTES COMPUT SC, V5301, P568, DOI 10.1007/978-3-540-87875-9_40
   Hall R., 2011, OSGI ACTION CREATING
   Holzl Matthias, 2008, Software-Intensive Systems and New Computing Paradigms, P1
   Iftikhar MU, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P125, DOI 10.1145/2593929.2593944
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Mandavi-Hezavehi S, 2016, MANAGING TRADE OFFS, P45
   Muccini H, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P75, DOI [10.1109/SEAMS.2016.016, 10.1145/2897053.2897069]
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Perrouin G, 2012, PROC INT CONF SOFTW, P1353, DOI 10.1109/ICSE.2012.6227081
   Pradhan S, 2016, J SYST SOFTWARE, V122, P344, DOI 10.1016/j.jss.2016.05.038
   Ramirez Andres J., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P53, DOI 10.1007/978-3-642-33666-9_5
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Serugendo G.Di Marzo., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, P457
   Serugendo GD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P566, DOI 10.1145/1244002.1244132
   Shaw Mary., 2002, WOSS 02 P 1 WORKSHOP, P111, DOI [10.1145/582128.582152, DOI 10.1145/582128.582152]
   Srinivasan S, 2008, LECT NOTES COMPUT SC, V5142, P104, DOI 10.1007/978-3-540-70592-5_6
   Sykes D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P63, DOI 10.1109/ICSE.2013.6606552
   Sykes Daniel., 2008, Proceedings of the 2008 international workshop on Software engineering for adaptive and self-managing systems, SEAMS '08, P1
   Tajalli H., 2010, P IEEE ACM INT C AUT, P467, DOI DOI 10.1145/1858996.1859092
   Tarasyuk A, 2013, LECT NOTES COMPUT SC, V8166, P109, DOI 10.1007/978-3-642-40894-6_9
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
   Weyns D., 2010, P 7 INT C AUTONOMIC, P205, DOI 10.1145/1809049.1809078
   Wolfinger R, 2012, DYNAMIC APPL COMPOSI
NR 48
TC 15
Z9 15
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2019
VL 148
BP 37
EP 55
DI 10.1016/j.jss.2018.10.051
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HG4TC
UT WOS:000454966900003
DA 2024-07-18
ER

PT J
AU Spinnner, S
   Grohmann, J
   Eismann, S
   Kounev, S
AF Spinnner, Simon
   Grohmann, Johannes
   Eismann, Simon
   Kounev, Samuel
TI Online model learning for self-aware computing infrastructures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Self-aware computing; Performance model; Model extraction; Model
   learning
ID ARCHITECTURE-LEVEL; PERFORMANCE; SYSTEMS
AB Performance models are valuable and powerful tools for performance prediction. However, the creation of performance models usually requires significant manual effort. Furthermore, as the modeled structures are subject to frequent change in modern infrastructures, such performance models need to be adapted as well. We therefore propose a reference architecture for online model learning in virtualized environments, which enables the automatic extraction of the aforementioned performance models. We follow an agent-based approach, which enables us to incorporate the extraction of information about the application structure as well as the virtualization structures present in modern computing centers. Our evaluation shows that our collaborating agents are able to reduce the manual effort of performance model extraction by 85.4%. The resulting performance model is able to predict the system utilization with an absolute error of less than 4% and the end-to-end response time with a relative error of less than 21%. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Spinnner, Simon; Grohmann, Johannes; Eismann, Simon; Kounev, Samuel] Univ Wurzburg Hubland, D-97074 Wurzburg, Germany.
C3 University of Wurzburg
RP Grohmann, J (corresponding author), Univ Wurzburg Hubland, D-97074 Wurzburg, Germany.
EM simon.spinnner@uni-wuerzburg.de; johannes.grohmann@uni-wuerzburg.de;
   simon.eismann@uni-wuerzburg.de; samuel.kounev@uni-wuerzburg.de
FU German Research Foundation (DFG) [KO 3445/11-1]
FX This work was supported by the German Research Foundation (DFG) under
   grant no. (KO 3445/11-1).
CR [Anonymous], 2014, P 5 ACMSPEC INT C PE
   [Anonymous], 1999, P 1 ACM C EL COMM
   Awad M., 2014, P 2014 COMP MEAS GRO
   Bauer Armelle, 2016, THESIS
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bittman T. J., 2016, MAGIC QUADRANT X86 S
   Brosig F., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P183, DOI 10.1109/ASE.2011.6100052
   Brosig F., 2014, THESIS
   Brosig F, 2014, SCI COMPUT PROGRAM, V90, P71, DOI 10.1016/j.scico.2013.06.004
   Brunnert Andreas, 2013, Computer Performance Engineering. 10th European Workshop, EPEW 2013. Proceedings: LNCS 8168, P74, DOI 10.1007/978-3-642-40725-3_7
   Brunnert A, 2017, J SYST SOFTWARE, V123, P239, DOI 10.1016/j.jss.2015.08.030
   Courtois M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P105, DOI 10.1145/350391.350416
   Förtsch S, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P90
   Huber Nikolaus, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P563
   Huber N, 2017, IEEE T SOFTWARE ENG, V43, P432, DOI 10.1109/TSE.2016.2613863
   Huber N, 2014, SERV ORIENTED COMPUT, V8, P73, DOI 10.1007/s11761-013-0144-4
   Israr T, 2007, J SYST SOFTWARE, V80, P474, DOI 10.1016/j.jss.2006.07.019
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Kistowski JV, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P109, DOI 10.1109/SEAMS.2015.19
   Kounev S, 2016, COMPUTER, V49, P53, DOI 10.1109/MC.2016.198
   Krogmann K., 2010, THESIS
   Kuperberg M., 2008, P 3 INT WORKSH BYT S
   Liu HB, 2007, DATA KNOWL ENG, V61, P304, DOI 10.1016/j.datak.2006.06.001
   Liu Z, 2006, PERFORM EVALUATION, V63, P36, DOI 10.1016/j.peva.2004.12.001
   Lorido-Botran T, 2014, J GRID COMPUT, V12, P559, DOI 10.1007/s10723-014-9314-7
   Lu Lei., 2011, P 8 ACM INT C AUTONO, P151
   Menasce D.A., 2000, SCALING E BUSINESS T
   Noorshams Q., 2015, THESIS
   Rathfelder C., 2013, KARLSRUHE SERIES SOF, V10
   Rohr M, 2008, LECT NOTES COMPUT SC, V5119, P283, DOI 10.1007/978-3-540-69814-2_18
   Rygielski P., 2014, DESCARTES NETWORK IN
   Sharma Abhishek B., 2008, Performance Evaluation Review, V36, P16, DOI 10.1145/1453175.1453179
   Spinner S, 2015, PERFORM EVALUATION, V92, P51, DOI 10.1016/j.peva.2015.07.005
   Standard Performance Evaluation Corporation (SPEC), PUBL SPECJENTERPRISE
   van Hoorn A., 2014, P 8 INT C PERF EV ME, P139, DOI [10.4108/icst.valuetools.2014.258171, DOI 10.4108/ICST.VALUETOOLS.2014.258171]
   van Hoorn A., 2015, EAI ENDORSED T SELF, V1, pe5
   Van Hoorn A., 2014, THESIS
   VMware Inc., 2013, VSPHERE API SDK DOC
   Vogele Christian, 2018, Softw Syst Model, V17, P443, DOI 10.1007/s10270-016-0566-5
   Wang W., 2015, P 1 INT WORKSH QUAL, P31, DOI DOI 10.1145/2804371.2804379
   Westermann D, 2012, IEEE INT CONF AUTOM, P190, DOI 10.1145/2351676.2351703
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
   Willnecker F, 2016, 2016 12TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES (QOSA), P106, DOI 10.1109/QoSA.2016.11
   [No title captured]
NR 44
TC 9
Z9 9
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2019
VL 147
BP 1
EP 16
DI 10.1016/j.jss.2018.09.089
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HG4SU
UT WOS:000454966100001
DA 2024-07-18
ER

PT J
AU Wang, TS
   Zhang, GX
   Yang, XC
   Vajdi, A
AF Wang, Tianshu
   Zhang, Gongxuan
   Yang, Xichen
   Vajdi, Ahmadreza
TI Genetic algorithm for energy-efficient clustering and routing in
   wireless sensor networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Wireless sensor networks; Clustering algorithm; Genetic algorithm;
   Energy-efficiency; Network life cycle; Routing
ID PROTOCOL; LIFETIME; SCHEME
AB Wireless sensor networks have been employed widely in various fields, including military, health care, and manufacturing applications. However, the sensor nodes are limited in terms of their energy supply, storage capability, and computational power. Thus, in order to improve the energy efficiency and prolong the network life cycle, we present a genetic algorithm-based energy-efficient clustering and routing approach GECR. We add the optimal solution obtained in the previous network round to the initial population for the current round, thereby improving the search efficiency. In addition, the clustering and routing scheme are combined into a single chromosome to calculate the total energy consumption. We construct the fitness function directly based on the total energy consumption thereby improving the energy efficiency. Moreover, load balancing is considered when constructing the fitness function. Thus, the energy consumption among the nodes can be balanced. The experimental results demonstrated that the GECR performed better than other five methods. The GECR achieved the best load balancing with the lowest variances in the loads on the cluster heads under different scenarios. In addition, the GECR was the most energy-efficient with the lowest average energy consumed by the cluster heads and the lowest energy consumed by all the nodes. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Wang, Tianshu] Nanjing Univ Chinese Med, Sch Informat Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhang, Gongxuan; Vajdi, Ahmadreza] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
   [Yang, Xichen] Nanjing Normal Univ, Sch Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University of Chinese Medicine; Nanjing University of Science &
   Technology; Nanjing Normal University
RP Wang, TS (corresponding author), Nanjing Univ Chinese Med, Sch Informat Technol, Nanjing, Jiangsu, Peoples R China.
EM wangtianshu122@163.com
RI Zhang, Gongxuan/HKE-1007-2023
OI Zhang, Gongxuan/0000-0003-2925-5624
CR Abbasi AA, 2007, COMPUT COMMUN, V30, P2826, DOI 10.1016/j.comcom.2007.05.024
   Akyildiz IF, 2002, COMPUT NETW, V38, P393, DOI 10.1016/S1389-1286(01)00302-4
   Al-Karaki JN, 2004, IEEE WIREL COMMUN, V11, P6, DOI 10.1109/MWC.2004.1368893
   Ali NA, 2012, IEEE INT C COMP APPL, P303
   [Anonymous], 2010, 2010 5 INT S 4 COMM, DOI DOI 10.1109/ISVC.2010.5656252
   [Anonymous], 2013, Distributed Computing and Internet Technology, DOI DOI 10.1007/978-3-642-36071-8_
   Batra P. K., 2016, WIREL NETW, V22, P1
   Boyinbode O., 2010, IEEE COMPUTER SOC, P2826
   Chiti F, 2015, WIREL NETW, V21, P329, DOI 10.1007/s11276-014-0785-z
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Elhabyan RSY, 2015, J NETW COMPUT APPL, V52, P116, DOI 10.1016/j.jnca.2015.02.004
   Elhoseny M, 2015, IEEE COMMUN LETT, V19, P2194, DOI 10.1109/LCOMM.2014.2381226
   Faye S, 2016, IEEE T VEH TECHNOL, V65, P5720, DOI 10.1109/TVT.2015.2465811
   Gherbi C, 2016, ENERGY, V114, P647, DOI 10.1016/j.energy.2016.08.012
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Gupta G, 2003, 2003 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, VOLS 1-5, P1848
   Gupta S. K., 2015, WIRELESS PERS COMMUN, V83, P1
   Haas ZJ, 2006, IEEE ACM T NETWORK, V14, P479, DOI 10.1109/TNET.2006.876186
   Heiniger R. W., 2000, Proceedings of the 5th International Conference on Precision Agriculture, Bloomington, Minnesota, USA, 16-19 July, 2000, P1
   Heinzelman WB, 2002, IEEE T WIREL COMMUN, V1, P660, DOI 10.1109/TWC.2002.804190
   Intanagonwiwat C, 2003, IEEE ACM T NETWORK, V11, P2, DOI 10.1109/TNET.2002.808417
   Jamatia Anupam, 2015, International Journal of Modeling and Optimization, V5, P40, DOI 10.7763/IJMO.2015.V5.433
   Jianhui Zhang, 2008, 2008 International Wireless Communications and Mobile Computing Conference Conference, P1130, DOI 10.1109/IWCMC.2008.196
   Kennedy J., 1995, 1995 IEEE International Conference on Neural Networks Proceedings (Cat. No.95CH35828), P1942, DOI 10.1109/ICNN.1995.488968
   Kucuk K, 2007, 2007 FOURTH INTERNATIONAL SYMPOSIUM ON WIRELESS COMMUNICATION SYSTEMS, VOLS 1 AND 2, P489, DOI 10.1109/ISWCS.2007.4392440
   Kuila P, 2013, SWARM EVOL COMPUT, V12, P48, DOI 10.1016/j.swevo.2013.04.002
   Kuila P, 2014, ENG APPL ARTIF INTEL, V33, P127, DOI 10.1016/j.engappai.2014.04.009
   Kuila P, 2012, PROC TECH, V1, P771, DOI 10.1016/j.protcy.2012.10.093
   Kumar V., 2011, INT J COMPUT SCI ISS, V8
   Lai CC, 2007, IEEE C EVOL COMPUTAT, P3531, DOI 10.1109/CEC.2007.4424930
   Leu JS, 2015, IEEE COMMUN LETT, V19, P259, DOI 10.1109/LCOMM.2014.2379715
   Li WX, 2016, WIREL COMMUN MOB COM, V16, P47, DOI 10.1002/wcm.2494
   Liao Y, 2013, IEEE SENS J, V13, P1498, DOI 10.1109/JSEN.2012.2227704
   Lindsey S, 2002, AEROSP CONF PROC, P1125, DOI 10.1109/aero.2002.1035242
   Liu Jenn-Long., 2011, INT J MACH LEARN COM, V1, P79
   Low CP, 2008, COMPUT COMMUN, V31, P750, DOI 10.1016/j.comcom.2007.10.020
   Manjeshwar A., 2001, NULL
   Mohajerani A., 2016, WIREL NETW, P1
   Mohapatra N. P., 2012, INT P COMPUT SCI INF, V37, P72
   Peiravi A, 2013, INT J COMMUN SYST, V26, P114, DOI 10.1002/dac.1336
   Perkins C., 2003, Technical Report
   Qing L, 2006, COMPUT COMMUN, V29, P2230, DOI 10.1016/j.comcom.2006.02.017
   Raghuvanshi AS., 2011, INT J SENS NETW, V12
   RAJALAKSHMI B, 2017, 2017 INT C CIRCUIT P, P1
   Rajeswari K., 2017, IET COMMUN
   Rajeswari K, 2017, IET COMMUN, V11, P1927, DOI 10.1049/iet-com.2016.1074
   Rao PCS, 2017, WIREL NETW, V23, P433, DOI 10.1007/s11276-015-1156-0
   RejinaParvin J, 2015, IEEE SENS J, V15, P4264, DOI 10.1109/JSEN.2015.2416208
   Rostami A. S., 2017, J SUPERCOMPUT
   Shokouhifar M, 2015, AEU-INT J ELECTRON C, V69, P432, DOI 10.1016/j.aeue.2014.10.023
   Singh A., 2013, RES CELL INT J ENG S, V8, P1
   Singh S., 2016, WIRELESS PERS COMMUN, V86, P1
   Singh S. P., 2016, CRITICAL ANAL CLUSTE
   Sohn I, 2016, IEEE COMMUN LETT, V20, P558, DOI 10.1109/LCOMM.2016.2517017
   Wang T., 2016, Information Technology, V2016, P1, DOI [10.13274/j.cnki.hdzj.2016.08.001, DOI 10.13274/J.CNKI.HDZJ.2016.08.001]
   Yang X. S., 2008, Nature-Inspired Metaheuristic Algorithms, DOI DOI 10.1001/JAMA.1994.03520100096046
   Younis O, 2004, IEEE T MOBILE COMPUT, V3, P366, DOI 10.1109/TMC.2004.41
   Zhu ZM, 2016, IEEE T PARALL DISTR, V27, P1344, DOI 10.1109/TPDS.2015.2446459
NR 58
TC 74
Z9 76
U1 0
U2 17
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2018
VL 146
BP 196
EP 214
DI 10.1016/j.jss.2018.09.067
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC0LE
UT WOS:000451488900014
DA 2024-07-18
ER

PT J
AU Alam, T
   Raza, Z
AF Alam, Taj
   Raza, Zahid
TI Quantum genetic algorithm based scheduler for batch of precedence
   constrained jobs on heterogeneous computing systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Heterogeneous distributed systems; Workflow application; Batch
   scheduling; Load Balancing; Load Imbalance; Load balancing cost ratio
ID ANT COLONY OPTIMIZATION; TASK ALLOCATION; NETWORKS
AB Distributed systems are efficient means of realizing High-Performance Computing (HPC). They are used in meeting the demand of executing large-scale high-performance computational jobs. Scheduling the tasks on such computational resources is one of the prime concerns in the heterogeneous distributed systems. Scheduling requires optimizing either single objective or multiple objectives. Load Imbalance (LIB) and Load balancing Cost Ratio (LCR) are two such objectives. LIB and LCR are used in deciding the distribution of load over available resources for utilization and the computational cost respectively. Scheduling jobs with precedence constraints are NP-complete in nature. Scheduling requires either heuristic or metaheuristic approach for sub-optimal but acceptable solutions. Quantum computing is one such meta heuristic approach. It has proven to be promising in addressing the multi-objective scheduling problems with an effective exploration of the search space. This work proposes a dual-objective Quantum-inspired Genetic Algorithm based Load Balancing Strategy (QGLBS) for workflow application with the objective of optimizing both LIB and LCR. The DAG representation of the batch of jobs helps in effective exploitation of the parallelism available at the job level as well as the sub job level with the modules at the same level of the batch executing at the same time. The strategy ensures that the communication cost and the critical path are considered in making scheduling decisions. QGLBS exploits the features of Quantum Computing and Genetic Algorithm to establish the Pareto fronts using non-dominated sorting based on NSGA-II. Hypervolume measures are used to compare the results of the quality assessment of Pareto fronts. Simulation study on Gridsim ensures that the QGLBS approach works effectively for real life scenario with various workflow applications. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Alam, Taj] Jaypee Inst Informat Technol, Dept Comp Sci & Informat Technol, Noida 201309, India.
   [Raza, Zahid] Jawaharlal Nehru Univ, Sch Comp & Syst Sci, New Delhi 110067, India.
C3 Jaypee Institute of Information Technology (JIIT); Jawaharlal Nehru
   University, New Delhi
RP Alam, T (corresponding author), Jaypee Inst Informat Technol, Dept Comp Sci & Informat Technol, Noida 201309, India.
EM tajhashimi@gmail.com; zahidraza75@gmail.com
RI ALAM, TAJ/AAD-4816-2020
OI ALAM, TAJ/0000-0001-6081-1890
CR Abraham A., 2000, P 8 IEEE INT C ADV C, P1
   Alam T, 2016, INT J BIO-INSPIR COM, P1
   Alam T, 2016, CONCURR COMP-PRACT E, V28, P2729, DOI 10.1002/cpe.3737
   [Anonymous], 2007, INT C APPL COMP
   [Anonymous], 1999, EVOLUTIONARY ALGORIT
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Attiya G, 2006, J PARALLEL DISTR COM, V66, P1259, DOI 10.1016/j.jpdc.2006.06.006
   Balasangameshwara J, 2013, IEEE T COMPUT, V62, P990, DOI 10.1109/TC.2012.44
   Braun TD, 2001, J PARALLEL DISTR COM, V61, P810, DOI 10.1006/jpdc.2000.1714
   Canon LC, 2008, GRID COMPUTING: ACHIEVEMENTS AND PROSPECTS, P73, DOI 10.1007/978-0-387-09457-1_7
   Canon LC, 2010, IEEE T PARALL DISTR, V21, P532, DOI 10.1109/TPDS.2009.84
   Chen WN, 2009, IEEE T SYST MAN CY C, V39, P29, DOI 10.1109/TSMCC.2008.2001722
   Chiang CW, 2006, IEE P-COMPUT DIG T, V153, P373, DOI 10.1049/ip-cdt:20050196
   Chitra P, 2011, APPL SOFT COMPUT, V11, P2725, DOI 10.1016/j.asoc.2010.11.003
   CHOU TCK, 1982, IEEE T SOFTWARE ENG, V8, P401, DOI 10.1109/TSE.1982.235574
   Das S, 2008, STUD COMPUT INTELL, V116, P1, DOI 10.1007/978-3-540-78297-1_1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo JJ, 2014, CLUSTER COMPUT, V17, P169, DOI 10.1007/s10586-013-0325-0
   Gkatzikis L, 2013, IEEE WIREL COMMUN, V20, P24, DOI 10.1109/MWC.2013.6549280
   Gu JW, 2009, J MATH ANAL APPL, V355, P63, DOI 10.1016/j.jmaa.2008.12.065
   Han KH, 2002, IEEE T EVOLUT COMPUT, V6, P580, DOI 10.1109/TEVC.2002.804320
   HWANG JJ, 1989, SIAM J COMPUT, V18, P244, DOI 10.1137/0218016
   Ishibuchi H, 1998, IEEE T SYST MAN CY C, V28, P392, DOI 10.1109/5326.704576
   Iverson M.A., 1995, 4 HETEROGENEOUS COMP, P93
   Jiang YC, 2016, IEEE T PARALL DISTR, V27, P585, DOI 10.1109/TPDS.2015.2407900
   Jiang YC, 2014, IEEE T PARALL DISTR, V25, P2743, DOI 10.1109/TPDS.2013.254
   Jiang YC, 2012, IEEE T SYST MAN CY A, V42, P1040, DOI 10.1109/TSMCA.2012.2186439
   Jiang YC, 2011, IEEE T SYST MAN CY A, V41, P1107, DOI 10.1109/TSMCA.2011.2114343
   Jiang YC, 2009, IEEE T PARALL DISTR, V20, P641, DOI 10.1109/TPDS.2008.133
   Karatza HD, 2001, J SYST SOFTWARE, V56, P203, DOI 10.1016/S0164-1212(00)00098-4
   Kim DH, 2007, INFORM SCIENCES, V177, P3918, DOI 10.1016/j.ins.2007.04.002
   Knowles J., 1999, Proceedings of the 1999 Congress on Evolutionary Computation-CEC99 (Cat. No. 99TH8406), P98, DOI 10.1109/CEC.1999.781913
   Laalaoui Y, 2010, INT J BIO-INSPIR COM, V2, P383, DOI 10.1504/IJBIC.2010.037018
   Li YW, 2004, LECT NOTES COMPUT SC, V3314, P280
   LIN HC, 1992, IEEE T SOFTWARE ENG, V18, P148, DOI 10.1109/32.121756
   Liu JM, 2005, IEEE T PARALL DISTR, V16, P586, DOI 10.1109/TPDS.2005.76
   Livny M., 1982, Proceedings of the Computer Network Performance Symposium, P47, DOI DOI 10.1145/1010631.801689
   Lukowicz P, 2012, IEEE PERVAS COMPUT, V11, P32, DOI 10.1109/MPRV.2011.82
   Miao YJ, 2009, HIS 2009: 2009 NINTH INTERNATIONAL CONFERENCE ON HYBRID INTELLIGENT SYSTEMS, VOL 1, PROCEEDINGS, P399, DOI 10.1109/HIS.2009.84
   Niu Q, 2010, LECT NOTES COMPUT SC, V6329, P21, DOI 10.1007/978-3-642-15597-0_3
   Pandey S, 2010, INT CON ADV INFO NET, P400, DOI 10.1109/AINA.2010.31
   Papazachos Z. C, 2001, J SYST SOFTW, V83, P1346
   Prakash S., 2014, INT J APPL EVOLUTION, V5, P58
   Prakash S, 2013, J SUPERCOMPUT, V65, P742, DOI 10.1007/s11227-012-0864-9
   Prakash S, 2012, INT J GRID HIGH PERF, V4, P67, DOI 10.4018/jghpc.2012010105
   Rao WX, 2010, IEEE T PARALL DISTR, V21, P1011, DOI 10.1109/TPDS.2009.136
   Raza Zahid, 2010, International Journal of Applied Evolutionary Computation, V1, P74, DOI 10.4018/jaec.2010040104
   Saovapakhiran B., 2011, P IEEE GLOB TEL C, P1, DOI DOI 10.1109/GL0C0M.2011.6133611
   Shahid M, 2015, J SYST SOFTWARE, V108, P110, DOI 10.1016/j.jss.2015.06.016
   Talukder AKMKA, 2009, CONCURR COMP-PRACT E, V21, P1742, DOI 10.1002/cpe.1417
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Tsuchiya T, 1998, MICROPROCESS MICROSY, V22, P197, DOI 10.1016/S0141-9331(98)00079-9
   Vidyarthi DP, 2009, SCHEDULING IN DISTRIBUTED COMPUTING SYSTEMS: ANALYSIS, DESIGN AND MODELS, P1, DOI 10.1007/978-0-387-74483-4
   Wu CG, 2007, LECT NOTES COMPUT SC, V4431, P562
   Wu M.-Y., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P330, DOI 10.1109/71.80160
   Xhafa F., 2007, International Journal of Web and Grid Services, V3, P19, DOI 10.1504/IJWGS.2007.012635
   Xhafa Fatos, 2007, International Journal of Web and Grid Services, V3, P219, DOI 10.1504/IJWGS.2007.014075
   Xhafa F, 2010, FUTURE GENER COMP SY, V26, P608, DOI 10.1016/j.future.2009.11.005
   Xue Y, 2006, IEEE T MOBILE COMPUT, V5, P347, DOI 10.1109/TMC.2006.1599404
   Ye DY, 2013, IEEE T PARALL DISTR, V24, P1042, DOI 10.1109/TPDS.2012.213
   Ye GC, 2006, GCC 2006: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING WORKSHOPS, PROCEEDINGS, P504
   Yu J, 2007, 2007 8TH IEEE/ACM INTERNATIONAL CONFERENCE ON GRID COMPUTING, P122
   Zhang Ya-ni, 2009, Proceedings of the 2009 Asia Communications and Photonics Conference and Exhibition (ACP 2009)
   Zhangjun Wu, 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P184, DOI 10.1109/CIS.2010.46
   Zhu ZM, 2016, IEEE T PARALL DISTR, V27, P1344, DOI 10.1109/TPDS.2015.2446459
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 66
TC 17
Z9 18
U1 2
U2 26
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2018
VL 135
BP 126
EP 142
DI 10.1016/j.jss.2017.10.001
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FQ4DV
UT WOS:000418308800009
DA 2024-07-18
ER

PT J
AU Pramila, A
   Keskinarkaus, A
   Seppänen, T
AF Pramila, Anu
   Keskinarkaus, Anja
   Seppanen, Tapio
TI Increasing the capturing angle in print-cam robust watermarking
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Focal stack optimization; Mobile phone application; Watermark
   application; Camera phone; Computational photography
AB It is nowadays more probable that a print media is captured and shared with a mobile phone than with a scanner. The reasons for photographing the print range from intention of copying the image to simply sharing an interesting add with friends. Watermarking offers a solution for carrying side information in the images, and if the watermarking method being used is robust to the print-cam process, the information can be read with a mobile phone camera. In this paper, we present a print-cam robust watermarking method that is also implemented on a mobile phone and evaluated with user tests. Especially, the lens focusing problem when the picture is captured in a wide angle with respect to the printout is addressed. The results show that the method is highly robust to capturing the watermark without errors in angles up to 60 degrees with processing times that are acceptable for real-life applications. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Pramila, Anu; Keskinarkaus, Anja; Seppanen, Tapio] Univ Oulu, Ctr Machine Vis & Signal Anal, Physiol Signal Anal Team, Oulu, Finland.
C3 University of Oulu
RP Pramila, A (corresponding author), Univ Oulu, Ctr Machine Vis & Signal Anal, Physiol Signal Anal Team, Oulu, Finland.
EM anu.pramila@oulu.fi
CR Adams A, 2010, ACM T GRAPHIC, V29, DOI 10.1145/1778765.1778766
   Alcantarilla PF, 2013, PROCEEDINGS OF THE BRITISH MACHINE VISION CONFERENCE 2013, DOI 10.5244/C.27.13
   [Anonymous], 2007, P FINN SIGN PROC S
   BURT PJ, 1983, IEEE T COMMUN, V31, P532, DOI 10.1109/TCOM.1983.1095851
   Chou CH, 1995, IEEE T CIRC SYST VID, V5, P467, DOI 10.1109/76.475889
   Delgado-Guillen LA, 2013, MIDWEST SYMP CIRCUIT, P1363, DOI 10.1109/MWSCAS.2013.6674909
   Digimarc, 2015, DISC APPL
   Eerola T, 2010, J IMAGING SCI TECHN, V54, DOI 10.2352/J.ImagingSci.Technol.2010.54.1.010201
   Eerola T, 2009, LECT NOTES COMPUT SC, V5575, P99, DOI 10.1007/978-3-642-02230-2_11
   FISCHLER MA, 1981, COMMUN ACM, V24, P381, DOI 10.1145/358669.358692
   Grewenig S, 2010, LECT NOTES COMPUT SC, V6376, P533
   Heckbert PaulS., 1997, Technical report
   Katayama A., 2004, P 3 INT C MOB UB MUL, P109
   Kim W, 2006, LECT NOTES COMPUT SC, V4261, P106
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Pramila Anu, 2008, Proceedings of the Fifth IASTED International Conference on Signal Processing, Pattern Recognition, and Applications, P60
   Pramila A, 2017, MULTIMED TOOLS APPL, V76, P16063, DOI 10.1007/s11042-016-3895-z
   Pramila A, 2012, SIGNAL IMAGE VIDEO P, V6, P211, DOI 10.1007/s11760-011-0211-2
   REED IS, 1960, J SOC IND APPL MATH, V8, P300, DOI 10.1137/0108018
   Sakurikar P, 2014, IEEE COMPUT SOC CONF, P138, DOI 10.1109/CVPRW.2014.26
   Solh M., 2014, P IS T SPIE EL IM IN
   SUZUKI S, 1985, COMPUT VISION GRAPH, V30, P32, DOI 10.1016/0734-189X(85)90016-7
   Vaquero Daniel., 2011, 2011 IEEE Workshop on applications of computer vision (WACV), P511, DOI DOI 10.1109/WACV.2011.5711547.19
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Weickert J, 2016, INT J COMPUT VISION, P1
   Yamana T., 2013, Proceedings of the Ninth Symposium of the International Working Group on Plant Viruses with Fungal Vectors, Obihiro, Hokkaido, Japan, 19-22 August 2013, P49
   Zhang C, 2013, IEEE IMAGE PROC, P1272, DOI 10.1109/ICIP.2013.6738262
NR 27
TC 19
Z9 20
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2018
VL 135
BP 205
EP 215
DI 10.1016/j.jss.2017.10.029
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FQ4DV
UT WOS:000418308800014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU de Oliveira, RP
   Santos, AR
   de Almeida, ES
   Gomes, GSD
AF de Oliveira, Raphael Pereira
   Santos, Alcemir Rodrigues
   de Almeida, Eduardo Santana
   da Silva Gomes, Gecynalda Soares
TI Evaluating Lehman's Laws of software evolution within software product
   lines industrial projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product lines; Software evolution; Lehman's Laws of software
   evolution; Empirical study
AB The evolution of a single system is a task where we deal with the modification of a single product. Lehman's Laws of software evolution were broadly evaluated within this type of system and the results shown that these single systems evolve according to his stated laws over time. However, considering Software Product Lines (SPL), we need to deal with the modification of several products which include common, variable, and product specific assets. Because of the several assets within SPL, each stated law may have a different behavior for each asset kind. Nonetheless, we do not know if all of the stated laws are still valid for SPL since they were partially evaluated in this context. Thus, this paper details an empirical investigation where Lehman's Laws (LL) of Software Evolution were used in two SPL industrial projects to understand how the SPL assets evolve over time. These projects are related to an application in the medical domain and another in the financial domain, developed by medium-size companies in Brazil. They contain a total of 71 modules and a total of 71.442 bug requests in their tracking system, gathered along the total of more than 10 years. We employed two techniques - the KPSS Test and linear regression analysis, to assess the relationship between LL and SPL assets. Results showed that one law was completely supported (conservation of organizational stability) for all assets within both empirical studies. Two laws were partially supported for both studies depending on the asset type (continuous growth and conservation of familiarity). Finally, the remaining laws had differences among their results for all assets (continuous change, increasing complexity, and declining quality). (C) 2016 Elsevier Inc. All rights reserved.
C1 [de Oliveira, Raphael Pereira] Fed Inst Sergipe, Campus Estancia Rua Cafe Filho 260, BR-49200000 Estancia, Sergipe, Brazil.
   [Santos, Alcemir Rodrigues; de Almeida, Eduardo Santana; da Silva Gomes, Gecynalda Soares] Univ Fed Bahia, Campus Ondina,Av Adhemar Barros S-N, BR-40170110 Salvador, BA, Brazil.
C3 Instituto Federal de Sergipe (IFS); Universidade Federal da Bahia
RP de Oliveira, RP (corresponding author), Fed Inst Sergipe, Campus Estancia Rua Cafe Filho 260, BR-49200000 Estancia, Sergipe, Brazil.
EM raphael.oliveira@ifs.edu.br; alcemirsantos@dcc.ufba.br; esa@dcc.ufba.br;
   gecynalda@yahoo.com
RI Santos, Alcemir Rodrigues/Q-6729-2019; de Almeida, Eduardo/JJC-2493-2023
OI Santos, Alcemir Rodrigues/0000-0001-8880-2996; Pereira de Oliveira,
   Raphael/0000-0003-4046-5198
FU National Institute of Science and Technology for Software Engineering
   (INES2); CNPq; FAPESB
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES<SUP>2</SUP>), funded by
   CNPq and FAPESB.
CR Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2010, P 1 INT WORKSH REPL
   Bailetti AJ, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P151, DOI 10.1109/IRI.2004.1431452
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Botterweck Goetz., 2014, EVOLVING SOFTWARE SY, P265, DOI DOI 10.1007/978-3-642-45398-4_9
   Cook S, 2006, J SOFTW MAINT EVOL-R, V18, P1, DOI 10.1002/smr.314
   Deelstra S, 2004, PROC IEEE INT CONF S, P458, DOI 10.1109/ICSM.2004.1357835
   Godfrey MW, 2014, J SOFTW-EVOL PROC, V26, P613, DOI 10.1002/smr.1636
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gonzalez-Barahona JM, 2014, J SOFTW-EVOL PROC, V26, P589, DOI 10.1002/smr.1615
   Gupta A, 2010, J SOFTW MAINT EVOL-R, V22, P359, DOI 10.1002/smr.459
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   KWIATKOWSKI D, 1992, J ECONOMETRICS, V54, P159, DOI 10.1016/0304-4076(92)90104-Y
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lientz B P., 1980, Software Maintenance Management
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGregor J. D., 2003, TECHNICAL REPORT
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   Mens T., 2008, Software Evolution
   Neves L, 2015, J SYST SOFTWARE, V106, P42, DOI 10.1016/j.jss.2015.04.024
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oliveira R. P., 2015, P 14 INT C SOFTW REU, P42, DOI 10.1007/978-3-319-14130-54
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Yan X., 2009, LINEAR REGRESSION AN, DOI DOI 10.1142/6986
NR 33
TC 7
Z9 8
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2017
VL 131
BP 347
EP 365
DI 10.1016/j.jss.2016.07.038
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD6SF
UT WOS:000407657500020
OA Green Published
DA 2024-07-18
ER

PT J
AU Raemaekers, S
   van Deursen, A
   Visser, J
AF Raemaekers, S.
   van Deursen, A.
   Visser, J.
TI Semantic versioning and impact of breaking changes in the Maven
   repository
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Semantic versioning; Breaking changes; Software libraries
ID API-EVOLUTION; SUPPORT; CATCHUP; JAVA
AB Systems that depend on third-party libraries may have to be updated when updates to these libraries become available in order to benefit from new functionality, security patches, bug fixes, or API improvements. However, often such changes come with changes to the existing interfaces of these libraries, possibly causing rework on the client system. In this paper, we investigate versioning practices in a set of more than 100,000 jar files from Maven Central, spanning over 7 years of history of more than 22,000 different libraries. We investigate to what degree versioning conventions are followed in this repository. Semantic versioning provides strict rules regarding major (breaking changes allowed), minor (no breaking changes allowed), and patch releases (only backward-compatible bug fixes allowed). We find that around one third of all releases introduce at least one breaking change. We perform an empirical study on potential rework caused by breaking changes in library releases and find that breaking changes have a significant impact on client libraries using the changed functionality. We find out that minor releases generally have larger release intervals than major releases. We also investigate the use of deprecation tags and find out that these tags are applied improperly in our dataset. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Raemaekers, S.] ING, Amsterdam, Netherlands.
   [Raemaekers, S.; van Deursen, A.] Delft Univ Technol, Delft, Netherlands.
   [Visser, J.] Software Improvement Grp, Amsterdam, Netherlands.
C3 ING Group; Delft University of Technology
RP Raemaekers, S (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM stevenraemaekers@gmail.com; arie.vandeursen@tudelft.nl; j.visser@sig.eu
RI Visser, Joost/AAD-9423-2019; van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312; Visser, Joost/0000-0003-0158-3095
CR [Anonymous], 2008, MODERN METHODS ROBUS
   Badri L., 2005, P 12 AS PAC SOFTW EN
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Bauml J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/SEAA.2009.80
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Kapur P, 2010, ACM SIGPLAN NOTICES, V45, P726, DOI 10.1145/1932682.1869518
   Lehnert S., 2011, TECHNICAL REPORT
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Ossher J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P41, DOI 10.1109/WCRE.2012.14
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Ren XX, 2005, PROC INT CONF SOFTW, P664, DOI 10.1145/1062455.1062598
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Romano D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P392, DOI 10.1109/ICWS.2012.29
   Savga Ilie, 2007, P 6 INT C GEN PROGR, P175
   Tempero E., 2008, P 1 INT WORKSH HOT T
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 28
TC 46
Z9 50
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2017
VL 129
BP 140
EP 158
DI 10.1016/j.jss.2016.04.008
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EX2AU
UT WOS:000403028700009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Flouris, I
   Giatrakos, N
   Deligiannakis, A
   Garofalakis, M
   Kamp, M
   Mock, M
AF Flouris, Ioannis
   Giatrakos, Nikos
   Deligiannakis, Antonios
   Garofalakis, Minos
   Kamp, Michael
   Mock, Michael
TI Issues in complex event processing: Status and prospects in the Big Data
   era
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Complex event processing; Cloud computing; Predictive analytics
AB Many Big Data technologies were built to enable the processing of human generated data, setting aside the enormous amount of data generated from Machine-to-Machine (M2M) interactions and Internet-of Things (IoT) platforms. Such interactions create real-time data streams that are much more structured, often in the form of series of event occurrences. In this paper, we provide an overview on the main research issues confronted by existing Complex Event Processing (CEP) techniques, with an emphasis on query optimization aspects. Our study expands on both deterministic and probabilistic event models and spans from centralized to distributed network settings. In that, we cover a wide range of approaches in the CEP domain and review the current status of techniques that tackle efficient query processing. These techniques serve as a starting point for developing Big Data oriented CEP applications. Therefore, we further study the issues that arise upon trying to apply those techniques over Big Data enabling technologies, as is the case with cloud platforms. Furthermore, we expand on the synergies among Predictive Analytics and CEP with an emphasis on scalability and elasticity considerations in cloud platforms with potentially dispersed resource pools. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Flouris, Ioannis; Giatrakos, Nikos; Deligiannakis, Antonios; Garofalakis, Minos] Tech Univ Crete, Sch Elect & Comp Engn, Univ Campus, GR-73100 Khania, Greece.
   [Kamp, Michael; Mock, Michael] Fraunhofer IAIS, D-53754 St Augustin, Germany.
RP Giatrakos, N (corresponding author), Tech Univ Crete, Sch Elect & Comp Engn, Univ Campus, GR-73100 Khania, Greece.
EM gflouris@softnet.tuc.gr; ngiatrakos@softnet.tuc.gr;
   adeli@softnet.tuc.gr; minos@softnet.tuc.gr; michael.kamp@iais.fhg.de;
   michael.mock@iais.fhg.de
RI Deligiannakis, Antonios/AAO-5194-2021; Kamp, Michael/ACC-1261-2022
OI Kamp, Michael/0000-0001-6231-0694; Giatrakos, Nikos/0000-0002-8218-707X
FU European Commission [ICT-FP7-FERARI-619491]
FX This work was supported by the European Commission under
   ICT-FP7-FERARI-619491 (Flexible Event pRocessing for big dAta
   aRchItectures).
CR Agrawal Jagrati, 2008, P SIGMOD
   Ahmad Yanif., 2005, Proceedings of the 2005 ACM SIGMOD international conference on Management of data, SIGMOD '05, P882, DOI DOI 10.1145/1066157.1066274
   Akdere M., 2008, P VLDB
   Alevizos E., 2015, EDBT WORKSH
   Anderson T, 2008, THEORY AND PRACTICE OF ONLINE LEARNING, 2ND EDITION, P343
   [Anonymous], 2011, EVENT PROCESSING ACT
   Artikis A., 2012, P 6 ANN ACM INT C DI, P32
   Balkesen Cagri, 2013, 7 ACM INT C DISTR EV, P3, DOI 10.1145/2488222.2488257
   Barga R.S., 2007, P 3 BIENN C INN DAT
   Calvanese D., 2000, WHAT IS QUERY REWRIT, P51
   Chakravarthy S, 2009, ADV DATABASE SYST, V36, P187, DOI 10.1007/978-0-387-71003-7_9
   Chandrasekaran Sirish, 2003, ACM SIGMOD INT C MAN, P668, DOI 10.1145/872757.872857
   Chang J.H., 2003, 9 ACM C KNOWL DISC D, P487, DOI [10.1145/956750.956807, DOI 10.1145/956750.956807]
   Cugola G., 2014, COMPUTING, P1
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Cugola G, 2012, J SYST SOFTWARE, V85, P1709, DOI 10.1016/j.jss.2012.03.056
   Dekel O, 2012, J MACH LEARN RES, V13, P165
   Demeers A., 2007, P 3 BIENN C INN DAT
   Desobry F, 2005, IEEE T SIGNAL PROCES, V53, P2961, DOI 10.1109/TSP.2005.851098
   Doulamis N.D., 2015, IEEE T CYBERN, V46, P1
   Doulamis ND, 2014, IEEE T COMPUT, V63, P461, DOI 10.1109/TC.2012.222
   Flouris I., 2016, SIGMOD IN PRESS
   Flouris I., 2015, 1 IEEE INT WORKSH RE
   Gabel M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P319, DOI 10.1145/2783258.2783349
   Gartner T., 2014, P NIPS WORKSH DISCR
   Giatrakos N., 2012, SIGMOD '12, P265
   Giatrakos N, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2602137
   Hirzel Martin., 2012, Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems, DEBS'12, P191, DOI 10.1145/2335484.2335506
   Kamp Michael, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8724, P623, DOI 10.1007/978-3-662-44848-9_40
   Kamp M., 2014, P 7 NIPS WORKSH OPT
   Keren D, 2012, IEEE T KNOWL DATA EN, V24, P1520, DOI 10.1109/TKDE.2011.102
   Kolchinsky Ilya, 2015, P 2015 ACM IN 15, P34, DOI [10.1145/2675743.2771832, DOI 10.1145/2675743.2771832]
   Kristan M, 2011, PATTERN RECOGN, V44, P2630, DOI 10.1016/j.patcog.2011.03.019
   Lajos Jeno F., 2012, P 5 BALKAN C INFORMA, P26, DOI DOI 10.1145/2371316.2371323
   Lehrig S, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P83, DOI 10.1145/2737182.2737185
   Li M., 2014, P 28 ANN C NEURAL IN, P19
   Mei Y., 2009, P SIGMOD
   Miwa Makoto, 2010, Journal of Bioinformatics and Computational Biology, V8, P131, DOI 10.1142/S0219720010004586
   Rabinovich E., 2011, P DEBS
   Re C, 2008, 2008 ACM SIGMOD INT, DOI DOI 10.1145/1376616.1376688
   Schultz-Moller N. P., 2009, P DEBS
   Seipel Dietmar, 2013, New Frontiers in Mining Complex Patterns. First International Workshop, NFMCP 2012 Held in Conjunction with ECML-PKDD 2012. Revised Selected Papers, P33, DOI 10.1007/978-3-642-37382-4_3
   Sharfman I, 2007, ACM T DATABASE SYST, V32, DOI 10.1145/1292609.1292613
   Shen Z., 2008, P DAT ENG WORKSH DEW
   Siegel E., 2013, Predictive analytics: the power to predict who will click, buy, lie, or die
   Tang K, 2012, PROC CVPR IEEE, P1250, DOI 10.1109/CVPR.2012.6247808
   Toth G., 2010, P 4 ACM INT C DISTR, P95
   Wang YH, 2013, COMPUT MATH APPL, V66, P1808, DOI 10.1016/j.camwa.2013.06.032
   Wasserkrug S., 2012, ABS12071427 CORR
   Wasserkrug S, 2008, 2 INT C DISTRIBUTED, DOI [DOI 10.1145/1385989, 10.1145/1385989.1386022, DOI 10.1145/1385989.1386022]
   Wasserkrug S, 2012, IEEE T KNOWL DATA EN, V24, P45, DOI 10.1109/TKDE.2010.204
   Wu E., 2006, P SIGMOD
   Xu Chuanfei, 2010, Proceedings of the 12th Asia Pacific Web Conference (APWEB 2010), P361, DOI 10.1109/APWeb.2010.56
   Zampoglou M., 2014, BIG DATA INTERNET TH, V546, P447
   Zhang H., 2014, P 2014 ACM SIGMOD IN, P217
   Zhang HP, 2010, PROC VLDB ENDOW, V3, P244
   Zhou Y., 2014, FEED CHINA, V2014, P17
   Zhu Yali., 2004, P ACM INT C MANAGEME, P431
NR 58
TC 69
Z9 74
U1 1
U2 54
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2017
VL 127
BP 217
EP 236
DI 10.1016/j.jss.2016.06.011
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP9JD
UT WOS:000397689000015
DA 2024-07-18
ER

PT J
AU Su, Y
   Luarn, P
   Lee, YS
   Yen, SJ
AF Su, Yihsiung
   Luarn, Pin
   Lee, Yue-Shi
   Yen, Show-Jane
TI Creating an invalid defect classification model using text mining on
   server development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Invalid defect; Classification; Text mining; Server development; Project
   management; BIOS
ID PATTERNS; RISK
AB Invalid defects, which are often overlooked, reduce development productivity and efficiency. This study used exploratory study and text mining to answer three research questions related to invalid defects in two research stages.
   In the first stage, we filtered 231 invalid BIOS (basic input/output system) defects from the 3347 defects of three server projects. These defects were from numerous function areas owned by virtual teams located in Taiwan, China, and the United States. Results indicated that BIOS firmware demonstrates the maximum number of defects and invalid defects. This firmware accounted for 43.3% defects and 33% invalid defects in server development. Results determined that invalid defect classification that includes four types, namely, working as designed (WAD), user error, duplicate, and others. All of these types can be grouped under the term WUDO. WAD accounts for the maximum of 45% of invalid defects in the WUDO classification. In the second stage, this study determined a stable classification algorithm, namely, decision tree C4.5, to classify the invalid defect types.
   This study helps project teams for information technology products to classify the different invalid defect types that developers and testers face. Results can improve project team productivity and mitigate project risks in project management. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Su, Yihsiung] Natl Taiwan Univ Sci & Technol, Grad Inst Management, 2F,196 Hopien N St, New Taipei 241, Taiwan.
   [Luarn, Pin] Natl Taiwan Univ Sci & Technol, Dept Business Adm, 43,Keelung Rd,Sec 4, Taipei 10607, Taiwan.
   [Lee, Yue-Shi; Yen, Show-Jane] Ming Chuan Univ, Dept Comp Sci & Informat Engn, 5 The Ming Rd, Gwei Shan Dist 333, Taoyuan County, Taiwan.
C3 National Taiwan University of Science & Technology; National Taiwan
   University of Science & Technology
RP Su, Y (corresponding author), Natl Taiwan Univ Sci & Technol, Grad Inst Management, 2F,196 Hopien N St, New Taipei 241, Taiwan.
EM simonyhsu@gmail.com; luarn@ba.ntust.edu.tw; leeys@mail.mcu.edu.tw;
   sjyen@mail.mcu.edu.tw
RI Luarn, Pin/I-6269-2012
OI Luarn, Pin/0000-0003-4561-5474
CR [Anonymous], 2013, GUIDE PROJECT MANAGE, V5
   [Anonymous], 2010, CMMI DEV VERS 1 3
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chen Xiao-Ping, 2008, EMPIRICAL METHODS RE
   Cooper D.R., 2014, BUSINESS RES METHODS
   de Campos LM, 2004, INFORM PROCESS MANAG, V40, P727, DOI 10.1016/j.ipm.2004.03.001
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Doran Mark, 2011, Intel Technology Journal, V15, P8
   Fowler M., 2001, Software Development, V9, P28
   Freedman D. A., 2009, STAT MODELS THEORY P
   Han J, 2012, MOR KAUF D, P1
   Issa AA, 2009, SOFTWARE QUAL J, V17, P263, DOI 10.1007/s11219-009-9076-9
   Kantardzic M., 2011, Data Mining: Concepts, Models, Methods, and Algorithms
   Kaplan C., 1993, QUALITY, V32, P51
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Koumenides C.L., 2012, P 1 JOINT INT WORKSH
   Kumar V., 2006, Introduction to Data Mining
   Langley Pat., 1992, ANAL BAYESIAN CLASSI
   Larsen G, 1999, COMMUN ACM, V42, P38, DOI 10.1145/317665.317674
   Lewis D.D, 1998, EUR C MACH LEARN, P4
   Li JY, 2012, IEEE SOFTWARE, V29, P59, DOI 10.1109/MS.2011.24
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Metsis V., 2008, 3 C EM ANT
   Miner G, 2012, PRACTICAL TEXT MINING AND STATISTICAL ANALYSIS FOR NON-STRUCTURED TEXT DATA APPLICATIONS, P1
   Neapolitan R, 2007, PROBABILISTIC METHOD
   Olson D., 2006, Introduction to Business Data Mining
   Oshana R, 2013, SOFTWARE ENGINEERING FOR EMBEDDED SYSTEMS: METHODS, PRACTICAL TECHNIQUES, AND APPLICATIONS, P1, DOI 10.1016/B978-0-12-415917-4.00001-3
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rish I., 2001, ICML 01
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   SCHMIDT DC, 1995, COMMUN ACM, V38, P65, DOI 10.1145/226239.226255
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sommerville Ian, 2011, Software engineering
   Sun J., 2011, WHY ARE BUG REPORTS, P407, DOI [10.1109/icst.2011.43, DOI 10.1109/ICST.2011.43]
   Trucco P, 2008, RELIAB ENG SYST SAFE, V93, P845, DOI 10.1016/j.ress.2007.03.035
   TRUETT J, 1967, J CHRON DIS, V20, P511, DOI 10.1016/0021-9681(67)90082-3
   Wahli U., 2004, Software Configuration Managemenat
   WANG D, 2011, EMP STUD MEAS IMPR, P434, DOI DOI 10.1109/ESEM.2011.62
   Witten IH, 2011, MOR KAUF D, P1
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
NR 42
TC 4
Z9 5
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2017
VL 125
BP 197
EP 206
DI 10.1016/j.jss.2016.12.005
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM5NX
UT WOS:000395359500012
DA 2024-07-18
ER

PT J
AU Liu, L
   Zhou, Q
   Liu, JL
   Cao, ZQ
AF Liu, Lin
   Zhou, Qing
   Liu, Jilei
   Cao, Zhanqiang
TI Requirements cybernetics: Elicitation based on user behavioral data
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Requirements elicitation; Cybernetics; Data analysis
AB Users' behavioral data provides important cue for product improvement. Today's web based applications collect various kinds of service data, which is an ideal source of information for product designers to better understand users' needs and behaviors. This paper first discusses the types of data collected so far, and then such data-driven requirements elicitation process is formulated as a feedback control system, where the classical requirements elicitation philosophy turns into a continuous optimization to user behavioral models. To this end, it is important to know how the data collection function reflects user behavior, and how specific data analysis approaches help making design decisions. This is an attempt to seek practical synergies between the two disciplines of requirements and cybernetics, to explore the possibilities of formulating problems in requirements with concepts and frameworks from cybernetics, and understand to what extent that known research results from cybernetics can be applied to address requirements problems. In particular, control frameworks for the user data driven requirements elicitation process are experimented, and potential control variables are discussed. We use two example cases to illustrate the proposed approach, an online dictionary service and a mobile music player service. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Liu, Lin; Zhou, Qing; Liu, Jilei; Cao, Zhanqiang] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
   [Zhou, Qing] Alibaba China Co Ltd, Hangzhou 311121, Zhejiang, Peoples R China.
   [Liu, Jilei] Baidu Corp, Beijing 100085, Peoples R China.
   [Cao, Zhanqiang] Peking Univ, Sch Stomatol, Beijing 100081, Peoples R China.
C3 Tsinghua University; Alibaba Group; Baidu; Peking University
RP Liu, L (corresponding author), Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
EM linliu@tsinghua.edu.cn
RI Zhou, Qing/HLG-7706-2023
FU National Natural Science Foundation of China [61432020]; National
   Science and Technology Supporting Program [2015BAH14F02]
FX Financial support from National Natural Science Foundation of China
   (Project no. 61432020) and National Science and Technology Supporting
   Program (Project no. 2015BAH14F02) are gratefully acknowledged.
CR [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], P IEEE INT C DAT MIN
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Bikakis A, 2008, COMM COM INF SC, V11, P14, DOI 10.1007/978-3-540-85379-4_3
   Cai KY, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/HASE.2002.1173129
   Cangussu J.W., 2008, WILEY ENCY COMPUT SC
   Faulkner L, 2003, BEHAV RES METH INS C, V35, P379, DOI 10.3758/BF03195514
   Huang G, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4926-2
   Kokar MM, 1999, IEEE INTELL SYST APP, V14, P37, DOI 10.1109/5254.769883
   Krueger RA, 2000, FOCUS GROUPS PRACTIC, V3rd
   Lv JP, 2014, IEEE T SOFTWARE ENG, V40, P396, DOI 10.1109/TSE.2014.2310194
   Morita M., 1994, P 17 ANN INT ACM SIG, P272
   Nielsen J., 1990, SIGCHI Bulletin, P249
   Patten M.L., 2001, QUESTIONNAIRE RES PR
   Reeder R.W., 2001, CHI 01 EXTENDED ABST, P19
   Spool J., 2001, CHI 01 EXTENDED ABST, P285, DOI 10.1145/634067.634236
   Wiener N., 1948, Cybernetics or Control and Communication in the Animal and the Machine
   Xu H, 2005, P INT COMP SOFTW APP, P89
   Zukerman I, 2001, USER MODEL USER-ADAP, V11, P5, DOI 10.1023/A:1011175525451
NR 19
TC 18
Z9 22
U1 1
U2 25
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2017
VL 124
BP 187
EP 194
DI 10.1016/j.jss.2015.12.030
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EG1XH
UT WOS:000390827200011
DA 2024-07-18
ER

PT J
AU Usman, M
   Iqbal, MZ
   Khan, MU
AF Usman, Muhammad
   Iqbal, Muhammad Zohaib
   Khan, Muhammad Uzair
TI A product-line model-driven engineering approach for generating
   feature-based mobile applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mobile applications; Software product-line engineering; Feature model
ID VARIABILITY
AB A significant challenge faced by the mobile application industry is developing and maintaining multiple native variants of mobile applications to support different mobile operating systems, devices and varying application functional requirements. The current industrial practice is to develop and maintain these variants separately. Any potential change has to be applied across variants manually, which is neither efficient nor scalable. We consider the problem of supporting multiple platforms as a 'software product-line engineering' problem. The paper proposes a novel application of product-line model-driven engineering to mobile application development and addresses the key challenges of feature-based native mobile application variants for multiple platforms. Specifically, we deal with three types of variations in mobile applications: variation due to operation systems and their versions, software and hardware capabilities of mobile devices, and functionalities offered by the mobile application. We develop a tool MOPPET that automates the proposed approach. Finally, the results of applying the approach on two industrial case studies show that the proposed approach is applicable to industrial mobile applications and have potential to significantly reduce the development effort and time. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Usman, Muhammad; Iqbal, Muhammad Zohaib; Khan, Muhammad Uzair] Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
RP Usman, M (corresponding author), Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
EM m.usman@questlab.pk; zohaib.iqbal@nu.edu.pk; uzair.khan@nu.edu.pk
RI Khan, Muhammad Sarwar/Q-8307-2019
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
CR Albassam E, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING: ENGINEERING COMPUTER GAMES TO ENABLE POSITIVE, PROGRESSIVE CHANGE (GAS), P1, DOI 10.1109/GAS.2013.6632582
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], INT J SOFTWARE ENG
   [Anonymous], 1990, DTIC DOCUMENT
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], OBJ CONSTR LANG OCL
   [Anonymous], 2002, Use Case Modeling
   Batory Don., 2005, FEATURE MODELS GRAMM
   Benouda Hanane, 2016, International Conference on Mobile and Wireless Technologies (ICMWT2016). LNEE 391, P241, DOI 10.1007/978-981-10-1409-3_27
   Booch G., 2006, OBJECT ORIENTED ANAL
   Botturi G., 2013, Proceedings of the 2013 Forum on specification and Design Languages (FDL), P1
   Charland A, 2011, COMMUN ACM, V54, P49, DOI 10.1145/1941487.1941504
   Cimino MGCA, 2012, J SYST ARCHITECT, V58, P286, DOI 10.1016/j.sysarc.2012.06.001
   da Silva PP, 2000, LECT NOTES COMPUT SC, V1939, P117
   Dageförde JC, 2016, P ANN HICSS, P5803, DOI 10.1109/HICSS.2016.718
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Dehlinger J., 2011, P WORKSH MOB SOFTW E
   Evers S, 2016, P ANN HICSS, P5731, DOI 10.1109/HICSS.2016.708
   Gamma Erich., 1994, DESIGN PATTERNS
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Heitkötter H, 2015, SCI COMPUT PROGRAM, V97, P31, DOI 10.1016/j.scico.2013.11.013
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Heitkotter Henning, 2013, P 28 ANN ACM S APPL, P526
   IBM, 2015, RAT SOFTW ARCH RSA V
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Joorabchi M.E., 2013, P 7 INT S EMP SOFTW
   Kapteijns T., 2009, From code centric to model centric software engineering: Practices, Implications and ROI, V22
   Kraemer FA, 2011, LECT NOTES COMPUT SC, V6981, P183, DOI 10.1007/978-3-642-24485-8_14
   Kulak D., 2012, Use Cases: Requirements in Context
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Majchrzak T.A., 2015, OPEN J INF SYST OJIS, V2, P4
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Min BK, 2011, 2011 IEEE REGION 10 CONFERENCE TENCON 2011, P201, DOI 10.1109/TENCON.2011.6129092
   Minhyuk Ko, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P669, DOI 10.1109/ICIS.2012.48
   Muthig Dirk, 2004, 25 IESE, P1
   Myllymaki T, 2002, SOFTWARE INFRASTRUCT, P85
   Nascimento L. N., 2008, THESIS
   Nascimento LM, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P43, DOI 10.1109/SEAA.2008.14
   Oehlman D., 2011, PRO ANDROID WEB APPS
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   OMG, 2013, ACT LANG FUND UML AL
   OMG, 2016, INT FLOW MOD LANG IF
   OMG, 2013, UN MOD LANG UML V2 4
   Parada AG, 2012, BRAZ SYM COMPUT SYST, P192, DOI 10.1109/SBESC.2012.44
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Polzer A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P2, DOI 10.1109/MOMPES.2009.5069132
   Quinton C., 2011, P 15 INT SOFTW PROD, V2, P23
   Raj CPR, 2012, ANNU IEEE IND CONF, P625
   Rumbaugh J., 1991, OBJECT ORIENTED MODE, V199
   Sabraoui A., 2012, em 2012 IEEE International Conference on Complex Systems (ICCS), P1, DOI DOI 10.1109/ICOCS.2012.6458567
   Son H. S., 2013, INT J STW ENG APPL, V7, P12
   Thiel S, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/MS.2002.1020289
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Usman Muhammad, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P111, DOI 10.1109/APSEC.2014.26
   Usman M., 2009, International Journal of Software Engineering and its Applications, V3, P21
   Vaupel S, 2014, LECT NOTES COMPUT SC, V8767, P1, DOI 10.1007/978-3-319-11653-2_1
   Wasserman T., 2010, P FSE SDP WORKSH FUT
   Webber DL, 2004, SCI COMPUT PROGRAM, V53, P305, DOI 10.1016/j.scico.2003.04.004
   Zhang WS, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P149
NR 59
TC 32
Z9 34
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2017
VL 123
BP 1
EP 32
DI 10.1016/j.jss.2016.09.049
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED8CR
UT WOS:000389100100001
DA 2024-07-18
ER

PT J
AU Cámara, J
   Correia, P
   de Lemos, R
   Garlan, D
   Gomes, P
   Schmerl, B
   Ventura, R
AF Camara, Javier
   Correia, Pedro
   de Lemos, Rogerio
   Garlan, David
   Gomes, Pedro
   Schmerl, Bradley
   Ventura, Rafael
TI Incorporating architecture-based self-adaptation into an adaptive
   industrial software system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Architecture-based self-adaptation; Evolution; Rainbow
AB Complex software-intensive systems are increasingly relied upon for all kinds of activities in society, leading to the requirement that these systems should be resilient to changes that may occur to the system, its environment, or its goals. Traditionally, resilience has been achieved either through: (i) low-level mechanisms embedded in the implementation (e.g., exception handling,.timeouts, redundancies), which are unable to detect subtle but important anomalies (e.g., progressive performance degradation); or (ii) human oversight, which is costly and unreliable. Architecture-based self-adaptation (ABSA) is regarded as a promising approach to improve the resilience and reduce the development/operation costs of such systems. Although researchers have illustrated the benefits of ABSA through a number of small-scale case studies, it remains to be seen whether ABSA is truly effective in handling changes at run-time in industrial-scale systems. In this paper, we report on our experience applying an ABSA framework (Rainbow) to a large-scale commercial software system, called Data Acquisition and Control Service (DCAS), which is used to monitor and manage highly populated networks of devices in renewable energy production plants. In the approach followed, we have replaced some of the existing adaptive mechanisms embedded in DCAS by those advocated by ABSA proponents. This has allowed us to assess the development costs associated with the reengineering of adaptive mechanisms when using an ABSA solution, and to make effective comparisons, in terms of operational performance, between a baseline industrial system and one that uses ABSA. Our results show that using the ABSA concepts as embodied in Rainbow enabled an independent team of developers to: (i) effectively implement the adaptation behavior required from such industrial systems; and (ii) obtain important benefits in terms of maintainability and extensibility of adaptation mechanisms. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Camara, Javier; Garlan, David; Schmerl, Bradley] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
   [Correia, Pedro; Ventura, Rafael] Univ Coimbra, Dept Informat Engn, P-3000 Coimbra, Portugal.
   [de Lemos, Rogerio] Univ Kent, Sch Comp, Canterbury CT2 7NZ, Kent, England.
   [de Lemos, Rogerio] Univ Coimbra, CISUC, P-3000 Coimbra, Portugal.
   [Gomes, Pedro] Crit Software, Coimbra, Portugal.
C3 Carnegie Mellon University; Universidade de Coimbra; University of Kent;
   Universidade de Coimbra
RP Cámara, J (corresponding author), Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
EM jcmoreno@cs.cmu.edu; pcorreia@dei.uc.pt; r.delemos@kent.ac.uk;
   garlan@cs.cmu.edu; pgomes@criticalsoftware.com; schmerl@cs.cmu.edu;
   ventura@dei.uc.pt
RI Camara, Javier/ABF-1534-2021
FU Foundation for Science and Technology [CMU-PT/ELE/0030/2009]; FEDER via
   the "Programa Operacional Factores de Competitividade" of QREN with
   COMPETE [FCOMP-01-0124-FEDER-012983]; Fundação para a Ciência e a
   Tecnologia [CMU-PT/ELE/0030/2009] Funding Source: FCT
FX Co-financed by the Foundation for Science and Technology via project
   CMU-PT/ELE/0030/2009 and by FEDER via the "Programa Operacional Factores
   de Competitividade" of QREN with COMPETE ref.:
   FCOMP-01-0124-FEDER-012983.
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   [Anonymous], 2004, THESIS CARNEGIE MELL
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   Asadollahi R, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P58, DOI 10.1109/SEAMS.2009.5069074
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   C ~amara J., 2014, PROC 10 INT ACM SIGS, P63
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cámara J, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P13, DOI 10.1109/SEAMS.2013.6595488
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng SW, 2012, J SYST SOFTWARE, V85, P2860, DOI 10.1016/j.jss.2012.02.060
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Filieri A., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P43, DOI 10.1109/SEAMS.2012.6224390
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Silva Souza V. E., 2012, THESIS
   Tallabaci G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P93, DOI 10.1109/SEAMS.2013.6595496
   Tamura G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P153, DOI 10.1109/SEAMS.2013.6595502
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
NR 23
TC 20
Z9 20
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2016
VL 122
BP 507
EP 523
DI 10.1016/j.jss.2015.09.021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8FP
UT WOS:000387627200032
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Çaglayan, B
   Bener, AB
AF Caglayan, Bora
   Bener, Ayse Basar
TI Effect of developer collaboration activity on software quality in two
   large scale projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Collaboration networks; Developer collaboration; Software quality; Human
   factor in software engineering
AB Developers work together during software development and maintenance to resolve issues and implement features in large software projects. The structure of their development collaboration activity may have impact on the quality of the final product in terms of higher number of defects. In this paper, we aim to understand the effect of collaboration on the defect proneness software. We model the collaboration of developers as an undirected network. We extract the centrality of the developers from the collaboration network using different measures that quantifies the importance of the nodes. We analyze the defect inducing and fixing data of the developers in two large software projects. Our findings in this study can be summarized as follows: (a) Centrality and source code change activity of developers in the collaboration network may change their defect induction rates i.e. the defect proneness of their change sets, (b) Contrary to the common perception, more experienced people have relatively higher defect induction rates. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Caglayan, Bora; Bener, Ayse Basar] Ryerson Univ, Mech & Ind Engn Dept, Toronto, ON M5B 2K3, Canada.
C3 Toronto Metropolitan University
RP Çaglayan, B (corresponding author), Ryerson Univ, Mech & Ind Engn Dept, Toronto, ON M5B 2K3, Canada.
EM bora.caglayan@ryerson.ca; ayse.bener@ryerson.ca
RI Basar, Ayse/ABF-9265-2020
OI Basar, Ayse/0000-0003-4934-8326
FU Turkish Scientific Research Council (Tubitak) [EEEAG 108E014]; Turkish
   State Planning Organization (DPT) [2007K120610]; NSERC [402003-2012]
FX We would like to thank IBM Corporation for allowing us to use and learn
   from RTC development data in our research. This research is supported in
   part by Turkish Scientific Research Council (Tubitak) under grant number
   EEEAG 108E014, Turkish State Planning Organization (DPT) under the
   project number 2007K120610 and NSERC Discovery Grant No: 402003-2012. We
   would like to thank IBM Canada Lab - Toronto site for making their
   development data available for research and strategic help during all
   phases of this research.
CR Alhassan S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P93
   Alpaydin E., 2010, Introduction to Machine Learning
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], THE XP SERIES
   [Anonymous], 2000, Kluwer international series in software engineering
   Barabási AL, 2003, SCI AM, V288, P60, DOI 10.1038/scientificamerican0503-60
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Brooks Frederick P., 1995, The mythical man-month
   Caglayan B., 2013, P 6 INT WORKSH COOP
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Campbell D.T., 1973, EXPT QUASIEXPERIMENT
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Cataldo M., 2010, IEEE T SOFTWARE ENG, V39, P343
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Easley D., 2010, Networks, Crowds, and Markets: Reasoning about a highly connected world, V8
   Eichinger F, 2008, LECT NOTES ARTIF INT, V5211, P333, DOI 10.1007/978-3-540-87479-9_40
   Gelman A., 2007, DATA ANAL USING REGR
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Joblin M., 2015, P 37 INT C SOFTW ENG
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lee C.-Y., 2006, PHYSICS0605220 ARXIV
   Madey G., 2002, P 8 AMERICAS C INFOR, P1806
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Trochim William., 1986, NEW DIRECTIONS PROGR
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
NR 31
TC 13
Z9 18
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2016
VL 118
BP 288
EP 296
DI 10.1016/j.jss.2016.03.055
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DP7FL
UT WOS:000378664500017
DA 2024-07-18
ER

PT J
AU De Coninck, E
   Verbelen, T
   Vankeirsbilck, B
   Bohez, S
   Simoens, P
   Dhoedt, B
AF De Coninck, Elias
   Verbelen, Tim
   Vankeirsbilck, Bert
   Bohez, Steven
   Simoens, Pieter
   Dhoedt, Bart
TI Dynamic auto-scaling and scheduling of deadline constrained service
   workloads on IaaS clouds
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing; Deadline constrained workflow scheduling; Dynamic
   resource allocation
ID RESOURCE-MANAGEMENT
AB Cloud systems are becoming attractive for many companies. Rather than over-provisioning the privately owned infrastructure for peak demands, some of the work can be overspilled to external infrastructure to meet deadlines. In this paper, we investigate how to dynamically and automatically provision resources on the private and external clouds such that the number of workloads meeting their deadline is maximized. We specifically focus on jobs consisting of multiple interdependent tasks with a priori an unknown structure and even adaptable at runtime. The proposed approach is model -driven: knowledge on the job structure on the one hand; and resource needs and scaling behavior on the other hand. Information is built up based on monitoring information and simulated 'what-if-scenarios. Using this dynamically constructed job resource model, the resources needed by each job in order to meet its deadline is derived. Different algorithms are evaluated on how the required resources and jobs are scheduled over time on the available infrastructure. The evaluation is carried out using synthetic workloads. (C) 2016 Elsevier Inc. All rights reserved.
C1 [De Coninck, Elias; Verbelen, Tim; Vankeirsbilck, Bert; Bohez, Steven; Simoens, Pieter; Dhoedt, Bart] Univ Ghent, Dept Informat Technol, IMinds, Technol Pk Zwijnaarde 15, B-9052 Ghent, Belgium.
C3 Ghent University; IMEC
RP De Coninck, E (corresponding author), Univ Ghent, Dept Informat Technol, IMinds, Technol Pk Zwijnaarde 15, B-9052 Ghent, Belgium.
EM elias.deconinck@ugent.be; tim.verbelen@ugent.be;
   bert.vankeirsbilck@ugent.be; steven.bohez@ugent.be;
   pieter.simoens@ugent.be; bart.dhoedt@ugent.be
OI Verbelen, Tim/0000-0003-2731-7262; Vankeirsbilck,
   Bert/0000-0001-9489-8306; De Coninck, Elias/0000-0001-9519-1492;
   Simoens, Pieter/0000-0002-9569-9373
FU iMinds project DREAMaaS; Agency for Innovation by Science and Technology
   in Flanders (IWT)
FX This research is partially funded by the iMinds project DREAMaaS. Steven
   Bohez is funded by Ph.D. grant of the Agency for Innovation by Science
   and Technology in Flanders (IWT).
CR [Anonymous], 2010, 2010 IEEE 3 INT C CL
   [Anonymous], OSGI SERV PLATF REL
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Deboosere L, 2012, J SUPERCOMPUT, V62, P741, DOI 10.1007/s11227-012-0747-0
   Ming Mao, 2010, Proceedings 2010 11th IEEE/ACM International Conference on Grid Computing (GRID 2010), P41, DOI 10.1109/GRID.2010.5697966
   Openstack, 2014, OP SOURC SOFTW BUILD
   Pooja Kumari N., 2013, INT J ADV RES COMPUT, V3, P437
   Rodriguez MA, 2014, IEEE T CLOUD COMPUT, V2, P222, DOI 10.1109/TCC.2014.2314655
   Sotomayor B, 2009, IEEE INTERNET COMPUT, V13, P14, DOI 10.1109/MIC.2009.119
   Vankeirsbilck B, 2014, J SUPERCOMPUT, V69, P412, DOI 10.1007/s11227-014-1171-4
   Verbelen T., 2011, P WORKSH TRACK, P20, DOI [10.1145/2088960.2088980, DOI 10.1145/2088960.2088980]
   Weisstein E. W, 2015, SIEVE ERATOSTHENES M
   Wieczorek M., 2008, Grid Middleware and Services, P237
   Wu ZJ, 2013, J SUPERCOMPUT, V63, P256, DOI 10.1007/s11227-011-0578-4
   Xavier S., 2013, INT J SCI RES PUBLIC, V3, P1
   Yang JZ, 2011, 2011 INTERNATIONAL CONFERENCE ON COMPUTER, ELECTRICAL, AND SYSTEMS SCIENCES, AND ENGINEERING (CESSE 2011), P104
   Yu J, 2008, STUD COMPUT INTELL, V146, P173
   [No title captured]
NR 18
TC 26
Z9 26
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2016
VL 118
BP 101
EP 114
DI 10.1016/j.jss.2016.05.011
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DP7FL
UT WOS:000378664500007
OA Green Published
DA 2024-07-18
ER

PT J
AU Ronglong, S
   Arpnikanondt, C
AF Ronglong, Suthat
   Arpnikanondt, Chonlameth
TI Signal: An open-source cross-platform universal messaging system with
   feedback support
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Feedback; Messaging; Notification
ID INTERNET
AB This research addressed challenges of the cross-platform push messaging service where every modern device could send messages and receive feedback among a multitude of different receiving devices. The design and implementation of Signal a universal cross-platform messaging system was proposed as a solution. Signal provided both the messaging service middleware and application. It comprised a set of messaging languages for describing, querying and mapping message payloads as well as defining and customizing feedback. These languages were describable, human readable, and extensible, each of which came equipped with its own parser. The Signal architecture was designed for scalability by building extensible modules and applying scalable convenient tools, namely, RabbitMQ Google-GSON and Quartz Scheduler. Its real-time schedulers were well-suited for a wide range of message payloads. It could deliver messages, practically, to all major messaging platforms with accessible APIs, HTML5-enabled Web Sockets, and TCP-based applications. The research was validated via two case studies. The results showed ease of deployment through the unified Signal APIs while being able to attain a 100% reach to receivers with the best achievable performance of more than 1,300,000 basic notification payloads in a second. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Ronglong, Suthat; Arpnikanondt, Chonlameth] King Mongkuts Univ Technol Thonburi, Sch Informat Technol, 126 Pracha Utid Rd, Bangkok 10140, Thailand.
C3 King Mongkuts University of Technology Thonburi
RP Arpnikanondt, C (corresponding author), King Mongkuts Univ Technol Thonburi, Sch Informat Technol, 126 Pracha Utid Rd, Bangkok 10140, Thailand.
EM suthat@do.in.th; chonlameth@sit.kmutt.ac.th
OI , Chonlameth/0000-0001-8062-1947
CR Ackerman E, 2013, IEEE SPECTRUM, V50, P26, DOI 10.1109/MSPEC.2013.6395302
   Alkhawaja A.R., 2012, INFORUM
   AMQP, 2013, PROD SUCC STOR
   [Anonymous], 2015, SIGNAL
   [Anonymous], 2015, CHRONICLE
   [Anonymous], INT J ADV SCI TECHNO
   [Anonymous], 2013, P 4 ACM WORKSH MOB C
   Apple, 2013, LOC PUSH NOT PROGR G
   Bieber G., 2013, PROC 6 INT C PERVASI, P1
   Brustel J., 2012, 2012 Sixth International Conference on Complex, Intelligent, and Software Intensive Systems (CISIS), P40, DOI 10.1109/CISIS.2012.105
   Danish M, 2013, IEEE INT ADV COMPUT, P377
   Duquennoy Simon, 2009, Proceedings of the 2009 11th IEEE International Symposium on Web Systems Evolution (WSE 2009), P89, DOI 10.1109/WSE.2009.5631249
   DuVander A., 2015, JSONS 8 YEAR CONVERG
   Faison T., 2006, EVENT BASED PROGRAMM, P131
   Hansen J., 2012, 2012 IEEE Workshops of International Conference on Advanced Information Networking and Applications (WAINA), P1298, DOI 10.1109/WAINA.2012.96
   Helios, 2014, EXT OP SOURC MOB BAC
   Jaramillo D., 2013, P IEEE SOUTH FLOR US, P1
   Jones B., 2011, RABBITMQ PERFORMANCE
   JProfiler, 2015, JAV PROF
   Koshizuka N, 2010, IEEE PERVAS COMPUT, V9, P98, DOI 10.1109/MPRV.2010.87
   McCracken H., 2013, WHOS WINNING IOS AND
   Microsoft, 2014, WIND PUSH NOT SERV W
   Möller DPF, 2014, INT CONF ELECTRO INF, P596, DOI 10.1109/EIT.2014.6871832
   Mojzisova A., 2012, 2012 13th International Carpathian Control Conference (ICCC 2012), P490, DOI 10.1109/CarpathianCC.2012.6228693
   MoonKoo Kim, 2011, Proceedings of the 2011 13th International Conference on Advanced Communication Technology (ICACT). Smart Service Innovation through Mobile Interactivity, P1475
   Morita K., 2011, Proceedings of the 11th IEEE/IPSJ International Symposium on Applications and the Internet (SAINT 2011), P234, DOI 10.1109/SAINT.2011.43
   Morzy T., 1997, P 1 E EUR S ADV DAT, P311
   Mozilla, 2014, WEBAPI PUSHAPI
   Nance C., 2013, P SO ASS INF SYST C
   NewBay, 2011, OFF GUID NOT SYST OP
   Nurseitov Nurzhan, 2009, Proceedings on the ISCA 22nd International Conferenceon Computers and Their Applications in Industry and Engineering. CAINE-2009, P157
   Nystrom N, 2004, ACM SIGPLAN NOTICES, V39, P99, DOI 10.1145/1035292.1028986
   OpenPush, 2014, DEV ONC PUSH EV
   Peng DL, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 2, P582, DOI 10.1109/ICCSIT.2009.5234805
   Pielot M, 2014, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI'14), P233, DOI 10.1145/2628363.2628364
   PushBullet, 2014, YOUR DEV WORK BETT T
   PushOver, 2013, SIMPL NOT
   Pushwoosh, 2013, NEW APPR PUSH NOT
   Raphael C., 2012, COMP AMQP MQTT
   Redth, 2014, PSUHSHARP
   Richards M., 2011, UNDERSTANDING DIFFER
   Ronglong S., 2012, P INT C COMP INF SCI, P44
   Spring IO, 2013, ROUT TOP PERF SCAL R
   Stankovic JA, 2014, IEEE INTERNET THINGS, V1, P3, DOI 10.1109/JIOT.2014.2312291
   Upadhyaya BP, 2014, PROC IEEE INT SYMP, P117, DOI 10.1109/ISIE.2014.6864596
   Usman M, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P322, DOI 10.1109/UIC-ATC.2012.145
   Zhang YF, 2010, IEEE T PARALL DISTR, V21, P393, DOI 10.1109/TPDS.2009.67
NR 47
TC 2
Z9 3
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 30
EP 54
DI 10.1016/j.jss.2016.02.018
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800003
DA 2024-07-18
ER

PT J
AU Sánchez, P
   Alvarez, B
   Morales, JM
   Alonso, D
   Iborra, A
AF Sanchez, Pedro
   Alvarez, Barbara
   Miguel Morales, Jose
   Alonso, Diego
   Iborra, Andres
TI An approach to modeling and developing teleo-reactive systems
   considering timing constraints
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Teleo-reactive; Timing constraints; TRiStar; Requirements engineering
ID TROPOS; COMPONENTS
AB Context: TeleoR is an extension and implementation of teleo-reactive (TR) language for defining the behavior of reactive systems when the consideration of timing constraints is a matter of interest. Objective: This paper analyzes how to consider real-time constraints when a TR approach is followed from modeling to implementation.
   Method: After carrying out a study of the type of timing constraints from the TR perspective, the possibility of using TeleoR for incorporating such constraints was considered. Some extensions on TRiStar notation were then made to represent temporal requirements. A drone-based case study was carried out to demonstrate the usefulness of this approach. Finally, a survey was conducted to validate the approach.
   Results: TeleoR can, to a great extent, support the kind of real-time constraints required for developing real-time systems, offering a direct solution to five of the eight temporal requirements identified, which can be implemented using the basic features of the language.
   Conclusions: Considering real-time requirements should be part of the specification of reactive systems implemented when using the TR approach and should be supported by the implementation platform. In this regard, TeleoR offers reasonable possibilities that should be extended by taking into account the limitations identified here. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Sanchez, Pedro; Alvarez, Barbara; Miguel Morales, Jose; Alonso, Diego; Iborra, Andres] Univ Politecn Cartagena, Syst & Elect Engn Div DSIE, Campus Muralla Mar S-N, Cartagena, Spain.
C3 Universidad Politecnica de Cartagena
RP Sánchez, P (corresponding author), Univ Politecn Cartagena, Syst & Elect Engn Div DSIE, Campus Muralla Mar S-N, Cartagena, Spain.
EM pedro.sanchez@upct.es; balvarez@upct.es; josemiguel.morales@upct.es;
   diego.alonso@upct.es; andres.iborra@upct.es
RI Sanchez, Pedro/B-7710-2009; Alonso, Diego/H-4697-2011
OI Sanchez, Pedro/0000-0002-1903-1291; Alonso, Diego/0000-0002-4629-3975;
   Alvarez, Barbara/0000-0002-5515-095X; Iborra, Andres/0000-0003-4308-1472
FU Spanish Government's cDrone Project [TIN2013-45920-R]; ViSelTR Project
   [TIN2012-39279]
FX This work has been partially supported by the Spanish Government's
   cDrone Project (ref. TIN2013-45920-R) and ViSelTR Project (ref.
   TIN2012-39279).
CR Alonso D, 2012, REV IBEROAM AUTOM IN, V9, P170, DOI 10.1016/j.riai.2012.02.010
   [Anonymous], 2006, Principles of Concurrent and Distributed Programming
   [Anonymous], RES REPORT
   [Anonymous], 2009, Real-Time Systems and Programming Languages
   [Anonymous], IEA AIE 08 P 21 INT
   Audsley N., 2016, REAL TIME SYSTEMS PR
   Baskiyar S, 2005, INFORM-J COMPUT INFO, V29, P233
   Bellini P, 2000, ACM COMPUT SURV, V32, P12, DOI 10.1145/349194.349197
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Broda K., 2000, P 14 EUR C ART INT E
   Brooks R.A., 1990, The Behavior Language; User's Guide
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Clark K. L., 2014, ROBOTIC AGENT PROGRA
   Coffey S., 2006, P 2 INT WORKSH MULT, P54, DOI [10.5220/0001225300540065, DOI 10.5220/0001225300540065]
   Darragi N., 2013, P 4 INT WORKSH AN TO, P5
   Fan X., 2015, REAL TIME EMBEDDED S, Vfirst
   Kopetz H., 2011, RAL TIME SYSTEMS SER
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Morales JL, 2014, ARTIF INTELL REV, V42, P945, DOI 10.1007/s10462-012-9350-2
   MANNA Z, 1983, LECT NOTES COMPUT SC, V154, P491
   Morales JM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P283, DOI 10.1145/2695664.2695703
   Morales JM, 2016, J SYST SOFTWARE, V114, P82, DOI 10.1016/j.jss.2015.12.056
   Morales JM, 2015, J SYST SOFTWARE, V100, P1, DOI 10.1016/j.jss.2014.10.010
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Nilsson Nils., 2001, Electronic Transactions on Artificial Intelligence, V5, P99
   Nilsson NJ, 1993, J ARTIF INTELL RES, V1, P139, DOI 10.1613/jair.30
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Rajan K, 2010, SEA TECHNOL, V51, P51
   Randell B., 1995, PREDICTABLY DEPENDAB
   Rao A. S., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P312
   Sánchez P, 2012, J SYST SOFTWARE, V85, P2504, DOI 10.1016/j.jss.2012.05.067
   Sánchez P, 2011, IEEE T COMPUT, V60, P1059, DOI 10.1109/TC.2010.149
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Yao QingLi, 2016, REAL TIME CONCEPTS E
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 35
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 317
EP 333
DI 10.1016/j.jss.2016.03.064
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800022
DA 2024-07-18
ER

PT J
AU Meng, XF
   Li, TJ
   Deng, Y
AF Meng, Xianfu
   Li, Tianjiao
   Deng, Yu
TI preferTrust: An ordered preferences-based trust model in peer-to-peer
   networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE P2P network; Expectation vector; Trust vector
AB Aiming at solving the two problems in existing trust models, rough trust description and simplistic trust decision, an ordered preferences-based trust model, preferTrust, is proposed for peer-to-peer networks. First, we define a service as an n-dimensional attribute vector in order to reflect the service provider's abilities in different attributes in detail. Second, considering the fact that different peers may have different preferences for each attribute of a service, which are usually represented in the qualitative expressions, such as better, worse and so on, we transform those peer's qualitative preferences to the quantitative ordered preferences with the method of analytical hierarchy process (AHP), and based on which to calculate the requester's expectation vector. Finally, we combine the requester's expectation vector with each responder's trust vector to calculate an estimate value for each responder which will help the requester make the final trust decision. The simulation results show that preferTrust is able to both improve the trust decision satisfaction and resist malicious attacks effectively and efficiently. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Meng, Xianfu; Li, Tianjiao; Deng, Yu] Dalian Univ Technol, Sch Comp Sci & Technol, 2 Linggong Rd, Dalian 116024, Peoples R China.
C3 Dalian University of Technology
RP Meng, XF (corresponding author), Dalian Univ Technol, Sch Comp Sci & Technol, 2 Linggong Rd, Dalian 116024, Peoples R China.
EM xfmeng@dlut.edu.cn
CR Abdul-Rahman A., 1998, New Security Paradigms Workshop. Proceedings, P48
   Abdulrahman A., 2000, P 33 ANN HAW INT C, P4
   Anderson EW, 2000, TOTAL QUAL MANAGE, V11, pS869
   Das A., 2011, IEEE T DEPEND SECURE, V2, P261
   [董西广 Dong Xiguang], 2011, [计算机应用与软件, Computer Applications and Software], V28, P209
   Ismail R, 2002, BLED ECONFERENCE
   Jia C, 2012, IEEE T SYST MAN CY A, V42, P164, DOI 10.1109/TSMCA.2011.2162497
   Jiang Shou-Xu, 2007, Journal of Software, V18, P2551, DOI 10.1360/jos182551
   Jin Y., 2007, LNCS, V4831, P449
   Josang A, 2001, INT J UNCERTAIN FUZZ, V9, P279, DOI 10.1016/S0218-4885(01)00083-1
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Li XY, 2011, J PARALLEL DISTR COM, V71, P837, DOI 10.1016/j.jpdc.2011.01.007
   Lin HQ, 2011, PEER PEER NETW APPL, V4, P376, DOI 10.1007/s12083-010-0096-9
   Meng XF, 2012, COMPUT COMMUN, V35, P2044, DOI 10.1016/j.comcom.2012.06.007
   Ren YZ, 2011, SECUR COMMUN NETW, V4, P61, DOI 10.1002/sec.165
   Resnick P, 2002, ADV APP M-E, V11, P127
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Schmidt S, 2007, APPL SOFT COMPUT, V7, P492, DOI 10.1016/j.asoc.2006.11.002
   Schneider J, 2000, P 2 INT S HANDH UB C
   Stephen M., 1994, THESIS U STIRLING
   Stoica I, 2003, IEEE ACM T NETWORK, V11, P17, DOI 10.1109/TNET.2002.808407
   Su X, 2010, P IEEE IFIP INT C EM
   Tian CQ, 2011, FUTURE GENER COMP SY, V27, P1135, DOI 10.1016/j.future.2011.03.006
   Xiong L, 2004, IEEE T KNOWL DATA EN, V16, P843, DOI 10.1109/TKDE.2004.1318566
   Xue WL, 2012, CONCURR COMP-PRACT E, V24, P1037, DOI 10.1002/cpe.1749
   Zhengbing Hu, 2011, Journal of Networks, V6, P190, DOI 10.4304/jnw.6.2.190-197
   Zhengzhen Zhou, 2011, Journal of Computers, V6, P1634, DOI 10.4304/jcp.6.8.1634-1638
NR 27
TC 5
Z9 5
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2016
VL 113
BP 309
EP 323
DI 10.1016/j.jss.2015.12.018
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC8FZ
UT WOS:000369456600017
DA 2024-07-18
ER

PT J
AU Anagnostopoulos, T
   Kolomvatsos, K
   Anagnostopoulos, C
   Zaslavsky, A
   Hadjiefthymiades, S
AF Anagnostopoulos, Theodoros
   Kolomvatsos, Kostas
   Anagnostopoulos, Christos
   Zaslavsky, Arkady
   Hadjiefthymiades, Stathes
TI Assessing dynamic models for high priority waste collection in smart
   cities
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Internet of things; Smart cities; Dynamic routing models; Waste
   collection
ID VEHICLE-ROUTING PROBLEM; TIME WINDOWS; CITY; ALGORITHM
AB Waste Management (WM) represents an important part of Smart Cities (SCs) with significant impact on modern societies. WM involves a set of processes ranging from waste collection to the recycling of the collected materials. The proliferation of sensors and actuators enable the new era of Internet of Things (IoT) that can be adopted in SCs and help in WM. Novel approaches that involve dynamic routing models combined with the IoT capabilities could provide solutions that outperform existing models. In this paper, we focus on a Sc where a number of collection bins are located in different areas with sensors attached to them. We study a dynamic waste collection architecture, which is based on data retrieved by sensors. We pay special attention to the possibility of immediate WM service in high priority areas, e.g., schools or hospitals where, possibly, the presence of dangerous waste or the negative effects on human quality of living impose the need for immediate collection. This is very crucial when we focus on sensitive groups of citizens like pupils, elderly or people living close to areas where dangerous waste is rejected. We propose novel algorithms aiming at providing efficient and scalable solutions to the dynamic waste collection problem through the management of the trade-off between the immediate collection and its cost. We describe how the proposed system effectively responds to the demand as realized by sensor observations and alerts originated in high priority areas. Our aim is to minimize the time required for serving high priority areas while keeping the average expected performance at high level. Comprehensive simulations on top of the data retrieved by a SC validate the proposed algorithms on both quantitative and qualitative criteria which are adopted to analyze their strengths and weaknesses. We claim that, local authorities could choose the model that best matches their needs and resources of each city. (c) 2015 Elsevier Inc. All rights reserved.
C1 [Anagnostopoulos, Theodoros] Univ Oulu, Community Imaging Grp, Oulu 90570, Finland.
   [Anagnostopoulos, Theodoros] ITMO Univ, Dept Infocommun Technol, Pervas Comp & Internet Things Res Grp Lab, St Petersburg 197101, Russia.
   [Zaslavsky, Arkady] ITMO Univ, Dept Infocommun Technol, St Petersburg 197101, Russia.
   [Kolomvatsos, Kostas; Hadjiefthymiades, Stathes] Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
   [Anagnostopoulos, Christos] Univ Glasgow, Sch Comp Sci, Glasgow G12 8QQ, Lanark, Scotland.
   [Zaslavsky, Arkady] CSIRO, CSIRO Computat Informat, Melbourne, Vic 3169, Australia.
C3 University of Oulu; ITMO University; ITMO University; National &
   Kapodistrian University of Athens; University of Glasgow; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO)
RP Anagnostopoulos, T (corresponding author), Univ Oulu, Community Imaging Grp, Oulu 90570, Finland.
EM tanagnos@ee.oulu.fi; kostasks@di.uoa.gr;
   christos.anagnostopoulos@glasgow.ac.uk; arkady.zaslavsky@csiro.au;
   shadj@di.uoa.gr
RI Anagnostopoulos, Theodoros/AAP-8661-2021; Anagnostopoulos,
   Christos/Y-5215-2019; Kolomvatsos, Kostas/Y-5312-2019; Anagnostopoulos,
   Theodoros/AAF-7064-2020
OI Anagnostopoulos, Theodoros/0000-0002-5587-2848; Anagnostopoulos,
   Christos/0000-0003-1517-6757; 
FU Ministry of Education and Science of the Russian Federation
   [14.575.21.0058]
FX The research was carried out with the financial support of the Ministry
   of Education and Science of the Russian Federation under grant agreement
   #14.575.21.0058.
CR Anagnostopoulos T., 2015, P 2015 INT C RECENT, P1
   Anagnostopoulos Theodoros Vasileios, 2014, Internet of Things, Smart Spaces, and Next Generation Networks and Systems. 14th International Conference, NEW2AN 2014 and 7th Conference, ruSMART 2014. Proceedings: LNCS 8638, P95, DOI 10.1007/978-3-319-10353-2_9
   [Anonymous], P 16 IEEE INT C MOB
   Bakici T, 2013, J KNOWL ECON, V4, P135, DOI 10.1007/s13132-012-0084-9
   Bing XY, 2014, WASTE MANAGE, V34, P719, DOI 10.1016/j.wasman.2014.01.018
   Buhrkal K, 2012, PROCD SOC BEHV, V39, P241, DOI 10.1016/j.sbspro.2012.03.105
   Centre of Regional Science, 2015, SMART CIT
   Hemmelmayr V, 2013, J HEURISTICS, V19, P129, DOI 10.1007/s10732-011-9188-9
   Jin J, 2014, IEEE INTERNET THINGS, V1, P112, DOI 10.1109/JIOT.2013.2296516
   Johansson OM, 2006, WASTE MANAGE, V26, P875, DOI 10.1016/j.wasman.2005.09.004
   Li JQ, 2008, OMEGA-INT J MANAGE S, V36, P1133, DOI 10.1016/j.omega.2006.04.007
   Lim C, 2005, GLOB TELECOMM CONF, P545
   Mes M., 2013, BET C EINDH NETH
   Mes M., 2012, USE CASES DISCRETE E, P277, DOI [10.1007/978-3-642-28777-0_13, DOI 10.1007/978-3-642-28777-0_13]
   Milic P, 2011, FACTA UNIV-SER MECH, V9, P127
   Nadizadeh A, 2014, EUR J OPER RES, V238, P458, DOI 10.1016/j.ejor.2014.04.012
   Nuortio T, 2006, EXPERT SYST APPL, V30, P223, DOI 10.1016/j.eswa.2005.07.009
   Pardo T.A., 2011, Proceedings of the 12th Annual International Digital Government Research Conference: Digital Government Innovation in Challenging Times, P282
   Ramos TRP, 2014, RESOUR CONSERV RECY, V85, P116, DOI 10.1016/j.resconrec.2013.12.013
   Priano F., 2014, Proceedings of the 15th Annual International Conference on Digital Government Research, Aguascalientes, Mexico, P44, DOI [10.1145/2612733.2612741, DOI 10.1145/2612733.2612741]
   Reed M, 2014, APPL SOFT COMPUT, V15, P169, DOI 10.1016/j.asoc.2013.10.017
   Stellingwerff A., 2011, THESIS U TWENTE TWEN
   Minh TT, 2013, LECT NOTES COMPUT SC, V7971, P485, DOI 10.1007/978-3-642-39637-3_38
   Vermesan O, 2013, RIVER PUBL SER COMM, P7
   Von Poser I., 2006, INF COMMUN TECHNOL I, V1, P221
   Wy J, 2013, EUR J OPER RES, V224, P466, DOI 10.1016/j.ejor.2012.09.001
   Zhu MH, 2009, WASTE MANAGE, V29, P1227, DOI 10.1016/j.wasman.2008.07.016
   Zsigraiova Z, 2013, WASTE MANAGE, V33, P793, DOI 10.1016/j.wasman.2012.11.015
NR 28
TC 76
Z9 77
U1 2
U2 80
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2015
VL 110
BP 178
EP 192
DI 10.1016/j.jss.2015.08.049
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CV4NU
UT WOS:000364244600010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gonçalves, EJT
   Cortés, MI
   Campos, GAL
   Lopes, YS
   Freire, ESS
   da Silva, VT
   de Oliveira, KSF
   de Oliveira, MA
AF Tavares Goncalves, Enyo Jose
   Cortes, Mariela I.
   Lima Campos, Gustavo Augusto
   Lopes, Yrleyjander S.
   Freire, Emmanuel S. S.
   da Silva, Viviane Torres
   Farias de Oliveira, Kleinner Silva
   de Oliveira, Marcos Antonio
TI MAS-ML 2.0: Supporting the modelling of multi-agent systems with
   different agent architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Proactive and reactive agents; Multi-agent system; Modelling language
AB Multi-agent systems (MAS) involve a wide variety of agents that interact with each other to achieve their goals. Usually each agent has a particular internal architecture defining its main structure that gives support to the interaction among the entities of MAS. Many modelling languages have been proposed in recent years to represent the internal architectures of such agents, for instance the UML profiles. In particular, we highlight MAS-ML, an MAS modelling language that performs a conservative extension of UML while incorporating agent-related concepts to represent proactive agents. However, such languages fail to support the modelling of the heterogeneous architectures that can be used to develop the agents of an MAS. Even worse, little has been done to provide tools to help the systematic design of agents. This paper, therefore, aims to extend the MAS-ML metamodel and evolve its tool to support the modelling of not only proactive agents but also several other architectures described in the literature. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Tavares Goncalves, Enyo Jose; de Oliveira, Marcos Antonio] Univ Fed Ceara, Av Jose de Freitas Queiroz,5003 Cedro, BR-63900000 Quixada, CE, Brazil.
   [Cortes, Mariela I.; Lima Campos, Gustavo Augusto; Lopes, Yrleyjander S.; Freire, Emmanuel S. S.] Univ Estadual Ceara, Fortaleza, Ceara, Brazil.
   [da Silva, Viviane Torres] IBM Res Brazil, Rio De Janeiro, RJ, Brazil.
   [Farias de Oliveira, Kleinner Silva] Univ Vale Rio dos Sinos, Sao Leopoldo, RS, Brazil.
C3 Universidade Federal do Ceara; Universidade Estadual do Ceara; Getulio
   Vargas Foundation; Universidade do Vale do Rio dos Sinos (Unisinos)
RP Gonçalves, EJT (corresponding author), Univ Fed Ceara, Av Jose de Freitas Queiroz,5003 Cedro, BR-63900000 Quixada, CE, Brazil.
EM enyo.goncalves@gmail.com; mariela@larces.uece.br;
   gustavo@larces.uece.br; yrley@larces.uece.br; savio@larces.uece.br;
   vivianet@br.ibm.com; kleinnerfarias@unisinos.br; deoliveira.ma@ufc.br
RI Freire, Sávio/B-3292-2014; de Oliveira, Marcos Antonio/ABA-2406-2020;
   Cortés, Mariela I/B-8751-2014; Freire, Emmanuel Sávio
   Silva/AGE-1578-2022
OI Freire, Sávio/0000-0002-3989-9442; de Oliveira, Marcos
   Antonio/0000-0002-1192-7296; Freire, Emmanuel Sávio
   Silva/0000-0002-3989-9442
CR [Anonymous], 2009, UML UN MOD LANG SPEC
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Guedes GTA, 2009, LECT NOTES COMPUT SC, V5833, P106, DOI 10.1007/978-3-642-04947-7_14
   Argente E, 2011, LECT NOTES COMPUT SC, V6038, P157
   Arunachalam R., 2004, 3 INT JOINT C AUT AG, P113
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Bordini R. H., 2007, PROGRAMMING MULTIAGE, V1, P273
   Braubach L., 2004, NET OBJECT DAYS 2004
   Castro J., 2006, UPDATES IN COMPUTERS, P245
   Centeno R., 2008, WORKSH AGR TECHN 8 I
   Cervenka R., 2012, SOFTWARE AGENTS AGEN, P9
   Choren R., 2005, SOFTWARE ENG MULTIAG, P198
   Collins John., 2006, SUPPLY CHAIN MANAGEM
   d'Inverno M., 2001, SPRI SER AG TECHNOL, DOI 10.1007/978-3-662-04607-4
   da Silva Viviane Torres, 2008, International Journal of Agent-Oriented Software Engineering, V2, P382, DOI 10.1504/IJAOSE.2008.020138
   De Maria B.A., 2005, 17 C ADV INF SYST EN
   Dorigo M, 2004, ANT COLONY OPTIMIZATION, P1
   France R., 2007, ICSE 07 EUA EUA
   Jennings N.R., 1996, FDN DISTRIBUTED ARTI, P187
   Lavinal E., 2006, NETW OP MAN S NOMS 2
   Odell James., 2000, AOIS WORKSHOP AAAI 2, P3
   OMG, 2014, MDA SUCC STOR
   Russell S., 2016, Artificial intelligence a modern approach
   Sadeh N, 2003, AI MAG, V24, P92
   Shirazi MRA, 2008, NEGOTIATION J, V24, P45, DOI 10.1111/j.1571-9979.2007.00166.x
   Silva P. S., 2003, 21 BRAZ S COMP NETW, P837
   Silva V, 2003, LECT NOTES COMPUT SC, V2603, P1
   Silva V., 2004, P 3 INT C AUT AG MUL, V2, P914
   Silva V., 2008, LNCS, V4898, P1
   SILVA V, 2004, J AUTONOMOUS AGENTS, V9, P145
   Silva V. T. da, 2005, 4 INT C AUT AG MULT, P594
   Silva V.T.da, 2004, THESIS
   Spanoudakis N, 2008, LECT NOTES ARTIF INT, V5253, P32, DOI 10.1007/978-3-540-85776-1_4
   Wagner G, 2003, INFORM SYST, V28, P475, DOI 10.1016/S0306-4379(02)00027-3
   Wagner G., 2005, AGENT ORIENTED METHO, P277
   Weiss G, 1999, MULTIAGENT SYSTEMS, P1
   Wellman MP, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P935
   Yu L., 2001, P 1 INT WORKSH AG OR
   Zambonelli F., 2001, LNCS, V1957, P127
NR 39
TC 23
Z9 25
U1 1
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2015
VL 108
BP 77
EP 109
DI 10.1016/j.jss.2015.06.008
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CO2EQ
UT WOS:000358969300005
DA 2024-07-18
ER

PT J
AU Caporuscio, M
   Ghezzi, C
AF Caporuscio, Mauro
   Ghezzi, Carlo
TI Engineering Future Internet applications: The PRIME approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Resource-oriented architecture; Middleware; Future Internet
AB The Future Internet is envisioned as a worldwide environment connecting a large open-ended collection of heterogeneous and autonomous resources, namely Things, Services and Contents, which interact with each other anywhere and anytime. Applications will possibly emerge dynamically as opportunistic aggregation of resources available at a given time, and will be able to self-adapt according to the environment dynamics. In this context, engineers should be provided with proper modeling and programming abstractions to develop applications able to benefit from Future Internet, by being at the same time fluid, as well as dependable. Indeed, such abstractions should (i) facilitate the development of autonomous and independent interacting resources (loose coupling), (ii) deal with the run-time variability of the application in terms of involved resources (flexibility), (iii) provide mechanisms for run-time resources discovery and access (dynamism), and (iv) enable the running application to accommodate unforeseen resources (serendipity).
   To this end, PRIME (P-Rest at design/run tIME) defines the P-REST architectural style, and a set of P-REST oriented modeling and programming abstractions to provide engineers with both design-time and run-time support for specifying, implementing and operating P-RESTful applications. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Caporuscio, Mauro] Linnaeus Univ, Dept Comp Sci, SE-35195 Vaxjo, Sweden.
   [Ghezzi, Carlo] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
C3 Linnaeus University; Polytechnic University of Milan
RP Caporuscio, M (corresponding author), Linnaeus Univ, Dept Comp Sci, SE-35195 Vaxjo, Sweden.
EM mauro.caporuscio@lnu.se; carlo.ghezzi@polimi.it
RI Caporuscio, Mauro/AAB-1320-2021
OI Caporuscio, Mauro/0000-0001-6981-0966
FU European Commission [227977-SMScom]
FX PRIME has been developed as part of a larger initiative on assisting the
   development of dependable self-managing situated applications, which was
   undertaken under funding from European Commission, Programme IDEAS-ERC,
   Project 227977-SMScom (http://www.erc-smscom.org).
CR [Anonymous], WEB SERV SEM WSDL S
   [Anonymous], OSGI SERV PLATF COR
   [Anonymous], RES DESCR FRAM RDF
   [Anonymous], 2009, P IEEE 6 INT C NETW
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Bandara A, 2008, LECT NOTES COMPUT SC, V5036, P434, DOI 10.1007/978-3-540-68083-3_42
   Ben Mokhtar S, 2008, J SYST SOFTWARE, V81, P785, DOI 10.1016/j.jss.2007.07.030
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   BFar R, 2005, MOBILE COMPUTING PRINCIPLES: DESIGNING AND DEVELOPING MOBILE APPLICATIONS WITH UML AND XML, P1
   Caporuscio M, 2011, REST: FROM RESEARCH TO PRACTICE, P401, DOI 10.1007/978-1-4419-8303-9_18
   Caporuscio M, 2012, IEEE T SERV COMPUT, V5, P86, DOI 10.1109/TSC.2010.60
   Castro M, 2002, IEEE J SEL AREA COMM, V20, P1489, DOI 10.1109/JSAC.2002.803069
   Dalla Preda Mila, 2012, Service-Oriented and Cloud Computing. First European Conference, ESOCC 2012. Proceedings, P48, DOI 10.1007/978-3-642-33427-6_4
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   di Nitto E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P13, DOI 10.1109/ICSE.1999.840991
   Doval D, 2003, IEEE INTERNET COMPUT, V7, P79, DOI 10.1109/MIC.2003.1215663
   Edwards K., 2009, ACM T COMPUT-HUM INT, V16, P3
   ESSI WSMO Working Group, 2007, WEB SERV MOD ONT
   Favre J.-M., 2002, P EUROMICRO C
   Fielding Roy Thomas, 2000, Architectural styles and the design of network-based software architectures, Patent No. AAI9980887
   Giunchiglia F, 2007, LECT NOTES COMPUT SC, V4601, P1
   Google, 2014, PHYS WEB
   Grace P., 2005, SIGMOBILE MOBILE COM, V9, P2, DOI DOI 10.1145/1055959.1055962
   Gregorio J., 2012, URI TEMPLATE REQUEST
   Grosky WI, 2007, IEEE MULTIMEDIA, V14, P8, DOI 10.1109/MMUL.2007.82
   Guinard D., 2010, 2010 Internet of Things (IOT 2010), DOI 10.1109/IOT.2010.5678452
   Hirsch Frederick., 2006, Mobile Web Services - Architecture and Implementation
   Hoareau D, 2008, PERS UBIQUIT COMPUT, V12, P167, DOI 10.1007/s00779-006-0110-7
   Internet Engineering Task Force (IETF), 1999, 2616 RFC
   Issarny V., 2005, Automated Software Engineering, V12, P101, DOI 10.1023/B:AUSE.0000049210.42738.00
   Issarny V, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P244, DOI 10.1109/FOSE.2007.2
   Khare R., 2004, ICSE
   Kindberg T, 2001, COMPUT NETW, V35, P443, DOI 10.1016/S1389-1286(00)00181-X
   Kortuem G., 2006, P 2 IET INT C INT EN, P201
   Lelli F., 2009, P 4 INT WORKSH DISTR
   Mancinelli Fabio, 2010, International Journal of Ambient Computing and Intelligence, V2, P33, DOI 10.4018/jaci.2010100103
   Narendra N., 2005, INT C INF TECHN COD
   Nelson Theodor Holm, 1965, Proceedings of the 1965 20th National Conference. ACM'65, P84, DOI [DOI 10.1145/800197.806036(CIT.ONP.169, 10.1145/800197.806036, DOI 10.1145/800197.806036]
   Nottingham M, 2010, WEB LINKING REQUEST
   Olsen D. R.  Jr., 2000, UIST. Proceedings of the 13th Annual ACM Symposium on User Interface Software and Technology, P191, DOI 10.1145/354401.354764
   PAOLUCCI M, 2002, 1 INT SEM WEB C
   Papadimitriou D., 2009, FUTURE INTERNET CROS
   Pautasso C., 2011, P 9 WORK IEEE IFIP C
   Platt D., 1999, UNDERSTANDING COM
   Richardson L., 2008, RESTFUL WEB SERVICES
   Roman Gruia-Catalin., 2000, P 22 INT C SOFTWARE, P241
   Russell S., 2016, Artificial intelligence a modern approach
   Saeedi P., 2013, P 2013 IEEE 7 INT C
   Schuhmann S, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491469
   Stevenson G., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1369
   Sun Microsystems, 2006, ENT JAVABEANS VERS 3
   Sycara Katia., 2003, WEB SEMANTICS SCI SE, V1, P27
   TANENBAUM AS, 1985, COMPUT SURV, V17, P419, DOI 10.1145/6041.6074
   W3C, 2007, SIMPL OBJ ACC PROT
   *W3C, 2004, OWL S SEM MARK WEB S
   Yongqiang Huang, 2001, Proceedings Second ACM International Workshop on Data Engineering for Wireless and Mobile Access. MobiDE 2001, P27, DOI 10.1145/376868.376889
   Zambonelli F, 2011, PROCEDIA COMPUT SCI, V7, P197, DOI 10.1016/j.procs.2011.09.006
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
NR 59
TC 12
Z9 12
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2015
VL 106
BP 9
EP 27
DI 10.1016/j.jss.2015.03.102
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM1KF
UT WOS:000357439100002
DA 2024-07-18
ER

PT J
AU Yu, YJ
   Franqueira, VNL
   Tun, TT
   Wieringa, RJ
   Nuseibeh, B
AF Yu, Yijun
   Franqueira, Virginia N. L.
   Tun, Thein Than
   Wieringa, Roel J.
   Nuseibeh, Bashar
TI Automated analysis of security requirements through risk-based
   argumentation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Structured argumentation; Risk assessment; Security analysis
ID IDENTIFICATION; THINKING; SAFETY
AB Computer-based systems are increasingly being exposed to evolving security threats, which often reveal new vulnerabilities. A formal analysis of the evolving threats is difficult due to a number of practical considerations such as incomplete knowledge about the design, limited information about attacks, and constraints on organisational resources. In our earlier work on RISA (Risk assessment in Security Argumentation), we showed that informal risk assessment can complement the formal analysis of security requirements. In this paper, we integrate the formal and informal assessment of security by proposing a unified meta-model and an automated tool for supporting security argumentation called OpenRISA. Using a uniform representation of risks and arguments, our automated checking of formal arguments can identify relevant risks as rebuttals to those arguments, and identify mitigations from publicly available security catalogues when possible. As a result, security engineers are able to make informed and traceable decisions about the security of their computer-based systems. The application of OpenRISA is illustrated with examples from a PIN Entry Device case study. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Yu, Yijun] Open Univ, Dept Comp & Commun, Milton Keynes MK7 6AA, Bucks, England.
   [Tun, Thein Than] Open Univ, Milton Keynes MK7 6AA, Bucks, England.
   [Nuseibeh, Bashar] Open Univ, Comp, Milton Keynes MK7 6AA, Bucks, England.
   [Franqueira, Virginia N. L.] Univ Derby, Derby DE22 1GB, England.
   [Wieringa, Roel J.] Univ Twente, Informat Syst, NL-7500 AE Enschede, Netherlands.
   [Nuseibeh, Bashar] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Open University - UK; Open University - UK; Open University - UK;
   University of Derby; University of Twente; University of Limerick
RP Yu, YJ (corresponding author), Open Univ, Dept Comp & Commun, Milton Keynes MK7 6AA, Bucks, England.
EM y.yu@open.ac.uk
OI Nuseibeh, Bashar/0000-0002-3476-053X; Yu, Yijun/0000-0002-7154-8570;
   Franqueira, Virginia/0000-0003-1332-9115
FU ERC [291652]; SFI [03/CE2/I303_1]; Sentinels
FX The work is supported in part by the ERC Advanced Grant 291652 (Adaptive
   Security And Privacy, http://asap-project.eu), the SFI grant
   03/CE2/I303_1, and Sentinels (http://www.sentinels.nl). We would like to
   thank our colleague Paul Piwek for feedback on earlier draft of the
   paper.
CR [Anonymous], AAAI FALL S
   [Anonymous], GUID COND RISK ASS
   [Anonymous], 1996, Argumentation schemes for Presumptive Reasoning
   [Anonymous], 1991, Technical Report SSL-92-45
   [Anonymous], 2011, 27005 BS ISOIEC
   [Anonymous], 2004, Lucene in Action
   [Anonymous], CS200810 U VIRG
   Atkinson K., 2004, P 4 INT WORKSH COMP, P87
   Bench-Capon TJM, 2003, J LOGIC COMPUT, V13, P429, DOI 10.1093/logcom/13.3.429
   Bollobas B, 2002, Modern Graph Theory
   Borgman CL, 1996, J AM SOC INFORM SCI, V47, P493, DOI 10.1002/(SICI)1097-4571(199607)47:7<493::AID-ASI3>3.0.CO;2-P
   Burgemeestre B, 2010, LECT NOTES ARTIF INT, V6181, P214, DOI 10.1007/978-3-642-14183-6_16
   Card Payment Group, 2003, PIN ENTR DEV PROT PR
   Cohen R., 1987, Computational Linguistics, V13, P11
   Cyra L, 2007, PROC MONOGR ENG WATE, P1367
   Cyra L, 2011, RELIAB ENG SYST SAFE, V96, P26, DOI 10.1016/j.ress.2010.06.027
   Drimer S, 2008, P IEEE S SECUR PRIV, P281, DOI 10.1109/SP.2008.16
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P1, DOI 10.1002/0471739421
   Ernst N., 2006, 2006 First International Workshop on Requirements Engineering Visualization REV06 RE06 Workshop, P2, DOI DOI 10.1109/REV.2006.10
   Franqueira VNL, 2011, INT REQUIR ENG CONF, P239, DOI 10.1109/RE.2011.6051659
   Franqueira VNL, 2010, LECT NOTES COMPUT SC, V6426, P619
   Hakemi A, 2014, KSII T INTERNET INF, V8, P2118, DOI 10.3837/tiis.2014.06.018
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Huhn M, 2010, LECT NOTES COMPUT SC, V6416, P296, DOI 10.1007/978-3-642-16561-0_30
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Ionita D, 2014, 2014 IEEE 1ST WORKSHOP ON EVOLVING SECURITY AND PRIVACY REQUIREMENTS ENGINEERING (ESPRE), P7, DOI 10.1109/ESPRE.2014.6890521
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Kelly T, 1998, THESIS U YORK
   Kim KS, 2001, LIBR INFORM SCI RES, V23, P233, DOI 10.1016/S0740-8188(01)00081-0
   Lipson H.F., 2008, EVIDENCE ASSURANCE L
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Mastercard, 2004, PAYM CARD IND POS PI
   Mueller E. T., 2011, DISCRETE EVENT CALCU
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Potts C., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P418, DOI 10.1109/ICSE.1988.93722
   Prakken H, 2013, LECT NOTES ARTIF INT, V8143, P357, DOI 10.1007/978-3-642-40624-9_22
   Raspotnig C, 2013, J SYST SOFTWARE, V86, P1124, DOI 10.1016/j.jss.2012.12.002
   SHUM SB, 1994, INT J HUM-COMPUT ST, V40, P603, DOI 10.1006/ijhc.1994.1029
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Toulmin S., 1984, An introduction to reasoning, V2nd
   Tun TT, 2009, LECT NOTES COMPUT SC, V5512, P74, DOI 10.1007/978-3-642-02050-6_7
   Winther R., 2001, INT C COMPUTER SAFET, P14
   Yu Y., 2014, 14 WORKSH COMP MOD N
   Yu YJ, 2011, INT REQUIR ENG CONF, P351, DOI 10.1109/RE.2011.6051671
NR 45
TC 16
Z9 18
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2015
VL 106
BP 102
EP 116
DI 10.1016/j.jss.2015.04.065
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM1KF
UT WOS:000357439100007
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Saraiva, JDG
   de Franca, MS
   Soares, SCB
   Filho, FJCL
   de Souza, RMCR
AF Saraiva, Juliana de A. G.
   de Franca, Micael S.
   Soares, Sergio C. B.
   Filho, Fernando J. C. L.
   de Souza, Renata M. C. R.
TI Classifying metrics for assessing Object-Oriented Software
   Maintainability: A family of metrics' catalogs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software maintainability; Metrics; Object-Oriented Software Development
ID QUALITY
AB Object-Oriented Programming is one of the most used paradigms. Complementarily, the software maintainability is considered a software attribute playing an important role in quality level. In this context, Object-Oriented Software Maintainability (OOSM) has been studied through years, and many researchers have proposed a large number of metrics to measure it. Consequently, the decision-making process about which metrics can be adopted in experiments on OOSM is a hard task. Therefore, a metrics' categorization has been proposed to facilitate this process. As result, 7 categories and 17 subcategories were identified. These categories represent the scenarios of OOSM metrics adoption, and a family of OOSM metrics catalog was generated based on the selection of a metrics' categorization. Additionally, a quasi-experiment was conducted to check the coverage index of the catalogs generated using our approach over the catalogs suggested by experts. 90% of coverage was obtained with 99% of confidential level using the Wilcoxon Test. Complementarily, a survey was conducted to check the experts' opinion about the catalog generated by the portal when they were compared by the catalogs suggested by them. Therefore, this evaluation can be the first evidences of the usefulness of the family of the catalogs based on the metrics' categorization. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Saraiva, Juliana de A. G.; de Franca, Micael S.; Soares, Sergio C. B.; Filho, Fernando J. C. L.; de Souza, Renata M. C. R.] Univ Fed Pernambuco, Informat Ctr, BR-50740560 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Saraiva, JDG (corresponding author), Univ Fed Pernambuco, Informat Ctr, Cidade Univ, BR-50740560 Recife, PE, Brazil.
EM julianajag@gmail.com
RI Souza, Renata MCR/C-9467-2015; Soares, Sergio/K-3712-2012; Castor,
   Fernando/V-4011-2018
OI Soares, Sergio/0000-0002-4428-2535; Castor,
   Fernando/0000-0002-6389-3630; Souza, Renata/0000-0002-2849-1273
FU FACEPE
FX Juliana was supported by FACEPE. Sergio is partially supported by CNPq
   and FACEPE, grants 305085/2010-7 and APQ-0093-1.03/08. Fernando is
   supported by CNPq (306619/2011-3 and 475157/20109), FACEPE
   (APQ-0395-1.03/10), and by INES (CNPq 573964/2008-4 and FACEPE
   APQ-1037-1.03/08). This work was partially supported by the National
   Institute of Science and Technology for Software Engineering (INES),
   funded by CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08. We
   would like to thank the anonymous referees, who helped to improve this
   paper with insightful comments and suggestions.
CR Abdi MK, 2006, EUROMICRO CONF PROC, P310, DOI 10.1109/EUROMICRO.2006.20
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alshammari B, 2010, ASIA PAC SOFWR ENG, P186, DOI 10.1109/APSEC.2010.30
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Beszedes A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P103
   Borges A., 2014, P 8 ACM IEEE INT S E
   Bouwers E., 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, P44
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Campbell, 2002, EXPT QUASIEXPERIMENT
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Code G., 2013, GOOGLE CODE REPOSITO
   Farooq A., 2005, IEEE 9 INT MULT C IN, P1, DOI [10.1109/INMIC.2005.334410, DOI 10.1109/INMIC.2005.334410]
   Forge S., 2013, SOURC FORG REP
   Github, 2013, GITH REP
   Groven A.-K., 2010, P 4 EUR C SOFTW ARCH, P229, DOI DOI 10.1145/1842752.1842796
   Harrison R, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/STEP.1997.615494
   Icbmc, 2002, P INT C SOFTW MAINT, P44
   JavaForge, 2013, JAV REP
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Joshi P, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P319, DOI 10.1109/QUATIC.2010.63
   Juristo Moreno, 2001, BASICS SOFTWARE ENG
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kulkarni U. L., 2010, Proceedings of the Third International Conference on Emerging Trends in Engineering and Technology (ICETET 2010), P646, DOI 10.1109/ICETET.2010.159
   Lin M.C.Y., 2010, MAINTAINABILITY FACI
   Lupyan G., 2008, COGNITION, V108, P566
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Medeiros A. L., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P130, DOI 10.1109/SBCARS.2010.23
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Nesi P, 1996, J SYST SOFTWARE, V34, P43, DOI 10.1016/0164-1212(95)00064-X
   Nie Z., 2004, IIWEB, P123
   Oliveira MFS, 2008, MOMPES 2008: PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P68, DOI 10.1109/MOMPES.2008.11
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   SANTANNA C, 2003, P 17 BRAZ S SOFTW EN
   Saraiva Juliana, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P253, DOI 10.1049/ic.2012.0033
   Saraiva J., 2010, ECSA 10
   Saraiva J, 2013, INT WORKS EMERG TREN, P84, DOI 10.1109/WETSoM.2013.6619342
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sommerville Ian., 2007, International Computer Science Series
   Tigris, 2013, TIGR REP
   Veling A, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P694
   Weyuker E. J., 2011, Proceedings of the 2011 5th International Symposium on Empirical Software Engineering and Measurement (ESEM 2011), P1, DOI 10.1109/ESEM.2011.66
   Wilcox R., 2004, INTRO ROBUST ESTIMAT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhu MG, 2009, HIS 2009: 2009 NINTH INTERNATIONAL CONFERENCE ON HYBRID INTELLIGENT SYSTEMS, VOL 2, PROCEEDINGS, P70, DOI 10.1109/HIS.2009.126
NR 51
TC 15
Z9 15
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 85
EP 101
DI 10.1016/j.jss.2015.01.014
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500006
OA Green Published
DA 2024-07-18
ER

PT J
AU Kang, P
AF Kang, Pilsung
TI The effects of different alphabets on free text keystroke
   authentication: A case study on the Korean-English users
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Keystroke dynamics; User authentication; Free text
ID DYNAMICS; VERIFICATION; PERFORMANCE; BIOMETRICS; PATTERNS; SYSTEM; KEY
AB Keystroke dynamics is one of the representative behavioral biometrics, and it has been consistently recognized as an alternative to physiological biometrics for user authentication to strengthen the level of security. This paper investigates the effects that languages with different alphabets and different familiarity levels have on the free text keystroke authentication performance using Korean-English data collected from 83 Korean participants. In order to exploit the familiarity level, two typing characteristics are measured and tested. Student's t-test reveals that the participants have higher typing proficiency but lower typing consistency in the language with the more familiar alphabet, i.e., their primary language (Korean). Typing proficiency is found to be a critical factor when only keystroke latencies are utilized during authentication, whereas typing consistency is found to be a critical factor when key sequence information is utilized in addition to keystroke latencies. The experimental results can be applied to build a customized keystroke dynamics-based authentication system, which adaptively determines the authentication method as well as the keystroke size based on a user's typing characteristics. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Kang, Pilsung] Korea Univ, Sch Ind Management Engn, Seoul, South Korea.
C3 Korea University
RP Kang, P (corresponding author), Korea Univ, 136-713 5th Floor,Engn Bldg,145 Anam Ro, Seoul, South Korea.
EM pilsung.kang@gmail.com
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Science, ICT, & Future Planning
   [NRF-2014R1A1A1004648]
FX This work was supported by Basic Science Research Program through the
   National Research Foundation of Korea (NRF) funded by the Ministry of
   Science, ICT, & Future Planning (NRF-2014R1A1A1004648).
CR Ahmed AA, 2014, IEEE T CYBERNETICS, V44, P458, DOI 10.1109/TCYB.2013.2257745
   ANDERSON TW, 1962, ANN MATH STAT, V33, P1148, DOI 10.1214/aoms/1177704477
   [Anonymous], 2011, CLIMATE CHANGE HINDU, DOI DOI 10.1109/PACCS.2011.5990168
   [Anonymous], 2010, PROC 4 IEEE INT C BI
   Araújo LCF, 2005, IEEE T SIGNAL PROCES, V53, P851, DOI 10.1109/TSP.2004.839903
   Bergadano F., 2002, ACM Transactions on Information and Systems Security, V5, P367, DOI 10.1145/581271.581272
   BLEHA S, 1990, IEEE T PATTERN ANAL, V12, P1217, DOI 10.1109/34.62613
   Chang TY, 2012, INFORM SCIENCES, V211, P36, DOI 10.1016/j.ins.2012.04.009
   Chang TY, 2012, J SYST SOFTWARE, V85, P1157, DOI 10.1016/j.jss.2011.12.044
   Chen W, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P467, DOI 10.1109/IRI.2004.1431505
   Crawford H, 2010, ANN CONF PRIV SECUR, P205, DOI 10.1109/PST.2010.5593258
   Davoudi H., 2009, 2009 14th International CSI Computer Conference (CSICC 2009) (Postponed from July 2009), P570, DOI 10.1109/CSICC.2009.5349640
   Feher C, 2012, INFORM SCIENCES, V201, P19, DOI 10.1016/j.ins.2012.02.066
   Giot R., 2009, P 3 INT C BIOMETRIC, P1
   Giot R, 2012, EXPERT SYST APPL, V39, P1837, DOI 10.1016/j.eswa.2011.08.066
   Gunetti D., 2005, ACM Transactions on Information and Systems Security, V8, P312, DOI 10.1145/1085126.1085129
   Gunetti D, 2005, LECT NOTES COMPUT SC, V3646, P133
   Horne J., 2011, Educational and Child Psychcology, V28, P52
   Hosseinzadeh D, 2008, IEEE T SYST MAN CY C, V38, P816, DOI 10.1109/TSMCC.2008.2001696
   Hu J, 2008, IEEE ICC, P1556, DOI 10.1109/ICC.2008.301
   Hwang SS, 2009, EXPERT SYST APPL, V36, P10649, DOI 10.1016/j.eswa.2009.02.075
   Kaneko Y, 2011, ANN CONF PRIV SECUR, P93
   Kang P, 2008, COMPUT SECUR, V27, P3, DOI 10.1016/j.cose.2008.02.001
   Kang P, 2015, INFORM SCIENCES, V308, P72, DOI 10.1016/j.ins.2014.08.070
   Kang P, 2009, PATTERN RECOGN, V42, P3115, DOI 10.1016/j.patcog.2009.04.009
   Karnan M, 2011, APPL SOFT COMPUT, V11, P1565, DOI 10.1016/j.asoc.2010.08.003
   Killourhy KS, 2009, I C DEPEND SYS NETWO, P125, DOI 10.1109/DSN.2009.5270346
   Lin DT, 1997, 1997 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS, VOLS 1-4, P174, DOI 10.1109/ICNN.1997.611659
   Marsaglia G., 2003, Journal of Statistical Software, V8, P1, DOI DOI 10.18637/JSS.V008.I18
   Messerman Arik., 2011, BIOMETRICS IJCB 2011, P1, DOI [DOI 10.1109/IJCB.2011.6117552, 10.1109/IJCB.2011.6117552]
   Monrose F., 2002, International Journal of Information Security, V1, P69, DOI 10.1007/s102070100006
   Monrose F, 2000, FUTURE GENER COMP SY, V16, P351, DOI 10.1016/S0167-739X(99)00059-X
   Montalvao JR, 2006, PATTERN RECOGN LETT, V27, P1440, DOI 10.1016/j.patrec.2006.01.010
   Ngugi B., 2011, Journal of Data and Information Quality, V2, p11:1, DOI DOI 10.1145/1891879.1891884
   Obaidat MS, 1997, INFORM SCIENCES, V102, P239, DOI 10.1016/S0020-0255(97)00016-9
   Peacock A, 2004, IEEE SECUR PRIV, V2, P40, DOI 10.1109/MSP.2004.89
   Samura T, 2013, PROC SICE ANN CONF, P265
   Sheng Y, 2005, IEEE T SYST MAN CY B, V35, P826, DOI 10.1109/TSMCB.2005.846648
   Shimshon T., 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P411, DOI 10.1109/CIS.2010.95
   Sim T., 2007, P IEEE C COMPUTER VI, P1
   SMIRNOV N, 1948, ANN MATH STAT, V19, P279, DOI 10.1214/aoms/1177730256
   Stefan D, 2012, COMPUT SECUR, V31, P109, DOI 10.1016/j.cose.2011.10.001
   Tappert C.C., 2010, BEHAV BIOMETRICS HUM, P342, DOI DOI 10.4018/978-1-60566-725-6.CH016
   Tappert CC, 2010, INT J INF SECUR PRIV, V4, P32, DOI 10.4018/jisp.2010010103
   Teh PS, 2011, PATTERN ANAL APPL, V14, P23, DOI 10.1007/s10044-009-0167-9
   Teh PS, 2010, EXPERT SYST APPL, V37, P8618, DOI 10.1016/j.eswa.2010.06.097
   Uzun Y, 2012, COMPUT SECUR, V31, P717, DOI 10.1016/j.cose.2012.04.002
   Villani M., 2006, P 2006 C COMPUTER VI, P39
   Xi K, 2011, COMPUT J, V54, P1632, DOI 10.1093/comjnl/bxr064
   Yager N, 2010, IEEE T PATTERN ANAL, V32, P220, DOI 10.1109/TPAMI.2008.291
   Ying Zhang, 2010, Proceedings of the 2010 Fourth International Conference on Genetic and Evolutionary Computing (ICGEC 2010), P578, DOI 10.1109/ICGEC.2010.148
NR 51
TC 6
Z9 6
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2015
VL 102
BP 1
EP 11
DI 10.1016/j.jss.2014.12.017
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD2RS
UT WOS:000350927300001
DA 2024-07-18
ER

PT J
AU Wang, XZ
   Luo, XF
   Liu, HM
AF Wang, Xinzhi
   Luo, Xiangfeng
   Liu, Huiming
TI Measuring the veracity of web event via uncertainty
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web event veracity; Topic detection and tracking; Big data
AB Web events, whose data occur as one kind of big data, have attracted considerable interests during the past years. However, most existing related works fail to measure the veracity of web events. In this research, we propose an approach to measure the veracity of web event via its uncertainty based on its features distribution on different kind of confident websites. Firstly, the proposed approach mines various event features from the data of web event which may influence on the measuring process of uncertainty. Secondly, one computational model is introduced to simulate the influence process of the above features on the evolution process of web event. Thirdly, matrix operations are managed to facilitate practice. Finally, experiments are made based on the analysis above, and the results proved that the proposed uncertainty measuring algorithm is promising to measure the veracity of web event for big data. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Wang, Xinzhi; Luo, Xiangfeng; Liu, Huiming] Shanghai Univ, Sch Comp Engn & Sci, Shanghai 200444, Peoples R China.
   [Luo, Xiangfeng] State Key Lab Math Engn & Adv Comp, Wuxi, Peoples R China.
C3 Shanghai University
RP Luo, XF (corresponding author), Shanghai Univ, Sch Comp Engn & Sci, 333 Nanchen Rd, Shanghai 200444, Peoples R China.
EM wxz8912@163.com; luoxf@shu.edu.cn; a60695420@163.com
OI Wang, Xinzhi/0000-0001-8218-3389
FU National Science Foundation of China [91024012, 91324005]; State Key
   Laboratory of Mathematical Engineering and Advanced Computing
FX This work was supported in part by the National Science Foundation of
   China under Grant nos. 91024012, 91324005 and the Open Project Program
   of the State Key Laboratory of Mathematical Engineering and Advanced
   Computing.
CR Allan J., 1998, Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P37, DOI 10.1145/290941.290954
   Allan J., 2000, TOPIC DETECTION TRAC
   Allan J., 1998, P DARPA BROADC NEWS
   [Anonymous], INTRO EMERGENCY MANA
   [Anonymous], P 15 INT C WORLD WID
   Chen CC, 2007, IEEE T SYST MAN CY A, V37, P237, DOI 10.1109/TSMCA.2006.886370
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Jin X., 2010, Proceedings of the 19th international conference on World Wide Web, P481
   Jo Y, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P370
   Li Frederick W. B., 2011, Journal of Multimedia, V6, P107, DOI 10.4304/jmm.6.2.107-114
   Li Q, 2009, IEEE INTERNET COMPUT, V13, P11, DOI 10.1109/MIC.2009.83
   Makkonen J., 2003, P C N AM CHAPTER ASS, P43
   Mei Qiaozhu., 2005, KDD 05, P198, DOI DOI 10.1145/1081870.1081895
   Metzger M.J., 2000, OVERVIEW INTERNET CR
   Nallapati R., 2004, P 13 ACM INT C INF K, P446, DOI DOI 10.1145/1031171.1031258
   Ng B, 2005, IEEE T MULTIMEDIA, V7, P1054, DOI 10.1109/TMM.2005.858388
   Ng B, 2003, INFORM SCIENCES, V154, P85, DOI 10.1016/S0020-0255(03)00036-7
   Salton G., 1973, SPECIFICATION TERM V
   Wathen CN, 2002, J AM SOC INF SCI TEC, V53, P134, DOI 10.1002/asi.10016
   Wei CP, 2007, IEEE T SYST MAN CY A, V37, P273, DOI 10.1109/TSMCA.2006.886377
   Yang CC, 2009, IEEE T SYST MAN CY A, V39, P850, DOI 10.1109/TSMCA.2009.2015885
   Yang K.C.C., 2007, Telematics and Informatics, V24, P69, DOI DOI 10.1016/J.TELE.2006.04.001
   Yin XX, 2008, IEEE T KNOWL DATA EN, V20, P796, DOI 10.1109/TKDE.2007.190745
   Zhang XY, 2014, J COMPUT SYST SCI, V80, P1008, DOI 10.1016/j.jcss.2014.02.007
   Zhang XY, 2014, IEEE T PARALL DISTR, V25, P363, DOI 10.1109/TPDS.2013.48
NR 25
TC 14
Z9 16
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2015
VL 102
BP 226
EP 236
DI 10.1016/j.jss.2014.07.023
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD2RS
UT WOS:000350927300018
DA 2024-07-18
ER

PT J
AU Wieringa, R
AF Wieringa, Roe
TI Empirical research methods for technology validation: Scaling up to
   practice
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Empirical research methodology; Technology validation; Scaling up to
   practice
ID MECHANISMS; STATISTICS; THINKING
AB Before technology is transferred to the market, it must be validated empirically by simulating future practical use of the technology. Technology prototypes are first investigated in simplified contexts, and these simulations are scaled up to conditions of practice step by step as more becomes known about the technology. This paper discusses empirical research methods for scaling up new requirements engineering (RE) technology.
   When scaling up to practice, researchers want to generalize from validation studies to future practice. An analysis of scaling up technology in drug research reveals two ways to generalize, namely inductive generalization using statistical inference from samples, and analogic generalization using similarity between cases. Both are supported by abductive inference using mechanistic explanations of phenomena observed in the simulations. Illustrations of these inferences both in drug research and empirical RE research are given. Next, four kinds of methods for empirical RE technology validation are given, namely expert opinion, single-case mechanism experiments, technical action research and statistical difference-making experiments. A series of examples from empirical RE will illustrate the use of these methods, and the role of inductive generalization, analogic generalization, and abductive inference in them. Finally, the four kinds of empirical validation methods are compared with lists of validation methods known from empirical software engineering. The lists are combined to give an overview of some of the methods, instruments and data analysis techniques that may be used in empirical RE. (C) 2013 Elsevier Inc. All rights reserved.
C1 Univ Twente, Dept Elect Engn Math & Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Wieringa, R (corresponding author), Univ Twente, Dept Elect Engn Math & Comp Sci, POB 217, NL-7500 AE Enschede, Netherlands.
EM r.j.wieringa@utwente.nl
CR Al-Emran Ahmed, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P157, DOI 10.1109/RE.2010.28
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], TR1051 IND U INF SYS
   Apostel Leo., 1961, CONCEPT ROLE MODEL M, P1
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   Bechtel W., 2010, Discovering Complexity: Decomposition and Localization as Strategies in Scientific Research
   Bechtel W, 2005, STUD HIST PHI PART C, V36, P421, DOI 10.1016/j.shpsc.2005.03.010
   Bunge M, 2004, PHILOS SOC SCI, V34, P182, DOI 10.1177/0048393103262550
   Constant EdwardW., 1980, The Origins of the Turbojet Revolution
   Cook S., 1994, DESIGNING OBJECT SYS
   Cowan Christine C, 2002, AANA J, V70, P385
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Davis A., 2004, 2 INT WORKSH COMP EV, P7
   Douven I., 2011, STANFORD ENCY PHILOS
   Elster Jon., 1989, Nuts and Bolts for the Social Sciences, DOI DOI 10.1017/CBO9780511812255
   Engelsman Wilco, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P306, DOI 10.1007/978-3-642-28714-5_27
   Gacitua R, 2011, REQUIR ENG, V16, P251, DOI 10.1007/s00766-011-0122-3
   GIGERENZER G, 1984, AM J PSYCHOL, V97, P185, DOI 10.2307/1422594
   Glennan Stuart S., 1996, Erkenntnis, V44, P49, DOI [DOI 10.1007/BF00172853, 10.1007/BF00172853]
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Hacking Ian., 2001, An Introduction to Probability and Inductive Logic, pXi
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hedström P, 2010, ANNU REV SOCIOL, V36, P49, DOI 10.1146/annurev.soc.012809.102632
   HOLLAND PW, 1986, J AM STAT ASSOC, V81, P945, DOI 10.2307/2289064
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Illari PM, 2012, EUR J PHILOS SCI, V2, P119, DOI 10.1007/s13194-011-0038-2
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kitchenham B., 2004, TRSE04010400011T1 KE
   Machamer P, 2000, PHILOS SCI, V67, P1, DOI 10.1086/392759
   Molzon J., 2005, DRUG INJURY LIABILIT, P3
   Morali Ayse, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P199, DOI 10.1109/RE.2010.30
   NEHLIG A, 1992, BRAIN RES REV, V17, P139, DOI 10.1016/0165-0173(92)90012-B
   Pawson R., 2004, REALISTIC EVALUATION
   Pearl J., 2009, CAUSALITY MODELS REA
   Pearl J, 2009, STAT SURV, V3, P96, DOI 10.1214/09-SS057
   Petroski H., 1994, DESIGN PARADIGMS CAS
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Robinson WS, 1951, AM SOCIOL REV, V16, P812, DOI 10.2307/2087508
   Russo Federica., 2007, INT STUD PHILOS SCI, V21, P157, DOI [10.1080/02698590701498084, DOI 10.1080/02698590701498084]
   Schurz G, 2008, SYNTHESE, V164, P201, DOI 10.1007/s11229-007-9223-4
   Sedgwick P, 2011, BRIT MED J, V343, DOI 10.1136/bmj.d7453
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P37, DOI 10.1109/RE.2010.15
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   van Aken JE, 2004, J MANAGE STUD, V41, P219, DOI 10.1111/j.1467-6486.2004.00430.x
   Vincenti WalterG., 1990, What Engineers Know and How They Know It Analytical Studies from Aeronautical History
   Wieringa Roel, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P220, DOI 10.1007/978-3-642-29863-9_17
   Wieringa R.J., 2003, Design Methods for Reactive Systems: Yourdon, Statemate
   Wieringa R, 2012, INT SYMP EMP SOFTWAR, P157, DOI 10.1145/2372251.2372279
   Wieringa R, 2011, INT SYMP EMP SOFTWAR, P295, DOI 10.1109/ESEM.2011.38
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Williamson J, 2011, PHILOS COMPASS, V6, P421, DOI 10.1111/j.1747-9991.2011.00400.x
   WILLNER P, 1991, ADV PHAR SC, P183
   Wonnacott P., 1990, Economics, V4th
   Woodward J., 2003, MAKING THINGS HAPPEN, DOI [10.1093/0195155270.001.0001, DOI 10.1093/0195155270.001.0001]
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Znaniecki F., 1968, METHOD SOCIOLOGY
NR 63
TC 39
Z9 45
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2014
VL 95
BP 19
EP 31
DI 10.1016/j.jss.2013.11.1097
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4VC
UT WOS:000341338500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Cabot, J
   Clarisó, R
   Riera, D
AF Cabot, J.
   Clariso, R.
   Riera, D.
TI On the verification of UML/OCL class diagrams using constraint
   programming
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE UML/OCL; Model verification; Constraint programming
ID UML CLASS DIAGRAMS; SATISFIABILITY; SEMANTICS; SCHEMAS; MODELS; OCL
AB Assessment of the correctness of software models is a key issue to ensure the quality of the final application. To this end, this paper presents an automatic method for the verification of UML class diagrams extended with OCL constraints. Our method checks compliance of the diagram with respect to several correctness properties including weak and strong satisfiability or absence of constraint redundancies among others. The method works by translating the UML/OCL model into a Constraint Satisfaction Problem (CSP) that is evaluated using state-of-the-art constraint solvers to determine the correctness of the initial model. Our approach is particularly relevant to current MDA and MOD methods where software models are the primary artifacts of the development process and the basis for the (semi-)automatic code-generation of the final application. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Cabot, J.] Ecole Mines Nantes, INRIA, AtlanMod Res Grp, F-44307 Nantes 3, France.
   [Clariso, R.; Riera, D.] Univ Oberta Catalunya, Estudis Informat Multimedia & Telecomunicacio, Barcelona 08018, Spain.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Inria; UOC Universitat
   Oberta de Catalunya
RP Clarisó, R (corresponding author), Univ Oberta Catalunya, Estudis Informat Multimedia & Telecomunicacio, Rambla Poblenou 156, Barcelona 08018, Spain.
EM jordi.cabot@inria.fr; rclariso@uoc.edu; drierat@uoc.edu
RI Terrén, Daniel Riera/B-1713-2009; Clariso, Robert/B-5450-2009; Cabot,
   Jordi/P-7723-2015
OI Terrén, Daniel Riera/0000-0002-4718-7234; Clariso,
   Robert/0000-0001-9639-0186; Cabot, Jordi/0000-0003-2418-2489
FU Spanish Ministry of Science and Innovation through the project "Design
   and construction of a Conceptual Modeling Assistant"
   [TIN2008-00444/TIN]; Internet Interdisciplinary Institute (IN3) at UOC
FX This work is partially funded by the Spanish Ministry of Science and
   Innovation through the project "Design and construction of a Conceptual
   Modeling Assistant" (TIN2008-00444/TIN - Grupo Consolidado) and a
   research grant from the Internet Interdisciplinary Institute (IN3) at
   UOC. The authors would like to thank Patricia de la Fuente, Christian
   Perez and David Gafian for their work on the implementation of the tool.
   The authors would also like to thank the members of the Conceptual
   Modeling Group (GMC) at the Universitat Politecnica de Catalunya for
   their comments.
CR Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], 2010, MANAGEMENT
   [Anonymous], 2000, Knowledge Representation: Logical, Philosophical, and Computational Foundations
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   [Anonymous], 2011, OBJ MAN GROUP UML 2
   Apt K.R., 2007, CONSTRAINT LOGIC PRO
   Artale A, 2010, LECT NOTES COMPUT SC, V6412, P317, DOI 10.1007/978-3-642-16373-9_23
   Balaban M., 2008, P 21 INT WORKSH DESC, V353
   Beckert B., 2007, LECT NOTES COMPUTER, V4334
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   Brucker A.D., 2006, HOL OCL BOOK
   Brucker AD, 2010, LECT NOTES COMPUT SC, V6002, P261
   Brucker AD, 2009, ACTA INFORM, V46, P255, DOI 10.1007/s00236-009-0093-8
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot J, 2006, LECT NOTES COMPUT SC, V4066, P256
   Cabot J, 2010, SOFTW SYST MODEL, V9, P335, DOI 10.1007/s10270-009-0129-0
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cabot J, 2009, LECT NOTES COMPUT SC, V5423, P40
   Cadoli M., 2004, P INT WORKSH DESCR L, V104
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Demuth B, 2004, Proceedings of the Thirteenth International Conference on Information Systems Development: Advances in Theory, Practice and Education, P218
   Dinh-Trong TT, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P95
   Endes A., 2003, FRAUNHOFER IESE SERI
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Graphviz, GRAPH VIS SOFTW
   Heidenreich F., 2008, FRAMEWORK GENERATING, P9
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Malgouyres Y., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1804, DOI 10.1145/1141277.1141703
   Maraee A, 2007, LECT NOTES COMPUT SC, V4530, P17
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Queralt A, 2008, LECT NOTES COMPUT SC, V5074, P281
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2010, LECT NOTES COMPUT SC, V6412, P438, DOI 10.1007/978-3-642-16373-9_32
   Queralt A, 2009, LECT NOTES COMPUT SC, V5565, P47, DOI 10.1007/978-3-642-02144-2_9
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   The ECL1PSe, 2007, ECLPSE CONSTRAINT PR
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Wahler M, 2010, SOFTW SYST MODEL, V9, P225, DOI 10.1007/s10270-009-0123-6
   Weissleder Stephan, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P517, DOI 10.1109/ICST.2008.40
   Yu F., 2007, Proceedings of the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE), P331
NR 49
TC 80
Z9 83
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2014
VL 93
BP 1
EP 23
DI 10.1016/j.jss.2014.03.023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI5AJ
UT WOS:000336877500001
OA Green Published
DA 2024-07-18
ER

PT J
AU Risco-Martín, JL
   Colmenar, JM
   Hidalgo, JI
   Lanchares, J
   Díaz, J
AF Risco-Martin, Jose L.
   Manuel Colmenar, J.
   Ignacio Hidalgo, J.
   Lanchares, Juan
   Diaz, Josefa
TI A methodology to automatically optimize dynamic memory managers applying
   grammatical evolution
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Genetic programming; Dynamic memory manager; Multi-objective
   optimization
ID ALLOCATION; DESIGN
AB Modern consumer devices must execute multimedia applications that exhibit high resource utilization. In order to efficiently execute these applications, the dynamic memory subsystem needs to be optimized. This complex task can be tackled in two complementary ways: optimizing the application source code or designing custom dynamic memory management mechanisms. Currently, the first approach has been well established, and several automatic methodologies have been proposed. Regarding the second approach, software engineers often write custom dynamic memory managers from scratch, which is a difficult and error-prone work. This paper presents a novel way to automatically generate custom dynamic memory managers optimizing both performance and memory usage of the target application. The design space is pruned using grammatical evolution converging to the best dynamic memory manager implementation for the target application. Our methodology achieves important improvements (62.55% and 30.62% better on average in performance and memory usage, respectively) when its results are compared to five different general-purpose dynamic memory managers. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Risco-Martin, Jose L.; Ignacio Hidalgo, J.; Lanchares, Juan] Univ Complutense Madrid, Dept Comp Architecture & Automat, E-28040 Madrid, Spain.
   [Manuel Colmenar, J.] Univ Complutense Madrid, CES Felipe 2, Aranjuez 28300, Spain.
   [Diaz, Josefa] Univ Extremadura, CU Merida, Merida 06800, Spain.
C3 Complutense University of Madrid; Complutense University of Madrid;
   Universidad de Extremadura
RP Risco-Martín, JL (corresponding author), Univ Complutense Madrid, Dept Comp Architecture & Automat, E-28040 Madrid, Spain.
EM jlrisco@dacya.ucm.es
RI Martín, José Luis Risco/B-6940-2008; Colmenar, José Manuel/L-2680-2014;
   Hidalgo, J. Ignacio/ABC-8233-2021; Díaz Álvarez, Josefa/ABG-5328-2020
OI Martín, José Luis Risco/0000-0002-3127-6507; Colmenar, José
   Manuel/0000-0001-7490-9450; Hidalgo, J. Ignacio/0000-0002-3046-6368;
   Díaz Álvarez, Josefa/0000-0003-2105-3905
CR [Anonymous], 2012, The Garbage Collection Handbook
   [Anonymous], 2003, Grammatical evolution: Evolutionary automatic programming in an arbitrary language
   Atienza D, 2006, INTEGRATION, V39, P113, DOI 10.1016/j.vlsi.2004.08.003
   Atienza D, 2006, ACM T DES AUTOMAT EL, V11, P465, DOI 10.1145/1142155.1142165
   BARRETT DA, 1993, SIGPLAN NOTICES, V28, P187, DOI 10.1145/173262.155108
   Berger ED, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/583854.582421
   Berger ED, 2001, ACM SIGPLAN NOTICES, V36, P114, DOI 10.1145/381694.378821
   Brabazon A., 2006, BIOL INSPIRED ALGORI
   Brabazon A, 2008, IEEE COMPUT INTELL M, V3, P42, DOI 10.1109/MCI.2008.929841
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   Dempsey I., 2007, International Journal of Innovative Computing and Applications, V1, P23, DOI 10.1504/IJICA.2007.013399
   Diaz J., 2011, SCSC 2011 SUMM COMP, P1
   GRUNWALD D, 1993, SOFTWARE PRACT EXPER, V23, P851, DOI 10.1002/spe.4380230804
   Guodong Teng, 2008, 2008 Second International Conference on Sensor Technologies and Applications (SENSORCOMM), P462, DOI 10.1109/SENSORCOMM.2008.9
   Johnstone MS, 1999, ACM SIGPLAN NOTICES, V34, P26, DOI 10.1145/301589.286864
   Lea D., 2010, MEMORY ALLOCATOR
   Lo CTD, 2004, J SYST SOFTWARE, V72, P443, DOI 10.1016/S0164-1212(03)00095-5
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Meyers Scott., 1995, More Effective C++: 35 New Ways to Improve Your Programs and Designs
   O'Neill M, 2001, IEEE T EVOLUT COMPUT, V5, P349, DOI 10.1109/4235.942529
   Poli R., 2008, A Field Guide to Genetic Programming
   Risco-Martin J.L., 2008, PABA
   Risco-Martín JL, 2011, MICROPROCESS MICROSY, V35, P755, DOI 10.1016/j.micpro.2011.08.003
   Risco-Martín JL, 2010, 13TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN: ARCHITECTURES, METHODS AND TOOLS, P275, DOI 10.1109/DSD.2010.44
   Risco-Martín JL, 2010, PARALLEL COMPUT, V36, P572, DOI 10.1016/j.parco.2010.07.001
   RISCOMARTIN JL, 2009, GECCO 09, P1609, DOI DOI 10.1145/1569901.1570116
   Sipser M., 1996, Introduction to the Theory of Computation, V1
   Vijaykrishnan N, 2003, IEEE T COMPUT, V52, P59, DOI 10.1109/TC.2003.1159754
   Wilson PR, 1995, LECT NOTES COMPUT SC, V986, P1
NR 29
TC 13
Z9 13
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2014
VL 91
SI SI
BP 109
EP 123
DI 10.1016/j.jss.2013.12.044
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE5BA
UT WOS:000334001600008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Antunes, P
   Herskovic, V
   Ochoa, SF
   Pino, JA
AF Antunes, Pedro
   Herskovic, Valeria
   Ochoa, Sergio F.
   Pino, Jose A.
TI Reviewing the quality of awareness support in collaborative applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Awareness; Formative evaluation; Collaborative applications; Software
   quality
ID SITUATION AWARENESS; INSPECTIONS; DESIGN; MEDIA; STATE
AB Awareness to users is a valuable feature of a collaborative system. Therefore, the designers of a system of this type may find it useful to receive hints on the awareness support provided by the system when it is under development or evolution. This paper proposes a tool for their use to obtain suggestions on the awareness features provided by the system and those not currently supported by it. The considered kinds of awareness were obtained from a review of a significant number of proposals from the literature. The tool is based on a checklist of design elements related to these awareness types to be applied by the application designer. The construction of this checklist was done as follows. The process started with an analysis of the types of awareness to be provided. This step ended with 54 selected design elements and six awareness types. Experts on the development of collaborative systems used their experience to provide correlations between the design elements and the types of awareness previously identified, thus encapsulating their expertise within the checklist. The proposal was applied to three existing collaborative systems and the results are presented. The obtained results suggest that the checklist is adequate to provide helpful hints that may be used to improve an application's awareness support. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Antunes, Pedro] Victoria Univ Wellington, Sch Informat Management, Wellington, New Zealand.
   [Herskovic, Valeria] Pontificia Univ Catolica Chile, Dept Comp Sci, Santiago, Chile.
   [Ochoa, Sergio F.; Pino, Jose A.] Univ Chile, Dept Comp Sci, Santiago, Chile.
C3 Victoria University Wellington; Pontificia Universidad Catolica de
   Chile; Universidad de Chile
RP Herskovic, V (corresponding author), Pontificia Univ Catolica Chile, Dept Comp Sci, Av V Mackenna 4860, Santiago, Chile.
EM vherskov@ing.puc.cl
RI Ochoa, Sergio F./J-3740-2016; Herskovic, Valeria/D-1687-2014; Antunes,
   Pedro A/B-8664-2008; Pino Urtubia, Jose/G-6404-2016
OI Ochoa, Sergio F./0000-0002-0431-8767; Herskovic,
   Valeria/0000-0002-2650-6507; Antunes, Pedro A/0000-0002-5411-8798; Pino
   Urtubia, Jose/0000-0002-8466-6453
FU Portuguese Foundation for Science and Technology [PTDC/EIA/102875/2008];
   Fondecyt (Chile) [1120207, 11110056]
FX This paper was supported by the Portuguese Foundation for Science and
   Technology (PTDC/EIA/102875/2008) and Fondecyt (Chile) Grants No 1120207
   and 11110056.
CR [Anonymous], P CHI 92 C HUM FACT
   [Anonymous], MERR WEBST DICT
   [Anonymous], P CSCW 98 HANDH CSCW
   Antunes P., 2011, 15 INT C COMP SUPP C
   Antunes P., 2011, P 44 HAW INT C SYST
   Antunes P, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089128
   Antunes P, 2010, LECT NOTES COMPUT SC, V6257, P1, DOI 10.1007/978-3-642-15714-1_1
   Arvola M, 2006, INT J COMPUT APPL T, V25, P128, DOI 10.1504/IJCAT.2006.009063
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Baker K., 2002, P 2002 ACM C COMP SU
   Bardram JE, 2010, COMPUT SUPP COOP W J, V19, P105, DOI 10.1007/s10606-010-9110-2
   Begole J., 1999, ACM Transactions on Computer-Human Interaction, V6, P95, DOI 10.1145/319091.319096
   Bergstrand F., 2009, C INF SYST CRIS RESP
   Boedker S., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P1, DOI 10.1007/s10606-005-9011-y
   Brewer J, 2008, INT J HUM-COMPUT ST, V66, P963, DOI 10.1016/j.ijhcs.2008.03.003
   Brezillon P., 2004, P 2004 IFIP INT C DE
   Carroll JM, 2003, INT J HUM-COMPUT ST, V58, P605, DOI 10.1016/S1071-5819(03)00024-7
   Cecez-Kecmanovic D., 2005, KNOWLEDGE MANAGEMENT
   Convertino G., 2005, P 3 INT C COORD MULT
   Convertino G., 2004, P 3 NORD C HUM COMP
   Dennis AR, 2008, MIS QUART, V32, P575
   DESANCTIS G, 1987, MANAGE SCI, V33, P589, DOI 10.1287/mnsc.33.5.589
   Dix A., 2000, ACM T CHI
   DOURISH P, 2006, P 2006 20 ANN C COMP
   Dourish P., 1992, ACM C COMP SUPP COOP
   DOURISH P, 2001, WHERE ACTION IS
   Dourish P., 1992, P 1992 ACM C COMP SU
   Endsley M., 1988, P IEEE NAT AER EL C
   Endsley M., 2001, Cognitive Systems Engineering in Military Aviation Environments: Avoiding Cogminutia Fragmentosa, P46
   Endsley M.R., 2003, Designing for situation awareness: an approach to User-Centered design
   Endsley M. R., 2000, Situation Awareness Analysis and Measurement
   ENDSLEY MR, 1995, HUM FACTORS, V37, P32, DOI 10.1518/001872095779049543
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Ferreira A, 2011, GROUP DECIS NEGOT, V20, P643, DOI 10.1007/s10726-011-9233-y
   Ferreira A, 2009, INFORM RES, V14
   Fisher D., 2004, P SIGCHI C HUM FACT
   Garcia A.S., 2008, P 7 ACM SIGGRAPH 08
   Gavalas D, 2011, J SYST SOFTWARE, V84, P1823, DOI 10.1016/j.jss.2011.07.035
   Greenberg S., 1999, Personal Technologies, V3, P54, DOI 10.1007/BF01305320
   Greenberg S., 1996, P ACM SIGCHI 96 C HU
   Greenberg S, 2003, SHARING EXPERTISE: BEYOND KNOWLEDGE MANAGEMENT, P203
   Grenbmk K., 2002, P 13 ACM C HYP HYP
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1999, ACM Transactions on Computer-Human Interaction, V6, P243, DOI 10.1145/329693.329696
   Gutwin C., 1998, P SIGCHI C HUM FACT
   Gutwin C., 2000, WETICE 00
   Haake J., 2004, P ACM C COMP SUPP CO
   Harrison S., 1996, P 1996 ACM C COMP SU
   Harrison S., 2006, P 1996 ACM C COMP SU
   HAUSER JR, 1988, HARVARD BUS REV, V66, P63
   Herskovic V, 2007, LECT NOTES COMPUT SC, V4715, P328, DOI 10.1007/978-3-540-74812-0_26
   Hill J., 2003, P 2003 INT ACM SIGGR
   Holzinger A, 2005, COMMUN ACM, V48, P71, DOI 10.1145/1039539.1039541
   Hornecker E., 2008, P 2008 ACM C COMP SU
   Jensen Eva, 2009, Cognition, Technology & Work, V11, P103, DOI 10.1007/s10111-007-0084-x
   Johansen R., 1991, LEADING BUSINESS TEA
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   Koch M., 2000, ACM COMPUTING SURVEY, V32
   Kock N, 2007, DECIS SUPPORT SYST, V44, P175, DOI 10.1016/j.dss.2007.03.011
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lauwers J., 1990, P SIGCHI C HUM FACT
   Liu C, 2011, J SYST SOFTWARE, V84, P2022, DOI 10.1016/j.jss.2011.06.049
   MacEachren A.M., 2005, Exploring Geovisualization, P445
   MacMillan J., 2004, HDB HUMAN FACTORS ER, P3
   Markopoulos P, 2009, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-1-84882-477-5
   MATURANA HR, 1980, AUTOPOIESIS COGNITIO
   Meadows D.H., 2009, THINKING SYSTEMS
   Monares A, 2011, EXPERT SYST APPL, V38, P1255, DOI 10.1016/j.eswa.2010.05.018
   Nacenta M., 2007, P GRAPH INT 2007
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Ochoa SF, 2011, GROUP DECIS NEGOT, V20, P39, DOI 10.1007/s10726-010-9203-9
   Pascoe J, 1999, LECT NOTES COMPUT SC, V1707, P208
   Pinelle D., 2000, P 9 IEEE WETICE INFR
   Pinelle D., 2002, P SIGCHI C HUM FACT
   Presser S, 2004, PUBLIC OPIN QUART, V68, P109, DOI 10.1093/poq/nfh008
   Rajan S., 2001, International Journal of Speech Technology, V4, P117, DOI 10.1023/A:1017319110294
   Rittenbruch M, 2009, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84882-477-5_1
   Rodden T., 1996, P 1996 ACM C COMP SU
   Rodden T., 1991, P 2 C EUR C COMP SUP
   Rodríguez-Covili J, 2013, SCI COMPUT PROGRAM, V78, P2009, DOI 10.1016/j.scico.2013.02.003
   Sacramento V., 2004, IEEE Distributed Systems Online, V5
   Salmon PM, 2007, LECT NOTES ARTIF INT, V4562, P407
   Schmidt K., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P285, DOI 10.1023/A:1021272909573
   Snowdon D., 2000, COLLABORATIVE VIRTUA
   Talaei-Khoei A, 2011, J SYST SOFTWARE, V84, P1791, DOI 10.1016/j.jss.2011.05.024
   Tang A., 2009, P ACM 2009 INT C SUP
   Tollmar K., 1996, P 1996 ACM C COMP SU
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Vertegaal R., 2003, P SIGCHI C HUM FACT
   VIZCAINO A, 2005, 14 IEEE INT WORKSH E
   Weick K.E., 1982, CHANGE ORG, P375
   WEICK KE, 1993, ADMIN SCI QUART, V38, P628, DOI 10.2307/2393339
   Xiao L, 2013, J SYST SOFTWARE, V86, P1727, DOI 10.1016/j.jss.2012.07.042
   YANCO HA, 2004, P IEEE C SYST MAN CY
   Yoo Y., 2008, P 41 HAW INT C SYST
   ZHANG W, 2000, P 4 INT C AUT AG BAR
NR 97
TC 37
Z9 41
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2014
VL 89
SI SI
BP 146
EP 169
DI 10.1016/j.jss.2013.11.1078
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA9SG
UT WOS:000331432600012
DA 2024-07-18
ER

PT J
AU Keivanloo, I
   Rilling, J
AF Keivanloo, Iman
   Rilling, Juergen
TI Software trustworthiness 2.0-A semantic web enabled global source code
   analysis approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Semantic Web; Source code analysis; Linked data; Global source code
   analysis
AB There has been an ongoing trend toward collaborative software development using open and shared source code published in large software repositories on the Internet. While traditional source code analysis techniques perform well in single project contexts, new types of source code analysis techniques are ermerging, which focus on global source code analysis challenges. In this article, we discuss how the Semantic Web, can become an enabling technology to provide a standardized, formal, and semantic rich representations for modeling and analyzing large global source code corpora. Furthermore, inference services and other services provided by Semantic Web technologies can be used to support a variety of core source code analysis techniques, such as semantic code search, call graph construction, and clone detection. In this paper, we introduce SeCold, the first publicly available online linked data source code dataset for software engineering researchers and practitioners. Along with its dataset, SeCold also provides some Semantic Web enabled core services to support the analysis of Internet-scale source code repositories. We illustrated through several examples how this linked data combined with Semantic Web technologies can be harvested for different source code analysis tasks to support software trustworthiness. For the case studies, we combine both our linked-data set and Semantic Web enabled source code analysis services with knowledge extracted from StackOverflow, a crowdsourcing website. These case studies, we demonstrate that our approach is not only capable of crawling, processing, and scaling to traditional types of structured data (e.g., source code), but also supports emerging non-structured data sources, such as crowdsourced information (e.g., StackOverflow.com) to support a global source code analysis context. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Keivanloo, Iman; Rilling, Juergen] Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Rilling, J (corresponding author), Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
EM i_keiv@cse.concordia.ca; juergen.rilling@concordia.ca
CR [Anonymous], 1999, P IEEE INT C SOFTW M
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Baader F., 2003, DESCRIPTION LOGIC HD
   BAJRACHARYA S, 2006, 21 ACM SIGPLAN C OBJ
   Binkley D., 2007, SOURCE CODE ANAL ROA
   Chen Y., 1998, IEEE T SOFTWARE ENG, V24
   Chess B., 2007, Secure programming with static analysis
   Choi J.D., 1993, 20 ANN ACM SIGPLAN S
   Choi J.D., 1993, P 20 ANN ACM SIGPLAN
   Cyganiak R., 2011, LINKING OPEN DATA CL
   David C, 2010, LECT NOTES COMPUT SC, V6089, P370, DOI 10.1007/978-3-642-13489-0_26
   German D.M., 2010, IEEE ACM INT C AUT S
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hasselbring W, 2006, COMPUTER, V39, P91, DOI 10.1109/MC.2006.142
   Hirzel M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216379
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   Iqbal A., 2009, INT WORKSH SEM WEB E
   JENTZSCH A, 2009, P 2 WORKSH LINK DAT
   JENTZSCH A, 2009, 2 WORKSH LINK DAT WE
   Jia Yue, 2009, 3 INT WORKSH DET SOF
   Keivanloo I., 2012, 6 INT WORKSH SOFTW C
   Keivanloo I., 2010, PROC IEEE INT CONF S
   Keivanloo I., 2011, P 3 INT WORKSHOP SEA, P25
   Keivanloo I., 2012, 1 ICSE INT WORKSH RE
   Keivanloo I., 2011, 18 WORK C REV ENG
   Keivanloo I., 2010, 6 INT WORKSH SEM WEB
   Kiefer C., 2007, 3 INT WORKSH SEM WEB
   Knublauch H., 2004, 1 INT WORKSH MOD DRI
   KOSCHKE R, 2012, 16 EUR C SOFTW MAINT
   Lambrix P., 2005, 14 IEEE INT WORKSH E, p[13, 3]
   Lee T. Berners, LINKED DATA
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lopes C, 2010, UCI source code data sets
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Motik B, 2009, J WEB SEMANT, V7, P74, DOI 10.1016/j.websem.2009.02.001
   Rilling J, 2008, INT J SEMANT COMPUT, V2, P431, DOI 10.1142/S1793351X08000567
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Rountev A., 2004, ACM SIGSOFT INT S SO
   Rountev A., 2004, P 2004 ACM SIGSOFT I
   Roy Chanchal K, 2009, SCI COMPUTER PROGRAM
   Ryder B.G., 2001, P 2001 ACM SIGPLAN S
   Schugerl P., 2009, 33 IEEE INT COMP SOF
   Schwarz N., 2012, INT C SOFTW ENG ICSE
   Scott M.L., 2005, PROGRAMMING LANGUAGE, VSecond
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Tappolet J, 2010, J WEB SEMANT, V8, P225, DOI 10.1016/j.websem.2010.04.009
   Tichelaar S., 2000, WORK C REV ENG WCRE
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Wursch M, 2010, P INT WORKSH SEARCH, P45, DOI [10.1145/1809175.1809187, DOI 10.1145/1809175.1809187]
NR 49
TC 5
Z9 6
U1 0
U2 27
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2014
VL 89
SI SI
BP 33
EP 50
DI 10.1016/j.jss.2013.08.030
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA9SG
UT WOS:000331432600004
DA 2024-07-18
ER

PT J
AU Mao, XG
   Lei, Y
   Dai, ZY
   Qi, YH
   Wang, CS
AF Mao, Xiaoguang
   Lei, Yan
   Dai, Ziying
   Qi, Yuhua
   Wang, Chengsong
TI Slice-based statistical fault localization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Fault localization; Debugging; Program slices; Statistical analysis
AB Recent techniques for fault localization statistically analyze coverage information of a set of test runs to measure the correlations between program entities and program failures. However, coverage information cannot identify those program entities whose execution affects the output and therefore weakens the aforementioned correlations. This paper proposes a slice-based statistical fault localization approach to address this problem. Our approach utilizes program slices of a set of test runs to capture the influence of a program entity's execution on the output, and uses statistical analysis to measure the suspiciousness of each program entity being faulty. In addition, this paper presents a new slicing approach called approximate dynamic backward slice to balance the size and accuracy of a slice, and applies this slice to our statistical approach. We use two standard benchmarks and three real-life UNIX utility programs as our subjects, and compare our approach with a sufficient number of fault localization techniques. The experimental results show that our approach can significantly improve the effectiveness of fault localization. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Mao, Xiaoguang; Lei, Yan; Dai, Ziying; Qi, Yuhua; Wang, Chengsong] Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Lei, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha 410073, Hunan, Peoples R China.
EM xgmao@nudt.edu.cn; yanlei@nudt.edu.cn; ziyingdai@nudt.edu.cn;
   yuhua.qi@nudt.edu.cn; jameschen186@gmail.com
FU National Natural Science Foundation of China [91118007, 90818024];
   National High Technology Research and Development Program of China (863
   program) [2011AA010106, 2012AA011201]; Program for New Century Excellent
   Talents in University
FX We are extremely grateful to the anonymous referees whose comments and
   suggestions are valuable and helpful for the improvement of the quality
   of the paper, as well as the important guiding significance to our
   future research. This work is partially supported by the National
   Natural Science Foundation of China under grant nos. 91118007 and
   90818024, the National High Technology Research and Development Program
   of China (863 program) under grant no. 2011AA010106 and 2012AA011201 and
   the Program for New Century Excellent Talents in University.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2008, ISSTA
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Gonzalez A, 2007, THESIS DELFT U TECHN
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   LYLE JR, 1995, 5691 NISTIR US DEP C, V1
   Masri W, 2010, SOFTW TEST VERIF REL, V20, P121, DOI 10.1002/stvr.409
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wei Dong, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P490, DOI 10.1109/COMPSAC.2008.71
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wen WZ, 2012, PROC INT CONF SOFTW, P1511, DOI 10.1109/ICSE.2012.6227049
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xin B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P165
   Yu Kai., 2011, SAC, P1404
   Zhang X, 2007, ACM SIGPLAN NOTICES, V42, P415, DOI 10.1145/1273442.1250782
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
   Zhang Xiangyu., 2006, SIGSOFT 06FSE 14, P81, DOI DOI 10.1145/1181775.1181786
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
NR 39
TC 84
Z9 96
U1 0
U2 19
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2014
VL 89
SI SI
BP 51
EP 62
DI 10.1016/j.jss.2013.08.031
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA9SG
UT WOS:000331432600005
DA 2024-07-18
ER

PT J
AU Bian, YX
   Koru, G
   Su, XH
   Ma, PJ
AF Bian, Yixin
   Koru, Gunes
   Su, Xiaohong
   Ma, Peijun
TI SPAPE: A semantic-preserving amorphous procedure extraction method for
   near-miss clones
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Near-miss clones; Amorphous procedure extraction; Refactoring
ID SOFTWARE
AB Cloned code, also known as duplicated code, is among the bad "code smells". Procedure extraction can be used to remove clones and to make a software system more maintainable. While the existing procedure extraction techniques can handle automatic extraction of exact clones effectively, they fail to do so for near-miss clones, which are the code fragments that are similar but not the same. To address this gap, we developed SPAPE, a novel semantic-preserving amorphous procedure extraction method to extract near-miss clones. SPAPE relaxes the constraint of having the same syntax and uses the structural semantic information. We evaluated the performance, effectiveness, and benefits of SPAPE. Our results show that SPAPE can extract more near-miss clones than the best applicable method for ten open-source-software products in an efficient and effective fashion. We conclude that SPAPE can be a useful contribution to the toolsets of software managers and developers, and it can help them improve code structure and reduce software maintenance and overall project costs. (c) 2013 Elsevier Inc. All rights reserved.
C1 [Bian, Yixin; Su, Xiaohong; Ma, Peijun] Harbin Inst Technol, Dept Comp Sci, Harbin 150001, Peoples R China.
   [Bian, Yixin; Koru, Gunes] UMBC, Dept Informat Syst, Baltimore, MD 21250 USA.
C3 Harbin Institute of Technology; University System of Maryland;
   University of Maryland Baltimore County
RP Bian, YX (corresponding author), Harbin Inst Technol, Dept Comp Sci, Harbin 150001, Peoples R China.
EM bianyu79@gmail.com
RI Koru, Gunes/AAR-5819-2020
FU National Natural Science Foundation of China [61173021]
FX We would like to thank the Editor and anonymous reviewers for reading
   our paper and providing insightful, useful, and constructive comments.
   This research is partially supported by the National Natural Science
   Foundation of China under Grant No. 61173021.
CR Alkhalid A, 2010, ADV ENG SOFTW, V41, P1160, DOI 10.1016/j.advengsoft.2010.08.002
   [Anonymous], 2008, P 2008 FDN SOFTW ENG
   Bian Y., J COMPUTER IN PRESS
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Cordy J R., 2004, Proc. LDTA 2004, ACM 4th International Workshop on Language Descriptions, P1
   Eclipse Development Team, 2004, C C DEV TOOLK US GUI
   FOWLER M, 2002, REFACTORING IMPROVIN
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P85
   Harman M., 2004, Automated Software Engineering, V11, P27, DOI 10.1023/B:AUSE.0000008667.37988.11
   HIND M, 1999, ACM T PROGRAMMING LA, V21
   Ira D., 2001, BAXTER DESIGN MAINTE
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kanemitsu T., 2011, PROC 4 WORKSHOP REFA, P8
   Katic M, 2009, REC ADV COMPUT ENG, P140
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Komondoor R, 2003, PROG COMPREHEN, P33
   Kusumoto S., 2011, IDENTIFYING REFACTOR
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Lozano A., 2010, IWSC, V10, P65, DOI [10.1145/1808901.1808910, DOI 10.1145/1808901.1808910]
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lung CH, 2006, J SYST SOFTWARE, V79, P1261, DOI 10.1016/j.jss.2006.02.037
   Maruyama K., 2011, P 4 WORKSHOP REFACTO, P22, DOI [DOI 10.1145/1984732.1984737, 1145/1984732.1984737]
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Qian Ju, 2009, Wuhan University Journal of Natural Sciences, V14, P321, DOI 10.1007/s11859-009-0408-1
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Roy C., 2007, 2007541 TR SCH COMP
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2009, PROC IEEE INT CONF S, P447, DOI 10.1109/ICSM.2009.5306301
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Stephan E., 2010, THESIS BADEN WRTTEMB
   Su Xiaohong, 2010, SOFTWARE DEFECT DETE
   Thiessen R., U ALBERTA E IN PRESS
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Vittek Marian., 2005, ICSM 2005 Industrial and Tool Volume, P61
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Yonghao L., THESIS HARBIN I TECH
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
NR 43
TC 11
Z9 11
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2013
VL 86
IS 8
BP 2077
EP 2093
DI 10.1016/j.jss.2013.03.061
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190OW
UT WOS:000322351100008
DA 2024-07-18
ER

PT J
AU Ströele, V
   Zimbrao, G
   Souza, JM
AF Stroeele, Victor
   Zimbrao, Geraldo
   Souza, Jano M.
TI Group and link analysis of multi-relational scientific social networks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-relational scientific social network analysis; Max-flow grouping
   algorithm; Link prediction/suggestion
ID KNOWLEDGE; PATTERNS; FLOW
AB Analyzing social networks enables us to detect several inter and intra connections between people in and outside their organizations. We model a multi-relational scientific social network where researchers may have four different types of relationships with each other. We adopt some criteria to enable the modeling of a scientific social network as close as possible to reality. Using clustering techniques with maximum flow measure, we identify the social structure and research communities in a way that allows us to evaluate the knowledge flow in the Brazilian scientific community. Finally, we evaluate the temporal evolution of scientific social networks to suggest/predict new relationships. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Stroeele, Victor] UFJF Fed Univ Juiz de Fora, Grad Sch Comp Sci, BR-36001970 Juiz De Fora, MG, Brazil.
   [Zimbrao, Geraldo; Souza, Jano M.] UFRJ Fed Univ Rio de Janeiro, COPPE, Grad Sch Comp Sci, BR-21945970 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal de Juiz de Fora
RP Ströele, V (corresponding author), UFJF Fed Univ Juiz de Fora, Grad Sch Comp Sci, POB 422, BR-36001970 Juiz De Fora, MG, Brazil.
EM victor.stroele@ice.ufjf.br; zimbrao@cos.ufrj.br; jano@cos.ufrj.br
RI Zimbrao, Geraldo/J-4488-2014; Ströele, Victor/O-3156-2015; Moreira de
   Souza, Jano/AAG-9116-2019
OI Ströele, Victor/0000-0001-6296-8605; Moreira de Souza,
   Jano/0000-0001-5080-1955
FU CAPES; CNPq; COPPETEC Foundation
FX This work was supported by CAPES, CNPq, and the COPPETEC Foundation.
CR Acar E., 2009, IEEE INT C DAT MIN W
   Agrawal R., 2003, P 12 INT WORLD WID W
   Asur S., 2007, P 13 ACM INT SIGKDD
   Bird C., 2006, P 2006 INT WORKSH MI
   Boaventura P. O., 1996, GRAFOS TEORIA MODELO
   Cai D., 2005, P 2005 EUR C PRINC P
   Carpenter T., 2002, Practical issues and algorithms for analyzing terrorist networks
   Cazella S. C., 2005, 6 ANN GLOB INF TECHN
   Cazella S. C., 2006, INT C SOFTW ENG KNOW
   Cross R.L., 2004, The hidden power of social networks. Understanding how work really gets done in organization
   Dietrich J, 2008, J SYST SOFTWARE, V81, P2183, DOI 10.1016/j.jss.2008.03.060
   EDMONDS J, 1972, J ACM, V19, P248, DOI 10.1145/321694.321699
   Farrel S., 2005, C HUM FACT COMP SYST
   Flake G.W., 2000, P 6 INT C KNOWL DISC
   Ford LR., 1956, CAN J MATH, V8, P399, DOI [10.4153/CJM-1956-045-5, DOI 10.4153/CJM-1956-045-5.12R]
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   GCC GCC., 2006, LECT NOTES COMPUTER, V3841, P652
   Gibson D., 1998, Hypertext 98: Ninth ACM Conference on Hypertext and Hypermedia, P225, DOI 10.1145/276627.276652
   Golbeck J., 2005, 4 INT SEM WEB C
   Han J., 2006, DATA MINING CONCEPTS
   Han LX, 2011, J SYST SOFTWARE, V84, P1261, DOI 10.1016/j.jss.2011.04.025
   Huang, 2003, P 12 INT C INF KNOWL
   Huang Z., 2005, P 5 ACM IEEE CS C DI
   Huang Z., 2001, 107305160103000034 A, V1073-0516, P0300
   Ichise R., 2005, IEEE P 9 INT C INF V
   Jackson MO, 2008, SOCIAL AND ECONOMIC NETWORKS, P1
   Jain A K, 1988, ALGORITHMS CLUSTERIN
   Kumar R., 1999, P 8 INT WORLD WID WE
   Leskovec J., 2005, P 11 ACM SIGKDD INT, P177
   Ley M., 2009, VLDB
   Liben-Nowell D, 2007, J AM SOC INF SCI TEC, V58, P1019, DOI 10.1002/asi.20591
   Lim M., 2005, P INT C ART INT SCI, P109
   Lu L., 2009, P 1 ACM INT WORKSH C
   Monclar R. S., 2007, P UK SOC NETW C
   Newman M. E. J., 2000, 001264 SFI
   Newman MEJ, 2001, PHYS REV E, V64, DOI 10.1103/PhysRevE.64.025102
   Newman MEJ, 2004, P NATL ACAD SCI USA, V101, P5200, DOI 10.1073/pnas.0307545100
   Newman MEJ, 2004, EUR PHYS J B, V38, P321, DOI 10.1140/epjb/e2004-00124-y
   Newman MEJ, 2001, P NATL ACAD SCI USA, V98, P404, DOI 10.1073/pnas.021544898
   Pioch N., 2005, LINK GROUUP ANAL TOO
   Potgieter, 2009, TEMPORALITY LINK PRE
   Raab J, 2003, J PUBL ADM RES THEOR, V13, P413, DOI 10.1093/jopart/mug029
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   SCHWARTZ MF, 1993, COMMUN ACM, V36, P78, DOI 10.1145/163381.163402
   Silva R., 2009, 13 INT C COMP SUPP C
   Stroele V., 2009, 2009 INT C SOC COMP
   Tyler JR, 2003, COMMUNITIES AND TECHNOLOGIES, P81
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Yang J., 2012, P 2012 IEEE INT C DA
   Zanette DH, 2002, PHYS REV E, V65, DOI 10.1103/PhysRevE.65.041908
   Zhu Jianhan., 2003, Mining Web Site Link Structure for Adaptive Web Site Navigation and Search
   Zhuge H, 2007, J SYST SOFTWARE, V80, P1833, DOI 10.1016/j.jss.2007.02.028
NR 52
TC 27
Z9 36
U1 1
U2 53
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2013
VL 86
IS 7
BP 1819
EP 1830
DI 10.1016/j.jss.2013.02.024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 156TU
UT WOS:000319847600010
DA 2024-07-18
ER

PT J
AU Hu, YH
   Wu, F
   Liao, YJ
AF Hu, Ya-Han
   Wu, Fan
   Liao, Yi-Jiun
TI An efficient tree-based algorithm for mining sequential patterns with
   multiple minimum supports
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data mining; Sequential patterns; PLWAP-tree; Multiple minimum supports
ID ASSOCIATION RULES
AB Sequential pattern mining (SPM) is an important technique for determining time-related behavior in sequence databases. In real-life applications, the frequencies for various items in a sequence database are not exactly equal. If all items are set with the same minimum support, the rare item problem may result, meaning that we are unable to effectively retrieve interesting patterns regardless of whether minsup is set too high or too low. Liu (2006) first included the concept of multiple minimum supports (MMSs) to SPM. It allows users to specify the minimum item support (MIS) for each item according to its natural frequency. A generalized sequential pattern-based algorithm, named Multiple Supports - Generalized Sequential Pattern (MS-GSP), was also developed to mine complete set of sequential patterns. However, the MS-GSP adopts candidate generate-and-test approach, which has been recognized as a costly and time-consuming method in pattern discovery. For the efficient mining of sequential patterns with MMSs, this study first proposes a compact data structure, called a Preorder Linked Multiple Supports tree (PLMS-tree), to store and compress the entire sequence database. Based on a PLMS-tree, we develop an efficient algorithm, Multiple Supports - Conditional Pattern growth (MSCP-growth), to discover the complete set of patterns. The experimental result shows that the proposed approach achieves more preferable findings than the MS-GSP and the conventional SPM. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Hu, Ya-Han; Wu, Fan; Liao, Yi-Jiun] Natl Chung Cheng Univ, Dept Informat Management, Chiayi 62102, Taiwan.
C3 National Chung Cheng University
RP Hu, YH (corresponding author), Natl Chung Cheng Univ, Dept Informat Management, Chiayi 62102, Taiwan.
EM yahan.hu@mis.ccu.edu.tw
OI Hu, Ya-Han/0000-0002-3285-2983
FU National Science Council of the Republic of China [NSC
   98-2410-H-194-054]
FX This research was supported by the National Science Council of the
   Republic of China under the Grant NSC 98-2410-H-194-054.
CR AGRAWAL R, 1995, P 11 INT C DAT ENG T
   [Anonymous], 2002, Technical Report
   [Anonymous], LECT NOTES COMPUTER
   Chen CH, 2009, SOFT COMPUT, V13, P521, DOI 10.1007/s00500-008-0366-0
   Chen MS, 1996, IEEE T KNOWL DATA EN, V8, P866, DOI 10.1109/69.553155
   Chen SS, 2011, J SYST SOFTWARE, V84, P1638, DOI 10.1016/j.jss.2011.04.022
   Chiang DA, 2010, KNOWL-BASED SYST, V23, P757, DOI 10.1016/j.knosys.2010.04.012
   Chu CJ, 2008, J SYST SOFTWARE, V81, P1105, DOI 10.1016/j.jss.2007.07.026
   Chun SH, 2006, EXPERT SYST APPL, V31, P329, DOI 10.1016/j.eswa.2005.09.053
   Ezeife CI, 2005, DATA MIN KNOWL DISC, V10, P5, DOI 10.1007/s10618-005-0248-3
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Han JW, 2004, DATA MIN KNOWL DISC, V8, P53, DOI 10.1023/B:DAMI.0000005258.31418.83
   Hu Y.-H., 2010, 2 INT C SOFTW ENG DA
   Hu YH, 2006, DECIS SUPPORT SYST, V42, P1, DOI 10.1016/j.dss.2004.09.007
   Kim E, 2003, DECIS SUPPORT SYST, V34, P167, DOI 10.1016/S0167-9236(02)00079-9
   Lee YC, 2005, INT J APPROX REASON, V40, P44, DOI 10.1016/j.ijar.2004.11.006
   Liu B., 1999, P 5 INT C KNOWL DISC
   Liu Bing., 2006, Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data (Data- Centric Systems and Applications)
   Lui C.-L., 2000, LECT NOTES COMPUTER, V1910, P8
   Pei J, 2004, IEEE T KNOWL DATA EN, V16, P1424, DOI 10.1109/TKDE.2004.77
   Pei J, 2000, LECT NOTES ARTIF INT, V1805, P396
   Srikant R., 1996, P INT C EXT DAT TECH
   Tseng MC, 2007, DATA KNOWL ENG, V62, P41, DOI 10.1016/j.datak.2006.07.002
   Turban E., 2010, Decision Support and Business Intelligence Systems, V9th
NR 24
TC 20
Z9 22
U1 0
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2013
VL 86
IS 5
BP 1224
EP 1238
DI 10.1016/j.jss.2012.12.020
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122MO
UT WOS:000317322400005
DA 2024-07-18
ER

PT J
AU Abebe, E
   Ryan, C
AF Abebe, Ermyas
   Ryan, Caspar
TI Adaptive application offloading using distributed abstract class graphs
   in mobile environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Adaptive offloading; Object mobility; Application partitioning;
   Self-adaptive software systems; Class graph
ID ADAPTATION; VISION
AB Self-adaptation of software has been used as a mechanism to address complexity and constraint in mobile and pervasive computing environments. Adaptive offloading is a software adaptation mechanism in which an application dynamically distributes portions of itself to remote devices to achieve context specific optimizations. The feasibility of using adaptive offloading in pervasive environments is determined by the computational efficiency of adaptation algorithms and the efficacy of their decisions. However, existing state-of-the-art approaches incur overheads from storing, updating and partitioning complete application graphs on each device, which limits their utility and scalability in resource constrained mobile environments. Hence, this paper presents a novel distributed approach to application representation in which each device maintains a graph consisting only of components in its memory space, while maintaining abstraction elements for components in remote devices. This approach removes the need to store and update complete application graphs on each device and reduces the cost of partitioning an application during adaptation. In addition, an extension to an existing application graph partitioning heuristic is proposed to utilize this representation approach. An evaluation involving computationally heavy open-source applications adapting in a heterogeneous collaboration showed that the new approach reduced graph update network cost by 100%, collaboration-wide memory cost by between 37% and 50%, power usage by between 63% and 93%, and adaptation time by between 19.47% and 98%, while improving efficacy of adaptation by 12% and 34% for two of the considered applications. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Abebe, Ermyas; Ryan, Caspar] RMIT Univ, Sch Comp Sci & IT, Melbourne, Vic, Australia.
C3 Royal Melbourne Institute of Technology (RMIT)
RP Abebe, E (corresponding author), RMIT Univ, Sch Comp Sci & IT, Melbourne, Vic, Australia.
EM ermyas.abebe@rmit.edu.au; caspar.ryan@rmit.edu.au
OI Ryan, Caspar/0000-0002-5569-6012
CR Abebe E., 2011, Proceedings of the 2011 IEEE 10th International Symposium on Network Computing and Applications (NCA 2011), P59, DOI 10.1109/NCA.2011.16
   Abebe E, 2009, LECT NOTES COMPUT SC, V5870, P773, DOI 10.1007/978-3-642-05148-7_54
   [Anonymous], 1998, ARTICLES COMPUT INFO
   Bastarrica M.C., 2001, INTEGRATION, V2, P3
   Cahoon B., JOLDEN BENCHMARKS
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chinthapanti P.K., 2004, THESIS TEXAS TECH U
   Cu X., 2003, 1 IEEE INT C PERV CO
   Fahringer T., 2000, JAVASYMPHONY SYSTEM, P145
   Felea V., 2004, 12 EUR PAR DISTR NET
   Gani H., 2009, ACSC 09 P 32 AUSTR C, P55
   GANI H, 2006, INT WORKSH AD REFL M
   Gani H., 2011, TRANSPARENT ADAPTIVE
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gu XH, 2004, IEEE PERVAS COMPUT, V3, P66, DOI 10.1109/MPRV.2004.1321031
   Hütter C, 2008, EUROMICRO WORKSHOP P, P149, DOI 10.1109/PDP.2008.76
   Karypis G, 1995, SUPERCOMP PROC, P658
   Karypis George, 1996, P 1996 ACMIEEE C SUP, V35, DOI [10.1109/SC.1996.32, DOI 10.1109/SC.1996.32]
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kernighan B. W., 1970, Bell System Technical Journal, V49, P291
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Li Z., 2001, P ACM INT C COMPILER, P238, DOI DOI 10.1145/502217.502257
   Medvidovic N., 2007, ACM, P47
   Meedeniya I., 2011, J SYSTEMS SOFTWARE
   National Aeronautics and Space Administration, 2004, NASA WORLD WIND JAV
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Ou S, 2007, PERVASIVE MOB COMPUT, V3, P362, DOI 10.1016/j.pmcj.2007.04.004
   Ou Shumao., 2006, PERVASIVE COMPUTING, P10
   PHILIPPSEN M, 1997, P ACM 1997 PPOPP WOR
   Raghavan S, 2003, PROC INT CONF DATA, P405, DOI 10.1109/ICDE.2003.1260809
   ROSSI P, 2005, P 2005 INT S DISTR O
   Ryan C, 2004, LECT NOTES COMPUT SC, V3291, P1262
   Sakamoto K, 2007, IFIP INT C NETW PARA, P572, DOI 10.1109/NPC.2007.87
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Satyanarayanan M, 2001, IEEE PERS COMMUN, V8, P10, DOI 10.1109/98.943998
   Stoer M., 1997, J ACM JACM, V44, P591
   Tilevich E, 2002, LECT NOTES COMPUT SC, V2374, P178
   Tilevich E, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555394
   Wang L., 2007, 0711 U CAL D BREN SC
   Weyns D., 2010, P 7 INT C AUTONOMIC, P205, DOI 10.1145/1809049.1809078
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
NR 42
TC 26
Z9 28
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2012
VL 85
IS 12
SI SI
BP 2755
EP 2769
DI 10.1016/j.jss.2012.05.091
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031VB
UT WOS:000310669500007
DA 2024-07-18
ER

PT J
AU Mäder, P
   Gotel, O
AF Maeder, Patrick
   Gotel, Orlena
TI Towards automated traceability maintenance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Event-based development activity recognition; Model changes;
   Requirements traceability; Rule-based traceability maintenance; Software
   system evolution; Traceability decay; Traceability maintenance
ID EVENT-BASED TRACEABILITY; REQUIREMENTS TRACEABILITY; LINKS; CODE
AB Traceability relations support stakeholders in understanding the dependencies between artifacts created during the development of a software system and thus enable many development-related tasks. To ensure that the anticipated benefits of these tasks can be realized, it is necessary to have an up-to-date set of traceability relations between the established artifacts. This goal requires the creation of traceability relations during the initial development process. Furthermore, the goal also requires the maintenance of traceability relations over time as the software system evolves in order to prevent their decay. In this paper, an approach is discussed that supports the (semi-) automated update of traceability relations between requirements, analysis and design models of software systems expressed in the UML. This is made possible by analyzing change events that have been captured while working within a third-party UML modeling tool. Within the captured flow of events, development activities comprised of several events are recognized. These are matched with predefined rules that direct the update of impacted traceability relations. The overall approach is supported by a prototype tool and empirical results on the effectiveness of tool-supported traceability maintenance are provided. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Maeder, Patrick] Johannes Kepler Univ Linz, Inst Syst Engn & Automat SEA, A-4040 Linz, Austria.
C3 Johannes Kepler University Linz
RP Mäder, P (corresponding author), Johannes Kepler Univ Linz, Inst Syst Engn & Automat SEA, A-4040 Linz, Austria.
EM patrick.maeder@jku.at; olly@gotel.net
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
FU DFG [Ph49/7-1]; Austrian Science Fund (FWF) [M1268-N23]
FX The authors thank Tobias Kuschke and Christian Kittler for implementing
   the prototype, Johannes Langguth for his work in preparing and analyzing
   the experiment, and all the students who were involved in the
   experiment. Furthermore, the authors would also like to thank the
   anonymous reviewers of an earlier version of this paper for their useful
   suggestions for improving the final paper. This research was part funded
   by DFG grant Ph49/7-1 and by the Austrian Science Fund (FWF): M1268-N23.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Alexander Ian., 2002, Proc of the 1st Int Workshop on Traceability, P26
   [Anonymous], OMG SYST MOD LANG OM
   [Anonymous], MODERNE SOFTWARE ARC
   [Anonymous], 2005, SOFTWARE EVOLUTION U
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Arlow J., 2005, UML2 UNIFIED PROCESS
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J, 2002, P INT COMP SOFTW APP, P595, DOI 10.1109/CMPSAC.2002.1045069
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Dommasch C., 2004, VERSANDHANDEL HAUSAR
   DU D, 1997, DIMACS SERIES DISCRE, V35
   Egyed A, 2007, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2007.16
   Engels G., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P212
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hnatkowska B., 2003, P 2 WORKSH CONS PROB, P51
   Huzar Z, 2005, LECT NOTES COMPUT SC, V3297, P1
   JACOBSON I, 1999, OBJECT TECHNOLOGY SE
   Lano K., 2005, ADV SYSTEMS DESIGN J
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   Mader P., 2009, THESIS TU ILMENAU
   Mader P., 2008, P 23 INT C AUT SOFTW
   Mader P., 2009, P 5 INT WORKSH TRAC
   Mader P., 2009, P 5 EUR C MOD DRIV A
   Mader P., 2009, P 17 INT REQ ENG C R
   Mader P., 2009, P 5 ECMDA TRAC WORKS
   Mäder P, 2008, INT REQUIR ENG CONF, P329, DOI 10.1109/RE.2008.25
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   Maletic J.I., 2005, 3rd ACM International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   OMG, 2003, MDA GUID VERS 1 0 1
   OMG, 2010, OMG UN MOD LANG SPEC
   Pinheiro FAC, 2004, SPRING INT SER ENG C, V753, P91
   Ritze M., 2008, COMP TRACEABILITY FU
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   Russek L., 2004, INFORMATIK 2004, V2, P488
   Shen W., 2003, P WORKSH CONS PROBL, P35
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   van Bemmel J., 2004, TIRS2004051 CTIT LUC
   Weilkiens T., 2006, SYSTEMS ENG MIT SYSM
NR 50
TC 42
Z9 49
U1 3
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2012
VL 85
IS 10
SI SI
BP 2205
EP 2227
DI 10.1016/j.jss.2011.10.023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 992QA
UT WOS:000307793600003
PM 23471308
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Shang, WY
   Adams, B
   Hassan, AE
AF Shang, Weiyi
   Adams, Bram
   Hassan, Ahmed E.
TI Using Pig as a data preparation language for large-scale mining software
   repositories studies: An experience report
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Mining Software Repositories; Pig; MapReduce
ID SYSTEM; CODE
AB The Mining Software Repositories (MSR) field analyzes software repository data to uncover knowledge and assist development of ever growing, complex systems. However, existing approaches and platforms for MSR analysis face many challenges when performing large-scale MSR studies. Such approaches and platforms rarely scale easily out of the box. Instead, they often require custom scaling tricks and designs that are costly to maintain and that are not reusable for other types of analysis. We believe that the web community has faced many of these software engineering scaling challenges before, as web analyses have to cope with the enormous growth of web data. In this paper, we report on our experience in using a web-scale platform (i.e., Pig) as a data preparation language to aid large-scale MSR studies. Through three case studies, we carefully validate the use of this web platform to prepare (i.e., Extract, Transform, and Load, ETL) data for further analysis. Despite several limitations, we still encourage MSR researchers to leverage Pig in their large-scale studies because of Pig's scalability and flexibility. Our experience report will help other researchers who want to scale their analyses. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Shang, Weiyi; Adams, Bram; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Shang, WY (corresponding author), Queens Univ, SAIL, Kingston, ON K7L 3N6, Canada.
EM swy@cs.queensu.ca; bram@cs.queensu.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR [Anonymous], P WORK C MIN SOFTW R
   [Anonymous], 2009, Hadoop: The definitive guide
   Bevan J., 2005, ESEC FSE 05
   Chambers C, 2010, ACM SIGPLAN NOTICES, V45, P363, DOI 10.1145/1809028.1806638
   Crockford D., 2006, Tech. Rep.
   Dean Jeffrey, 2004, OSDI 04, P10
   Gates AF, 2009, PROC VLDB ENDOW, V2, P1414, DOI 10.14778/1687553.1687568
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Gousios G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P31, DOI 10.1109/MSR.2009.5069478
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hassan AE, 2005, THESIS U WATERLOO
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Holt RC, 2008, WORK CONF REVERSE EN, P5, DOI 10.1109/WCRE.2008.34
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Isard M, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P987
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   LIVIERI S, 2007, ICSE 07
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   Robles G., 2006, P 3 INT WORKSHOP MIN, P3
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shang W., 2010, ASE'10: 25th IEEE/ACM International Conference on Automated Software Engineering, P275
   Shang W., 2010, THESIS QUEENS U
   Shang WY, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P21, DOI 10.1109/MSR.2009.5069477
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wang X., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P457
NR 30
TC 5
Z9 5
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2012
VL 85
IS 10
SI SI
BP 2195
EP 2204
DI 10.1016/j.jss.2011.07.034
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 992QA
UT WOS:000307793600002
DA 2024-07-18
ER

PT J
AU Chen, ZQ
   Roussopoulos, M
   Liang, ZY
   Zhang, Y
   Chen, ZR
   Delis, A
AF Chen, Zhongqiang
   Roussopoulos, Mema
   Liang, Zhanyan
   Zhang, Yuan
   Chen, Zhongrong
   Delis, Alex
TI Malware characteristics and threats on the internet ecosystem
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Malware propagation mechanisms and payloads; Malware characteristics and
   categorization; Support vector machines; Self-organizing maps
AB Malware encyclopedias now play a vital role in disseminating information about security threats. Coupled with categorization and generalization capabilities, such encyclopedias might help better defend against both isolated and clustered specimens. In this paper, we present Malware Evaluator, a classification framework that treats malware categorization as a supervised learning task, builds learning models with both support vector machines and decision trees and finally, visualizes classifications with self-organizing maps. Malware Evaluator refrains from using readily available taxonomic features to produce species classifications. Instead, we generate attributes of malware strains via a tokenization process and select the attributes used according to their projected information gain. We also deploy word stemming and stop-word removal techniques to reduce dimensions of the feature space. In contrast to existing approaches, Malware Evaluator defines its taxonomic features based on the behavior of species throughout their life-cycle, allowing it to discover properties that previously might have gone unobserved. The learning and generalization capabilities of the framework also help detect and categorize zero-day attacks. Our prototype helps establish that malicious strains improve their penetration rate through multiple propagation channels as well as compact code footprints; moreover, they attempt to evade detection by resorting to code polymorphism and information encryption. Malware Evaluator also reveals that breeds in the categories of Trojan, Infector, Backdoor, and Worm significantly contribute to the malware population and impose critical risks on the Internet ecosystem. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Roussopoulos, Mema; Delis, Alex] Univ Athens, Dept Informat & Telecommun, Athens, Greece.
   [Chen, Zhongqiang] Yahoo Inc, Sunnyvale, CA USA.
   [Liang, Zhanyan] Guangxi Univ Finance & Econ, Nanning, Peoples R China.
   [Zhang, Yuan] Florida State Univ, Tallahassee, FL 32306 USA.
C3 National & Kapodistrian University of Athens; Yahoo! Inc; Yahoo! Inc
   United States; Guangxi University of Finance & Economics; State
   University System of Florida; Florida State University
RP Delis, A (corresponding author), Univ Athens, Dept Informat & Telecommun, Athens, Greece.
EM zqchen@yahoo-inc.com; mema@di.uoa.gr; liangzhanyan@163.com;
   yzhang@math.fsu.edu; chenzhongrong@hotmail.com; ad@di.uoa.gr
FU European Commission; ERC [279237]; European Research Council (ERC)
   [279237] Funding Source: European Research Council (ERC)
FX We are grateful to reviewers for their comments and Peter Wei of Trend
   Micro Inc. for fruitful discussions on the proposed framework. This work
   has been partially supported by the European Commission D4Science II FP7
   Project and the ERC Starting Grant Project (no 279237).
CR Allwein E., 2002, JMLR, V1, P113
   [Anonymous], 2000, Springer Series in Information Sciences
   [Anonymous], 1999, The Nature Statist. Learn. Theory
   [Anonymous], 2002, Learning with Kernels
   [Anonymous], 2005, PROCEEDINGS OF THE T
   [Anonymous], LEXICAL ANAL STOPLIS
   Bailey M, 2007, LECT NOTES COMPUT SC, V4637, P178
   Boney D.G., 1999, PLAGUE ARMY SOFTWARE
   Bontchev V.V., 1998, METHODOLOGY COMPUTER
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Bredensteiner E.J., 1999, COMPUTATIONAL OPTIMI, V12, P53
   Brunnstein K., 1999, P 22 NAT INF SYST SE, P1
   CERT, 2001, CERT ADV CA 2001 26
   Collobert R, 2001, J MACH LEARN RES, V1, P143, DOI 10.1162/15324430152733142
   Cova M., 2010, P WORLD WID WEB C RA, P1
   Crammer K., 2001, J. Mach. Learn. Res., V2, P265
   DeLooze LL, 2004, PROCEEDINGS FROM THE FIFTH IEEE SYSTEMS, MAN AND CYBERNETICS INFORMATION ASSURANCE WORKSHOP, P365, DOI 10.1109/IAW.2004.1437840
   Dietterich TG, 1994, J ARTIF INTELL RES, V2, P263
   Ferris MC, 2003, SIAM J OPTIMIZ, V13, P783, DOI 10.1137/S1052623400374379
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Fredrikson M, 2010, P IEEE S SECUR PRIV, P45, DOI 10.1109/SP.2010.11
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Hastie T, 1998, ANN STAT, V26, P451
   Helenius M., 2002, SYSTEM SUPPORT ANAL
   Joachims T, 1999, ADVANCES IN KERNEL METHODS, P169
   Kawakoya Yuhei, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P39, DOI 10.1109/MALWARE.2010.5665794
   Keerthi SS, 2005, J MACH LEARN RES, V6, P341
   Krsul I.V., 1998, SOFTWARE VULNERABILI
   Landwehr C.E., 1994, ACM COMPUTING SURVEY, V26
   Leder F, 2009, 2009 4TH INTERNATIONAL CONFERENCE ON MALICIOUS AND UNWANTED SOFTWARE (MALWARE 2009), P39, DOI 10.1109/MALWARE.2009.5403019
   Lee T., 2006, EICAR C, P1
   Lindqvist U, 1997, P IEEE S SECUR PRIV, P154, DOI 10.1109/SECPRI.1997.601330
   Lindqvist U., 1999, FUNDAMENTALS ANAL DE
   Moore D., 2003, IEEE Security & Privacy, V1, P33, DOI 10.1109/MSECP.2003.1219056
   Moser A., 2007, 23 ANN COMP SEC APPL
   Platt JC, 2000, ADV NEUR IN, V12, P547
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rieck K, 2008, LECT NOTES COMPUT SC, V5137, P108, DOI 10.1007/978-3-540-70542-0_6
   Rutkowska J., 2006, INTRO STEALTH MALWAR
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Scheidt G., 1999, VIRUS NAMING CONVENT
   Shieh SP, 1997, IEEE T KNOWL DATA EN, V9, P661, DOI 10.1109/69.617059
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Skoudis E., 2003, Malware: Fighting Malicious Code
   Staniford S., 2002, P 11 USENIX SEC S SE, P1
   Symantec, 2009, VIR ENC SYM
   Thomas K., 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P63, DOI 10.1109/MALWARE.2010.5665793
   Trend Micro, 2011, VIR ENC TREND MICR
   Tyree S., 2011, Proceedings of the 20th International Conference on World Wide Web, WWW '11, P387, DOI DOI 10.1145/1963405.1963461
   Venter HS, 2008, COMPUT SECUR, V27, P71, DOI 10.1016/j.cose.2008.04.002
   Wagner C, 2009, 2009 4TH INTERNATIONAL CONFERENCE ON MALICIOUS AND UNWANTED SOFTWARE (MALWARE 2009), P63, DOI 10.1109/MALWARE.2009.5403018
   Walenstein Andrew, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P15, DOI 10.1109/MALWARE.2010.5665799
   Weaver N., 2003, Proceedings of the 1st ACM Workshop on Rapid Malcode (WORM). ACM, P11, DOI DOI 10.1145/948187.948190
   Willems C, 2007, IEEE SECUR PRIV, V5, P32, DOI 10.1109/MSP.2007.45
   Williamson MM, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P61, DOI 10.1109/CSAC.2002.1176279
   Ye J., 2009, P 18 ACM C INF KNOWL, P2061, DOI [10.1145/1645953.1646301, DOI 10.1145/1645953.1646301]
NR 56
TC 36
Z9 39
U1 2
U2 23
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2012
VL 85
IS 7
BP 1650
EP 1672
DI 10.1016/j.jss.2012.02.015
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 951LO
UT WOS:000304722300015
DA 2024-07-18
ER

PT J
AU Jurado, F
   Redondo, MA
   Ortega, M
AF Jurado, Francisco
   Redondo, Miguel A.
   Ortega, Manuel
TI Blackboard architecture to integrate components and agents in
   heterogeneous distributed eLearning systems: An application for learning
   to program
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE eLearning standards; Eclipse; Tuple-spaces; Component-based development
AB To build complete and complex eLearning systems, eLearning engineers are used to applying standards that facilitate sharing information as well as distributed service-oriented architectures that provide reuse and interoperability by means of component integration. These concepts lead us to a Component-based Development Process that will allow us to implement tools that give full support to the teaching/learning process, taking advantage of the synergy effect created by the integration of the different components. Thus, throughout this article we analyse the proposals from the most relevant consortia concerned with eLearning standards, showing their service oriented approaches and the middleware technologies which can be used to implement them. This analysis will demonstrate that the use of middleware technologies that use the definition of services' interface can limit the reuse and interoperability requisites desired by the main standards consortia. Then, we will show a proposal which tries to solve this shortfall, using a blackboard-based architecture for integrating and communicating heterogeneous distributed components, as well as a user environment that also allows us to perform component integration. As an example, we will demonstrate how we have built an application for learning to program by applying our approach and following a Component-based Development Process to implement different components (services, agents, clients, etc.) that integrate it. Hence, we will argue that using blackboard architecture and a Component-based Development Process helps us to solve the identified shortcomings. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Jurado, Francisco; Redondo, Miguel A.; Ortega, Manuel] Univ Castilla La Mancha, Sch Comp Sci, Dept Technol & Informat Syst, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Jurado, F (corresponding author), Univ Castilla La Mancha, Sch Comp Sci, Dept Technol & Informat Syst, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM Francisco.Jurado@uclm.es; Miguel.Redondo@uclm.es; Manuel.Ortega@uclm.es
RI Jurado, Francisco/C-8617-2014; Ortega, Manuel/F-9191-2015; Bravo,
   Jose/F-8861-2015; Redondo, Miguel A./F-7852-2015
OI Jurado, Francisco/0000-0001-7559-8236; Ortega,
   Manuel/0000-0002-0194-7744; Bravo, Jose/0000-0001-5752-2406; Redondo,
   Miguel A./0000-0001-5809-3412
CR ACM/IEEE, 2008, COMP SOC COMP SCI CU
   ACM/IEEE, 2010, CURR GUID UND DEGR P
   Anido L., 2001, P IEEE INT C ADV LEA
   Anido L., 2001, 1 C IB TEL CITA 2001
   [Anonymous], 1987, Artificial intelligence and tutoring systems: Computational and cognitive approaches to the communication of knowledge
   [Anonymous], 2002, MAKING ARCHITECTURE
   [Anonymous], DISTRIBUTED PROGRAMM
   [Anonymous], 1999, International Journal of Artificial Intelligence in Education
   Baker S, 2002, LECT NOTES COMPUT SC, V2519, P618
   Bergtsson P., 2004, J SYST SOFTWARE, V69, P129
   Bra P.D., 2003, P HT03
   Brecht J., 2006, P 5 WORLD C MOB LEAR
   Brusilovsky P, 1998, COMPUT NETWORKS ISDN, V30, P291, DOI 10.1016/S0169-7552(98)00082-8
   Brusilovsky P., 1995, Artificial Intelligence in Education, 1995. Proceedings of AI-ED 95 - 7th World Conference on Artificial Intelligence in Education, P1
   Brusilovsky P., 1996, INTELLIGENT TUTORING, P261
   Brusilovsky P., 2004, Proceedings of the 13th international World Wide Web Conference on Alternate track papers posters, P104, DOI DOI 10.1145/1013367.1013386
   Brusilovsky P., 1997, P 8 WORLD C AIED SOC, P18
   BZ Research, 2008, 5 ANN ECL AD STUD NO
   Chatley R., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, Lisbon, Portugal, ACM, P245, DOI DOI 10.1145/1095430.1081746
   Crnkovic I., 2006, PROD ICSEA 06
   Dagger D, 2007, IEEE INTERNET COMPUT, V11, P28, DOI 10.1109/MIC.2007.70
   Demarey C., 2005, STUDIA INFORMATICA U, V4, P7
   DOLAN TJ, 2002, THESIS EINDHOVEN U T
   Eclipse Fundation, 2009, OP SOURC DEV REP MAY
   Garrido JL, 2006, LECT NOTES COMPUT SC, V4154, P286
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Giemza A., 2007, P ICCE 2007 HIR JAP, P313
   Gray N., 2005, 6 AUSTR WORKSH SOFTW
   Henning M., 2010, CHOOSING MIDDLEWARE
   Henning M., 2006, RISE FALL CORBA
   Holland J., 2009, 17th International Conference on Computers in Education, P142
   IMS, 2010, LEARN TOOLS INT BAS
   IMS, 2003, ABSTR FRAM WHIT PAP
   IMS, 2005, GEN WEB SERV BAS PRO
   IMS, 2009, SERV OR ARCH SOA AD
   IMS, 2003, LEARN DES INF MOD BE
   Jurado F., J NETWORK C IN PRESS
   Jurado F, 2007, ADV SOFT COMP, V44, P470
   Jurado F, 2009, J UNIVERS COMPUT SCI, V15, P1472
   Kazman R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P81, DOI 10.1109/ICSE.1994.296768
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Krummenacher R, 2005, THIRD EUROPEAN CONFERENCE ON WEB SERVICES, PROCEEDINGS, P235
   Kumar A., 2004, P FRONT ED C FIE 200, P524
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   Marcelino M., 2006, 3 E LEARN C, P101
   MCCALLA GI, 1990, INTELLIGENT TUTORING SYSTEMS : AT THE CROSSROAD OF ARTIFICIAL INTELLIGENCE AND EDUCATION, P140
   Muñoz-Merino PJ, 2009, COMPUT STAND INTER, V31, P484, DOI 10.1016/j.csi.2008.06.009
   Muñoz-Organero M, 2010, IEEE INTERNET COMPUT, V14, P62, DOI 10.1109/MIC.2009.121
   MURRAY T, 2003, OVERVIEW INTELLIGENT, P491
   Nejdl W., 1999, 8 INT WORLD WID WEB
   Nunes de Barros L., 2005, P 2005 OOPSLA WORKSH, P125, DOI [10.1145/1117696.1117722, DOI 10.1145/1117696.1117722]
   Perez J.R.P., 2006, 4 INT C MULT IND COM
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Ritter S., 1995, Artificial Intelligence in Education, 1995. Proceedings of AI-ED 95 - 7th World Conference on Artificial Intelligence in Education, P91
   Ritter S, 1998, LECT NOTES COMPUT SC, V1452, P554
   Ritter S., 1996, Journal of Artificial Intelligence in Education, V7, P315
   SCORM, 2004, ADL ADV DISTR LEARN
   Severance C, 2008, INTERACT LEARN ENVIR, V16, P47, DOI 10.1080/10494820701772694
   Truong N., 2005, AUSTR COMP ED C
NR 59
TC 24
Z9 25
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2012
VL 85
IS 7
BP 1621
EP 1636
DI 10.1016/j.jss.2012.02.009
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 951LO
UT WOS:000304722300013
DA 2024-07-18
ER

PT J
AU Por, LY
   Wong, K
   Chee, KO
AF Por, Lip Yee
   Wong, KokSheik
   Chee, Kok Onn
TI UniSpaCh: A text-based data hiding method using Unicode space characters
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE UniSpaCh; DASH; Data hiding; Unicode character; Space manipulation
ID STEGANOGRAPHY
AB This paper proposes a text-based data hiding method to insert external information into Microsoft Word document. First, the drawback of low embedding efficiency in the existing text-based data hiding methods is addressed, and a simple attack, DASH, is proposed to reveal the information inserted by the existing text-based data hiding methods. Then, a new data hiding method, UniSpaCh, is proposed to counter DASH. The characteristics of Unicode space characters with respect to embedding efficiency and DASH are analyzed, and the selected Unicode space characters are inserted into inter-sentence, inter-word, end-of-line and inter-paragraph spacings to encode external information while improving embedding efficiency and imperceptivity of the embedded information. UniSpaCh is also reversible where the embedded information can be removed to completely reconstruct the original Microsoft Word document. Experiments were carried out to verify the performance of UniSpaCh as well as comparing it to the existing space-manipulating data hiding methods. Results suggest that UniSpaCh offers higher embedding efficiency while exhibiting higher imperceptivity of white space manipulation when compared to the existing methods considered. In the best case scenario. UniSpaCh produces output document of size almost 9 times smaller than that of the existing method. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Por, Lip Yee; Wong, KokSheik; Chee, Kok Onn] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur 50603, Malaysia.
C3 Universiti Malaya
RP Por, LY (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur 50603, Malaysia.
EM porlip@um.edu.my; koksheik@um.edu.my; wingz_04@yahoo.com
RI POR, LIP YEE/B-5309-2010; Chee, Kok Onn/X-7517-2019; Wong,
   KokSheik/B-9796-2011
OI POR, LIP YEE/0000-0001-5865-1533; Chee, Kok Onn/0000-0001-5643-7939;
   Wong, KokSheik/0000-0002-4893-2291
CR Allen J.D., 2009, SPACE CHARACTERS UNI
   [Anonymous], FORENSIC SCI COMMUNI
   [Anonymous], THESIS U DERBY
   [Anonymous], 2001, THESIS TRINITY COLL
   [Anonymous], 2000, Digital Watermarking
   Atallah M. J., 2001, Information Hiding, P185
   Atallah MJ, 2003, LECT NOTES COMPUT SC, V2578, P196
   Bender W, 1996, IBM SYST J, V35, P313, DOI 10.1147/sj.353.0313
   Bergmair R, 2004, LECT NOTES COMPUT SC, V3225, P257
   Bergmair R, 2007, LECT NOTES COMPUT SC, V4437, P109
   Bin He, 2009, 2009 WRI World Congress on Computer Science and Information Engineering, CSIE, P290, DOI 10.1109/CSIE.2009.830
   CALVO H, 2004, AVANCES CIENCIAS COM, P231
   Chand V., 2006, P 39 ANN HAW INT C S, V6, p126b, DOI DOI 10.1109/HICSS.2006.175
   Chen C, 2006, ICICIC 2006: FIRST INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING, INFORMATION AND CONTROL, VOL 1, PROCEEDINGS, P459
   Chotikakamthorn N, 1998, APCCAS '98 - IEEE ASIA-PACIFIC CONFERENCE ON CIRCUITS AND SYSTEMS, P419, DOI 10.1109/APCCAS.1998.743799
   Culnane C., 2006, INT WORKSH DIG WAT S
   Gutub AAA, 2007, PROC WRLD ACAD SCI E, V21, P28
   Johnson NF, 1998, COMPUTER, V31, P26, DOI 10.1109/MC.1998.4655281
   Khairullah M, 2009, INT C COMP ELEC ENG, P482, DOI 10.1109/ICCEE.2009.127
   Liu TY, 2007, IEEE T INF FOREN SEC, V2, P24, DOI 10.1109/TIFS.2006.890310
   McKellar D, 2000, SPACE MIMIC
   Minewaki S., 2003, INFORM PROCESSING SO, V44
   Montalbano, 2009, FORRESTER MICROSOFT
   Murphy B., 2007, PROC SPIE INT C SEC
   Nakagawa Hiroshi., 2001, IPSJ Transaction, V42, P2339
   Nguyen K., 1997, ROMANCE 3 KINGDOMS
   Por L. Y., 2008, WSEAS Transactions on Computers, V7, P735
   Shirali-Shahreza Mohammad, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P2260, DOI 10.1109/ICCIT.2007.100
   TOPKARA M, 2005, P SPIE INT C SEC STE
   Topkara U., 2006, P 8 WORKSHOP MULTIME, P164, DOI DOI 10.1145/1161366.1161397
   Westfeld A., 1999, LECT NOTES COMPUTER, P61, DOI [10.1007/107197245, DOI 10.1007/107197245]
   Wu M., 2002, MULTIMEDIA DATA HIDI
   Xuan GR, 2007, LECT NOTES COMPUT SC, V4633, P715
   Yu LJ, 2005, IMAGE VISION COMPUT, V23, P807, DOI 10.1016/j.imavis.2005.05.014
   Zou DK, 2005, IEEE INT SYMP CIRC S, P4971
NR 35
TC 60
Z9 70
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2012
VL 85
IS 5
BP 1075
EP 1082
DI 10.1016/j.jss.2011.12.023
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 912VF
UT WOS:000301828800005
DA 2024-07-18
ER

PT J
AU Colombo, P
   Khendek, F
   Lavazza, L
AF Colombo, Pietro
   Khendek, Ferhat
   Lavazza, Luigi
TI Bridging the gap between requirements and design: An approach based on
   Problem Frames and SysML
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Problem Frames; Decomposition criteria; Architectural patterns;
   Blackboard; System Modeling Language; Model based transformations; ATLAS
   Transformation Language
ID MODEL
AB The relation between the requirements specification and the design has been widely investigated with the aim to bridge the gap between the two artifacts. The goal is to find effective mechanisms to generate the system design starting from the analysis and specification of the requirements.
   This paper contributes to this research stream with an approach to create early design models from requirement artifacts. The approach weaves together the analysis and design phases favoring a tight collaboration between analysts and designers. It is based on Problem Frames, decomposition and re-composition patterns and supported by the System Modeling Language.
   The proposed solution has the potentiality of easing the development, shortening the development cycle and reducing the associated cost. The proposed design generation guidelines have been implemented as ATLAS Transformation Language rules in a model-based transformation process. The entire approach is model driven, allowing for the generation of the design model through transformations applied to the requirements model. The design model is automatically generated through the application of the transformation rules described in the paper. The proposed rules are fairly general and can be applied to any analysis model built according to the proposed analysis guidelines. The transformation process can be easily re-implemented using any suitable modeling tool that includes the ATLAS Transformation Language interpretation engine. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Colombo, Pietro; Lavazza, Luigi] Univ Insubria, Dipartimento Informat & Comunicaz, I-21100 Varese, Italy.
   [Khendek, Ferhat] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ H3G 1M8, Canada.
C3 University of Insubria; Concordia University - Canada
RP Colombo, P (corresponding author), Univ Insubria, Dipartimento Informat & Comunicaz, Via Mazzini 5, I-21100 Varese, Italy.
EM pietro.colombo@uninsubria.it; khendek@ece.concordia.ca;
   luigi.lavazza@uninsubria.it
RI Lavazza, Luigi/AAF-5323-2020
OI Khendek, Ferhat/0000-0002-3337-9841; Colombo,
   Pietro/0000-0003-4617-5247; Lavazza, Luigi/0000-0002-5226-4337
FU Natural Sciences and Engineering Research Council (NSERC) of Canada;
   project "Metodi e tecniche per l'analisi, l'implementazione e la
   valutazione di sistemi software"; Universita degli Studi dell'Insubria
FX This work has been partially supported by the Natural Sciences and
   Engineering Research Council (NSERC) of Canada and the project "Metodi e
   tecniche per l'analisi, l'implementazione e la valutazione di sistemi
   software" funded by Universita degli Studi dell'Insubria.
CR Ameller D., 2010, 18 IEEE REQ ENG C RE
   [Anonymous], 2003, OMG MDA GUID V 1 0 0
   [Anonymous], SYST MOD LANG SYSML
   Atkinson C., 2003, IEEE SOFTWARE, V20
   Azoff M., 2008, BENEFITS MODEL DRIVE
   Bencomo N., 2009, P WORKSH SELF ORG AR
   Brandozzi M., 2001, 1 INT WORKSH SOFTW R
   Brier J., 2006, P 2 INT WORKSH APPL
   Choppy C, 2005, IEE P-SOFTW, V152, P198, DOI 10.1049/ip-sen:20045061
   COLOMBO P, 2007, 14 AS PAC SOFTW ENG
   Colombo P., 2011, LNCS, V6698
   Colombo P., 2010, LNCS, V6138
   COLOMBO P, 2008, 3 INT WORKSH ADV APP
   de Boer RC, 2009, J SYST SOFTWARE, V82, P544, DOI 10.1016/j.jss.2008.11.185
   Dromey R. Geoff, 2006, WORLD SCI SERIES COM, P173, DOI [10.1142/9789812772831_0006, DOI 10.1142/9789812772831_0006]
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Hall J.G., 2002, 10 IEEE JOINT INT RE
   HALL JG, 2007, 5 IEEE INT C SOFTW E
   HALL JG, 2004, REQUIREMENTS ENG SOC
   Hall JG, 2008, IEEE T SOFTWARE ENG, V34, P226, DOI 10.1109/TSE.2007.70769
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D., 1999, 3 IFIP INT C FORM ME
   Inverardi P., 2001, 1 INT WORKSH SOFTW R
   ITU International Telecommunication Union, 2002, ITU T REC Z 100 SPEC
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jagannathan V., 1989, BLACKBOARD ARCHITECT
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khendek F., 2003, LNCS, V3466
   Laney R, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P122
   Lavazza L., 2006, LNCS, V3922
   Lavazza L., 2004, 1 INT WORKSH ADV APP, V39
   Mannering D.P., 2008, P 3 INT WORKSH APPL
   Medvidovic N, 2003, J SYST SOFTWARE, V68, P199, DOI 10.1016/S0164-1212(03)00063-3
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   OMG, 2010, UN MOD LANG UML V 2
   OVERTON J, 2009, P 3 IEEE INT WORKSH
   Overton J., 2009, P COMP WORLD 2009
   Patin F., 2006, 4 ANN C SYST ENG
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Rapanotti L., 2004, 12 IEEE REQ ENG C RE
   SCHNEIDER S, 2001, CORNERSTONES COMPUTI
NR 42
TC 12
Z9 17
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2012
VL 85
IS 3
BP 717
EP 745
DI 10.1016/j.jss.2011.09.046
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 908CS
UT WOS:000301468600020
DA 2024-07-18
ER

PT J
AU Fabra, J
   De Castro, V
   Alvarez, P
   Marcos, E
AF Fabra, J.
   De Castro, V.
   Alvarez, P.
   Marcos, E.
TI Automatic execution of business process models: Exploiting the benefits
   of Model-driven Engineering approaches
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Business processes; Model-driven Engineering; Model transformation;
   Model execution; Service-oriented development
ID SYSTEMS
AB The business goals of an enterprise process are traced to business process models with the aim of being carried out during the execution stage. The automatic translation from these models to fully executable code which can be simulated and round-trip engineered is still an open challenge in the Business Process Management field. Model-driven Engineering has proposed a set of methodologies with which to solve the existing gap between business analysts and software developers, but the expected results have not as yet been achieved. In this paper, a new approach to solve this challenge is proposed. This approach is based on the integration of SOD-M, a model-driven method for the development of service-oriented systems, and DENEB, a platform for the development and execution of flexible business processes. SOD-M provides business analysts with a methodology that can be used to transform their business goals into composition service models, a type of model that represents business processes. The use of the Eclipse Modelling Framework and the ATLAS Transformation Language allows this model to be automatically transformed into a DENEB workflow model, resulting in a business process that is coded by a class of high-level Petri-nets and is directly executable in DENEB. The application of the proposal presented herein is illustrated by means of a real system related to the management of medical images. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Fabra, J.; Alvarez, P.] Univ Zaragoza, Dept Comp Sci & Syst Engn, E-50018 Zaragoza, Spain.
   [De Castro, V.; Marcos, E.] Rey Juan Carlos Univ, Kybele Res Grp, E-28933 Madrid, Spain.
C3 University of Zaragoza; Universidad Rey Juan Carlos
RP Fabra, J (corresponding author), Univ Zaragoza, Dept Comp Sci & Syst Engn, Maria de Luna 1, E-50018 Zaragoza, Spain.
EM jfabra@unizar.es; valeria.decastro@urjc.es; alvaper@unizar.es;
   esperanza.marcos@urjc.es
RI de Castro, Valeria V/N-4401-2013; de Castro, Maria
   Valeria/AAH-9809-2021; Martinez, Esperanza Marcos/AAS-8564-2021;
   Martinez, Esperanza Marcos/JCE-5935-2023
OI de Castro, Maria Valeria/0000-0003-2193-7807; Marcos,
   Esperanza/0000-0003-2666-9995
FU Spanish Ministry of Science and Innovation [TIN2010-17905,
   TIN2008-03582, CONSOLIDER CSD2007-0022]
FX This research has been supported by a grant from the Spanish Ministry of
   Science and Innovation (projects TIN2010-17905, TIN2008-03582 and
   CONSOLIDER CSD2007-0022). We would like to acknowledge Angel Cortes Maya
   and Juan Ondiviela Julve for their collaboration in the implementation
   of the tool supporting SOD-M and the extra features developed for the
   DENEB platform.
CR Ameller D., 2009, THESIS U POLITECNICA
   [Anonymous], 2008, BPMN 1 1
   [Anonymous], 2006, IEEE COMPUTER
   [Anonymous], 2008, TRANSFORMING BPMN BP
   [Anonymous], 2009, OMG SERV OR ARCH SIG
   [Anonymous], 2011, OMG BPMN 2 0 OMG FOR
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 1999, XML PATH LANGUAGE XP
   [Anonymous], 2011, BPEL 2 0 SPEC
   ARIS Design Platform, 2007, GETT START BPM
   ARKIN A., 2002, BUSINESS PROCESS MOD
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   Brambilla M, 2006, 6 INT C WEB ENG ICWE, P85
   Brunswick J, 2008, EXTENDING BUSINESS V
   Butler Group, 2003, APPL DEV STRAT
   Caceres P., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1232, DOI 10.1145/1141277.1141567
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   de Castro V., 2006, International Journal of Web Engineering and Technology, V2, P335, DOI 10.1504/IJWET.2006.010419
   De Castro V, 2011, INFORM SOFTWARE TECH, V53, P87, DOI 10.1016/j.infsof.2010.09.002
   De Castro V, 2009, INT J COOP INF SYST, V18, P225, DOI 10.1142/S0218843009002038
   Dijkman R, 2010, BPMN 2010
   Fabra J, 2007, LECT NOTES COMPUT SC, V4655, P212
   Fabra J, 2006, LECT NOTES COMPUT SC, V4102, P209
   Fabra J, 2011, CONCURR COMP-PRACT E, V23, P2421, DOI 10.1002/cpe.1795
   Fabra J., 2010, 5 INT C INT WEB APPL
   Frye C, 2006, WEB SERVICES NEWS, P1
   GesIMED System, 2008, GESIMED SYSTEM
   Guelfi N., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1224, DOI 10.1145/1141277.1141566
   Hanson JE, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P65, DOI 10.1109/EDOC.2002.1137697
   Harmon P., 2004, Business Process Trends, V2, P1
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hernandez JA, 2007, IEEE T INF TECHNOL B, V11, P87, DOI 10.1109/TITB.2006.879601
   HRASTNIK P, 2004, INT J ELECT BUSINESS, V2, P550
   Ibanez M.J., 2008, INT C INT AG WEB TEC, P716
   Jiang P, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P71
   Johnson R., 2002, EXPERT ONE ON ONE J2
   Ibañez MJ, 2011, CONCURR COMP-PRACT E, V23, P57, DOI 10.1002/cpe.1595
   Ibáñez MJ, 2011, CONCURR COMP-PRACT E, V23, P525, DOI 10.1002/cpe.1661
   Ibáñez MJ, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P92, DOI 10.1109/ECOWS.2008.18
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kamoun F., 2007, UBIQUITY J, P1
   Ko R.K., 2009, BUSINESS PROCESS MAN, V15
   KUMMER O, 2003, TOOL DEMONSTRATIONS, P99
   Kummer O., 2001, SOZIONIK AKTUELL, P7
   LEYMANN F., 2001, WEB SERVICES FLOW LA
   Vara JM, 2009, LECT NOTES COMPUT SC, V5563, P181, DOI 10.1007/978-3-642-02408-5_13
   Marcos E, 2006, LECT NOTES COMPUT SC, V4344, P127
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Merseguer J, 2004, LECT NOTES COMPUT SC, V2965, P265
   MILLER J, 2003, OMG20030601
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   OMG and MDA, 2011, ARCH CHOIC CHANG WOR
   Palmer N., 2006, BUSINESS INTEGRATION, P54
   Reisig W., 2006, IEEE COMPUTER SOC, P11
   Roser S, 2005, Seventh IEEE International Conference on E-Commerce Technology Workshops, P43, DOI 10.1109/CECW.2005.1
   Sandy K, 2006, BPM THINK TANK
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic B, 2008, EUROPEAN J INFORM PR, VIX, P12
   Silveras B, 2011, BPMS WATCH
   Thatte S., 2001, XLANG WEB SERVICES B
   van Breugel F., 2006, Models and Verification of BPEL
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3098, P1
   Verner L., 2004, Queue, V2, P82, DOI DOI 10.1145/984458.984503
   Walsh A.E, 2002, EBXML TECHNICAL REPO
   Watson Andrew, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P7
   White S, 2004, PROCESS MODELLING NO
   WHITE S.A., 2005, USING BPMN MODEL BPE
NR 71
TC 16
Z9 19
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2012
VL 85
IS 3
BP 607
EP 625
DI 10.1016/j.jss.2011.09.022
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 908CS
UT WOS:000301468600012
OA Bronze
DA 2024-07-18
ER

PT J
AU Wei, FS
   Zhang, ZF
   Ma, CG
AF Wei, Fushan
   Zhang, Zhenfeng
   Ma, Chuangui
TI Gateway-oriented password-authenticated key exchange protocol in the
   standard model
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Password-based authentication; Gateway; DDH; Standard model
ID PROVABLY SECURE
AB A gateway-oriented password-based authenticated key exchange (GPAKE) is a 3-party protocol, which allows a client and a gateway to establish a common session key with the help of an authentication server. GPAKE protocols are suitable for mobile communication environments such as GSM (Global System for Mobile Communications) and 3GPP (The Third Generation Partnership Project). To date, most of the published protocols for GPAKE have been proven secure in the random oracle model. In this paper. we present the first provably-secure GPAKE protocol in the standard model. It is based on the 2-party password-authenticated key exchange protocol of Jiang and Gong. The protocol is secure under the DDH assumption (without random oracles). Furthermore, it can resist undetectable on-line dictionary attacks. Compared with previous solutions, our protocol achieves stronger security with similar efficiency. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Wei, Fushan; Ma, Chuangui] Zhengzhou Informat Sci & Technol Inst, Dept Informat Res, Zhengzhou 450002, Peoples R China.
   [Wei, Fushan; Zhang, Zhenfeng] Chinese Acad Sci, Inst Software, State Key Lab Informat Secur, Beijing 100190, Peoples R China.
C3 PLA Information Engineering University; Chinese Academy of Sciences;
   Institute of Software, CAS
RP Wei, FS (corresponding author), Zhengzhou Informat Sci & Technol Inst, Dept Informat Res, Zhengzhou 450002, Peoples R China.
EM weifs831020@163.com
FU National High Technology Research and Development Program of China
   [2009AA01Z417]; National Natural Science Foundation of China [60873261,
   61170278]; Key Scientific and Technological Project of Henan Province
   [092101210502]
FX This work was supported in part by the National High Technology Research
   and Development Program of China (No. 2009AA01Z417), the National
   Natural Science Foundation of China (Nos. 60873261, 61170278) and Key
   Scientific and Technological Project of Henan Province (No.
   092101210502). The authors would like to thank the anonymous referees
   for their helpful comments.
CR Abdalla M, 2005, LECT NOTES COMPUT SC, V3386, P65
   Abdalla M, 2005, LECT NOTES COMPUT SC, V3788, P566
   Abdalla M, 2009, LECT NOTES COMPUT SC, V5677, P671, DOI 10.1007/978-3-642-03356-8_39
   Abdalla M, 2008, LECT NOTES COMPUT SC, V5339, P133, DOI 10.1007/978-3-540-89641-8_10
   [Anonymous], 2003, Modern Cryptography: Theory and Practice
   [Anonymous], ACM OPERATING SYSTEM
   Bellare M, 2000, LECT NOTES COMPUT SC, V1807, P139
   Bellovin S. M., 1992, Proceedings. 1992 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.92CH3157-5), P72, DOI 10.1109/RISP.1992.213269
   Boyko V, 2000, LECT NOTES COMPUT SC, V1807, P156
   Byun JW, 2006, IEEE COMMUN LETT, V10, P683, DOI 10.1109/LCOMM.2006.060558
   Cramer R, 1998, LECT NOTES COMPUT SC, V1462, P13, DOI 10.1007/BFb0055717
   Gennaro R., 2006, ACM Transactions on Information and Systems Security, V9, P181, DOI 10.1145/1151414.1151418
   Gennaro R, 2008, LECT NOTES COMPUT SC, V4948, P589, DOI 10.1007/978-3-540-78524-8_32
   Groce A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P516, DOI 10.1145/1866307.1866365
   Hästad J, 1999, SIAM J COMPUT, V28, P1364, DOI 10.1137/S0097539793244708
   Jiang SQ, 2005, LECT NOTES COMPUT SC, V3357, P267
   Katz J, 2001, LECT NOTES COMPUT SC, V2045, P475
   Katz J, 2009, LECT NOTES COMPUT SC, V5912, P636, DOI 10.1007/978-3-642-10366-7_37
   Katz J, 2009, J ACM, V57, DOI 10.1145/1613676.1613679
   MacKenzie P, 2000, LECT NOTES COMPUT SC, V1976, P599
   Mao W., 2004, Modern cryptography theory and practice
   Shim KA, 2008, IEICE T FUND ELECTR, VE91A, P3837, DOI 10.1093/ietfec/e91-a.12.3837
   Yoon EJ, 2010, IEICE T FUND ELECTR, VE93A, P850, DOI 10.1587/transfun.E93.A.850
NR 23
TC 5
Z9 7
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2012
VL 85
IS 3
BP 760
EP 768
DI 10.1016/j.jss.2011.09.061
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 908CS
UT WOS:000301468600022
DA 2024-07-18
ER

PT J
AU Rodrigues, GN
   Alves, V
   Silveira, R
   Laranjeira, LA
AF Rodrigues, Genaina Nunes
   Alves, Vander
   Silveira, Renato
   Laranjeira, Luiz A.
TI Dependability analysis in the Ambient Assisted Living Domain: An
   exploratory case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Ambient Assisted Living; Dependability analysis; Component-based system
ID RELIABILITY
AB Ambient Assisted Living (AAL) investigates the development of systems involving the use of different types of sensors, which monitor activities and vital signs of lonely elderly people in order to detect emergency situations or deviations from desirable medical patterns. Instead of requiring the elderly person to manually push a button to request assistance, state-of-the-art AAL solutions automate the process by 'perceiving' lonely elderly people in their home environment through various sensors and performing appropriate actions under the control of the underlying software. Dependability in the AAL domain is a critical requirement, since poor system availability, reliability, safety, or integrity may cause inappropriate emergency assistance to potentially have fatal consequences. Nevertheless, contemporary research has not focused on assessing dependability in this domain. This work attempts to fill this gap presenting an approach which relies on modern quantitative and qualitative dependability analysis techniques based on software architecture. The analysis method presented in this paper consists of conversion patterns from Unified Modeling Language (UML) behavior models of the AAL software architecture into a formal executable specification, based on a probabilistic process algebra description language, which enables a sound quantitative and qualitative analysis. The UML models specify system component interactions and are annotated with component failure probabilities and system usage profile information. The resulting formal specification is executed on PRISM, a model checking tool adequate for the purpose of our analysis in order to identify a set of domain-specific dependability properties expressed declaratively in Probabilistic Computational Tree Logic (PCTL). The benefits of using these techniques are twofold. Firstly, they allow us to seamlessly integrate the analysis during subsequent software lifecycle stages in critical scenarios. Secondly, we identify the components which have the highest impact on software system dependability, and therefore, be able to address software architecture and individual software component problems prior to implementation and the occurrence of critical errors. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Rodrigues, Genaina Nunes; Alves, Vander; Silveira, Renato] Univ Brasilia, Dept Ciencia Computacao, Brasilia, DF, Brazil.
   [Laranjeira, Luiz A.] Univ Brasilia, Fac Engn Gama, Programa Engn Software, Brasilia, DF, Brazil.
C3 Universidade de Brasilia; Universidade de Brasilia
RP Rodrigues, GN (corresponding author), Univ Brasilia, Dept Ciencia Computacao, Brasilia, DF, Brazil.
EM genaina@cic.unb.br; valves@unb.br; renfranklin@gmail.com;
   llaranjeira@unb.br
RI Rodrigues, Genaina/J-3741-2015; Rodrigues, Genaina Nunes/N-4215-2019
OI Rodrigues, Genaina Nunes/0000-0003-1661-8131; Alves,
   Vander/0000-0003-1573-048X
FU CNPq [482481/2009-9]
FX The authors would like to thank the anonymous reviewers for invaluable
   feedback and the Fraunhofer Institute for Experimental Software
   Engineering for granting access to EMERGE's documents. This work has
   been partially supported by CNPq, under Edital MCT/CNPq 14/2009 -
   Universal - Faixa A, grant number 482481/2009-9.
CR Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barrera Nunez V., 2010, P 14 INT C HARM QUAL, P1
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Becker M., 2008, D62 IESE
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Heymans P., 1998, Requirements Engineering, V3, P202, DOI 10.1007/s007660050005
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hoffman L, 2008, COMMUN ACM, V51, P14, DOI 10.1145/1364782.1364788
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Kleinberger T, 2009, LECT NOTES COMPUT SC, V5615, P199, DOI 10.1007/978-3-642-02710-9_23
   Kramer J, 1999, LECT NOTES COMPUT SC, V1579, P1
   Kwiatkowska M, 2004, INT CONF QUANT EVAL, P322
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Nehmer J., 2006, 28th International Conference on Software Engineering Proceedings, P43, DOI 10.1145/1134285.1134293
   Object Management Group, 2010, UML 2 0 SUP
   Oxford University Computing Laboratory, 2010, PRISM CAS STUD
   Pruckner S., 2007, D31 IESE
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Rodrigues G. N., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P150, DOI 10.1109/SBCARS.2010.25
   Steinbach-Nordmann S., 2009, D612 IESE
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Uchitel S., 2003, P 9 INT C TOOLS ALG
   Yin R.K., 2011, Qualitative research from start to finish
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
NR 28
TC 18
Z9 26
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2012
VL 85
IS 1
BP 112
EP 131
DI 10.1016/j.jss.2011.07.037
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859RG
UT WOS:000297892900011
DA 2024-07-18
ER

PT J
AU Seo, J
   Choi, B
   Yang, SW
AF Seo, Jooyoung
   Choi, Byoungju
   Yang, Sueng-Wan
TI Lightweight embedded software performance analysis method by kernel hack
   and its industrial field study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Performance analysis; Kernel hack; Operational test; Embedded software;
   Embedded system
AB Despite advances in software testing technologies, there are still limitations in directly applying them to embedded software. Since the operational environment of embedded software has severe resource constraints, it is necessary to develop a lightweight testing method that has little impact on the operational environment of embedded software. We propose an agent-based performance analysis method to hack kernel performance counters that manage the system's execution information. The proposed method enables us to collect data required for analyzing performance bottlenecks and identify the causes and locations of bottlenecks with little impact on the test target system's operational environment.
   We introduce a test automation tool called Analytic Master of System v2.0 that we developed by employing our proposed method. Presently, Analytic Master of System v2.0 is being utilized as a standard tool for performance testing of embedded systems in the automotive industry. In addition, we suggest a guideline for performance analysis and improvement by introducing an industrial field study among our best practices, which analyze the relationship between the memory fault processing of the operating system and the application processing speed. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Seo, Jooyoung; Choi, Byoungju] Ewha Womans Univ, Dept Comp Sci & Engn, Seoul 120750, South Korea.
   [Yang, Sueng-Wan] Hyundai Motor Co, Elect R&D Ctr, Elect Integrat Syst Dev Grp, Seoul, South Korea.
C3 Ewha Womans University; Hyundai Kia Motors
RP Choi, B (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn, 11-1 Daehyun Dong, Seoul 120750, South Korea.
EM bjchoi@ewha.ac.kr
FU Hyundai Motor Company
FX This research was supported by the Hyundai Motor Company from 2008 to
   2010.
CR [Anonymous], 610121990 IEEE
   Bovet D.P., 2002, UNDERSTANDING LINUX, V2nd
   Broekman Bart., 2003, Testing embedded software
   Deitel H.M., 1990, INTRO OPERATING SYST
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   *IEEE, 11491 IEEE
   Jadhav S., 2005, P INT S ADV RAD TECH, P324
   KAPFHAMMER GM, 2005, P 20 IEEE ACM INT C, P418
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kumar Naveen., 2005, PASTE 05, P28, DOI DOI 10.1145/1108768.1108801
   Lazic L, 2004, SOFTW TEST VERIF REL, V14, P257, DOI 10.1002/stvr.299
   Microsoft, 2011, REM PERF MON
   Molyneaux I., 2009, The Art of Application Performance Testing: Help for Programmers and Quality Assurance, V1st
   Moore A. W., 1996, Operating Systems Review, V30, P16, DOI 10.1145/218646.218648
   Nethercote N., 2004, THESIS CAMBRIDGE
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Pavlov S., 2008, WINDOWS EMBEDDED CE6
   Seo J, 2011, INFORM SOFTWARE TECH, V53, P106, DOI 10.1016/j.infsof.2010.09.003
   SIMON DE, 2003, EMBEDDED SOFTWARE PR
   Sprunt B, 2002, IEEE MICRO, V22, P64, DOI 10.1109/MM.2002.1028477
   Stewart DB, 2003, IEEE T SOFTWARE ENG, V29, P311, DOI 10.1109/TSE.2003.1191796
   Tamches A, 1999, INT J HIGH PERFORM C, V13, P263, DOI 10.1177/109434209901300309
   Unix Programmer's Manual, 1979, UN PROGR MAN PROF CO
NR 23
TC 3
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2012
VL 85
IS 1
BP 28
EP 42
DI 10.1016/j.jss.2011.03.049
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859RG
UT WOS:000297892900004
DA 2024-07-18
ER

PT J
AU Kwon, O
   Koh, K
   Lee, J
   Bahn, H
AF Kwon, Ohhoon
   Koh, Kern
   Lee, Jaewoo
   Bahn, Hyokyung
TI FeGC: An efficient garbage collection scheme for flash memory based
   storage systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Joint Working IEEE/IFIP Conference on Software Architecture/European
   Conference on Software Architecture
CY SEP 14-17, 2009
CL Cambridge, ENGLAND
SP IEEE, IFIP
DE Embedded systems; Flash memory; Garbage collection; Storage systems
AB NAND flash memory is a promising storage media that provides low-power consumption, high density, high performance, and shock resistance. Due to these versatile features, NAND flash memory is anticipated to be used as storage in enterprise-scale systems as well as small embedded devices. However, unlike traditional hard disks, flash memory should perform garbage collection that consists of a series of erase operations. The erase operation is time-consuming and it usually degrades the performance of storage systems seriously. Moreover, the number of erase operations allowed to each flash memory block is limited. This paper presents a new garbage collection scheme for flash memory based storage systems that focuses on reducing garbage collection overhead, and improving the endurance of flash memory. The scheme also reduces the energy consumption of storage systems significantly. Trace-driven simulations show that the proposed scheme performs better than various existing garbage collection schemes in terms of the garbage collection time, the number of erase operations, the energy consumption, and the endurance of flash memory. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Bahn, Hyokyung] Ewha Womans Univ, Dept Comp Sci & Engn, Seoul 120750, South Korea.
   [Kwon, Ohhoon; Koh, Kern] Seoul Natl Univ, Sch Comp Sci & Engn, Seoul 151742, South Korea.
   [Lee, Jaewoo] Univ Penn, Dept Comp & Informat Sci, Philadelphia, PA 19104 USA.
C3 Ewha Womans University; Seoul National University (SNU); University of
   Pennsylvania
RP Bahn, H (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn, 11-1 Daehyun Dong, Seoul 120750, South Korea.
EM ohkwon@oslab.snu.ac.kr; kernkoh@oslab.snu.ac.kr; jaewoo@cis.upenn.edu;
   bahn@ewha.ac.kr
RI Lee, Jae/G-7717-2012
OI Lee, Jae/0000-0002-8756-0195
CR [Anonymous], ACM T COMPUTER SYSTE
   [Anonymous], 1949, Human behaviour and the principle of least-effort
   Ban Amir, 1995, US Patent, Patent No. [5,404,485, 5404485]
   BLACKWELL T, 1995, P USENIX TECHN C
   CHANG L, 2004, ACM T EMBEDDED COMPU
   Chang L.-P., 2007, P ACM S APPL COMP
   CHIANG M, 1999, J SYSTEMS SOFTWARE
   Du Yehua, 2006, P 16 INT C ART REAL
   Gupta A, 2009, ACM SIGPLAN NOTICES, V44, P229, DOI 10.1145/1508284.1508271
   Intel Corporation, 1998, UND FLASH TRANSL LAY
   Kang J., 2006, Proceedings of the International Conference on Embedded Software (EMSOFT), P161
   Kawaguchi A., 1995, P USENIX TECHN C
   KIM HJ, 1999, P COMP SOFTW APPL C
   Kim J, 2002, IEEE T CONSUM ELECTR, V48, P366
   LAWTON G, 2006, IEEE COMPUTER
   Lee S, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1234675.1234677
   Leventhal A, 2008, COMMUN ACM, V51, P47, DOI 10.1145/1364782.1364796
   *M SYST, TRUEFFS WEAR LEV MEC
   Manning C., 2001, YAFFS SPECIFICATION
   MATTHEWS JN, 1997, P 16 ACM S OP SYST P
   *MICR, MICR 16GB MASS STOR
   RUEMMLER C, 1993, P 1993 WINT USENIX
   *SAMS EL, 2005, K9WAG08U1A 128 M 8 B
   SELTZER M, 1993, P WINT USENIX
   TORELLI P, 1995, DOBBS J
   Woodhouse David., 2001, JFFS : The Journalling Flash File System
   WU M, 1994, P 6 INT C ARCH SUPP
   Yaghmour Karim., 2003, BUILDING EMBEDDED LI
   ZHU Q, 2005, P ACM S OP SYST PRIN
NR 29
TC 32
Z9 38
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2011
VL 84
IS 9
SI SI
BP 1507
EP 1523
DI 10.1016/j.jss.2011.02.042
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 809UC
UT WOS:000294081200008
DA 2024-07-18
ER

PT J
AU Mohanty, SP
   Kougianos, E
AF Mohanty, Saraju P.
   Kougianos, Elias
TI Real-time perceptual watermarking architectures for video broadcasting
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE VLSI architecture; Video broadcasting; IP-TV; Watermarking; Content
   protection; Copyright protection; Real-time security; Digital rights
   management; Multimedia security
ID SYSTEM
AB Existing secure embedded systems are primarily cryptography based. However, for effective Digital Rights Management (DRM) of multimedia in the framework of embedded systems, both watermarking and cryptography are necessary. In this paper, a watermarking algorithm and corresponding VLSI architectures are presented that will insert a broadcaster's logo into video streams in real-time to facilitate copyrighted video broadcasting and Internet protocol television (IP-TV). The VLSI architecture is prototyped using a hardware description language (HDL) and when realized in silicon can be deployed in any multimedia producing consumer electronics equipment to enable real-time DRM right at the source. The watermark is inserted into the video stream before MPEG-4 compression, resulting in simplified hardware requirements and superior video quality. The watermarking processing is performed in the frequency (DCT) domain. The system is initially simulated and validated in MATLAB/Simuline (R) and subsequently prototyped on an Altera (R) Cyclone-II FPGA using VHDL. Its maximum throughput is 43 frames/s at a clock speed of 100MHz which makes it suitable for emerging real-time digital video broadcasting applications such as IP-TV. The watermarked video is of high quality, with an average Peak-Signal-to-Noise Ratio (PSNR) of 21.8 dB and an average Root-Mean-Square Error (RMSE) of 20.6. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Mohanty, Saraju P.; Kougianos, Elias] Univ N Texas, NanoSyst Design Lab NSDL, Denton, TX 76207 USA.
C3 University of North Texas System; University of North Texas Denton
RP Mohanty, SP (corresponding author), Univ N Texas, NanoSyst Design Lab NSDL, Denton, TX 76207 USA.
EM saraju.mohanty@unt.edu; elias.kougianos@unt.edu
RI Kougianos, Elias/AAU-7560-2020
OI Kougianos, Elias/0000-0002-1616-7628; Mohanty,
   Saraju/0000-0003-2959-6541
CR Adamo O.B., 2006, P IEEE INT SOC C, P216
   [Anonymous], 2003, H.264 and MPEG-4 video compression: video coding for next generation multimedia
   Barni M, 2005, IEEE T MULTIMEDIA, V7, P23, DOI 10.1109/TMM.2004.840594
   Barni M, 1998, SIGNAL PROCESS, V66, P357, DOI 10.1016/S0165-1684(98)00015-2
   Biswas S, 2005, IEEE T INSTRUM MEAS, V54, P1853, DOI 10.1109/TIM.2005.855084
   Brunton A., 2005, PROC CANADIAN C ELEC, P1312, DOI DOI 10.1109/CCECE.2005.1557218
   Cai W., 2007, THESIS U N TEXAS
   Chen J., 2002, Design of Digital Video Coding Systems a complete compressed domain approach
   De Strycker L, 1999, IEE CONF PUBL, P775, DOI 10.1049/cp:19990429
   Fan YC, 2005, I SYMP CONSUM ELECTR, P399
   Garimella A, 2003, 16TH INTERNATIONAL CONFERENCE ON VLSI DESIGN, PROCEEDINGS, P283, DOI 10.1109/ICVD.2003.1183151
   Jeong YJ, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P450, DOI 10.1109/ICCIT.2008.321
   Kougianos E, 2009, COMPUT ELECTR ENG, V35, P339, DOI 10.1016/j.compeleceng.2008.06.002
   Loeffer C., 1989, ICASSP-89: 1989 International Conference on Acoustics, Speech and Signal Processing (IEEE Cat. No.89CH2673-2), P988, DOI 10.1109/ICASSP.1989.266596
   Maes M, 2000, IEEE SIGNAL PROC MAG, V17, P47, DOI 10.1109/79.879338
   Mathai NJ, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL II, P772
   Mathai NJ, 2003, IEEE T SIGNAL PROCES, V51, P925, DOI 10.1109/TSP.2003.809382
   Mohanty SP, 2007, IEEE ICCE, P485
   Mohanty SP, 2009, INT SYM QUAL ELECT, P527, DOI 10.1109/ISQED.2009.4810350
   Mohanty SP, 2005, IEEE T VLSI SYST, V13, P1002, DOI 10.1109/TVLSI.2005.857991
   Mohanty SP, 2000, 2000 IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, PROCEEDINGS VOLS I-III, P1029, DOI 10.1109/ICME.2000.871535
   Petitjean G, 2002, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL I AND II, PROCEEDINGS, P597, DOI 10.1109/ICME.2002.1035852
   Qiao LT, 1998, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA COMPUTING AND SYSTEMS, PROCEEDINGS, P276, DOI 10.1109/MMCS.1998.693656
   Saraju P. M., 2007, IEEE INT S CONS EL, P1
   STRYCKER LD, 2000, IEE P-VIS IMAGE SIGN, V147, P371, DOI DOI 10.1049/IPVIS:20000580
   Termont P, 1999, IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA COMPUTING AND SYSTEMS, PROCEEDINGS VOL 2, P220, DOI 10.1109/MMCS.1999.778284
   Tsai TH, 2003, ICCE: 2003 INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS, DIGEST OF TECHNICAL PAPERS, P216, DOI 10.1109/ICCE.2003.1218892
   Vural S., 2005, PROC 13 EUROPEAN SIG, P303
   Yong-Jae Jeong, 2008, 2008 Second International Conference on Future Generation Communication and Networking Symposia (FGCNS), P63, DOI 10.1109/FGCNS.2008.50
NR 29
TC 24
Z9 25
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2011
VL 84
IS 5
BP 724
EP 738
DI 10.1016/j.jss.2010.12.012
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 745PY
UT WOS:000289179300002
DA 2024-07-18
ER

PT J
AU Ghapanchi, AH
   Aurum, A
AF Ghapanchi, Amir Hossein
   Aurum, Aybuke
TI Antecedents to IT personnel's intentions to leave: A systematic
   literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE IT personnel; Intention to leave; Employee retention; Employee turnover;
   Systematic review
ID TURNOVER INTENTION; VOLUNTARY TURNOVER; EMPLOYEE TURNOVER; WORK;
   ORGANIZATION; METAANALYSIS; PROFESSIONALS; RELIABILITY; PREDICTORS;
   COMMITMENT
AB This paper undertakes a systematic review to gain insight into existing studies on the turnover of information technology (IT) personnel. Our systematic review of 72 studies from 1980 to 2008 examines the background and trend of research into IT personnel's intentions to leave their workplaces, in addition to providing a taxonomy of the determinants of their intentions to quit as captured in IT literature. We note a huge growth in the number of academic papers on the topic since 1998. Moreover, most of the research on IT turnover has been undertaken in North America, followed by Asia. Based on the 72 extracted studies, we found a total of 70 conceptually distinct IT turnover drivers. We classified them into the 5 broad categories of individual, organisational, job-related, psychological, and environmental, each containing three to four sub-categories. Finally, this paper presents insightful recommendations for IT practitioners as well as for the research community. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Ghapanchi, Amir Hossein; Aurum, Aybuke] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Ghapanchi, AH (corresponding author), Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
EM ghapanchi@unsw.edu.au
RI Ghapanchi, Amir Hossein/I-5629-2017
OI Ghapanchi, Amir Hossein/0000-0002-1897-0748; Aurum,
   Aybuke/0000-0003-2416-4555
CR Ahuja MK, 2007, MIS QUART, V31, P1
   [Anonymous], 1995, J MANAGE INFORM SYST
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], 1981, EXPERIENCE WORK COMP
   Armstrong DJ, 2007, INFORM MANAGE-AMSTER, V44, P142, DOI 10.1016/j.im.2006.11.005
   BARTOL KM, 1983, COMMUN ACM, V26, P807, DOI 10.1145/358413.358433
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BROWN J, 2000, EMPLOYEE TURNOVER CO
   Carayon P, 2006, BEHAV INFORM TECHNOL, V25, P381, DOI 10.1080/01449290500102144
   COOIL B, 1995, PSYCHOMETRIKA, V60, P199, DOI 10.1007/BF02301413
   Griffeth RW, 2000, J MANAGE, V26, P463, DOI 10.1177/014920630002600304
   Guimaraes T, 1992, INFORM SYST RES, V3, P273, DOI 10.1287/isre.3.3.273
   Hecker DE, 2005, MON LABOR REV, V128, P70
   Hsu MK, 2003, INFORM MANAGE-AMSTER, V40, P361, DOI 10.1016/S0378-7206(02)00018-6
   IGBARIA M, 1992, INFORM MANAGE, V23, P321, DOI 10.1016/0378-7206(92)90014-7
   IGBARIA M, 1994, INFORM MANAGE, V26, P245, DOI 10.1016/0378-7206(94)90063-9
   IGBARIA M, 1992, COMMUN ACM, V35, P34, DOI 10.1145/129630.129631
   Igbaria M, 1995, J STRATEGIC INF SYST, V4, P319, DOI 10.1016/0963-8687(95)80002-8
   IGBARIA M, 1996, ACM SIGCPR COMPUTER, P3
   Joseph D., 2003, P SIGMIS C COMP PERS
   Joseph D, 2007, MIS QUART, V31, P547
   JUDGE TA, 1995, PERS PSYCHOL, V48, P485, DOI 10.1111/j.1744-6570.1995.tb01767.x
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   KING RC, 2001, P ACM SIGCPR C COMP
   KITCHENHAM B, 2006, P 10 INT C EV ASS SO
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kochanski J, 2001, RES TECHNOL MANAGE, V44, P31, DOI 10.1080/08956308.2001.11671427
   Korunka C, 2008, HUM FACTORS ERGONOM, V18, P409, DOI 10.1002/hfm.20099
   Lacity MC, 2008, INFORM SYST FRONT, V10, P225, DOI 10.1007/s10796-007-9062-3
   Lee P.C.B., 2000, ACCOUNTING MANAGEMEN, V10, P101, DOI [DOI 10.1016/S0959-8022(99)00016-8, 10.1016/s0959-8022(99)00016-8]
   Lee PCB, 2004, INFORM MANAGE-AMSTER, V41, P323, DOI 10.1016/S0378-7206(03)00077-6
   LEE PCB, 2002, P ACM SIGCPR C COMP
   Lim VKG, 1999, INT J INFORM MANAGE, V19, P277, DOI 10.1016/S0268-4012(99)00027-4
   Longenecker CO, 2003, INFORM SYST MANAGE, V20, P58, DOI 10.1201/1078/43203.20.1.20031201/40085.8
   McKnight DH, 2009, INFORM MANAGE-AMSTER, V46, P167, DOI 10.1016/j.im.2009.01.002
   Meyer JP, 2002, J VOCAT BEHAV, V61, P20, DOI 10.1006/jvbe.2001.1842
   Mitchell TR, 2001, ACAD MANAGE J, V44, P1102, DOI 10.5465/3069391
   Moore JE, 2000, MIS QUART, V24, P141, DOI 10.2307/3250982
   NIEDERMAN F, 2001, P ACM SIGCPR C COMP
   Niederman F., 2006, P ACM SIGMIS CPR C C
   Niederman F, 2007, HUM RESOUR MANAGE-US, V46, P331, DOI 10.1002/hrm.20167
   PARE G, 2000, P 21 INT C INF SYST
   PORTER LW, 1973, PSYCHOL BULL, V80, P151, DOI 10.1037/h0034829
   Rasch R.H., 1989, Journal of Information Systems, V4, P13
   RUST RT, 1994, J MARKETING RES, V31, P1, DOI 10.2307/3151942
   Rutner PS, 2008, MIS QUART, V32, P635
   Ryan S., 2006, AMCIS 2006 P
   SMITH DC, 2006, P ACM SIGMIS CPR C C
   Soon Ang, 2004, Data Base for Advances in Information Systems, V35, P11, DOI 10.1145/1017114.1017118
   TANNIRU MR, 1981, P 18 ANN COMP PERS R
   TETT RP, 1993, PERS PSYCHOL, V46, P259, DOI 10.1111/j.1744-6570.1993.tb00874.x
   Thatcher J. B., 2006, Data Base for Advances in Information Systems, V37, P133, DOI 10.1145/1161345.1161361
   Thatcher JB, 2002, J MANAGE INFORM SYST, V19, P231
   THATCHER JB, 2001, P 22 ICIS C NEW ORL
   THATCHER JB, 2002, P ACM SIGCPR C COMP
   Verquer ML, 2003, J VOCAT BEHAV, V63, P473, DOI 10.1016/S0001-8791(02)00036-2
   WYNNE LA, 2002, P ACM SIGCPR C COMP
NR 57
TC 102
Z9 140
U1 4
U2 52
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2011
VL 84
IS 2
BP 238
EP 249
DI 10.1016/j.jss.2010.09.022
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 714ZH
UT WOS:000286849700007
DA 2024-07-18
ER

PT J
AU Moadeli, M
   Vanderbauwhede, W
AF Moadeli, Mahmoud
   Vanderbauwhede, Wim
TI An analytical model of broadcast in QoS-aware wormhole-routed NoCs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Advanced Information Networking and
   Applications Workshops
CY MAY 26-29, 2009
CL Bradford, ENGLAND
SP IEEE
DE Networks-on-Chip; Performance modeling; Quality of service; Broadcast;
   Wormhole switching
ID NETWORKS; MULTICAST; SERVICE; DESIGN; CHIP
AB Networks-on-Chip (NoC) emerged to address the technological and design issues related to development of large systems-on-chip (SoCs). Due to diversity of the application's performance requirements, most NoC architectures offer supports for quality of service (QoS). Also, to utilize the available bandwidth efficiently, they might implement mechanisms for delivering collective communication operations. This paper presents an analytical model to predict the average latency of wormhole-routed prioritized broadcast communication in NoCs. The model assumes that the network uses all-port routers scheme and offers differentiated services-based QoS. To verify the analysis, the model predictions are compared against the results obtained from a discrete-event simulator developed using OMNET++. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Moadeli, Mahmoud; Vanderbauwhede, Wim] Univ Glasgow, Dept Comp Sci, Glasgow G12 8QQ, Lanark, Scotland.
C3 University of Glasgow
RP Moadeli, M (corresponding author), Univ Glasgow, Dept Comp Sci, Glasgow G12 8QQ, Lanark, Scotland.
EM mahmoudm@dcs.gla.ac.uk; wim@dcs.gla.ac.uk
CR Andreasson D, 2005, IEEE INT SYMP CIRC S, P2353, DOI 10.1109/ISCAS.2005.1465097
   Beigné E, 2005, INT SYMP ASYNCHRON C, P54, DOI 10.1109/ASYNC.2005.10
   Benini L, 2002, COMPUTER, V35, P70, DOI 10.1109/2.976921
   Bjerregaard T, 2005, INT SYMP ASYNCHRON C, P34, DOI 10.1109/ASYNC.2005.7
   Bolotin E, 2004, J SYST ARCHITECT, V50, P105, DOI 10.1016/j.sysarc.2003.07.004
   Coppola M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON SYSTEM-ON-CHIP, PROCEEDINGS, P15, DOI 10.1109/ISSOC.2004.1411133
   DAILY WJ, 1986, 5208TR86 CALTECH COM, P1
   Dally WJ, 2001, DES AUT CON, P684, DOI 10.1109/DAC.2001.935594
   DRAPER JT, 1994, J PARALLEL DISTR COM, V23, P202, DOI 10.1006/jpdc.1994.1132
   Duato J., 2003, Interconnection networks
   Goossens K, 2005, IEEE DES TEST COMPUT, V22, P414, DOI 10.1109/MDT.2005.99
   Guerriert A. G. P., 2001, P DES AUT C DAC, P683
   Hong Zu, 1994, Proceedings Supercomputing '94 (Cat. No.94CH34819), P703, DOI 10.1109/SUPERC.1994.344336
   KLEINROCK Leonard., 1975, Queueing Systems, V2
   Liang H, 2004, IEEE T VLSI SYST, V12, P711, DOI [10.1109/tvlsi.2004.830919, 10.1109/TVLSI.2004.830919]
   LIN X, 1998, J PARALLEL DISTRIBUT, P274
   Liu J, 2004, J SYST ARCHITECT, V50, P65, DOI 10.1016/j.sysarc.2003.07.003
   Lu ZH, 2006, IEEE COMPUTER SOCIETY ANNUAL SYMPOSIUM ON VLSI, PROCEEDINGS, P205
   Millberg M, 2004, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, VOLS 1 AND 2, PROCEEDINGS, P890, DOI 10.1109/DATE.2004.1269001
   Moadeli M, 2008, PROCEEDINGS OF THE 2008 14TH IEEE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P705, DOI 10.1109/ICPADS.2008.53
   MOADELI M, 2008, INT C ADV INF NETW A, P942
   Moadeli M, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS, PROCEEDINGS, P1014, DOI 10.1109/AINA.2007.31
   Moadeli M, 2009, INT CON ADV INFO NET, P315, DOI 10.1109/AINA.2009.126
   Ogras UY, 2005, 2005 International Conference on Hardware/Software Codesign and System Synthesis, P69
   Panda D. K., 1994, Parallel Computer Routing and Communication. First International Workshop, PCRCW '94. Proceedings, P131
   Panda DK, 1999, IEEE T PARALL DISTR, V10, P76, DOI 10.1109/71.744844
   PARK JYL, 1996, INT C PAR PROC, V1
   *RFC, 2001, 3086 RFC IETF
   Rijpkema E, 2003, IEE P-COMPUT DIG T, V150, P294, DOI 10.1049/ip-cdt:20030830
   Rijpkema E., 2001, P 2 WORKSH EMB SYST, P181
   Robinson DF, 1995, J PARALLEL DISTR COM, V31, P126, DOI 10.1006/jpdc.1995.1151
   Rostislav D, 2005, INT SYMP ASYNCHRON C, P44, DOI 10.1109/ASYNC.2005.11
   Samman FA, 2008, DES AUT TEST EUROPE, P1200
   SATHE S, 2003, P 5 INT C ASIC, V1, P75
   SHAHRABI A, 2000, MASCOTS 00, P98
   VARGA A, 2002, OMNET IEEE NETWORK I, V16, P683
   Weber WD, 2005, DES AUT TEST EUROPE, P1232, DOI 10.1109/DATE.2005.33
NR 37
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2011
VL 84
IS 1
SI SI
BP 12
EP 20
DI 10.1016/j.jss.2010.08.024
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 696LH
UT WOS:000285442400003
DA 2024-07-18
ER

PT J
AU Gotlieb, A
   Petit, M
AF Gotlieb, Arnaud
   Petit, Matthieu
TI A uniform random test data generator for path testing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Random testing; Path testing; Constraint reasoning
AB Path-oriented Random Testing (PRT) aims at generating a uniformly spread out sequence of random test data that execute a single control flow path within a program. The main challenge of PRT lies in its ability to build efficiently such a test suite in order to minimize the number of rejects (test data that execute another control flow path). We address this problem with an original divide-and-conquer approach based on constraint reasoning over finite domains, a well-recognized Constraint Programming technique. Our approach first derives path conditions by using backward symbolic execution and computes a tight over-approximation of their associated subdomain by using constraint propagation and constraint refutation. Second, a uniform random test data generator is extracted from this approximated subdomain. We implemented this approach and got experimental results that show the practical benefits of PRT based on constraint reasoning. On average, we got a two-order magnitude CPU time improvement over standard Random Testing on a set of paths extracted from classical benchmark programs. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Gotlieb, Arnaud; Petit, Matthieu] INRIA Rennes, Bretagne Atlantique Res Ctr, F-35042 Rennes, France.
C3 Universite de Rennes
RP Gotlieb, A (corresponding author), INRIA Rennes, Bretagne Atlantique Res Ctr, F-35042 Rennes, France.
EM Arnaud.Gotlieb@irisa.fr; Matthieu.Petit@irisa.fr
RI Petit, Matthieu/E-5462-2010
OI Petit, Matthieu/0000-0003-3267-9938
CR ANAND S, 2007, C TOOLS ALG CONSTR A
   ANDREWS JH, 2006, 1 ACM INT WORKSH RAN
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   CHAN F, 2004, P 28 INT COMP SOFTW
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Collavizza H, 2006, LECT NOTES COMPUT SC, V3920, P182
   Dechter R, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P15
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   ECUYER P, 2004, HDB COMPUTATIONAL ST, P35
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Gogate V., 2008, P 23 AAAI C ARTIFICI, P271
   Gogate V, 2006, LECT NOTES COMPUT SC, V4204, P711
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   GOTLIEB A, 2008, 32 ANN IEEE INT COMP
   GOTLIEB A, 2006, 1 ACM INT WORKSH RAN
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   HENTENRYCK P, 1997, J LOGIC PROGRAM, V37, P139
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   MUCHNICK S, 1981, 1981 PROGRAM FLOW AN, pCH9
   Myers Glenford J., 2011, The Art of Software Testing
   Pacheco C., 2007, P INT C SOFTW ENG IC
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   WICHMANN BA, 1982, J R STAT SOC C-APPL, V31, P188
   Williams N., 2005, P DEP COMP EDCC 05
NR 24
TC 16
Z9 17
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2010
VL 83
IS 12
SI SI
BP 2618
EP 2626
DI 10.1016/j.jss.2010.08.021
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686CK
UT WOS:000284674200021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Langdon, WB
   Harman, M
   Jia, Y
AF Langdon, William B.
   Harman, Mark
   Jia, Yue
TI Efficient multi-objective higher order mutation testing with genetic
   programming
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Pareto optimality; Mutation testing; Higher order mutation; SBSE; Monte
   Carlo; Genetic algorithm; Genetic programming; NSGA-II; Strongly typed
   GP; Grammar based GP; Non-determinism; Triangle; Schedule; tcas; Gzip
AB It is said 90% of faults that survive manufacturer's testing procedures are complex. That is, the corresponding bug fix contains multiple changes. Higher order mutation testing is used to study defect interactions and their impact on software testing for fault finding. We adopt a multi-objective Pareto optimal approach using Monte Carlo sampling, genetic algorithms and genetic programming to search for higher order mutants which are both hard-to-kill and realistic. The space of complex faults (higher order mutants) is much larger than that of traditional first order mutations which correspond to simple faults, nevertheless search based approaches make this scalable. The problems of non-determinism and efficiency are overcome. Easy to detect faults may become harder to detect when they interact and impossible to detect single faults may be brought to light when code contains two such faults. We use strong typing and BNF grammars in search based mutation testing to find examples of both in ancient heavily optimised every day C code. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Langdon, William B.; Harman, Mark; Jia, Yue] Kings Coll London, CREST Ctr, Dept Comp Sci, Strand, London WC2R 2LS, England.
C3 University of London; King's College London
RP Langdon, WB (corresponding author), Kings Coll London, CREST Ctr, Dept Comp Sci, Strand, London WC2R 2LS, England.
EM william.langdon@kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   [Anonymous], INT C SOFTW TEST VER
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Bongard JC, 2005, IEEE T EVOLUT COMPUT, V9, P361, DOI 10.1109/TEVC.2005.850293
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Emer MCFP, 2003, SOFTWARE QUAL J, V11, P167, DOI 10.1023/A:1023772729494
   FONSECA CM, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P416
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2009, TR0906 KINGS COLL LO
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   LAKHOTIA K, 2007, GECCO 07, V1, P1098
   Langdon WB, 2009, ALGORITHM MOL BIOL, V4, DOI 10.1186/1748-7188-4-6
   Langdon W. B., 1998, Genetic programming and data structures: genetic programming+ data structures = automatic programming!
   LANGDON WB, 2008, CES483 U ESS
   LANGDON WB, 2009, TAIC PART, P21
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Poli R., 2008, A Field Guide to Genetic Programming
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   TUYA J, 2006, P 2 WORKSH MUT AN, P1
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhong H, 2008, INFORM SOFTWARE TECH, V50, P534, DOI 10.1016/j.infsof.2007.06.003
NR 33
TC 89
Z9 97
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2010
VL 83
IS 12
SI SI
BP 2416
EP 2430
DI 10.1016/j.jss.2010.07.027
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686CK
UT WOS:000284674200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, SG
   Xu, M
   Guan, JH
AF Zhou, Shuigeng
   Xu, Ming
   Guan, Jihong
TI LESSON: A system for lecture notes searching and sharing over Internet
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Lecture notes; Metasearch engines; Peer-to-peer networks; Content
   sharing; Query routing
ID LEARNING OBJECTS; FRAMEWORK
AB In this paper, we present a system LESSON for lecture notes searching and sharing, which is dedicated to both instructors and students for effectively supporting their Web-based teaching and learning activities. The LESSON system employs a metasearch engine for lecture notes searching from Web and a peer-to-peer (P2P) overlay network for lecture notes sharing among the users. A metasearch engine provides an unified access to multiple existing component search engines and has better performance than general-purpose search engines. With the help of a P2P overlay network, all computers used by instructors and students can be connected into a virtual society over the Internet and communicate directly with each other for lecture notes sharing, without any centralized server and manipulation. In order to merge results from multiple component search engines into a single ranked list, we design the RSF strategy that takes rank, similarity and features of lecture notes into account. To implement query routing decision for effectively supporting lecture notes sharing, we propose a novel query routing mechanism. Experimental results indicate that the LESSON system has better performance in lecture notes searching from Web than some popular general-purpose search engines and some existing metasearch schemes; while processing queries within the system, it outperforms some typical routing methods. Concretely, it can achieve relatively high query hit rate with low bandwidth consumption in different types of network topologies. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Zhou, Shuigeng; Xu, Ming] Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
   [Zhou, Shuigeng; Xu, Ming] Shanghai Key Lab Intelligent Informat Proc, Shanghai 200433, Peoples R China.
   [Guan, Jihong] Tongji Univ, Dept Comp Sci & Technol, Shanghai 201804, Peoples R China.
C3 Fudan University; Tongji University
RP Zhou, SG (corresponding author), Fudan Univ, Sch Comp Sci, 220 Handan Rd, Shanghai 200433, Peoples R China.
EM sgzhou@fudan.edu.cn; mingxu@fudan.edu.cn; jhguan@tongji.edu.cn
FU National Natural Science Foundation of China (NSFC) [60873040,
   60873070]; 863 Program [2009AA01Z135]; Program for New Century Excellent
   Talents in University of China [NCET-06-0376]; Shanghai Municipal
   Education Commission; Shanghai Education Development Foundation
FX This work was supported by the National Natural Science Foundation of
   China (NSFC) under grants No. 60873040 and No. 60873070, and the 863
   Program under grant No. 2009AA01Z135. Jihong Guan was also supported by
   the Program for New Century Excellent Talents in University of China
   (NCET-06-0376) and the "Shu Guang Program of Shanghai Municipal
   Education Commission and Shanghai Education Development Foundation.
CR [Anonymous], P EDMEDIA
   [Anonymous], P 13 INT WORLD WID W
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Bouzeghoub A, 2006, LECT NOTES COMPUT SC, V4053, P794
   Clematis A, 2007, LECT NOTES COMPUT SC, V4753, P469
   Collis B, 2000, INNOV EDUC TRAIN INT, V37, P108, DOI 10.1080/13558000050034466
   Connelly BD, 2006, PROC INT CONF PARAL, P281, DOI 10.1109/ICPP.2006.18
   Crespo A, 2002, INT CON DISTR COMP S, P23, DOI 10.1109/ICDCS.2002.1022239
   Diaz ED, 2005, LECT NOTES ARTIF INT, V3642, P193, DOI 10.1007/11548706_21
   Downes S., 2001, INT REV RES OPEN DIS, V2
   Dreilinger D, 1997, ACM T INFORM SYST, V15, P195, DOI 10.1145/256163.256164
   Duval E, 2001, COMMUN ACM, V44, P72, DOI 10.1145/374308.374346
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   Fiaidhi J, 2008, INT J MOB COMMUN, V6, P417, DOI 10.1504/IJMC.2008.018051
   Forte E., 1999, SIGMOD Record, V28, P20, DOI 10.1145/309844.309870
   GKANTSIDIS C, 2004, P IEEE C COMP COMM, P7
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Hawking D, 2001, INFORM RETRIEVAL, V4, P33, DOI 10.1023/A:1011468107287
   Hofmann T, 2004, ACM T INFORM SYST, V22, P89, DOI 10.1145/963770.963774
   HOFMANN T, 2003, P SIGIR JUL 28 AUG 1
   *IEEE LEARN TECHN, 2001, DRAFT STAND LEARN OB
   *IMS, IMS DRI IMS DIG REP
   Jonassen D.H., 1999, LEARNING TECHNOLOGY
   Kärger P, 2006, LECT NOTES COMPUT SC, V4227, P185
   KIU CC, 2005, P ICALT, P368
   Knezek G., 2002, Education and Information Technologies, V7, P369, DOI 10.1023/A:1020921807131
   Kumar A, 2005, IEEE INFOCOM SER, P1162
   Lee K. S., 2004, International Journal of Mechanical Engineering Education, V32, P160, DOI 10.7227/IJMEE.32.2.8
   Leighton G., 2005, Journal of Interactive Learning Research, V16, P295
   Lemnitzer L, 2007, LECT NOTES COMPUT SC, V4753, P202
   LIU K, 2001, ACM T INFORM SYSTEMS, V19, P310
   Lu YY, 2005, LECT NOTES COMPUT SC, V3806, P53
   LUO S, 2003, ACM T INFORM SYST, V21, P457
   Meng WY, 2002, ACM COMPUT SURV, V34, P48, DOI 10.1145/505282.505284
   MICHLMAYR E, 2006, P 22 INT C DAT ENG W, P142, DOI DOI 10.1109/ICDEW.2006.29
   Morselli Ruggero., 2005, Proceedings of the twenty-fourth annual ACM symposium on Principles of distributed computing, PODC '05, P77
   Najjar J, 2005, LECT NOTES COMPUT SC, V3652, P323, DOI 10.1007/11551362_29
   NEJDL W, 2002, P 11 INT WORLD WID W
   Neven F., 2002, Proceedings of the tenth ACM international conference on Multimedia, P291, DOI [10.1145/641007.641067, DOI 10.1145/641007.641067]
   OCHOA X, 2008, P EC TEL, P322
   Ochoa X, 2007, LECT NOTES COMPUT SC, V4753, P262
   Rasolofo Y, 2003, INFORM PROCESS MANAG, V39, P581, DOI 10.1016/S0306-4573(02)00122-X
   Rinner C., 2002, Journal of Geographical Systems, V4, P385, DOI [DOI 10.1007/S101090300095, 10.1007/s101090300095]
   Seal KC, 2001, COMPUT EDUC, V36, P33, DOI 10.1016/S0360-1315(00)00049-X
   Shih TK, 2006, LECT NOTES COMPUT SC, V4181, P203
   TERNIER S, 2008, D LIB MAGAZINE   JAN, V1
   Tsoumakos D, 2003, THIRD INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING (P2P2003), PROCEEDINGS, P102, DOI 10.1109/PTP.2003.1231509
   van Assche F, 2006, EDUC TECHNOL SOC, V9, P51
   VANDERZANDEN P, 2008, P WORLD C ED MULT HY, P553
   Vogt C. C., 1999, Information Retrieval, V1, P151, DOI 10.1023/A:1009980820262
   Wang TI, 2007, EDUC TECHNOL SOC, V10, P84
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Whittington C., 1998, INNOV EDUC TRAIN INT, V36, P26
   Xu ZS, 2006, LECT NOTES ARTIF INT, V3885, P172
   YAGER RR, 1985, INFORM SCIENCES, V36, P179, DOI 10.1016/0020-0255(85)90030-1
   YAGER RR, 2006, INT J INTELL SYST, P49
   YAGER RR, 1983, FUZZY SETS SYSTEMS, V10, P243
   Yip MCW, 2004, BRIT J EDUC TECHNOL, V35, P497, DOI 10.1111/j.0007-1013.2004.00407.x
NR 58
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2010
VL 83
IS 10
BP 1851
EP 1863
DI 10.1016/j.jss.2010.04.069
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 653SV
UT WOS:000282117900018
DA 2024-07-18
ER

PT J
AU De Oca, VM
   Jeske, DR
   Zhang, Q
   Rendon, C
   Marvasti, M
AF De Oca, Veronica Montes
   Jeske, Daniel R.
   Zhang, Qi
   Rendon, Carlos
   Marvasti, Mazda
TI A cusum change-point detection algorithm for non-stationary sequences
   with application to data network surveillance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Network surveillance; On-line detection; Screening; Cusum algorithm
ID QUALITY-CONTROL
AB We adapt the classic cusum change-point detection algorithm to handle non-stationary sequences that are typical with network surveillance applications. The proposed algorithm uses a defined timeslot structure to take into account time varying distributions, and uses historical samples of observations within each timeslot to facilitate a nonparametric methodology. Our proposed solution includes an on-line screening feature that fully automates the implementation of the algorithm and eliminates the need for manual oversight up until the point where root cause analysis begins. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Jeske, Daniel R.] Univ Calif Riverside, Dept Stat, Riverside, CA 92521 USA.
   [De Oca, Veronica Montes] United Hlth Grp, Minneapolis, MN 55440 USA.
   [Zhang, Qi] Experian, Costa Mesa, CA 92626 USA.
   [Rendon, Carlos] Symantec Corp, Mountain View, CA 94043 USA.
   [Marvasti, Mazda] Integrien Corp, Irvine, CA USA.
C3 University of California System; University of California Riverside;
   UnitedHealth Group Incorporated; Symantec
RP Jeske, DR (corresponding author), Univ Calif Riverside, Dept Stat, 2605 Stat Comp Bldg, Riverside, CA 92521 USA.
EM daniel.jeske@ucr.edu
CR ANDROULIDAKIS G, 2006, MIL COMM C MILCOM 20, P1
   [Anonymous], 1993, Nonparametric Methods in Change Point Problems
   Basseville M., 1993, DETECTION ABRUPT CHA
   Ben Hariz S, 2005, STAT PROBABIL LETT, V73, P155, DOI 10.1016/j.spl.2005.03.008
   Ben Hariz S, 2007, ANN STAT, V35, P1802, DOI 10.1214/009053606000001596
   BROOK D, 1972, BIOMETRIKA, V59, P539
   Chen J, 2001, COMMUN STAT-SIMUL C, V30, P665, DOI 10.1081/SAC-100105085
   CSORGO M, 1987, J STAT PLAN INFER, V17, P1, DOI 10.1016/0378-3758(87)90097-8
   de Bruyn C.S. Dobben., 1968, GRIFFINS STAT MONOGR
   DEOCA VM, 2008, THESIS U CALIFORNIA
   EWAN WD, 1960, BIOMETRIKA, V47, P363, DOI 10.1093/biomet/47.3-4.363
   Hajji H, 2005, IEEE T NEURAL NETWOR, V16, P1053, DOI 10.1109/TNN.2005.853414
   Hellerstein JL, 2001, COMPUT NETW, V35, P77, DOI 10.1016/S1389-1286(00)00151-1
   Kim SH, 2007, IIE TRANS, V39, P317, DOI 10.1080/07408170600743946
   LAI TL, 1995, J R STAT SOC B, V57, P613, DOI 10.1111/j.2517-6161.1995.tb02052.x
   Lambert D, 2006, J AM STAT ASSOC, V101, P78, DOI 10.1198/016214505000000943
   LUCAS JM, 1982, TECHNOMETRICS, V24, P199, DOI 10.2307/1268679
   MCDONALD D, 1990, NAV RES LOG, V37, P627, DOI 10.1002/1520-6750(199010)37:5<627::AID-NAV3220370504>3.0.CO;2-F
   Montgomery D.C., 1991, INTRO STAT QUALITY C
   PAGE ES, 1954, BIOMETRIKA, V41, P100, DOI 10.1093/biomet/41.1-2.100
   Thottan M, 2003, IEEE T SIGNAL PROCES, V51, P2191, DOI 10.1109/TSP.2003.814797
   WANG YZ, 1995, BIOMETRIKA, V82, P385
   Willemain TR, 1996, J QUAL TECHNOL, V28, P31, DOI 10.1080/00224065.1996.11979634
   WOLFE DA, 1984, J STAT PLAN INFER, V9, P389, DOI 10.1016/0378-3758(84)90013-2
   WOODALL WH, 1983, TECHNOMETRICS, V25, P295, DOI 10.2307/1268615
   WOODALL WH, 1984, TECHNOMETRICS, V26, P41, DOI 10.2307/1268414
NR 26
TC 29
Z9 33
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2010
VL 83
IS 7
SI SI
BP 1288
EP 1297
DI 10.1016/j.jss.2010.02.006
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 609KY
UT WOS:000278656500018
DA 2024-07-18
ER

PT J
AU Hsiung, PA
   Lin, SW
   Chen, YR
   Huang, CH
   Shih, C
   Chu, WC
AF Hsiung, Pao-Ann
   Lin, Shang-Wei
   Chen, Yean-Ru
   Huang, Chun-Hsian
   Shih, Chihhsiong
   Chu, William C.
TI Modeling and verification of real-time embedded systems with urgency
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Modeling; Formal verification; Urgency
AB Real-time embedded systems are often designed with different types of urgencies such as delayable or eager, that are modeled by several urgency variants of the timed automata model. However, most model checkers do not support such urgency semantics, except for the IF toolset that model checks timed automata with urgency against observers. This work proposes an Urgent Timed Automata (UTA) model with zone-based urgency semantics that gives the same model checking results as absolute urgency semantics of other existing urgency variants of the timed automata model, including timed automata with deadlines and timed automata with urgent transitions. A necessary and sufficient condition, called complete urgency, is formulated and proved for avoiding zone partitioning so that the system state graphs are simpler and model checking is faster. A novel zone capping method is proposed that is time-reactive, preserves complete urgency, satisfies all deadlines, and does not need zone partitioning. The proposed verification methods were implemented in the SGM CTL model checker and applied to real-time and embedded systems. Several experiments, comparing the state space sizes produced by SGM with that by the IF toolset, show that SGM produces much smaller state-spaces. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Shih, Chihhsiong; Chu, William C.] Tunghai Univ, Taichung 40704, Taiwan.
   [Hsiung, Pao-Ann; Lin, Shang-Wei; Huang, Chun-Hsian] Natl Chung Cheng Univ, Chiayi 62102, Taiwan.
   [Chen, Yean-Ru] Natl Taiwan Univ, Taipei 10617, Taiwan.
C3 Tunghai University; National Chung Cheng University; National Taiwan
   University
RP Chu, WC (corresponding author), Tunghai Univ, Taichung 40704, Taiwan.
EM cchu@thu.edu.tw
RI Hsiung, Pao-Ann/B-1293-2011; Huang, Chun-Hsian/AAT-1699-2021; LIU,
   PO-YU/AHB-4861-2022; Lin, Shang-Wei/D-9749-2017
OI Hsiung, Pao-Ann/0000-0002-3639-1467; Huang,
   Chun-Hsian/0000-0002-0508-6312; Lin, Shang-Wei/0000-0002-9726-3434
CR Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   ALUR R, 1994, THEORETICAL COMPUTER, V126, P235
   Barbuti R, 2004, ACTA INFORM, V40, P317, DOI 10.1007/s00236-003-0135-6
   BENGTSSON J, 1995, LECT NOTES COMPUTER, V1066, P232, DOI DOI 10.1007/BFB0020949
   Bornot S, 1998, LECT NOTES COMPUT SC, V1536, P103, DOI 10.1007/3-540-49213-5_5
   Bornot S, 2000, INFORM COMPUT, V163, P172, DOI 10.1006/inco.2000.2999
   Bowman H., 1998, Proc. of the 3rd International Workshop on Formal Methods for Industrial Critical Systems, P97
   Bozga M, 1999, LECT NOTES COMPUT SC, V1708, P307
   BOZGA M, 2001, LNCS, V2078, P223
   CASSEZ F, 2002, R1200213 IRCCYNCNRS
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Dill D. L., 1990, Automatic Verification Methods for Finite State Systems. International Workshop Proceedings, P197
   GEBREMICHAEL B, 2005, P 3 IEEE INT C SOFTW, P5
   HENZINGER TA, 1992, PROCEEDINGS OF THE SEVENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P394, DOI 10.1109/LICS.1992.185551
   HOGREFE D, LNCS, V2078, P168
   HSIUNG PA, 1998, P 5 INT C REAL TIM C
   *INTERVAL CONS, 1999, IST199911557 INTERVA
   Kaynar DK, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/REAL.2003.1253264
   Kwiatkowska M., 2000, P WORKSH ADV VER WAV
   Lin SW, 2005, LECT NOTES COMPUT SC, V3707, P370
   SIFAKIS J, 1996, LECT NOTES COMPUTER, V1046, P347
   STEFANI JB, 1992, COMPUT COMMUN, V15, P114, DOI 10.1016/0140-3664(92)90131-W
   Wang F, 2002, IEEE T COMPUT, V51, P61, DOI 10.1109/12.980017
   WANG F, 2001, P WORKSH REAL TIM TO
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
NR 25
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2009
VL 82
IS 10
SI SI
BP 1627
EP 1641
DI 10.1016/j.jss.2009.03.013
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504PC
UT WOS:000270628100007
DA 2024-07-18
ER

PT J
AU Sun, HM
   Wu, ME
   Hinek, MJ
   Yang, CT
   Tseng, VS
AF Sun, Hung-Min
   Wu, Mu-En
   Hinek, M. Jason
   Yang, Cheng-Ta
   Tseng, Vincent S.
TI Trading decryption for speeding encryption in Rebalanced-RSA
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE RSA; CRT; Encryption; Digital signatures; Lattice basis reduction;
   Cryptanalysis
ID SHORT SECRET EXPONENT; CRYPTANALYSIS; ALGORITHM; EQUATIONS
AB In 1982, Quisquater and Couvreur proposed an RSA variant, called RSA-CRT, based on the Chinese Remainder Theorem to speed up RSA decryption. In 1990, Wiener suggested another RSA variant, called Rebalanced-RSA, which further speeds up RSA decryption by shifting decryption costs to encryption costs. However, this approach essentially maximizes the encryption time since the public exponent e is generally about the same order of magnitude as the RSA modulus. In this paper, we introduce two variants of Rebalanced-RSA in which the public exponent e is much smaller than the modulus, thus reducing the encryption costs, while still maintaining low decryption costs. For a 1024-bit RSA modulus, our first variant (Scheme A) offers encryption times that are at least 2.6 times faster than that in the original Rebalanced-RSA, while the second variant (Scheme B) offers encryption times at least 3 times faster. In both variants, the decrease in encryption costs is obtained at the expense of slightly increased decryption costs and increased key generation costs. Thus, the variants proposed here are best suited for applications which require low costs in encryption and decryption. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Sun, Hung-Min] Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu 30043, Taiwan.
   [Wu, Mu-En] Acad Sinica, Inst Informat Sci, Taipei, Taiwan.
   [Hinek, M. Jason] Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Yang, Cheng-Ta; Tseng, Vincent S.] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 70101, Taiwan.
C3 National Tsing Hua University; Academia Sinica - Taiwan; University of
   Waterloo; National Cheng Kung University
RP Sun, HM (corresponding author), Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu 30043, Taiwan.
EM hmsun@cs.nthu.edu.tw
CR [Anonymous], COMMUN ACM
   Bleichenbacher D, 2006, LECT NOTES COMPUT SC, V3958, P1
   Boneh D, 1998, LECT NOTES COMPUT SC, V1514, P25
   Boneh D, 2000, IEEE T INFORM THEORY, V46, P1339, DOI 10.1109/18.850673
   BONEH D., 2002, CRYPTOBYTES, V5, P1
   BONEH D, 1999, NOT AM MATH SOC, V46, P203
   Coppersmith D, 1997, J CRYPTOL, V10, P233, DOI 10.1007/s001459900030
   COPPERSMITH D, 1996, LECT NOTES COMPUT SC, V1070, P1
   DURFEE G, LNCS, V1976, P14
   Galbraith SD, 2005, LECT NOTES COMPUT SC, V3574, P280
   Howgrave-Graham N, 1997, LECT NOTES COMPUT SC, V1355, P131, DOI 10.1007/BFb0024458
   LENSTRA AK, 1982, MATH ANN, V261, P515, DOI 10.1007/BF01457454
   LENSTRA HW, 1987, ANN MATH, V126, P649, DOI 10.2307/1971363
   Niven I., 1991, INTRO THEORY NUMBERS, V5
   *NTL, 2008, LIB DOING NUMB THEOR
   Qiao GP, 2000, LECT NOTES COMPUT SC, V1820, P353
   QUISQUATER JJ, 1982, ELECTRON LETT, V18, P905, DOI 10.1049/el:19820617
   Sun HM, 2005, LECT NOTES COMPUT SC, V3386, P199
   Sun HM, 1999, LECT NOTES COMPUT SC, V1716, P150
   Sun Wenxian, 2005, Plant Biology (Rockville), V2005, P53
   Verheul ER, 1997, APPL ALGEBR ENG COMM, V8, P425, DOI 10.1007/s002000050082
   WIENER MJ, 1990, IEEE T INFORM THEORY, V36, P553, DOI 10.1109/18.54902
   WU ME, 2004, THESIS NATL CHIAO TU
   2008, ECM
NR 24
TC 5
Z9 5
U1 0
U2 37
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2009
VL 82
IS 9
BP 1503
EP 1512
DI 10.1016/j.jss.2009.04.001
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 498DT
UT WOS:000270117700012
DA 2024-07-18
ER

PT J
AU Yang, JH
   Chang, CC
AF Yang, Jen-Ho
   Chang, Chin-Chen
TI An efficient three-party authenticated key exchange protocol using
   elliptic curve cryptography for mobile-commerce environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Authenticated key exchange; Elliptic curve cryptography; Mobile-commerce
   environments
ID AGREEMENT PROTOCOL
AB For secure communications in public network environments, various three-party authenticated key exchange (3PAKE) protocols are proposed to provide the transaction confidentiality and efficiency. In 2008, Chen et al. proposed a round-efficient 3PAKE protocol to provide the computation and communication efficiency for user authentication and session key exchange. However, we discover that the computation costs and communication loads of their protocol are still high so that it cannot be applied to mobile communications. Therefore, we propose an efficient three-party authenticated key exchange protocol based upon elliptic curve cryptography for mobile-commerce environments. Because the elliptic curve cryptography is used, the proposed 3PAKE protocol has low computation costs and light communication loads. Compared with Chen et al.'s protocol, the proposed protocol is more suitable and practical for mobile-commerce environments. (C) 2009 Elsevier Inc. All rights reserved.
C1 [Chang, Chin-Chen] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
   [Yang, Jen-Ho; Chang, Chin-Chen] Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
C3 Feng Chia University; National Chung Cheng University
RP Chang, CC (corresponding author), Feng Chia Univ, Dept Informat Engn & Comp Sci, 100 Wenhwa Rd, Taichung 40724, Taiwan.
EM jenho@cs.ccu.edu.tw; ccc@cs.ccu.edu.tw
RI Chang, Ching-Chun/JAN-6210-2023
CR [Anonymous], ACM SIGOPS OPERATING
   [Anonymous], ADV ENCRYPTION STAND
   [Anonymous], 1989, ADV CRYPTOLOGY CRYPT, DOI DOI 10.1007/0-387-34805-0'22
   Bellovin S. M., 1992, Proceedings. 1992 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.92CH3157-5), P72, DOI 10.1109/RISP.1992.213269
   Chang CC, 2004, COMPUT STAND INTER, V26, P471, DOI 10.1016/j.csi.2003.12.001
   Chang FC, 2007, J VLSI SIG PROC SYST, V49, P443, DOI 10.1007/s11265-007-0095-0
   Chen TH, 2008, J SYST SOFTWARE, V81, P1581, DOI 10.1016/j.jss.2007.11.720
   Choie YJ, 2005, APPL MATH COMPUT, V162, P179, DOI 10.1016/j.amc.2003.12.092
   Hankerson Darrel, 2006, Guide to Elliptic Curve Cryptography
   KOBLITZ N, 1987, MATH COMPUT, V48, P203, DOI 10.1090/S0025-5718-1987-0866109-5
   Lee JS, 2008, INT J INNOV COMPUT I, V4, P2305
   Lee SW, 2005, APPL MATH COMPUT, V167, P996, DOI 10.1016/j.amc.2004.06.129
   Lee TF, 2004, COMPUT SECUR, V23, P571, DOI 10.1016/j.cose.2004.06.007
   Menezes A. J., 1996, HDB APPL CRYPTOGRAPH, V1st
   Pan JS, 2004, IEICE T FUND ELECTR, VE87A, P1839
   Sun HM, 2005, J SYST SOFTWARE, V75, P63, DOI 10.1016/j.jss.2003.11.017
   Tian XJ, 2005, IEEE COMMUN LETT, V9, P970, DOI 10.1109/LCOMM.2005.11006
NR 17
TC 38
Z9 40
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2009
VL 82
IS 9
SI SI
BP 1497
EP 1502
DI 10.1016/j.jss.2009.03.075
PG 6
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 498DT
UT WOS:000270117700011
DA 2024-07-18
ER

PT J
AU Bani-Mohammad, S
   Ould-Khaoua, M
   Ababneh, I
   Mackenzie, LM
AF Bani-Mohammad, S.
   Ould-Khaoua, M.
   Ababneh, I.
   Mackenzie, Lewis M.
TI Comparative evaluation of contiguous allocation strategies on 3D mesh
   multicomputers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Contiguous processor allocation; Turnaround time; System utilization;
   Allocation overhead; Heavy-tailed distribution
ID PROCESSOR ALLOCATION; SCHEME
AB The performance of contiguous allocation strategies can be significantly affected by the type of the distribution adopted for job execution times. In this paper, the performance of the existing contiguous allocation strategies for 3D mesh multicomputers is re-visited in the context of heavy-tailed distributions (e.g., a Bounded Pareto distribution). The strategies are evaluated and compared using simulation experiments for both First-Come-First-Served (FCFS) and Shortest-Service-Demand (SSD) scheduling strategies under a variety of system loads and system sizes. The results show that the performance of the allocation strategies degrades considerably when job execution times follow a heavy-tailed distribution. Moreover, SSD copes much better than FCFS scheduling strategy in the presence of heavy-tailed job execution times. The results also reveal that allocation strategies that employ a list of allocated sub-meshes for both allocation and de-allocation exhibit low allocation overhead, and maintain good system performance in terms of average turnaround time and mean system utilization. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Ould-Khaoua, M.] Sultan Qaboos Univ, Coll Engn, Dept Elect & Comp Engn, Muscat, Oman.
   [Bani-Mohammad, S.; Ababneh, I.] Al Bayt Univ, Prince Hussein Bin Abdullah Coll Informat Technol, Dept Comp Sci, Mafraq 25113, Jordan.
   [Mackenzie, Lewis M.] Univ Glasgow, Dept Comp Sci, Glasgow G12 8QQ, Lanark, Scotland.
C3 Sultan Qaboos University; Al al-Bayt University; University of Glasgow
RP Ould-Khaoua, M (corresponding author), Sultan Qaboos Univ, Coll Engn, Dept Elect & Comp Engn, Muscat, Oman.
EM bani@aabu.edu.jo; mok@squ.edu.om; ismael@just.edu.jo;
   lewis@dcs.gla.ac.uk
CR ABABNEH I, 2001, AMSE ADV MODELLING A, V6, P43
   Ababneh I, 2006, J SYST SOFTWARE, V79, P1168, DOI 10.1016/j.jss.2006.01.019
   [Anonymous], 2005, SC 05 P 2005 ACMIEEE, DOI DOI 10.1109/SC.2005.52
   [Anonymous], 1997, PROCSIMITY V4 3 US M
   [Anonymous], P 38 IEEE COMP SOC I
   ATHAS WC, 1988, COMPUTER, V21, P9, DOI 10.1109/2.73
   Bani-Mohammad S, 2007, I C COMP SYST APPLIC, P934, DOI 10.1109/AICCSA.2007.370743
   Bani-Mohammad S., 2006, UBIQUITOUS COMPUTING, V1, P26
   Bani-Mohammad S., 2006, P 12 INT C PAR DISTR, V2, P41, DOI [10.1109/ICPADS.2006.68, DOI 10.1109/ICPADS.2006.68]
   Bani-Mohammad S., 2007, DCS TECHNICAL REPORT
   BANIMOHAMMAD S, 2006, P 7 ANN POSTGR S CON, P37
   BLUMRICH M, 2003, RC23025 IBM RES DIV
   Chiu GM, 1999, IEEE T PARALL DISTR, V10, P471, DOI 10.1109/71.770192
   Choo H, 2000, IEEE T PARALL DISTR, V11, P475, DOI 10.1109/71.852400
   *CRAY, 2004, CRAY XT3 DAT
   Crovella ME, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P1005, DOI 10.1145/268437.268733
   Harchol-Balter M, 1999, J PARALLEL DISTR COM, V59, P204, DOI 10.1006/jpdc.1999.1577
   Harchol-Balter Mor, 1999, PROC ASA IMS C APPL
   He LG, 2006, IEEE T PARALL DISTR, V17, P99, DOI 10.1109/TPDS.2006.18
   *INT CORP, 1991, TOUCHST DELTA SYST D
   KRUEGER P, 1994, IEEE T PARALL DISTR, V5, P488, DOI 10.1109/71.282559
   PETERSON C, 1991, IEEE MICRO, V11, P26, DOI 10.1109/40.87568
   QIAO W, 1994, 488241027 MI MICH ST
   Seo KH, 2005, 8TH INTERNATIONAL SYMPOSIUM ON PARALLEL ARCHITECTURES, ALGORITHMS AND NETWORKS, PROCEEDINGS, P318
   Seo KH, 2003, J SYST SOFTWARE, V67, P45, DOI 10.1016/S0164-1212(02)00086-9
   VARAVITHYA V, 1998, THESIS IOWA STATE U
   Wei JB, 2005, IEEE T COMPUT, V54, P964, DOI 10.1109/TC.2005.135
   Windisch K., 1995, P 5 S FRONT MASS PAR, P414
   Yoo BS, 2002, IEEE T COMPUT, V51, P46, DOI 10.1109/12.980016
   ZHU YH, 1992, J PARALLEL DISTR COM, V16, P328, DOI 10.1016/0743-7315(92)90016-G
NR 30
TC 18
Z9 19
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2009
VL 82
IS 2
BP 307
EP 318
DI 10.1016/j.jss.2008.06.033
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 408HU
UT WOS:000263426900010
DA 2024-07-18
ER

PT J
AU Kong, J
   Zhang, K
   Dong, J
   Xu, DX
AF Kong, Jun
   Zhang, Kang
   Dong, Jing
   Xu, Dianxiang
TI Specifying behavioral semantics of UML diagrams through graph
   transformations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Graph transformation; Graph grammars; Visual programming; Visual
   languages; UML; Behavioral semantics; Object-oriented systems
ID FORMALIZING UML; STATE MACHINES; MODEL; FRAMEWORK
AB The Unified Modeling Language (UML) has been widely accepted as a standard for modeling software systems from various perspectives. The intuitive notations of UML diagrams greatly improve the communication among developers. However, the lack of a formal semantics makes it difficult to automate analysis and verification. This paper offers a graphical yet formal approach to specifying the behavioral semantics of statechart diagrams using graph transformation techniques. It supports many advanced features of statecharts, such as composite states, firing priority, history, junction, and choice. In our approach, a graph grammar is derived automatically from a state machine to summarize the hierarchy of states. Based on the graph grammar. the execution of a set of non-conflict state transitions is interpreted by a sequence of graph transformations. This facilitates verifying a design model against system requirements. To demonstrate our approach, we present a case study on a toll-gate system. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Kong, Jun; Xu, Dianxiang] N Dakota State Univ, Fargo, ND 58105 USA.
   [Zhang, Kang; Dong, Jing] Univ Texas Dallas, Dallas, TX 75230 USA.
C3 North Dakota State University Fargo; University of Texas System;
   University of Texas Dallas
RP Kong, J (corresponding author), N Dakota State Univ, Fargo, ND 58105 USA.
EM jun.kong@ndsu.edu; kzhang@utdallas.edu; jdong@utdallas.edu;
   dianxiang.xu@ndsu.edu
CR [Anonymous], P UML 2000 YORK UK
   [Anonymous], 2005, UN MOD LANG SUP VERS
   [Anonymous], 1999, HDB GRAPH GRAMMARS C, DOI DOI 10.1142/9789812815149_0014
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Baresi L, 2005, ACM T SOFTW ENG METH, V14, P42, DOI 10.1145/1044834.1044836
   BARESI L, 2001, LNCS, P271
   BARESI L, 2003, P 9 EUR SOFTW ENG C, P68
   Blostein D., 1996, Graph Grammars and Their Application to Computer Science. 5th International Workshop. Selected Papers, P38, DOI 10.1007/3-540-61228-9_78
   Bolognesi T., 1989, FORMAL DESCRIPTION T, P23
   Booch G., 2005, The Unified Modeling Language User Guide
   BORGER E, 2000, LNCS, V1912, P223
   BRUEL JM, 1998, P OOPSLA 98 WORKSH F
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   BURNETT MM, 2008, VISUAL LANGUAGE RES
   Cheng BHC, 2002, IEEE T SOFTWARE ENG, V28, P747, DOI 10.1109/TSE.2002.1027798
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Costagliola G, 1997, IEEE T SOFTWARE ENG, V23, P777, DOI 10.1109/32.637392
   Costagliola G, 2000, IEEE VISLANG, P103, DOI 10.1109/VL.2000.874373
   Cox PT, 2000, J VISUAL LANG COMPUT, V11, P549, DOI 10.1006/jvlc.2000.0175
   Crane M.L., 2005, SEMANTICS UML STATE
   ENGELS C, 2001, P UML 2001, P272
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Ermel C, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P125, DOI 10.1109/VLHCC.2005.18
   EVANS A, 1999, P OOPSLA 99 WORKSH B
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Garlan D, 2002, SCI COMPUT PROGRAM, V44, P23, DOI 10.1016/S0167-6423(02)00031-X
   GEIGER L, 2004, P INT WORKSH GRAPH B
   GOGOLLA M, 2002, P GRAPH TRANSF VIS M
   Gogolla M., 1998, Proceedings ICSE'98 Workshop on Precise Semantics of Modeling Techniques (PSMT'98), P55
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Hoare C., 1985, Prentice-Hall International Series in Computer Science
   Hölscher K, 2006, J VISUAL LANG COMPUT, V17, P78, DOI 10.1016/j.jvlc.2005.11.001
   HU Z, 2006, J AUTOMATED SOFTWARE, V13, P423
   Jin Y., 2004, SOFTW SYST MODEL, V3, P150
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Kong J., 2006, ACM Transactions on Computer-Human Interaction, V13, P268, DOI 10.1145/1165734.1165739
   KONG J, 2005, P VL HCC 05 WORKSH V, P51
   KUSKE S, 2001, P UML 2001, P241
   LATELLA D, 1999, P FMOODS 99 IFIP TC6, P331
   Lilius J, 1999, LECT NOTES COMPUT SC, V1723, P430
   MAGGIOLOSCHETTI.A, 1994, LECT NOTES COMPUT SC, V776, P265
   MAGGIOLOSCHETTI.A, 1996, LECT NOTES COMPUTER, V1073, P107
   McMillan KennethLauchlin., 1992, SYMBOLIC MODEL CHECK
   McUmber WE, 2001, PROC INT CONF SOFTW, P433, DOI 10.1109/ICSE.2001.919116
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MELLOW SJ, 2002, EXECUTABLE UML FDN M
   METAYER DL, 1998, IEEE T SOFTWARE ENG, V24, P521
   Raistrick Chris., 2004, MODEL DRIVEN ARCHITE
   Reggio G, 2000, LECT NOTES COMPUT SC, V1783, P127
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Schattkowsky T, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P117, DOI 10.1109/VLHCC.2005.64
   Schattkowsky T, 2004, SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P121, DOI 10.1109/ISORC.2004.1300337
   SCHURR A, 1995, LNCS, V989, P219
   Starr Leon., 2001, Executable UML: How to Build Class Models
   Taentzer G., 1998, LNCS, V1764, P179, DOI DOI 10.1007/978-3-540-46464-8
   Varró D, 2002, LECT NOTES COMPUT SC, V2505, P378
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
   Zhang DQ, 2001, COMPUT J, V44, P186, DOI 10.1093/comjnl/44.3.186
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
   Zhao Y, 2004, PROCEEDINGS OF THE IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY FOR DYNAMIC E-BUSINESS, P180
   ZIEMANN P, 2004, ENTCS, P263
   ZIEMANN P, 2004, P WORKSH VIS LANG FO, P17
   [No title captured]
NR 65
TC 22
Z9 23
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2009
VL 82
IS 2
BP 292
EP 306
DI 10.1016/j.jss.2008.06.030
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 408HU
UT WOS:000263426900009
DA 2024-07-18
ER

PT J
AU Yang, J
   Huang, G
   Zhu, WH
   Cui, XF
   Mei, H
AF Yang, Jie
   Huang, Gang
   Zhu, Wenhui
   Cui, Xiaofeng
   Mei, Hong
TI Quality attribute tradeoff through adaptive architectures at runtime
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quality attribute tradeoff; Software architecture; Quality attribute
   scenario; Adaptive architecture; Reflective middleware
AB Quality attributes, e.g. performance and reliability, become more and more important for the development of software systems. One of the critical issues on quality assurance is how to make good enough tradeoffs between quality attributes that interfere with each other. Some architecture-based quality design and analysis methods are proposed to make tradeoffs at design time. However, many quality attributes depend on runtime contexts; it may be difficult and even impossible to make tradeoffs between them at design time. In this paper, we use an adaptive architecture model to Capture candidate strategies for different quality attributes; the tradeoff, i.e. which strategies are more appropriate and thus applied, is postponed to runtime. The contribution of our approach is threefold. First, it makes use of existing architecture-based quality design and analysis methods to identify why and where quality attribute tradeoffs are necessary. Second, a traditional architecture description language is extended to support the modeling of an adaptive architecture, which records strategies for different quality attributes under different conditions. Third, a reflective middleware is used to monitor the runtime system, collect required information to determine appropriate strategies, and adapt the application's architecture to achieve expected quality attributes. This approach is demonstrated on J2EE. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Yang, Jie; Huang, Gang; Zhu, Wenhui; Cui, Xiaofeng; Mei, Hong] Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
   [Huang, Gang; Zhu, Wenhui; Cui, Xiaofeng; Mei, Hong] Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Yang, Jie] IBM China Res Lab, Beijing 100193, Peoples R China.
C3 Peking University; International Business Machines (IBM)
RP Huang, G (corresponding author), Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
EM huanggang@sei.pku.edu.cn
RI Zhu, Wenhui/B-3162-2016
FU High-Tech Research and Development Program (863) of China
   [2007AA010301]; National Natural Science Foundation of China [60528006];
   Fok Ying Tung Education Foundation; IBM University joint Study Program.;
    [National Basic Research Program (973) of China 2002CB312000]
FX This effort is sponsored by the National Basic Research Program (973) of
   China under Grant No. 2002CB312000, the High-Tech Research and
   Development Program (863) of China under Grant No. 2007AA010301, the
   National Natural Science Foundation of China under Grant No. 60528006,
   the Fok Ying Tung Education Foundation and the IBM University joint
   Study Program.
CR Agha G, 2002, COMMUN ACM, V45, P30
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   ALUR D, 2001, COR J2EE PATT BEST P
   ANDERSSON J, 2000, P 4 INT SOFTW ARCH W
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   Aurrecoechea C, 1998, MULTIMEDIA SYST, V6, P138, DOI 10.1007/s005300050083
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bennett Keith H, 2000, Software maintenance and evolution, P73, DOI DOI 10.1145/336512.336534
   BLAIR G, 1998, P IFIP INT C DISTR S
   BOSCH J, 1999, P IEEE ENG COMP BAS
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   COULSON G, 2000, DISTRIBUTED SYSTEM O
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DOWLING J, 2005, THESIS U DUBLIN
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   Huang G, 2006, INT J AUTOMATED SOFT, V13, P251
   IN H, 1999, 23 INT COMP SOFTW AP, P318
   JAIN P, 1997, P 3 C OBJ OR TECHN S
   Kazman R., 1999, INT C SOFTW ENG, P54
   Klein M., 1999, CMUSEI99TR022
   Kon F, 2000, LECT NOTES COMPUT SC, V1795, P121
   LEDOUX T, 1999, LECT NOTES COMPUTER, V1616, P197
   LIU Z, 2006, P 30 INT COMP SOFTW
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mei H, 2004, INT WKSHP FUT TR DIS, P163
   MEI H, 2002, ICFEM, P38
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   OTHMAN O, 2004, 24 IEEE INT C DISTR
   Rajeshwari G, 2005, INT CONF QUANT EVAL, P249, DOI 10.1109/QEST.2005.32
   Schmidt DC, 2002, COMMUN ACM, V45, P43, DOI 10.1145/508448.508472
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Vanegas R, 1998, P IFIP INT C DISTR S
   ZHU YL, 2006, THESIS PEKING U
   [No title captured]
NR 35
TC 14
Z9 15
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2009
VL 82
IS 2
BP 319
EP 332
DI 10.1016/j.jss.2008.06.039
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 408HU
UT WOS:000263426900011
DA 2024-07-18
ER

PT J
AU Mathur, V
   Apte, V
AF Mathur, Vipul
   Apte, Varsha
TI An overhead and resource contention aware analytical model for
   overloaded Web servers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Web server; Overload; Analytical model; LIFO; Resource sharing; Markov
   chain; Layered queuing network; Queuing theory
ID PERFORMANCE
AB A Web server, when overloaded, shows a severe degradation of goodput initially, with the eventual settling of goodput as load increases further. Traditional performance models have failed to capture this behavior. In this paper, we propose an analytical model, which is a two-stage and layered queuing model of the Web server, which is able to reproduce this behavior. We do this by explicitly modelling the overhead processing, the user abandonment and retry behavior, and the contention for resources, for the FIFO and LIFO queuing disciplines. We show that LIFO provides better goodput in most overload situations. We compare our model predictions with experimental results from a test bed and find that our results match well with measurements. (c) 2008 Elsevier Inc. All rights reserved.
C1 [Mathur, Vipul; Apte, Varsha] Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Mathur, V (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Bombay 400076, Maharashtra, India.
EM vipulmathur@iitb.ac.in; varsha@cse.iitb.ac.in
CR Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   [Anonymous], 1975, QUEUEING SYSTEMS THE
   Carlström J, 2002, IEEE INFOCOM SER, P506, DOI 10.1109/INFCOM.2002.1019295
   Carter R, 2000, IEEE SYMP COMP COMMU, P2, DOI 10.1109/ISCC.2000.860534
   Chen HM, 2003, COMPUT NETW, V42, P119, DOI 10.1016/S1389-1286(03)00178-6
   Chen JJH, 2002, CLIN RHEUMATOL, V21, P516, DOI 10.1007/s100670200126
   Cherkasova L, 2002, IEEE T COMPUT, V51, P669, DOI 10.1109/TC.2002.1009151
   Dalal AC, 2001, GLOB TELECOMM CONF, P2465, DOI 10.1109/GLOCOM.2001.966220
   DOSHI BT, 1986, IEEE T COMMUN, V34, P538, DOI 10.1109/TCOM.1986.1096578
   Elnikety S., 2004, P 13 INT C WORLD WID, P276
   Hirel C, 2000, LECT NOTES COMPUT SC, V1786, P345
   KAUFMAN JS, 1989, ITC, V12, P386
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Libman L, 2002, IEEE ACM T NETWORK, V10, P551, DOI 10.1109/TNET.2002.801412
   MELAMED B, 1984, J ACM, V31, P839, DOI 10.1145/1634.322459
   Movaghar A., 2000, Proceedings IEEE International Computer Performance and Dependability Symposium. IPDS 2000, P167, DOI 10.1109/IPDS.2000.839478
   Movaghar A, 1996, IEEE INTERNATIONAL COMPUTER PERFORMANCE AND DEPENDABILITY SYMPOSIUM - IPDS'96, PROCEEDINGS, P150, DOI 10.1109/IPDS.1996.540216
   PLA V, 2004, P 16 ITC SPEC SEM PE
   Reeser P, 2002, TELECOMMUN SYST, V21, P283, DOI 10.1023/A:1020902716313
   REINECKE P, 2006, P 3 EUR PERF ENG WOR, P226
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   ROSENCRANCE L, 2005, COMPUTERWORLD AL JUL
   SCHWARTZ M, 1987, TELECOMMUNICATION NE, P606
   SINGHMAR N, 2004, INT INFR SURV WORKSH
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   Voigt T, 2002, IEEE SYMP COMP COMMU, P219, DOI 10.1109/ISCC.2002.1021682
NR 27
TC 3
Z9 4
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2009
VL 82
IS 1
SI SI
BP 39
EP 55
DI 10.1016/j.jss.2008.03.068
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 391JZ
UT WOS:000262230900004
DA 2024-07-18
ER

PT J
AU Blanco-Fernández, Y
   Pazos-Arias, JJ
   Gil-Solla, A
   Ramos-Cabrer, M
   López-Nores, M
   García-Duque, J
   Fernández-Vilas, A
   Díaz-Redondo, RP
AF Blanco-Fernandez, Yolanda
   Pazos-Arias, Jose J.
   Gil-Solla, Alberto
   Ramos-Cabrer, Manuel
   Lopez-Nores, Martin
   Garcia-Duque, Jorge
   Fernandez-Vilas, Ana
   Diaz-Redondo, Rebeca P.
TI Exploiting synergies between semantic reasoning and personalization
   strategies in intelligent recommender systems: A case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Personalization; Content-based methods; Collaborative filtering;
   Semantic reasoning
ID FRAMEWORK; TAXONOMY
AB Current recommender systems attempt to identify appealing items for a user by applying syntactic matching techniques, which suffer from significant limitations that reduce the quality of the offered suggestions. To overcome this drawback, we have developed a domain-independent personalization strategy that borrows reasoning techniques from the Semantic Web, elaborating recommendations based on the semantic relationships inferred between the user's preferences and the available items. Our reasoning-based approach improves the quality of the suggestions offered by the current personalization approaches, and greatly reduces their most severe limitations. To validate these claims, we have carried out a case study in the Digital TV field, in which our strategy selects TV programs interesting for the viewers from among the myriad of contents available in the digital streams. Our experimental evaluation compares the traditional approaches with our proposal in terms of both the number of TV programs suggested, and the users' perception of the recommendations. Finally, we discuss concerns related to computational feasibility and scalability of our approach. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Blanco-Fernandez, Yolanda; Pazos-Arias, Jose J.; Gil-Solla, Alberto; Ramos-Cabrer, Manuel; Lopez-Nores, Martin; Garcia-Duque, Jorge; Fernandez-Vilas, Ana; Diaz-Redondo, Rebeca P.] ETSE Telecomunicac, Vigo 36310, Spain.
C3 Universidade de Vigo
RP Blanco-Fernández, Y (corresponding author), ETSE Telecomunicac, Campus Univ, Vigo 36310, Spain.
EM yolanda@det.uvigo.es
RI Díaz Redondo, Rebeca P./L-3108-2014; Nores, Martín López/AAG-8636-2020;
   Nores, Martín López/F-9378-2016; Arias, José/ITR-8005-2023; José, Pazos
   Arias/F-6788-2016; Vilas, Ana Fernández/L-2055-2014; Gil,
   Alberto/F-6827-2016; Blanco-Fernandez, Yolanda/F-8111-2016; Ramos
   Cabrer, Manuel/F-5339-2016
OI Díaz Redondo, Rebeca P./0000-0002-2367-2219; Nores, Martín
   López/0000-0002-4802-607X; José, Pazos Arias/0000-0002-0424-5481; Vilas,
   Ana Fernández/0000-0003-1047-2143; Gil, Alberto/0000-0002-9641-4149;
   Blanco-Fernandez, Yolanda/0000-0002-1816-1377; Ramos Cabrer,
   Manuel/0000-0002-1684-2160
FU Ministerio de Educacion y Ciencia (Gobierno de Espana); Conselleria de
   Eclucacion e Ordenacion Universitaria (Xunta de Galicia)
   [TSI2007-61599]; Programa de Promocion Xeral da Investigacion de
   Conselleria de Innovacion; Industria e Comercio (Xunta de Galicia)
   [PGIDIT05PXIC32204PN]
FX Work funded by the Ministerio de Educacion y Ciencia (Gobierno de
   Espana) research project TSI2007-61599, by the Conselleria de Eclucacion
   e Ordenacion Universitaria (Xunta de Galicia) incentives file
   2007/000016-0, and by the Programa de Promocion Xeral da Investigacion
   de Conselleria de Innovacion, Industria e Comercio (Xunta de Galicia)
   PGIDIT05PXIC32204PN.
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Basu C, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P714
   BECKETT D, 2004, RDF SYNTAX SPECIFICA
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Boone G., 1998, Proceedings of the Second International Conference on Autonomous Agents, P141, DOI 10.1145/280765.280791
   Brickley D., 2004, RDF VOCABULARY DESCR
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   *DAML, 2000, DARPA AG MARK LANG
   DAS D, 2001, RECOMMENDER SYSTEMS, P151
   DIMITROVA N, 2003, P 3 WORKSH PERS FUT, P42
   Fensel D, 2001, IEEE INTELL SYST APP, V16, P38, DOI 10.1109/5254.920598
   FERNANDEZ YB, KNOWL-BASED SYST, DOI DOI 10.1016/J.KNOSYS.2007.07.004
   FERNANDEZ YB, 2006, P 4 EUR C INT TEL EU, P174
   Fernandez YB, 2007, INT J PATTERN RECOGN, V21, P397, DOI 10.1142/S0218001407005375
   Ganesan P, 2003, ACM T INFORM SYST, V21, P64, DOI 10.1145/635484.635487
   Griffiths A., 2003, Digital Television Strategies: Business Challenges and Opportunities
   Hill W., 1995, Proceedings of CHI'95, P194
   Hobbs J.R., 2006, W3C working draft, V27, P133
   HSU IC, 2008, EXPERT SYSTEMS APPL
   Kobsa A, 2001, KNOWL ENG REV, V16, P111, DOI 10.1017/S0269888901000108
   Lin D, 1998, P 15 INT C MACH LEAR, V98, P296
   Liu PF, 2007, 2007 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, VOLS 1 AND 2, P179, DOI 10.1109/CIDM.2007.368870
   McGuinness D. L., 2004, OWL WEB ONTOLOGY LAN, DOI DOI 10.2004-03
   Middleton S., 2003, THESIS U SOUTHAMPTON
   Miller BM, 2003, IFAC WORK S, P263, DOI 10.1145/604045.604094
   Montaner M, 2003, ARTIF INTELL REV, V19, P285, DOI 10.1023/A:1022850703159
   Pazos-Arias JJ, 2006, SOFTWARE PRACT EXPER, V36, P845, DOI 10.1002/spc.719
   Pazzani M, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P54
   Pazzani MJ, 1999, ARTIF INTELL REV, V13, P393, DOI 10.1023/A:1006544522159
   PRATA A, 2004, P 4 WORKSH PERS FUT, P274
   RADA R, 1989, IEEE T SYST MAN CYB, V19, P17, DOI 10.1109/21.24528
   Resnik P, 1999, J ARTIF INTELL RES, V11, P95, DOI 10.1613/jair.514
   Sarwar S., 2000, PROCEEDING 2 ACM C E, P158, DOI DOI 10.1145/352871.352887
   SCHAFER B, 1999, P 1 ACM C EL COMM, P158
   Shardanand U, 1994, THESIS MIT
   *TIVO INC, 2002, TIVO TV YOUR WAY
   Wang RQ, 2007, PROCEEDINGS OF 2007 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P4069
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Yu ZW, 2007, LECT NOTES COMPUT SC, V4611, P898
   Ziegler C.-N., 2004, Proceedings of the 2nd ACM SIGIR Semantic Web and Information Retrieval Workshop, P25
   Zimmerman J, 2004, HUM-COMPUT INT-SPRIN, P27
   2001, TEKNOWLEDGE ONTOLOGY
   2001, TV ANYTIME SPECIFI S
NR 43
TC 38
Z9 41
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2008
VL 81
IS 12
SI SI
BP 2371
EP 2385
DI 10.1016/j.jss.2008.05.009
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 375NE
UT WOS:000261119800020
DA 2024-07-18
ER

PT J
AU Aroba, J
   Cuadrado-Gallego, JJ
   Sicilia, MA
   Ramos, I
   Garcia-Barriocanal, E
AF Aroba, Javier
   Cuadrado-Gallego, Juan J.
   Sicilia, Miguel-Angel
   Ramos, Isabel
   Garcia-Barriocanal, Elena
TI Segmented software cost estimation models based on fuzzy clustering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software effort estimation; Parametric software estimation rnodels;
   Fuzzy Clustering
AB Parametric software cost estimation models are based on mathematical relations, obtained from the study of historical software projects databases, that intend to be useful to estimate the effort and time required to develop a software product. Those databases often integrate data coming from projects of a heterogeneous nature. This entails that it is difficult to obtain a reasonably reliable single parametric model for the range of diverging project sizes and characteristics. A solution proposed elsewhere for that problem was the use of segmented models in which several models combined into a single one contribute to the estimates depending on the concrete characteristic of the inputs. However, a second problem arises with the use of segmented models, since the belonging of concrete projects to segments or clusters is subject to a degree of fuzziness, i.e. given project can be considered to belong to several segments with different degrees.
   This paper reports the first exploration of a possible solution for both problems together, using a segmented model based on fuzzy clusters of the project space. The use of fuzzy clustering allows obtaining different mathematical models for each cluster and also allows the items of a project database to contribute to more than one cluster, while preserving constant time execution of the estimation process. The results of an evaluation of a concrete model using the ISBSG 8 project database are reported, yielding better figures of adjustment than its crisp counterpart. (C) 2008 Elsevier Inc. All rights reserved.
C1 [Aroba, Javier] Univ Huelva, Dept Informat Technol, Huelva 21071, Spain.
   [Cuadrado-Gallego, Juan J.; Sicilia, Miguel-Angel; Garcia-Barriocanal, Elena] Univ Alcala de Henares, Dept Comp Sci, Madrid 28871, Spain.
   [Ramos, Isabel] Univ Seville, Dpto Lenguajes & Sistemas Informat, Seville, Spain.
C3 Universidad de Huelva; Universidad de Alcala; University of Sevilla
RP Aroba, J (corresponding author), Univ Huelva, Dept Informat Technol, Ctra Huelva La Rabida S-N, Huelva 21071, Spain.
EM aroba@diesia.uhu.es; jjcg@uah.es; msicilia@uah.es;
   isabel.ramos@lsi.us.es; elena.garciab@uah.es
RI Aroba, Javier/AAB-2286-2020; Sicilia, Miguel-Angel/F-5002-2012; Ramos
   Roman, Isabel/U-7827-2017
OI Ramos Roman, Isabel/0000-0002-9201-0673; Miguel Angel, Sicilia
   Urban/0000-0003-3067-4180; Aroba Paez, Javier/0000-0003-3947-1822
FU IN2GESOFT [MCYT TIN 2004-06689-C03]
FX This work has been supported by the project MCYT TIN 2004-06689-C03
   (IN2GESOFT).
CR [Anonymous], 1986, Software Engineering Metrics and Models
   Aroba J., 2003, THESIS
   BAYLEI J, 1981, P 5 INT C SOFTW ENG, P107
   Bezdek J. C., 1981, Pattern recognition with fuzzy objective function algorithms
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Cuadrado-Gallego JJ, 2006, J SYST SOFTWARE, V79, P353, DOI 10.1016/j.jss.2005.04.040
   Cuadrado-Gallego JJ, 2007, COMPUT INFORM, V26, P1
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Dunn J.C., 1974, J CYBERNETICS, V3, P95, DOI 10.1080/019697274085460590304.68093
   FARR L, 1965, P ICC S EC AUT DAT P
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fukuyama Y., 1989, Proceeding of fifth fuzzy Syst. Sympo, P247, DOI DOI 10.1016/S0167-8655(97)00168-2
   GATH I, 1989, IEEE T PATTERN ANAL, V11, P773, DOI 10.1109/34.192473
   Herd J., 1977, RADCTR77220 DOT ASS
   Jensen Randall., 1983, 5 ISPA C, P88
   Putnam L., 1992, MEASURES EXCELLENCE
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   RUBIN H, 1983, P SOFTFAIR C DEV TOO
   Sicilia MA, 2005, KYBERNETIKA, V41, P249
   Söderlund J, 2005, INT J TECHNOL MANAGE, V32, P371, DOI 10.1504/IJTM.2005.007340
   Sugeno M., 1993, IEEE Transactions on Fuzzy Systems, V1, P7, DOI 10.1109/TFUZZ.1993.390281
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Xu ZW, 2004, FUZZY SET SYST, V145, P141, DOI 10.1016/j.fss.2003.10.008
   YOSHINARI Y, 1993, FUZZY SET SYST, V54, P157, DOI 10.1016/0165-0114(93)90273-K
NR 25
TC 22
Z9 23
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2008
VL 81
IS 11
BP 1944
EP 1950
DI 10.1016/j.jss.2008.01.016
PG 7
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 363ON
UT WOS:000260276700010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bertoni, GM
   Breveglieri, L
   Chen, LQ
   Fragneto, P
   Harrison, KA
   Pelosi, G
AF Bertoni, Guido M.
   Breveglieri, Luca
   Chen, Liqun
   Fragneto, Pasqualina
   Harrison, Keith A.
   Pelosi, Gerardo
TI A pairing SW implementation for smart-cards
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE tate pairing; elliptic curves; software implementation
ID ELLIPTIC CURVE; MULTIPLICATION; CRYPTOGRAPHY; NUMBERS
AB The aim of this work is to show the feasibility of the primitives of the identity based cryptosystems for applications in Smart-Cards. Several observations are applied to easily choose many supersingular elliptic curves over a prime field F-p, p > 3, p equivalent to 3 mod 4, in such a way that the size of the torsion subgroup, the curve order and the finite field characteristic are of minimal Hamming weight. We modify the Chudnovsky elliptic curve point representation to settle a dedicated coordinate system for pairings and to minimize the number of operations in the finite field. The encouraging timing results obtained for ST22 Smart-Card architecture show the feasibility of pairing primitives for embedded devices. (c) 2007 Elsevier Inc. All rights reserved.
C1 [Breveglieri, Luca; Pelosi, Gerardo] Politecn Milan, I-20133 Milan, Italy.
   [Bertoni, Guido M.; Fragneto, Pasqualina] Ctr Direz Colleoni, STMicroelect, I-20041 Agrate Brianza, Italy.
   [Chen, Liqun; Harrison, Keith A.] HP Labs, Bristol BS34 8QZ, Avon, England.
C3 Polytechnic University of Milan; STMicroelectronics
RP Pelosi, G (corresponding author), Politecn Milan, I-20133 Milan, Italy.
EM pelosi@elet.polimi.it
RI Pelosi, Gerardo/I-4538-2013; Chen, Liang-Chia/AAV-9954-2020
OI Pelosi, Gerardo/0000-0002-3812-5429; Chen,
   Liang-Chia/0000-0001-9613-9936; Chen, Liqun/0000-0003-2680-4907;
   bertoni, guido/0000-0002-5122-1589
CR [Anonymous], 2000, S CRYPT INF SEC SCIS
   [Anonymous], 9939 CORR U WAT
   Balasubramanian R, 1998, J CRYPTOL, V11, P141, DOI 10.1007/s001459900040
   Barreto P. S. L. M., 2004, 2004375 CRYPT EPRINT
   BARRETO PSL, 2007, PAIRING BASED CRYPTO
   Barreto PSLM, 2003, LECT NOTES COMPUT SC, V2576, P257
   Barreto PSLM, 2002, LECT NOTES COMPUT SC, V2442, P354
   Boneh D, 2004, LECT NOTES COMPUT SC, V3152, P41, DOI 10.1007/978-3-540-28628-8_3
   Boneh D, 2003, SIAM J COMPUT, V32, P586, DOI 10.1137/S0097539701398521
   Boneh D, 2001, ADV CRYPTOLOGY ASIAC, V2248, P514, DOI [10.1007/s00145-004-0314-9, DOI 10.1007/S00145-004-0314-9]
   CHUDNOVSKY DV, 1986, ADV APPL MATH, V7, P385, DOI 10.1016/0196-8858(86)90023-0
   Cocks C., 2001, CRYPTOGRAPHY CODING, V2260, P360, DOI DOI 10.1007/3-540-45325-3
   Cohen H, 1998, LECT NOTES COMPUT SC, V1514, P51
   Dutta R., 2004, 200564 CRYPT EPRINT
   Duursma I, 2003, LECT NOTES COMPUT SC, V2894, P111
   Frey G, 1999, IEEE T INFORM THEORY, V45, P1717, DOI 10.1109/18.771254
   GALBRAITH S, 2004, 2004365 CRYPT EPRINT
   Galbraith SD, 2002, LECT NOTES COMPUT SC, V2369, P324
   *GEMPL, 2005, ID BAS CRYPT SMARTC
   Gura N, 2004, LECT NOTES COMPUT SC, V3156, P119
   Hess F, 2006, IEEE T INFORM THEORY, V52, P4595, DOI 10.1109/TIT.2006.881709
   *INT ASS CRYPT RES, 2007, CRYPT EPRINT ARCH
   Joux A, 2000, LECT NOTES COMPUT SC, V1838, P385
   KARABUTSA A, 1962, DOKL AKAD NAUK SSSR+, V145, P293
   Koblitz N, 2005, LECT NOTES COMPUT SC, V3796, P13
   Menezes A. J., 1996, HDB APPL CRYPTOGRAPH, V1st
   MENEZES AJ, 1993, IEEE T INFORM THEORY, V39, P1639, DOI 10.1109/18.259647
   Mont MC, 2003, 14TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P432, DOI 10.1109/DEXA.2003.1232060
   MONTGOMERY PL, 1985, MATH COMPUT, V44, P519, DOI 10.1090/S0025-5718-1985-0777282-X
   Scott M, 2006, DESIGN CODE CRYPTOGR, V38, P209, DOI 10.1007/s10623-005-0538-1
   Scott M, 2005, LECT NOTES COMPUT SC, V3376, P293
   Scott M, 2006, LECT NOTES COMPUT SC, V4249, P134
   Shamir A., 1985, Advances in Cryptology, V84 4, P47, DOI 10.1007/3-540-39568-7_5
   Silverman Joseph H., 1994, GRADUATE TEXTS MATH, V106
   *STMICROELECTRONIC, 2005, ENCR SMART CARD TECH
   Verheul ER, 2001, LECT NOTES COMPUT SC, V2045, P195
   VICTOR M, 1986, SHORT PROGR FU UNPUB
   Zhang FG, 2002, LECT NOTES COMPUT SC, V2501, P533
   [No title captured]
NR 39
TC 13
Z9 13
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2008
VL 81
IS 7
BP 1240
EP 1247
DI 10.1016/j.jss.2007.09.022
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 318LW
UT WOS:000257094200013
DA 2024-07-18
ER

PT J
AU Schalken, J
   van Vliet, H
AF Schalken, Joost
   van Vliet, Hans
TI Measuring where it matters: Determining starting points for metrics
   collection
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Joint Meeting of the International Workshop on Software Measurement
   (IWSM)/International Conference on Software Process and Product
   Measurement (MENSURA)
CY NOV 05-07, 2007
CL Palma de Mallorca, SPAIN
DE emperical software engineering; postmortem analysis
AB Defining useful metrics to measure the goals of a software organisation is difficult. Defining useful metrics to measure the causes of the (failure) to fulfil those organisational goals is even more difficult, as the diversity of potential causes makes their measurement illusive. In this article, we describe a method to select useful software metrics based on findings from qualitative research. In a case study, we apply this method to a previously conducted study of project post-mortem reviews to assess the validity of our prior claims. For this we collected data on 109 new software projects in the organisation in which we conducted the previous case study. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Schalken, Joost] Univ Amsterdam, Sect Software Engn, Dept Comp Sci, NL-1098 SJ Amsterdam, Netherlands.
   [van Vliet, Hans] Vrije Univ Amsterdam, Dept Informat Management & Software Engn, NL-1081 HV Amsterdam, Netherlands.
C3 University of Amsterdam; Vrije Universiteit Amsterdam
RP Schalken, J (corresponding author), Univ Amsterdam, Sect Software Engn, Dept Comp Sci, Kruislaan 403, NL-1098 SJ Amsterdam, Netherlands.
EM joosts@science.uva.nl; hans@cs.vu.nl
CR Abran A., 2004, SWEBOK: Guide to the software engineering Body of Knowledge
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], CONTENT ANAL GUIDEBO
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   DEMARCO T, 1982, YOURDON COMPUTING SE
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Hall T, 1997, IEEE SOFTWARE, V14, P55, DOI 10.1109/52.582975
   HETZEL B, 1990, P 1 INT C APPL SOFTW
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Krippendorff K., 1980, Content Analysis
   LAZARO M, 2006, P 2 INT WORKSH PHIL
   Niessink F., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P31, DOI 10.1109/METRIC.1999.809723
   PAULK MC, 1995, SEI SERIES SOFTWARE
   Rubin H., 1991, AM PROGRAM, V4, P9
   SCHALKEN JJP, 2006, SOFTW PROCESS IM JAN, P35
   SCHALKEN JJP, 2004, LNCS, V3281
   Shewhart W. A., 1939, STAT METHOD VIEWPOIN
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Wohlin C, 2001, SOFTWARE QUAL J, V9, P43, DOI 10.1023/A:1016673203332
NR 28
TC 9
Z9 11
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2008
VL 81
IS 5
BP 603
EP 615
DI 10.1016/j.jss.2007.07.041
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 292WD
UT WOS:000255295900002
DA 2024-07-18
ER

PT J
AU Sowe, SK
   Stamelos, I
   Angelis, L
AF Sowe, Sulayman K.
   Stamelos, Ioannis
   Angelis, Lefteris
TI Understanding knowledge sharing activities in free/open source software
   projects: An empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT Brazilian Symposia on Databases and Software Engineering
CY OCT, 2006
CL Florianopolis, BRAZIL
DE open source software projects; mailing lists; knowledge seekers;
   knowledge providers; knowledge sharing; open source communities;
   power-law distribution; self-organizing communities
ID COMMUNITIES
AB Free/Open Source Software (F/OSS) projects are people-oriented and knowledge intensive software development environments. Many researchers focused on mailing lists to study coding activities of software developers. How expert software developers interact with each other and with non-developers in the use of community products have received little attention. This paper discusses the altruistic sharing of knowledge between knowledge providers and knowledge seekers in the Developer and User mailing lists of the Debian project. We analyze the posting and replying activities of the participants by counting the number of email messages they posted to the lists and the number of replies they made to questions others posted. We found out that participants interact and share their knowledge a lot, their positing activity is fairly highly correlated with their replying activity, the characteristics of posting and replying activities are different for different kinds of lists, and the knowledge sharing activity of self-organizing Free/Open Source communities could best be explained in terms of what we called "Fractal Cubic Distribution" rather than the power-law distribution mostly reported in the literature. The paper also proposes what could be researched in knowledge sharing activities in F/OSS projects mailing list and for what purpose. The research findings add to ' our understanding of knowledge sharing activities in F/OSS projects. (C) 2007 Elsevier Inc. All rights reserved.
C1 [Sowe, Sulayman K.; Stamelos, Ioannis; Angelis, Lefteris] Aristotle Univ Thessaloniki, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Sowe, SK (corresponding author), Aristotle Univ Thessaloniki, Thessaloniki 54124, Greece.
EM sksowe@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020; Sowe, Dr. Sulayman K/C-1737-2015
OI Sowe, Dr. Sulayman K/0000-0002-8605-2009
CR ATREYI K, 2004, P 37 ANN HAW INT C S
   Barabási AL, 2003, SCI AM, V288, P60, DOI 10.1038/scientificamerican0503-60
   BARAHONA J, 2004, FREE OPEN SOURCE SOF, P27
   BARBASI A.-L., 2002, Linked: The New Science of Networks
   Conklin MS, 2006, INT FED INFO PROC, V203, P47
   DAVENPORT HT, 2000, WORKING KNOWLEDGE OR, P81
   Fitzgerald B, 2004, COMPUTER, V37, P92, DOI 10.1109/MC.2004.38
   German Daniel, 2003, P 3 WORKSH OP SOURC
   German DM, 2004, J SOFTW MAINT EVOL-R, V16, P367, DOI 10.1002/smr.301
   GHOSH RA, 2004, CLUSTERING DEPENDENC
   Gloor P.A., 2003, Proceedings of the twelfth international conference on Information and knowledge management, CIKM '03, P56, DOI DOI 10.1145/956863.956875
   HAHSLER H, 2005, P 38 HAW INT C SYST
   Healy K., 2003, The Ecology of Open-Source Software Development
   HERTEL G, 2003, MOTIVATION SOFTWARE
   Hunt F., 2002, Proceedings of Open Source Software Development Workshop, P122
   KIM E, 2006, INTRO OPEN SOURCE CO
   Koch S., 2004, Electronic Markets, V14, P77, DOI 10.1080/10196780410001675031
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   KOCH S, 2004, FREE OPEN SOURCE SOF, pR7
   Koh J, 2004, EXPERT SYST APPL, V26, P155, DOI 10.1016/S0957-4174(03)00116-7
   Krishnamurthy Sandeep., 2002, CAVE COMMUNITY EMPIR
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   LANZARA GF, 2001, EGOS C COP
   MANDELBROT B, 1967, SCIENCE, V156, P636, DOI 10.1126/science.156.3775.636
   Michlmayr M, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P93
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   *NETW WORK GROUP, 2822 NETW WORK GROUP
   Nichols D.M., 2003, USABILITY OPEN SOURC
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Raymond E.S., 2006, ASK QUESTIONS SMART
   RAYMOND ES, 1999, FIRSTMONDAY, V3
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Schofield A, 2006, INT FED INFO PROC, V203, P221
   Sowe S. K., 2004, IEEE LEARNING TECHNO, V6, P26
   SOWE SK, 2007, P 3 INT C OP SOURC S
   SOWE SK, 2005, MANAGING LEARNING VI, P290
   Sowe S, 2006, INFORM SOFTWARE TECH, V48, P1025, DOI 10.1016/j.infsof.2005.12.019
   Sowe SK, 2006, INT FED INFO PROC, V203, P261
   TIMOTHY L, 2005, EMPIR SOFTW ENG, V10, P311
   Valverde S, 2006, IEEE INTELL SYST, V21, P36, DOI 10.1109/MIS.2006.34
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   VONKROGH G, 2005, P 38 HAW INT C SYST
   Wu Jingwei, 2006, SEEKING EMPIRICAL EV
   XU J, 2005, IEEE P 38 HAW INT C, pA198
   Ye YW, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P472
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   ZACK HM, 1998, SLOAN MANAGE REV, V41, P125
   ZELDIN T, 1999, KNOWLEDGE MANAGEMENT, V2, P213
NR 48
TC 77
Z9 86
U1 0
U2 20
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2008
VL 81
IS 3
BP 431
EP 446
DI 10.1016/j.jss.2007.03.086
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 284LZ
UT WOS:000254709200010
DA 2024-07-18
ER

PT J
AU Cerri, D
   Fuggetta, A
AF Cerri, Davide
   Fuggetta, Alfonso
TI Open standards, open formats, and open source
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE open source; open standard; open format; software development process;
   software procurement; interoperability
AB The paper proposes some comments and reflections on the notion of "openness" and on how it relates to three important topics: open standards, open formats, and open source. Often, these terms are considered equivalent and/or mutually implicated: "open source is the only way to enforce and exploit open standards". This position is misleading, as it increases the confusion about this complex and extremely critical topic.
   The paper clarifies the basic terms and concepts. This is instrumental to suggest a number of actions and practices aiming at promoting and defending openness in modern ICT products and services. (C) 2007 Elsevier Inc. All rights reserved.
C1 CEFRIEL Politecn Milan, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Cerri, D (corresponding author), CEFRIEL Politecn Milan, Via Fucini 2, I-20133 Milan, Italy.
EM cerri@cefriel.it
CR [Anonymous], PDF REF
   [Anonymous], 2002, FUTURE IDEAS
   BRADNER S., 1996, The Internet standards process
   Fuggetta A, 2003, J SYST SOFTWARE, V66, P77, DOI 10.1016/S0164-1212(02)00065-1
   FUGGETTA A, 2004, OPEN SOURCES FREE SO
   *SUN MICR INC, 2004, JCP 2 PROC DOC FORM
NR 6
TC 19
Z9 22
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2007
VL 80
IS 11
BP 1930
EP 1937
DI 10.1016/j.jss.2007.01.048
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 224FU
UT WOS:000250433700012
DA 2024-07-18
ER

PT J
AU Li, W
   Shatnawi, R
AF Li, Wei
   Shatnawi, Raed
TI An empirical study of the bad smells and class error probability in the
   post-release object-oriented system evolution
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE object-oriented design; bad smells; software metrics; design evolution;
   open source software; empirical study
ID SOFTWARE; METRICS; VALIDATION; QUALITY
AB Bad smells are used as a means to identify problematic classes in object-oriented systems for refactoring. The belief that the bad smells are linked with problematic classes is largely based on previous metric research results. Although there is a plethora of empirical studies linking software metrics to errors and error proneness of classes in object-oriented systems, the link between the bad smells and class error probability in the evolution of object-oriented systems after the systems are released has not been explored. There has been no empirical evidence linking the bad smells with class error probability so far. This paper presents the results from an empirical study that investigated the relationship between the bad smells and class error probability in three error-severity levels in an industrial-strength open source system. Our research, which was conducted in the context of the post-release system evolution process, showed that some bad smells were positively associated with the class error probability in the three error-severity levels. This finding supports the use of bad smells as a systematic method to identify and refactor problematic classes in this specific context. (C) 2006 Elsevier Inc. All rights reserved.
C1 Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Huntsville
RP Shatnawi, R (corresponding author), Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
EM wli@cs.uah.edu; rshatnaw@cs.uah.edu
RI Shatnawi, Raed/M-5623-2019
OI Shatnawi, Raed/0000-0001-7777-1370
CR Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fischer M, 2004, J SOFTW MAINT EVOL-R, V16, P385, DOI 10.1002/smr.302
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Gronback R. C., 2003, Software Remodeling: Improving Design and Implementation Quality
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HOSMER D, 2000, WILEY SERIES PROABIL
   JOHANSON R, 2002, APPL MULTIVARIATE ST
   Marinescu R., 2002, THESIS POLITEHNICA U
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Szabo RM, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/ISSRE.1995.497663
   [No title captured]
NR 22
TC 148
Z9 164
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2007
VL 80
IS 7
BP 1120
EP 1128
DI 10.1016/j.jss.2006.10.018
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 181RM
UT WOS:000247453800018
DA 2024-07-18
ER

PT J
AU Yang, CN
   Chen, TS
   Yu, KH
   Wang, CC
AF Yang, Ching-Nung
   Chen, Tse-Shih
   Yu, Kun Hsuan
   Wang, Chung-Chun
TI Improvements of image sharing with steganography and authentication
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE image secret sharing scheme; steganography; authentication
AB Recently, Lin and Tsai proposed an image secret sharing scheme with steganography and authentication to prevent participants from the incidental or intentional provision of a false stego-image (an image containing the hidden secret image). However, dishonest participants can easily manipulate the stego-image for successful authentication but cannot recover the secret image, i.e., compromise the steganography. In this paper, we present a scheme to improve authentication ability that prevents dishonest participants from cheating. The proposed scheme also defines the arrangement of embedded bits to improve the quality of stego-image. Furthermore, by means of the Galois Field GF(2(8)), we improve the scheme to a lossless version without additional pixels. (C) 2006 Elsevier Inc. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien, Taiwan.
C3 National Dong Hwa University
RP Yang, CN (corresponding author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, 1,Sec 2,Da Hsueh Rd, Hualien, Taiwan.
EM cnyang@mail.ndhu.edu.tw
RI Yang, Ching-Nung/HKV-1639-2023; liu, jiajia/ISS-0316-2023
OI Yang, Ching-Nung/0000-0002-3881-7329
CR Chang CC, 1998, INFORM SCIENCES, V111, P335, DOI 10.1016/S0020-0255(98)10011-7
   Chang CC, 2003, 2003 INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY, VOL 1 AND 2, PROCEEDINGS, P196
   Feng JB, 2005, J SYST SOFTWARE, V76, P327, DOI 10.1016/j.jss.2004.07.250
   Lin CC, 2004, J SYST SOFTWARE, V73, P405, DOI 10.1016/S0164-1212(03)00239-5
   Lukac R, 2005, IEEE T CONSUM ELECTR, V51, P908, DOI 10.1109/TCE.2005.1510502
   Lukac R, 2005, PATTERN RECOGN, V38, P767, DOI 10.1016/j.patcog.2004.11.010
   Naor M, 1995, Advances in cryptographyEurocrypt'94. Vis lecture notes in computer science, V950, P1, DOI [DOI 10.1007/BFB0053419, 10.1007/BFb0053419, DOI 10.1007/978-1-4939-9484-7_1]
   QIONG L, 2005, INT C COMM CIRC SYST, V1, P84
   SHAMIR A, 1979, COMMUN ACM, V22, P612, DOI 10.1145/359168.359176
   Stallings W., 2003, CRYPTOGRAPHY NETWORK
   Thien CC, 2002, COMPUT GRAPH-UK, V26, P766
   Thien CC, 2003, IEEE T CIRC SYST VID, V13, P1161, DOI 10.1109/TCSVT.2003.819176
NR 12
TC 214
Z9 224
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2007
VL 80
IS 7
BP 1070
EP 1076
DI 10.1016/j.jss.2006.11.022
PG 7
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 181RM
UT WOS:000247453800014
DA 2024-07-18
ER

PT J
AU Costa, HR
   Barros, MDO
   Travassos, GH
AF Costa, Helio R.
   Barros, Marcio de O.
   Travassos, Guilherme H.
TI Evaluating software project portfolio risks
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software project management; software risk management; software
   engineering economics; empirical studies
AB As in any other business, software development organizations try to maximize their profits and minimize their risks. The risks represent uncertain events and conditions that may prevent enterprises from attaining their goals, turning risk management into a major concern, not only for project managers but also for executive officers involved with strategic objectives. In this sense, economical concepts can greatly support Software Engineers in the effort to better quantify the uncertainties of either a single project or even a project portfolio.
   In this paper, we present a technique for evaluating risk levels in software projects through analogies with economic concepts. This technique allows a manager to estimate the probability distribution of earnings and losses incurred by an organization in relation to its software project portfolio. This approach has been calibrated by data collected in an empirical study, which has been planned and accomplished to provide information about the relative importance of risk factors in software projects. A usage example of such an approach is presented. Finally, we introduce a case tool specially built to support the application of the proposed techniques. (C) 2006 Elsevier Inc. All rights reserved.
C1 UFRJ, COPPE, Syst Engn & Comp Sci Dept, BR-21945970 Rio De Janeiro, Brazil.
   Brazilian AF, CCA RJ, BR-21941510 Rio De Janeiro, Brazil.
   UNIRIOTEC, Appl Comp Sci Dept, BR-22290240 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro; Universidade Federal do Estado
   do Rio de Janeiro
RP Travassos, GH (corresponding author), UFRJ, COPPE, Syst Engn & Comp Sci Dept, Caixa Postal 68511, BR-21945970 Rio De Janeiro, Brazil.
EM ght@cos.ufrj.br
RI Sawhney, Davinder/A-5736-2010; Barros, Marcio/AAD-2848-2022; Travassos,
   Guilherme Horta/G-2842-2012
OI Barros, Marcio/0000-0001-8136-9624; Travassos, Guilherme
   Horta/0000-0002-4258-0424
CR ARAGAO CSL, 2003, RESENHA BM F
   BARBANSON R, 2004, INTRO CREDIT RISK LI
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Boehm B., 2000, 22 INT C SOFTW ENG J
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Carr Marvin J., 1993, Technical Report CMU/SEI-93-TR-6
   COSTA CABE, 1995, MULTICRITERIA ANAL
   Farias LD, 2003, J UNIVERS COMPUT SCI, V9, P670
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   Johnson R., 1977, Statistical concepts and methods
   Jones C., 1994, Assessment and control of software risks
   Karolak D.W., 1996, SOFTWARE ENG RISK MA
   Likert R., 1932, ARCH PSYCHOL, V22, P55
   MIRANDA E, 1999, ESTABLISHING SOFTWAR
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   Ross SA, 1996, FUNDAMENTALS CORPORA
   SANTOS G, 2005, SPRINGER LNAI, V3782
   Sullivan K.J., 1999, REAL OPTIONS BUSINES
   WALLACE L, 1999, THESIS GEORGIA STATE
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 20
TC 47
Z9 60
U1 2
U2 45
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2007
VL 80
IS 1
BP 16
EP 31
DI 10.1016/j.jss.2006.03.038
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 134CQ
UT WOS:000244060600002
DA 2024-07-18
ER

PT J
AU Han, WM
   Huang, SJ
AF Han, Wen-Ming
   Huang, Sun-Jen
TI An empirical analysis of risk components and performance on software
   projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE software project management; software risk management; risk exposure;
   project performance
ID UNCERTAINTY
AB Risk management and performance enhancement have always been the focus of software project management studies. The present paper shows the findings from an empirical study based on 115 software projects on analyzing the probability of occurrence and impact of the six dimensions comprising 27 software risks on project performance. The MANOVA analysis revealed that the probability of occurrence and composite impact have significant differences on six risk dimensions. Moreover, it indicated that no association between the probability of occurrence and composite impact among the six risk dimensions exists and hence, it is a crucial consideration for project managers when deciding the suitable risk management strategy. A pattern analysis of risks across high, medium, and low-performance software projects also showed that (1) the "requirement" risk dimension is the primary area among the six risk dimensions regardless of whether the project performance belongs to high, medium, or low; (2) for medium-performance software projects, project managers, aside from giving importance to "requirement risk", must also continually monitor and control the "planning and control" and the "project complexity" risks so that the project performance can be improved; and, (3) improper management of the "team", "requirement", and "planning and control" risks are the primary factors contributing to a low-performance project. (C) 2006 Elsevier Inc. All rights reserved.
C1 Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
C3 National Taiwan University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43,Sec 4,Keelung Rd, Taipei, Taiwan.
EM huang@cs.ntust.edu.tw
RI Sawhney, Davinder/A-5736-2010
CR Addison T, 2003, INT J INFORM MANAGE, V23, P25, DOI 10.1016/S0268-4012(02)00066-X
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   CARNEY DJ, 2003, CMUSEI2003TR023
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   CHRIS S, 2003, STATE IT PROJECT MAN
   Cule P, 2000, INFORM SYST MANAGE, V17, P65, DOI 10.1201/1078/43191.17.2.20000301/31229.8
   DeMarco T., 2003, WALTZING BEARS MANAG
   DILLMAN D, 2002, JOINT STAT M
   Hoffman T., 1999, Computerworld, V33, P24
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jiang J.J., 2000, PROJ MANAG J, V31, P19, DOI DOI 10.1177/875697280003100404
   KAROLAK DW, 1997, SOFTWARE ENG RISK MA
   Kliem RL, 2000, INFORM SYST MANAGE, V17, P71, DOI 10.1201/1078/43193.17.4.20000901/31256.12
   Kumar RL, 2002, INFORM MANAGE-AMSTER, V40, P63, DOI 10.1016/S0378-7206(01)00133-1
   Longstaff TA, 2000, COMPUTER, V33, P43, DOI 10.1109/2.889092
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   MCFARLAN FW, 1981, HARVARD BUS REV, V59, P142
   Mursu A, 2003, EUR J INFORM SYST, V12, P182, DOI 10.1057/palgrave.ejis.3000462
   Murthi S., 2002, IT Professional, V4, P9, DOI 10.1109/MITP.2002.1041172
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Rai A, 2000, INFORM MANAGE-AMSTER, V37, P335, DOI 10.1016/S0378-7206(00)00047-1
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   *SPSS INC, 2003, SPSS 12 0 US GUID TU
   *STAND GROUP INT I, 2004, 2004 3 Q RES REP
   Sumner M, 2000, J INFORM TECHNOL, V15, P317, DOI 10.1080/02683960010009079
   *US DEP DEF, 2003, RISK MAN GUID DOD AC
   Wallace L, 2004, DECISION SCI, V35, P289, DOI 10.1111/j.00117315.2004.02059.x
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   WILLIAMS R, 1999, CMUSEI99TR029
NR 32
TC 130
Z9 150
U1 1
U2 39
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2007
VL 80
IS 1
BP 42
EP 50
DI 10.1016/j.jss.2006.04.030
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 134CQ
UT WOS:000244060600004
DA 2024-07-18
ER

PT J
AU Hasan, Y
   Chang, JM
AF Hasan, Yusuf
   Chang, J. Morris
TI A tunable hybrid memory allocator
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Performance Analysis of Systems and
   Software (ISPASS)
CY MAR 06-08, 2003
CL AUSTIN, TX
SP IEEE Comp Soc
DE dynamic memory allocation; performance; tuning; optimization
ID FIRST-FIT
AB Dynamic memory management can make up to 60% of total program execution time. Object oriented languages such as C++ can use 20 times more memory than procedural languages like C. Bad memory management causes severe waste of memory, several times that actually needed, in programs. It can also cause degradation in performance. Many widely used allocators waste memory and/or CPU time. Since computer memory is an expensive and limited resource its efficient utilization is necessary. There cannot exist a memory allocator that will deliver best performance and least memory consumption for all programs and therefore easily tunable allocators are required. General purpose allocators that come with operating systems give less than optimal performance or memory consumption. An allocator with a few tunable parameters can be tailored to a program's needs for optimal performance and memory consumption. Our tunable hybrid allocator design shows 11-54% better performance and nearly equal memory consumption when compared to the well known Doug Lea allocator in seven benchmark programs. (C) 2005 Elsevier Inc. All rights reserved.
C1 IIT, Dept Comp Sci, Chicago, IL 60616 USA.
   Iowa State Univ, Dept Elect Engn, Ames, IA 50011 USA.
C3 Illinois Institute of Technology; Iowa State University
RP Hasan, Y (corresponding author), 4292 Pineapple Henry Way, Fairfax, VA 22033 USA.
EM hasayus@iit.edu; morris@iastate.edu
RI Chang, Jien/C-7672-2019
OI Chang, Jien/0000-0002-0660-7191
CR [Anonymous], P 1 INT S MEM MAN IS
   BARRETT DA, 1993, P ACM SIGPLAN C PROG, P187
   BAYS C, 1977, COMMUN ACM, V20, P191, DOI 10.1145/359436.359453
   BECK LL, 1982, COMMUN ACM, V25, P714, DOI 10.1145/358656.358671
   BERGER ED, 2001, COMPOSING HIGH PERFO
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   Chang JM, 2000, J SYST SOFTWARE, V54, P219, DOI 10.1016/S0164-1212(00)00039-X
   Chang JM, 2001, J SYST SOFTWARE, V57, P107, DOI 10.1016/S0164-1212(00)00122-9
   CHANG JM, 1996, IEEE T COMPUTERS MAR, P357
   DENNING PJ, 1970, COMPUT SURV, V2, P153
   FENTON JS, 1974, P IFIPS, P344
   Garey M. R., 1972, P 4 ANN ACM S THEOR
   HAGGANDER D, 1998, P ICPP 98 27 INT C P
   Hasan Y, 2003, INT SYM PERFORM ANAL, P214, DOI 10.1109/ISPASS.2003.1190248
   IYENGAR A, 2001, P 18 IEEE S MASS STO
   JOHNSTONE MS, 1998, MEMORY FRAGMENTATION, P26
   KNUTH DE, 1973, ART COMPUTER PROGRAM, V1, pCH2
   LEA D, 2002, MEMORY ALLOCATOR
   LEE WH, 2000, P 4 IEEE INT C HIGH
   Nilsen K. D., 1995, Proceedings. Real-Time Technology and Applications Symposium (Cat. No.95TH8055), P142, DOI 10.1109/RTTAS.1995.516211
   SEIDL ML, 1997, CUCS82697 U COL BOUL
   SHORE JE, 1975, COMMUN ACM, V18, P433, DOI 10.1145/360933.360949
   Stephenson C.J., 1983, SOSP 83, P30, DOI [10.1145/800217.806613, DOI 10.1145/800217.806613]
   WILSON PR, 1995, SPRINGER VERLAG LNCS
   ZORN B, 1992, CUCS60492 U COL BOUL
   ZORN B, 1992, CUCS60392 U COL BOUL
NR 26
TC 7
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2006
VL 79
IS 8
BP 1051
EP 1063
DI 10.1016/j.jss.2005.09.003
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 075MW
UT WOS:000239890100002
DA 2024-07-18
ER

PT J
AU Deng, YX
   Hwang, CJ
   Liu, HL
AF Deng, YX
   Hwang, CJ
   Liu, HL
TI An object-oriented cryptosystem based on two-level reconfigurable
   computing architecture
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE cryptosystem; cryptography; AES; RC4; reconfigurable computing; dynamic
   partial reconfiguration; reconfigurable architecture; FPGA
AB Cryptosystem is a system that needs a secure software and hardware environment. The performance of hardware has made great progress year by year. Hence, it is important to change the architecture of cryptosystem and complicate the computation of cryptography algorithm to catch the trend of modern hardware. If the system is built with software then it is not difficult to change the architecture and complicate the computation. However, in this way, the main disadvantage is poor performance. Using hardware to design a cryptosystem is a good choice because it is highly more secure and efficient than software, but it is a fixed system that cannot be changed. So, it is an important topic to implement a flexible, secure, and efficient cryptosystem which can coordinate with novel hardware. In this article, a new method to implement cryptosystems based on hardware design is proposed. It can fast implement a new cryptosystem because it separates system into two levels: one is system architecture and the other is system algorithm. To combine different architectures and algorithms can implement varied cryptosystems. Otherwise, to split architectures and algorithms will lead to improve the security of system. An application of data transfer between stream cipher and block cipher is also implemented in this system and successfully verified the flexibility, security, and efficiency of this proposed method. (c) 2005 Elsevier Inc. All rights reserved.
C1 Yuan Ze Univ, Dept Comp Engn & Sci, Chungli 320, Taiwan.
   Natl Def Univ, Chung Cheng Inst Technol, Dept Elect Engn, Taoyuan 33509, Taiwan.
C3 Yuan Ze University; National Defense University - Taiwan
RP Yuan Ze Univ, Dept Comp Engn & Sci, 135 Yuan Tung Rd, Chungli 320, Taiwan.
EM david.tys@gmail.com
CR [Anonymous], PORTF REC CRYPT PRIM
   Bondalapati K, 2002, P IEEE, V90, P1201, DOI 10.1109/JPROC.2002.801446
   Chen TS, 1998, IEEE T IMAGE PROCESS, V7, P1485, DOI 10.1109/83.718488
   Compton K, 2002, ACM COMPUT SURV, V34, P171, DOI 10.1145/508352.508353
   DENG YX, 2005, IEEE INT C SYST ENG
   DENG YX, UNPUB J SYSTEMS ARCH
   DENG YX, 2005, IEEE P 8 INT S SIGN
   Galanis MD, 2004, ICECS 2004: 11TH IEEE INTERNATIONAL CONFERENCE ON ELECTRONICS, CIRCUITS AND SYSTEMS, P571
   HARN L, 1993, IEEE J SEL AREA COMM, V11, P757, DOI 10.1109/49.223877
   IKRAM N, 2001, MIL COMM C MILCOM 20, P59
   Lian SG, 2004, IEEE INFOR VIS, P217, DOI 10.1109/IV.2004.1320147
   MERMOUD G, 2004, MODULE BASED DYNAMIC
   *NESSIE CONS, 2003, NESSIE SEC REP V2 0
   *NESSIE CONS, 2003, PERF OPT IMPL NESSIE
   Pakstas A, 1996, COMPUTER, V29, P78, DOI 10.1109/2.485857
   Rhee M.Y., 2003, Internet Security: Cryptographic Principles, Algorithms and Protocols
   ROUVROY G, 2003, FPGA 2003 FIELD PROG
   ROUVROY G, 2003, 17 INT PAR DISTR PRO, P185
   SCHAFRE G, 2004, SECURITY FIXED WIREL
   Schneier B., 1996, Applied Cryptography: Protocols, Algorithms, and Source Code in C
   Standaert F. X, 2003, FIELD PROGR LOG ARR, P216
   STANDAERT FX, 2002, 3 NESSIE WORKSH SIEM
   Thorvinger J., 2004, THESIS LUND I TECHNO
   Tsoi KH, 2002, ANN IEEE SYM FIELD P, P13, DOI 10.1109/FPGA.2002.1106657
   *XIL INC, 2004, OPB HWICAP V 1 1
   *XIL INC, 2004, EDK OS LIB REF GUID
   *XIL INC, 2004, 2 FLOWS PART REC MOD
   *XIL INC, 2003, MICR PROC REF GUID V
   ZHENG YL, 1993, IEEE J SEL AREA COMM, V11, P715, DOI 10.1109/49.223871
NR 29
TC 0
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2006
VL 79
IS 4
BP 466
EP 479
DI 10.1016/j.jss.2005.06.034
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 033GI
UT WOS:000236834600003
DA 2024-07-18
ER

PT J
AU Li, CQ
   Li, SJ
   Lou, DC
   Zhang, D
AF Li, CQ
   Li, SJ
   Lou, DC
   Zhang, D
TI On the security of the Yen-Guo's domino signal encryption algorithm
   (DSEA)
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE DSEA; dominos; cryptanalysis; encryption; ciphertext-only attack;
   known-plaintext attack; chosen-plaintext attack
ID CRYPTANALYSIS
AB Recently, a new domino signal encryption algorithm (DSEA) was proposed for digital signal transmission, especially for digital images and videos. This paper analyzes the security of DSEA, and points out the following weaknesses: (1) its security against the brute-force attack was overestimated; (2) it is not sufficiently secure against ciphertext-only attacks, and only one ciphertext is enough to get some information about the plaintext and to break the value of a sub-key; (3) it is insecure against known/chosen-plaintext attacks, in the sense that the secret key can be recovered from a number of continuous bytes of only one known/chosen plaintext and the corresponding ciphertext. Experimental results are given to show the performance of the proposed attacks, and some countermeasures are discussed to improve DSEA. (C) 2005 Elsevier Inc. All rights reserved.
C1 City Univ Hong Kong, Dept Elect Engn, 83 Tat Chee Ave, Kowloon, Hong Kong, Peoples R China.
   Zhejiang Univ, Dept Math, Hangzhou 310027, Peoples R China.
   Natl Def Univ, Dept Elect Engn, Chung Cheng Inst Technol, Taoyuan, Taiwan.
   Zhejiang Univ, Coll Comp Sci, Hangzhou 310027, Peoples R China.
C3 City University of Hong Kong; Zhejiang University; National Defense
   University - Taiwan; Zhejiang University
RP City Univ Hong Kong, Dept Elect Engn, 83 Tat Chee Ave, Kowloon, Hong Kong, Peoples R China.
EM zjulcq@hotmail.com; hooklee@mail.com; dclou@ccit.edu.tw;
   zhangdan@etang.com
RI Li, Shujun/A-9032-2008; Li, Chengqing/B-9388-2008
OI Li, Shujun/0000-0001-5628-7328; Lou, Der-Chyuan/0000-0001-6697-7648; Li,
   Chengqing/0000-0002-5385-7644
CR Devaney RL., 1989, An introduction to chaotic dynamical systems, V2
   Hao BL, 1993, Starting with parabolas-an introduction to chaotic dynamics
   Li CQ, 2005, IEEE INT SYMP CIRC S, P880, DOI 10.1109/ISCAS.2005.1464729
   Li CQ, 2004, LECT NOTES COMPUT SC, V3333, P418
   Li CQ, 2005, EURASIP J APPL SIG P, V2005, P1277, DOI 10.1155/ASP.2005.1277
   LI S, 2003, THESIS XIAN JIAOTONG
   Li SJ, 2008, J SYST SOFTWARE, V81, P1130, DOI 10.1016/j.jss.2007.07.037
   Li SJ, 2002, 2002 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P925
   Li SJ, 2002, 2002 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL II, PROCEEDINGS, P708
   Li SJ, 2005, INTERNET COMMUN SER, P133
   Schneier B., 1996, Applied Cryptography: Protocols, Algorithms, and Source Code in C
   YEN JC, 2003, J CHINESE I ELECT EN, V10, P69
NR 12
TC 14
Z9 14
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2006
VL 79
IS 2
BP 253
EP 258
DI 10.1016/j.jss.2005.04.021
PG 6
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 019EM
UT WOS:000235818400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wong, WE
   Sugeta, T
   Qi, Y
   Maldonado, JC
AF Wong, WE
   Sugeta, T
   Qi, Y
   Maldonado, JC
TI Smart debugging software architectural design in SDL
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 27th Annual International Computer Software and Applications Conference
CY NOV 03-06, 2003
CL DALLAS, TX
SP IEEE Comp Soc
DE architectural design; SDL; testing; debugging; execution slice; fault
   detection; SmartD(SDL)
AB Statistical data show that it is much cheaper to fix software bugs at the early design stage than the late stage of the development process where the final system has already been implemented and integrated together. The use of slicing and execution histories as an aid in software debuggine is well established for programming languages like C and C++; however, it is rarely applied in the field of software specification for designs. We propose a solution by applying the technology at source code level to debugging software designs represented in a high-level specification and description language such as SDL. More specifically, we extend execution slice-based heuristics from source code-based debugging to the software design specification level. Suspicious locations in an SDL specification are prioritized based on their likelihood of containing faults. Locations with a higher priority should be examined first rather than those with a lower priority as the former are more suspicious than the latter, i.e., more likely to contain the faults. A debugging tool, SmartD(SDL), with user-friendly interfaces was developed to support our method. An experiment is reported to demonstrate the feasibility of using our method to effectively debug an architectural design. (C) 2004 Elsevier Inc. All rights reserved.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
   Univ Sao Paulo, Dept Comp Sci, Sao Carlos, SP, Brazil.
C3 University of Texas System; University of Texas Dallas; Universidade de
   Sao Paulo
RP Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
EM ewong@utdallas.edu
RI Maldonado, José Carlos/E-9290-2011
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Agrawal H., 1990, P ACM SIGPLAN 90 C P
   Belina F., 1991, SDL APPL PROTOCOL SP
   CANCELLIERI A, 1994, IDSRT94052
   DeMillo RA, 1997, P INT COMP SOFTW APP, P515, DOI 10.1109/CMPSAC.1997.625061
   Ellsberger J., 1997, SDL: formal object-oriented language for communicating systems
   *ISO TC97 SC21, 1990, 10167 ISO TR TC97SC2
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1988, IEEE T SOFTWARE ENG, V14, P1253, DOI 10.1109/32.6169
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   LYE JR, 1987, P 2 INT C COMP APPL, P877
   *TEL AB, 2002, TEL TAU 4 3
   Turner K.J., 1993, Using Formal Description Techniques: An Introduction to Estelle, Lotos, V1st
   Ural H, 2000, COMPUT COMMUN, V23, P609, DOI 10.1016/S0140-3664(99)00227-3
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong WE, 2003, COMPUT NETW, V42, P359, DOI 10.1016/S1389-1286(03)00248-2
NR 21
TC 15
Z9 16
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2005
VL 76
IS 1
BP 15
EP 28
DI 10.1016/j.jss.2004.06.026
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 890TS
UT WOS:000226534300003
DA 2024-07-18
ER

PT J
AU Raghunathan, S
   Mikler, AR
   Cozzolino, C
AF Raghunathan, S
   Mikler, AR
   Cozzolino, C
TI Secure agent computation: X.509 Proxy Certificates in a multi-lingual
   agent framework
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE mobile agents; agent security; Proxy Certificates; authentication;
   delegation; grids; agent infrastructure; DADS
AB Mobile agent technology presents an attractive alternative to the client-server paradigm for several network and real-time applications. However, for most applications, the lack of a viable agent security model has limited the adoption of the agent paradigm. This paper describes how the security infrastructure for computational Grids using X.509 Proxy Certificates can be extended to facilitate security for mobile agents. Proxy Certificates serve as credentials for Grid applications, and their primary purpose is the temporary delegation of authority. We are exploiting the similarities between Grid applications and mobile agent applications, and motivate the use of Proxy Certificates as credentials for mobile agents. Further, we propose extensions for Proxy Certificates to facilitate the characteristics of mobile agent applications, and present mechanisms that achieve agent-to-host authentication, restriction of agent privileges, and secure delegation of authority during spawning of new agents. (C) 2004 Elsevier Inc. All rights reserved.
C1 Univ N Texas, Dept Comp Sci, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Univ N Texas, Dept Comp Sci, 225 Bryan 4, Denton, TX 76203 USA.
EM shubi4@hotmail.com; mikler@cs.unt.edu; cozzolin@cs.unt.edu
OI Mikler, Armin/0000-0002-5253-144X
CR Algesheimer J, 2001, P IEEE S SECUR PRIV, P2, DOI 10.1109/SECPRI.2001.924283
   [Anonymous], 2744 RFC
   [Anonymous], 2459 RFC
   [Anonymous], 1999, GRID BLUEPRINT NEW C
   BAUMANN J, 1997, MOL CONCEPTS MOBILE
   Butler R, 2000, COMPUTER, V33, P60, DOI 10.1109/2.889094
   Cachin C, 2000, LECT NOTES COMPUT SC, V1853, P512
   Farmer W.M., 1996, P 19 NAT INF SYST SE, V2, P591
   FARMER WM, 1996, P 4 EUR S RES COMP S, P118
   Foster I., 1998, 5th ACM Conference on Computer and Communications Security, P83, DOI 10.1145/288090.288111
   Foster I, 1997, INT J SUPERCOMPUT AP, V11, P115, DOI 10.1177/109434209701100205
   FOSTER I, 2001, LECT NOTES COMPUTER, V2150
   Freier AlanO., 1996, SSL PROTOCOL VERSION
   GRAY RS, 1996, AGENT TEL FLEXIBLE S
   HARRISON CG, 1995, MOBILE AGENTS GOOD I
   Jansen W., 2000, Nist special publication 800-19-mobile agent security
   Karnik NM, 1998, IEEE CONCURR, V6, P52, DOI 10.1109/4434.708256
   LAUVSET KJ, 2000, TOS KERNEL DISTRIBUT
   Necula G.C., 1997, 24 ANN S PRINCIPLES, P106
   TUECKE S, 2001, INTERNET X509 PUBLIC
   Tuecke S., 2003, Internet X.509 Public Key Infrastruture Proxy Certificate Profile
NR 21
TC 6
Z9 8
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB 15
PY 2005
VL 75
IS 1-2
BP 125
EP 137
DI 10.1016/j.jss.2004.01.008
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 878SV
UT WOS:000225668000012
DA 2024-07-18
ER

PT J
AU Campo, MR
   Pace, JAD
   Trilnik, FU
AF Campo, MR
   Pace, JAD
   Trilnik, FU
TI "Computer, please, tell me what I have to do...": an approach to
   agent-aided application composition
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID FRAMEWORKS
AB The process of starting to use any reuse technology is usually one of the most frustrating factors for novice users. For this reason, tools able to reduce the learning curve are valuable to augment the potential of the technology to rapidly build new applications. In this work, we present Hint, an environment for assisting the instantiation of Java applications based on software agents technology. Hint is built around a software agent that has the knowledge about how to use a reusable asset and, using this knowledge, is able to propose a sequence of programming activities that should be carried out in order to implement a new application satisfying the functionality the user wants to implement. The most relevant contribution of this work is the use of planning techniques to guide the execution of instantiation activities for a given technology. (C) 2003 Elsevier Inc. All rights reserved.
C1 UNICEN Univ, Fac Sci, ISISTAN Res Inst, Tandil, Buenos Aires, Argentina.
   Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP UNICEN Univ, Fac Sci, ISISTAN Res Inst, Campus Univ,Paraje Arroyo Seco,B7001BBO, Tandil, Buenos Aires, Argentina.
EM mcampo@exa.unicen.edu.ar; adiaz@exa.unicen.edu.ar;
   ftrilnik@exa.unicen.edu.ar
OI Campo, Marcelo/0000-0002-3555-835X
CR [Anonymous], 1995, Design patterns for object-oriented software development
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bradshaw J.M., 1997, SOFTWARE AGENTS
   Campo M, 2002, SOFTWARE PRACT EXPER, V32, P837, DOI 10.1002/spe.462
   CONSTANTINIDES C, 2001, ECOOP 2001
   CONSTANTINIDES CA, 2000, ACM COMPUT SURV, V32
   DEMEYER S, 2000, COMPUTING SURVEY MAR
   FAYAD M, 2000, BUILDING APPL FRAMEW
   Fontoura M, 2000, LECT NOTES COMPUT SC, V1850, P63
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GANGOPADHYAY D, 1995, SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/CASE.1995.465325
   HECKERMAN D, 1995, COMMUN ACM, V38, P27, DOI 10.1145/203330.203336
   HELM R, 1990, SIGPLAN NOTICES, V25, P169, DOI 10.1145/97946.97967
   JOHNSON RE, 1992, SIGPLAN NOTICES, V27, P63
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kolodner J.L., 1993, Case-Based Reasoning
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   LAJOIE R, 1994, P 62 C ACFAS CAN
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   *OBJ MOD GROUP, 2001, UN MOD LANG SPEC VER
   Ortigosa A, 2000, INT J SOFTW ENG KNOW, V10, P433, DOI 10.1142/S0218194000000237
   ORTIGOSA A, 2000, P C OBJ OR PROGR SYS, P253
   PACE AD, 2002, LNCS SPRINGER SPECIA
   SCHAPPERT A, 1995, P SSR 95 ACM SIGSOFT
   WELD D, 1998, TR981001 U WASH DEP
   WELD DS, 1994, AI MAG, V15, P27
NR 26
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2005
VL 74
IS 1
BP 55
EP 64
DI 10.1016/j.jss.2003.05.003
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 865MV
UT WOS:000224708100007
OA Green Published
DA 2024-07-18
ER

PT J
AU Kim, N
   Moon, S
   Sohn, Y
AF Kim, N
   Moon, S
   Sohn, Y
TI Secure one snapshot protocol for concurrency control in real-time stock
   trading systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE concurrency control; covert channels; secure real-time database systems;
   view consistency
AB To prevent any data from being accessed by unauthorized users, it is necessary for stock trading systems (STS) to use multilevel secure database management systems in controlling concurrent executions among multiple transactions. In STS, analytical transactions as well as mission critical transactions are executed concurrently, which makes it difficult to use traditional secure real-time transaction management schemes for STS environment. In this paper, we propose the read-down relationship-based secure one snapshot protocol (SOS) that is devised for the secure real-time transaction management in STS. By maintaining an additional one snapshot as well as working database, SOS blocks covert-channels without causing the priority inversion phenomenon. We introduce the process of SOS protocol with some examples, present the proofs of devised protocol, and then evaluate the performance gains by means of simulation method. (C) 2003 Elsevier Inc. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Grad Sch Management, Dept Engn Management, Database Lab, Seoul 130012, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Kim, N (corresponding author), Korea Adv Inst Sci & Technol, Grad Sch Management, Dept Engn Management, Database Lab, 207-43 Cheongryangri Dong, Seoul 130012, South Korea.
EM ngk@kaist.ac.kr; scmoon@kgsm.kaist.ac.kr; syl@skuniv.ac.kr
RI Moon, Songchun/C-1905-2011
CR AGRAWAL R, 1987, ACM T DATABASE SYST, V12, P609, DOI 10.1145/32204.32220
   Ahmed QN, 2002, J SYST SOFTWARE, V61, P15, DOI 10.1016/S0164-1212(01)00111-X
   [Anonymous], MTR2997 MITR CORP
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   George B, 2000, DISTRIB PARALLEL DAT, V8, P41, DOI 10.1023/A:1008783216944
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   GREENBERG I, 1993, AO12 ELIN SRI INT
   KAO B, 1995, OVERVIEW REAL TIME D
   Lam KW, 1998, REAL TIM SYST SYMP P, P50, DOI 10.1109/REAL.1998.739730
   LAM KY, 1998, P IEEE WORKSH DEP RE, P13
   LAMPSON BW, 1973, COMMUN ACM, V16, P613, DOI 10.1145/362375.362389
   MUKKAMALA R, 1995, P 9 WG 11 3 WORK C D, P215
   Priebe T., 2000, Proceedings of Third ACM International Workshop on Data Warehousing and OLAP (DOLAP 2000), November 10, 2000, P33
   PURIMETLA B, 1995, REAL TIME DATABASES
   RAMAMRITHAM K, 1992, IN J DISTRIBUTED PAR
   Sohn Y, 2000, IEICE T INF SYST, VE83D, P1128
   [No title captured]
NR 17
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV-DEC
PY 2004
VL 73
IS 3
BP 441
EP 454
DI 10.1016/j.jss.2003.08.236
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 857ZF
UT WOS:000224158900008
DA 2024-07-18
ER

PT J
AU Lo, CTD
   Srisa-An, W
   Chang, JM
AF Lo, CTD
   Srisa-An, W
   Chang, JM
TI The design and analysis of a quantitative simulator for dynamic memory
   management
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE dynamic memory management; garbage collection; Java virtual machine;
   tools; object-oriented programming; DMM simulator
ID PERFORMANCE
AB The use of object-oriented programming in software development allows software systems to be more robust and more maintainable. At the same time, the development time and expense are also reduced. To achieve these benefits, object-oriented applications use dynamic memory management (DMM) to create generic objects that can be reused. Consequently, these applications are often highly dynamic memory intensive. For the last three decades, several DMM schemes have been proposed. Such schemes include first fit, best fit, segregated fit, and buddy systems. Because the performance (e.g., speed, memory utilization, etc.) of each scheme differs, it becomes a difficult choice in selecting the most suitable approach for an application and what parameters (e.g., block size, etc.) should be adopted.
   In this paper, a DMM simulation tool and its usage are presented. This tool receives DMM traces of C/C++ or Java programs and performs simulation according to the scheme (first fit, best fit, buddy system, and segregated fit) defined by the user. Techniques required to obtain memory traces are presented. At the end of each simulation run, a variety of performance metrics are reported to the users. By using this tool, software engineers can evaluate system performance and decide which algorithm is the most suitable. Moreover, hardware engineers can perform a system analysis before hardware (e.g., modified buddy system, first fit, etc.) is fabricated. (C) 2003 Elsevier Inc. All rights reserved.
C1 Univ Texas, Dept Comp Sci, San Antonio, TX 78249 USA.
   Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68583 USA.
   Iowa State Univ, Dept Elect & Comp Engn, Ames, IA 50011 USA.
C3 University of Texas System; University of Texas Health Science Center at
   San Antonio; University of Nebraska System; University of Nebraska
   Lincoln; Iowa State University
RP Univ Texas, Dept Comp Sci, 6900 N Loop 1604 W, San Antonio, TX 78249 USA.
EM danlo@ieee.org; witty@cse.uni.edu; morris@iastate.edu
RI Srisa-an, Witawas/S-6107-2019; Chang, Jien/C-7672-2019
OI Srisa-an, Witawas/0000-0003-0021-5696; Chang, Jien/0000-0002-0660-7191
CR [Anonymous], P 1 INT S MEM MAN IS
   APPLEGATE AD, 1994, DR DOBBS J, V19, P52
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   Chang CP, 1999, MOL BIOL CELL, V10, p345A
   Chang J. M., 1993, Proceedings 1993 IEEE International Conference on Computer Design: VLSI in Computers and Processors (Cat. No.93CH3335-7), P132, DOI 10.1109/ICCD.1993.393393
   CHANG JM, 1996, IEEE T COMPUTERS MAR, P357
   Chung CM, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P693, DOI 10.1109/ICPADS.1998.741157
   Dieckmann S., 1999, P EUR C OBJ OR PROGR
   *GNU, 2002, GNU FREE SOFTW DIR P
   HASTINGS R, 1992, P WINT USENIX C JAN
   Jhonstone M. S., 1998, INT S MEM MAN OCT 19, P26
   Jin CM, 2000, IEEE INT INTERC TECH, P99, DOI 10.1109/IITC.2000.854294
   Johnstone Mark Stuart, 1997, THESIS U TEXAS AUSTI THESIS U TEXAS AUSTI
   LEA D, 1996, MEMORY ALLOCATOR COM
   LO CD, 1998, 1998 P INT COMP S DE, P96
   Lo CTD, 2000, PARALLEL AND DISTRIBUTED COMPUTING SYSTEMS, P374
   Lo CTD, 2001, IEE P-COMPUT DIG T, V148, P167, DOI 10.1049/ip-cdt:20010597
   Lo CTD, 2001, J SYST SOFTWARE, V58, P235, DOI 10.1016/S0164-1212(01)00041-3
   PRESSMAN RS, 1997, SOFTWARE ENG PRACTIT, P614
   *SPECJVM, 1998, SPECJVM98 DOC REL 1
   Srisa-an W, 1999, INTEGRATION, V28, P173, DOI 10.1016/S0167-9260(99)00016-4
   *U UT DEP COMP SCI, 2002, MEM DEB UT LIB MEMD
   WANG YC, 1998, 5 INT WORKSH REAL TI
   WILSON P, 1995, P 1995 INT WORKSH ME
   2002, JAVASOFT
NR 25
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2004
VL 72
IS 3
BP 443
EP 453
DI 10.1016/S0164-1212(03)00095-5
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 832UB
UT WOS:000222291600012
DA 2024-07-18
ER

PT J
AU Iosif, R
   Sisto, R
AF Iosif, R
   Sisto, R
TI Temporal logic properties of Java objects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 13th International Conference on Software Engineering and Knowledge
   Engineering (SEKE 2001)
CY JUN 12-15, 2001
CL BUENOS AIRES, ARGENTINA
DE source code verification; linear temporal logic; object orientation;
   Java
AB Applying finite-state verification techniques to software systems looks attractive because they are capable of detecting very subtle defects in the logic design of these systems. Nevertheless, the integration of existing formal verification tools within programming environments is not yet easy, mainly because of the semantic gap between widely used programming languages and the languages used to describe system requirements. In this paper, we propose a formal requirement specification notation based on linear temporal logic, with regard to object oriented program elements, such as classes and interfaces. The specification is inherently object oriented and is meant for the verification of concurrent and distributed software systems. (C) 2003 Elsevier Inc. All rights reserved.
C1 Politecn Torino, Dipartimento Automat, I-10129 Turin, Italy.
C3 Polytechnic University of Turin
RP Iosif, R (corresponding author), Politecn Torino, Dipartimento Automat, Corso Duca Abruzzi 24, I-10129 Turin, Italy.
EM iosif@athena.polito.it; sisto@polito.it
RI Sisto, Riccardo/I-8803-2012
OI Sisto, Riccardo/0000-0002-3142-2383
CR [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], P 22 INT C SOFTW ENG
   CLINE MP, 1990, P S OBJ OR PROGR EMP
   CORBETT J, 2000, P 7 SPIN INT WORKSH
   Demartini C, 1999, SOFTWARE PRACT EXPER, V29, P577, DOI 10.1002/(SICI)1097-024X(199906)29:7<577::AID-SPE246>3.0.CO;2-V
   DENKER G, 1997, LECT NOTES COMPUTER, V1349, P170
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Havelund K, 1999, LECT NOTES COMPUT SC, V1680, P216
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   IOSIF R, 2000, FORMAL EXECUTION MOD
   YOUNG M, 1994, TR1288P SERC
NR 11
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC 15
PY 2003
VL 68
IS 3
BP 243
EP 251
DI 10.1016/S0164-1212(03)00062-1
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 735ZE
UT WOS:000186144100007
DA 2024-07-18
ER

PT J
AU Glass, RL
   Chen, TY
AF Glass, RL
   Chen, TY
TI An assessment of systems and software engineering scholars and
   institutions (1998-2002)
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE top scholars; top institutions; research publications; systems and
   software engineering
AB This paper presents the findings of a five-year study of the top scholars and institutions in the Systems and Software Engineering field, as measured by the quantity of papers published in the journals of the field. The top scholar is Khaled El Emam of the Canadian National Research Council, and the top institution is Carnegie Mellon University and its Software Engineering Institute.
   This paper is part of an ongoing study, conducted annually, that identifies the top 15 scholars and institutions in the most recent five-year period. (C) 2003 Elsevier Inc. All rights reserved.
C1 Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
   Comp Trends, Bloomington, IN 47401 USA.
C3 Swinburne University of Technology
RP Chen, TY (corresponding author), Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
OI Chen, Tsong/0000-0003-3578-0994
CR BARRETT PM, 1997, WALL STREET J    JAN
   DENNIS AR, 2002, COMMUNICATION   0325
   GEIST R, 1996, COMMUNICATIONS A DEC
   GLASS RL, 1994, J SYSTEMS SOFTWA OCT
   GLASS RL, IN PRESS COMMUNICATI
   GLASS RL, 1992, J SYSTEMS SOFTWA NOV
   GLASS RL, 2002, INFORMATION SOFT JUN
   Gourman Jack., 1993, The Gourman report: A rating of graduate and professional programs in American and international universities
   IM KS, 1998, DECISION LINE    DEC
   RAMESH V, IN PRESS J SYSTEMS S
   SEGARS AH, 1992, DATABASE         FAL
   SHIM JP, 1991, SOCIOECONOMIC PLANNI, V25
   TRIESCHMANN JS, 2000, ACAD MANAGEMENT J, V43
   VESSEY I, 2002, J MANAGEMENT INF FAL
   1997, BUSINESS WEEK   0623
NR 15
TC 10
Z9 10
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT 15
PY 2003
VL 68
IS 1
BP 77
EP 84
DI 10.1016/S0164-1212(03)00232-2
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 729UH
UT WOS:000185792600006
DA 2024-07-18
ER

PT J
AU Mahaney, RC
   Lederer, AL
AF Mahaney, RC
   Lederer, AL
TI Information systems project management: an agency theory interpretation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE project management; information systems; agency theory; monitoring;
   incentives
ID SOFTWARE-DEVELOPMENT; COMPENSATION; COMMITMENT; PERFORMANCE; FAILURE;
   SUCCESS; MATRIX; PAY
AB The failure rate of information systems development projects is high. Agency theory offers a potential explanation for it. Structured interviews with 12 IS project managers about their experiences managing IS development projects show how it can be used to understand IS development project outcomes. Managers can use the results of the interviews to improve their own IS project management. Researchers can use them to examine agency theory with a larger number of project managers. (C) 2002 Elsevier Inc. All rights reserved.
C1 No Kentucky Univ, Coll Business, Dept Informat Syst, Highland Hts, KY 41099 USA.
   Univ Kentucky, Gatton Coll Business & Econ, Decis Sci & Informat Syst, Lexington, KY 40506 USA.
C3 Northern Kentucky University; University of Kentucky
RP Mahaney, RC (corresponding author), No Kentucky Univ, Coll Business, Dept Informat Syst, 451 BEP Ctr,1 Nunn Dr, Highland Hts, KY 41099 USA.
CR [Anonymous], MCLEAN HOSP J
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   BAIMAN S, 1990, ACCOUNT ORG SOC, V15, P341, DOI 10.1016/0361-3682(90)90023-N
   Baiman S., 1982, J ACCOUNT LIT, V1, P154
   Balkin DB, 2000, ACAD MANAGE J, V43, P1118, DOI 10.5465/1556340
   BAUGH SG, 1994, IEEE T ENG MANAGE, V41, P108, DOI 10.1109/17.293377
   BERGEN M, 1992, J MARKETING, V56, P1, DOI 10.2307/1252293
   Cafasso R., 1994, Computerworld, V28, P20
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DEUTSCH MS, 1991, IEEE T ENG MANAGE, V38, P365, DOI 10.1109/17.97444
   Dunn S.C., 2001, Engineering Management Journal, V13, P3
   EISENHARDT KM, 1988, ACAD MANAGE J, V31, P488, DOI 10.5465/256457
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   FORD RC, 1992, IEEE T ENG MANAGE, V39, P312, DOI 10.1109/17.165412
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   HARRELL A, 1994, ACCOUNT ORG SOC, V19, P569, DOI 10.1016/0361-3682(94)90024-8
   Jiang J.J., 2000, PROJ MANAG J, V31, P19, DOI DOI 10.1177/875697280003100404
   Johnson J., 1999, SOFTWARE MAG, V19, P30
   Kirby SL, 1998, J APPL PSYCHOL, V83, P206, DOI 10.1037/0021-9010.83.2.206
   LaPlante A., 1995, COMPUTERWORLD, V29, P81
   Laslo Z, 2001, IEEE T ENG MANAGE, V48, P144, DOI 10.1109/17.922474
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Little D, 1999, J COMPUT INFORM SYST, V40, P7
   MIGHT RJ, 1985, IEEE T ENG MANAGE, V32, P71, DOI 10.1109/TEM.1985.6447584
   PARKS JM, 1995, ACAD MANAGE J, V38, P821, DOI 10.5465/256747
   Pinto J.K., 1988, PROJECT MANAGEMENT H, V2nd, P479, DOI DOI 10.1002/9780470172353.CH20
   PINTO JK, 1990, IEEE T ENG MANAGE, V37, P269, DOI 10.1109/17.62322
   Shenhar AJ, 1998, IEEE T ENG MANAGE, V45, P33, DOI 10.1109/17.658659
   Stroh LK, 1996, ACAD MANAGE J, V39, P751, DOI 10.5465/256663
   Tosi HL, 1997, ACAD MANAGE J, V40, P584, DOI 10.5465/257054
   1998, BUSINESS WEEK, P8
   1996, MIS PROJECT, V138, P2
NR 33
TC 56
Z9 62
U1 2
U2 33
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT 15
PY 2003
VL 68
IS 1
BP 1
EP 9
DI 10.1016/S0164-1212(02)00132-2
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 729UH
UT WOS:000185792600001
DA 2024-07-18
ER

PT J
AU Yun, HY
   Ha, DS
   Hwang, BY
   Ryu, KH
AF Yun, HY
   Ha, DS
   Hwang, BY
   Ryu, KH
TI Mining association rules on significant rare data using relative support
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE data mining; potential information; association rules; significant rare
   data
AB Recently, data mining, a technique to analyze the stored data in large databases to discover potential information and knowledge, has been a popular topic in database research. In this paper, we study the techniques discovering the association rules which are one of these data mining techniques. And we propose a technique discovering the association rules for significant rare data that appear infrequently in the database but are highly associated with specific data. Furthermore, considering these significant rare data, we evaluate the performance of the proposed algorithm by comparing it with other existing algorithms for discovering the association rules. (C) 2002 Elsevier Inc. All rights reserved.
C1 Chungbuk Natl Univ, Sch Elect & Comp Engn, Cheongju 361763, South Korea.
   Chonnam Natl Univ, Dept Comp Sci, Kwangju, South Korea.
   LG Elect Inc, Seoul, South Korea.
C3 Chungbuk National University; Chonnam National University; LG
   Electronics
RP Chungbuk Natl Univ, Sch Elect & Comp Engn, Cheongju 361763, South Korea.
EM martinayun@naver.com; dsha@lge.com; bhhwang@chonnam.ac.kr
RI Ryu, Keun Ho/AAM-5875-2020
OI Ryu, Keun Ho/0000-0003-0394-9054
CR ADRIANS P, 1996, DATA MINING
   AGRAWAL R, 1993, P ACM SIGMOD C
   AGRAWAL R, 1994, P VLDB C
   AGRAWAL R, 1995, P C DAT ENG
   Berry MichaelJ., 1997, DATA MINING TECHNIQU
   CHEN X, 1998, P 9 INT C DAT EXP SY
   CHEN X, 1998, P INT WORKSH ISS APP
   Garofalakis MN, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P223
   HOUTSMA M, 1993, SET ORIENTED MINING
   KIM DH, 2000, J SYSTEMS SOFTWARE, V55
   KOPERSKI K, 1995, P SSD 95
   LIU B, 1999, P ACM SIGKDD KDD 99
   OZDEN B, 1998, P ICDE
   PARK J, 1998, J KOREA INFORMATION, V16
   RAMASWAMY S, 1998, P VLDB C
   RAMASWAMY S, 2000, P ACM SIGMOD C
   RODDICK JF, 1999, ARC99007 U S AUSTR
   SIMOUDIS E, 1996, IEEE EXPERT INTELLIG, V11
   YE S, 1998, P INT C SYST MAN CYB
NR 19
TC 84
Z9 87
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP 15
PY 2003
VL 67
IS 3
BP 181
EP 191
DI 10.1016/S0164-1212(02)00128-0
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 708DT
UT WOS:000184552400004
DA 2024-07-18
ER

PT J
AU Schmidt, DC
   O'Ryan, C
AF Schmidt, DC
   O'Ryan, C
TI Patterns and performance of distributed real-time and embedded
   publisher/subscriber architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE real-time CORBA event systems; object-oriented middleware;
   publisher/subscriber architectural patterns
AB This paper makes four contributions to the design and evaluation of publisher/subscriber architectures for distributed real-time and embedded (DRE) applications. First, it illustrates how a flexible publisher/subscriber architecture can be implemented using standard CORBA middleware. Second, it shows how to extend the standard CORBA publisher/subscriber architecture so it is suitable for DRE applications that require low latency and jitter, periodic rate-based event processing, and event filtering and correlation. Third, it explains how to address key performance-related design challenges faced when implementing a publisher/ subscriber architecture suitable for DRE applications. Finally, the paper presents benchmarks that empirically demonstrate the predictability, latency, and utilization of a widely used real-time CORBA publisher/subscriber architecture. Our results demonstrate that it is possible to strike an effective balance between architectural flexibility and real-time quality of service for important classes of DRE applications. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Univ Calif Irvine, Dept Elect & Comp Engn, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Schmidt, DC (corresponding author), Univ Calif Irvine, Dept Elect & Comp Engn, 305 Engn Tower,ZOT 2625, Irvine, CA 92697 USA.
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   DOERR BS, 1999, P 11 ANN SOFTW TECHN
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GILL CD, 2001, REAL TIME MIDDLEWARE, V20
   GOKHALE A, 1999, J SELECTED AREAS COM, V17
   GOKHALE A, 1998, T COMPUTING, V47
   GOPALAKRISHNAN R, 1996, SIGMETRICS C PHIL PA
   HARRISON TH, 1997, P OOPSLA 97, P184
   JOHNSON R, 1997, COMMUNICATIONS ACM, V40
   KARR DA, 2001, P 3 INT S DISTR OBJ
   Khanna Sandeep., 1992, P USENIX WINTER C, P375
   LUNDBERG L, 2000, PERFORMANCE ENG STAT
   *OBJ MAN GROUP, 2001, COMM OBJ REQ BROK AR
   *OBJ MAN GROUP, 1998, CORBASERVICES COMM O
   ORYAN C, 2002, INT J COMPUTER SYSTE, V17
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   SHARP DC, 1998, P 10 ANN SOFTW TECHN
   WANG N, 2001, IEEE DISTRIBUTED SYS, V2
NR 19
TC 15
Z9 16
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN 15
PY 2003
VL 66
IS 3
BP 213
EP 223
DI 10.1016/S0164-1212(02)00078-X
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 690UL
UT WOS:000183568400004
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Pompella, E
   Stefanucci, S
AF De Lucia, A
   Pompella, E
   Stefanucci, S
TI Assessing the maintenance processes of a software organization: an
   empirical analysis of a large industrial project
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE massive software maintenance; statistical process control; cost
   estimation models
ID WORKFLOW MANAGEMENT; ACCURACY
AB The use of statistical process control methods can determine the process capability of sustaining stable levels of variability, so that processes will yield predictable results. This enables to prepare achievable plans, meet cost estimates and scheduling commitments, and deliver required product functionality and quality with acceptable and reasonable reliability. We present initial results of applying statistical analysis methods to the maintenance processes of a software organization rated at the CMM level 3 that is currently planning the assessment to move to the CMM level 4. In particular, we present results from an empirical study conducted on the massive adaptive maintenance process of the organization. We analyzed the correlation between the maintenance size and productivity metrics. The resulting models allow to estimate the costs of a project conducted according to the adopted maintenance processes. Model performances on future observations were assessed by means of a cross validation which guarantees a nearly unbiased estimate of the prediction error. Data about the single phases of the process were also available, thus allowing to analyze the distribution of the effort Among the phases and the causes of variations. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Univ Sannio, RCOST, Dept Engn, I-82100 Benevento, Italy.
   EDS Italia Software SpA, I-81100 Caserta, Italy.
C3 University of Sannio
RP Univ Sannio, RCOST, Dept Engn, Palazzo Bosco Lucarelli,Piazza Roma, I-82100 Benevento, Italy.
EM delucia@unisannio.it; eugenio.pompella@eds.com; stefanucci@unisannio.it
RI De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425
CR Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Aversano L, 2001, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSM.2001.972757
   Aversano L, 2001, PROG COMPREHEN, P199, DOI 10.1109/WPC.2001.921731
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BELADY LA, 1972, P C STAT COMP PERF E, P503
   BIANCHI A, 2001, P 7 IEEE WORKSH EMP, P65
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm BW., 1981, Software Engineering Economics
   Bradley E., 1983, AM STAT, V37, P836
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Brodie M., 1995, MIGRATING LEGACY SYS
   Caivano D, 2001, PROC IEEE INT CONF S, P209, DOI 10.1109/ICSM.2001.972734
   De Lucia A, 2001, PROC IEEE INT CONF S, P642, DOI 10.1109/ICSM.2001.972781
   DELUCIA A, 2001, P 7 IEEE WORKSH EMP, P97
   DIPENTA M, 2001, P INT C SOFTW MAINT, P510
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   FLORAC WA, 1999, SEI S SOFTW, P1
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Hertz J., 1991, LECT NOTES SANTA FE
   *IEEE, 1998, 1219 IEEE
   Interesse M., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P155, DOI 10.1109/ICSM.1999.792599
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JONES C, 1999, MASS UPDATES SOFTWAR
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   JOSHI M, 1995, EURO-DAC '95 - EUROPEAN DESIGN AUTOMATION CONFERENCE WITH EURO-VHDL, PROCEEDINGS, P476, DOI 10.1109/EURDAC.1995.527447
   Klosch R. R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P161, DOI 10.1109/ICSM.1999.792600
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lindvall M., 1998, Software Process Improvement and Practice, V4, P3, DOI 10.1002/(SICI)1099-1670(199803)4:1<3::AID-SPIP90>3.0.CO;2-R
   Lynd EC, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P206, DOI 10.1109/ICSM.1997.624247
   Mattsson M., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P326, DOI 10.1109/ICSM.1999.792630
   Maurer F, 2000, IEEE INTERNET COMPUT, V4, P65, DOI 10.1109/4236.845392
   MEYERS RH, 1986, CLASSICAL MODERN REG
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Niessink F, 1998, PROC IEEE INT CONF S, P76, DOI 10.1109/ICSM.1998.738495
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   PAULK MC, 1991, CMUSEI91TR24
   PAULK MC, 2000, CMUSEI2000SR003
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   Pressman R.S., 1997, Software Engineering: a Practitioner's Approach
   Ramil JF, 2000, PROC IEEE INT CONF S, P163, DOI 10.1109/ICSM.2000.883036
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Stuart A., 1991, KENDALLS ADV THEORY, V2
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WELLMAN F, 1992, SOFTWARE COSTING
   WHEELER DJ, 1991, UNDERSTANDING STAT P
NR 52
TC 8
Z9 20
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB 15
PY 2003
VL 65
IS 2
BP 87
EP 103
DI 10.1016/S0164-1212(02)00051-1
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 693MC
UT WOS:000183720500001
DA 2024-07-18
ER

PT J
AU Le Traon, Y
   Ouabdesselam, F
   Robach, C
   Baudry, B
AF Le Traon, Y
   Ouabdesselam, F
   Robach, C
   Baudry, B
TI From diagnosis to diagnosability: axiomatization, measurement and
   application
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
ID DESIGN; CONTRACT; SLICES
AB Classical views on testing and their associated testing models are not dealing with the question of fault repairing but only focus on fault detection. Diagnosis consists of determining the nature of a detected fault, of locating it and hopefully repairing it. Correlatively, the only standardized quality factors implied in the detection/repair aspects of software engineering are testability and maintainability: those quality factors are misleading since they do not pinpoint this question of the location/repairing effort, that can be identified under the concept of diagnosability. This paper is thus concerned with diagnosability, its definition and the axiomatization of its expected behavior. The paper aims at:
   introducing and analysing diagnosability as a significant and complementary dimension of software testability,
   producing a high-level definition and axiomatization of a diagnosability measurement generic enough to be adapted to various software paradigms: this property-based approach serves as a measurement "specification", independent on the application context and thus reusable,
   detailing a diagnosability measure dedicated to data-flow software and especially test strategies impact on diagnosis and testing effort (from measure implementation to case study),
   illustrating the reuse of the high-level axiomatization to the specific question of measuring the impact of assertions (or contracts for a designed by contract OO system) on diagnosis effort and preciseness.
   Throughout the paper, the concepts are illustrated on a case study provided by an industrial partner. At last, the reusability of the axiomatization is illustrated by proposing a measure of the impact of assertions (or contracts in a design by contract approach) on global software diagnosability. Main lessons concern both the diagnosability significance as a quality factor and the interest of an axiomatization-based methodology for building trustable software measurement. (C) 2002 Elsevier Science Inc. All rights reserved.
C1 Univ Rennes 1, IRISA, F-35042 Rennes, France.
   IMAG, LSR, F-38402 St Martin Dheres, France.
   ESISAR, LCIS, F-26902 Valence 9, France.
C3 Universite de Rennes; Communaute Universite Grenoble Alpes; Institut
   National Polytechnique de Grenoble
RP Le Traon, Y (corresponding author), Univ Rennes 1, IRISA, Campus Beaulieu, F-35042 Rennes, France.
EM yves.le_traon@irisa.ft; farid.ouabdesselam@imag.fr;
   chantal.robach@esisar.inpg.fr; benoit.baudry@irisa.fr
RI LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   AlHayek G, 1997, IEEE DES TEST COMPUT, V14, P64, DOI 10.1109/54.573369
   BAUDRY B, 2000, P 1 S MUT TEST, P69
   BAUDRY B, 2001, 7 INT SOFTW METR S M
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Caspi P., 1987, 14 S PRINC PROGR LAN
   FENTON NE, 1991, SOFTWARE METRICS RIG, P337
   Jezequel Jean-Marc., 1999, Design Patterns with Contracts
   Jezequel JM, 1997, COMPUTER, V30, P129, DOI 10.1109/2.562936
   KAHLIL M, 1998, P IEEE INT S SOFTW R
   KAMKAR M, 1995, J SYST SOFTWARE, V31, P197, DOI 10.1016/0164-1212(94)00099-9
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   Le Traon Y, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P162, DOI 10.1109/ISSRE.2000.885869
   LeTraon Y, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P91, DOI 10.1109/METRIC.1997.637169
   LETRAON Y, 1997, THESIS I NATL POLYTE
   LETRAON Y, 1998, P IEEE INT S SOFTW R
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   OFFUTT AJ, 1996, SOFTWARE PRACTICE EX, V26
   OUABDESSELAM F, 1996, ACM SIGSOFT 4 S FDN, P127
   ROBACH C, 1989, IEEE T IND ELECTRON, V36, P286, DOI 10.1109/41.19080
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P6, DOI 10.1109/TSE.1977.229899
   SHEPPERD M, 1993, DERIVATION VALIDATIO, P167
   VOAS JM, 1995, 2 INT WORKSH AUT ALG
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 25
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN 15
PY 2003
VL 65
IS 1
BP 31
EP 50
DI 10.1016/S0164-1212(02)00026-2
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 659ZM
UT WOS:000181809400003
DA 2024-07-18
ER

PT J
AU Zhang, F
   Peng, MM
   Shen, YY
   Wu, Q
AF Zhang, Fan
   Peng, Manman
   Shen, Yuanyuan
   Wu, Qiang
TI Hierarchical features extraction and data reorganization for code search
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE AI in SE; Code search; Transformer-based architecture
AB According to a natural language query, code search aims to retrieve relevant code snippets from a codebase. Recent works mainly rely on transformer-based pretraining models to measure the matching degree of queries and codes. Compared with works that rely on earlier deep learning methods, such as LSTM and Attention, they can significantly improve the performance of code search tasks. However, the different layers of the transformer-based models have different features that are intuitive and efficient for understanding the semantics of codes and queries but are rarely considered. Moreover, existing methods do not consider further increasing the amount of training data during training to improve the model's performance.Toward this end, we propose a novel method called HFEDR, which utilizes the hierarchical features of transformer-based models and reorganizes original training data during a training phase. Specifically, we first extract high-level and low-level features of queries and codes from the higher and lower layers of GraphCodeBERT, respectively, achieving multi-view and comprehensive semantic representation. After that, we organize the original training data into hierarchical-uncorrelated feature pairs and then reorganize them into hierarchical-correlated feature pairs, achieving training the model with more data. Finally, we update the model's parameters using a contrastive training method. We conduct extensive experiments on CodeSearchNet, demonstrating the effectiveness and rationality of our proposed approach.
C1 [Zhang, Fan; Peng, Manman; Shen, Yuanyuan; Wu, Qiang] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Peoples R China.
C3 Hunan University
RP Peng, MM (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha 410082, Peoples R China.
EM fanzhang@hnu.edu.cn; pengmanman@hnu.edu.cn; shenyuanyuan@hnu.edu.cn;
   wuqiang@hnu.edu.cn
RI bai, yu/KHU-2608-2024; Zhang, Lu/KHE-5879-2024; li, qing/KHU-6871-2024;
   zhang, yuanyuan/KHV-4459-2024; Chen, Yang/KHD-8849-2024
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Bui NDQ, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P511, DOI 10.1145/3404835.3462840
   Chai YT, 2024, Arxiv, DOI arXiv:2201.00150
   Chen T, 2020, PR MACH LEARN RES, V119
   Chen XL, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P9620, DOI 10.1109/ICCV48922.2021.00950
   Cheng Y., 2022, arXiv
   Conneau A, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P1699
   Craswell N., 2009, Encyclopedia of Database Systems, P1703
   Devlin J., 2018, BERT PRE TRAINING DE
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu HZ, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111591
   Huang J., 2021, arXiv
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jianlin S, 2022, CoSENT:A more efficient sentence vector scheme than sentence-BERT
   Kingma D. P., 2014, arXiv
   Liu C, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3480027
   Liu S, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P11895, DOI 10.1109/ICCV48922.2021.01170
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lu JS, 2016, ADV NEUR IN, V29
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Niu CG, 2022, PROC INT CONF SOFTW, P2006, DOI 10.1145/3510003.3510096
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Shi ZJ, 2023, INT C PROGRAM COMPRE, P280, DOI 10.1109/ICPC58990.2023.00043
   Su J., 2021, PREPRINT, DOI DOI 10.48550/ARXIV.2103.15316
   Sun WS, 2022, PROC INT CONF SOFTW, P388, DOI 10.1145/3510003.3510140
   Tenney I, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4593
   Vaswani A, 2017, ADV NEUR IN, V30
   Vig J, 2019, PROCEEDINGS OF THE 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, (ACL 2019), P37
   Vilalta R, 2002, ARTIF INTELL REV, V18, P77, DOI 10.1023/A:1019956318069
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P342, DOI 10.1109/SANER50967.2021.00039
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
NR 41
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2024
VL 208
AR 111896
DI 10.1016/j.jss.2023.111896
EA NOV 2023
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AV9N8
UT WOS:001121345700001
DA 2024-07-18
ER

PT J
AU Choetkiertikul, M
   Puengmongkolchaikit, A
   Chandra, P
   Ragkhitwetsagul, C
   Maipradit, R
   Hata, H
   Sunetnanta, T
   Matsumoto, K
AF Choetkiertikul, Morakot
   Puengmongkolchaikit, Arada
   Chandra, Pandaree
   Ragkhitwetsagul, Chaiyong
   Maipradit, Rungroj
   Hata, Hideaki
   Sunetnanta, Thanwadee
   Matsumoto, Kenichi
TI Studying the association between Gitcoin's issues and resolving outcomes
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bounty platform; Issue-addressing outcome; Open source software
   development
AB The development of open-source software (OSS) projects usually have been driven through collaborations among contributors and strongly relies on volunteering. Thus, allocating software practitioners (e.g., contributors) to a particular task is non-trivial and draws attention away from the development. Therefore, a number of bug bounty platforms have emerged to address this problem through bounty rewards. Especially, Gitcoin, a new bounty platform, introduces a bounty reward mechanism that allows individual issue owners (backers) to define a reward value using cryptocurrencies rather than using crowdfunding mechanisms. Although a number of studies have investigated the phenomenon on bounty platforms, those rely on different bounty reward systems. Our study thus investigates the association between the Gitcoin bounties and their outcomes (i.e., success and non-success). We empirically study over 4,000 issues with Gitcoin bounties using statistical analysis and machine learning techniques. We also conducted a comparative study with the Bountysource platform to gain insights into the usage of both platforms. Our study highlights the importance of factors such as the length of the project, issue description, type of bounty issue, and the bounty value, which are found to be highly correlated with the outcome of bounty issues. These findings can provide useful guidance to practitioners. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.(c) 2023 Elsevier Inc. All rights reserved.
C1 [Choetkiertikul, Morakot; Puengmongkolchaikit, Arada; Chandra, Pandaree; Ragkhitwetsagul, Chaiyong; Sunetnanta, Thanwadee] Mahidol Univ, Fac Informat & Commun Technol, Salaya, Thailand.
   [Maipradit, Rungroj; Matsumoto, Kenichi] Nara Inst Sci & Technol, Nara, Japan.
   [Hata, Hideaki] Shinshu Univ, Matsumoto, Japan.
C3 Mahidol University; Nara Institute of Science & Technology; Shinshu
   University
RP Ragkhitwetsagul, C (corresponding author), Mahidol Univ, Fac Informat & Commun Technol, Salaya, Thailand.
EM morakot.cho@mahidol.ac.th; arada.pue@student.mahidol.ac.th;
   pandaree.cha@student.mahidol.ac.th; chaiyong.rag@mahidol.ac.th;
   maipradit.rungroj.mm6@is.naist.jp; hata@shinshu-u.ac.jp;
   thanwadee.sun@mahidol.ac.th; matumoto@is.naist.jp
RI Hata, Hideaki/N-7103-2019; Ragkhitwetsagul, Chaiyong/JOZ-6943-2023;
   Maipradit, Rungroj/JXL-2842-2024
OI Hata, Hideaki/0000-0003-0708-5222; Maipradit,
   Rungroj/0000-0003-4286-9807
FU Office of the Permanent Secretary, Ministry of Higher Educa-tion,
   Science, Research and Innovation, Thailand [RGNS 64-164]
FX This work (Grant No. RGNS 64-164) was financially supported by Office of
   the Permanent Secretary, Ministry of Higher Educa-tion, Science,
   Research and Innovation, Thailand.
CR Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atiq A., 2014, P 35 INT C INF SYST, P1
   Bonett DG, 2020, BRIT J MATH STAT PSY, V73, P113, DOI 10.1111/bmsp.12189
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen WL, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1411, DOI 10.1145/3366423.3380215
   Choi N, 2010, IEEE SOFTWARE, V27, P73, DOI 10.1109/MS.2010.26
   Coelho J, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P114, DOI 10.1145/3195836.3195848
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Grobys K, 2021, J EMPIR FINANC, V64, P207, DOI 10.1016/j.jempfin.2021.09.002
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hata H, 2017, INT SYMP EMP SOFTWAR, P223, DOI 10.1109/ESEM.2017.34
   Hua Lan, 2019, 2019 IEEE/ACIS 18th International Conference on Computer and Information Science (ICIS). Proceedings, P315
   Kanda T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P577, DOI 10.1109/SANER.2017.7884685
   Krishnamurthy S, 2014, RES POLICY, V43, P632, DOI 10.1016/j.respol.2013.10.007
   Laaber C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09996-y
   Li ZF, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P165, DOI [10.1109/BLOC.2019.8751469, 10.1109/bloc.2019.8751469]
   Liu D, 2010, TENCON IEEE REGION, P736, DOI 10.1109/TENCON.2010.5686608
   Luna D, 2019, 14TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2019), DOI 10.1145/3339252.3341495
   Nakasai K, 2019, IEEE SOFTWARE, V36, P22, DOI 10.1109/MS.2018.2874568
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Titov V., 2021, J. Open Innov.: Technol. Mark. Complex., V7, DOI DOI 10.3390/JOITMC7010102
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Ye YM, 2013, PATTERN RECOGN, V46, P769, DOI 10.1016/j.patcog.2012.09.005
   Zhao M., 2014, Proceedings of the 2014 ACM workshop on security information workers, P51, DOI [DOI 10.1145/2663887.2663906, 10.1145/2663887.2663906]
   Zhou JY, 2021, IEEE T SOFTWARE ENG, V47, P2919, DOI 10.1109/TSE.2020.2974469
   Zhou JY, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09979-z
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
NR 28
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2023
VL 206
AR 111835
DI 10.1016/j.jss.2023.111835
EA SEP 2023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T7DS7
UT WOS:001079556300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rosa, G
   Pascarella, L
   Scalabrino, S
   Tufano, R
   Bavota, G
   Lanza, MCL
   Oliveto, R
AF Rosa, Giovanni
   Pascarella, Luca
   Scalabrino, Simone
   Tufano, Rosalia
   Bavota, Gabriele
   Lanza, Michele
   Oliveto, Rocco
TI A comprehensive evaluation of SZZ Variants through a developer-informed
   oracle
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE SZZ; Defect prediction; Empirical study
ID SOFTWARE; IMPACT
AB Automatically linking bug-fixing changes to bug-inducing ones (BICs) is one of the key data-extraction steps behind several empirical studies in software engineering. The SZZ algorithm is the de facto standard to achieve this goal, with several improvements proposed over time. Evaluating the per-formance of SZZ implementations is, however, far from trivial. In previous works, researchers (i) manually assessed whether the BICs identified by the SZZ implementation were correct or not, or (ii) defined oracles in which they manually determined BICs from bug-fixing commits. However, ideally, the original developers should be involved in defining a labeled dataset to evaluate SZZ implementations. We propose a methodology to define a "developer-informed"oracle for evaluating SZZ implementations, without requiring a manual inspection from the original developers. We use Natural Language Processing (NLP) to identify bug-fixing commits in which developers explicitly reference the commit(s) that introduced the fixed bug. We use the built oracle to extensively evaluate existing SZZ variants defined in the literature. We also introduce and evaluate two new variants aimed at addressing two weaknesses we observed in state-of-the-art implementations (i.e., processing added lines and handling of revert commits). (c) 2023 Elsevier Inc. All rights reserved.
C1 [Rosa, Giovanni; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, STAKE Lab, Campobasso, Italy.
   [Pascarella, Luca; Tufano, Rosalia; Bavota, Gabriele; Lanza, Michele] USI Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
C3 University of Molise; Universita della Svizzera Italiana
RP Rosa, G (corresponding author), Univ Molise, STAKE Lab, Campobasso, Italy.
EM giovanni.rosa@unimol.it; luca.pascarella@usi.ch;
   simone.scalabrino@unimol.it; rosalia.tufano@usi.ch;
   gabriele.bavota@usi.ch; michele.lanza@usi.ch; rocco.oliveto@unimol.it
RI Lanza, Michele/JNQ-9470-2023; Rosa, Giovanni/JRY-3363-2023
OI Lanza, Michele/0000-0003-4391-0197; Rosa, Giovanni/0000-0002-5241-1608;
   Tufano, Rosalia/0009-0009-7017-3066
FU European Research Council (ERC) under the European Union [851720]; Swiss
   National Science foundation (SNF); JSPS, Japan (Project "SENSOR");
   European Research Council (ERC) [851720] Funding Source: European
   Research Council (ERC)
FX This project has received funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No. 851720). We are grateful for the support
   by the Swiss National Science foundation (SNF) and JSPS, Japan (Project
   "SENSOR").
CR Aman H., 2019, QUASOQ APSEC, P3
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bao LF, 2022, PROC INT CONF SOFTW, P2352, DOI 10.1145/3510003.3510113
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bernardi ML, 2018, J SYST SOFTWARE, V140, P111, DOI 10.1016/j.jss.2018.02.065
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Bludau P, 2022, EUR CON SFTWR MTNCE, P1, DOI 10.1109/SANER53432.2022.00012
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Bowes D, 2017, IEEE INT SYMP SOFTW, P44, DOI 10.1109/ISSREW.2017.11
   Çaglayan B, 2016, J SYST SOFTWARE, V118, P288, DOI 10.1016/j.jss.2016.03.055
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Chen BY, 2019, EMPIR SOFTW ENG, V24, P2285, DOI 10.1007/s10664-019-09690-0
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Eyolfson J, 2014, EMPIR SOFTW ENG, V19, P1009, DOI 10.1007/s10664-013-9245-0
   Fan Yuanrui, 2019, IEEE Transactions on Software Engineering
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Grigorik I, 2012, GITHUB ARCH
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   KENNEDY K, 1978, COMPUT LANG, V3, P163, DOI 10.1016/0096-0551(78)90009-7
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kovalenko V, 2018, IEEE INT CONF AUTOM, P202, DOI 10.1145/3238147.3238169
   Lenarduzzi V., 2020, IN PRESS
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Marinescu P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P93
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Pace J., 2007, TOOL WHICH COMPARES
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Petrulio F, 2022, Arxiv, DOI [arXiv:2209.03311, 10.48550/ARXIV.2209.03311, DOI 10.48550/ARXIV.2209.03311]
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Rezk C., 2021, GHOST COMMIT PROBLEM
   Rodnguez-Prez G., 2020, EMPIR SOFTW ENG, P1
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosa G., 2023, REPLICATION PACKAGE, DOI [10.6084/m9.figshare.19586500, DOI 10.6084/M9.FIGSHARE.19586500]
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   Sahal E., 2018, P 12 ACM IEEE INT S, P1
   Senchenko A, 2022, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST53961.2022.00043
   Servant F., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P452, DOI 10.1109/ASE.2011.6100097
   Servant F., 2012, INT S FDN SOFTWARE E
   Servant F, 2017, PROC INT CONF SOFTW, P746, DOI 10.1109/ICSE.2017.74
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tu H., 2020, IEEE Transactions on Software Engineering
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, INT WORKING C MINING, P19
   Yan M., 2020, IEEE Transactions on Software Engineering
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhang W, 2020, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME46990.2020.00082
NR 74
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2023
VL 202
AR 111729
DI 10.1016/j.jss.2023.111729
EA MAY 2023
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J4RS3
UT WOS:001009506700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, ZQ
   Chen, X
   Lee, SUJ
AF Wu, Zhiqiang
   Chen, Xin
   Lee, Scott Uk-Jin
TI A systematic literature review on Android-specific smells
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Android; Code smell; Systematic literature review
ID CODE-SMELLS; ENERGY-CONSUMPTION; IMPACT; APPS
AB Context: Code smells are well-known concepts in Object-Oriented (OO) programs as symptoms that negatively impact software quality and cause long-term issues. However, the domain-specific smells in Android have not yet been investigated well. Android smells often refer to the misuse of mobile SDK and causes of performance, accessibility, and efficiency issues that end-users can perceive.Objective: This study aims to provide a clear overview of state-of-the-art techniques for addressing Android-specific code smells to understand existing methods and open challenges, which help the community understand the significance of Android smells and the current status of research. Methods: We conducted a Systematic Literature Review of 4,820 distinct papers published until 2021, following a consolidated methodology applied in software engineering. 35 primary studies were selected.Results: The known Android smells cannot be treated equally in the proposed approaches, as they mainly focus on detecting performance-related smells. The proposed approaches capture various features to detect smell instances using different analysis techniques in Android applications. In addition, the Android community continuously identifies new types of smells to improve apps' quality.Conclusion: The research community still encounters several challenges. Thus, this paper outlines various directions for the necessary investigation as future work.(c) 2023 Elsevier Inc. All rights reserved.
C1 [Wu, Zhiqiang; Chen, Xin; Lee, Scott Uk-Jin] Hanyang Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Hanyang University
RP Lee, SUJ (corresponding author), Hanyang Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM wzq0515@hanyang.ac.kr; xxtx0122@hanyang.ac.kr; scottlee@hanyang.ac.kr
RI Lee, Scott Uk-Jin/G-4359-2017; Wu, Zhiqiang/AAS-9788-2021
OI Lee, Scott Uk-Jin/0000-0002-8457-3097; Wu, Zhiqiang/0000-0002-1292-3553
FU Institute of Information & communications Technology Planning &
   Evaluation (IITP) - Korea government (MSIT) [RS-2022-00155885]
FX This work was supported by Institute of Information & communications
   Technology Planning & Evaluation (IITP) grant funded by the Korea
   government (MSIT) (No. RS-2022-00155885, Artificial Intelligence
   Convergence Innovation Human Resources Development (Hanyang University
   ERICA)).
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Android, 2017, ANDR LINT CHECKS
   Android, 2012, ACC AR YOU SERV YOUR
   [Anonymous], 2022, MOBILE APP DEV MARKE
   [Anonymous], 2022, MARK SHAR KOT TOP AP
   Anwar H, 2020, PROC INT CONF SOFTW, P170, DOI 10.1145/3377812.3381390
   Anwar H, 2019, EUROMICRO CONF PROC, P82, DOI 10.1109/SEAA.2019.00021
   Ardito L, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106374
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Boutaib S, 2021, EXPERT SYST APPL, V166, DOI 10.1016/j.eswa.2020.114076
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Campbell G., 2013, SONARQUBE IN ACTION
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Carvalho SG, 2019, EMPIR SOFTW ENG, V24, P3546, DOI 10.1007/s10664-019-09768-9
   Chan-Jong-Chu Kwame, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P190, DOI 10.1145/3383219.3383239
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chester Piper, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P217, DOI 10.1109/MOBILESoft.2017.23
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Couto M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P217, DOI [10.1109/SANER48275.2020.9054858, 10.1109/saner48275.2020.9054858]
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P205, DOI 10.1109/MOBILESoft.2017.21
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L., 2019, J SOFTW ENG RES DEV, DOI DOI 10.5753/JSERD.2019.17
   Das T, 2020, EMPIR SOFTW ENG, V25, P2748, DOI 10.1007/s10664-019-09798-3
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   De Stefano M., 2020, P INT C ADV VIS INT, P1
   Dennis Colton, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P219, DOI 10.1109/MOBILESoft.2017.24
   Desnos A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5394, DOI 10.1109/HICSS.2012.114
   Di Nucci D, 2017, PROC IEEE ACM INT C, P3, DOI 10.1109/ICSE-C.2017.18
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Fatima I., 2020, QUASOQ APSEC, P71
   Flauzino M, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P23, DOI 10.1145/3267183.3267186
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gadient P, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P13, DOI [10.48350/154500, 10.1109/SANER48275.2020.9054850]
   Gadient P, 2019, EMPIR SOFTW ENG, V24, P3046, DOI 10.1007/s10664-018-9673-y
   Gao Y, 2019, PROC IEEE INT CONF S, P145, DOI 10.1109/ICSME.2019.00025
   Gattal Abderraouf, 2021, SAC '21: Proceedings of the 36th Annual ACM Symposium on Applied Computing, P1580, DOI 10.1145/3412841.3442129
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Ghari S., 2019, P 29 ANN INT C COMPU, P34
   Gupta A., 2019, INT C RECENT DEV SCI, P64
   Habchi Sarra, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P445, DOI 10.1109/MSR.2019.00071
   Habchi S., 2019, THESIS U LILLE
   Habchi S, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110964
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Hamdi O, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106699
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Hecht G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P766, DOI 10.1109/ICSE.2015.243
   Iannone E, 2020, INT C PROGRAM COMPRE, P451, DOI 10.1145/3387904.3389298
   Ignatov A., 2018, P EUR C COMP VIS, V11133
   Jiang D., 2014, INT J INNOV COMPUT I, V10
   Kaur S, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110394
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Khan MU, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10182211
   Khan MU, 2021, SUSTAIN COMPUT-INFOR, V31, DOI 10.1016/j.suscom.2021.100589
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kitchenham B., 2007, 2007001 EBSE
   Kuutila M, 2021, IEEE SOFTWARE, V38, P32, DOI 10.1109/MS.2020.3020784
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lam P, 2011, CET US COMP INF WORK
   Le Goaër O, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P85, DOI 10.1145/3417113.3422188
   Lei MG, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111141
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Liu Y, 2018, INT J CONTROL, V91, P2250, DOI 10.1080/00207179.2017.1337933
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Lyu YJ, 2019, PROC IEEE INT CONF S, P53, DOI 10.1109/ICSME.2019.00015
   Lyu YJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P310, DOI 10.1145/3213846.3213865
   Maia D, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P170, DOI 10.1145/3417113.3422999
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Mao CG, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P161, DOI 10.1109/TASE49443.2020.00030
   Marimuthu C, 2021, ACM COMPUT SURV, V53, DOI 10.1145/3417986
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Martins Julio, 2021, SBES '21: Brazilian Symposium on Software Engineering, P54, DOI 10.1145/3474624.3474642
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   Morales R, 2018, J SYST SOFTWARE, V145, P25, DOI 10.1016/j.jss.2018.07.076
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Oliveira J., 2018, SEKE, P313, DOI [10.18293/SEKE2018-157, DOI 10.18293/SEKE2018-157]
   Oliveira V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P206, DOI [10.1109/saner48275.2020.9054859, 10.1109/SANER48275.2020.9054859]
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Peruma A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P148, DOI 10.1109/MOBILESoft.2019.00030
   Prestat D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10212-8
   Rahman A, 2021, IEEE SECUR PRIV, V19, P33, DOI 10.1109/MSEC.2021.3065190
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rasool G, 2020, ARAB J SCI ENG, V45, P3289, DOI 10.1007/s13369-020-04365-1
   Reimann Jan, 2013, 2013 IEEE/ACM 6th International Conference on Utility and Cloud Computing (UCC), P321, DOI 10.1109/UCC.2013.70
   Reimann Jan, 2014, TOOL SUPPORTED QUALI
   Rubin J, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P123, DOI 10.1109/MOBILESoft.2019.00025
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Scoccia Gian Luca, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P597, DOI 10.1109/MSR.2019.00090
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Shoenberger I, 2017, LECT NOTES COMPUT SC, V10200, P20, DOI 10.1007/978-3-319-55792-2_2
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Souza Silva Clovis Daniel, 2020, Intelligent Systems. 9th Brazilian Conference, BRACIS 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12320), P471, DOI 10.1007/978-3-030-61380-8_32
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wang J, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P71, DOI 10.1145/2993717.2993720
   Wang M, 2017, ASIA PAC SOFWR ENG, P100, DOI 10.1109/APSEC.2017.16
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wu Z., 2021, IEEE ACCESS, V9
   Wu ZQ, 2021, IEEE ACCESS, V9, P1062, DOI 10.1109/ACCESS.2020.3047019
   Xu ZW, 2018, SCI COMPUT PROGRAM, V162, P93, DOI 10.1016/j.scico.2017.06.010
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yang B, 2021, PROC INT CONF SOFTW, P761, DOI 10.1109/ICSE43902.2021.00075
   Yu J, 2021, IEEE INT C S Q R S, P738, DOI 10.1109/QRS54544.2021.00083
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 126
TC 1
Z9 2
U1 1
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2023
VL 201
AR 111677
DI 10.1016/j.jss.2023.111677
EA MAR 2023
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C2SM3
UT WOS:000960477000001
DA 2024-07-18
ER

PT J
AU Hu, HZ
   Liu, JX
   Zhang, XP
   Cao, B
   Cheng, SQ
   Long, T
AF Hu, Haize
   Liu, Jianxun
   Zhang, Xiangping
   Cao, Ben
   Cheng, Siqiang
   Long, Teng
TI A mutual embedded self-attention network model for code search?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code search; Code segments; Machine learning; Self-attention; MESN-CS
AB To improve the efficiency of program implementation, developers can selectively reuse the previously written code by searching the open-source codebase. To date, many code search methods have been proposed to actively push the limit of code search accuracy, where the methods designed using SelfAttention mechanism are particularly promising. However, while existing methods can improve the efficiency to capture textual semantics by attending significant words in the code component unit, they typically fail to capture the structural dependencies between the code components which may produce suboptimal search accuracy. In this paper, we propose a novel Self-Attention model termed MESN-CS which considers both word-level attention and code unit-level attention for code search. MESN-CS not only the attention weight of each word in the code component unit is calculated, but also the weight of the embedding between the code combination units is calculated. To verify the effectiveness of the proposed model, three benchmark models were compared on a large-scale code data and CodesearchNet. The experimental results show that the MESN-CS has better Recall@k, NDCG and MRR performance than baseline methods. the experiments also show that the semantic syntactic information between sequences can be effectively characterized in MESN-CS. (c) 2022 Elsevier Inc. All rights reserved.
C1 Hunan Univ Sci & Technol, Sch Comp Sci & Technol, Xiangtan 411100, Hunan, Peoples R China.
   Hunan Univ Sci & Technol, Hunan Prov Key Lab Serv Comp & Novel Software Tec, Xiangtan 411100, Hunan, Peoples R China.
   [Hu, Haize; Liu, Jianxun] North Second Ring Rd, Xiangtan, Hunan, Peoples R China.
C3 Hunan University of Science & Technology; Hunan University of Science &
   Technology
RP Hu, HZ; Liu, JX (corresponding author), North Second Ring Rd, Xiangtan, Hunan, Peoples R China.
EM 952259775@qq.com; ljx529@gmail.com
RI Zhang, Kai/KBD-3312-2024
OI siqiang, cheng/0000-0001-5687-6886
FU Natural Science Foundation of China [61866013]; Education Department Key
   Foundation of Hunan Province in China [17A173]; Education Department
   Foundation of Hunan Province in China [18C0565]
FX This work was supported by the Natural Science Foundation of China,
   under grants 61866013, and the Education Department Key Foundation of
   Hunan Province in China, under grants 17A173, and the Education
   Department Foundation of Hunan Province in China, under grants 18C0565.
CR [Anonymous], 2015, NAACL HLT 2015
   Bespalov Dmitriy, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P159, DOI 10.1007/978-3-642-33460-3_16
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chiranjeevi HS, 2020, COGENT ENG, V7, DOI 10.1080/23311916.2020.1856467
   Church KW, 2017, NAT LANG ENG, V23, P155, DOI 10.1017/S1351324916000334
   Drain D, 2021, Arxiv, DOI arXiv:2104.05310
   Fang S, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106542
   Fang W, 2019, CLUSTER COMPUT, V22, pS5233, DOI 10.1007/s10586-017-1195-7
   Feng C., 2020 27 ASI PAC SOFT, P238
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gotmare AD, 2021, Arxiv, DOI arXiv:2110.07811
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hammad M., 2020, ARXIV
   Hersh W, 2021, BIOMEDICAL INFORM, P755, DOI DOI 10.1007/978-3-030-58721-5_23
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jain Shivani., 2021, International Journal of Information Management Data Insights, V1, P100009, DOI [10.1016/j.jjimei.2021.100009, DOI 10.1016/J.JJIMEI.2021.100009]
   Kahil A.S.T., 2020, FUNCTIONALITY ANAL I
   Karnalim O, 2020, PROCEEDINGS OF THE TWENTY-SECOND AUSTRALASIAN COMPUTING EDUCATION CONFERENCE, ACE'20, P48, DOI 10.1145/3373165.3373171
   Karnalim O, 2019, INFORM EDUC, V18, P321, DOI 10.15388/infedu.2019.15
   Kim J., 2010, P AAAI C ART INT, V24
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li XA, 2022, Arxiv, DOI arXiv:2201.10866
   Ling CY, 2020, INT C PROGRAM COMPRE, P48, DOI 10.1145/3387904.3389278
   Liu C, 2020, Arxiv, DOI arXiv:2011.02297
   Liu C, 2022, Arxiv, DOI arXiv:2005.14373
   Liu SQ, 2022, Arxiv, DOI arXiv:2111.02671
   Mehta S, 2019, PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND CONTROL SYSTEMS (ICCS), P1293, DOI [10.1109/ICCS45141.2019.9065537, 10.1109/iccs45141.2019.9065537]
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Rahman MM, 2019, IEEE INT WORK C SO, P127, DOI 10.1109/SCAM.2019.00022
   Ren Leiming, 2020, Journal of Physics: Conference Series, V1544
   Riedmiller Martin, 2014, Multi Layer Perceptron, P7
   Ruder S, 2019, J ARTIF INTELL RES, V65, P569, DOI 10.1613/jair.1.11640
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Saha M., 2021, QUAL RELIAB ENG INT
   Shaw P, 2018, Arxiv, DOI arXiv:1803.02155
   Shen W, 2018, PATTERN RECOGN LETT, V106, P33, DOI 10.1016/j.patrec.2018.02.024
   Shi CC, 2021, Arxiv, DOI arXiv:2111.14139
   Shi HY, 2019, IEEE T IND INFORM, V15, P6551, DOI 10.1109/TII.2019.2929739
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sivaraman A, 2019, PROC INT CONF SOFTW, P292, DOI 10.1109/ICSE.2019.00044
   Song ZH, 2018, NEURAL NETWORKS, V105, P340, DOI 10.1016/j.neunet.2018.05.015
   Sun W., 2022, ARXIV
   Sun Zhensu, 2022, arXiv, DOI DOI 10.48550/ARXIV.2202.06649
   van der Laan M, 2016, INT J BIOSTAT, V12, P351, DOI 10.1515/ijb-2015-0054
   Wang H, 2020, Arxiv, DOI arXiv:2010.09520
   Wen D., 2020, THE CIRCLE
   Wen M, 2017, Arxiv, DOI arXiv:1707.05172
   Wu C., 2022, ARXIV
   Xing C., 2015, NAACL HLT, P1006, DOI [DOI 10.3115/V1/N15-1104, 10/gnxw6d]
   Yan XJ, 2018, CHIN CONTR CONF, P4672, DOI 10.23919/ChiCC.2018.8483081
   Yang HB, 2015, LECT NOTES ARTIF INT, V9077, P188, DOI 10.1007/978-3-319-18038-0_15
   Yin Z, 2018, Arxiv, DOI arXiv:1812.04224
   Yu H, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12042051
   Yuan Yuan, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P13, DOI 10.1109/DSA.2019.00012
   Yunianto Ide, 2020, 2020 12th International Conference on Information Technology and Electrical Engineering (ICITEE), P162, DOI 10.1109/ICITEE49829.2020.9271752
   Zeng C, 2021, Arxiv, DOI arXiv:2103.13020
   Zhang ZJ, 2018, 2018 IEEE/ACM 26TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/IWQoS.2018.8624183
   Zhao Z, 2017, IET INTELL TRANSP SY, V11, P68, DOI 10.1049/iet-its.2016.0208
NR 62
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2023
VL 198
AR 111591
DI 10.1016/j.jss.2022.111591
EA JAN 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C8EK5
UT WOS:000964183600001
DA 2024-07-18
ER

PT J
AU Silva, P
   Bezerra, C
   Machado, I
AF Silva, Publio
   Bezerra, Carla
   Machado, Ivan
TI Automating Feature Model maintainability evaluation using machine
   learning techniques
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quality Assessment; Software Product Lines; Feature Model; Machine
   Learning
ID PRODUCT-LINE EVOLUTION
AB Context: Software Product Lines (SPL) are generally specified using a Feature Model (FM), an artifact designed in the early stages of the SPL development life cycle. This artifact can quickly become too complex, which makes it challenging to maintain an SPL. Therefore, it is essential to evaluate the artifact's maintainability continuously. The literature brings some approaches that evaluate FM maintainability through the aggregation of maintainability measures. Machine Learning (ML) models can be used to create these approaches.Objective: This work proposes white-box ML models intending to classify the FM maintainability based on 15 measures.Methods: To build the models, we performed the following steps: (i) we compared two approaches to evaluate the FM maintainability through a human-based oracle of FM maintainability classifications; (ii) we used the best approach to pre-classify the ML training dataset; (iii) we generated three ML models and compared them against classification accuracy, precision, recall, F1 and AUC-ROC; and, (iv) we used the best model to create a mechanism capable of providing improvement indicators to domain engineers.Results: The best model used the decision tree algorithm that obtained accuracy, precision, and recall of 0.81, F1-Score of 0.79, and AUC-ROC of 0.91. Using this model, we could reduce the number of measures needed to evaluate the FM maintainability from 15 to 9 measures. Furthermore, we created a mechanism to suggest FM refactorings to improve the maintainability of this artifact. FM maintainability evaluation and the refactoring suggestion mechanism were automated in the DyMMer tool.Conclusion: We conclude this work by presenting a way to combine FM maintainability assessment with FM refactorings. The results of this work provide to domain engineers inputs that will allow them to carry out a continuous improvement of an SPL.(c) 2022 Elsevier Inc. All rights reserved.
C1 [Silva, Publio; Bezerra, Carla] Univ Fed Ceara, Dept Comp Sci, Av Jose Freitas Queiroz,5003 Cedro, Quixada, Brazil.
   [Machado, Ivan] Univ Fed Bahia, Inst Comp, Av Adhemar Barros s-n Ondina, Salvador, Brazil.
C3 Universidade Federal do Ceara; Universidade Federal da Bahia
RP Bezerra, C (corresponding author), Univ Fed Ceara, Dept Comp Sci, Av Jose Freitas Queiroz,5003 Cedro, Quixada, Brazil.
EM carlailane@gmail.com
RI Machado, Isabel C/I-6935-2012
OI Machado, Ivan/0000-0001-9027-2293
CR Acher M., 2013, P 7 INT WORKSH VAR M, DOI [10.1145/2430502.2430530, DOI 10.1145/2430502.2430530]
   Alloghani M., 2020, Supervised and unsupervised learning for data science, P3, DOI [DOI 10.1007/978-3-030-22475-2_1, 10.1007/978-3-030-22475-2_1, DOI 10.1007/978-3-030-22475-21]
   Alpaydin E., 2020, INTRO MACHINE LEARNI, DOI DOI 10.7551/MITPRESS/13811.001.0001
   Alsolai H, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106214
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], 2013, P 7 INT WORKSH VAR M, DOI DOI 10.1145/2430502.2430526
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bailey G., 2018, COMP MACHINE LEARNIN
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benard Clement, 2021, P MACHINE LEARNING R, P937
   Berger T., 2014, P VAMOS, DOI [10.1145/2556624.2556641, DOI 10.1145/2556624.2556641]
   Bezerra Carla, 2021, SBES '21: Brazilian Symposium on Software Engineering, P121, DOI 10.1145/3474624.3476016
   Bezerra Carla I. M., 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P282, DOI 10.1007/978-3-319-14130-5_20
   Bezerra CIM, 2017, ACM INT CONF PR SER, P35, DOI 10.1145/3168365.3168375
   Bezerra CIM, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P17, DOI 10.1145/2866614.2866617
   Bezerra CIM, 2017, J SYST SOFTWARE, V131, P366, DOI 10.1016/j.jss.2016.07.040
   Bezerra Carla IM, 2016, P 20 INT SYSTEMS SOF, P314
   Bonaccorso G., 2017, MACHINE LEARNING ALG
   Browne MW, 2000, J MATH PSYCHOL, V44, P108, DOI 10.1006/jmps.1999.1279
   Bürdek J, 2016, AUTOMAT SOFTW ENG, V23, P687, DOI 10.1007/s10515-015-0185-3
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Clements P., 2002, Software product lines
   de Oliveira DCS, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P357, DOI 10.1145/3350768.3351299
   el Naqa I, 2015, What Is Machine Learning?, P311, DOI DOI 10.1007/978-3-319-18305-3_1
   El-Sharkawy S, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377031
   El-Sharkawy S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P25, DOI 10.1145/3307630.3342384
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Greenwell BM, 2020, R J, V12, P343
   Jain AK, 2010, PATTERN RECOGN LETT, V31, P651, DOI 10.1016/j.patrec.2009.09.011
   Jha S, 2019, IEEE ACCESS, V7, P61840, DOI 10.1109/ACCESS.2019.2913349
   Kang Kyo C, 1990, Technical Report
   Klir G., 1995, Fuzzy sets and fuzzy logic, V4
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Lima Luan, 2020, ANAIS 8 WORKSHOP VIS, P1, DOI DOI 10.5753/VEM.2020.14522
   Loyola-González O, 2019, IEEE ACCESS, V7, P154096, DOI 10.1109/ACCESS.2019.2949286
   Ma Yuxin, 2017, [Computational Visual Media, 计算可视媒体], V3, P161
   Maggio V, 2013, THESIS U NAPLES FEDE
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Marsland, 2014, MACHINE LEARNING ALG, DOI DOI 10.1201/B17476
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Narkhede Sarang, 2018, Towards Data Science, V26, P220
   Pereira JA, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111044
   Refaeilzadeh P., 2016, Encyclopedia of database systems, P1, DOI [DOI 10.1007/978-0-387-39940-9, 10.1007/978-0-387-39940-9_565, DOI 10.1007/978-0-387-39940-9_565]
   Rocha Larissa, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P778, DOI 10.1145/3422392.3422418
   Salkind N.J., 2006, EXPLORING RES, V6th
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Sen Pratap Chandra, 2020, Emerging Technology in Modelling and Graphics. Proceedings of IEM Graph 2018. Advances in Intelligent Systems and Computing (AISC 937), P99, DOI 10.1007/978-981-13-7403-6_11
   Silva Publio, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P1, DOI 10.1145/3425269.3425276
   Silva P, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471152
   Soares LR, 2018, INFORM SOFTWARE TECH, V98, P44, DOI 10.1016/j.infsof.2018.01.016
   Syakur MA, 2018, IOP CONF SER-MAT SCI, V336, DOI 10.1088/1757-899X/336/1/012017
   Tanhaei M, 2016, INFORM SOFTWARE TECH, V80, P138, DOI 10.1016/j.infsof.2016.08.011
   Temple Paul, 2016, P 20 INT SYST SOFTW, P209
   Vale G, 2019, SOFTWARE QUAL J, V27, P275, DOI 10.1007/s11219-018-9405-y
   Zhang HP, 2009, STAT INTERFACE, V2, P381
NR 58
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2023
VL 195
AR 111539
DI 10.1016/j.jss.2022.111539
EA NOV 2022
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M8NE
UT WOS:000906907300003
DA 2024-07-18
ER

PT J
AU Nakamura, WT
   de Oliveira, EC
   de Oliveira, EHT
   Redmiles, D
   Conte, T
AF Nakamura, Walter T.
   de Oliveira, Edson Cesar
   de Oliveira, Elaine H. T.
   Redmiles, David
   Conte, Tayana
TI What factors affect the UX in mobile apps? A systematic mapping study on
   the analysis of app store reviews
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE User experience; Influencing factors; App store reviews; Systematic
   mapping study
ID USER EXPERIENCE; WEB; EXPECTATIONS; AGREEMENT; USABILITY; DESIGN
AB Researchers and practitioners are becoming aware of the importance of User eXperience (UX) in mobile app development. Developing merely usable apps became insufficient to meet users' needs, requiring developers to focus on promoting pleasurable experiences to get a competitive advantage. To that end, it is crucial to understand what factors can lead to positive or negative UX. In this scenario, app store reviews emerged as a valuable source to address UX issues from analyzing several self-reports of end-users experiences in the wild. Many researchers have proposed approaches to analyze such reviews and investigate the effect of factors related to the user (e.g., gender, culture) and the app (e.g., bugs, features) on UX. However, the fragmentation of the results into various studies makes it difficult to draw conclusions that can support the development process and advance the research in the field. This paper presents a systematic mapping study to address publications that analyze app store reviews and identify the factors affecting UX reflected on users' ratings and sentiment. From 25 accepted publications, we extracted 31 factors and their associated polarities. We also identified research gaps and future work opportunities with implications for practitioners and researchers. (c) 2022 Elsevier Inc. All rights reserved.
C1 [Nakamura, Walter T.] Fed Univ Technol Parana UTFPR, Acad Dept Comp DACOM, Rua Rosalina Maria Ferreira 1233, Campo Mourao, Brazil.
   [Nakamura, Walter T.; de Oliveira, Elaine H. T.; Conte, Tayana] Fed Univ Amazonas UFAM, Inst Comp IComp, Ave Rodrigo Otavio 6200, Manaus, Brazil.
   [de Oliveira, Edson Cesar] Secretaria Estado Fazenda Amazonas SEFAZ AM, Ave Andre Araujo 150, Manaus, Brazil.
   [Redmiles, David] Univ Calif Irvine UCI, Dept Informat, Irvine, CA 92697 USA.
C3 Universidade Tecnologica Federal do Parana; Universidade Federal de
   Amazonas; University of California System; University of California
   Irvine
RP Nakamura, WT (corresponding author), Fed Univ Technol Parana UTFPR, Acad Dept Comp DACOM, Rua Rosalina Maria Ferreira 1233, Campo Mourao, Brazil.
EM waltertakashi@utfpr.edu.br; edson.cesar@sefaz.am.gov.br;
   elaine@icomp.ufam.edu.br; redmiles@ics.uci.edu; tayana@icomp.ufam.edu.br
RI Nakamura, Walter/AAK-2353-2020
OI Nakamura, Walter/0000-0001-5451-3109; Conte, Tayana/0000-0001-6436-3773
FU FAPEAM, Brazil [062.00150/2020, 062.00638/2019]; Sao Paulo Research
   Foundation (FAPESP), Brazil [2020/05191-2]; Coordination for the
   Improvement of Higher Education Personnel -Brazil (CAPES), Brazil [001];
   CNPq, Brazil [204081/20181/PDE, 314174/2020-6, 308513/2020-7]; Samsung
   Electronics of Amazonia Ltda [003]
FX This research was supported by the Brazilian funding agency FAPEAM,
   Brazil through processes number 062.00150/2020, and 062.00638/2019, the
   Sao Paulo Research Foundation (FAPESP), Brazil through grant
   #2020/05191-2, the Coordination for the Improvement of Higher Education
   Personnel -Brazil (CAPES), Brazil financial code 001, and CNPq, Brazil
   processes 204081/20181/PDE, 314174/2020-6, and 308513/2020-7. It was
   also funded by Samsung Electronics of Amazonia Ltda according to Article
   48 of Decree n degrees 6.008/2006, under the terms of Federal Law n
   degrees 8.387/1991, through agreement n. 003, signed with ICOMP/UFAM.
CR Alves R, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P93, DOI 10.1145/2639189.2641208
   [Anonymous], 2008, Software engineering-Software product Quality Requirements and Evaluation (SQuaRE)-Data quality model: International Organization for Standardization
   [Anonymous], 2018, ISO 9241-11:2018
   Bargas-Avila JA, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2689
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bruun A, 2015, LECT NOTES COMPUT SC, V9296, P237, DOI 10.1007/978-3-319-22701-6_17
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chromik Michael, 2020, NordiCHI '20: Proceedings of the 11th Nordic Conference on Human-Computer Interaction: Shaping Experiences, Shaping Society, DOI 10.1145/3419249.3420163
   Cockburn A, 2017, INT J HUM-COMPUT ST, V108, P89, DOI 10.1016/j.ijhcs.2017.07.005
   Cockburn A, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P357, DOI 10.1145/2702123.2702139
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Durelli VHS, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P132, DOI 10.1145/3266237.3266272
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Ebrahimi F, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106466
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Geert H., 1991, Cultures and organizations: Software of the mind
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Gutwin C, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5608, DOI 10.1145/2858036.2858419
   Guzman E, 2019, INT REQUIR ENG CONF, P381, DOI 10.1109/RE.2019.00049
   Guzman E, 2018, PROC INT CONF SOFTW, P13, DOI 10.1145/3183428.3183436
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Hassenzahl M, 2004, CHI 04 HUM FACT COMP, P1283
   Hassenzahl M., 2018, Funology 2, P17, DOI DOI 10.1007/978-3-319-68213-6_2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hedegaard S.Simonsen., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P2089, DOI DOI 10.1145/2470654.2481286NULL
   Hedegaard S, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P157, DOI 10.1145/2639189.2639211
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Hu HY, 2018, EMPIR SOFTW ENG, V23, P3442, DOI 10.1007/s10664-018-9604-y
   Huang Albert, 2002, AMCIS 2002 P, P94
   Iacob Claudia, 2013, 27 INT BCS HUM COMP, DOI DOI 10.14236/EWIC/HCI2013.38
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 2007001 EBSE
   Kujala S, 2017, INT J HUM-COMPUT ST, V98, P51, DOI 10.1016/j.ijhcs.2016.09.011
   Kujala S, 2011, INTERACT COMPUT, V23, P473, DOI 10.1016/j.intcom.2011.06.005
   Lallemand C, 2015, COMPUT HUM BEHAV, V43, P35, DOI 10.1016/j.chb.2014.10.048
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Law ELC, 2010, INTERACT COMPUT, V22, P313, DOI 10.1016/j.intcom.2010.04.006
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   Martens D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P8, DOI 10.1109/SEmotion.2017.6
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Masrury RA, 2019, 2019 7TH INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGY (ICOICT), P75
   Mendes E, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110607
   Michalco J, 2015, INT J HUM-COMPUT INT, V31, P603, DOI 10.1080/10447318.2015.1065696
   Nakamura WT, 2019, CHI EA '19 EXTENDED ABSTRACTS: EXTENDED ABSTRACTS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290607.3313000
   Nicolai M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P33, DOI 10.1145/3340496.3342758
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panosian H., 2017, LEARN IOS APPL DISTR, P153
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pettersson I, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174035
   Porat T, 2012, HUM-COMPUT INTERACT, V27, P235, DOI 10.1080/07370024.2011.646927
   Rodrigues P, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P109, DOI 10.1145/3041021.3054139
   Sagnier C, 2020, ADV INTELL SYST, V972, P305, DOI 10.1007/978-3-030-19135-1_30
   Selz D, 1998, P ANN HICSS, P222, DOI 10.1109/HICSS.1998.655278
   Simmons A, 2016, P 28 AUSTR COMP HUM, P416
   Tarafdar M, 2005, INF RESOUR MANAG J, V18, P62, DOI 10.4018/irmj.2005100104
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Wang C, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2199
   Wang H, 2010, Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P783, DOI [DOI 10.1145/1835804.1835903, 10.1145/1835804.1835903]
   Weichbroth Pawel, 2019, 2019 Federated Conference on Computer Science and Information Systems (FedCSIS). Proceedings, P747, DOI 10.15439/2019F289
   Weichbroth P, 2020, IEEE ACCESS, V8, P55563, DOI 10.1109/ACCESS.2020.2981892
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 68
TC 3
Z9 3
U1 5
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2022
VL 193
AR 111462
DI 10.1016/j.jss.2022.111462
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D3TQ8
UT WOS:000967989300019
DA 2024-07-18
ER

PT J
AU Singjai, A
   Zdun, U
AF Singjai, Apitchaka
   Zdun, Uwe
TI Conformance assessment of Architectural Design Decisions on API endpoint
   designs derived from domain models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservice architecture; API design; Domain driven design;
   Architecture conformance assessment
AB Context: Domain-driven design (DDD) is commonly used to design microservices. A crucial aspect of microservice design is API design, which includes the design of API endpoints.
   Objective: Our objective is to automate the assessment of conformance to Architectural Design Decisions (ADDs) on the interrelation of DDD and APIs. In particular, we studied link mapping, API operation design, and resource segregation as API endpoint design issues that are linked to domain model design. We particularly aim to address conformance checking in the context of frequent release practices, as frequent manual conformance checking is difficult or infeasible.
   Methods: We suggest a new approach for the automated assessment of conformance to ADD options. The approach suggests automated detectors to detect ADD options selected in a given API endpoint design, as well as an assessment scoring scheme based on empirical results. For the evaluation of our approach, we first manually created a ground truth for 12 cases in a multi-case study, and then compared the results of our automated detectors to the ground truth for each of those cases.
   Results: With our approach, all ADD options in our multi-case study possibly can be automatically detected. Without further improvements, our approach identifies 83% of the decision points in the multi-case study correctly. A statistical analysis of our data shows only a negligible effect size for differences to the ground truth.
   Conclusion: Our new approach provides a pragmatic method for automated detection of conformance to ADDs on the interrelation of DDD and APIs. The approach can support the continuous analysis of API endpoint designs. (c) 2022 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Singjai, Apitchaka; Zdun, Uwe] Univ Vienna, Res Grp Software Architecture, Fac Comp Sci, Vienna, Austria.
C3 University of Vienna
RP Singjai, A (corresponding author), Univ Vienna, Res Grp Software Architecture, Fac Comp Sci, Vienna, Austria.
EM apitchaka.singjai@univie.ac.at; uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
OI Zdun, Uwe/0000-0002-6233-2591
FU FWF (Austrian Science Fund) project [API-ACE: I 4268]; European Union
   [952647]
FX This work was supported by FWF (Austrian Science Fund) project API-ACE:
   I 4268. Our work has received funding from the European Union's Horizon
   2020 research and innovation programme under grant agreement No 952647
   (AssureMOSS project).
CR [Anonymous], 2015, J BIG DATA, DOI DOI 10.1186/S40537-015-0025-0
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Breivold HP, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P279, DOI 10.1109/SEAA.2009.10
   Canfora G, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P312, DOI 10.1109/CMPSAC.2003.1245359
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Daigneau R., 2011, SERVICE DESIGN PATTE
   Deissenboeck F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P247, DOI 10.1145/1810295.1810343
   Evans E., 2016, DDD MICROSERVICES LA
   Evans E., 2003, Domain-Driven Design
   Fan CY, 2017, 2017 IEEE 6TH INTERNATIONAL CONFERENCE ON AI & MOBILE SERVICES (AIMS), P109, DOI 10.1109/AIMS.2017.23
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Garousi V., 2020, Contemporary Empirical Methods in Software Engineering, P385, DOI [10.1007/978-3-030-32489-6_14, DOI 10.1007/978-3-030-32489-6_14]
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Google, 2021, DEVOPS TECH ARCH
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Kapferer S, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P299, DOI 10.5220/0008910502990306
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   LARICHEV O, 1995, ADV MULTICRITERIA AN, P47, DOI DOI 10.1007/978-1-4757-2383-0_4
   Lee L, 2008, LECT NOTES COMPUT SC, V5281, P43, DOI 10.1007/978-3-540-87879-7_3
   Lübke D, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361164
   Merson P, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P7, DOI 10.1109/ICSA-C50368.2020.00010
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen C.D, 2020, DESIGN ANAL CLOUD BA
   Ntentos E, 2021, COMPUTING, V103, P2521, DOI 10.1007/s00607-021-01002-z
   Ntentos E, 2020, LECT NOTES COMPUT SC, V12571, P580, DOI 10.1007/978-3-030-65310-1_42
   Ntentos E, 2020, LECT NOTES COMPUT SC, V12292, P3, DOI 10.1007/978-3-030-58923-3_1
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   PERREAULT WD, 1989, J MARKETING RES, V26, P135, DOI 10.2307/3172601
   Petrillo F, 2016, LECT NOTES COMPUT SC, V9936, P157, DOI 10.1007/978-3-319-46295-0_10
   Piasecki J, 2018, SCI ENG ETHICS, V24, P809, DOI 10.1007/s11948-017-0010-4
   PRATT JW, 1959, J AM STAT ASSOC, V54, P655, DOI 10.2307/2282543
   Quartel D, 2007, IEEE INT ENTERP DIST, P229, DOI 10.1109/EDOC.2007.11
   Rademacher F, 2018, IEEE SOFTWARE, V35, P36, DOI 10.1109/MS.2018.2141028
   Rademacher F, 2018, LECT NOTES COMPUT SC, V10729, P230, DOI 10.1007/978-3-319-74781-1_17
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Richardson C., 2017, A pattern language for microservices
   Romano J., 2006, ANN M FLORIDA ASS IN
   Rowe D., 1994, CHANGE, V94, P541
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Schwarz M, 2016, ENG MICRODEPLOY DEPL
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Singjai A., 2021, P IEEE 18 INT C SOFT
   Singjai Apitchaka, 2021, Zenodo, DOI 10.5281/ZENODO.5031272
   Vernon V., 2013, Implementing Domain-Driven Design
   Weinstock C.B., 2006, On system scalability
   Zdun U, 2017, LECT NOTES COMPUT SC, V10601, P411, DOI 10.1007/978-3-319-69035-3_29
   Zdun U, 2018, LECT NOTES COMPUT SC, V11236, P73, DOI 10.1007/978-3-030-03596-9_5
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zimmermann O., 2020, P EUR C PATT LANG PR, P1, DOI [10.1145/3424771.3424822, DOI 10.1145/3424771.3424822]
   Zimmermann O., 2020, OpenAccess Series in Informatics (OASIcs), V78
   Zimmermann O., 2019, Microservice API patterns
   Zimmermann O., 2020, DOMAIN DRIVEN SERVIC
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 57
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2022
VL 193
AR 111433
DI 10.1016/j.jss.2022.111433
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D3TQ8
UT WOS:000967989300004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Damiani, F
   Hähnle, R
   Kamburjan, E
   Lienhardt, M
   Paolini, L
AF Damiani, Ferruccio
   Haehnle, Reiner
   Kamburjan, Eduard
   Lienhardt, Michael
   Paolini, Luca
TI Variability modules?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Delta -oriented programming; Family -based analysis; Language design;
   Modules; Multi product line; Variant generation
ID MINIMAL CORE CALCULUS; FEATHERWEIGHT JIGSAW; TRAITS; JAVA; CHECKING
AB A Software Product Line (SPL) is a family of similar programs, called variants, generated from a common artifact base. A Multi SPL (MPL) is a set of interdependent SPLs: each variant can depend on variants from other SPLs. MPLs are challenging to model and to implement efficiently, especially when different variants of the same SPL must coexist and interoperate. We address this challenge by introducing the concept of a variability module (VM), a new language construct. A VM constitutes at the same time a module and an SPL of standard (variability-free), possibly interdependent, modules. Generating a variant of a VM triggers the generation of all variants required to satisfy its dependencies. Consequentially, a set of interdependent VMs represents an MPL that can be compiled into a set of standard modules. We illustrate the VM concept with an example from an industrial modeling scenario and formalize it in a core calculus. We define family-based analyses to check that a VM satisfies certain well-formedness conditions and whether all variants can be generated. Finally, we provide an implementation of VM for the Java-like modeling language ABS, and evaluate it with case studies. (c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Damiani, Ferruccio; Paolini, Luca] Univ Turin, Dipartimento Informat, Turin, Italy.
   [Haehnle, Reiner] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
   [Kamburjan, Eduard] Univ Oslo, Dept Informat, Oslo, Norway.
   [Lienhardt, Michael] Off Natl Etud & Rech Aerosp, Palaiseau, France.
C3 University of Turin; Technical University of Darmstadt; University of
   Oslo; National Office for Aerospace Studies & Research (ONERA);
   Universite Paris Saclay
RP Damiani, F (corresponding author), Univ Turin, Dipartimento Informat, Turin, Italy.; Kamburjan, E (corresponding author), Univ Oslo, Dept Informat, Oslo, Norway.
EM ferruccio.damiani@unito.it; reiner.haehnle@tu-darmstadt.de;
   eduard@ifi.uio.no; michael.lienhardt@onera.fr; luca.paolini@unito.it
RI Paolini, Luca/M-8924-2019; Ferruccio, Damiani/D-2383-2011
OI Paolini, Luca/0000-0002-4126-0170; Ferruccio,
   Damiani/0000-0001-8109-1706; Kamburjan, Eduard/0000-0002-0996-2543
FU Research Council of Norway via SIRIUS [294600]; PeTWIN;  [237898]
FX We thank the anonymous SPLC 2021 and the JSS reviewers for insightful
   comments and suggestions that helped to improve this paper. This work
   was partially supported by the Research Council of Norway via SIRIUS
   (237898) and PeTWIN (294600).
CR Alouneh S, 2019, ARTIF INTELL REV, V52, P2575, DOI 10.1007/s10462-018-9628-0
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bettini L, 2017, J SYST SOFTWARE, V131, P419, DOI 10.1016/j.jss.2016.07.035
   Bettini L, 2013, ACTA INFORM, V50, P77, DOI 10.1007/s00236-012-0173-z
   Bettini L, 2013, SCI COMPUT PROGRAM, V78, P521, DOI 10.1016/j.scico.2011.06.007
   Bono V, 2008, INT FED INFO PROC, V273, P367
   Bracha G., 2016, The Dart Programming Language. Always learning
   Cardelli L., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P266, DOI 10.1145/263699.263735
   Clarke D., 2011, S FORM METH COMP OBJ, V6957, P204
   Damiani Ferruccio, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P111, DOI 10.1007/978-3-319-66845-1_8
   Damiani Ferruccio, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P193, DOI 10.1007/978-3-642-34026-0_15
   Damiani F, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471143
   Damiani F, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P264, DOI 10.1145/3233027.3236401
   Damiani F, 2019, SCI COMPUT PROGRAM, V172, P203, DOI 10.1016/j.scico.2018.11.005
   Damiani F, 2017, LECT NOTES COMPUT SC, V10202, P424, DOI 10.1007/978-3-662-54494-5_25
   Damiani F, 2016, LECT NOTES COMPUT SC, V9681, P47, DOI 10.1007/978-3-319-33693-0_4
   Damiani F, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P232, DOI 10.1145/2648511.2648536
   Damiani F, 2014, LECT NOTES COMPUT SC, V8802, P289, DOI 10.1007/978-3-662-45234-9_21
   Damiani Ferruccio, 2018, Principled Software Development: Essays Dedicated to Arnd PoetzschHeffter on the Occasion of his 60th Birthday, P99
   Delaware B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P243, DOI 10.1145/1595696.1595733
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Hahnle Reiner, 2013, Formal Methods for Components and Objects. 11th International Symposium, FMCO 2012. Revised Lectures: LNCS 7866, P1, DOI 10.1007/978-3-642-40615-7_1
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Igarashi A, 1999, ACM SIGPLAN NOTICES, V34, P132, DOI 10.1145/320385.320395
   Johnsen E.B., 2010, LNCS, P142, DOI 10.1007/978-3-642-25271-6_8
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kamburjan E, 2018, ELECTRON P THEOR COM, P52, DOI 10.4204/EPTCS.279.7
   Kamburjan E, 2018, SCI COMPUT PROGRAM, V166, P167, DOI 10.1016/j.scico.2018.07.001
   Kamburjan E, 2017, COMM COM INF SC, V694, P55, DOI 10.1007/978-3-319-53946-1_4
   Koscielny J., 2014, PPPJ
   Lagorio G, 2012, INFORM COMPUT, V214, P86, DOI 10.1016/j.ic.2012.02.004
   Lagorio G, 2009, LECT NOTES COMPUT SC, V5653, P244, DOI 10.1007/978-3-642-03013-0_12
   Lienhardt Michael, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P178, DOI 10.1007/978-3-642-34026-0_14
   Liquori L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330022
   Mauliadi R, 2017, INT C INF TECH SYST, P108, DOI 10.1109/ICITSI.2017.8267927
   Mikhajlov L., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P355, DOI 10.1007/BFb0054099
   Nierstrasz O, 2006, J OBJECT TECHNOL, V5, P129, DOI 10.5381/jot.2006.5.4.a4
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Reppy J, 2007, LECT NOTES COMPUT SC, V4609, P373
   Roffe A, 2021, Arxiv, DOI arXiv:2110.09228
   Roman S., 2008, Lattices and Ordered Sets
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schaefer Ina, 2012, Software diversity: state of the art and perspectives
   Schaefer Ina, 2010, P 2 INT WORKSH FEAT, P49
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Schröter R, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P96
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Schroter R, 2013, VAMOS, P9, DOI 10.1145/2430502.2430515
   Setyautami MRA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P274, DOI 10.1145/3233027.3236400
   Setyautami MRA, 2019, ASIA PAC SOFWR ENG, P371, DOI 10.1109/APSEC48747.2019.00057
   Setyautami MRA, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442401
   Smith C, 2005, LECT NOTES COMPUT SC, V3586, P453
   Strnisa R, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P499
   THAKER S, 2007, P 6 INT C GEN PROGR
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Trujillo-Tzanahua GI, 2018, TRENDS APPL SOFTWARE, P117, DOI [10.1007/978-3-319-69341-5_11, DOI 10.1007/978-3-319-69341-5_11]
   Wirth N., 1980, Language Design and Programming Methodology. Proceedings of a Symposium, P1
   Wong Peter Y. H., 2012, Formal Verification of Object-Oriented Software. International Conference, FoVeOOS 2011. Revised Selected Papers, P49, DOI 10.1007/978-3-642-31762-0_5
NR 64
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2023
VL 195
AR 111510
DI 10.1016/j.jss.2022.111510
EA SEP 2022
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5T1XP
UT WOS:000875668800004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Meyer, V
   da Silva, ML
   Kirchoff, DF
   De Rose, CAF
AF Meyer, Vinicius
   da Silva, Matheus L.
   Kirchoff, Dionatra F.
   De Rose, Cesar A. F.
TI IADA: A dynamic interference-aware cloud scheduling architecture for
   latency-sensitive workloads
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Interference -aware; Resource management; Dynamic workloads; Machine
   learning; Cloud computing
ID SIMULATION; PREDICTION; ENERGY
AB Cloud computing allows several applications to share physical resources, yielding rapid provisioning and improving hardware utilization. However, multiple applications contending for shared resources are susceptible to interference, which might lead to significant performance degradation and con-sequently an increase in Service Level Agreements violations. In previous work, we started to analyze resource contention and its impact on performance degradation and hardware utilization. Then, we created an interference-aware application classifier based on machine learning techniques and evaluated it comparing two classification strategies: (i) unique, when a single classification is performed over the entire applications' execution; and (ii) segmented, when the classification is carried out over multiple static-defined intervals. Moving towards a dynamic scheduling solution, we combine and improve on previous work findings and, in this work, we present IADA, a full-fledged dynamic interference-aware cloud scheduling architecture for latency-sensitive workloads. Our approach consists in improving on a segmented interference classification of applications to a dynamic classification scheme based on workload variations. Aiming at using the available resource more efficiently and respecting Quality of Services requirements, the proposed architecture was developed supported by machine learning techniques, heuristics, and a bayesian changepoint detection algorithm for online inference. We conducted a set of real and simulated experiments, utilizing a developed extension of CloudSim Toolkit to analyze and compare the proposed architecture efficiency with related studies. Results evidenced that IADA reduces by 25%, on average, the overall performance degradation.(c) 2022 Elsevier Inc. All rights reserved.
C1 [Meyer, Vinicius; da Silva, Matheus L.; Kirchoff, Dionatra F.; De Rose, Cesar A. F.] Pontif Catholic Univ Rio Grande Sul PUCRS, Sch Technol, Bldg 32,Av Ipiranga 6681, Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Meyer, V (corresponding author), Pontif Catholic Univ Rio Grande Sul PUCRS, Sch Technol, Bldg 32,Av Ipiranga 6681, Porto Alegre, RS, Brazil.
EM vinicius.meyer@edu.pucrs.br; matheus.lyra@edu.pucrs.br;
   dionatra.kirchoff@edu.pucrs.br; cesar.derose@pucrs.br
RI ; De Rose, Cesar A. F./F-9271-2012
OI Meyer, Vinicius/0000-0001-5893-5878; De Rose, Cesar A.
   F./0000-0003-0070-0157
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior -Brazil
   (CAPES) [001]; project "GREEN-CLOUD: Computacao em Cloud com Computacao
   Sustentavel'' from FAPERGS [16/2551-0000 488-9]; CNPq Brazil [PRONEX
   12/2014]
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior -Brazil (CAPES) -Finance Code 001. This work
   has been partially supported by the project "GREEN-CLOUD: Computacao em
   Cloud com Computacao Sustentavel'' (#16/2551-0000 488-9), from FAPERGS
   and CNPq Brazil, program PRONEX 12/2014. Also, this work was achieved in
   cooperation with HP Brasil Industria e Comercio de Equipamentos
   Eletronicos LTDA using incentives of Brazilian Informatics Law (Law n.
   8.2.48 of 1991).
CR Al-Sinayyid A, 2020, J SUPERCOMPUT, V76, P9609, DOI 10.1007/s11227-020-03223-z
   Alboaneen D, 2021, FUTURE GENER COMP SY, V115, P201, DOI 10.1016/j.future.2020.08.036
   Alves MM, 2018, 2018 SYMPOSIUM ON HIGH PERFORMANCE COMPUTING SYSTEMS (WSCAD 2018), P94, DOI 10.1109/WSCAD.2018.00024
   [Anonymous], 2002, LINUX TRACE TOOLKIT
   [Anonymous], 2022, Docker engine overview
   Beloglazov A, 2012, CONCURR COMP-PRACT E, V24, P1397, DOI 10.1002/cpe.1867
   Broadwell P.M, 2004, UCBCSD041324 EECS, P1
   Bu X., 2013, P 22 INT S HIGH PERF, P227, DOI DOI 10.1145/2493123.2462904
   Caglar F., 2014, REACTION 2014 3 IEEE, P15
   Caglar F, 2016, PROCEEDINGS 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON INTERNET-OF-THINGS DESIGN AND IMPLEMENTATION IOTDI 2016, P95, DOI 10.1109/IoTDI.2015.36
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Casanova H, 2001, FIRST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P430, DOI 10.1109/CCGRID.2001.923223
   Chen S, 2017, I S WORKL CHAR PROC, P125, DOI 10.1109/IISWC.2017.8167770
   Chen X, 2015, I S MOD ANAL SIM COM, P164, DOI 10.1109/MASCOTS.2015.35
   Chhabra A, 2021, CLUSTER COMPUT, V24, P885, DOI 10.1007/s10586-020-03168-1
   Chhetri MB, 2021, IEEE T SERV COMPUT, V14, P1739, DOI 10.1109/TSC.2019.2908647
   Chiang R.C., 2011, Proceedings of the 2011 International Conference for High Performance Computing, Networking, Storage and Analysis, SC'11, P1
   Corporation M., 2020, DOPARALLEL FOREACH P
   Daraje M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON MOBILE NETWORKS AND WIRELESS COMMUNICATIONS (ICMNWC), DOI 10.1109/ICMNWC52512.2021.9688556
   Delimitrou C, 2013, ACM SIGPLAN NOTICES, V48, P77, DOI 10.1145/2499368.2451125
   Devarajan H, 2018, INT C HIGH PERFORM, P255, DOI 10.1109/HiPC.2018.00036
   Dirk M, 2014, LINUX J, V2014
   Ebadifard F, 2021, CLUSTER COMPUT, V24, P1075, DOI 10.1007/s10586-020-03177-0
   Garg SK, 2014, J NETW COMPUT APPL, V45, P108, DOI 10.1016/j.jnca.2014.07.030
   Guérout T, 2013, SIMUL MODEL PRACT TH, V39, P76, DOI 10.1016/j.simpat.2013.04.007
   Hu Y, 2020, FUTURE GENER COMP SY, V102, P562, DOI 10.1016/j.future.2019.08.025
   Iqbal W, 2018, J NETW COMPUT APPL, V124, P94, DOI 10.1016/j.jnca.2018.09.023
   Javadi SA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P135, DOI 10.1109/ICAC.2017.17
   Jersak L.C., 2016, Proceedings of the 31st Annual ACM symposium on applied computing, Italy, P420
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   Krzywda J, 2020, EUROMICRO WORKSHOP P, P88, DOI 10.1109/PDP50117.2020.00020
   Kumar R, 2017, IEEE INT CONF SIG PR, P654, DOI 10.1109/ISPCC.2017.8269758
   Lim SH, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING AND WORKSHOPS, P317
   Ludwig UL, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5098
   Menage P, 2022, CONTROL GROUPS DEFIN
   Meyer Vinicius, 2020, Job Scheduling Strategies for Parallel Processing. 23rd International Workshop, JSSPP 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12326), P1, DOI 10.1007/978-3-030-63171-0_1
   Meyer V., 2021, INTERFERENCE AWARE A, DOI [10.24433/CO.3183391.v1, DOI 10.24433/CO.3183391.V1]
   Meyer V., 2019, Int. J. Comput. Syst. Eng, DOI [10.1504/ijcsyse.2019.10015444, DOI 10.1504/IJCSYSE.2019.10015444]
   Meyer V, 2021, J SYST ARCHITECT, V116, DOI 10.1016/j.sysarc.2021.102064
   Meyer V, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P404, DOI 10.5220/0007729004040411
   Meyer V, 2020, EUROMICRO WORKSHOP P, P80, DOI 10.1109/PDP50117.2020.00019
   Moreno IsmaelSolis., 2013, Autonomous Decentralized Systems (ISADS), 2013 IEEE Eleventh International Symposium on, P1
   Nathuji R, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P237
   Núñez A, 2012, J GRID COMPUT, V10, P185, DOI 10.1007/s10723-012-9208-5
   OpenVZ, 2022, US
   Pagotto A., 2019, OCP BAYESIAN ONLINE
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Piraghaj SF, 2017, SOFTWARE PRACT EXPER, V47, P505, DOI 10.1002/spe.2422
   Qian Zhu, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P170, DOI 10.1109/CLOUD.2012.25
   R Development Core Team, 2017, R LANG ENV STAT COMP, DOI DOI 10.1890/0012-9658(2002)083[3097:CFHIWS]2.0.CO;2
   Radhika EG, 2021, MATER TODAY-PROC, V45, P2793, DOI 10.1016/j.matpr.2020.11.789
   Rao K. Mallikharjuna, 2022, Advanced Computing and Intelligent Technologies: Proceedings of ICACIT 2021. Lecture Notes in Networks and Systems (218), P505, DOI 10.1007/978-981-16-2164-2_40
   Rosen R, 2014, LINUX CONTAINERS FUT
   Rosenau R., 2014, 21 20 STUD C IT, P1
   Sampaio AM, 2015, SIMUL MODEL PRACT TH, V57, P142, DOI 10.1016/j.simpat.2015.07.002
   Shahlaee A, 2013, IEEE P 3 INT C NUICO, P1
   Shekhar S, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P82, DOI 10.1109/CLOUD.2018.00018
   Thamsen L, 2020, LECT NOTES COMPUT SC, V11997, P519, DOI 10.1007/978-3-030-48340-1_40
   Toosi AN, 2017, J NETW COMPUT APPL, V83, P155, DOI 10.1016/j.jnca.2017.01.036
   Tosatto A, 2015, 2015 9TH INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT, AND SOFTWARE INTENSIVE SYSTEMS CISIS 2015, P70, DOI 10.1109/CISIS.2015.35
   Urgaonkar H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P239, DOI 10.1145/1060289.1060312
   Wang KW, 2019, CLUSTER COMPUT, V22, P2223, DOI 10.1007/s10586-017-1466-3
   Xavier M.G., 2019, THESIS PONTIFICAL CA
   Xavier MG, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3839
   Xavier MG, 2014, EUROMICRO WORKSHOP P, P299, DOI 10.1109/PDP.2014.78
   Zhang F, 2019, FUTURE GENER COMP SY, V98, P672, DOI 10.1016/j.future.2018.09.009
   Zhang W, 2014, IEEE ACM INT SYMP, P394, DOI 10.1109/CCGrid.2014.101
NR 68
TC 3
Z9 3
U1 2
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2022
VL 194
AR 111491
DI 10.1016/j.jss.2022.111491
EA SEP 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5I1RT
UT WOS:000868143600002
DA 2024-07-18
ER

PT J
AU Laurent, T
   Arcaini, P
   Trubiani, C
   Ventresque, A
AF Laurent, Thomas
   Arcaini, Paolo
   Trubiani, Catia
   Ventresque, Anthony
TI Mutation-based analysis of queueing network performance models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Queueing Networks; Mutation; Model-based performance analysis
AB Performance models have been used in the past to understand the performance characteristics of software systems. However, the identification of performance criticalities is still an open challenge, since there might be several system components contributing to the overall system performance. This work combines two different areas of research to improve the process of interpreting modelbased performance analysis results: (i) software performance engineering that provides the ground for the evaluation of the system's performance; (ii) mutation-based techniques that nicely supports the experimentation of changes in performance models and contribute to a more systematic assessment of performance indices. We propose mutation operators for specific performance models, i.e., queueing networks, that resemble changes commonly made by designers when exploring the properties of a system's performance. Our approach consists in introducing a mutation-based approach that generates a set of mutated queueing network models. The performance of these mutated networks is compared to that of the original network to better understand the effect of variations in the different components of the system. A set of benchmarks is adopted to show how the technique can be used to get a deeper understanding of the performance characteristics of software systems. (c) 2022 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
C1 [Laurent, Thomas; Ventresque, Anthony] Lero, Dublin, Ireland.
   [Laurent, Thomas; Ventresque, Anthony] Univ Coll Dublin, Dublin, Ireland.
   [Arcaini, Paolo] Natl Inst Informat, Tokyo, Japan.
   [Trubiani, Catia] Gran Sasso Sci Inst, Laquila, Italy.
C3 University College Dublin; Research Organization of Information &
   Systems (ROIS); National Institute of Informatics (NII) - Japan; Gran
   Sasso Science Institute (GSSI)
RP Laurent, T (corresponding author), Lero, Dublin, Ireland.; Laurent, T (corresponding author), Univ Coll Dublin, Dublin, Ireland.
EM thomas.laurent@ucd.ie; arcaini@nii.ac.jp; catia.trubiani@gssi.it;
   anthony.ventresque@ucd.ie
RI Arcaini, Paolo/J-3616-2017; Laurent, Thomas/ABM-5202-2022; Trubiani,
   Catia/AAU-4040-2021
OI Arcaini, Paolo/0000-0002-6253-4062; Laurent, Thomas/0000-0002-0953-774X;
   Trubiani, Catia/0000-0002-7675-6942; Ventresque,
   Anthony/0000-0003-2064-1238
FU Science Foundation Ireland [13/RC/2094_P2]; Japan Science and Technology
   Agency [JPMJER1603]; MIUR project PRIN [13/RC/2094_P2];  [2017TWRCNB
   SEDUCE]
FX We would like to thank the Editor and the anonymous reviewers for their
   valuable feedback. This work was supported, in part, by Science
   Foundation Ireland grant 13/RC/2094_P2. P. Arcaini is supported by
   Engineerable AI Project (No. JPMJMI20B8) , Japan Science and Technology
   Agency; and ERATO HASUO Metamathematics for Systems Design Project (No.
   JPMJER1603) , Japan Science and Technology Agency, Funding Reference
   number: 10.13039/501100009024 ERATO. This work has been partially funded
   by MIUR project PRIN 2017TWRCNB SEDUCE (Designing Spatially Distributed
   Cyber-Physical Systems under Uncertainty) .
CR AbouTrab MS, 2013, J SYST SOFTWARE, V86, P1209, DOI 10.1016/j.jss.2012.12.030
   Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P20, DOI 10.1007/978-3-642-38916-0_2
   Alberto A, 2017, INFORM SOFTWARE TECH, V81, P131, DOI 10.1016/j.infsof.2016.04.003
   Aleti A, 2018, J SYST SOFTWARE, V138, P222, DOI 10.1016/j.jss.2018.01.010
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   Antonelli F, 2020, FUTURE GENER COMP SY, V102, P746, DOI 10.1016/j.future.2019.09.006
   Arcaini P., 2015, ICST, P1
   Arcaini P, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1664
   Arcaini P, 2017, INFORM SOFTWARE TECH, V81, P52, DOI 10.1016/j.infsof.2016.01.019
   Arcaini P, 2015, SOFTW TEST VERIF REL, V25, P629, DOI 10.1002/stvr.1530
   Arcelli D, 2020, LECT NOTES COMPUT SC, V12292, P139, DOI 10.1007/978-3-030-58923-3_9
   Aydal EG, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P131, DOI 10.1109/ICST.2009.20
   Balsamo, 2005, P 5 INT WORKSHOP SOF, P37
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Bondi A., 2014, FDN SOFTWARE SYSTEM
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Calinescu R, 2021, IEEE T SOFTWARE ENG, V47, P1114, DOI 10.1109/TSE.2019.2912958
   Calinescu R, 2018, J SYST SOFTWARE, V143, P140, DOI 10.1016/j.jss.2018.05.013
   Casale Giuliano, 2017, ACM SIGMETRICS Performance Evaluation Review, V45, P246, DOI 10.1145/3199524.3199567
   Casale G, 2016, ACM T MODEL COMPUT S, V26, DOI 10.1145/2724709
   Comi D, 2020, EXERCISES COURSE COM
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   de Souza SDS, 1999, SOFTWARE QUAL J, V8, P285, DOI 10.1023/A:1008978021407
   Delgado-Pérez P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1728
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Dipietro Salvatore, 2017, P 10 EAI INT C PERF, P186, DOI [10.4108/eai, DOI 10.4108/EAI]
   Fabbri S. C. P. F., 1996, Formal Description Techniques VIII. Proceedings of the IFIP TC6 Eighth International Conference on Formal Description Techniques, P329
   Fang XW, 2021, PROC INT CONF SOFTW, P835, DOI 10.1109/ICSE43902.2021.00081
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Haskins B., 2004, P ANN INT S, V14, P1723
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Incerto E, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P51, DOI 10.1145/3427921.3450245
   Incerto E, 2017, IEEE INT CONF AUTOM, P485, DOI 10.1109/ASE.2017.8115660
   Jain R, 2008, The art of computer systems performance analysis: techniques for experimental design, measurement, simulation, and modeling
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Laurent T., MUTATION BASED ANAL, DOI [10.5281/zenodo.6545506, DOI 10.5281/ZENODO.6545506]
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lee TC, 2004, LECT NOTES COMPUT SC, V3299, P354
   Lisper B, 2017, IEEE ICST WORKSHOP, P65, DOI 10.1109/ICSTW.2017.18
   Loise T, 2017, IEEE ICST WORKSHOP, P97, DOI 10.1109/ICSTW.2017.24
   López J, 2018, INFORM SOFTWARE TECH, V103, P138, DOI 10.1016/j.infsof.2018.06.013
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Mishra K, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P80, DOI 10.1109/ISSRE.2011.14
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   OFFUTT AJ, 1989, ACM SIGSOFT, V14, P131, DOI 10.1145/75309.75324
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Petriu Dorina C., 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P219, DOI 10.1007/978-3-642-30982-3_7
   Petriu D.C., 2015, WOSP 15, P41, DOI [10.1145/2693561.2693566, DOI 10.1145/2693561.2693566]
   Petriu DC, 2021, SOFTW SYST MODEL, V20, P1777, DOI 10.1007/s10270-021-00953-3
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Pinciroli R., 2017, 10 EAI INT C PERF EV, P44
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   ShicaoUW, 2017, EX QN ACTR COGN ARCH
   Smith C.U., 2015, Proceedings of the 2015 Workshop on Challenges in Performance Methods for Software Development, P1, DOI DOI 10.1145/2693561.2693567
   Smith CU, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P175, DOI 10.1145/3185768.3186410
   Smith CU, 2010, PERFORM EVALUATION, V67, P548, DOI 10.1016/j.peva.2010.01.006
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Su GX, 2016, PROC INT CONF SOFTW, P73, DOI 10.1145/2884781.2884814
   Temple P, 2021, IEEE T SOFTWARE ENG, V47, P1511, DOI 10.1109/TSE.2019.2926971
   Tribastone M, 2013, IEEE T SOFTWARE ENG, V39, P744, DOI 10.1109/TSE.2012.66
   Trubiani C., 2013, P 9 INT ACM SIGS C Q, P69
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   Vega JJO, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P325, DOI 10.1109/QRS.2018.00045
   WOODWARD MR, 1993, SOFTWARE ENG J, V8, P211, DOI 10.1049/sej.1993.0027
   Xu J, 2012, PERFORM EVALUATION, V69, P525, DOI 10.1016/j.peva.2009.11.003
   Zhao XY, 2020, IEEE INT CONF AUTOM, P163, DOI 10.1145/3324884.3416565
NR 77
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2022
VL 191
AR 111385
DI 10.1016/j.jss.2022.111385
EA JUN 2022
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2I1JZ
UT WOS:000814741100007
OA hybrid
DA 2024-07-18
ER

PT J
AU Gharib, M
   Ceccarelli, A
   Lollini, P
   Bondavalli, A
AF Gharib, Mohamad
   Ceccarelli, Andrea
   Lollini, Paolo
   Bondavalli, Andrea
TI A cyber-physical-social approach for engineering Functional Safety
   Requirements for automotive systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Functional safety requirements; Automotive; ISO 26262; ISO/PAS 21448;
   SOTIF; Cyber-Physical-Social systems
ID TAXONOMY
AB Several approaches have been developed to assist automotive system manufacturers in designing safer vehicles by facilitating compliance with functional safety standards. However, most of these approaches either mainly focus on the technical aspects of automotive systems and ignore the social ones, or they provide inadequate analysis of such important aspects. To this end, we propose a model-based approach for modeling and analyzing the Functional Safety Requirements (FSR) for automotive systems, which considers both the technical and social aspects of such systems. This approach is based on both the ISO 26262 and ISO/PAS 21448 standards, and it proposes a detailed engineering methodology to assist designers while modeling and analyzing FSR. In particular, this approach proposes a UML profile for modeling the FSR of the automotive system starting from item definition until safety validation, and it offers constraints expressed in Object Constraint Language (OCL) to be used for the verification of FSR models. We demonstrated the applicability and usefulness of the approach relying on a realistic example from the automotive domain, and we also evaluated the usability and utility of the approach with potential end-users. (C) 2022 Elsevier Inc. All rights reserved.
C1 [Gharib, Mohamad] Univ Tartu, Inst Comp Sci, Software Engn, Tartu, Estonia.
   [Gharib, Mohamad; Ceccarelli, Andrea; Bondavalli, Andrea] Univ Florence, Florence, Italy.
   [Lollini, Paolo] Univ Florence, Fac Sci, Florence, Italy.
C3 University of Tartu; University of Florence; University of Florence
RP Gharib, M (corresponding author), Univ Tartu, Tartu, Estonia.
EM mohamad.gharib@unifi.it; andrea.ceccarelli@unifi.it;
   paolo.lollini@unifi.it; andrea.bondavalli@unifi.it
RI Gharib, Mohamad/AAA-3573-2020; Bondavalli, Andrea/ABC-7825-2020;
   Ceccarelli, Andrea/HQZ-4187-2023
OI Gharib, Mohamad/0000-0003-2286-2819; Ceccarelli,
   Andrea/0000-0002-2291-2428; bondavalli, andrea/0000-0001-7366-6530
FU European Unions Horizon 2020 research and innovation program under the
   Marie Sklodowska-Curie grant [823788-ADVANCE]; European Social Fund via
   IT Academy programme
FX This work has received funding from the European Unions Horizon 2020
   research and innovation program under the Marie Sklodowska-Curie grant
   agreement No. 823788-ADVANCE, and by the European Social Fund via IT
   Academy programme.
CR Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   [Anonymous], 2003, TECHNOMETRICS
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   Basir N, 2010, LECT NOTES COMPUT SC, V6351, P68, DOI 10.1007/978-3-642-15651-9_6
   Baumgart S, 2012, P WORKSH INT RES COM
   Beckers K, 2017, RELIAB ENG SYST SAFE, V158, P185, DOI 10.1016/j.ress.2016.09.004
   Beckers K, 2014, LECT NOTES COMPUT SC, V8666, P65, DOI 10.1007/978-3-319-10506-2_5
   Bell D, 2007, INFORM SYST FRONT, V9, P69, DOI 10.1007/s10796-006-9018-z
   Bevly D, 2016, IEEE T INTELL VEHICL, V1, P105, DOI 10.1109/TIV.2015.2503342
   BIS, 2001, 61882 BIS BS IEC
   Born M., 2010, CARS '10: Proceedings of the 1st Workshop on Critical Automotive applications, P3
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Conrad M., 2010, MBEES, P117
   Cuong Tran, 2009, 2009 IEEE International Conference on Vehicular Electronics and Safety (ICVES 2009), P97, DOI 10.1109/ICVES.2009.5400235
   Dardar R, 2012, PROC INT SYMP SOFTW, P349, DOI 10.1109/ISSREW.2012.86
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Devlin A., 2011, PSYCHOPHARMACOLOGY, V10, P193
   Doshi A, 2011, IEEE INT C INTELL TR, P1892, DOI 10.1109/ITSC.2011.6083128
   Doshi A, 2009, IEEE INT VEH SYM, P887, DOI 10.1109/IVS.2009.5164397
   Feth P, 2018, LECT NOTES COMPUT SC, V11093, P59, DOI 10.1007/978-3-319-99130-6_5
   Gharib M, 2018, LECT NOTES COMPUT SC, V10707, P194, DOI 10.1007/978-3-319-99843-5_18
   Gharib M, 2019, IEEE HI ASS SYS ENGR, P74, DOI 10.1109/HASE.2019.00021
   Giese H, 2004, LECT NOTES COMPUT SC, V3219, P166
   Gosavi MA, 2018, IEEE SOUTHEASTCON
   Habli I., 2016, MODEL BASED ASSURANC
   Hayashi R, 2012, VEHICLE SYST DYN, V50, P151, DOI 10.1080/00423114.2012.672748
   Hegeman G., 2020, EUR J TRANSP INFRAST, V5, P281
   Helmreich RL, 2000, BRIT MED J, V320, P781, DOI 10.1136/bmj.320.7237.781
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoess A., 2009, ITS WORLD C NY US JU
   ISO, 2011, 26262 ISO FDIS
   ISO-International Organization for Standardization, 2019, 21448 ISO PAS
   Jesty PH, 2000, LESSONS IN SYSTEM SAFETY, P90
   Kirovskii O.M., 2019, 26262 ISO
   Kuge N., 2010, SAE TECHNICAL PAPER, V1
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Lawton R, 2005, ACCIDENT ANAL PREV, V37, P235, DOI 10.1016/j.aap.2004.08.001
   Lee JohnD., 2008, DRIVER DISTRACTION T, P31, DOI DOI 10.1201/9781420007497.CH3
   McCall JC, 2007, P IEEE, V95, P374, DOI [10.1109/JPROC.2006.888388, 10.1109/JPROC.2007.888388]
   McFadden K.L., 1999, Journal of Air Transport Management, V5, P177, DOI [https://doi.org/10.1016/S0969-6997(99)00011-3, DOI 10.1016/S0969-6997(99)00011-3]
   Mehrpouyan H., 2012, AER C, P1
   Meshkati N., 1991, ORG ENV, V5, P133, DOI [10.1177/108602669100500203, DOI 10.1177/108602669100500203]
   OMG-OCL, 2014, OBJ CONSTR LANG
   Palin R., 2011, 6 IET INT C SYST SAF, P12
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   RASMUSSEN J, 1982, J OCCUP ACCID, V4, P311, DOI 10.1016/0376-6349(82)90041-4
   Reason J., 1991, Human error, V29
   Regan M.A., 2005, AUSTR AS TRANSP RES, V27, P1
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Ridderhofl W, 2007, LECT NOTES COMPUT SC, V4680, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saffarian M., 2012, P HUMAN FACTORS ERGO, P2296, DOI [10.1177/1071181312561483, DOI 10.1177/1071181312561483]
   Salmon PM., 2005, Human error and road transport: Phase one - Literature review
   Sathyanarayana A, 2010, IEEE INT VEH SYM, P1236, DOI 10.1109/IVS.2010.5547960
   Schubert R, 2010, IEEE T INTELL TRANSP, V11, P607, DOI 10.1109/TITS.2010.2049353
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Senders J., 1991, Human error: Cause, prediction, and reduction
   Shappell SA, 1997, INT J AVIAT PSYCHOL, V7, P269, DOI 10.1207/s15327108ijap0704_2
   Sinha P, 2011, RELIAB ENG SYST SAFE, V96, P1349, DOI 10.1016/j.ress.2011.03.013
   Tawari A, 2014, IEEE INT VEH SYM, P115, DOI 10.1109/IVS.2014.6856600
   Travassos GH., 2016, CLEI ELECT J, V18, P4, DOI 10.19153/cleiej.18.1.4
   Trochim W.M. K., 2006, Cengage Learning
   Venable John, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P423, DOI 10.1007/978-3-642-29863-9_31
   Wagner Stefan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P269, DOI 10.1109/ISSRE.2010.31
   Waldmann T., 2010, PREDICTING DESIGN IN
   Walker A, 2019, COMM COM INF SC, V1060, P575, DOI 10.1007/978-3-030-28005-5_44
   Weaver R., 2004, ELEMENTS
   WEICK KE, 1990, J MANAGE, V16, P571, DOI 10.1177/014920639001600304
   Wenjun Li, 2011, 2011 IEEE International Conference on Computer Science and Automation Engineering (CSAE), P744, DOI 10.1109/CSAE.2011.5952781
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wohlin C., 2012, Experimentation in Software Engineering
   Yu E., 1995, MODELING STRATEGIC R
   Zhang HK, 2010, INT CONF BIOMED, P2658, DOI 10.1109/BMEI.2010.5639860
NR 74
TC 4
Z9 4
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2022
VL 189
AR 111310
DI 10.1016/j.jss.2022.111310
EA MAR 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 1C5VK
UT WOS:000793186300003
DA 2024-07-18
ER

PT J
AU Razian, M
   Fathian, M
   Bahsoon, R
   Toosi, AN
   Buyya, R
AF Razian, Mohammadreza
   Fathian, Mohammad
   Bahsoon, Rami
   Toosi, Adel N.
   Buyya, Rajkumar
TI Service composition in dynamic environments: A systematic review and
   future directions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Service composition; Uncertainty; Cloud computing; Distributed services
ID QOS; CLOUD; IOT; FRAMEWORK; ALGORITHM; MOBILE; NETWORKS; OPTIMIZATION;
   INFORMATION; ALLOCATION
AB Distributed computing paradigms such as cloud, mobile, Internet of Things, and Fog have enabled new modalities for building enterprise architectures through service composition. The fundamental premise is that the application can benefit from functionally equivalent services that can be traded in the cloud or services repositories. These services can vary in their Quality of Services (QoS) and cost provision. Accordingly, the problem of service composition is the process of choosing a configuration of candidate services from a pool of available ones, considering QoS attribute, cost, and users' preference. Due to the inherent dynamism in service computing environments and communication networks, the advertised QoS values might fluctuate; therefore, service composition under uncertainty is inevitable and challenges satisfying Services Level Agreement (SLA). In this paper, we present a systematic literature review to investigate and classify the existing studies in service composition under uncertainty. We identified 100 relevant studies published between the year 2007 and 2020. To the best of our knowledge, this work is the first to explicate a focused systematic review, classification, taxonomy of approaches, and trends along with their assumptions and applications; and to discuss future research directions in service composition under uncertainty. (C) 2022 Elsevier Inc. All rights reserved.
C1 [Razian, Mohammadreza; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Melbourne, Vic 3000, Australia.
   [Razian, Mohammadreza; Fathian, Mohammad] Iran Univ Sci & Technol, Sch Ind Engn, Tehran, Iran.
   [Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
   [Toosi, Adel N.] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 University of Melbourne; Iran University Science & Technology;
   University of Birmingham; Monash University
RP Fathian, M (corresponding author), Iran Univ Sci & Technol, Sch Ind Engn, Tehran, Iran.
EM razian.mr@gmail.com; fathian@iust.ac.ir; r.bahsoon@cs.bham.ac.uk;
   adel.n.toosi@monash.edu; rbuyya@unimelb.edu.au
RI fathian, mohammad/S-8975-2018; Buyya, Rajkumar/C-3424-2009; Toosi, Adel
   N./H-7411-2019; Razian, Mohammadreza/GXA-3201-2022
OI Toosi, Adel N./0000-0001-5655-5337; Razian,
   Mohammadreza/0000-0001-5074-1788
CR A-Masri E, 2007, IEEE IC COMP COM NET, P529
   Al-Masri E., 2007, P 16 INT C WORLD WID, P1257, DOI DOI 10.1145/1242572.1242795
   ALRIFAI M., 2010, Proceedings of the 19th international conference. WWW '10, P11, DOI [10. 1145/1772690. 1772693, DOI 10.1145/1772690.1772693]
   Amiri B, 2009, INT J ADV MANUF TECH, V45, P199, DOI 10.1007/s00170-009-1958-2
   Anisetti Marco, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P475, DOI 10.1109/ICWS.2013.70
   Anisetti M, 2020, J PARALLEL DISTR COM, V135, P203, DOI 10.1016/j.jpdc.2019.09.003
   Anisetti M, 2019, ACM T WEB, V13, DOI 10.1145/3267468
   [Anonymous], 2010, CLOUD COMPUTING PRIN
   [Anonymous], 2008, P 17 INT C WORLD WID, DOI DOI 10.1145/1367497.1367605
   Asghari P, 2018, J NETW COMPUT APPL, V120, P61, DOI 10.1016/j.jnca.2018.07.013
   Avila SD, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P182, DOI 10.1109/SOSE.2013.28
   Aydeger A, 2019, FUTURE GENER COMP SY, V94, P496, DOI 10.1016/j.future.2018.11.045
   Barbon F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P63
   Barnes BJ, 2008, ICS'08: PROCEEDINGS OF THE 2008 ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, P368
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Baudrit C, 2006, IEEE T FUZZY SYST, V14, P593, DOI 10.1109/TFUZZ.2006.876720
   Behzadian M, 2010, EUR J OPER RES, V200, P198, DOI 10.1016/j.ejor.2009.01.021
   Ben Mahfoudh Houssem, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P257, DOI 10.1007/978-3-030-03424-5_17
   Bertsimas D, 2004, OPER RES, V52, P35, DOI 10.1287/opre.1030.0065
   Bonfim MS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3172866
   Börzsönyi S, 2001, PROC INT CONF DATA, P421, DOI 10.1109/ICDE.2001.914855
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bu C, 2019, J NETW COMPUT APPL, V125, P130, DOI 10.1016/j.jnca.2018.10.010
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Caporuscio M, 2016, IEEE T SOFTWARE ENG, V42, P136, DOI 10.1109/TSE.2015.2476797
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Chen IR, 2014, IEEE WCNC, P3444, DOI 10.1109/WCNC.2014.6953138
   Chen MM, 2016, LECT NOTES COMPUT SC, V10009, P122, DOI 10.1007/978-3-319-47846-3_9
   Chen NX, 2017, 2017 IEEE FOG WORLD CONGRESS (FWC), P43
   Chen NX, 2018, IEEE COMMUN MAG, V56, P95, DOI 10.1109/MCOM.2017.1700465
   Chen NX, 2018, IEEE T SERV COMPUT, V11, P49, DOI 10.1109/TSC.2016.2533348
   Chen T, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190507
   Chen X, 2013, IEEE T SERV COMPUT, V6, P35, DOI 10.1109/TSC.2011.35
   Chen Y., 2013, J DIGIT INF MANAGE, V11, P109
   Chen YP, 2016, MATH PROBL ENG, V2016, DOI 10.1155/2016/9480769
   Chen Z, 2017, KNOWL-BASED SYST, V138, P188, DOI 10.1016/j.knosys.2017.10.001
   Chugh T, 2019, SOFT COMPUT, V23, P3137, DOI 10.1007/s00500-017-2965-0
   Ciszkowski T, 2012, TELECOMMUN SYST, V51, P283, DOI 10.1007/s11235-011-9435-2
   D'Angelo M, 2020, FUTURE GENER COMP SY, V108, P210, DOI 10.1016/j.future.2020.02.027
   Dastjerdi AV, 2014, IEEE T CLOUD COMPUT, V2, P1, DOI 10.1109/TCC.2014.2300855
   de Almeida I. B. F., 2019, IEEE COMMUN SURV TUT
   de la Iglesia DG, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2724719
   De Sanctis M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P59, DOI 10.1109/ICSA-C50368.2020.00019
   Deng SG, 2016, IEEE T CYBERNETICS, V46, P1807, DOI 10.1109/TCYB.2015.2446443
   Efstathiou D, 2014, J UNIVERS COMPUT SCI, V20, P1089
   Elhabbash A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P180, DOI 10.1109/ICWS.2017.31
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Falas L, 2013, IFIP ADV INF COMM TE, V394, P45
   Fathian M, 2007, APPL MATH COMPUT, V190, P1502, DOI 10.1016/j.amc.2007.02.029
   Ferry N, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3125621
   Gai KK, 2018, J PARALLEL DISTR COM, V111, P126, DOI 10.1016/j.jpdc.2017.08.001
   Garlan David, 2010, P FSE SDP WORKSH FUT, P125, DOI [10.1145/1882362.1882389, DOI 10.1145/1882362.1882389]
   Ghazanfari M, 2007, APPL MATH COMPUT, V192, P56, DOI 10.1016/j.amc.2007.02.144
   Gogouvitis S.V., 2018, FUTURE GENER COMP SY
   Golbeck J, 2006, LECT NOTES COMPUT SC, V3986, P93
   Gong Y., 2014, INT C ADV DAT INF EN, P563
   Guidara I, 2016, P IEEE I C SERV COMP, P267, DOI 10.1109/SCC.2016.42
   Guo J., 2018, THESIS VIRGINIA TECH
   Guo Y, 2017, INT J WEB GRID SERV, V13, P425, DOI 10.1504/IJWGS.2017.10008332
   Hashmi K, 2016, INFORM SCIENCES, V349, P248, DOI 10.1016/j.ins.2016.02.024
   Hezavehi S.M., 2021, REPLICATION MAT ACM, DOI DOI 10.5281/ZENODO.4954106
   Hofstede G., 2011, DIMENSIONALIZING CUL, DOI DOI 10.9707/2307-0919.1014
   Huang CX, 2017, MOB INF SYST, V2017, DOI 10.1155/2017/3254908
   Huiyuan Zheng, 2010, Proceedings of the 2010 Asia-Pacific Services Computing Conference (APSCC 2010), P131, DOI 10.1109/APSCC.2010.19
   Hwang SY, 2007, INFORM SCIENCES, V177, P5484, DOI 10.1016/j.ins.2007.07.011
   Ivanovic D, 2014, LECT NOTES COMPUT SC, V8831, P394, DOI 10.1007/978-3-662-45391-9_29
   Jang J-SR., 1997, IEEE T AUTOMAT CONTR, V42, P1482, DOI DOI 10.1109/TAC.1997.633847
   Jatoth C, 2019, FUTURE GENER COMP SY, V94, P185, DOI 10.1016/j.future.2018.11.022
   Jatoth C, 2018, FUTURE GENER COMP SY, V86, P1008, DOI 10.1016/j.future.2017.07.042
   Javadzadeh G, 2020, WIREL NETW, V26, P1433, DOI 10.1007/s11276-019-02208-y
   Jian X, 2016, OPTIK, V127, P2102, DOI 10.1016/j.ijleo.2015.10.156
   Johannes A, 2015, LECT NOTES COMPUT SC, V9532, P669, DOI 10.1007/978-3-319-27161-3_61
   Jurca R., 2007, PROC INT C WORLD WID, P1003
   Kardani-Moghaddam S, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5306
   Karim R, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P229, DOI 10.1109/CLOUD.2015.39
   Kazem AAP, 2015, EXPERT SYST APPL, V42, P6828, DOI 10.1016/j.eswa.2015.04.045
   Khanouche ME, 2019, INFORM SCIENCES, V482, P419, DOI 10.1016/j.ins.2019.01.015
   Kil H, 2016, INT J WEB GRID SERV, V12, P42, DOI 10.1504/IJWGS.2016.074180
   Kitchenham B., 2004, ARXIV
   Kolodner J., 2014, CASE BASED REASONING
   Kumar S., 2018, MULTI TENANT CLOUD S
   Kuter U, 2009, LECT NOTES COMPUT SC, V5823, P344, DOI 10.1007/978-3-642-04930-9_22
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lei Yu, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P393, DOI 10.1109/SERVICES.2013.33
   Li D, 1998, COMPUT MATH APPL, V35, P99, DOI 10.1016/S0898-1221(97)00282-4
   Li GS, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND APPLICATIONS (CSA), P351, DOI 10.1109/CSA.2015.10
   Lian DF, 2018, ACM T INFORM SYST, V36, DOI 10.1145/3182166
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Liu L, 2012, COMM COM INF SC, V312, P559
   Liu Y, 2019, IEEE NETWORK, V33, P111, DOI 10.1109/MNET.2019.1800254
   Liu ZZ, 2016, KNOWL-BASED SYST, V97, P123, DOI 10.1016/j.knosys.2016.01.010
   Lixing Li, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P584, DOI 10.1109/ICWS.2012.25
   Longchang Zhang, 2011, Journal of Networks, V6, P1296, DOI 10.4304/jnw.6.9.1296-1304
   Luo X, 2015, IEEE ACCESS, V3, P2260, DOI 10.1109/ACCESS.2015.2498191
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Mahmud R., 2018, Internet of Everything, P103, DOI [10.1007/978-981-10-5861-5_5, DOI 10.1007/978-981-10-5861-5_5]
   Malik Z., 2010, INT C FRONT INF TECH, P23
   Malik Z, 2010, LECT NOTES COMPUT SC, V6470, P471, DOI 10.1007/978-3-642-17358-5_32
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Mezni H, 2018, SOFTWARE PRACT EXPER, V48, P1285, DOI 10.1002/spe.2575
   Moghaddam SK, 2019, J PARALLEL DISTR COM, V126, P107, DOI 10.1016/j.jpdc.2018.12.002
   Morabito R, 2018, IEEE NETWORK, V32, P102, DOI 10.1109/MNET.2018.1700175
   Moreno-Vozmediano R, 2018, J GRID COMPUT, V16, P39, DOI 10.1007/s10723-017-9417-z
   Mostafa A., 2015, IEEE T SERV COMPUT, P1, DOI DOI 10.1109/TSC.2015.2443785
   Moustafa Ahmed, 2018, PRIMA 2018: Principles and Practice of Multi-Agent Systems. 21st International Conference. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11224), P296, DOI 10.1007/978-3-030-03098-8_18
   Moustafa Ahmed, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P473, DOI 10.1007/978-3-642-31095-9_31
   Mu B, 2014, LECT NOTES ARTIF INT, V8818, P589, DOI 10.1007/978-3-319-11740-9_54
   Niu S, 2019, INT J WEB GRID SERV, V15, P1
   Njima C.B., 2016, INT C COMP SYST APPL, P1
   Peng SS, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P114, DOI 10.1109/ICWS.2017.23
   Pernici B., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P99, DOI 10.1109/SERVICES.2011.33
   Pino L., 2017, IEEE T SERV COMPUT
   Prochart G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, P379
   Qi Yu, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P34, DOI 10.1109/ICWS.2013.15
   Rahmani AM, 2018, FUTURE GENER COMP SY, V78, P641, DOI 10.1016/j.future.2017.02.014
   Ramacher Rene, 2013, 2013 IEEE International Conference on Services Computing (SCC), P184, DOI 10.1109/SCC.2013.44
   Ramacher R., 2012, INT C SERV OR COMP, P237
   Ramacher R, 2014, BUS INFORM SYST ENG+, V6, P141, DOI 10.1007/s12599-014-0325-5
   Razian M., 2020, IEEE INTERNET THINGS
   Razian M, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110557
   Roca S, 2020, J BIOMED INFORM, V102, DOI 10.1016/j.jbi.2019.103305
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Rong WG, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P445, DOI 10.1109/ICWS.2009.113
   Rosario Sidney, 2008, IEEE Transactions on Services Computing, V1, P187, DOI 10.1109/TSC.2008.17
   San-Yih Hwang, 2015, IEEE Transactions on Services Computing, V8, P467, DOI 10.1109/TSC.2014.2338851
   Santos EA, 2018, J SYST SOFTWARE, V146, P14, DOI 10.1016/j.jss.2018.07.077
   Schuller D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P66, DOI 10.1109/ICWS.2012.50
   Schuller D, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P361, DOI 10.1109/ICWS.2014.59
   Shangguang Wang, 2011, IEEE INFOCOM 2011 - IEEE Conference on Computer Communications. Workshops, P666, DOI 10.1109/INFCOMW.2011.5928896
   Shao WJ, 2019, ASIA COMMUN PHOTON
   Sharma Y, 2019, FUTURE GENER COMP SY, V94, P620, DOI 10.1016/j.future.2018.11.052
   Shevtsov S, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3328730
   Sora I, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P197, DOI 10.1109/SACI.2015.7208198
   Stephanow P, 2017, INT CON ADV INFO NET, P931, DOI 10.1109/AINA.2017.107
   Sugeno M., 1985, IND APPL FUZZY CONTR
   Sun MY, 2019, FUTURE GENER COMP SY, V100, P1017, DOI 10.1016/j.future.2019.05.070
   Sun Q., 2013, INFORMATION, V16, P2001
   Sun XN, 2018, P IEEE I C SERV COMP, P121, DOI 10.1109/SCC.2018.00023
   Tabassum H, 2019, IEEE COMMUN SURV TUT, V21, P2288, DOI 10.1109/COMST.2019.2907195
   Tafsiri SA, 2018, J SYST SOFTWARE, V137, P322, DOI 10.1016/j.jss.2017.11.044
   Tan TH, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P563, DOI 10.1145/2566486.2568048
   Toosi A. N., 2011, Proceedings of the 2011 IEEE 13th International Conference on High Performance Computing and Communication (HPCC 2011). 2011 IEEE International Workshop on Future Trends of Distributed Computing Systems (FTDCS 2011). Workshops of the 2011 International Conference on Ubiquitous Intelligence and Computing (UIC 2011). Workshops of the 2011 International Conference on Autonomic and Trusted Computing (ATC 2011), P279, DOI 10.1109/HPCC.2011.44
   Torra V, 2002, INT J INTELL SYST, V17, P531, DOI 10.1002/int.10036
   Tripathy Ajaya Kumar, 2011, International Journal of Computer Information Systems and Industrial Management Applications, V3, P924
   Tripathy AK, 2018, APPL SOFT COMPUT, V68, P136, DOI 10.1016/j.asoc.2018.03.038
   Pham TM, 2020, COMPUT NETW, V166, DOI 10.1016/j.comnet.2019.106989
   Urbieta A, 2017, FUTURE GENER COMP SY, V76, P262, DOI 10.1016/j.future.2016.12.038
   Varshney P, 2020, SOFTWARE PRACT EXPER, V50, P558, DOI 10.1002/spe.2699
   Veeresh P., 2017, International Journal of Communication Networks and Information Security, V9, P491
   Velasquez K, 2017, 2017 IEEE 5TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2017), P329, DOI 10.1109/FiCloud.2017.49
   Wang C, 2021, IEEE T EMERG TOP COM, V9, P1386, DOI 10.1109/TETC.2020.2978866
   Wang H., 2016, INT C SERVICE ORIENT, P677
   Wang HB, 2015, LECT NOTES COMPUT SC, V9435, P203, DOI 10.1007/978-3-662-48616-0_13
   Wang HB, 2010, LECT NOTES COMPUT SC, V6470, P92, DOI 10.1007/978-3-642-17358-5_7
   Wang JP, 2011, IEEE T SERV COMPUT, V4, P44, DOI 10.1109/TSC.2010.46
   Wang LX, 1998, FUZZY SET SYST, V93, P223, DOI 10.1016/S0165-0114(96)00197-2
   Wang PW, 2016, IEEE T SERV COMPUT, V9, P551, DOI 10.1109/TSC.2015.2412943
   Wang S., 2018, IEEE T SERV COMPUT
   Wang S., 2018, FUTURE GENER COMP SY
   Wang SG, 2017, FUTURE GENER COMP SY, V74, P158, DOI 10.1016/j.future.2015.12.013
   Wang XD, 2010, INT CONF COMP SCI, P7, DOI 10.1109/ICCSIT.2010.5564480
   Wang XS, 2015, 2015 12TH WEB INFORMATION SYSTEM AND APPLICATION CONFERENCE (WISA), P147, DOI 10.1109/WISA.2015.14
   Wei Jiang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P218, DOI 10.1109/ICWS.2012.45
   Wei Y., 2017, INT C COLL COMP NETW, P120
   Wen Z, 2017, IEEE INTERNET COMPUT, V21, P16, DOI 10.1109/MIC.2017.36
   Weyns D, 2020, An introduction to self-adaptive systems: a contemporary software engineering perspective
   Whitelaw Gail, 2018, Int J Audiol, P1, DOI 10.1080/14992027.2018.1514471
   Wiesemann W, 2008, IEEE ACM INT SYMP, P226
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wu LB, 2019, ACM T INFORM SYST, V37, DOI 10.1145/3298988
   Wu Z, 2010, COMPUT J, V53, P219, DOI 10.1093/comjnl/bxp039
   Xianzhi Wang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P359, DOI 10.1109/ICWS.2012.114
   Xu C, 2018, MIDDLEWARE INDUSTRY'18: PROCEEDINGS OF THE 2018 ACM/IFIP/USENIX MIDDLEWARE CONFERENCE (INDUSTRIAL TRACK), P32, DOI 10.1145/3284028.3284033
   Xu JJ, 2018, WIRELESS PERS COMMUN, V102, P1009, DOI 10.1007/s11277-017-5129-8
   Xu JJ, 2017, PR IEEE I C PROGR IN, P230, DOI 10.1109/PIC.2017.8359548
   Xu LD, 2018, INT J PROD RES, V56, P2941, DOI 10.1080/00207543.2018.1444806
   Xue F, 2019, ACM T INFORM SYST, V37, DOI 10.1145/3314578
   Yao LN, 2011, LECT NOTES COMPUT SC, V7084, P566, DOI 10.1007/978-3-642-25535-9_42
   Yasmina RZ, 2018, IFIP ADV INF COMM TE, V522, P622, DOI 10.1007/978-3-319-89743-1_53
   Ye H., 2018, WEB SERVICE COMPOSIT, P146
   Ye Z, 2016, IEEE T SERV COMPUT, V9, P382, DOI 10.1109/TSC.2014.2373366
   Ye Z, 2014, ACM T INTERNET TECHN, V14, P255, DOI 10.1145/2651420
   Yechun Jiang, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P211, DOI 10.1109/ICWS.2011.38
   Yi Xia, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P428, DOI 10.1109/ICWS.2011.36
   Yu L, 2015, INT C PAR DISTRIB SY, P821, DOI 10.1109/ICPADS.2015.110
   Yu L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P731, DOI 10.1109/ICWS.2015.103
   Yu L, 2014, J WEB ENG, V13, P450
   Yu Q, 2010, IEEE T SERV COMPUT, V3, P16, DOI 10.1109/TSC.2010.7
   Yu Qi, 2012, P IEEE INT C WEB SER, P194
   Zambonelli F, 2011, PROCEDIA COMPUT SCI, V7, P197, DOI 10.1016/j.procs.2011.09.006
   Zhang HT, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P306, DOI 10.1109/ICWS.2018.00048
   Zhang JH, 2010, 2010 INT C COMPUTER, V5, pV5
   Zhang L., 2012, J INF COMPUT SCI, V9, P135
   Zhang S, 2019, NONLINEAR DYNAM, V95, P3091, DOI 10.1007/s11071-018-04743-3
   Zhang XQ, 2019, J SYST SOFTWARE, V147, P147, DOI 10.1016/j.jss.2018.09.084
   ZhangGuoping, 2012, PROCEEDINGS OF 2012 2ND INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT 2012), P1934, DOI 10.1109/ICCSNT.2012.6526297
   Zhao LP, 2019, ACM T WEB, V13, DOI 10.1145/3340294
   Zhao X, 2015, INFORM SCIENCES, V316, P370, DOI 10.1016/j.ins.2014.11.016
   Zheng HY, 2016, ACM T WEB, V10, DOI 10.1145/2876513
   Zheng HY, 2011, LECT NOTES COMPUT SC, V7084, P47, DOI 10.1007/978-3-642-25535-9_4
   Zheng ZB, 2014, IEEE T SERV COMPUT, V7, P32, DOI 10.1109/TSC.2012.34
   Zheng ZB, 2013, IEEE T SERV COMPUT, V6, P289, DOI 10.1109/TSC.2011.59
   Zheng ZB, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P437, DOI 10.1109/ICWS.2009.30
   Zhou JJ, 2017, INT J ADV MANUF TECH, V88, P3371, DOI 10.1007/s00170-016-9034-1
   Zhu M, 2018, PROCEDIA COMPUT SCI, V141, P56, DOI 10.1016/j.procs.2018.10.149
   Zibin Zheng, 2010, 2010 IEEE International Conference on Web Services (ICWS), P83, DOI 10.1109/ICWS.2010.10
NR 207
TC 19
Z9 19
U1 7
U2 27
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2022
VL 188
AR 111290
DI 10.1016/j.jss.2022.111290
EA MAR 2022
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N9EY
UT WOS:000783133900011
DA 2024-07-18
ER

PT J
AU Lei, MG
   Li, H
   Li, J
   Aundhkar, N
   Kim, DK
AF Lei, Maggie
   Li, Hao
   Li, Ji
   Aundhkar, Namrata
   Kim, Dae-Kyoo
TI Deep learning application on code clone detection: A review of current
   knowledge
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Code clone; Code smell; Deep learning; Duplicate code; Machine learning;
   Literature review
AB Bad smells in code are indications of low code quality representing potential threats to the maintainability and reusability of software. Code clone is a type of bad smells caused by code fragments that have the same functional semantics with syntactic variations. In the recent years, the research on duplicate code has been dramatically geared up by deep learning techniques powered by advances in computing power. However, there exists little work studying the current state-of-art and future prospects in the area of applying deep learning to code clone detection. In this paper, we present a systematic review of the literature on the application of deep learning on code clone detection. We aim to find and study the most recent work on the subject, discuss their limitations and challenges, and provide insights on the future work. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Lei, Maggie; Li, Hao; Li, Ji; Aundhkar, Namrata; Kim, Dae-Kyoo] Oakland Univ, Comp Sci & Engn, Rochester, MI 48309 USA.
C3 Oakland University
RP Kim, DK (corresponding author), Oakland Univ, Comp Sci & Engn, Rochester, MI 48309 USA.
EM kim2@oakland.edu
RI Kim, Daekyoo/HGE-1133-2022
OI Kim, Daekyoo/0000-0002-6123-2900; Aundhkar, Namrata/0000-0002-5572-997X
CR [Anonymous], 2018, REFACTORING IMPROVIN
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Balas VE., 2019, Handbook of deep learning applications
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Bouaziz M, 2016, IEEE W SP LANG TECH, P218, DOI 10.1109/SLT.2016.7846268
   Chen L, 2019, CF '19 - PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P174, DOI 10.1145/3310273.3321560
   Cheng X, 2017, IEICE T INF SYST, VE100D, P273, DOI 10.1587/transinf.2016EDP7334
   Dang S., 2015, INT J SCI RES, V4, P1903
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   Ed B., 2016, WE BUILD CODE NETFLI
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Gao Y, 2019, PROC IEEE INT CONF S, P145, DOI 10.1109/ICSME.2019.00025
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Gu Y., 2019, P ICIS
   Guo CK, 2020, IEEE ACCESS, V8, P24948, DOI 10.1109/ACCESS.2020.2966532
   Hua W., 2020, IEEE T RELIAB
   Huo X., 2016, IJCAI, P1606
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kelleher JD, 2019, MIT PRESS ESSENT, P1
   Kitchenham B., 2007, 2007001 EBSE
   Koehren W., 2018, NEURAL NETWORK EMBED
   Le Quoc V., 2014, P INT C MACH LEARN I
   Letuchy E, 2021, FACEBOOK CHAT
   Lewis J., 2014, MICROSERVICES
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Y., 2016, P 4 INT C LEARNING R
   Liu Z., 2020, Introduction to Graph Neural Networks, DOI DOI 10.1007/978-3-031-01587-8
   Meng Y, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/5027198
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mikolov Tomas, 2013, Preprints
   Min H, 2019, PROCEEDINGS OF THE 2019 3RD INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2019), P9, DOI 10.1145/3312662.3312707
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Narayanan A., 2017, Graph2vec: Learning distributed representations of graphs
   Nichols L, 2019, LECT NOTES COMPUT SC, V11424, P247, DOI 10.1007/978-3-030-16722-6_14
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Reinhold E., 2016, REWRITING ENG OPPORT
   Roy CK, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P26, DOI 10.1109/SANER.2018.8330194
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini Neha, 2018, Procedia Computer Science, V132, P718, DOI 10.1016/j.procs.2018.05.080
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Sheneamer A, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P701, DOI 10.1109/ICMLA.2018.00111
   Socher R., 2011, P C EMP METH NAT LAN, P151
   Stubberud P, 1998, IEEE WORLD CONGRESS ON COMPUTATIONAL INTELLIGENCE, P2214, DOI 10.1109/IJCNN.1998.687204
   Sullivan C, 2019, P DAT INN SUMM
   Svajlenko J, 2017, PROC IEEE ACM INT C, P27, DOI 10.1109/ICSE-C.2017.3
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Vislayski T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P512, DOI 10.1109/SANER.2018.8330250
   Wang C, 2019, P 28 ACM SIGSOFT INT
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wu XF, 2020, INT C PROGRAM COMPRE, P172, DOI 10.1145/3387904.3389254
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yuan Y., 2020, P 6 IEEE INT C DEP S
   Zeng J, 2019, IEEE ACCESS, V7, P125062, DOI 10.1109/ACCESS.2019.2938825
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 72
TC 19
Z9 20
U1 3
U2 25
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2022
VL 184
AR 111141
DI 10.1016/j.jss.2021.111141
EA NOV 2021
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XC7WF
UT WOS:000722219800003
DA 2024-07-18
ER

PT J
AU Garousi, V
   Keles, AB
   Balaman, Y
   Güler, ZÖ
   Arcuri, A
AF Garousi, Vahid
   Keles, Alper Bugra
   Balaman, Yunus
   Guler, Zeynep Ozdemir
   Arcuri, Andrea
TI Model-based testing in practice: An experience report from the web
   applications domain
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Test automation; Model-based testing; Web
   applications; Experience report; Applied research report
ID SOFTWARE; INDUSTRY
AB In the context of a software testing company, we have deployed the model-based testing (MBT) approach to take the company's test automation practices to higher levels of maturity and capability. We have chosen, from a set of open-source/commercial MBT tools, an open-source tool named GraphWalker, and have pragmatically used MBT for end-to-end test automation of several large web and mobile applications under test. The MBT approach has provided, so far in our project, various tangible and intangible benefits in terms of improved test coverage (number of paths tested), improved test-design practices, and also improved real-fault detection effectiveness. The goal of this experience report (applied research report), done based on "action research", is to share our experience of applying and evaluating MBT as a software technology (technique and tool) in a real industrial setting. We aim at contributing to the body of empirical evidence in industrial application of MBT by sharing our industry-academia project on applying MBT in practice, the insights that we have gained, and the challenges and questions that we have faced and tackled so far. We discuss an overview of the industrial setting, provide motivation, explain the events leading to the outcomes, discuss the challenges faced, summarize the outcomes, and conclude with lessons learned, take-away messages, and practical advices based on the described experience. By learning from the best practices in this paper, other test engineers could conduct more mature MBT in their test projects. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Garousi, Vahid] Queens Univ Belfast, Belfast, Antrim, North Ireland.
   [Garousi, Vahid] Bahar Software Engn Consulting Corp, Carrickfergus, Antrim, North Ireland.
   [Keles, Alper Bugra; Balaman, Yunus; Guler, Zeynep Ozdemir] Testinium AS, Istanbul, Turkey.
   [Arcuri, Andrea] Kristiania Univ Coll, Oslo, Norway.
   [Arcuri, Andrea] Oslo Metropolitan Univ, Oslo, Norway.
C3 Queens University Belfast; Kristiania University College; Oslo
   Metropolitan University (OsloMet)
RP Garousi, V (corresponding author), Queens Univ Belfast, Belfast, Antrim, North Ireland.; Garousi, V (corresponding author), Bahar Software Engn Consulting Corp, Carrickfergus, Antrim, North Ireland.
EM v.garousi@qub.ac.uk; alper.keles@testinium.com;
   yunus.balaman@testinium.com; zeynep.ozdemir@testinium.com;
   andrea.arcuri@kristiania.no
RI Ozdemir Guler, Zeynep/AAB-1781-2022
OI Garousi, Vahid/0000-0001-6590-7576
FU European ITEA3 program via the "TESTOMAT (The Next Level of Test
   Automation) [16032]; Scientific and Technological Re-search Council of
   Turkey (TuBTAK) [9180076]; Research Council of Norway [274385]
FX This work was supported by the European ITEA3 program via the "TESTOMAT
   (The Next Level of Test Automation) "project with grant number 16032, by
   the Scientific and Technological Re-search Council of Turkey (TuBTAK)
   with grant number 9180076, and also by the Research Council of Norway
   with grant number 274385.
CR [Anonymous], 1995, Design patterns for object-oriented software development
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Artho C.V., 2013, P112, DOI 10.1007/978-3-319-03077-7_8
   Belinfante A, 2010, LECT NOTES COMPUT SC, V6015, P266, DOI 10.1007/978-3-642-12002-2_21
   Biffl S., 2006, VALUE BASED SOFTWARE, DOI [10.1007/3-540-29263-2, DOI 10.1007/3-540-29263-2]
   Blackburn M.R., 2006, INFORM 2006, DOI [10.1007/11526841_37, DOI 10.1007/11526841_37]
   Blome A., 2013, 2013 IEEE 6 INT C, P471, DOI [10.1109/ICST.2013.65, DOI 10.1109/ICST.2013.65]
   Borjesson E., 2012, P350, DOI 10.1109/ICST.2012.115
   Clarke P., 2016, 2016 IEEEACM INT C, P86, DOI [10.1145/2904354.2904369, DOI 10.1145/2904354.2904369]
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   Dias Neto A.C., 2007, P INT WORKSH EMP ASS, P31, DOI [10.1145/1353673, DOI 10.1145/1353673]
   Dias A, 2008, IEEE SOFTWARE, V25, P10
   Eldh S., 2011, THESIS MALARDALEN U
   Elmendorf W.R., 1970, AUTOMATED DESIGN PRO
   Elodie B., 2018, P224, DOI 10.1109/ICSTW.2018.00053
   Ernits J, 2009, LECT NOTES COMPUT SC, V5826, P211
   Garousi V., 2017, P 8 ACM SIGSOFT INT, P21, DOI 10.1145/3121245
   Garousi V., INT C COMP SCI ITS A, P458, DOI [10.1007/978-3-030-58802-1_33, DOI 10.1007/978-3-030-58802-1_33]
   Garousi V., 2021, Data set: MBT of testinium-test suite and demo video run of the test suite, DOI DOI 10.5281/ZENODO.4642018
   Garousi V., 2020, NO IR DEV C NIDEVCON
   Garousi V., 2006, THESIS CARLETON U, pNON
   Garousi V., 2019, P TURK NAT SOFTW ENG
   Garousi V, 2022, IEEE SOFTWARE, V39, P71, DOI 10.1109/MS.2021.3061930
   Garousi V, 2020, IEEE SOFTWARE, V37, P65, DOI 10.1109/MS.2019.2914663
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2018, IEEE SOFTWARE, V35, P62, DOI 10.1109/MS.2018.2801541
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2018, IEEE SOFTWARE, V35, P84, DOI 10.1109/MS.2017.4541043
   Garousi V, 2017, SOFTWARE QUAL J, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2017, IEEE SOFTWARE, V34, P90, DOI 10.1109/MS.2017.34
   Garousi V, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.30
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Graham D., 2012, EXPERIENCES TEST AUT
   Grieskamp W., 2010, P7, DOI 10.1007/978-3-642-15585-7_3
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Groz R., 2015, P161, DOI 10.1007/978-3-319-25945-1_10
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Iivari J., 2009, ECIS 2009 Proceedings, P73
   Janicki M, 2012, SOFTW TEST VERIF REL, V22, P313, DOI 10.1002/stvr.460
   Kramer A., 2016, MODEL BASED TESTING
   Krenn W., 2015, IEEE INT C SOFTW TES, P1, DOI [10.1109/ICST.2015.7102627, DOI 10.1109/ICST.2015.7102627]
   Lackner H., 2010, MODEL BASED TEST PRA, V11
   Li W., 2017, P77, DOI 10.1007/978-3-319-71734-0_7
   Meinke K., 2012, INT S LEV APPL FORM, P440, DOI [10.1007/978-3-642-34026-0_32, DOI 10.1007/978-3-642-34026-0_32]
   Memon A., 2003, 10 WORK C REV ENG P, P260
   Mesbah A., 2008, INT C WEB ENG, P122, DOI [10.1109/ICWE.2008.24, DOI 10.1109/ICWE.2008.24]
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Peleska J., 2013, ELECTRON P THEOR COM, DOI DOI 10.4204/EPTCS.111.1
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Petrenko A., 2012, MODEL BASED TESTING, DOI [10.1007/s10009-012-0240-3, DOI 10.1007/S10009-012-0240-3]
   Plays-in-Business.com, 2021, MAT CAP WHAT IS IT
   Polo M, 2013, IEEE SOFTWARE, V30, P84, DOI 10.1109/MS.2013.15
   Raulamo P., 2017, INT C EV ASS SOFTW E, P21, DOI [10.1145/3084226.3084252, DOI 10.1145/3084226.3084252]
   Robinson H., 2003, P EUR C MOD DRIV SOF, P118
   Santos P.S.M., 2009, P414, DOI 10.1109/esem.2009.5316013
   Schieferdecker I, 2012, IEEE SOFTWARE, V29, P14, DOI 10.1109/MS.2012.13
   Shafique M., 2010, SCE1004 CARL U
   Stringer E. T, 2013, ACTION RES-LONDON
   Sunye G., 2001, INT C UN MOD LANG, P134, DOI [10.1007/3-540-45441-1_11, DOI 10.1007/3-540-45441-1_11]
   Tanja EJ, 2015, INT J INF SYST MODEL, V6, P46, DOI 10.4018/IJISMD.2015070103
   Toye F, 2015, BRIT J PAIN, V9, P7, DOI 10.1177/2049463714565569
   Tretmans G, 2019, P CENTR EUR C INF IN
   Tretmans J., 2008, FORMAL METHODS TESTI, P1, DOI [10.1007/978-3-540-78917-8_1, DOI 10.1007/978-3-540-78917-8]
   Utting M., 2010, Practical model-based testing: a tools approach
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Veanes M., 2008, FORMAL METHODS TESTI, P39, DOI [10.1007/978-3-540-78917-8_2, DOI 10.1007/978-3-540-78917-8_2]
   Veenendaal E.v., 2015, IEEE-ACM INT WKSP CO, P3, DOI [10.1109/CESI.2015., DOI 10.1109/CESI.2015.8]
   Walkinshaw N, 2009, LECT NOTES COMPUT SC, V5850, P305, DOI 10.1007/978-3-642-05089-3_20
   West D.B., 1996, Introduction to Graph Theory, V2
NR 70
TC 5
Z9 6
U1 1
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2021
VL 180
AR 111032
DI 10.1016/j.jss.2021.111032
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0TS
UT WOS:000680064900012
OA Green Accepted, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Stiévenart, Q
   Van Es, N
   Van der Plas, J
   De Roover, C
AF Stievenart, Quentin
   Van Es, Noah
   Van der Plas, Jens
   De Roover, Coen
TI A parallel worklist algorithm and its exploration heuristics for static
   modular analyses
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Static programme analysis; Modular analysis; Parallelism; Concurrency;
   Dynamic Languages
AB One way to speed up static programme analysis is to make use of today's multi-core CPUs by parallelising the analysis. Existing work on parallel analysis usually targets traditional data-flow analyses for static, first-order languages such as C. Less attention has been given so far to the parallelisation of more general analyses that can also target dynamic, higher-order languages such as JavaScript. These are significantly more challenging to parallelise, as dependencies between analysis results are only discovered during the analysis itself. State-of-the-art parallel analyses for such languages are therefore usually limited, both in their applicability and performance gains.
   In this work, we propose the parallelisation of modular analyses. Modular analyses compute different parts of the analysis in isolation of one another, and therefore offer inherent opportunities for parallelisation that have not been explored so far. In addition, they can be used to develop a general class of analysers for dynamic, higher-order languages. We present a parallel variant of the worklist algorithm that is used to drive such modular analyses. To further speed up its convergence, we show how this algorithm can exploit the monotonicity of the analysis. Existing modular analyses can be parallelised without additional effort by instead employing this parallel worklist algorithm. We demonstrate this for MoDF, an inter-procedural modular analysis, and for MoDCoNc, an inter-process modular analysis. For MoDCoNc, we reveal an additional opportunity to exploit even more parallelism in the analysis: analyses of individual MoDCoNc components can themselves be parallel, resulting in a doubly-parallel exploration. Finally, we present several heuristics for the exploration order of the analysis and discuss how they can impact its performance.
   The parallel worklist algorithm and the exploration heuristics are implemented for and integrated into MAF, a framework for modular programme analysis. On a set of Scheme benchmarks for MoDF, we observe speedups between 3 x and 8 x when using 4 workers, and speedups between 8 x and 32x when using 16 workers, with a maximum speedup of 333x using 128 workers. For MoDCoNc, we achieve a maximum speedup of 37 x with 32 workers. We observe that on a MoDF analysis, among 11 exploration heuristics, the heuristics prioritising either components with smaller environments or with less dependencies result in consistent speedups that can reach 20x those of a random exploration strategy. We find a clear correlation between the mean number of dependencies in a programme and the speedup obtained by this heuristic. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Stievenart, Quentin; Van Es, Noah; Van der Plas, Jens; De Roover, Coen] Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Stiévenart, Q (corresponding author), Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
EM quentin.stievenart@vub.be; noah.van.es@vub.be; jens.van.der.plas@vub.be;
   coen.de.roover@vub.be
OI Van der Plas, Jens/0000-0002-7475-576X; De Roover,
   Coen/0000-0002-1710-1268; Van Es, Noah/0000-0003-2507-3970; Stievenart,
   Quentin/0000-0001-9985-9808
FU Cybersecurity Initiative Flanders; Research Foundation - Flanders (FWO)
   [11D5718N, 11F4820N]
FX This work was partially supported by the "Cybersecurity Initia-tive
   Flanders"and by the Research Foundation - Flanders (FWO) (grant numbers
   11D5718N and 11F4820N) .
CR Albarghouthi A, 2012, ACM SIGPLAN NOTICES, V47, P217, DOI 10.1145/2345156.2254091
   [Anonymous], 1996, Structure and interpretation of computer programs
   [Anonymous], 1991, Ph.D. dissertation
   Bourdoncle F., 1993, Formal Methods in Programming and Their Applications International Conference Proceedings, P128, DOI 10.1007/BFb0039704
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cousot P, 2002, LECT NOTES COMPUT SC, V2304, P159
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   Dewey K, 2015, INT SYM CODE GENER, P34, DOI 10.1109/CGO.2015.7054185
   Edvinsson M., 2011, P 6 INT C HIGH PERFO, P45
   Fecht C, 1999, SCI COMPUT PROGRAM, V35, P137, DOI 10.1016/S0167-6423(99)00009-X
   Gabriel R.P, 1985, COMPUTER SYSTEMS, V263
   Gilray T, 2018, J FUNCT PROGRAM, V28, DOI 10.1017/S0956796818000138
   Helm D., 2020, P 29 ACM SIGSOFT INT, P428, DOI [10.1145/3395363.3397367, DOI 10.1145/3395363.3397367]
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Johnson JI, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2544174.2500604, 10.1145/2500365.2500604]
   Kashyap V., 2014, ABS14033996 CORR
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   Kim SK, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3371082
   KRAMER R, 1994, IEEE T PARALL DISTR, V5, P805, DOI 10.1109/71.298205
   Lyde S., 2015, SCHEM FUNCT PROGR WO
   Méndez-Lojo M, 2012, ACM SIGPLAN NOTICES, V47, P107, DOI 10.1145/2370036.2145831
   Méndez-Lojo M, 2010, ACM SIGPLAN NOTICES, V45, P428, DOI 10.1145/1932682.1869495
   Monniaux D, 2005, LECT NOTES COMPUT SC, V3780, P86
   Nicolay J, 2019, LECT NOTES COMPUT SC, V11388, P247, DOI 10.1007/978-3-030-11245-5_12
   Prabhu T, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P511, DOI 10.1145/1926385.1926445
   Ramanathan Murali Krishna, 2013, P 9 JOINT M EUR SOFT, DOI DOI 10.1145/2491411.2501854
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rodriguez J, 2011, LECT NOTES COMPUT SC, V6601, P179, DOI 10.1007/978-3-642-19861-8_11
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Shapiro M., 1997, Static Analysis. 4th International Symposium, SAS '97 Proceedings, P16, DOI 10.1007/BFb0032731
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Stievenart Q., 2017, 31 EUR C OBJ OR PROG, DOI [10.4230/LIPIcs.ECOOP.2017.25, DOI 10.4230/LIPICS.ECOOP.2017.25]
   Stiévenart Q, 2019, J SYST SOFTWARE, V147, P17, DOI 10.1016/j.jss.2018.10.001
   Van Es N., 2020, 20 IEEE INT WORK C S
   Van Es N, 2020, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM51674.2020.00006
   Venet A, 2004, ACM SIGPLAN NOTICES, V39, P231, DOI 10.1145/996893.996869
   Weeks S., 1994, LISP and Symbolic Computation, V7, P173, DOI 10.1007/BF01018693
   Wohlin C., 2000, KLUWER INT SERIES SO, V6, DOI [10.1007/978-1-4615-4625-2, DOI 10.1007/978-1-4615-4625-2]
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   Yong-fong Lee, 1992, Conference Proceedings. 1992 International Conference on Supercomputing, P236
NR 42
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2021
VL 181
AR 111042
DI 10.1016/j.jss.2021.111042
EA JUL 2021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO6EH
UT WOS:000694786100010
DA 2024-07-18
ER

PT J
AU Li, Z
   Wu, YH
   Peng, B
   Chen, X
   Sun, ZY
   Liu, Y
   Yu, DL
AF Li, Zheng
   Wu, Yonghao
   Peng, Bin
   Chen, Xiang
   Sun, Zeyu
   Liu, Yong
   Yu, Deli
TI SeCNN: A semantic CNN parser for code comment generation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Program comprehension; Code comment generation; Convolutional Neural
   Network; Long short-term memory network
ID CONTEXT
AB A code comment generation system can summarize the semantic information of source code and generate a natural language description, which can help developers comprehend programs and reduce time cost spent during software maintenance. Most of state-of-the-art approaches use RNN (Recurrent Neural Network)-based encoder-decoder neural networks. However, this kind of method may not generate high-quality description when summarizing the information among several code blocks that are far from each other (i.e., the long-dependency problem). In this paper, we propose a novel Semantic CNN parser SeCNN for code comment generation. In particular, we use a CNN (Convolutional Neural Network) to alleviate the long-dependency problem and design several novel components, including source code-based CNN and AST-based CNN, to capture the semantic information of the source code. The evaluation is conducted on a widely-used large-scale dataset of 87,136 Java methods. Experimental results show that SeCNN achieves better performance (i.e., 44.69% in terms of BLEU and 26.88% in terms of METEOR) and has lower execution time cost when compared with five state-of-the-art baselines. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Li, Zheng; Wu, Yonghao; Peng, Bin; Liu, Yong; Yu, Deli] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing, Peoples R China.
   [Sun, Zeyu] Peking Univ, MoE, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Sun, Zeyu] Peking Univ, Software Inst, Beijing 100871, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Chen, Xiang] Nanjing Univ Aeronaut & Astronaut, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing, Peoples R China.
C3 Beijing University of Chemical Technology; Peking University; Peking
   University; Nantong University; Nanjing University of Aeronautics &
   Astronautics
RP Liu, Y (corresponding author), Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing, Peoples R China.; Sun, ZY (corresponding author), Peking Univ, Software Inst, Beijing 100871, Peoples R China.
EM szy_@pku.edu.cn; lyong@mail.buct.edu.cn
RI Chen, Xiang/AAG-3663-2019; Sun, Zeyu/KVY-3066-2024; Li,
   Zheng/L-8594-2015
OI Chen, Xiang/0000-0002-1180-3891; Sun, Zeyu/0000-0002-9990-9120; Li,
   Zheng/0000-0002-3938-7033
FU Na-tional Natural Science Foundation of China [61902015, 61872026];
   Nantong Application Research Plan, China [JC2019106]; Open Project of
   Key Laboratory of Safety-Critical Software for Nanjing University of
   Aeronautics and Astronautics, China, Ministry of Industry and
   Information Technology, China [NJ2020022]
FX The work described in this paper is supported by the Na-tional Natural
   Science Foundation of China (Grant nos. 61902015 and 61872026) , the
   Nantong Application Research Plan, China (Grant no. JC2019106) , and the
   Open Project of Key Laboratory of Safety-Critical Software for Nanjing
   University of Aeronautics and Astronautics, China, Ministry of Industry
   and Information Technology, China (Grant No. NJ2020022) .
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Bahdanau D., 2014, COMPUT SCI, V1409
   Banerjee S, 2005, ACL WORKSHOP INTRINS, P65
   Bao LX, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019:): STUDENT RESEARCH WORKSHOP, P253
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Chung J., 2014, NIPS 2014 WORKSH DEE
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Devlin J., 2018, BERT PRE TRAINING DE
   Engelken R., 2020, ARXIV PREPRINT ARXIV
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Gao Z., 2020, ABS200510157 CORR
   Gehring J, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P123, DOI 10.18653/v1/P17-1012
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hahnloser RHR, 2000, NATURE, V405, P947, DOI 10.1038/35016072
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hansel D, 2002, J NEUROSCI, V22, P5118, DOI 10.1523/JNEUROSCI.22-12-05118.2002
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu Xing, 2019, EMPIR SOFTW ENG, P1
   IssamBazzi, 2000, P ICSLP OCT
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kadmon J, 2015, PHYS REV X, V5, DOI 10.1103/PhysRevX.5.041030
   Kalchbrenner N, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P655, DOI 10.3115/v1/p14-1062
   Karampatsis R., 2020, ABS200307914 CORR
   Kim Y., 2014, P 2014 C EMPIRICAL M
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li Y., 2015, ARXIV
   Libovicky J, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P3016
   Liu BH, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3362774
   Longnecker M.T, 2015, CENGAGE LEARNING
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Movshovitz-Attias Dana, 2013, ACL
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rodeghero P, 2015, IEEE T SOFTWARE ENG, V41, P1038, DOI 10.1109/TSE.2015.2442238
   Shen YL, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P373, DOI 10.1145/2567948.2577348
   Shido Y., 2019, ABS190608094 CORR, P1, DOI 10.1109/IJCNN.2019.8851751
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Singh R., 2013, ELEMENTS SURVEY SAMP, V15
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Sutskever I, 2014, ADV NEUR IN, V27
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2019, ADV NEUR IN, V32
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Williams RJ, 1989, NEURAL COMPUT, V1, P270, DOI 10.1162/neco.1989.1.2.270
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou Y, 2019, J SYST SOFTWARE, V156, P328, DOI 10.1016/j.jss.2019.07.087
NR 74
TC 26
Z9 27
U1 2
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2021
VL 181
AR 111036
DI 10.1016/j.jss.2021.111036
EA JUL 2021
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO6EH
UT WOS:000694786100006
DA 2024-07-18
ER

PT J
AU Wong, WE
   Mittas, N
   Arvanitou, EM
   Li, YH
AF Wong, W. Eric
   Mittas, Nikolaos
   Arvanitou, Elvira Maria
   Li, Yihao
TI A bibliometric assessment of software engineering themes, scholars and
   institutions (2013-2020)
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bibliometrics; Top-scholars; Top-institutions; Software engineering
   research areas
ID SYSTEMS
AB This paper is the updated version (2013-2020) of the series of papers on emerging themes, top scholars and institutes on software engineering (SE), published by the Journal of Systems and Software for almost 25 years. The paper reports the findings of a bibliometric study by applying the systematic mapping technique on top-quality software engineering venues (handling a dataset of 11.668 studies). The design of the study remains the same for the complete decade, so that the results are consistent and comparable: As the ranking metric for institutions, we used the count of papers in which authors affiliated with the corresponding institute have been identified in the obtained dataset. Regarding scholars we computed the corresponding rankings based on the number of published papers and the average number of citations. In this version, the analysis of emerging trends and themes has been promoted compared to the previous years to provide more insights on what a newcomer in the software engineering domain should look at, as well as to recap the state-of-research in terms of themes to more experienced SE researchers. (C) 2021 Published by Elsevier Inc.
C1 [Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Mittas, Nikolaos] Int Hellen Univ, Dept Chem, Thessaloniki, Greece.
   [Arvanitou, Elvira Maria] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Li, Yihao] Ludong Univ, Sch Informat & Elect Engn, Yantai, Peoples R China.
C3 University of Texas System; University of Texas Dallas; International
   Hellenic University; University of Macedonia; Ludong University
RP Arvanitou, EM (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM ewong@utdallas.edu; nmittas@chem.ihu.gr; e.arvanitou@uom.edu.gr;
   yihao.li@ldu.edu.cn
RI li, yihao/AAS-2033-2020
OI li, yihao/0000-0001-9874-0338; Mittas, Nikolaos/0000-0003-3061-7864
CR Barricelli BR, 2019, J SYST SOFTWARE, V149, P101, DOI 10.1016/j.jss.2018.11.041
   Behutiye W, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106225
   Bischoff V, 2019, INFORM SOFTWARE TECH, V105, P209, DOI 10.1016/j.infsof.2018.08.016
   Charalampidou S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2294
   GLASS RL, 1994, J SYST SOFTWARE, V27, P63, DOI 10.1016/0164-1212(94)90115-5
   Greenacre M., 1993, Correspondence Analysis in Practice
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Karanatsiou D, 2019, J SYST SOFTWARE, V147, P246, DOI 10.1016/j.jss.2018.10.029
   Khalifa M, 2000, IEEE T ENG MANAGE, V47, P360, DOI 10.1109/17.865904
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Molleri J.S., 2019, INFORM SOFTWARE TECH, P105
   Parnas DL, 2007, COMMUN ACM, V50, P19, DOI 10.1145/1297797.1297815
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2009, 3 INT S EMP SOFTW EN 3 INT S EMP SOFTW EN
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
NR 17
TC 15
Z9 15
U1 3
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2021
VL 180
AR 111029
DI 10.1016/j.jss.2021.111029
EA JUN 2021
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0TS
UT WOS:000680064900011
DA 2024-07-18
ER

PT J
AU Kochanthara, S
   Rood, N
   Saberi, AK
   Cleophas, L
   Dajsuren, Y
   van den Brand, M
AF Kochanthara, Sangeeth
   Rood, Niels
   Saberi, Arash Khabbaz
   Cleophas, Loek
   Dajsuren, Yanja
   van den Brand, Mark
TI A functional safety assessment method for cooperative automotive
   architecture
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Functional safety; Cooperative driving; Platooning; ISO 26262;
   Automotive software architecture; Safety engineering
ID VERIFICATION
AB The scope of automotive functions has grown from a single vehicle as an entity to multiple vehicles working together as an entity, referred to as cooperative driving. The current automotive safety standard, ISO 26262, is designed for single vehicles. With the increasing number of cooperative driving capable vehicles on the road, it is now imperative to systematically assess the functional safety of architectures of these vehicles. Many methods are proposed to assess architectures with respect to different quality attributes in the software architecture domain, but to the best of our knowledge, functional safety assessment of automotive architectures is not explored in the literature. We present a method, that leverages existing research in software architecture and safety engineering domains, to check whether the functional safety requirements for a cooperative driving scenario are fulfilled in the technical architecture of a vehicle. We apply our method on a real-life academic prototype for a cooperative driving scenario, platooning, and discuss our insights. (C) 2021 The Authors. Published by Elsevier Inc.
C1 [Kochanthara, Sangeeth; Rood, Niels; Saberi, Arash Khabbaz; Cleophas, Loek; Dajsuren, Yanja; van den Brand, Mark] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Kochanthara, S (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM s.kochanthara@tue.nl; n.rood@tue.nl; khabbaz.saberi@tue.nl;
   l.g.w.a.cleophas@tue.nl; y.dajsuren@tue.nl; m.g.j.v.d.brand@tue.nl
OI van den Brand, Mark/0000-0003-3529-6182
FU NWO (Netherlands Organisation for Scientific Research), Netherlands
   [14897 P14-18]
FX This work is a part of the i-CAVE research programme (14897 P14-18)
   funded by NWO (Netherlands Organisation for Scientific Research),
   Netherlands.
CR Abdulkhaleq A., 2017, ARXIV PREPRINT ARXIV
   Althoff M, 2014, IEEE T ROBOT, V30, P903, DOI 10.1109/TRO.2014.2312453
   Alvarez P, 2017, LECT NOTES COMPUT SC, V10268, P39, DOI 10.1007/978-3-319-59513-9_5
   [Anonymous], 2018, ISO 26262
   [Anonymous], 2010, 615082010 IEC
   [Anonymous], 2011, ISO 262622011
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   Barbacci M., 2003, USING ARCHITECTURE T
   Bass Len, 2012, SEI S SOFTW
   Beckers K, 2014, LECT NOTES COMPUT SC, V8666, P65, DOI 10.1007/978-3-319-10506-2_5
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bergner K, 2005, QUALITY SOFTWARE ARC
   Bhatti Z.E, 2016, IEEE T IND INF
   Bosch J, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P4, DOI 10.1109/ECBS.1999.755855
   Broy M, 2009, COMPUTER, V42, P98, DOI 10.1109/MC.2009.413
   Bucaioni A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P46, DOI 10.1109/ICSA47634.2020.00013
   Cuenot P, 2014, 26262 ISO
   Dajsuren Y, 2015, DESIGN ARCHITECTURE
   Dajsuren Y, 2019, ICSA
   Davila A., 2013, Report on fuel consumption
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Fu Y, 2018, THESIS EINDHOVEN U T
   Harrison N.B, 2013, T PATTERN LANGUAGES
   Harrison NB, 2011, IEEE SOFTWARE, V28, P66, DOI 10.1109/MS.2010.156
   Hasan S., 2020, THESIS MALARDALEN U
   Hommes Q.V.E, 2012, 26262 ISO SAE
   ISO, 2019, 1762 ISO
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kochanthara S, 2020, ICSAC
   Kochanthara S, 2021, GITHUB REPOSITORY
   LEE WS, 1985, IEEE T RELIAB, V34, P194, DOI 10.1109/TR.1985.5222114
   Liang K.-Y., 2015, T INTELL TRANSP SYST
   Mallozzi P, 2019, AUTOMOTIVE SYSTEMS S
   Mallozzi P, 2016, LECT NOTES COMPUT SC, V9823, P62, DOI 10.1007/978-3-319-45892-2_5
   Martin H, 2020, RELIAB ENG SYST SAFE, V198, DOI 10.1016/j.ress.2019.106773
   Nilsson J, 2013, FUNCTIONAL SAFETY CO
   Oscarsson J., 2016, SIES
   Pelliccione P, 2020, SCI COMPUT PROGRAM, V191, DOI 10.1016/j.scico.2020.102414
   Ploeg J., 2014, ANAL DESIGN CONTROLL
   Preschern C., 2013, P VIKINGPLOP 2013 C
   Preschern C, 2015, EUROPLOP 13
   Riel A, 2018, CIRP ANN-MANUF TECHN, V67, P173, DOI 10.1016/j.cirp.2018.04.022
   Roy B, 2008, 545 TR, V545
   Saberi A.K, 2018, SYSCON
   Sawade O, 2018, IEEE INTEL TRANSP SY, V10, P159, DOI 10.1109/MITS.2018.2842241
   Serban A, 2018, ICSAC
   Sljivo I, 2020, J SYST ARCHITECT, V110, DOI 10.1016/j.sysarc.2020.101765
   Stamatis DH., 2003, FAILURE MODE EFFECT
   Staron M., 2017, Automotive Software Architectures
   Stoermer C., 2003, SCAM SOFTWARE ARCHIT
   Stoltz-Sundnes M, 2019, STPA INSPIRED SAFETY
   Trego T., 2010, TRANSPORTATION RES B, V18, P20
   Wu W, 2004, COMPSAC
   Zalewski A, 2017, ECSA
NR 55
TC 8
Z9 8
U1 3
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2021
VL 179
AR 110991
DI 10.1016/j.jss.2021.110991
EA MAY 2021
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO2RE
UT WOS:000658823600004
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, G
   Lavazza, L
AF Liu, Geng
   Lavazza, Luigi
TI Early and quick function points analysis: Evaluations and proposals
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Function Points; Functional Size Measurement; NESMA Estimated; Early
   size estimation; Function point analysis; High-level FPA
AB Measuring Function Points following the standard process is sometimes long and expensive. To solve this problem, several early estimation methods have been proposed. Among these, the "NESMA Estimated" method is one of the most widely used; it has also been selected by the International Function Point User Group as the official early function point analysis method, under the name of 'High-level FPA' method. A large-scale empirical study has shown that the High-level FPA method - although sufficiently accurate - tends to underestimate the size of software. Underestimating the size of the software to be developed can easily lead to wrong decisions, which can even result in project failure. In this paper we investigate the reasons why the High-level FPA method tends to underestimate. We also explore how to improve the method to make it more accurate. Finally, we propose size estimation models built using different criteria and we evaluate the estimation accuracy of these new models. Our results show that it is possible to derive size estimation models from historical data using simple regression techniques: these models are slightly less accurate than those delivered by the High-level FPA method in terms of absolute estimation errors, but can be used earlier than the High-level FPA method, are cheaper, and do not underestimate software size. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Liu, Geng] Hangzhou Dianzi Univ, Hangzhou, Peoples R China.
   [Lavazza, Luigi] Univ Insubria, Varese, Italy.
C3 Hangzhou Dianzi University; University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Varese, Italy.
EM liugeng@hdu.edu.cn; luigi.lavazza@uninsubria.it
FU "Fondo di Ricerca d'Ateneo'' - Universita degli Studi dell'Insubria,
   Italy; Zhejiang Provincial Science Foundation of China [LY19F020046];
   Chinese Scholarship Council [201708330399]
FX This work have been supported by the "Fondo di Ricerca d'Ateneo'' funded
   by the Universita degli Studi dell'Insubria, Italy, by Zhejiang
   Provincial Science Foundation of China under grant no. LY19F020046, and
   by the Chinese Scholarship Council under grant no. 201708330399.
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 2005, 11 IEEE INT SOFTW ME
   [Anonymous], 2017, PROC 21 INT C EVAL A
   Bernstein L, 2005, TRUSTWORTHY SYSTEMS THROUGH QUANTITATIVE SOFTWARE ENGINEERING, P1, DOI 10.1002/0471750336
   BOCK DB, 1992, J SYST SOFTWARE, V18, P245, DOI 10.1016/0164-1212(92)90101-O
   Cândido EJD, 2004, WEBMEDIA & LA-WEB 2004, VOL 1, PROCEEDINGS, P98, DOI 10.1109/WEBMED.2004.1348154
   Cohen J., 1988, STAT POWER ANAL BEHA
   de Freitas M, 2015, IEEE T ENG MANAGE, V62, P495, DOI 10.1109/TEM.2015.2453354
   Dewi RS, 2018, 2018 INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (ICECOS), P153, DOI 10.1109/ICECOS.2018.8605204
   Di Martino S, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106308
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Ferrucci Filomena, 2016, P 31 ANN ACM S APPL, P1428
   Fischman L., 2005, CROSSTALK, V18
   Georgi R., 2008, ILLUSTRATIVE EXAMPLE
   Horgan G, 1998, INFORM SOFTWARE TECH, V40, P409, DOI 10.1016/S0950-5849(98)00074-3
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   International Standardization Organization (ISO), 2003, 209262003 ISOIEC
   International Standards Organisation, 2005, 245702005 ISOIEC
   Iorio Tommaso, 2007, P SOFTWARE MEASUREME, P179
   Jones Capers, 2017, QUANTIFYING SOFTWARE
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Lavazza Luigi, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P196, DOI 10.1109/IWSM.Mensura.2014.28
   Lavazza L., 2013, J ADV SOFTW, V6
   Lavazza L, 2013, INFORM SOFTWARE TECH, V55, P1796, DOI 10.1016/j.infsof.2013.04.003
   Lavazza Luigi, 2017, INT J ADV SOFTWARE, V10, P108
   Lavazza Luigi, 2019, 14 INT C SOFTWARE EN, P24
   Liu G, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2240
   Liu JQ, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P51, DOI 10.1109/HPCC/SmartCity/DSS.2018.00039
   Meli R., 2011, SOFTW MEAS EUR FOR
   Meli R., 2015, INT C ADV TRENDS SOF
   Meli R., 1999, FESMA, V99, P6
   Meli R., 1999, SOFTW MEAS EUR FOR
   Morrow P, 2014, SOFTWARE QUAL J, V22, P611, DOI 10.1007/s11219-013-9215-1
   NESMA-the Netherlands Software Metrics Association, 2004, DEF COUNT GUID APPL
   Popovic J, 2012, COMPUT SCI INF SYST, V9, P455, DOI 10.2298/CSIS110316068P
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Santillo L., 2012, JOINT C 22 INT WORKS
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Silhavy P., 2018, P COMP METH SYST SOF, P333
   Tichenor C., 1997, IFPUG FALL C
   Timp Adri, 2015, UTIP EARLY FUNCTION
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   van Heeringen H., 2009, SOFTW MEAS EUR FOR
   Wilkie FG, 2011, INFORM SOFTWARE TECH, V53, P1236, DOI 10.1016/j.infsof.2011.05.008
NR 44
TC 1
Z9 2
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2021
VL 174
AR 110888
DI 10.1016/j.jss.2020.110888
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QH8XE
UT WOS:000618555900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sharma, T
   Efstathiou, V
   Louridas, P
   Spinellis, D
AF Sharma, Tushar
   Efstathiou, Vasiliki
   Louridas, Panos
   Spinellis, Diomidis
TI Code smell detection by deep direct-learning and transfer-learning?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code smells; Smell detection tools; Deep learning; Transfer-learning
ID NEURAL-NETWORKS; REPRESENTATIONS; ALGORITHM
AB Context: An excessive number of code smells make a software system hard to evolve and maintain. Machine learning methods, in addition to metric-based and heuristic-based methods, have been recently applied to detect code smells; however, current methods are considered far from mature.
   Objective: First, explore the feasibility of applying deep learning models to detect smells without extensive feature engineering. Second, investigate the possibility of applying transfer-learning in the context of detecting code smells.
   Methods: We train smell detection models based on Convolution Neural Networks and Recurrent Neural Networks as their principal hidden layers along with autoencoder models. For the first objective, we perform training and evaluation on C# samples, whereas for the second objective, we train the models from C# code and evaluate the models over Java code samples and vice-versa.
   Results: We find it feasible to detect smells using deep learning methods though the models' performance is smell-specific. Our experiments show that transfer-learning is definitely feasible for implementation smells with performance comparable to that of direct-learning. This work opens up a new paradigm to detect code smells by transfer-learning especially for the programming languages where the comprehensive code smell detection tools are not available. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Sharma, Tushar] Siemens Technol, 5101 Westinghouse Blvd, Charlotte, NC 28273 USA.
   [Efstathiou, Vasiliki; Louridas, Panos; Spinellis, Diomidis] Athens Univ Econ & Business, Athens, Greece.
C3 Athens University of Economics & Business
RP Sharma, T (corresponding author), Siemens Technol, 5101 Westinghouse Blvd, Charlotte, NC 28273 USA.
EM tusharsharma@ieee.org; vefstathiou@aueb.gr; louridas@aueb.gr;
   dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Sharma,
   Tushar/0000-0002-0538-052X
FU seneca project, Marie Sklodowska-Curie Innovative Training Networks
   (itn-eid) [642954]; crossminer project from the European Union's Horizon
   2020 Research and Innovation Programme [732223]; National
   Infrastructures for Research and Technology s.a. (grnet s.a.) in the
   National hpc facility - aris [pa180903-smellsdl]; Marie Curie Actions
   (MSCA) [642954] Funding Source: Marie Curie Actions (MSCA)
FX This work is partially funded by the seneca project, which is part of
   the Marie Sklodowska-Curie Innovative Training Networks (itn-eid) under
   grant agreement number 642954 and by the crossminer project, which has
   received funding from the European Union's Horizon 2020 Research and
   Innovation Programme under grant agreement No. 732223.; This work was
   supported by computational time granted from the National
   Infrastructures for Research and Technology s.a. (grnet s.a.) in the
   National hpc facility -aris -under project id pa180903-smellsdl.
CR Abdeljaber O, 2017, J SOUND VIB, V388, P154, DOI 10.1016/j.jsv.2016.10.043
   Alexandra CV, 2017, INT C PROGRAM COMPRE, P316, DOI 10.1109/ICPC.2017.11
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2018, INT C LEARN REPR
   [Anonymous], 2009, Technical report
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2016, P 54 ANN M ASS COMP
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2010, P 27 INT C INT C MAC, DOI DOI 10.1155/2011/176802
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Azadi U, 2018, PROC IEEE ACM INT C, P288, DOI 10.1145/3183440.3194974
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Babii H., 2019, ARXIV PREPRINT ARXIV
   Baziotis C., 2017, P 11 INT WORKSHOP SE, P747, DOI [DOI 10.18653/V1/S17-2126, 10.18653/v1/S17-2126]
   Becker L. A., 2000, EFFECT SIZE ES
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Biegel B., 2011, Comparison of similarity metrics for refactoring detection, P53
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Chen M, 2012, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON APAC 2011
   Chen Z., 2019, TSE
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Chollet F., 2017, DEEP LEARNING PYTHON, DOI DOI 10.1007/978-1-4842-2766-4
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Czibula G, 2015, KNOWL INF SYST, V42, P545, DOI 10.1007/s10115-013-0721-z
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   de Andrade Hugo Sica, 2014, WICSA COMPANION, V12, P1
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Efstathiou Vasiliki, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P29, DOI 10.1109/MSR.2019.00015
   Ernst Michael D., 2017, SUMMIT ADV PROGRAMMI, V71, DOI [10.4230/LIPIcs.SNAPL.2017.4, DOI 10.4230/LIPICS.SNAPL.2017.4]
   Felleman DJ, 1991, CEREB CORTEX, V1, P1, DOI 10.1093/cercor/1.1.1
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gal Y., 2015, STATISTICS
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grave E, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P3483
   Graves A, 2013, 2013 IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING (ASRU), P273, DOI 10.1109/ASRU.2013.6707742
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   Gueheneuc Y.-G., 2019, MACHINE LEARNING BAS
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Hawkins S., 2002, International Conference on Data Warehousing and Knowledge Discovery, P170, DOI DOI 10.1007/3-540-46145-0_17
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hinton GE, 1993, ADV NEURAL INFORM PR, P3, DOI [DOI 10.1021/JP906511Z, DOI 10.5555/2987189.2987190]
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   HUBEL DH, 1962, J PHYSIOL-LONDON, V160, P106, DOI 10.1113/jphysiol.1962.sp006837
   Huo X., 2016, IJCAI, P1606
   Husain Hamel, 2019, CoRR abs/1909.09436
   Ioffe S, 2015, PR MACH LEARN RES, V37, P448
   Japkowicz N, 1995, INT JOINT CONF ARTIF, P518
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Johnson R., 2015, P 2015 C N AM CHAPT, P103, DOI DOI 10.3115/V1/N15-1011
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Karampatsis R., 2019, ARXIV PREPRINT ARXIV
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K, 2017, INT J ELECT COMPUT E, V7, DOI DOI 10.11591/IJECE.V7I6
   King DB, 2015, ACS SYM SER, V1214, P1
   KRAMER MA, 1991, AICHE J, V37, P233, DOI 10.1002/aic.690370209
   Kraus OZ, 2016, BIOINFORMATICS, V32, P52, DOI 10.1093/bioinformatics/btw252
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Lee SM, 2017, INT CONF BIG DATA, P131, DOI 10.1109/BIGCOMP.2017.7881728
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Liu H, 2019, IEEE T SOFTW ENG
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Markowski G., 2018, SPLITTING SOURCE COD
   Masci J, 2011, LECT NOTES COMPUT SC, V6791, P52, DOI 10.1007/978-3-642-21735-7_7
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Ng A, 2011, ELGAR LAW TECH SOC, P1
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Ott J, 2018, INT C PROGRAM COMPRE, P336, DOI 10.1145/3196321.3196359
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Paiva Thanis, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0041-1
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Park MY, 2007, J ROY STAT SOC B, V69, P659, DOI 10.1111/j.1467-9868.2007.00607.x
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Piech C, 2015, PR MACH LEARN RES, V37, P1093
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Rantala L, 2020, SOFTWARE QUAL J, V28, P1551, DOI 10.1007/s11219-020-09520-3
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rumelhart D.E., 2013, Learning internal representations by error propagation, P399, DOI [10.1016/b978-1-4832-1446-7.50035-2, 10.1016/B978-1-4832-1446-7.50035-2]
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Saha, 2014, ADV NEURAL INFORM PR, P1853
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sainath TN, 2015, NEURAL NETWORKS, V64, P39, DOI 10.1016/j.neunet.2014.08.005
   Sakurada M., 2014, P MLSDA 2014 2 WORKS, P4, DOI DOI 10.1145/2689746.2689747
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sharma T, 2021, **DATA OBJECT**, DOI [10.5281/zenodo.4571626, DOI 10.5281/ZENODO.4571626]
   Sharma T., 2016, DESIGNITE SOFTWARE D, DOI [10.5281/zenodo.2566832http://www.designitetools.com, DOI 10.5281/ZENODO.2566832HTTP://WWW.DESIGNITETOOLS.COM]
   Sharma T., 2019, **DATA OBJECT**, DOI [10.5281/zenodo.2566905, DOI 10.5281/ZENODO.2566905]
   Sharma T., 2018, DESIGNITEJAVA, DOI [10.5281/zenodo.2566861https://github.com/tushartushar/DesigniteJava, DOI 10.5281/ZENODO.2566861HTTPS://GITHUB.COM/TUSHARTUSHAR/DESIGNITEJAVA]
   Sharma T., 2019, CODESPLITJAVA, DOI [10.5281/zenodo.2566865https://github.com/tushartushar/CodeSplitJava, DOI 10.5281/ZENODO.2566865HTTPS://GITHUB.COM/TUSHARTUSHAR/CODESPLITJAVA]
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Shizhe Fu, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321194
   Simonyan K, 2013, PROCEEDINGS OF THE BRITISH MACHINE VISION CONFERENCE 2013, DOI 10.5244/C.27.8
   Socher R., 2011, P C EMP METH NAT LAN, P151
   Spinellis D., 2019, DSPINELLIS TOKENIZER, DOI [10.5281/zenodo.2558420https://github.com/dspinellis/tokenizer, DOI 10.5281/ZENODO.2558420HTTPS://GITHUB.COM/DSPINELLIS/TOKENIZER]
   Spinellis D, 2020, IEEE WORK CONF MIN S, P523, DOI 10.1145/3379597.3387496
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Sutskever Ilya, 2014, P 27 INT C NEURAL IN, P3104
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Vincent P., 2008, INT C MACH LEARN ICM, P1096, DOI [10.1145/1390156.1390294, DOI 10.1145/1390156.1390294]
   Wang Y., 2016, P 2016 C EMPIRICAL M, P606, DOI 10.18653/v1/D16-1058
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Wen T.-H., 2015, P 2015 C EMP METH NA, P1711, DOI DOI 10.18653/V1/D15-1199
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Williams G, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P709, DOI 10.1109/ICDM.2002.1184035
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zhou C, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P665, DOI 10.1145/3097983.3098052
NR 151
TC 39
Z9 39
U1 1
U2 24
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2021
VL 176
AR 110936
DI 10.1016/j.jss.2021.110936
EA MAR 2021
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH7CH
UT WOS:000636371400014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Verdecchia, R
   Kruchten, P
   Lago, P
   Malavolta, I
AF Verdecchia, Roberto
   Kruchten, Philippe
   Lago, Patricia
   Malavolta, Ivano
TI Building and evaluating a theory of architectural technical debt in
   software-intensive systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Software architecture; Technical debt; Software
   evolution; Grounded theory; Focus group
AB Architectural technical debt in software-intensive systems is a metaphor used to describe the "big'' design decisions (e.g., choices regarding structure, frameworks, technologies, languages, etc.) that, while being suitable or even optimal when made, significantly hinder progress in the future. While other types of debt, such as code-level technical debt, can be readily detected by static analyzers, and often be refactored with minimal or only incremental efforts, architectural debt is hard to be identified, of wide-ranging remediation cost, daunting, and often avoided.
   In this study, we aim at developing a better understanding of how software development organizations conceptualize architectural debt, and how they deal with it. In order to do so, in this investigation we apply a mixed empirical method, constituted by a grounded theory study followed by focus groups. With the grounded theory method we construct a theory on architectural technical debt by eliciting qualitative data from software architects and senior technical staff from a wide range of heterogeneous software development organizations. We applied the focus group method to evaluate the emerging theory and refine it according to the new data collected.
   The result of the study, i.e., a theory emerging from the gathered data, constitutes an encompassing conceptual model of architectural technical debt, identifying and relating concepts such as its symptoms, causes, consequences, management strategies, and communication problems. From the conducted focus groups, we assessed that the theory adheres to the four evaluation criteria of classic grounded theory, i.e., the theory fits its underlying data, is able to work, has relevance, and is modifiable as new data appears.
   By grounding the findings in empirical evidence, the theory provides researchers and practitioners with novel knowledge on the crucial factors of architectural technical debt experienced in industrial contexts. (C) 2021 The Author(s). Published by Elsevier Inc.
C1 [Verdecchia, Roberto; Lago, Patricia; Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Kruchten, Philippe] Univ British Columbia, Vancouver, BC, Canada.
   [Lago, Patricia] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Vrije Universiteit Amsterdam; University of British Columbia; Chalmers
   University of Technology
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM r.verdecchia@vu.nl; pbk@ece.ubc.ca; p.lago@vu.nl; i.malavolta@vu.nl
RI Lago, Patricia/ABH-2308-2020; Malavolta, Ivano/E-9018-2017
OI Lago, Patricia/0000-0002-2234-0845; Kruchten,
   Philippe/0000-0003-1359-4867; Verdecchia, Roberto/0000-0001-9206-6637;
   Malavolta, Ivano/0000-0001-5773-8346
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Almonaies A., 2010, International Workshop on SOA Migration and Evolution, P53
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2015, EXPLORING SOCIAL PSY
   [Anonymous], 2001, Using Grounded Theory in Nursing
   [Anonymous], 2018, REFACTORING IMPROVIN
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Bryman A., 2001, Social research methods, P365
   Chiang CC, 2006, IEEE SYS MAN CYBERN, P1304, DOI 10.1109/ICSMC.2006.384895
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Engward Hilary, 2013, Nurs Stand, V28, P37, DOI 10.7748/ns2013.10.28.7.37.e7806
   Farahbod R., 2014, INT ACM C QUAL SOFTW
   Ghanbari H, 2017, INT SYMP EMP SOFTWAR, P384, DOI 10.1109/ESEM.2017.53
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Glaser B. G., 1978, [No title captured]
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glazer B., 1978, Theoretical sensitivity: Advances in the methodology of grounded theory
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Kahneman D., 1979, TIMS Studies in Management Sciences, P313, DOI DOI 10.1017/CBO9780511809477.031
   Kenny M, 2015, QUAL REP, V20, P1270
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kruchten P., 2008, WHAT COLOUR IS YOUR
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kruger J, 1999, J PERS SOC PSYCHOL, V77, P1121, DOI 10.1037/0022-3514.77.6.1121
   Li ZM, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE 2014), P119, DOI 10.1109/SYSOSE.2014.6892474
   Li ZY, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P85, DOI 10.1016/B978-0-12-802301-3.00005-3
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lomborg Kirsten, 2003, Nurs Philos, V4, P189, DOI 10.1046/j.1466-769X.2003.00139.x
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Martini A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P422, DOI 10.1109/SEAA.2015.78
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   Mateos C, 2019, INF TECHNOL CONTROL, V48, P71, DOI 10.5755/j01.itc.48.1.21566
   MORSE JM, 1994, CRITICAL ISSUES IN QUALITATIVE RESEARCH METHODS, P23
   Oliver DG, 2005, SOC FORCES, V84, P1273, DOI 10.1353/sof.2006.0023
   Rose Karen, 1994, Nurse Res, V1, P23
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Rubin H.J., 2011, QUALITATIVE INTERVIE, P58
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   STRUTZEL E, 1968, NURS RES, V17, P364
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   Verdecchia Roberto, 2020, Software Architecture. 14th European Conference, ECSA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12292), P202, DOI 10.1007/978-3-030-58923-3_14
   Verdecchia R., 2020, PROC 15 INT C EVAL N, P531, DOI DOI 10.5220/0009577805310539
   Verdecchia R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P141, DOI 10.1109/ICSA.2019.00023
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
NR 53
TC 19
Z9 19
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2021
VL 176
AR 110925
DI 10.1016/j.jss.2021.110925
EA MAR 2021
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH7CH
UT WOS:000636371400010
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Albert, E
   Correas, J
   Gordillo, P
   Román-Díez, G
   Rubio, A
AF Albert, Elvira
   Correas, Jesus
   Gordillo, Pablo
   Roman-Diez, Guillermo
   Rubio, Albert
TI <i>Don</i>'<i>t</i> <i>run on fumes</i>-Parametric gas bounds for smart
   contracts
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Smart contracts; Resource analysis; Static analysis; Decompilation
ID COST-ANALYSIS
AB Gas is a measurement unit of the computational effort that it will take to execute every single replicated operation that takes part in the Ethereum blockchain platform. If a transaction exceeds the amount of gas allotted by the user (known as gas limit), an out-of-gas exception is raised and its execution is interrupted. One of the main open problems in the analysis of Ethereum smart contracts is the inference of sound bounds on their gas consumption.
   We present, to the best of our knowledge, the first static analysis that is able to infer sound parametric (i.e., non-constant) gas bounds for smart contracts. The inferred bounds can be parametric on the sizes of the input parameters for the functions, but also they can be parametric on the contract state, or blockchain data.
   Our gas analysis is developed at EVM bytecode level, in which Ethereum gas model is defined. Our analysis is implemented in a tool named Gastap, Gas-Aware Smart contracT Analysis Platform, which takes as input a smart contract and automatically infers sound gas upper-bounds for its public functions. Gastap has been applied over 318,093 functions fetched from the Ethereum blockchain, and succeeded to obtain gas bounds for 90.24% of them. (C) 2021 Elsevier Inc. All rights reserved.
C1 [Albert, Elvira; Rubio, Albert] Inst Tecnol Conocimiento, Madrid, Spain.
   [Albert, Elvira; Correas, Jesus; Gordillo, Pablo; Rubio, Albert] Univ Complutense Madrid, Madrid, Spain.
   [Roman-Diez, Guillermo] Univ Politecn Madrid, Madrid, Spain.
C3 Complutense University of Madrid; Universidad Politecnica de Madrid
RP Gordillo, P (corresponding author), Univ Complutense Madrid, Madrid, Spain.
EM elvira@sip.ucm.es; jcorreas@ucm.es; pabgordi@ucm.es;
   guillermo.roman@upm.es; alberu04@ucm.es
RI Correas, Jesús/AAG-4430-2020; Roman-Diez, Guillermo/AAS-4445-2020;
   Gordillo, Pablo/X-4552-2018; Rubio, Albert/G-8473-2015
OI Correas, Jesús/0000-0002-3219-0799; Roman-Diez,
   Guillermo/0000-0002-5427-8855; Gordillo, Pablo/0000-0001-6189-4667;
   Rubio, Albert/0000-0002-0501-9830
FU Spanish MCIU; FEDER (EU) [RTI2018-094403-B-C31, RTI2018094403-B-C33]; CM
   project [S2018/TCS-4314]; EIE Funds of the European Union; UCM
   [CT27/16CT28/16]; AEI
FX This work was funded partially by the Spanish MCIU, AEI and FEDER (EU)
   projects RTI2018-094403-B-C31 and RTI2018094403-B-C33, by the CM project
   S2018/TCS-4314 co-funded by EIE Funds of the European Union and by the
   UCM CT27/16CT28/16 grant.
CR Albert Elvira, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P118, DOI 10.1007/978-3-030-45237-7_7
   Albert Elvira, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P85, DOI 10.1007/978-3-662-46681-0_6
   Albert E., 2020, TECH REP
   Albert E, 2008, LECT NOTES COMPUT SC, V5079, P221
   Albert E, 2018, LECT NOTES COMPUT SC, V11138, P513, DOI 10.1007/978-3-030-01090-4_30
   Albert E, 2015, SOFTW TEST VERIF REL, V25, P218, DOI 10.1002/stvr.1569
   Albert E, 2012, THEOR COMPUT SCI, V413, P142, DOI 10.1016/j.tcs.2011.07.009
   Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Alberta E, 2014, SCI COMPUT PROGRAM, V92, P2, DOI 10.1016/j.scico.2013.04.006
   Amani S, 2018, P 7 INT C CERT PROGR, P66, DOI DOI 10.1145/3167084
   Ambroladze N., 2018, THESIS
   Andersen Lars Ole, 1994, THESIS U COPHENHAGEN
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Bernani T., 2016, ORACLIZE
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bloxy, 2018, BLOXYS
   Brent L., 2018, CORR
   Brockschmidt M, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2866575
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen T, 2020, INT J ADV MANUF TECH, V111, P3545, DOI 10.1007/s00170-020-06097-w
   Ethereum, 2018, ETHERSCAN
   Ethereum, 2018, VYPER
   Ethereum, 2018, SOLIDITY
   EthereumPot, 2017, ETHEREUMPOT CONTRACT
   Foundation E., 2018, SAFETY ETHEREUM WIKI
   Giacobazzi R., 2014, LECT NOTES COMPUTER, V3148, P133
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   Hajdu A, 2020, LECT NOTES COMPUT SC, V12075, P224, DOI 10.1007/978-3-030-44914-8_9
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Hoffmann J, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P357, DOI 10.1145/1926385.1926427
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Luu L., 2018, OYENTE ANAL TOOL SMA
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Marescotti Matteo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P450, DOI 10.1007/978-3-030-03427-6_33
   Mavridou A., 2017, CORR ARXIVABS1711093
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Rattle, 2018, RATTLE AN EVM BINARY
   Sergey I., 2019, 13 INT C VER EV COMP
   Sharma S, 2018, 25 INT NETW DISTR
   Signer C, 2018, THESIS SWISS FEDERAL
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Suiche M., 2017, DEF CON, V25, P30
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
NR 51
TC 11
Z9 11
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2021
VL 176
AR 110923
DI 10.1016/j.jss.2021.110923
EA MAR 2021
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH7CH
UT WOS:000636371400012
DA 2024-07-18
ER

PT J
AU Auch, M
   Weber, M
   Mandl, P
   Wolff, C
AF Auch, Maximilian
   Weber, Manuel
   Mandl, Peter
   Wolff, Christian
TI Similarity-based analyses on software applications: A systematic
   literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Software similarity; Secondary study; Machine learning
ID AUTOMATIC CATEGORIZATION; PROJECTS; CLASSIFICATION; BYTECODE
AB In empirical studies on processes, practices, and techniques of software engineering, automation and machine learning are gaining popularity. In order to extract knowledge from existing software projects, a sort of similarity analysis is often performed using different methodologies, data and metadata. This systematic literature review focuses therefore on existing approaches of similarity-, categorization-and relevance-based analysis on software applications. In total, 136 relevant publications and patents were identified between 2002 and 2019 according to the established inclusion and exclusion criteria, which perform a calculation of software similarity in general or to support certain software engineering phases. (C) 2020 Elsevier Inc. All rights reserved.
C1 [Auch, Maximilian; Weber, Manuel; Mandl, Peter] Munich Univ Appl Sci, Lothstr 64, D-80335 Munich, Germany.
   [Wolff, Christian] Univ Regensburg, Regensburg, Germany.
C3 University of Munich; University of Regensburg
RP Auch, M (corresponding author), Munich Univ Appl Sci, Lothstr 64, D-80335 Munich, Germany.
EM maximilian.auch@hm.edu
RI ; Wolff, Christian/A-1345-2009
OI Auch, Maximilian/0000-0002-4860-7464; Wolff,
   Christian/0000-0001-7278-8595; Weber, Manuel/0000-0001-9488-7877; Mandl,
   Peter/0000-0003-4508-7667
CR Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Al-Subaihin A, 2019, EMPIR SOFTW ENG, V24, P3290, DOI 10.1007/s10664-019-09726-5
   Allaho M.Y., 2014, RECOMMENDATION SERVI
   Altarawy D, 2018, J SYST SOFTWARE, V142, P21, DOI 10.1016/j.jss.2018.04.018
   Nguyen AT, 2017, PROC IEEE ACM INT C, P164, DOI 10.1109/ICSE-C.2017.118
   Aveyard H.A., 2014, DOING LIT REV HLTH S, V3rd
   Avila J.R.E., 2015, MODEL AUTOMATIC CATE
   Babatunde O., 2016, ABS160808574 CORR
   Baldrich S.V., 2015, AUTOMATIC MULTILABEL
   Ben Lulu DL, 2016, MOB INF SYST, V2016, DOI 10.1155/2016/3083450
   Berardi G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P585, DOI 10.1145/2695664.2695997
   Bhandari Upasna, 2013, Information Retrieval Technology. 9th Asia Information Retrieval Societies Conference, AIRS 2013. Proceedings: LNCS 8281, P440, DOI 10.1007/978-3-642-45068-6_38
   Bodó Z, 2017, FRONT ARTIF INTEL AP, V297, P88, DOI 10.3233/978-1-61499-800-6-88
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bu N, 2016, LECT NOTES COMPUT SC, V10042, P324, DOI 10.1007/978-3-319-48743-4_26
   Bu N, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SMART CITY/SOCIALCOM/SUSTAINCOM (SMARTCITY), P856, DOI 10.1109/SmartCity.2015.175
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Cao D, 2017, INFORM SCIENCES, V381, P161, DOI 10.1016/j.ins.2016.11.025
   Catal C, 2017, INT J SOFTW ENG KNOW, V27, P1129, DOI 10.1142/S0218194017500425
   Cesare S., 2012, SOFTWARE SIMILARITY, P77
   Chao Z., 2018, FEASIBILITY STUDY AD, V27, P1
   Chen N, 2016, PROCEEDINGS OF THE NINTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'16), P63, DOI 10.1145/2835776.2835812
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Chen W, 2017, P INT COMP SOFTW APP, P160, DOI 10.1109/COMPSAC.2017.17
   Chen W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P700, DOI 10.1109/ICWS.2017.84
   Chen X., 2018, REQUIR ENG
   Christophe F, 2012, PROCEEDINGS OF THE ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE, 2011, VOL 9, P17
   Cooper H.M., 1988, Knowledge in Society, V1, P104, DOI [DOI 10.1007/BF03177550, 10.1007/BF03177550]
   Creel C.T., 2008, Google Patents, US Patent, Patent No. [7, 366, 680, 7,366,]
   Dong F, 2016, INT CONF CLOUD COMPU, P77, DOI 10.1109/CCIS.2016.7790228
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Escobar-Avila J, 2015, INT C PROGRAM COMPRE, P229, DOI 10.1109/ICPC.2015.33
   Escobar-Avila J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P784, DOI 10.1109/ICSE.2015.249
   Ganesan K, 2017, TOPIC SUGGESTIONS MI
   Ghosh S., 2016, CONTEXTUAL LSTM CLST
   Github, 2018, STAT OCT
   Grechanik M., 2014, Google Patents, US Patent, Patent No. [8, 832, 655, 8,832,]
   Guendouz Mohamed, 2015, International Journal of Open Source Software and Processes, V6, P1, DOI 10.4018/IJOSSP.2015010101
   Hamedani MR, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/1250359
   Hamednai MR, 2019, SOFT COMPUT, V23, P7569, DOI 10.1007/s00500-019-03755-4
   Hao YQ, 2016, P IEEE I C SERV COMP, P227, DOI 10.1109/SCC.2016.37
   Hernández L, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P397, DOI 10.1109/ITNG.2015.70
   Humm B.G., 2018, SEMANTIC APPL METHOD, P243
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Inoue K, 2005, LECT NOTES COMPUT SC, V3547, P399
   Kanda T., 2011, IEICE, V111, P35
   Kawaguchi S, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P195, DOI 10.1109/IWPSE.2003.1231227
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kelly MB, 2011, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2011.23
   Kim Y., 2015, P 2015 C RES ADAPTIV, P114, DOI DOI 10.1145/2811411.2811549
   Kim Y, 2018, SOFT COMPUT, V22, P595, DOI 10.1007/s00500-016-2357-x
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Krishna P., 2018, P 26 ANN INT ACM SIG, P425
   LeClair A, 2018, PROC IEEE INT CONF S, P461, DOI 10.1109/ICSME.2018.00056
   Lee CP, 2014, NEURAL COMPUT, V26, P781, DOI 10.1162/NECO_a_00571
   Li SH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P501, DOI 10.1145/2889160.2889204
   Li X, 2016, PROCEEDINGS OF 2016 IEEE INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA 2016), P193, DOI 10.1109/ICCCBDA.2016.7529557
   Li YJ, 2010, 2010 INTERNATIONAL COLLOQUIUM ON COMPUTING, COMMUNICATION, CONTROL, AND MANAGEMENT (CCCM2010), VOL III, P1
   Liao YB, 2016, IEEE INT CONF MO, P200, DOI 10.1109/MobServ.2016.39
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu C, 2018, IEEE ACCESS, V6, P52082, DOI 10.1109/ACCESS.2018.2869207
   Liu CY, 2019, ACM T KNOWL DISCOV D, V13, DOI 10.1145/3320482
   Liu Haitao, 2012, Proceedings of the 2012 IEEE International Conference on Computer Science and Automation Engineering (CSAE 2012), P617, DOI 10.1109/CSAE.2012.6273028
   Liu XR, 2016, ADV MATER SCI ENG, V2016, DOI 10.1155/2016/7013032
   Ma Q, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P599, DOI 10.1109/ASONAM.2016.7752297
   Ma YZ, 2018, IEEE WORK CONF MIN S, P414, DOI 10.1145/3196398.3196446
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   McMillan C., 2012, THESIS
   McMillan C., 2012, CLAN CLOSELY RELATED
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Mens T., 2014, EVOLVING SOFTWARE SY, P1
   Mingshan Jr H, 2018, LEVERAGING MOBILE AP
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Nadezhda Y, 2019, ADV INTELL SYST COMP, V874, P341, DOI 10.1007/978-3-030-01818-4_34
   Nafi KW, 2018, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2018.00023
   Nazir S, 2019, ARAB J SCI ENG, V44, P3905, DOI 10.1007/s13369-019-03718-9
   Neely JG, 2010, OTOLARYNG HEAD NECK, V142, P6, DOI 10.1016/j.otohns.2009.09.005
   Nguyen P., 2018, CEUR WORKSHOP P, V2140
   Nguyen PT, 2018, EUROMICRO CONF PROC, P388, DOI 10.1109/SEAA.2018.00069
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Ochiai Keiichi., 2019, Local App Classification using Deep Neural Network based on Mobile App Market Data
   Paithankar K, 2009, INT C COMP ELEC ENG, P436, DOI 10.1109/ICCEE.2009.216
   Pan TH, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C 2016), P151, DOI 10.1109/QRS-C.2016.24
   Petrovic G, 2016, FRONT ARTIF INTEL AP, V286, P358, DOI 10.3233/978-1-61499-674-3-358
   Portugal R.L. Q., 2017, CAiSE-Forum-DC, P113
   Prieto R., 2014, Google Patents, US Patent App, Patent No. [14/053, 890, 14/053,890]
   Qiu DH, 2013, 2013 SIXTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P75, DOI 10.1109/ICACI.2013.6748477
   Portugal RLQ, 2015, 1ST INTERNATIONAL WORKSHOP ON JUST-IN-TIME RE (JIT RE 2015), P5, DOI 10.1109/JITRE.2015.7330171
   Radosavljevic V, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P93, DOI 10.1145/2872518.2889411
   Raja D.R.K., 2019, MULTIMEDIA TOOLS APP
   Randolph J., 2009, PRACTICAL ASSESSMENT, V14, P1, DOI [DOI 10.7275/B0AZ-8T74, 10.7275/b0az-8t74]
   Rustgi Pulkit, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P1071, DOI 10.23919/INM.2017.7987440
   Sanap A., 2016, ANAL APP REV PROFILE
   Sandhu P.S., 2007, APPROACHES CATEGORIZ
   Sandhu PS, 2007, INT J COMPUT SCI NET, V7, P114
   Santos M., 2014, SIMILAR CHARACTERIST
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Sharma A., 2017, ACM INT C P SERIES, P314
   Sharma P, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING AND INFORMATION SYSTEMS (ICNGCIS), P43, DOI 10.1109/ICNGCIS.2017.33
   Shewale S.K., 2015, INT J ENG TECHNOL RE, V3
   Singla K., 2018, EVALUATING USAGE IMA
   Singla K, 2018, LECT NOTES COMPUT SC, V10859, P135, DOI 10.1007/978-3-319-91947-8_14
   Barreto AOS, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P441, DOI 10.1109/QUATIC.2010.79
   Soll M, 2017, LECT NOTES ARTIF INT, V10505, P373, DOI 10.1007/978-3-319-67190-1_34
   Srinivas C., 2015, P INT C ENG MIS 2015
   Su F.-H., 2018, THESIS
   Su X, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P988, DOI 10.1109/ISCC.2015.7405642
   Sun XB, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9419-x
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Surian D, 2017, IEEE T KNOWL DATA EN, V29, P1591, DOI 10.1109/TKDE.2017.2686851
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Ugurel S, 2002, P 8 ACM SIGKDD INT C, P632, DOI DOI 10.1145/775047.775141
   Vakulenko S., 2014, ENRICHING ITUNES APP
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Venkataramani R, 2013, PROC IEEE INT CONF S, P372, DOI 10.1109/ICSM.2013.50
   Wang F, 2013, 2013 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY - WORKSHOPS (WI-IAT), VOL 3, P13, DOI 10.1109/WI-IAT.2013.142
   Wang T, 2014, IEICE T INF SYST, VE97D, P2386, DOI 10.1587/transinf.2014EDP7007
   Wang T, 2013, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSM.2013.35
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   White C, 2018, INNOV LANG LEARN TEA, V12, P1, DOI 10.1080/17501229.2018.1418238
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xu W., 2017, ACM INT C P SERIES
   Xu WY, 2017, PROC IEEE INT CONF S, P648, DOI 10.1109/ICSME.2017.20
   Yang C, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P54, DOI 10.1145/2993717.2993725
   Yang CZ, 2012, LECT NOTES ENG COMP, P769
   Yang ST, 2015, LECT NOTES ARTIF INT, V9101, P415, DOI 10.1007/978-3-319-19066-2_40
   Yao Y, 2017, ACM T INFORM SYST, V35, DOI 10.1145/3015458
   Yaremchuck S., 2018, APPL BIG DATA ANAL T, P185
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yin K, 2018, ASIA PAC SOFWR ENG, P426, DOI 10.1109/APSEC.2018.00057
   Yin K, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275220
   Yin Peifeng., 2013, Proceedings of ACM Interna- tional Conference on Web Search and Data Mining, P395
   Yoon YC, 2017, ETRI J, V39, P443, DOI 10.4218/etrij.17.0116.0936
   Yu H., 2017, P 9 ASIA PACIFIC S I, p17:1
   Yuan CZ, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY PROCEEDINGS - CYBERC 2016, P173, DOI 10.1109/CyberC.2016.42
   Yusof Y., 2012, CLASSIFICATION MACHI
   Yusof Y., 2010, INT J SOFT COMPUT, V5, P109
   Yusof Y, 2010, LECT NOTES ARTIF INT, V6279, P546, DOI 10.1007/978-3-642-15384-6_58
   Zhang L, 2014, EURASIP J ADV SIG PR, DOI 10.1186/1687-6180-2014-96
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   ZhangChao WanLili, 2018, EVALUATION FUNCTIONA, V17, P111
   Zheng DY, 2016, 2016 INTERNATIONAL CONFERENCE ON SMART CITY AND SYSTEMS ENGINEERING (ICSCSE), P361, DOI [10.1109/ICSCSE.2016.80, 10.1109/ICSCSE.2016.0101]
   Zhou J., 2016, Automated app categorization using api analysis
   Zhou JQ, 2019, 2019 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE BIG DATA AND INTELLIGENT SYSTEMS (HPBD&IS), P132, DOI [10.1109/hpbdis.2019.8735463, 10.1109/HPBDIS.2019.8735463]
   Zhu HS, 2014, IEEE T MOBILE COMPUT, V13, P1550, DOI 10.1109/TMC.2013.113
   Zhu Z, 2012, IN C IND ENG ENG MAN, P1617, DOI 10.1109/IEEM.2012.6838020
NR 153
TC 11
Z9 11
U1 1
U2 23
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2020
VL 168
AR 110669
DI 10.1016/j.jss.2020.110669
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MX6ZZ
UT WOS:000557871300019
DA 2024-07-18
ER

PT J
AU Alrashedy, K
   Dharmaretnam, D
   German, DM
   Srinivasan, V
   Gulliver, TA
AF Alrashedy, Kamel
   Dharmaretnam, Dhanush
   German, Daniel M.
   Srinivasan, Venkatesh
   Gulliver, T. Aaron
TI SCC plus plus : Predicting the programming language of questions and
   snippets of Stack Overflow
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Classification; Machine learning; Natural language processing; And
   programming languages
AB Stack Overflow is the most popular Q&A website among software developers. As a platform for knowledge sharing and acquisition, the questions posted on Stack Overflow usually contain a code snippet. Determining the programming language of a source code file has been considered in the research community; it has been shown that Machine Learning (ML) and Natural Language Processing (NLP) algorithms can be effective in identifying the programming language of source code files. However, determining the programming language of a code snippet or a few lines of source code is still a challenging task. Online forums such as Stack Overflow and code repositories such as GitHub contain a large number of code snippets. In this paper, we design and evaluate Source Code Classification (SCC++), a classifier that can identify the programming language of a question posted on Stack Overflow. The classifier achieves an accuracy of 88.9% in classifying programming languages by combining features from the title, body and the code snippets of the question. We also propose a classifier that only uses the title and body of the question and has an accuracy of 78.9%. Finally, we propose a classifier of code snippets only that achieves an accuracy of 78.1%. These results show that deploying Machine Learning techniques on the combination of text and code snippets of a question provides the best performance. In addition, the classifier can distinguish between code snippets from a family of programming languages such as C. C++ and C#, and can also identify the programming language version such as C# 3.0, C# 4.0 and C# 5.0. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Alrashedy, Kamel; Dharmaretnam, Dhanush; German, Daniel M.; Srinivasan, Venkatesh] Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
   [Gulliver, T. Aaron] Univ Victoria, Dept Elect & Comp Engn, Victoria, BC V8W 2Y2, Canada.
C3 University of Victoria; University of Victoria
RP Alrashedy, K (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
EM kamel@uvic.ca; dhanushd@uvic.ca; dmg@uvic.ca; srinivas@uvic.ca;
   agullive@uvic.ca
FU Saudi Ministry of Education
FX Kamel Alrashedy acknowledges the financial support of the Saudi Ministry
   of Education through a graduate scholarship. The authors would like to
   thank Kwang Moo Yi for his helpful comments on this work.
CR Alreshedy K, 2018, IEEE INT WORK C SO, P203, DOI 10.1109/SCAM.2018.00031
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], 2013, P 9 JOINT M EUR SOFT
   [Anonymous], 2018, Programming Language Usage
   [Anonymous], SURV RES
   [Anonymous], C INT ADV APPL COMP
   [Anonymous], P INT C MACH LEARN D
   [Anonymous], CORR
   Baquero JF, 2017, COMM COM INF SC, V735, P199, DOI 10.1007/978-3-319-66562-7_15
   Bielik P, 2016, PR MACH LEARN RES, V48
   Breiman L., 2001, Mach. Learn., V45, P5
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Gilda S, 2017, INT JOINT CONF COMP
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Honnibal M., 2015, P 2015 C EMP METH NA, DOI [DOI 10.18653/V1/D15-1162, 10.18653/v1/d15-1162]
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jurafsky D., 2009, SPEECH LANGUAGE PROC, P223
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1043, DOI 10.1145/1985793.1985991
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Saha AK, 2013, IEEE WORK CONF MIN S, P73, DOI 10.1109/MSR.2013.6624009
   Stanley Clayton, 2013, P 12 INT C COGN MOD, P414
   van Dam JK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P624, DOI 10.1109/SANER.2016.92
NR 25
TC 8
Z9 8
U1 0
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2020
VL 162
AR 110505
DI 10.1016/j.jss.2019.110505
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KO3DJ
UT WOS:000515427800010
DA 2024-07-18
ER

PT J
AU Sobhya, D
   Minku, L
   Bahsoon, R
   Chen, T
   Kazman, R
AF Sobhya, Dalia
   Minku, Leandro
   Bahsoon, Rami
   Chen, Tao
   Kazman, Rick
TI Run-time evaluation of architectures: A case study of diversification in
   IoT
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Run-time architecture evaluation; Runtime architecture evaluation;
   Software architectures for dynamic environments; Internet of things;
   IoT; Design diversity
ID SIMULATION; ENVIRONMENTS; INTERNET; TOOLKIT; VISION; THINGS
AB Run-time properties of modern software system environments, such as Internet of Things (IoT), are a challenge for existing software architecture evaluation methods. Such systems are largely data-driven, characterized by their dynamism, unpredictability in operation, hyper-connectivity, and scale. Properties, such as performance, delayed delivery, and scalability, are acknowledged to pose great risk and are difficult to evaluate at design-time. Run-time evaluation could potentially be used to complement design time evaluation, enabling significant deviations from the expected performance values to be captured. However, there are no systematic software architecture evaluation methods that intertwine and interleave design-time and run-time evaluation. This paper addresses this gap by proposing a novel run-time architecture evaluation method suited for systems that exhibit uncertainty and dynamism in their operation. Our method uses machine learning and cost-benefit analysis at run-time to continuously profile the architecture decisions made, to assess their added value. We demonstrate the applicability and effectiveness of this approach in the context of an IoT system architecture, where some architecture design decisions were diversified to meet Quality of Service (QoS) requirements. Our approach provides run-time assessment for these decisions which can inform deployment, refinement, and/or phasing-out decisions. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Sobhya, Dalia; Minku, Leandro; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
   [Sobhya, Dalia] Arab Acad Sci & Technol & Maritime Transport, Comp Engn, Alexandria, Egypt.
   [Chen, Tao] Loughborough Univ, Dept Comp Sci, Loughborough, Leics, England.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
   [Kazman, Rick] SEI CMU, Pittsburgh, PA USA.
C3 University of Birmingham; Egyptian Knowledge Bank (EKB); Arab Academy
   for Science, Technology & Maritime Transport; Loughborough University;
   University of Hawaii System; Carnegie Mellon University
RP Sobhya, D (corresponding author), Arab Acad Sci & Technol & Maritime Transport, Comp Engn, Alexandria, Egypt.
EM dalia.sobhi@aast.edu; L.L.Minku@cs.bham.ac.uk; r.bahsoon@cs.bham.ac.uk;
   t.t.chen@lboro.ac.uk; kazman@hawaii.edu
OI Kazman, Rick/0000-0003-0392-2783; Chen, Tao/0000-0001-5025-5472; Minku,
   Leandro/0000-0002-2639-0671
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2018, TECHNICAL REPORT
   [Anonymous], [No title captured]
   [Anonymous], 2018, DEPL END TO END IOT
   [Anonymous], 2016, P EUR C SOFTW ARCH E
   [Anonymous], THESIS
   [Anonymous], [No title captured]
   [Anonymous], 2004, DSN 2004 WORKSHOP AR
   [Anonymous], 2007, P 1 INT WORKSH EC SO
   [Anonymous], [No title captured]
   [Anonymous], 2018, AWS STREAMLINES AMAZ
   [Anonymous], [No title captured]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 1984, COMPUTER, V17, P67, DOI 10.1109/MC.1984.1659219
   Balasubramanian N, 2009, IMC'09: PROCEEDINGS OF THE 2009 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P280
   Baudry B., 2014, ISSTA
   Baudry B, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P395, DOI 10.1109/CSMR-WCRE.2014.6747203
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bennaceur A., 2012, P INT WORKSH ET SYST, P16
   Bittencourt LF, 2017, IEEE CLOUD COMPUT, V4, P26, DOI 10.1109/MCC.2017.27
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Brandao LE, 2005, DECIS ANAL, V2, P69, DOI DOI 10.1287/DECA.1050.0040
   Branke E, 2004, LECT NOTES COMPUT SC, V3242, P722, DOI 10.1007/978-3-540-30217-9_73
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen Y, 2016, INT CONF SEL TOP MOB, P159
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng Shang-Wen., 2008, Rainbow: Cost-Effective Software Architecture-Based Self- Adaptation
   Cooray D, 2013, IEEE T SOFTWARE ENG, V39, P1714, DOI 10.1109/TSE.2013.36
   COX JC, 1979, J FINANC ECON, V7, P229, DOI 10.1016/0304-405X(79)90015-1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2011, ENG OPTIMIZ, V43, P1175, DOI 10.1080/0305215X.2010.548863
   Dejun JA, 2010, LECT NOTES COMPUT SC, V6275, P197
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Esfahani N, 2013, IEEE T SOFTWARE ENG, V39, P1467, DOI 10.1109/TSE.2013.37
   Esfahani N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P43, DOI 10.1109/ICSE.2013.6606550
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Gama J, 2004, LECT NOTES ARTIF INT, V3171, P286
   Gama J, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2523813
   Ghezzi Carlo, 2013, Software Engineering for Self-Adaptive Systems II, P191
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guérout T, 2013, SIMUL MODEL PRACT TH, V39, P76, DOI 10.1016/j.simpat.2013.04.007
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Heaven W, 2009, LECT NOTES COMPUT SC, V5525, P109, DOI 10.1007/978-3-642-02161-9_6
   Holt CC, 2004, INT J FORECASTING, V20, P5, DOI 10.1016/j.ijforecast.2004.09.015
   Horn J, 1994, EVOL COMPUT, V2, P37, DOI 10.1162/evco.1994.2.1.37
   Hull John C., 2006, Options, Futures and Other Derivatives
   Issarny V, 2016, LECT NOTES COMPUT SC, V9936, P3, DOI 10.1007/978-3-319-46295-0_1
   Jamshidi Pooyan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P31, DOI 10.1109/SEAMS.2017.11
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R., 2000, TECHNICAL REPORT
   Kazman R, 2018, IEEE SOFTWARE, V35, P102, DOI 10.1109/MS.2018.3571227
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P76, DOI 10.1109/SEAMS.2009.5069076
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kuncheva LI, 2004, LECT NOTES COMPUT SC, V3077, P1
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Meedeniya I., 2011, QOSAISARCS, P85
   Muthanna A, 2019, J SENS ACTUAT NETW, V8, DOI 10.3390/jsan8010015
   Nahrstedt K, 2016, PROCEEDINGS 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON INTERNET-OF-THINGS DESIGN AND IMPLEMENTATION IOTDI 2016, P25, DOI 10.1109/IoTDI.2015.41
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Ramírez A, 2017, EXPERT SYST APPL, V72, P357, DOI 10.1016/j.eswa.2016.10.047
   Sabhnani M, 2003, MLMTA'03: INTERNATIONAL CONFERENCE ON MACHINE LEARNING; MODELS, TECHNOLOGIES AND APPLICATIONS, P209
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tesauro G, 2007, IEEE INTERNET COMPUT, V11, P22, DOI 10.1109/MIC.2007.21
   Tesauro G, 2005, 3RD INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P65
   Wagner F, 2016, IEEE T SERV COMPUT, V9, P277, DOI 10.1109/TSC.2013.2295791
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Xu LD, 2014, IEEE T IND INFORM, V10, P2233, DOI 10.1109/TII.2014.2300753
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhao D., 2011, P IEEE S AD DYN PROG, P318
   Zhu XQ, 2004, ARTIF INTELL REV, V22, P177, DOI 10.1007/s10462-004-0751-8
NR 80
TC 12
Z9 12
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2020
VL 159
AR 110428
DI 10.1016/j.jss.2019.110428
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2JD
UT WOS:000502883100022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, Y
   Graziotin, D
   Kriso, S
   Wagner, S
AF Wang, Yang
   Graziotin, Daniel
   Kriso, Stefan
   Wagner, Stefan
TI Communication channels in safety analysis: An industrial exploratory
   case study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Safety analysis; Communication; Purposes; Challenges; Case study;
   Safety-critical systems
ID CRITICAL SYSTEMS; CULTURE
AB Context: Safety analysis is a predominant activity in developing safety-critical systems. It is a highly cooperative task among multiple functional departments due to increasingly sophisticated safety-critical systems and close-knit development processes. Communication occurs pervasively.
   Motivation: Effective communication channels among multiple functional departments influence safety analysis quality as well as a safe product delivery. However, the use of communication channels during safety analysis is sometimes arbitrary and poses challenges.
   Objective: In this article, we aim to investigate the existing communication channels, their usage frequencies, their purposes and challenges during safety analysis in industry.
   Method: We conducted a multiple case study by surveying 39 experts and interviewing 21 experts in safety-critical companies including software developers, quality engineers and functional safety managers. Direct observations and documentation review were also conducted.
   Results: Popular communication channels during safety analysis include formal meetings, project coordination tools, documentation and telephone. Email, personal discussion, training, internal communication software and boards are also in use. Training involving safety analysis happens 1-4 times per year, while other aforementioned communication channels happen ranging from 1-4 times per day to 1-4 times per month. We summarise 28 purposes of using these aforementioned communication channels. Communication happens mostly for the purpose of clarifying safety requirements, fixing temporary problems, conflicts and obstacles and sharing safety knowledge. The top 10 challenges are: (1) sensitiveness and confidentiality of safety analysis information; (2) fragmented safety analysis information; (3) inconsistent safety analysis information; (4) asynchronous channels; (5) a lack of tool support; (6) misunderstanding between developers and safety analysts; (7) language, geographic and culture limitations; (8) unwillingness to communicate (groupthink); (9) storage, authority, regulation and monitoring of safety analysis information; (10) a lack of documentation concerning safety analysis to support communication.
   Conclusion: During safety analysis, to use communication channels effectively and avoid challenges, a clear purpose of communication during safety analysis should be established at the beginning. We have limitations primarily on the research context namely the scope of domains, participants and countries. To derive countermeasures of fixing the top 10 challenges are potential next steps. (C) 2019 Elsevier Inc. All rights reserved.
C1 [Wang, Yang; Graziotin, Daniel] Univ Stuttgart, Stuttgart, Germany.
   [Wagner, Stefan] Univ Stuttgart, Inst Software Technol, Software Engn, Stuttgart, Germany.
   [Kriso, Stefan] Robert Bosch GmbH, Stuttgart, Germany.
C3 University of Stuttgart; University of Stuttgart; Bosch
RP Wang, Y (corresponding author), Univ Stuttgart, Stuttgart, Germany.
EM yang.wang@iste.uni-stuttgart.de; daniel.graziotin@iste.uni-stuttgart.de;
   stefan.kriso@de.bosch.com; stefan.wagner@iste.uni-stuttgart.de
RI Wagner, Stefan/A-5200-2018
OI Wagner, Stefan/0000-0002-5256-8429; Graziotin,
   Daniel/0000-0002-9107-7681
FU LGFG Fellowship (Promotionsstipendien nach dem
   Landesgraduiertenforderungsgesetz, Baden-Wurttemberg); Alexander von
   Humboldt (AvH) Foundation
FX Yang Wang has been supported by LGFG Fellowship (Promotionsstipendien
   nach dem Landesgraduiertenforderungsgesetz, Baden-Wurttemberg). Daniel
   Graziotin has been supported by the Alexander von Humboldt (AvH)
   Foundation.
CR [Anonymous], 2002, Agile software development
   [Anonymous], 61508 IEC 1
   [Anonymous], J SYST SOFTW
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P XP SCI WORKSH
   [Anonymous], RES DESIGN QUALITATI
   [Anonymous], LIT REV SAFETY RELAT
   [Anonymous], 2002, AGILE SOFTWARE DEV S
   [Anonymous], HDB COMMUNICATION AN
   [Anonymous], HUMAN REACTIONS TECH
   [Anonymous], ERA 2014 INTEROP OP
   [Anonymous], FOS 2007 FUT SOFTW
   [Anonymous], P IEEE
   [Anonymous], 2004, MANAGEMENT INFORM SY
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], ANN REV ORG PSYCHOL
   [Anonymous], FORUM QUALITATIVE SO
   Baym NK, 2004, NEW MEDIA SOC, V6, P299, DOI 10.1177/1461444804041438
   BOWEN J, 1993, SOFTWARE ENG J, V8, P189, DOI 10.1049/sej.1993.0025
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   Cutler R., 2002, MULTIMEDIA 02, P503, DOI DOI 10.1145/641007.641112
   Dabbish L. A., 2005, Proceedings of the SIGCHI conference on human factors in computing systems, P691, DOI DOI 10.1145/1054972.1055068
   Djamba YK, 2002, TEACH SOCIOL, V30, P380, DOI 10.2307/3211488
   Flin R., 2008, Safety at the sharp end: A guide to nontechnical skills
   Guldenmund FW, 2000, SAFETY SCI, V34, P215, DOI 10.1016/S0925-7535(00)00014-X
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   I. O. for Standardisation, 2011, ISO 26262 FUNCTIONAL
   JANIS IL, 1971, PSYCHOL TODAY, V5, P43
   Johnson J.D., 1994, J BUS COMMUN, V31, P111, DOI DOI 10.1177/002194369403100202
   KIESLER S, 1992, ORGAN BEHAV HUM DEC, V52, P96, DOI 10.1016/0749-5978(92)90047-B
   Leveson NG, 2011, ENG SYST, P1
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Martini A, 2016, J SOFTW-EVOL PROC, V28, P4, DOI 10.1002/smr.1757
   Martins LEG, 2017, IEEE SOFTWARE, V34, P49, DOI 10.1109/MS.2017.94
   Nesheim T, 2014, SAFETY SCI, V62, P28, DOI 10.1016/j.ssci.2013.07.018
   Olson G. M., 1992, Human-Computer Interaction, V7, P347, DOI 10.1207/s15327051hci0704_1
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Reiman T., 2009, Evaluating Safety-Critical Organizations - Emphasis on the nuclear industry
   Reiman T, 2015, SAFETY SCI, V71, P80, DOI 10.1016/j.ssci.2014.07.021
   Rierson L., 2017, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Saks AM, 2006, HUM RESOUR MANAGE-US, V45, P629, DOI 10.1002/hrm.20135
   Stalhane T., 2012, P 11 INT PROB SAF AS, P6052
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Stork M, 2010, INT CONF CIRC SYST S, P359
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   Wang Y, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P266, DOI 10.1145/3183519.3183538
NR 50
TC 4
Z9 8
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2019
VL 153
BP 135
EP 151
DI 10.1016/j.jss.2019.04.004
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY3HI
UT WOS:000468013900008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kechagia, M
   Fragkoulis, M
   Louridas, P
   Spinellis, D
AF Kechagia, Maria
   Fragkoulis, Marios
   Louridas, Panos
   Spinellis, Diomidis
TI The exception handling riddle: An empirical study on the Android API
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Exceptions; Application programming interfaces; Documentation
ID JAVA; DESIGN; USABILITY
AB We examine the use of the Java exception types in the Android platform's Application Programming Interface (API) reference documentation and their impact on the stability of Android applications. We develop a method that automatically assesses an API's quality regarding the exceptions listed in the API's documentation. We statically analyze ten versions of the Android platform's API (14-23) and 3539 Android applications to determine inconsistencies between exceptions that analysis can find in the source code and exceptions that are documented. We cross-check the analysis of the Android platform's API and applications with crash data from 901,274 application execution failures (crashes). We discover that almost 10% of the undocumented exceptions that static analysis can find in the Android platform's API source code manifest themselves in crashes. Additionally, we observe that 38% of the undocumented exceptions that developers use in their client applications to handle API methods also manifest themselves in crashes. These findings argue for documenting known might-thrown exceptions that lead to execution failures. However, a randomized controlled trial we run shows that relevant documentation improvements are ineffective and that making such exceptions checked is a more effective way for improving applications' stability. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Kechagia, Maria; Fragkoulis, Marios; Louridas, Panos] Athens Univ Econ & Business, 76 Patission Str, Athens, Greece.
   [Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, 76 Patission Str, Athens, Greece.
   [Kechagia, Maria] Delft Univ Technol, Software Engn Res Grp, van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
C3 Athens University of Economics & Business; Athens University of
   Economics & Business; Delft University of Technology
RP Kechagia, M (corresponding author), Delft Univ Technol, van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
EM mkechagia@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Kechagia,
   Maria/0000-0001-9092-3244
CR Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Barbosa EA, 2018, IEEE T SOFTWARE ENG, V44, P855, DOI 10.1109/TSE.2017.2716925
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Bell J, 2014, ACM SIGPLAN NOTICES, V49, P83, DOI [10.1145/2660193.2660212, 10.1145/2714064.2660212]
   Bhattacharyya H., 2004, KRUSKAL WALLIS TEST, DOI [10.1002/0471667196.ess1369.pub2, DOI 10.1002/0471667196.ESS1369.PUB2]
   Bloch J., 2008, 9 EXCEPTIONS ADDISON, P209
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   BYAR DP, 1993, STAT MED, V12, P1629, DOI 10.1002/sim.4780121708
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Chen CT, 2009, J SYST SOFTWARE, V82, P333, DOI 10.1016/j.jss.2008.06.035
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Drossopoulou S., 2000, JAVA EXCEPTIONS THRO
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Farooq U, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Ganapathi A, 2006, LISA, V6, P49
   Garcia I., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P1, DOI 10.1109/LADCW.2011.18
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Henning M, 2009, COMMUN ACM, V52, P46, DOI 10.1145/1506409.1506424
   Kechagia M., 2014, Proceedings of the 11th ACM Working Conference on Mining Software Repositories, P312
   Kechagia M, 2015, EMPIR SOFTW ENG, V20, P1785, DOI 10.1007/s10664-014-9343-7
   Kery MB, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P484, DOI [10.1109/MSR.2016.060, 10.1145/2901739.2903497]
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Kiniry JR, 2006, LECT NOTES COMPUT SC, V4119, P288
   Lang J, 1998, ACM T PROGR LANG SYS, V20, P274, DOI 10.1145/276393.276395
   Leroy X, 2000, ACM T PROGR LANG SYS, V22, P340, DOI 10.1145/349214.349230
   Li LB, 2016, AER ADV ENG RES, V43, P12
   Liblit B., 2002, TECHNICAL REPORT
   Lim TS, 1996, COMPUT STAT DATA AN, V22, P287, DOI 10.1016/0167-9473(95)00054-2
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P250, DOI 10.1109/SYNASC.2013.40
   Mayer C, 2012, ACM SIGPLAN NOTICES, V47, P683, DOI 10.1145/2398857.2384666
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Nakshatri S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P500, DOI [10.1145/2901739.2903499, 10.1109/MSR.2016.064]
   Oliveira J, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P23, DOI 10.1145/2973839.2973843
   Papi Matthew M., 2008, INT S SOFT TEST AN I, P201
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   Salkind N., 2010, ENCY RES DESIGN 1, P1648
   Santos AL, 2017, J SYST SOFTWARE, V126, P17, DOI 10.1016/j.jss.2016.12.036
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Sinha S, 1998, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSM.1998.738526
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
   Yan DC, 2013, PROC INT SYMP SOFTW, P411, DOI 10.1109/ISSRE.2013.6698894
   Yi K, 2002, THEOR COMPUT SCI, V277, P185, DOI 10.1016/S0304-3975(00)00317-0
   Zhang YZ, 2016, ACM SIGPLAN NOTICES, V51, P281, DOI [10.1145/2908080.2908086, 10.1145/2980983.2908086]
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
NR 69
TC 9
Z9 9
U1 0
U2 9
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2018
VL 142
BP 248
EP 270
DI 10.1016/j.jss.2018.04.034
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GL3LS
UT WOS:000437037200015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Devroey, X
   Perrouin, G
   Papadakis, M
   Legay, A
   Schobbens, PY
   Heymans, P
AF Devroey, Xavier
   Perrouin, Gilles
   Papadakis, Mike
   Legay, Axel
   Schobbens, Pierre-Yves
   Heymans, Patrick
TI Model-based mutant equivalence detection using automata language
   equivalence and simulations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model-based mutation analysis; Automata language equivalence; Random
   simulations
ID MUTATION
AB Mutation analysis is a popular technique for assessing the strength of test suites. It relies on the mutation score, which indicates their fault-revealing potential. Yet, there are mutants whose behaviour is equivalent to the original system, wasting analysis resources and preventing the satisfaction of a 100% mutation score. For finite behavioural models, the Equivalent Mutant Problem (EMP) can be transformed to the language equivalence problem of non-deterministic finite automata for which many solutions exist. However, these solutions are quite expensive, making computation unbearable when used for tackling the EMP. In this paper, we report on our assessment of a state-of-the-art exact language equivalence tool and two heuristics we proposed. We used 12 models, composed of (up to) 15,000 states, and 4710 mutants. We introduce a random and a mutation-biased simulation heuristics, used as baselines for comparison. Our results show that the exact approach is often more than ten times faster in the weak mutation scenario. For strong mutation, our biased simulations can be up to 1000 times faster for models larger than 300 states, while limiting the error of misclassifying non-equivalent mutants as equivalent to 8% on average. We therefore conclude that the approaches can be combined for improved efficiency. (C) 2018 Elsevier Inc. All rights reserved.
C1 [Devroey, Xavier] Delft Univ Technol, SERG, Postbus 5, NL-2600 AA Delft, Netherlands.
   [Perrouin, Gilles; Schobbens, Pierre-Yves; Heymans, Patrick] Univ Namur, Namur Digital Inst, Fac Comp Sci, PReCISE, Rue Grandgagnage 21, B-5000 Namur, Belgium.
   [Papadakis, Mike] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, SERVAL Team, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
   [Legay, Axel] INRIA Rennes, Campus Univ Beaulieu, F-35042 Rennes, France.
C3 Delft University of Technology; University of Namur; University of
   Luxembourg; Universite de Rennes
RP Devroey, X (corresponding author), Delft Univ Technol, SERG, Postbus 5, NL-2600 AA Delft, Netherlands.
EM x.d.m.devroey@tudelft.nl; gilles.perrouin@unamur.be;
   michail.papadakis@uni.lu; axel.legay@inria.fr;
   pierre-yves.schobbens@unamur.be; patrick.heymans@unamur.be
RI Perrouin, Gilles/I-1621-2019; Schobbens, Pierre-Yves/H-2333-2011;
   Devroey, Xavier/I-3918-2019
OI Perrouin, Gilles/0000-0002-8431-0377; Schobbens,
   Pierre-Yves/0000-0001-8677-4485; Devroey, Xavier/0000-0002-0831-7606;
   Papadakis, Mike/0000-0003-1852-2547
FU EU [731529]; Dutch 4TU project "Big Software on the Run"; European
   Regional Development Fund (ERDF) "Ideas for the future Internet" (IDEES)
   project [ETR121200001375]; H2020 - Industrial Leadership [731529]
   Funding Source: H2020 - Industrial Leadership
FX We would like to thank Damien Pous for his support on the HKC tool. This
   research was partially funded by the EU Horizon 2020 ICT-10-2016-RIA
   "STAMP" project (No.731529) and the Dutch 4TU project "Big Software on
   the Run" as well as by the European Regional Development Fund (ERDF)
   "Ideas for the future Internet" (IDEES) project (No. ETR121200001375).
CR Aichernig Bernhard K., 2014, Tests and Proofs. 8th International Conference (TAP 2014). Held as Part of STAF 2014. Proceedings: LNCS 8570, P1, DOI 10.1007/978-3-319-09099-3_1
   Aichernig B. K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P752, DOI 10.1109/ICST.2012.169
   Aichernig BK, 2015, SCI COMPUT PROGRAM, V97, P383, DOI 10.1016/j.scico.2014.05.004
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], VARIABILITY INTENSIV
   [Anonymous], 2014, THESIS
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2018, ADV COMPUT
   [Anonymous], HKC LIB V 1 0
   [Anonymous], 2001, INTRO ALGORITHMS
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   [Anonymous], PRINCIPLES MODEL CHE
   [Anonymous], SOFTWARE FAULT INJEC
   [Anonymous], CLIN ORTHOP RELAT RE
   Arcaini P., 2015, ICST, P1
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Bardoczi S., 2015, 2015: Landscape Odyssey-Landscape Architecture in Hungary, P1, DOI DOI 10.1109/ICST.2015.7102607
   Belli F, 2016, SCI COMPUT PROGRAM, V120, P25, DOI 10.1016/j.scico.2016.01.003
   Belli F, 2011, P INT COMP SOFTW APP, P650, DOI 10.1109/COMPSAC.2011.90
   Bonchi F, 2013, ACM SIGPLAN NOTICES, V48, P457, DOI 10.1145/2480359.2429124
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Classen A, 2010, Modelling with FTS: a Collection of Illustrative Examples
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   Devroey X, 2017, IEEE INT CONF SOFTW, P424, DOI 10.1109/ICST.2017.46
   Doyen L, 2010, LECT NOTES COMPUT SC, V6015, P2, DOI 10.1007/978-3-642-12002-2_2
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kupferman O., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P372
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Patel K, 2016, LECT NOTES COMPUT SC, V9976, P123, DOI 10.1007/978-3-319-47443-4_8
   Pelánek R, 2004, LECT NOTES COMPUT SC, V2989, P5
   Pelanek Radek, 2008, International Journal on Software Tools for Technology Transfer, V10, P443, DOI 10.1007/s10009-008-0070-5
   Poulding S, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1279, DOI 10.1145/2576768.2598339
   Poulding S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1359, DOI 10.1145/2739480.2754767
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Sprenkle SE, 2013, SOFTW TEST VERIF REL, V23, P439, DOI 10.1002/stvr.1496
   Walkinshaw N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430549
   WOODWARD MR, 1993, SOFTWARE ENG J, V8, P211, DOI 10.1049/sej.1993.0027
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
NR 62
TC 6
Z9 6
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2018
VL 141
BP 1
EP 15
DI 10.1016/j.jss.2018.03.010
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG7MC
UT WOS:000432881400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bürger, J
   Strüber, D
   Gärtner, S
   Ruhroth, T
   Jürjens, J
   Schneiders, K
AF Buerger, Jens
   Strueber, Daniel
   Gaertner, Stefan
   Ruhroth, Thomas
   Juerjens, Jan
   Schneiders, Kurt
TI A framework for semi-automated co-evolution of security knowledge and
   system models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Security requirements; Software evolution; Co-evolution; Software
   design; Security impact analysis
ID REQUIREMENTS; DESIGN
AB Security is an important and challenging quality aspect of software-intensive systems, becoming even more demanding regarding long-living systems. Novel attacks and changing laws lead to security issues that did not necessarily rise from a flawed initial design, but also when the system fails to keep up with a changing environment. Thus, security requires maintenance throughout the operation phase. Ongoing adaptations in response to changed security knowledge are inevitable. A necessary prerequisite for such adaptations is a good understanding of the security-relevant parts of the system and the security knowledge.
   We present a model-based framework for supporting the maintenance of security during the long-term evolution of a software system. It uses ontologies to manage the system-specific and the security knowledge. With model queries, graph transformation and differencing techniques, knowledge changes are analyzed and the system model is adapted. We introduce the novel concept of Security Maintenance Rules to couple the evolution of security knowledge with co-evolutions of the system model.
   As evaluation, community knowledge about vulnerabilities is used (Common Weakness Enumeration database). We show the applicability of the framework to the iTrust system from the medical care domain and hence show the benefits of supporting co-evolution for maintaining secure systems. (c) 2018 Elsevier Inc. All rights reserved.
C1 [Buerger, Jens; Strueber, Daniel; Ruhroth, Thomas; Juerjens, Jan] Univ Koblenz Landau, Univ Str 1, D-56070 Koblenz, Germany.
   [Gaertner, Stefan] Adesso AG, Stockholmer Allee 200, D-44269 Dortmund, Germany.
   [Schneiders, Kurt] Lebniz Univ Hannover, Welfengarten 1, D-30167 Hannover, Germany.
   [Juerjens, Jan] Fraunhofer ISST, Emil Figge Str 1, D-44227 Dortmund, Germany.
C3 University of Koblenz & Landau
RP Bürger, J (corresponding author), Univ Koblenz Landau, Univ Str 1, D-56070 Koblenz, Germany.
EM buerger@uni-koblenz.de; strueber@uni-koblenz.de;
   stefan.gaertner@adesso.de; ruhroth@uni-koblenz.de;
   kurt.schneider@inf.uni-hannover.de
OI Struber, Daniel/0000-0002-5969-3521; Schneider, Kurt/0000-0002-7456-8323
FU DFG project SecVolution@Runtime [JU 2734/2-2, SCHN 1072/4-2]
FX This research is funded by the DFG project SecVolution@Runtime (JU
   2734/2-2 and SCHN 1072/4-2) which is part of the priority programme SPP
   1593 "Design For Future - Managed Software Evolution".
CR Ahmadian AS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P989, DOI 10.1145/3106237.3122823
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   [Anonymous], COMM WEAKN EN
   [Anonymous], 2005, Secure Systems Development with UML
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baras DSA, 2014, 2014 INTERNATIONAL SYMPOSIUM ON BIOMETRICS AND SECURITY TECHNOLOGIES (ISBAST), P310, DOI 10.1109/ISBAST.2014.7013140
   Bouneffa M, 2014, LECT NOTES BUS INF P, V190, P280, DOI 10.1007/978-3-319-09492-2_17
   Bowman S., 2013, PERSPECT HLTH INF MA, V10
   Braz FA, 2008, INT WORKSHOP DATABAS, P328, DOI 10.1109/DEXA.2008.101
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BSI, 2012, IT BAS PROT CAT
   Bürger J, 2015, P INT COMP SOFTW APP, P153, DOI 10.1109/COMPSAC.2015.72
   Bürger J, 2015, INT J SOFTW TOOLS TE, V17, P267, DOI 10.1007/s10009-014-0364-8
   Burger Jens, 2014, Foundations of Security Analysis and Design VII. FOSAD 2012/2013 Tutorial Lectures: LNCS 8604, P34, DOI 10.1007/978-3-319-10082-1_2
   Compagna L, 2009, ARTIF INTELL LAW, V17, P1, DOI 10.1007/s10506-008-9067-3
   Dayal U., 1994, Active Database Systems: Triggers and Rules for Advanced Database Processing
   Dubois E, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P289, DOI 10.1007/978-3-642-12544-7_16
   Eclipse Foundation, 2018, ECL MOD FRAM PROJ EM
   Elahi G., 2009, REQUIR ENG, V15, P41
   Ernst Neil A, 2011, P 12 INT WORKSH PRIN, P16
   Gärtner S, 2014, INT REQUIR ENG CONF, P103, DOI 10.1109/RE.2014.6912252
   Gegick M, 2007, INFORM SOFTWARE TECH, V49, P381, DOI 10.1016/j.infsof.2006.06.002
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Habela P, 2008, LECT NOTES COMPUT SC, V5103, P311, DOI 10.1007/978-3-540-69389-5_36
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Houmb S. H., 2009, REQUIR ENG, V15, P63
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   *ISO, 2007, 154082007 ISO
   Jhawar R, 2015, IFIP ADV INF COMM TE, V455, P339, DOI 10.1007/978-3-319-18467-8_23
   Jin X., 2012, RABAC ROLE CENTRIC A, P84
   Jurjens J., 2014, SOFTWARE ENG SE, P89
   Kaiya Haruhiko, 2013, International Journal of Secure Software Engineering, V4, P42, DOI 10.4018/jsse.2013070103
   Kehrer T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P638, DOI 10.1109/ICSM.2012.6405342
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Knauss E, 2009, PROC INT CONF SOFTW, P587, DOI 10.1109/ICSE.2009.5070562
   Kuehn A., 2014, Proceedings of the 2014 New Security Paradigms Workshop (NSPW '14), P63, DOI [10.1145/2683467, DOI 10.1145/2683467]
   Launders I, 2013, STRATEGIC INTELLIGENCE MANAGEMENT: NATIONAL SECURITY IMPERATIVES AND INFORMATION AND COMMUNICATIONS TECHNOLOGIES, P150
   Lehman MM, 2003, INFORM PROCESS LETT, V88, P33, DOI 10.1016/S0020-0190(03)00382-X
   Li BX, 2013, ADV ENG SOFTW, V58, P45, DOI 10.1016/j.advengsoft.2013.01.001
   McManus H., 2005, INCOSE INT S, V15, P484, DOI DOI 10.1002/J.2334-5837.2005.TB00685.X
   Meneely A., 2012, Software and Systems Traceability, P425
   Miede A, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P430, DOI 10.1109/ARES.2010.17
   Mitleton-Kelly E., 2002, COEVOLUTION DIVERSE
   MITRE, 2013, COMM VULN EXP
   Mouratidis H, 2003, LECT NOTES ARTIF INT, V2773, P1387
   Myagmar S., 2005, S REQ ENG INF SEC SR, P1
   NIST, 2016, NIST SPEC PUBL 1
   Okubo Takao, 2012, International Journal of Secure Software Engineering, V3, P37, DOI 10.4018/jsse.2012010103
   Okubo T., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P527, DOI 10.1109/ARES.2011.79
   Oladimeji EA, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P178
   RFC, 2015, 7465 RFC IETF
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Ruhroth T, 2014, LECT NOTES COMPUT SC, V8892, P239, DOI 10.1007/978-3-319-13835-0_17
   Salehie M., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P111, DOI 10.1109/RE.2012.6345794
   Schneider K., 2011, REQUIR ENG, V17, P35
   Schwaber KenJeff Sutherland., 2017, The Scrum Guide
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Souza VES, 2013, COMPUT SCI-RES DEV, V28, P311, DOI 10.1007/s00450-012-0232-2
   Swiderski F., 2004, Threat modeling
   Tsoumas B, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1, PROCEEDINGS, P985
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vanhoef M, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P97
   Wohlin C., 2012, Experimentation in Software Engineering
NR 64
TC 14
Z9 15
U1 0
U2 13
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2018
VL 139
BP 142
EP 160
DI 10.1016/j.jss.2018.02.003
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA7CU
UT WOS:000428493000009
DA 2024-07-18
ER

PT J
AU Khabou, N
   Rodriguez, IB
   Jmaiel, M
AF Khabou, Nesrine
   Rodriguez, Ismael Bouassida
   Jmaiel, Mohamed
TI A novel analysis approach for the design and the development of
   context-aware applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Context-aware applications; Analysis procedure for detection; Analysis
   procedure for prediction; Adaptive thresholds; Prediction models;
   Extreme Value Theory
AB In this paper, we propose a novel analysis approach, called ANALOG, for the design and the development of context-aware applications able to detect context change and to predict context parameter values. Our approach is described by two analysis procedures, (a) an analysis procedure for detection and (b) an analysis procedure for prediction. The proposed analysis procedures aim to offer a support for application designers allowing them to design easily context-aware applications. Each procedure is achieved by a sequence of steps performed by the designers. We describe first our analysis approach presented by the analysis procedures. Then, we give some implementation details of our approach. Afterwards, we show the usefulness of the analysis approach through presenting two execution scenarios related to a smart building case study. Finally, to illustrate the effectiveness of our approach, we present different experiments related to (i) the processing time of the analysis approach and (ii) the CPU and the memory overhead introduced by our approach. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Khabou, Nesrine; Rodriguez, Ismael Bouassida; Jmaiel, Mohamed] Univ Sfax, ReDCAD Lab, Natl Sch Engineers Sfax, BP 1173, Sfax 3038, Tunisia.
   [Rodriguez, Ismael Bouassida; Jmaiel, Mohamed] Digital Res Ctr Sfax, Sakiet Ezzit BP 275, Sfax 3021, Tunisia.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS); Centre
   de Recherche en Numerique de Sfax (CRNS); Universite de Sfax
RP Khabou, N (corresponding author), Univ Sfax, ReDCAD Lab, Natl Sch Engineers Sfax, BP 1173, Sfax 3038, Tunisia.
EM nesrine.khabou@redcad.org; bouassida@redcad.org;
   mohamed.jmaiel@enis.mu.tn
CR Abdennadher I, 2015, INT CONF INTELL SYST, P122, DOI 10.1109/ISDA.2015.7489212
   [Anonymous], THESIS
   [Anonymous], THE ARIMA PROCEDURE
   [Anonymous], TECHNICAL REPORT
   [Anonymous], THESIS
   ASME, 2005, TECHNICAL REPORT
   Bai YW, 2008, IEEE T CONSUM ELECTR, V54, P1173, DOI 10.1109/TCE.2008.4637603
   Bensalah Y., 2000, WORKING PAPERS
   Birje M. N., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P456, DOI 10.1109/ICECTECH.2011.5941834
   Bouassida MS, 2009, ITST: 2009 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORT SYSTEMS TELECOMMUNICATIONS, P526, DOI 10.1109/ITST.2009.5399299
   Chin-Liang Wang, 2009, 2009 IEEE Wireless Communications and Networking Conference, DOI 10.1109/WCNC.2009.4917575
   Cioara T, 2010, 9TH ROEDUNET IEEE INTERNATIONAL CONFERENCE, P374
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Edwards W.K., 2001, UBICOMP 2001 UBIQUIT, DOI [DOI 10.1007/3-540-45427-6, 10.1007/3-540-45427-6_22, DOI 10.1007/3-540-45427-6_22]
   Esposito A, 2010, PROC IEEE INT SYMP, P2791, DOI 10.1109/ISIE.2010.5636862
   Gilman E, 2013, J AMB INTEL SMART EN, V5, P5, DOI 10.3233/AIS-120189
   Khabou N., 2013, CONCURR COMP-PRACT E, P1378
   Khabou N, 2016, INT CON ADV INFO NET, P116, DOI 10.1109/AINA.2016.77
   Krzanowski R., 2006, P 66 INT ENG TASK FO
   Lahyani I., 2012, Proceedings of the 2012 11th International Symposium on Parallel and Distributed Computing (ISPDC 2012), P19, DOI 10.1109/ISPDC.2012.11
   Lupiana D, 2009, NDT: 2009 FIRST INTERNATIONAL CONFERENCE ON NETWORKED DIGITAL TECHNOLOGIES, P469, DOI 10.1109/NDT.2009.5272068
   Miao X, 2011, IEEE INFOCOM SER, P1548, DOI 10.1109/INFCOM.2011.5934945
   Mohamed A, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P394, DOI 10.1109/UIC-ATC.2012.150
   Morvaj B., 2011, P 2011 3 INT YOUTH C, P1
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Poslad S., 2009, CONTEXT AWARE SYSTEM, P213
   Redmore S., 2014, SENTIMENT ANAL S ACC
   Rodriguez IB, 2009, 3RD ACM WORKSHOP ON AGENT-ORIENTED SOFTWARE ENGINEERING CHALLENGES FOR UBIQUITOUS AND PERVASIVE COMPUTING - AUPC 09, P15
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   SCHILIT BN, 1994, IEEE NETWORK, V8, P22, DOI 10.1109/65.313011
   Schneider R., 2011, TECHNICAL REPORT
   Sciuto D, 2014, 2014 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (EUC 2014), P205, DOI 10.1109/EUC.2014.37
   Sen J, 2013, EMBEDDED SYSTEMS AND WIRELESS TECHNOLOGY, P1
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
NR 37
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2017
VL 133
BP 113
EP 125
DI 10.1016/j.jss.2017.07.013
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ3EX
UT WOS:000412614400007
DA 2024-07-18
ER

PT J
AU Jiménez-Pastor, A
   Garmendia, A
   de Lara, J
AF Jimenez-Pastor, Antonio
   Garmendia, Antonio
   de Lara, Juan
TI Scalable model exploration for model-driven engineering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model-driven engineering; Model scalability; Model fragmentation; Model
   visualisation; Model abstraction
AB Model-Driven Engineering (MDE) promotes the use of models to conduct all phases of software development in an automated way. However, for complex systems, these models may become large and unwieldy, and hence difficult to process and comprehend.
   In order to alleviate this situation, we combine model fragmentation strategies - to split models into more manageable chunks - with model abstraction and visualisation mechanisms, able to provide simpler views of the models. In this paper, we describe the underlying methods and techniques, as well as the supporting tools. The feasibility and benefits of our approach are confirmed based on evaluations in the embedded systems, and the reverse engineering domains, where large benefits in terms of visualisation time (speeds up of up to 55 x), and reduction in memory consumption (reduction of 97%) are obtained. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Jimenez-Pastor, Antonio; Garmendia, Antonio; de Lara, Juan] Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
C3 Autonomous University of Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
EM antoniojimenezp@estudiante.uam.es; antonio.garmendia@uam.es;
   Juan.deLara@uam.es
RI Garmendia, Antonio/HLW-7667-2023; Garmendia, Antonio/Y-5530-2019; de
   Lara, Juan/B-5422-2014
OI Garmendia, Antonio/0000-0001-8331-4467; Jimenez-Pastor,
   Antonio/0000-0002-6096-0623
FU Spanish Ministry of Economy and Competitivity [TIN2014-52129-R]; R&D
   programme of the Madrid Region [S2013/ICE-3006]; EU commission
   [FP7-ICT-2013-10, 611125]
FX Work supported by the Spanish Ministry of Economy and Competitivity
   (TIN2014-52129-R), the R&D programme of the Madrid Region
   (S2013/ICE-3006), and the EU commission (FP7-ICT-2013-10, #611125). We
   thank the reviewers for their excellent comments on a previous version
   of this paper. We also thank Markus Scheidgen for his help in
   experimenting with EMF Fragments.
CR Amálio N, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P106, DOI 10.1109/MODELS.2015.7338241
   [Anonymous], 2008, P 2008 ACM SIGMOD IN, DOI DOI 10.1145/1376616.1376675
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Barmpis Konstantinos., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering, page, P6, DOI [10.1145/2487766.2487771, DOI 10.1145/2487766.2487771]
   Bastian Mathieu., 2009, International_AAAI_Conference_on_Weblogs_and Social_Media, DOI DOI 10.1609/ICWSM.V3I1.13937
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Blouin A, 2015, INFORM SOFTWARE TECH, V62, P124, DOI 10.1016/j.infsof.2015.02.007
   Blouin A, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P25, DOI 10.1109/VISSOFT.2014.14
   Brandes U., 2001, GRAPH DRAWING, P501
   Bruneliere H, 2015, COMPUTER, V48, P76, DOI 10.1109/MC.2015.234
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Buhler T., 2009, P 26 ANN INT C MACH, P81, DOI DOI 10.1145/1553374.1553385
   Clayberg E., 2008, ECLIPSE PLUGINS
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   de Lara J, 2013, INFORM SYST, V38, P1128, DOI 10.1016/j.is.2013.06.001
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Fleck M, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P190, DOI 10.1145/2892664.2892698
   Garmendia A., 2015, BIGMDE 2015, P21
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Grun C, 2010, STORING QUERYING LAR
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5560, P39, DOI 10.1007/978-3-642-03764-1_2
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kelsen P, 2010, LECT NOTES COMPUT SC, V6013, P173, DOI 10.1007/978-3-642-12029-9_13
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Koutra Danai, 2014, P SIAM INT C DAT MIN, P91, DOI DOI 10.1137/1.9781611973440.11
   Moody DL, 1999, LECT NOTES COMPUT SC, V1728, P114
   Mufida MK, 2015, BRITISH HCI 2015, P281, DOI 10.1145/2783446.2783611
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Ostendorp M., 2014, MODELLIERUNG 2014, P105
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   Pienta R, 2015, INT CONF BIG DATA, P271, DOI 10.1109/35021BIGCOMP.2015.7072812
   Rentschler Andreas, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P141, DOI 10.1007/978-3-642-38883-5_14
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Scheidgen M, 2014, LECT NOTES COMPUT SC, V8769, P239, DOI 10.1007/978-3-319-11743-0_17
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Struber D., 2013, BIGMDE 2013, P7, DOI DOI 10.1145/2487766.2487773
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Strüber D, 2013, LECT NOTES COMPUT SC, V7793, P6, DOI 10.1007/978-3-642-37057-1_2
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   van Amstel Marcel F., 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P152, DOI 10.1007/978-3-642-30476-7_10
   von Landesberger T, 2011, COMPUT GRAPH FORUM, V30, P1719, DOI 10.1111/j.1467-8659.2011.01898.x
   Wei R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P329, DOI 10.1145/2976767.2976787
NR 45
TC 7
Z9 7
U1 0
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2017
VL 132
BP 204
EP 225
DI 10.1016/j.jss.2017.07.011
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FH9LC
UT WOS:000411531900012
DA 2024-07-18
ER

PT J
AU Gasparic, M
   Murphy, GC
   Ricci, F
AF Gasparic, Marko
   Murphy, Gail C.
   Ricci, Francesco
TI A context model for IDE-based recommendation systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT IEEE/ACM 37th IEEE International Conference on Software Engineering
   (ICSE)
CY MAY 16-24, 2015
CL Florence, ITALY
SP IEEE Comp Soc, ACM
DE Context; Usage; Integrated development environment; Commands; Software
   development; Recommendation systems for software engineering
ID SOFTWARE; INFORMATION
AB Context, as modeled through variables called contextual factors, can improve human-computer interaction. To date, in applications supporting software development, such as integrated development environments (IDES) and recommendation systems for software engineering (RSSEs), contextual factors have generally been constrained to project artifacts, such as source code. In this paper, we present a context model that includes thirteen contextual factors, which capture various situations in which developers interact with an IDE. This context model can be used to support and enhance user interaction with an IDE or to improve the accuracy and timing of recommendations produced by RSSEs.
   To assess whether the proposed contextual factors are informative for a context model, we statistically evaluated the correlations between IDE command usage and different situations, as they are described by the factors. If a contextual factor correlates with the usage of a command this means that the user is using the command differently when the values of the contextual factor change. We discovered that different factors correlate with different commands and that all the factors correlate with some commands, hence, when a context change is detected, we can also expect a change in the interaction with an IDE. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Gasparic, Marko; Ricci, Francesco] Free Univ Bozen Bolzano, Dominikanerpl 3, I-39100 Bolzano, Italy.
   [Murphy, Gail C.] Univ British Columbia, 201-2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 Free University of Bozen-Bolzano; University of British Columbia
RP Gasparic, M (corresponding author), Free Univ Bozen Bolzano, Dominikanerpl 3, I-39100 Bolzano, Italy.
EM marko.gasparic@stud-inf.unibz.it; murphy@cs.ubc.ca;
   francesco.ricci@unibz.it
RI Ricci, Francesco/H-3367-2012
OI Ricci, Francesco/0000-0001-5931-5566; Gasparic,
   Marko/0000-0002-1891-0331
CR Adomavicius G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P217, DOI 10.1007/978-0-387-85820-3_7
   Baltrunas L, 2012, PERS UBIQUIT COMPUT, V16, P507, DOI 10.1007/s00779-011-0417-x
   Barbosa E. A., 2012, P INT WORKSH EXC HAN
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Braunhofer M., 2016, INT C INF COMM TECHN
   Braunhofer M., 2015, JOINT WORKSH INT HUM
   Brown D., 1990, ADAPTIVE USER INTERF
   Brown PJ, 1997, IEEE PERS COMMUN, V4, P58, DOI 10.1109/98.626984
   Carter J., 2010, ACM C COMP SUPP COOP
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Codina V, 2016, USER MODEL USER-ADAP, V26, P1, DOI 10.1007/s11257-015-9158-2
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   DeLine R., 2005, IEEE S VIS LANG HUM
   Dey A.K., 2010, CONTEXT AWARE COMPUT, P321
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P19, DOI 10.1007/s00779-003-0253-8
   Eyolfson J., 2011, WORK C MIN SOFTW REP
   Feigenspan J., 2012, IEEE INT C PROGR COM
   Fischer G, 2001, USER MODEL USER-ADAP, V11, P65, DOI 10.1023/A:1011145532042
   Fogarty J., 2005, SIGCHI C HUM FACT CO
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Gasparic M., 2013, METRICS BASED RECOMM
   Gasparic M., 2015, INT WORKSH CONT SOFT
   Gasparic M., 2015, INT C SOFTW REUS
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Ghezzi G., 2013, WORK C MIN SOFTW REP
   Gomez O., 2008, INT C SOFTW DAT TECH
   Gu Z., 2014, INT S NEW ID NEW PAR
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Holmes R., 2009, IEEE ACM INT C AUT S
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hummel O., 2007, INT C SOFTW ENG KNOW
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Inozemtseva L., 2014, RECOMMENDATION SYSTE, P77
   Janes A., 2013, IFIP INT C OP SOURC, P264
   Janjic Werner., 2014, Recommendation Systems in Software Engineering, P359
   Kersten M., 2006, ACM SIGSOFT INT S FD
   Kersten M., 2007, FOCUSING KNOWLEDGE W
   Kim M., 2014, RECOMMENDATION SYSTE, P421, DOI [10.1007/978-3-642-45135-5_16, DOI 10.1007/978-3-642-45135-5_16]
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Koller D., 1995, INT C MACH LEARN
   Liu H., 1998, Feature Extraction, Construction and Selection: A Data Mining Perspective, V241, P259
   Maalej W., 2009, IEEE ACM INT C AUT S
   Maalej W., 2010, INT WORKSH REC SYST
   Maalej W., 2014, RECOMMENDATION SYSTE, P173
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meyer A. N., 2014, ACM SIGSOFT INT S FD
   Minelli R., 2014, IEEE WORK C SOFTW VI
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Murphy-Hill E., 2012, ACM SIGSOFT INT S FD
   Murphy-Hill E., 2012, INT C SOFTW ENG
   Muslu K., 2012, ACM INT C OBJ OR PRO
   Odic A., 2012, WORKSH CONT AW REC S
   Odic A, 2013, INTERACT COMPUT, V25, P74, DOI 10.1093/iwc/iws003
   Oku K., 2006, INT C MOB DAT MAN
   Palmisano C, 2008, IEEE T KNOWL DATA EN, V20, P1535, DOI 10.1109/TKDE.2008.110
   Parnin C., 2006, IEEE INT C PROGR COM
   Parnin C., 2009, IEEE INT C PROGR COM
   Piorkowski D., 2011, IEEE S VIS LANG HUM
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Robillard M. P, 2005, EUR SOFTW ENG C
   Robillard M. P., 2014, INTRO RECOMMENDATION, P1, DOI DOI 10.1007/978-3-642-45135-5_1
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Roethlisberger D., 2009, WORK C REV ENG
   SCHILIT BN, 1994, IEEE NETWORK, V8, P22, DOI 10.1109/65.313011
   Shimada R., 2009, INT C SOFTW ENG COMP
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sillitti A, 2012, PROC INT CONF SOFTW, P1094, DOI 10.1109/ICSE.2012.6227110
   Singer J., 2005, IEEE INT C SOFTW MAI
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soh Z, 2015, INT WORKSH CONT SOFT
   Viriyakattiyaporn P., 2010, C CTR ADV STUD COLL
   Warr F., 2007, INT C SOFTW ENG
   Wohlin C., 2012, Experimentation in Software Engineering
   Ying A. T., 2014, DEV PROFILES RECOMME, P199
   Zhang C., 2012, INT C SOFTW ENG
   Zolaktaf S., 2015, INT C MACH LEARN APP
NR 82
TC 27
Z9 29
U1 1
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2017
VL 128
BP 200
EP 219
DI 10.1016/j.jss.2016.09.012
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EV3QU
UT WOS:000401675000012
DA 2024-07-18
ER

PT J
AU De Matteis, T
   Mencagli, G
AF De Matteis, Tiziano
   Mencagli, Gabriele
TI Proactive elasticity and energy awareness in data stream processing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data stream processing; Elasticity; Model predictive control; Frequency
   scaling
ID ADAPTATION
AB Data stream processing applications have a long running nature (24 hr/7 d) with workload conditions that may exhibit wide variations at run-time. Elasticity is the term coined to describe the capability of applications to change dynamically their resource usage in response to workload fluctuations. This paper focuses on strategies for elastic data stream processing targeting multicore systems. The key idea is to exploit Model Predictive Control, a control-theoretic method that takes into account the system behavior over a future time horizon in order to decide the best reconfiguration to execute. We design a set of energy aware proactive strategies, optimized for throughput and latency QoS requirements, which regulate the number of used cores and the CPU frequency through the Dynamic Voltage and Frequency Scaling (DVFS) support offered by modern multicore CPUs. We evaluate our strategies in a high-frequency trading application fed by synthetic and real-world workload traces. We introduce specific properties to effectively compare different elastic approaches, and the results show that our strategies are able to achieve the best outcome. (C) 2016 Elsevier Inc. All rights reserved.
C1 [De Matteis, Tiziano; Mencagli, Gabriele] Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
C3 University of Pisa
RP Mencagli, G (corresponding author), Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
EM dematteis@di.unipi.it; mencagli@di.unipi.it
OI Mencagli, Gabriele/0000-0002-6263-7723; DE MATTEIS,
   TIZIANO/0000-0002-9158-6849
FU EU H2020 project RePhrase (EC-RIA) [ICT-2014-1]
FX This work has been partially supported by the EU H2020 project RePhrase
   (EC-RIA, H2020, ICT-2014-1).
CR Abdelwahed Sherif, 2009, IEEE Transactions on Network and Service Management, V6, P212, DOI 10.1109/TNSM.2009.04.090402
   Akidau T, 2013, PROC VLDB ENDOW, V6, P1033, DOI 10.14778/2536222.2536229
   Andrade H, 2011, J PARALLEL DISTR COM, V71, P145, DOI 10.1016/j.jpdc.2010.08.007
   Andrade HCM, 2014, FUNDAMENTALS OF STREAM PROCESSING: APPLICATION DESIGN, SYSTEMS, AND ANALYTICS, P1, DOI 10.1017/CBO9781139058940
   [Anonymous], 2007, MODEL PREDICTIVE CON
   [Anonymous], 2004, ENHANCED INTEL SPEED
   CHANDRAKASAN AP, 1995, P IEEE, V83, P498, DOI 10.1109/5.371964
   Danelutto M, 2015, LECT NOTES COMPUT SC, V8606, P29, DOI 10.1007/978-3-319-15940-9_2
   De Matteis T., 2016, P 12 ACM SIGPLAN S P
   Fernandez R. Castro, 2013, SIGMOD, P725
   Fried R., 2014, INT ENCY STAT SCI, P488
   Gedik B, 2014, VLDB J, V23, P517, DOI 10.1007/s00778-013-0335-9
   Gedik B, 2014, IEEE T PARALL DISTR, V25, P1447, DOI 10.1109/TPDS.2013.295
   Gulisano V, 2012, IEEE T PARALL DISTR, V23, P2351, DOI 10.1109/TPDS.2012.24
   Hackenbroich G., 2014, P 8 ACM INT C DISTR, P13
   Hahnel Marcus, 2012, Performance Evaluation Review, V40, P13
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   Herbst N.R., 2013, 4th International Conference on Performance Engineering ICPE, P187
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Kalman R E., 1960, J BASIC ENG, V82, P35, DOI DOI 10.1115/1.3662552
   KINGMAN JFC, 1962, J ROY STAT SOC B, V24, P383
   Kumbhare A, 2015, INT CON DISTR COMP S, P328, DOI 10.1109/ICDCS.2015.41
   Kumbhare AG, 2014, IEEE ACM INT SYMP, P344, DOI 10.1109/CCGrid.2014.60
   Li J, 2006, INT S HIGH PERF COMP, P77
   Lohrmann B, 2015, INT CON DISTR COMP S, P399, DOI 10.1109/ICDCS.2015.48
   Mencagli G, 2014, CLUSTER COMPUT, V17, P1443, DOI 10.1007/s10586-014-0346-3
   Miyoshi A., 2002, Conference Proceedings of the 2002 International Conference on SUPERCOMPUTING, P35, DOI 10.1145/514191.514200
   Shah MA, 2003, PROC INT CONF DATA, P25, DOI 10.1109/ICDE.2003.1260779
   Sun DW, 2015, INFORM SCIENCES, V319, P92, DOI 10.1016/j.ins.2015.03.027
   Verner Uri, 2011, P 25 INT C SUP 2011, P120
   Wu Y, 2015, PROC INT CONF DATA, P723, DOI 10.1109/ICDE.2015.7113328
   Wuttke J., 2015, IMFIT C LIB LEVENBER
NR 32
TC 54
Z9 57
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2017
VL 127
BP 302
EP 319
DI 10.1016/j.jss.2016.08.037
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP9JD
UT WOS:000397689000022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Katsikas, GP
   Maguire, GQ
   Kostic, D
AF Katsikas, Georgios P.
   Maguire, Gerald Q., Jr.
   Kostic, Dejan
TI Profiling and accelerating commodity NW service chains with SCC
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE NFV; Service chains; Profiler; Scheduling; I/O multiplexing
AB Recent approaches to network functions virtualization (NFV) have shown that commodity network stacks and drivers struggle to keep up with increasing hardware speed. Despite this, popular cloud networking services still rely on commodity operating systems (OSs) and device drivers. Taking into account the hardware underlying of commodity servers, we built an NFV profiler that tracks the movement of packets across the system's memory hierarchy by collecting key hardware and OS-level performance counters. Leveraging the profiler's data, our Service Chain Coordinator's (SCC) run-time accelerates user-space NFV service chains, based on commodity drivers. To do so, SCC combines multiplexing of system calls with scheduling strategies, taking time, priority, and processing load into account. By granting longer time quanta to chained network functions (NFs), combined with I/O multiplexing, SCC reduces unnecessary scheduling and I/O overheads, resulting in three-fold latency reduction due to cache and main memory utilization improvements. More importantly, SCC reduces the latency variance of NFV service chains by up to 40x compared to standard FastClick chains by making the average case for an NFV chain to perform as well as the best case. These improvements are possible because of our profiler's accuracy. (C) 2017 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY-NC-ND license. (http://creativecommons.org/licenses/by-nc-nd/4.0/)
C1 [Katsikas, Georgios P.; Kostic, Dejan] KTH Royal Inst Technol, Stockholm, Sweden.
   [Maguire, Gerald Q., Jr.] KTH Royal Inst Technol, Comp Commun, Stockholm, Sweden.
C3 Royal Institute of Technology; Royal Institute of Technology
RP Katsikas, GP (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM katsikas@kth.se; maguire@kth.se; dmk@kth.se
RI Kostic, Dejan/HZK-8407-2023; Maguire, Gerald/G-4584-2011; Katsikas,
   Georgios/B-4527-2017
OI Kostic, Dejan/0000-0002-1256-1070; Maguire, Gerald/0000-0002-6066-746X;
   Katsikas, Georgios/0000-0002-3890-6583
FU European Union (EU); European Research Council under EU's Seventh
   Framework Programme (FP7) / ERC [259110]; BEhavioural BAsed forwarding
   (BEBA) project [644122]; European Research Council (ERC) [259110]
   Funding Source: European Research Council (ERC)
FX The research leading to these results has been co-funded by the European
   Union (EU) in the context of (i) the European Research Council under
   EU's Seventh Framework Programme (FP7/2007-2013) / ERC grant agreement
   259110 and (ii) the BEhavioural BAsed forwarding (BEBA) project with
   grant agreement number 644122.
CR Amazon, 2016, ENH NETW SR IOV
   Amazon, 2016, COMP NETW SERV AM WE
   Amazon, 2016, EC2 CONT SERV ECS
   [Anonymous], P 2012 USENIX C ANN
   [Anonymous], J NEUROSURG REV, DOI DOI 10.1145/2349896.2349910
   [Anonymous], LIN PROF PERF COUNT
   [Anonymous], NETW FUNCT VIRT INTR
   [Anonymous], 2002, 3234 RFC
   [Anonymous], 2016, PERFORMANCE MONITORI
   Barbette T, 2015, ELEVENTH 2015 ACM/IEEE SYMPOSIUM ON ARCHITECTURES FOR NETWORKING AND COMMUNICATIONS SYSTEMS, P5, DOI 10.1109/ANCS.2015.7110116
   Bhattacharya S., 2003, P LIN S, P351
   Bonelli Nicola., 2012, P 13 INT C PASSIVE A, P64
   Drepper Ulrich., 2006, Ottawa Linux Symposium, P247
   Emmerich P, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P275, DOI 10.1145/2815675.2815692
   Hwang J., 2014, PROC 11 USENIX S NET, P445
   Intel, 2016, HARDW EV INT HASW PR
   Intel, 2016, HIGH PREC EV TIM HPE
   Intel, 2016, DAT DIR I O TECHN
   Intel, 2016, XEON E5 2667 V3 PROC
   Intel, 2016, PERF AN GUID INT COR
   Intel, 2013, MEM LAT CHECK MLC V3
   Katsikas G. P., 2016, FASTCLICK USER SPACE
   Katsikas G. P, 2016, SYSTEM BENCHMARKS
   Katsikas GP, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.98
   Katsikas Georgios P., 2016, REALIZING HIGH PERFO
   Kohler E, 2000, ACM T COMPUT SYST, V18, P263, DOI 10.1145/354871.354874
   LEBECK AR, 1994, COMPUTER, V27, P15, DOI 10.1109/2.318580
   Levon J, 2016, OPROFILE SYSTEM PROF
   Martins J., 2014, OCEEDINGS 11 USENIX, P459
   McVoy L, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P279
   Mittal R, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P501
   Network Functions Virtualization (NFV) European Telecommunications Standards Institute (ETSI) Industry Specification Group (ISG), 2013, NETW FUNCT VIRT NFV, P1
   Pabla C.S., 2009, LINUX J, V2009
   Palkar S, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P121, DOI 10.1145/2815400.2815423
   Pesterev A, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P335
   Quinn P., 2015, COMMUNICATION
   Sherry J, 2012, ACM SIGCOMM COMP COM, V42, P13, DOI 10.1145/2377677.2377680
   Sigoure B., 2010, CUSTOM TOOLS MEASURI
   Sivaraman A, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P44, DOI 10.1145/2934872.2934899
   Suo J, 2016, 2016 21ST OPTOELECTRONICS AND COMMUNICATIONS CONFERENCE (OECC) HELD JOINTLY WITH 2016 INTERNATIONAL CONFERENCE ON PHOTONICS IN SWITCHING (PS)
NR 40
TC 11
Z9 38
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2017
VL 127
BP 12
EP 27
DI 10.1016/j.jss.2017.01.005
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP9JD
UT WOS:000397689000002
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lee, J
   Shin, KG
AF Lee, Jinkyu
   Shin, Kang G.
TI Development and use of a new task model for cyber-physical systems: A
   real-time scheduling perspective
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Real-time scheduling; Cyber-physical systems; Periodic real-time task
   model; Task-level fixed-priority scheduling; Priority assignment
ID SCHEDULABILITY; MANAGEMENT
AB In a typical cyber-physical system (CPS), the cyber/computation subsystem controls the physical subsystem, and therefore the computer society has recently paid considerable attention to CPS research. To keep such a CPS stable, feedback control with periodic computation tasks has been widely used, and its theoretical guarantee of stability has been made with periodic real-time task models that enforce strict periodic control updates. However, some control update misses are usually allowed (e.g., via system over-design) in certain physical subsystem states (PSSes) without causing system instability, and the resources required for strict periodic control updates can thus be reduced or used for other purposes, achieving efficient controls for the entire CPS in terms of the operational cost, such as fuel consumption or tracking accuracy. In this paper, we propose a new periodic, fault-tolerant CPS task model, which not only expresses efficiency and stability of the underlying physical subsystem, but also generalizes existing periodic real-time task models, by capturing a tolerable number of control update misses in different PSSes. To demonstrate the utility of this model, we develop a new scheduling mechanism that prioritizes jobs (i.e., periodic invocations) of a set of tasks not only by the nature of each task, but also by the number of consecutive prior job deadline misses. Based on its analysis in terms of stability and efficiency, we also propose a priority-assignment policy that lowers the system operation cost without compromising stability. Our in-depth analysis and simulation results show that the scheduling mechanism and its analysis, as well as the priority-assignment policy under the proposed model not only generalize the existing periodic real-time task models, but also significantly lower the system operation cost without losing stability. (C) 2017 Elsevier Inc. All rights reserved.
C1 [Lee, Jinkyu] Sungkyunkwan Univ SKKU, Dept Comp Sci & Engn, Suwon, South Korea.
   [Shin, Kang G.] Univ Michigan, Dept Elect Engn & Comp Sci, Comp Sci, Ann Arbor, MI 48109 USA.
C3 Sungkyunkwan University (SKKU); University of Michigan System;
   University of Michigan
RP Lee, J (corresponding author), Sungkyunkwan Univ SKKU, Dept Comp Sci & Engn, Suwon, South Korea.
EM jinkyu.lee@skku.edu; kgshin@eecs.umich.edu
OI Lee, Jinkyu/0000-0002-2332-1996
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Science, ICT & Future Planning
   [NRF-2014R1A1A1035827]; Ministry of Education [NRF-2016R1D1A1B03930580];
   MISP (Ministry of Science, ICT & Future Planning), Korea
   [R2215-16-1005]; US Office of Naval Research [N00014-15-1-2163]; Global
   Research Laboratory Program through NRF [2013K1A1A2A02078326]; DGIST
   Research; Development Program (CPS Global Center) - Ministry of Science,
   ICT & Future Planning; Division Of Computer and Network Systems; Direct
   For Computer & Info Scie & Enginr [1329702] Funding Source: National
   Science Foundation
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Science, ICT & Future Planning (NRF-2014R1A1A1035827), and the
   Ministry of Education (NRF-2016R1D1A1B03930580). This research was also
   supported by the MISP (Ministry of Science, ICT & Future Planning),
   Korea, under the National Program for Excellence in SW) (R2215-16-1005)
   supervised by the IITP (Institute for Information & communications
   Technology Promotion). The work reported in this paper was also
   supported in part by the US Office of Naval Research under Grant No.
   N00014-15-1-2163, and Global Research Laboratory Program
   (2013K1A1A2A02078326) through NRF, DGIST Research and Development
   Program (CPS Global Center) funded by the Ministry of Science, ICT &
   Future Planning.
CR [Anonymous], 2005, TR050601 FLOR STAT U
   Anta A, 2009, REAL TIM SYST SYMP P, P3, DOI 10.1109/RTSS.2009.39
   Audsley N, 1991, Citeseer
   Audsley N.C., 1991, P 8 IEEE WORKSHOP RE, P133
   Aydin H, 2001, IEEE T COMPUT, V50, P111, DOI 10.1109/12.908988
   Bernat G, 2001, IEEE T COMPUT, V50, P308, DOI 10.1109/12.919277
   Bertogna M, 2009, IEEE T PARALL DISTR, V20, P553, DOI 10.1109/TPDS.2008.129
   Buttazzo GC, 1998, REAL TIM SYST SYMP P, P286, DOI 10.1109/REAL.1998.739754
   Buttazzo GC, 2002, IEEE T COMPUT, V51, P289, DOI 10.1109/12.990127
   Cervin A., 2005, P 16 IFAC WORLD C
   Chantem T, 2009, IEEE T COMPUT, V58, P480, DOI 10.1109/TC.2008.175
   Chipara O, 2013, IEEE T COMPUT, V62, P1850, DOI 10.1109/TC.2012.172
   [Cyber-physical systems (CPS) National Science Foundation (NSF)], 2014, CYB PHYS SYST CPS
   Davis RI, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978814
   de Niz D, 2012, ACM IEEE INT CONF CY, P97, DOI 10.1109/ICCPS.2012.18
   Fontanelli D., 2013, OPTIMAL CPU ALLOCATI, P233
   Fontanelli D, 2013, REAL TIM SYST SYMP P, P150, DOI 10.1109/RTSS.2013.23
   HAMDAOUI M, 1995, IEEE T COMPUT, V44, P1443, DOI 10.1109/12.477249
   KIM H, 1994, IEEE T CONTR SYST T, V2, P110
   Kim J, 2012, ACM IEEE INT CONF CY, P55, DOI 10.1109/ICCPS.2012.14
   Koren G, 1995, IEEE REAL TIME, P110, DOI 10.1109/REAL.1995.495201
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee EdwardA., 2006, Cyber physical Systems - Are Computing Foundation Adequate
   Lee J, 2015, IEEE T COMPUT, V64, P941, DOI 10.1109/TC.2014.2308183
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Mok AK, 1997, IEEE T SOFTWARE ENG, V23, P635, DOI 10.1109/32.637146
   Palopoli L, 2000, REAL TIM SYST SYMP P, P131, DOI 10.1109/REAL.2000.896003
   Ramanathan P, 1999, IEEE T PARALL DISTR, V10, P549, DOI 10.1109/71.774906
   Seto DB, 1996, REAL TIM SYST SYMP P, P13, DOI 10.1109/REAL.1996.563693
   Shen HY, 2015, IEEE T COMPUT, V64, P518, DOI 10.1109/TC.2013.211
   SHIN KG, 1985, IEEE T AUTOMAT CONTR, V30, P357, DOI 10.1109/TAC.1985.1103952
   Torngren M, 1998, REAL-TIME SYST, V14, P219, DOI 10.1023/A:1007964222989
   Velasco M., 2003, P SESS IEEE IN PRESS
   Wedde HF, 1997, REAL-TIME SYST, V13, P277, DOI 10.1023/A:1007915628098
   West R, 2004, IEEE T COMPUT, V53, P744, DOI 10.1109/TC.2004.10
   Yang XY, 2015, IEEE T COMPUT, V64, P4, DOI 10.1109/TC.2013.177
   Yoshimoto T., 2011, P 2 IEEE ACM INT C C, P51
NR 37
TC 24
Z9 27
U1 0
U2 20
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2017
VL 126
BP 45
EP 56
DI 10.1016/j.jss.2017.01.004
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM3PB
UT WOS:000395226000004
OA hybrid
DA 2024-07-18
ER

PT J
AU Genc-Nayebi, N
   Abran, A
AF Genc-Nayebi, Necmiye
   Abran, Alain
TI A systematic literature review: Opinion mining studies from mobile app
   store user reviews
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Mobile application; App stores opinion mining; Systematic literature
   review; Requirements engineering
AB As mobile devices have overtaken fixed Internet access, mobile applications and distribution platforms have gained in importance. App stores enable users to search for, purchase and install mobile applications and then give feedback in the form of reviews and ratings. A review might contain information about the user's experience with the app and opinion of it, feature requests and bug reports. Hence, reviews are valuable not only to users who would like to find out what others think about an app, but also to developers and software companies interested in customer feedback.
   The rapid increase in the number of applications and total app store revenue has accelerated app store data mining and opinion aggregation studies. While development companies and app store regulators have pursued upfront opinion mining studies for business intelligence and marketing purposes, research interest into app ecosystem and user reviews is relatively new. In addition to studies examining online product reviews, there are now some academic studies focused on mobile app stores and user reviews.
   The objectives of this systematic literature review are to identify proposed solutions for mining online opinions in app store user reviews, challenges and unsolved problems in the domain, any new contributions to software requirements evolution and future research direction. (C) 2016 Published by Elsevier Inc.
C1 [Genc-Nayebi, Necmiye; Abran, Alain] Univ Quebec, Ecole Technol Super, Dept Software Engn & Informat Technol, 1100 Rue Notre Dame O, Montreal, PQ H3C 1K3, Canada.
C3 University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada
RP Genc-Nayebi, N (corresponding author), Univ Quebec, Ecole Technol Super, Dept Software Engn & Informat Technol, 1100 Rue Notre Dame O, Montreal, PQ H3C 1K3, Canada.
EM necrniye.genc.1@ens.etsintl.ca; alain.abran@etsmtl.ca
RI Abran, Alain/I-2493-2016
OI Abran, Alain/0000-0003-2670-9061
CR Andrzejewski David, 2009, Proc Int Conf Mach Learn, V382, P25
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 2007, ACL
   [Anonymous], 2007, GUIDELINES PERFORMIN
   Aue A., 2005, RANLP 05 UNPUB
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Cambria E, 2013, IEEE INTELL SYST, V28, P15, DOI 10.1109/MIS.2013.30
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chandy R.H. Gu., 2012, P 2 JOINT WICOWAIRWE, P56
   Chen M., 2011, P 2011 ICONFERENCE I, P661, DOI DOI 10.1145/1940761.1940859
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cheung CMK, 2008, INTERNET RES, V18, P229, DOI 10.1108/10662240810883290
   Cosma AC, 2014, INT C INTELL COMP CO, P289, DOI 10.1109/ICCP.2014.6937011
   Dellarocas C., 2000, EC'00. Proceedings of the 2nd ACM Conference on Electronic Commerce, P150, DOI 10.1145/352871.352889
   Ding X., 2008, P 2008 INT C WEB SEA, P231, DOI [DOI 10.1145/1341531.1341561, 10.1145/1341531.1341561]
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Ganapathibhotla M., 2008, COLING 2008 22 INT C, P241, DOI DOI 10.3115/1599081.1599112
   Ghose A, 2011, IEEE T KNOWL DATA EN, V23, P1498, DOI 10.1109/TKDE.2010.188
   Gómez M, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P1, DOI 10.1109/MobileSoft.2015.8
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Hu M., 2004, P 10 ACM SIGKDD INT, P168, DOI DOI 10.1145/1014052.1014073
   Hu X., 2012, Mining text data, P385, DOI DOI 10.1007/978-1-4614-3223-4
   Iacob C., 2013, P 27 INT BCS HUM COM, V29, P6
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jindal N., 2008, Proceedings of the 2008 International Conference on Web Search and Data Mining: ACM, DOI DOI 10.1145/1341531.1341560
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Korfiatis N, 2012, ELECTRON COMMER R A, V11, P205, DOI 10.1016/j.elerap.2011.10.003
   Lim E.P., 2010, P ACM INT C INFORM K, P939, DOI DOI 10.1145/1871437.1871557
   Liu Y, 2008, IEEE DATA MINING, P443, DOI 10.1109/ICDM.2008.94
   Luca M., 2013, Harvard Business School NOM Unit Working Paper, (14-006)
   Martin W., 2016, TECHNICAL REPORT
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Moghaddam Samaneh, 2012, P 5 ACM INT C WEB SE, P163, DOI [10.1145/2124295.2124316, DOI 10.1145/2124295.2124316]
   Mudambi SM, 2010, MIS QUART, V34, P185
   Mukherjee A., 2010, Proceedings of the 2010 conference on Empirical Methods in natural Language Processing, P207, DOI DOI 10.5555/1870658.1870679
   Newman D., 2009, Australasian Document Computing Symposium, P11
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Pan SinnoJialin., 2010, P 19 INT C WORLD WID, P751, DOI DOI 10.1145/1772690.1772767
   Pan Y, 2011, J RETAILING, V87, P598, DOI 10.1016/j.jretai.2011.05.002
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park DH, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P533, DOI 10.1145/2766462.2767759
   Ruiz-Mercado I, 2015, EX CURR RAT SYST US, P1, DOI DOI 10.1109/MS.2015.56
   Sandulescu V, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P971, DOI 10.1145/2740908.2742570
   Statista, 2014, STAT FACTS APP STOR
   Tang HF, 2009, EXPERT SYST APPL, V36, P10760, DOI 10.1016/j.eswa.2009.02.063
   Tsytsarau M, 2012, DATA MIN KNOWL DISC, V24, P478, DOI 10.1007/s10618-011-0238-6
   Ureña-López LA, 2001, COMPUT HUMANITIES, V35, P215, DOI 10.1023/A:1002632712378
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Vu P. M., 2015, CORR
   Wang G., 2011, ICDM, P1242, DOI DOI 10.1109/ICDM.2011.124
   Wano M, 2014, 2014 17TH INTERNATIONAL CONFERENCE ON NETWORK-BASED INFORMATION SYSTEMS (NBIS 2014), P579, DOI 10.1109/NBiS.2014.51
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang H., 2006, P 15 TEXT RETRIEVAL
NR 64
TC 145
Z9 150
U1 7
U2 111
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2017
VL 125
BP 207
EP 219
DI 10.1016/j.jss.2016.11.027
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM5NX
UT WOS:000395359500013
DA 2024-07-18
ER

PT J
AU Ciavotta, M
   Ardagna, D
   Gibilisco, GP
AF Ciavotta, Michele
   Ardagna, Danilo
   Gibilisco, Giovanni Paolo
TI A mixed integer linear programming optimization approach for multi-cloud
   capacity allocation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multi-cloud capacity allocation; Optimization; MILP
ID PALLADIO COMPONENT MODEL; RESOURCE-MANAGEMENT; PERFORMANCE; SEARCH
AB The large success of the Cloud computing, its strong impact on the ICT world and on everyday life testifies the maturity and effectiveness this paradigm achieved in the last few years. Presently, the Cloud market offers a multitude of heterogeneous solutions. However, despite the undeniable advantages, Cloud computing introduced new issues and challenges. In particular, the heterogeneity of the available Cloud services and their pricing models makes the identification of a configuration that minimizes the operating costs of a Cloud application, guaranteeing at the same time the Quality of Service, a challenging task. This situation requires new processes and models to design software architectures and predict costs and performance considering together the large variability in price models and the intrinsic dynamism and multi-tenancy of the Cloud environments. This work aims at providing a novel mathematical approach to this problem presenting a queuing theory based Mixed Integer Linear Program (MILP) to find a promising multi-cloud configuration for a given software architecture. The effectiveness of the proposed model has been favorably evaluated against first principle heuristics currently adopted by practitioners. Furthermore, the configuration returned by the model has been also used as initial solution for a local-search based optimization engine, which exploits more accurate but time-consuming performance models. This combined approach has been shown to improve the quality of the returned solutions by 37% on average and reducing the overall search time by 50% with respect to state-of-the-art heuristics based on tiers utilization thresholds. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Ciavotta, Michele; Ardagna, Danilo; Gibilisco, Giovanni Paolo] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
C3 Polytechnic University of Milan
RP Ciavotta, M (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
EM michele.ciavotta@polimi.it; danilo.ardagna@polimi.it;
   giovannipaolo.gibilisco@polimi.it
RI Ciavotta, Michele/AAH-5411-2021
OI Ardagna, Danilo/0000-0003-4224-927X; Ciavotta,
   Michele/0000-0002-2480-966X
FU European Commission [FP7-ICT-2011-8- 318484]
FX The research reported in this article is partially supported by the
   European Commission grant no. FP7-ICT-2011-8- 318484 (MODAClouds).
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Addis B, 2013, IEEE T DEPEND SECURE, V10, P253, DOI 10.1109/TDSC.2013.4
   Aleti A., 2009, MOMPES 2009
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Almeida J, 2010, J PARALLEL DISTR COM, V70, P344, DOI 10.1016/j.jpdc.2009.08.009
   Amazon, 2015, AWS EL BEANST
   Amazon, 2016, AM EC2 PRIC
   Amazon, 2016, AM EC2 SERV LEV AGR
   [Anonymous], MAGIC QUADRANT CLOUD
   [Anonymous], 2013, P INT WORKSHOP MULTI
   [Anonymous], 1998, Queueing networks and Markov chains: modeling and performance evaluation with computer science applications
   [Anonymous], 2005, UML PROF SCHED PERF
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Ardagna D., 2014, MODACIOUDS D5 2 2MOD
   Ardagna D., 2015, MODACIOUDS D5 4 3PRE
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2014, LECT NOTES COMPUT SC, V8636, P61
   Ardagna D, 2012, J PARALLEL DISTR COM, V72, P796, DOI 10.1016/j.jpdc.2012.02.014
   Ardagna D, 2012, IEEE T SERV COMPUT, V5, P2, DOI 10.1109/TSC.2010.42
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bondarev E., 2007, WOSP 2007
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Casale Giuliano, 2013, Performance Evaluation Review, V40, P73
   Casale G., 2011, P QEST 2011
   Das O, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P672, DOI 10.1109/DSN.2003.1209981
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   Eames BK, 2010, DES AUTOM EMBED SYST, V14, P43, DOI 10.1007/s10617-009-9049-z
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   Franceschelli Davide, 2013, P 2013 INT WORKSH MU, P27, DOI DOI 10.1145/2462326.2462333
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Frey S., 2013, ICSE 2013
   Gibilisco G.P., 2015, THESIS
   Giove Filippo, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P591
   Glover F., 1990, ORSA Journal on Computing, V2, P4, DOI [10.1287/ijoc.1.3.190, 10.1287/ijoc.2.1.4]
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Kavimandan A, 2009, LECT NOTES COMPUT SC, V5581, P18, DOI 10.1007/978-3-642-02351-4_2
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kusic D, 2009, CLUSTER COMPUT, V12, P1, DOI 10.1007/s10586-008-0070-y
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li R., 2011, EVOLUTIONARY MUL TIO
   Loniewski G., 2012, P 4 INT WORKSH NONF
   Martens A., 2010, WOSP SIPEW
   Meedeniya I., 2010, QOSA 2010
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Microsoft, 2016, SLA SUMM AZ SERV
   Microsoft, 2015, MICR AZ STAT
   Object Management Group (OMG), 2008, UML PROF MARTE MOD A
   Ouzineb M, 2008, RELIAB ENG SYST SAFE, V93, P1257, DOI 10.1016/j.ress.2007.06.004
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Perez J., 2013, P 2013 15 INT S SYMB, P409
   Pérez JF, 2015, IEEE T SOFTWARE ENG, V41, P264, DOI 10.1109/TSE.2014.2363472
   Resende MGC, 2003, INT SER OPER RES MAN, V57, P219, DOI 10.1007/0-306-48056-5_8
   Riska A, 2002, MATRIX-ANALYTIC METHODS:THEORY AND APPLICATIONS, P333, DOI 10.1142/9789812777164_0018
   Saxena T, 2010, LECT NOTES COMPUT SC, V6394, P46
   Scavuzzo M, 2014, IEEE INT ENTERP, P154, DOI 10.1109/EDOCW.2014.32
   Smith C., 2003, CMG 2003
   Vogel C., 2013, P 4 ACM SPEC INT C P, P101
   Wolke A., 2010, TWOSPOT CLOUD PLATFO
   Woodside M., 2005, WOSP 2005
   Zhu XY, 2009, CLUSTER COMPUT, V12, P45, DOI 10.1007/s10586-008-0067-6
NR 63
TC 13
Z9 14
U1 0
U2 15
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2017
VL 123
BP 64
EP 78
DI 10.1016/j.jss.2016.10.001
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED8CR
UT WOS:000389100100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pérez, H
   Gutiérrez, JJ
   Peiró, S
   Crespo, A
AF Perez, Hector
   Javier Gutierrez, J.
   Peiro, Salva
   Crespo, Alfons
TI Distributed architecture for developing mixed-criticality systems in
   multi-core platforms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Real-time systems and embedded systems; Middleware; Application
   virtualization; Multi-core
AB Partitioning is a widespread technique that enables the execution of mixed-criticality applications in the same hardware platform. New challenges for the next generation of partitioned systems include the use of multiprocessor architectures and distribution standards in order to open up this technique to a heterogeneous set of emerging scenarios (e.g., cyber-physical systems). This work describes a system architecture that enables the use of data-centric distribution middleware in partitioned real-time embedded systems based on a hypervisor for multi-core, and it focuses on the analysis of the available architectural configurations. We also present an application-case study to evaluate and identify the possible trade-offs among the different configurations. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Perez, Hector; Javier Gutierrez, J.] Univ Cantabria, Computers & Real Time Grp, Santander, Spain.
   [Peiro, Salva] Univ Politecn Valencia, Inst Ind Comp & Control Syst, Valencia, Spain.
   [Crespo, Alfons] Univ Politecn Valencia, Dept Comp Engn, Valencia, Spain.
C3 Universidad de Cantabria; Universitat Politecnica de Valencia;
   Universitat Politecnica de Valencia
RP Pérez, H (corresponding author), Univ Cantabria, Computers & Real Time Grp, Santander, Spain.
EM perezh@unican.es; gutierjj@unican.es; speiro@ai2.upv.es;
   acrespo@disca.upv.es
RI Tijero, Hector Perez/AAH-3192-2020; Crespo, Alfons/AAB-5709-2020;
   Gutierrez, J. Javier/K-6163-2014
OI Tijero, Hector Perez/0000-0001-6231-461X; Crespo,
   Alfons/0000-0002-6606-7406; Gutierrez, J. Javier/0000-0002-0706-5494
FU Spanish Government; FEDER funds
   [TIN2011-28567-C03-02/TIN2011-28567-C03-03,
   TIN2014-56158-C4-1-P/TIN2014-56158-C4-2-P (M2C2)]; European Commission
   [FP7 ICT 610640]
FX This work has been funded in part by the Spanish Government and FEDER
   funds under grant numbers TIN2011-28567-C03-02/TIN2011-28567-C03-03
   (HIPARTES) and TIN2014-56158-C4-1-P/TIN2014-56158-C4-2-P (M2C2), and by
   the European Commission under grant number FP7 ICT 610640 (DREAMS).
CR Albano M, 2015, COMPUT STAND INTER, V38, P133, DOI 10.1016/j.csi.2014.08.002
   Almadani B, 2015, MOB INF SYST, V2015, DOI 10.1155/2015/187548
   [Anonymous], P IEEE AER C
   [Anonymous], LNCS
   [Anonymous], REAL TIM PUBL SUBSCR
   [Anonymous], ACM INT C EMB SOFTW
   [Anonymous], P 16 IEEE INT C COMP
   [Anonymous], P 1 WORKSH REAL TIM
   [Anonymous], P 3 INT WORKSH REAL
   [Anonymous], P INT C EMB REAL TIM
   [Anonymous], P DEF TRANSF NET CEN
   [Anonymous], EU PROJ 7 FRAM PROGR
   [Anonymous], EUR PROJ PART 7 FRAM
   [Anonymous], P 5 INT C EMB REAL T
   [Anonymous], P 5 INT C EMB REAL T
   [Anonymous], WORKSH REAL TIM EMB
   [Anonymous], 664P7 ARINC AIRL EL
   [Anonymous], SAE CONV C
   [Anonymous], EUR PROJ PART 7 FRAM
   [Anonymous], P 20 IEEE REAL TIM E
   [Anonymous], P ACM CLOUD AUT COMP
   [Anonymous], 2014, ACM SIGBED Review
   [Anonymous], EUR PROJ PART 7 FRAM
   [Anonymous], EUR PROJ PART 7 FRAM
   [Anonymous], TECHN STAND FUT AIRB
   [Anonymous], AV APPL SOFTW STAND
   [Anonymous], P INT FOR EMB MPSOC
   Baruah S, 2014, REAL-TIME SYST, V50, P142, DOI 10.1007/s11241-013-9184-2
   Burns Alan., 2014, Mixed Criticality Systems - A Review
   Crespo A., 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P67, DOI 10.1109/EDCC.2010.18
   Dubey A, 2012, AEROSP CONF PROC
   Dubey A, 2011, SOFTWARE PRACT EXPER, V41, P1517, DOI 10.1002/spe.1083
   Eklund U, 2014, J SYST SOFTWARE, V92, P128, DOI 10.1016/j.jss.2014.01.009
   García-Valls M, 2017, COMPUT STAND INTER, V49, P11, DOI 10.1016/j.csi.2016.06.007
   Gu Z., 2012, J. Softw. Eng. Appl, V5, P277, DOI [10.4236/jsea.2012.54033, DOI 10.4236/JSEA.2012.54033]
   Guasque A, 2016, J SYST SOFTWARE, V119, P70, DOI 10.1016/j.jss.2016.05.040
   Hakiri A, 2014, J SYST SOFTWARE, V95, P100, DOI 10.1016/j.jss.2014.03.078
   Han S, 2014, SOFTWARE PRACT EXPER, V44, P1441, DOI 10.1002/spe.2210
   Higuera-Toledano M. T., 2012, Proceedings of the 2012 IEEE 15th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops (ISORCW 2012), P164, DOI 10.1109/ISORCW.2012.37
   Kang W, 2012, IEEE T IND INFORM, V8, P393, DOI 10.1109/TII.2012.2183878
   Münch D, 2015, IEEE I C EMBED SOFTW, P1037, DOI 10.1109/HPCC-CSS-ICESS.2015.221
   Object Management Group, 2007, DAT DISTR SERV REAL
   Pérez H, 2016, IEEE T PARALL DISTR, V27, P3186, DOI 10.1109/TPDS.2016.2531695
   Putra HA, 2015, COMPUT STAND INTER, V37, P20, DOI 10.1016/j.csi.2014.05.002
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Rushby John., 1999, Partitioning for avionics architectures: requirements, mechanisms, and assurance
   SCOPE Alliance, 2008, VIRT STAT ART VERS 1
   Sommer Stephan., 2013, 2013 IEEE INT ELECT, P1
   Windsor J, 2009, SMC-IT 2009: THIRD IEEE INTERNATIONAL CONFERENCE ON SPACE MISSION CHALLENGES FOR INFORMATION TECHNOLOGY, PROCEEDINGS, P13, DOI 10.1109/SMC-IT.2009.11
   Zhou Q, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (FSKD), P2502, DOI 10.1109/FSKD.2015.7382348
NR 50
TC 20
Z9 20
U1 1
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2017
VL 123
BP 145
EP 159
DI 10.1016/j.jss.2016.08.088
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED8CR
UT WOS:000389100100009
DA 2024-07-18
ER

PT J
AU Totaro, G
   Bernaschi, M
   Carbone, G
   Cianfriglia, M
   Di Marco, A
AF Totaro, G.
   Bernaschi, M.
   Carbone, G.
   Cianfriglia, M.
   Di Marco, A.
TI ISODAC: A high performance solution for indexing and searching
   heterogeneous data
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Digital forensics; Indexing; In-Memory processing
ID MAPREDUCE
AB Searching for words or sentences within large sets of textual documents can be very challenging unless an index of the data has been created in advance. However, indexing can be very time consuming especially if the text is not readily available and has to be extracted from files stored in different formats. Several solutions, based on the MapReduce paradigm, have been proposed to accelerate the process of index creation. These solutions perform well when data are already distributed across the hosts involved in the elaboration. On the other hand, the cost of distributing data can introduce noticeable overhead. We propose ISODAC, a new approach aimed at improving efficiency without sacrificing reliability. Our solution reduces to the bare minimum the number of I/O operations by using a stream of in-memory operations to extract and index text. We further improve the performance by using GPUs for the most computationally intensive tasks of the indexing procedure. ISODAC indexes heterogeneous documents up to 10.6x faster than other widely adopted solutions, such as Apache Spark. As proof-of-concept, we developed a tool to index forensic disk images that can easily be used by investigators through a web interface. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Totaro, G.; Carbone, G.] Univ Roma La Sapienza, Dept Comp Sci, Rome, Italy.
   [Bernaschi, M.; Cianfriglia, M.; Di Marco, A.] Natl Res Council Italy, Inst Appl Comp, Rome, Italy.
C3 Sapienza University Rome; Consiglio Nazionale delle Ricerche (CNR)
RP Carbone, G (corresponding author), Univ Roma La Sapienza, Dept Comp Sci, Rome, Italy.
EM totaro@di.uniroma1.it; massimo.bernaschi@cnr.it;
   giancarlo.carbone@uniroma1.it; m.cianfriglia@iac.cnr.it;
   a.dimarco@iac.cnr.it
OI Carbone, Giancarlo/0000-0001-9825-0582
FU European Union [HOME/2012ISEC/AG/INT/4000003856]
FX Financial support from European Union project
   HOME/2012ISEC/AG/INT/4000003856 is kindly acknowledged. We thank E.
   Agostini, G. Me, and A. Sabellico for useful discussions and support.
CR [Anonymous], 2012, P 9 USENIX C NETWORK
   [Anonymous], 2012, Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data, DOI DOI 10.1145/2213836.2213934
   [Anonymous], 2008, P 17 INT C PAR ARCH
   [Anonymous], P 2004 DIG FOR RES W
   [Anonymous], 2010, P 9 USENIX C OP SYST
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], MAPREDUCE WORKSH
   [Anonymous], 2008, P USENIX OSDI
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bostock M, 2011, IEEE T VIS COMPUT GR, V17, P2301, DOI 10.1109/TVCG.2011.185
   Bu YY, 2010, PROC VLDB ENDOW, V3, P285
   Cho C., 2012, INT J SECURITY APPL, V6
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Dean J, 2010, COMMUN ACM, V53, P72, DOI 10.1145/1629175.1629198
   DEO N, 1992, J SUPERCOMPUT, V6, P87, DOI 10.1007/BF00128644
   Dong B, 2014, J SYST SOFTWARE, V93, P132, DOI 10.1016/j.jss.2014.02.038
   Dykstra J, 2012, DIGIT INVEST, V9, pS90, DOI 10.1016/j.diin.2012.05.001
   Garfinkel S, 2009, DIGIT INVEST, V6, pS2, DOI 10.1016/j.diin.2009.06.016
   Garfinkel SL, 2013, COMPUT SECUR, V32, P56, DOI 10.1016/j.cose.2012.09.011
   Garfinkel SL, 2009, INT WORK SYS APPR D, P73, DOI 10.1109/SADFE.2009.12
   Ghemawat S., 2003, ACM SIGOPS OPERATING, V37, P29, DOI [DOI 10.1145/945445.945450, DOI 10.1145/1165389.945450, 10.1145/1165389.945450]
   Gu L, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P721, DOI 10.1109/HPCC.and.EUC.2013.106
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Jiang D, 2010, PROC VLDB ENDOW, V3, P472, DOI 10.14778/1920841.1920903
   Jiawei H., 2012, Data Mining: Concepts and Techniques, Vthird
   Knuth D. E., 1997, ART COMPUTER PROGRAM, V3, P550
   Lakshminarasimhan S, 2014, CLUSTER COMPUT, V17, P1101, DOI 10.1007/s10586-014-0358-z
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Marziale L, 2007, DIGIT INVEST, V4, pS73, DOI 10.1016/j.diin.2007.06.014
   Mattmann Chris., 2011, Tika in Action
   McCandless M., 2010, Lucene in Action
   Mishne G., 2013, Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data, SIGMOD '13, P1147, DOI [DOI 10.1145/2463676.2465290, 10.1145/2463676.2465290]
   Murray D. G., 2011, NSDI, V11
   Neumeyer L., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining Workshops (ICDMW 2010), P170, DOI 10.1109/ICDMW.2010.172
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Rao B. T., 2011, GLOBAL J COMPUT SCI, V11
   Roussev V, 2009, IFIP ADV INF COMM TE, V306, P201
   Shafer J, 2010, INT SYM PERFORM ANAL, P122, DOI 10.1109/ISPASS.2010.5452045
   Shaw A, 2013, DIGIT INVEST, V10, P116, DOI 10.1016/j.diin.2013.04.003
   Shinnar A, 2012, PROC VLDB ENDOW, V5, P1736, DOI 10.14778/2367502.2367513
   White T., 2012, HADOOP DEFINITIVE GU
   Xin Reynold S, 2013, ACM SIGMOD, P13
   Xue CY, 2014, ADV INTELL SYST, V255, P809, DOI 10.1007/978-81-322-1759-6_93
   Xuelian Lin, 2012, 2012 IEEE International Conference on Cluster Computing Workshops (Cluster Workshops 2012), P231, DOI 10.1109/ClusterW.2012.24
   Zaharia M., 2012, HOTCLOUD
   Zaharia M., 2010, HOTCLOUD 2010
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
NR 47
TC 6
Z9 6
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2016
VL 118
BP 115
EP 133
DI 10.1016/j.jss.2015.11.043
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DP7FL
UT WOS:000378664500008
DA 2024-07-18
ER

PT J
AU Rana, R
   Staron, M
   Berger, C
   Hansson, J
   Nilsson, M
   Meding, W
AF Rana, Rakesh
   Staron, Miroslaw
   Berger, Christian
   Hansson, Jorgen
   Nilsson, Martin
   Meding, Wilhelm
TI Analyzing defect inflow distribution and applying Bayesian inference
   method for software defect prediction in large software projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software; SRGM; Defect Inflow
ID RELIABILITY-GROWTH; NETWORKS; MODEL
AB Tracking and predicting quality and reliability is a major challenge in large and distributed software development projects. A number of standard distributions have been successfully used in reliability engineering theory and practice, common among these for modeling software defect inflow being exponential, Weibull, beta and Non-Homogeneous Poisson Process (NHPP). Although standard distribution models have been recognized in reliability engineering practice, their ability to fit defect data from proprietary and OSS software projects is not well understood. Lack of knowledge about underlying defect inflow distribution also leads to difficulty in applying Bayesian based inference methods for software defect prediction. In this paper we explore the defect inflow distribution of total of fourteen large software projects/release from two industrial domain and open source community. We evaluate six standard distributions for their ability to fit the defect inflow data and also assess which information criterion is practical for selecting the distribution with best fit. Our results show that beta distribution provides the best fit to the defect inflow data for all industrial projects as well as majority of OSS projects studied. In the paper we also evaluate how information about defect inflow distribution from historical projects is applied for modeling the prior beliefs/experience in Bayesian analysis which is useful for making software defect predictions early during the software project lifecycle. (C) 2016 Elsevier Inc. All rights reserved.
C1 [Rana, Rakesh; Staron, Miroslaw; Berger, Christian] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Horselgangen 5, S-41756 Gothenburg, Sweden.
   [Hansson, Jorgen] Univ Skovde, Sch Informat, Skovde, Sweden.
   [Nilsson, Martin] Volvo Car Grp, Gothenburg, Sweden.
   [Meding, Wilhelm] Ericsson AB, Ericsson SW Res, S-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Skovde; Volvo; Ericsson
RP Rana, R (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Horselgangen 5, S-41756 Gothenburg, Sweden.
EM rakesh.rana@gu.se
OI Staron, Miroslaw/0000-0002-9052-0864
FU Vinnova [DIARIENR: 2011-04438]; Volvo Cars [DIARIENR: 2011-04438]
FX The research presented here is done under the VISEE project which is
   funded by Vinnova and Volvo Cars jointly under the FFI program (VISEE,
   Project No: DIARIENR: 2011-04438). We are also thankful to companies
   involved (Volvo Car Corporation and Ericsson) and open source community
   for access to data used in this study.
CR [Anonymous], 2010, 10442009IEEE
   [Anonymous], 2005, Fitting distributions with R: The Comprehensive R Archive Network
   [Anonymous], 2015, MASS: Support Functions and Datasets for Venables and Ripley's MASS
   Davis J., 2005, P WORKSH OP SOURC SO, P1, DOI DOI 10.1145/1083258.1083273
   Dey S, 2012, J STAT COMPUT SIM, V82, P1651, DOI 10.1080/00949655.2011.590808
   Dziak J.J., 2012, Sensitivity and specificity of information criteria
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Gustavsson H, 2010, LECT NOTES COMPUT SC, V6287, P92, DOI 10.1007/978-3-642-15579-6_7
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herzig K, 2014, PROC INT SYMP SOFTW, P300, DOI 10.1109/ISSRE.2014.21
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jones EL, 2001, SIGCSE BULL, V33, P337, DOI 10.1145/366413.364617
   Kuo L, 1997, IEEE T RELIAB, V46, P76, DOI 10.1109/24.589931
   Li M, 2014, J QUAL TECHNOL, V46, P1
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Liang Zhao, 2006, 28th International Conference on Software Engineering Proceedings, P985, DOI 10.1145/1134285.1134469
   Littlewood B., 1973, Applied Statistics, V22, P332, DOI 10.2307/2346781
   Luan SP, 2014, SOFTW TEST VERIF REL, V24, P416, DOI 10.1002/stvr.1504
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mullen RE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1998.730863
   Neil M, 2001, COMPUT CONTROL ENG J, V12, P11, DOI 10.1049/cce:20010103
   Okamura H, 2011, 2011 INTERNATIONAL CONFERENCE ON QUALITY, RELIABILITY, RISK, MAINTENANCE, AND SAFETY ENGINEERING (ICQR2MSE), P411
   Park J, 2014, PROC INT SYMP SOFTW, P45, DOI 10.1109/ISSRE.2014.28
   RANA R., 2014, P 10 INT C PREDICTIV, P22, DOI [DOI 10.1145/2639490.2639507, 10.1145/2639490, DOI 10.1145/2639490]
   Rana R, 2014, J SYST SOFTWARE, V98, P59, DOI 10.1016/j.jss.2014.08.033
   Robson C., 2002, Real World Research, V2nd
   Spiegelhalter D., 2003, WINBUGS USER MANUAL
   Staron M, 2008, INFORM SOFTWARE TECH, V50, P782, DOI 10.1016/j.infsof.2007.10.001
   Tamura Y, 2013, P I MECH ENG O-J RIS, V227, P179, DOI 10.1177/1748006X12475110
   Tamura Y, 2013, SOFTW TEST VERIF REL, V23, P77, DOI 10.1002/stvr.455
   TOMASZEWSKI P, 2008, SOFTWARE PROCESS IMP, V13, P195, DOI DOI 10.1002/SPIP.355
   Wayne M, 2015, IEEE T RELIAB, V64, P206, DOI 10.1109/TR.2014.2337072
NR 34
TC 15
Z9 16
U1 1
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 229
EP 244
DI 10.1016/j.jss.2016.02.015
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN7CB
UT WOS:000377231800015
DA 2024-07-18
ER

PT J
AU van Vliet, H
   Tang, A
AF van Vliet, Hans
   Tang, Antony
TI Decision making in software architecture
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software architecture; Design decisions
ID DESIGNERS; FIXATION
AB Traditionally, software architecture is seen as the result of the software architecture design process, the solution, usually represented by a set of components and connectors. Recently, the why of the solution, the set of design decisions made by the software architect, is complementing or even replacing the solution-oriented definition of software architecture. This in turn leads to the study of the process of making these decisions. We outline some research directions that may help us understand and improve the software architecture design process. (C) 2016 Elsevier Inc. All rights reserved.
C1 [van Vliet, Hans] Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
   [Tang, Antony] Swinburne Univ Technol, John St, Hawthorn, Vic 3122, Australia.
C3 Vrije Universiteit Amsterdam; Swinburne University of Technology
RP van Vliet, H (corresponding author), Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM hans@cs.vu.nl; atang@swin.edu.au
RI Barrera Sanchez, Moises/L-1743-2015; Tang, Antony/C-2459-2009
OI Tang, Antony/0000-0002-3574-3977
CR [Anonymous], 2011, Software designers, are you biased?, DOI 10.1145/1988676.1988678
   [Anonymous], P 1988 ACM C COMP SU
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   Ariely D., 2008, Predictably Irrational
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Ball L. J., 1997, Thinking & Reasoning, V3, P247, DOI 10.1080/135467897394284
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Burge J, 2000, ARTIFICIAL INTELLIGENCE IN DESIGN '00, P611
   Burge Janet E., 2005, Ph.D. dissertation
   Capilla R., 2015, J SYST SOFTW
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   Crilly N, 2015, DESIGN STUD, V38, P54, DOI 10.1016/j.destud.2015.01.002
   Cross N., 2001, Design Studies, V22, P425, DOI [10.1016/S0142-694X(01)00009-6, DOI 10.1016/S0142-694X(01)00009-6]
   de Boer RC, 2009, J SYST SOFTWARE, V82, P544, DOI 10.1016/j.jss.2008.11.185
   de Bruin H., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P127
   Dutoit A., 2007, HDB SOFTWARE ENG KNO, P1
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   Gero JS, 2011, J CREATIVE BEHAV, V45, P108, DOI 10.1002/j.2162-6057.2011.tb01090.x
   Gladwell Malcolm., 2007, BLINK POWER THINKING, V1st
   Guindon R., 1990, HUM-COMPUT INTERACT, V5, P305, DOI 10.1080/07370024.1990.9667157
   HARVEY JB, 1974, ORGAN DYN, V3, P63, DOI 10.1016/0090-2616(74)90005-9
   Hassard S.T., 2009, Proceedings of the 23rd British HCI Group Annual Conference on People and Computers: Celebrating People and Technology, P140
   KAHNEMAN D, 1972, COGNITIVE PSYCHOL, V3, P430, DOI 10.1016/0010-0285(72)90016-3
   Kahneman Daniel, 2011, Thinking, fast and slow (macmillan)
   Klein G., 2009, STREETLIGHTS SHADOES
   Kruchten P., 2004, P 2 GRON WORKSH SOFT, P109
   Kunz W., 1970, Issues as elements of information systems
   LEE JT, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P114, DOI 10.1109/ICSE.1991.130629
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Moran T.P., 1996, DESIGN RATIONALE CON
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petre Marian, 2013, Software Designers in Action: A Human-Centric Look at Design Work, V1st
   Razavian M., 2015, J SOFTW EVOL PROCESS
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Smrithi Rekha V., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P185, DOI 10.1109/WICSA.2014.15
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Tang A, 2015, LECT NOTES COMPUT SC, V9278, P105, DOI 10.1007/978-3-319-23727-5_9
   Tang A, 2010, DESIGN STUD, V31, P614, DOI 10.1016/j.destud.2010.09.004
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   TRACZ WJ, 1979, SOFTWARE PRACT EXPER, V9, P127, DOI 10.1002/spe.4380090207
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van Heesch U, 2014, IEEE SOFTWARE, V31, P69, DOI 10.1109/MS.2013.22
   YEH RT, 1991, INT J SOFTW ENG KNOW, V1, P117, DOI 10.1142/S0218194091000123
   Zannier Carmen, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.12
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
NR 51
TC 54
Z9 58
U1 1
U2 22
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2016
VL 117
BP 638
EP 644
DI 10.1016/j.jss.2016.01.017
PG 7
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DN7CB
UT WOS:000377231800038
DA 2024-07-18
ER

PT J
AU Chae, DK
   Kim, SW
   Cho, SJ
   Kim, Y
AF Chae, Dong-Kyu
   Kim, Sang-Wook
   Cho, Seong-Je
   Kim, Yesol
TI Effective and efficient detection of software theft via dynamic API
   authority vectors
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Birthmark; Software theft detection; Similarity analysis
AB Software theft has become a very serious threat to both the software industry and individual software developers. A software birthmark indicates unique characteristics of a program in question, which can be used for analyzing the similarity of a pair of programs and detecting theft. This paper proposes a novel birthmark, a dynamic API authority vector (DAAV). DAAV satisfies four essential requirements for good birthmarks credibility, resiliency, scalability, and packing-free while existing static birthmarks are unable to handle the packed programs and existing dynamic birthmarks do not satisfy credibility and resiliency. Through our extensive experiments with a set of Windows applications, DAAV is shown to have not only the credibility and resiliency higher than the existing dynamic birthmarks but also the accuracy comparable to that of existing static birthmarks. This result indicates that our proposed birthmark provides high accuracy and also covers packed programs successfully in detecting software theft. (c) 2015 Elsevier Inc. All rights reserved.
C1 [Chae, Dong-Kyu; Kim, Sang-Wook] Hanyang Univ, Dept Comp & Software, Seoul 133791, South Korea.
   [Cho, Seong-Je; Kim, Yesol] Dankook Univ, Dept Comp Sci, Yongin 448701, Gyeonggi Do, South Korea.
C3 Hanyang University; Dankook University
RP Kim, SW (corresponding author), Hanyang Univ, Dept Comp & Software, 17 Haengdang Dong, Seoul 133791, South Korea.
EM kyu899@agape.hanyang.ac.kr; wook@hanyang.ac.kr; sjcho@dankook.ac.kr;
   kys_89@dankook.ac.kr
FU Ministry of Culture, Sports, and Tourism (MCST) via Korea Copyright
   Commission; National Research Foundation of Korea (NRF) - Korea
   government (MSIP) [NRF-2014R1A2A1A10054151]; Ministry of Science, ICT
   and Future Planning (MSIP), Korea, under the Information Technology
   Research Center (ITRC) support program [NIPA-2014-H0301-14-1022];
   Hanyang University; Samsung Electronics Co. Ltd.
FX This research was supported by (1) Ministry of Culture, Sports, and
   Tourism (MCST) via Korea Copyright Commission in 2014, (2) the National
   Research Foundation of Korea (NRF) grant funded by the Korea government
   (MSIP) (no. NRF-2014R1A2A1A10054151), (3) the Ministry of Science, ICT
   and Future Planning (MSIP), Korea, under the Information Technology
   Research Center (ITRC) support program (NIPA-2014-H0301-14-1022)
   supervised by the National IT Industry Promotion Agency (NIPA), and (4)
   Semiconductor Industry Collaborative Project between Hanyang University
   and Samsung Electronics Co. Ltd.
CR Aiken Alex., 2005, MOSS SYSTEM DETECTIN
   [Anonymous], THESIS U ARIZONA
   [Anonymous], 2002, P 11 INT C WORLD WID, DOI DOI 10.1145/511446.511513
   [Anonymous], P 22 ACM INT C INF K
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   Chae Dong-Kyu., 2013, Procee dings of the 28th Annual ACM Symposium on Applied Computing (SAC '13), P1639
   Collberg C., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P311, DOI 10.1145/292540.292569
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Jang M., 2013, P 28 ANN ACM S APPL, P1634
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Tamada H., 2004, P INT S FUT SOFTW TE, V20
   Tian ZZ, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P619, DOI 10.1109/HPCC.and.EUC.2013.93
   Tong HH, 2006, IEEE DATA MINING, P613
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Wise M. J., 1996, SIGCSE Bulletin, V28, P130, DOI 10.1145/236462.236525
   Zhou XM, 2008, 2008 FOURTH INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING, PROCEEDINGS, P1416, DOI 10.1109/IIH-MSP.2008.145
NR 22
TC 6
Z9 6
U1 0
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2015
VL 110
BP 1
EP 9
DI 10.1016/j.jss.2015.08.018
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CV4NU
UT WOS:000364244600001
DA 2024-07-18
ER

PT J
AU Shahid, M
   Raza, Z
   Sajid, M
AF Shahid, Mohammad
   Raza, Zahid
   Sajid, Mohammad
TI Level based batch scheduling strategy with idle slot reduction under DAG
   constraints for computational grid
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Computational grid; Level based batch scheduler; DAG constraints
ID INDEPENDENT TASKS; HEURISTICS; ALGORITHMS; SYSTEMS; GRAPHS
AB Scheduling in a grid environment optimizing the given objective parameters has been proven to be NP-complete. This work proposes a Level based Batch scheduling Strategy with Idle slot Reduction (LBSIR) while considering the inter module communication within the modules of the jobs represented using Direct Acyclic Graph (DAG) with the objective of optimizing the turnaround time and response time for a computational grid. The model works in two phases, allocation phase and idle slot reduction phase. Allocation phase begins by dividing the batch into a number of partitions as per the precedence level/depth level followed by the assignment of sub-jobs/modules from the partition to the best fit node in terms of the execution time offered for all the partitions. The idle slots generated during the allocation phase in each depth level are then reduced by inserting the best fit modules into these slots in the idle slot reduction phase after allocation of modules from higher depth level. Levelized allocation ensures minimizing the average response time being very useful for user interactive applications. An experimental study of the proposed strategy has been performed by comparing it with other similar methods having common objectives for evaluating its place in the middleware. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Shahid, Mohammad; Raza, Zahid; Sajid, Mohammad] Jawaharlal Nehru Univ, Sch Comp & Syst Sci, New Delhi 110067, India.
C3 Jawaharlal Nehru University, New Delhi
RP Shahid, M (corresponding author), Jawaharlal Nehru Univ, Sch Comp & Syst Sci, New Delhi 110067, India.
EM mdshahid.cs@gmail.com; zahidraza@mail.jnu.ac.in; sajid.cst@gmail.com
RI Sajid, Mohammad/AFV-9233-2022; SAJID, MOHAMMAD/IQT-7351-2023
OI SAJID, MOHAMMAD/0000-0001-8822-5332; Shahid,
   Mohammad/0000-0002-4081-5963
CR Abrishami S, 2013, FUTURE GENER COMP SY, V29, P158, DOI 10.1016/j.future.2012.05.004
   [Anonymous], 2002, IEEE T PARALLEL DIST
   [Anonymous], 1990, COMPUT INTRACTABILIT
   Arabnejad H, 2014, IEEE T PARALL DISTR, V25, P682, DOI 10.1109/TPDS.2013.57
   Bajaj R, 2004, IEEE T PARALL DISTR, V15, P107, DOI 10.1109/TPDS.2004.1264795
   Braun TD, 2001, J PARALLEL DISTR COM, V61, P810, DOI 10.1006/jpdc.2000.1714
   Cai M., 2002, LECT NOTES COMPUTER, V2337, P304
   Canon LC, 2008, GRID COMPUTING: ACHIEVEMENTS AND PROSPECTS, P73, DOI 10.1007/978-0-387-09457-1_7
   Daoud MI, 2008, J PARALLEL DISTR COM, V68, P399, DOI 10.1016/j.jpdc.2007.05.015
   Deelman E, 2015, FUTURE GENER COMP SY, V46, P17, DOI 10.1016/j.future.2014.10.008
   Deveci M, 2015, J PARALLEL DISTR COM, V77, P69, DOI 10.1016/j.jpdc.2014.12.002
   Feng Ling Ren, 2012, 2012 Seventh ChinaGrid Annual Conference (ChinaGrid 2012), P33, DOI 10.1109/ChinaGrid.2012.7
   Foster I., 2006, GRID 2 BLUEPRINT FUT
   Fu R, 2009, J SCHEDULING, V12, P91, DOI 10.1007/s10951-008-0084-6
   HWANG JJ, 1989, SIAM J COMPUT, V18, P244, DOI 10.1137/0218016
   Iverson M, 1998, SEVENTH HETEROGENEOUS COMPUTING WORKSHOP (HCW '98), P70, DOI 10.1109/HCW.1998.666546
   Iverson M.A., 1995, 4 HETEROGENEOUS COMP, P93
   Izakian H, 2009, NEURAL NETW WORLD, V19, P695
   Karatza HD, 2001, J SYST SOFTWARE, V56, P203, DOI 10.1016/S0164-1212(00)00098-4
   Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618
   Leah E., 2006, LECT NOTES COMPUTER, V4110, P116
   Lee YC, 2015, KNOWL-BASED SYST, V80, P153, DOI 10.1016/j.knosys.2015.02.012
   Maheswaran M, 1999, J PARALLEL DISTR COM, V59, P107, DOI 10.1006/jpdc.1999.1581
   MAHESWARAN M, 1998, P 7 HET COMP WORKSH
   Maheswaran M., 1999, Encyclopedia of Electrical and Electronics Engineering, P679
   Melnyk A., 2013, CLUSTER COMPUT, P3
   Papazachos ZC, 2010, J SYST SOFTWARE, V83, P1346, DOI 10.1016/j.jss.2010.01.009
   Ran M., 2009, WASE INT C INF ENG I
   Sakellariou R., 2004, P 18 INT IEEE S PAR
   Saovapakhiran B, 2011, GLOB TELECOMM CONF
   Shahid M, 2014, INT J GRID UTIL COMP, V5, P135, DOI 10.1504/IJGUC.2014.060223
   Shi Z, 2006, FUTURE GENER COMP SY, V22, P665, DOI 10.1016/j.future.2005.11.002
   SIH GC, 1993, IEEE T PARALL DISTR, V4, P175, DOI 10.1109/71.207593
   Vidyarthi DP, 2009, SCHEDULING IN DISTRIBUTED COMPUTING SYSTEMS: ANALYSIS, DESIGN AND MODELS, P1, DOI 10.1007/978-0-387-74483-4
   Wang SD, 2005, 11TH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, VOL I, PROCEEDINGS, P22
   Wen SF, 2009, MODELLING SIMULATION, P1, DOI 10.1109/cisp.2009.5301325
   Xhafa F., 2007, International Journal of Web and Grid Services, V3, P19, DOI 10.1504/IJWGS.2007.012635
   Xhafa Fatos, 2007, International Journal of Web and Grid Services, V3, P219, DOI 10.1504/IJWGS.2007.014075
   Xhafa F, 2010, FUTURE GENER COMP SY, V26, P608, DOI 10.1016/j.future.2009.11.005
   Yang JD, 2011, APPL SOFT COMPUT, V11, P3297, DOI 10.1016/j.asoc.2010.11.029
   YANG T, 1994, IEEE T PARALL DISTR, V5, P951, DOI 10.1109/71.308533
   Zhao H., 2006, 20 INT PAR DISTR PRO, P125
   Zhu L., 2007, P SOC PHOTO-OPT INS, P1
   Zhu Y., 2013, SJTUCSTR200309001
NR 44
TC 10
Z9 10
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2015
VL 108
BP 110
EP 133
DI 10.1016/j.jss.2015.06.016
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CO2EQ
UT WOS:000358969300006
DA 2024-07-18
ER

PT J
AU Pérez, H
   Gutiérrez, JJ
AF Perez, Hector
   Javier Gutierrez, J.
TI Modeling the QoS parameters of DDS for event-driven real-time
   applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Distribution middleware; Real-time systems; Model-driven engineering
ID MIDDLEWARE
AB The Data Distribution Service (DDS) standard defines a data-centric distribution middleware that supports the development of distributed real-time systems. To this end, the standard includes a wide set of configurable parameters to provide different degrees of Quality of Service (QoS). This paper presents an analysis of these QoS parameters when DDS is used to build reactive applications normally designed under an event-driven paradigm, and shows how to represent them using the real-time end-to-end flow model defined by the MARTE standard. We also present an application-case study to illustrate the use and modeling of DDS in next-generation distributed real-time systems. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Perez, Hector; Javier Gutierrez, J.] Univ Cantabria, Software Engn & Real Time Grp, E-39005 Santander, Spain.
C3 Universidad de Cantabria
RP Pérez, H (corresponding author), Univ Cantabria, Software Engn & Real Time Grp, E-39005 Santander, Spain.
EM perezh@unican.es
RI Tijero, Hector Perez/AAH-3192-2020; Gutierrez, J. Javier/K-6163-2014
OI Tijero, Hector Perez/0000-0001-6231-461X; Gutierrez, J.
   Javier/0000-0002-0706-5494
FU Spanish Government; FEDER [TIN2011-28567-C03-02]
FX This work has been funded in part by the Spanish Government and FEDER
   funds under grant number TIN2011-28567-C03-02 (HI-PARTES).
CR ADAMS, ACT DISS AD MARTE RE
   Aldea M., 2001, LECT NOTES COMPUTER, V2043
   An K., 2013, 12 INT C GEN PROGR C
   [Anonymous], 2014, OMG VERS 1 4
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], 1998, RFC 2474
   Anssi S., 2012, LNCS, V7083, P262
   Beckmann K, 2010, LECT NOTES COMPUT SC, V6399, P95, DOI 10.1007/978-3-642-16256-5_11
   de Simone R, 2008, 13 IEEE INT C ENG CO, P228
   Fernández J, 2013, INT SYM IND EMBED, P178, DOI 10.1109/SIES.2013.6601490
   Fohler G, 1995, IEEE REAL TIME, P152, DOI 10.1109/REAL.1995.495205
   Gamatié A, 2011, ACM T EMBED COMPUT S, V10, DOI 10.1145/2043662.2043663
   García JJG, 2000, EUROMICRO, P15, DOI 10.1109/EMRTS.2000.853988
   Valls MG, 2013, IEEE T IND INFORM, V9, P228, DOI 10.1109/TII.2012.2198662
   Ghahroudi M., 2009, Sensor Data Fusion, P141
   Gillen M., 2012, P SPIE C DEF TRANSF, V8405
   Gokhale A, 2008, SCI COMPUT PROGRAM, V73, P39, DOI 10.1016/j.scico.2008.05.005
   Harbour MG, 2013, J SYST ARCHITECT, V59, P331, DOI 10.1016/j.sysarc.2012.02.001
   Gonzalez M., 2013, REAL TIME SYSTEMS PR, P42
   Gutierrez J. J., 2012, 1 INT WORKSH REAL TI
   Gutierrez JCP, 1997, EUROMICRO, P136, DOI 10.1109/EMWRTS.1997.613774
   Haberl W., 2008, P INT C EMB SYST APP
   Hakiri A, 2014, J SYST SOFTWARE, V95, P100, DOI 10.1016/j.jss.2014.03.078
   Hakiri A, 2013, J SYST SOFTWARE, V86, P2574, DOI 10.1016/j.jss.2013.04.074
   Harbour MG, 2001, EUROMICRO, P125, DOI 10.1109/EMRTS.2001.934015
   Hoffert Joe., 2007, Proceedings of the 2007 inaugural international conference on Distributed event-based systems, P140
   IEEE, 2003, 100313 IEEE PASC
   IEEE, 2008, IEEE PORT APPL STAND
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Jaouani H., 2012, LNCS, P306
   Kang W, 2012, IEEE T IND INFORM, V8, P393, DOI 10.1109/TII.2012.2183878
   Madl G., 2009, THESIS U LONG BEACH
   Mallet F., 2009, LECT NOTES ELECT ENG, V36, P27
   Medina JL, 2011, LECT NOTES COMPUT SC, V6652, P89, DOI 10.1007/978-3-642-21338-0_7
   OMG, 2009, REAL TIM PUBL SUBSCR
   Pérez H, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2532636
   Pérez H, 2011, EUROMICRO CONF PROC, P209, DOI 10.1109/SEAA.2011.40
   Tijero HP, 2012, COMPUT STAND INTER, V34, P203, DOI 10.1016/j.csi.2011.08.005
   Perrotin M., 2010, P EMB REAL TIM SOFTW
   Perrotin M., 2012, LNCS, V7083, P26, DOI DOI 10.1007/978-3-642-25264-8_4
   Rekik R, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT 2009), P766, DOI 10.1109/ICADIWT.2009.5273919
   Rivas J., 2011, P 23 EUR REAL TIM SY
   SAE, 2012, ARCH AN DES LANG AAD
   Salazar E., 2013, LNCS, V7896, P127
   Shaout A., 2011, 2011 7 INT COMP ENG, P72
   Singhoff F., 2004, Ada Letters, V24, P1
   Taft S. T., 2013, LNCS, V8339
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
   Yang J., 2013, THESIS MARARDALEN U
NR 49
TC 19
Z9 21
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2015
VL 104
BP 126
EP 140
DI 10.1016/j.jss.2015.03.008
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG8YR
UT WOS:000353602100010
DA 2024-07-18
ER

PT J
AU Mansoor, U
   Kessentini, M
   Langer, P
   Wimmer, M
   Bechikh, S
   Deb, K
AF Mansoor, Usman
   Kessentini, Marouane
   Langer, Philip
   Wimmer, Manuel
   Bechikh, Slim
   Deb, Kalyanmoy
TI MOMM: Multi-objective model merging
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Search-based software engineering; Merging; Multi-objective optimization
ID EVOLUTIONARY ALGORITHMS; METRICS
AB Nowadays, software systems are complex and large. To cope with this situation, teams of developers have to cooperate and work in parallel on software models. Thus, techniques to support the collaborative development of models are a must. To this end, several approaches exist to identify the change operations applied in parallel, to detect conflicts among them, as well as to construct a merged model by incorporating all non-conflicting operations. Conflicts often denote situations where the application of one operation disables the applicability of another one. Consequently, one operation has to be omitted to construct a valid merged model in such scenarios. When having to decide which operation to omit, the importance of its application has to be taken into account depending on the operation type and the application context. However, existing works treat the operations to merge with equal importance. We introduce in this paper, for the first time, a multi-objective formulation of the problem of model merging, based on NSGA-II, that aims to find the best trade-off between minimizing the number of omitted operations and maximizing the number of successfully applied important operations. We evaluated our approach using seven open source systems and compared it with different existing model merging approaches. The merging solutions obtained with our approach were found in all of the scenarios of our experiments to be comparable in terms of minimizing the number of conflicts to those suggested by existing approaches and to carry a high importance score of merged operations. Our results also revealed an interesting feature concerning the trade-off between the two conflicting objectives that demonstrates the practical value of taking the importance of operations into account in model merging tasks. In fact, the shape of the Pareto front represents an interesting guidance for developers to select best solutions based on their preferences. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Mansoor, Usman; Kessentini, Marouane; Bechikh, Slim; Deb, Kalyanmoy] Univ Michigan, Dearborn, MI 48128 USA.
   [Langer, Philip; Wimmer, Manuel] Vienna Univ Technol, A-1040 Vienna, Austria.
C3 University of Michigan System; University of Michigan; Technische
   Universitat Wien
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM usman@umich.edu; kessentiniglp@yahoo.fr; langer@big.tuwien.ac.at;
   wimmer@big.tuwien.ac.at; slim@umich.edu; kdeb@egr.msu.edu
RI Bechikh, Slim/AAF-6435-2020
OI Bechikh, Slim/0000-0003-1378-7415
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   [Anonymous], 2004, WORKSH DIR SOFTW ENG
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 1995, ISERN9503
   Arcuri A., 2011, P 33 INT C SOFTW ENG
   Bandyopadhyay S, 2013, APPL MATH MODEL, V37, P6718, DOI 10.1016/j.apm.2013.01.050
   Barrett S., 2011, P ECMFA
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bechikh S., 2010, P IEEE C EV COMP CEC, P2129
   ben Fadhel A., 2012, P ICSM
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brosch P., 2011, PRESENT FUTURE MODEL
   Brosch P., 2012, P SFM
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Edwards W. E., 1997, Proceedings of the ACM Symposium on User Interface Software and Technology. 10th Annual Symposium. UIST '97, P139, DOI 10.1145/263407.263533
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Ekman Torbjorn., 2004, Electr. Notes Theor. Comput. Sci, V107, P57, DOI DOI 10.1016/J.ENTCS.2004.02.048
   Elaoud S., 2010, Electron Notes Discrete Math, V36, P939, DOI DOI 10.1016/J.ENDM.2010.05.119
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Gerth C, 2013, SOFTW SYST MODEL, V12, P517, DOI 10.1007/s10270-011-0226-8
   Harman M., 2007, P ICSE
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Ignat C., 2004, WORKSH COLL ED
   Jozefowiez N, 2006, LECT NOTES COMPUT SC, V3871, P131
   Kessentini M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1453
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kim Miryung, 2012, P ACM SIGSOFT 20 INT
   Koegel M., 2010, P EDOC
   Koegel M., 2010, OOPSLA COMP
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Langer P., 2011, THESIS VIENNA U TECH
   Langer P, 2013, J SYST SOFTWARE, V86, P551, DOI 10.1016/j.jss.2012.09.037
   Li XD, 2003, LECT NOTES COMPUT SC, V2723, P37
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Marquez-Chamorro Alfonso E., 2012, Evolutionary Computation, Machine Learning and Data Mining in Bioinformatics. Proceedings of the 10th European Conference, EvoBIO 2012, P234, DOI 10.1007/978-3-642-29066-4_21
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mougenot A., 2009, P DAIS
   Mukhopadhyay A, 2014, IEEE T EVOLUT COMPUT, V18, P4, DOI 10.1109/TEVC.2013.2290086
   Munson J. P., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/192844.193016
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Saxena DK, 2013, IEEE T EVOLUT COMPUT, V17, P77, DOI 10.1109/TEVC.2012.2185847
   Schmidt M., 2009, WORKSH COMP VERS SOF
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sunye G., 2001, P UML
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wieland K, 2013, COMPUT SUPP COOP W J, V22, P181, DOI 10.1007/s10606-012-9172-4
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 62
TC 21
Z9 24
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 423
EP 439
DI 10.1016/j.jss.2014.11.043
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500028
DA 2024-07-18
ER

PT J
AU Patrick, M
   Alexander, R
   Oriol, M
   Clark, JA
AF Patrick, Matthew
   Alexander, Rob
   Oriol, Manuel
   Clark, John A.
TI Subdomain-based test data generation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Search based testing; Input distributions; Evolution strategy
ID MUTATION; OPTIMIZATION; SELECTION
AB Considerable effort is required to test software thoroughly. Even with automated test data generation tools, it is still necessary to evaluate the output of each test case and identify unexpected results. Manual effort can be reduced by restricting the range of inputs testers need to consider to regions that are more likely to reveal faults, thus reducing the number of test cases overall, and therefore reducing the effort needed to create oracles. This article describes and evaluates search-based techniques, using evolution strategies and subset selection, for identifying regions of the input domain (known as subdomains) such that test cases sampled at random from within these regions can be used efficiently to find faults. The fault finding capability of each subdomain is evaluated using mutation analysis, a technique that is based on faults programmers are likely to make. The resulting subdomains kill more mutants than random testing (up to six times as many in one case) with the same number or fewer test cases. Optimised subdomains can be used as a starting point for program analysis and regression testing. They can easily be comprehended by a human test engineer, so may be used to provide information about the software under test and design further highly efficient test suites. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Patrick, Matthew; Alexander, Rob; Oriol, Manuel; Clark, John A.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Patrick, Matthew] Univ Cambridge, Dept Plant Sci, Cambridge, England.
   [Oriol, Manuel] ABB Corp Res, Baden, Switzerland.
C3 University of York - UK; University of Cambridge; ABB
RP Patrick, M (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM mtp33@cam.ac.uk; rda@cs.york.ac.uk; manuel.oriol@ch.abb.com;
   jac@cs.york.ac.uk
RI Alexander, Rob/GPF-8217-2022
OI Alexander, Rob/0000-0003-3818-0310
FU EPSRC [EP/G043604/1] Funding Source: UKRI
CR Ammann Paul, 2008, Introduction to software testing, V1st
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2009, GLOBAL OPTIMIZATION
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2011, Nature-inspired metaheuristic algorithms
   [Anonymous], 1995, Evolution and Optimum Seeking, Sixth-Generation Computer Technology Series
   Apache, 2013, COMM MATH LIN ALG
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri Andrea., 2011, ISSTA
   Arnold DV, 2002, IEEE T EVOLUT COMPUT, V6, P30, DOI 10.1023/A:1015059928466
   Back T, 1998, GENETIC ALGORITHMST
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Bezier Boris., 1990, Software Testing Techniques, V2nd
   Blanco R, 2009, INFORM SOFTWARE TECH, V51, P708, DOI 10.1016/j.infsof.2008.11.001
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Díaz E, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2003.1240327
   Dijkstra E., 1972, Notes on Structured Programming in Structured Programming
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Dustin E., 1999, AUTOMATED SOFTWARE T
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P962, DOI 10.1109/32.245738
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Ghani K., 2009, P 1 INT S SEARCH BAS
   Hamlet Dick., 2010, Composing Software Components: A Software-testing Perspective, V1st
   Hansen N, 2006, STUD FUZZ SOFT COMP, V192, P75
   Hansen N, 2010, GECCO-2010 COMPANION PUBLICATION: PROCEEDINGS OF THE 12TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1689
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mahmood S, 2007, THESIS BLEKINGE I TE
   May PeterS, 2007, THESIS
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Usaola MP, 2012, LECT NOTES COMPUT SC, V7212, P425, DOI 10.1007/978-3-642-28872-2_29
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   PUDIL P, 1994, INT C PATT RECOG, P279, DOI 10.1109/ICPR.1994.576920
   Ramamoorthy C.V., 1976, P 2 INT C SOFTW ENG, P636
   Ribeiro J.C.B., 2008, GEN EV COMP C GECCO, P1819, DOI DOI 10.1145/1388969.1388979
   Sun, 2008, JAVA COMPATABILITY K
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Weyuker E, 1980, TECHNICAL REPORT
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 54
TC 3
Z9 3
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 328
EP 342
DI 10.1016/j.jss.2014.11.033
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500022
DA 2024-07-18
ER

PT J
AU Yu, DJ
   Zhang, YY
   Chen, ZL
AF Yu, Dongjin
   Zhang, Yanyan
   Chen, Zhenli
TI A comprehensive approach to the recovery of design pattern instances
   based on sub-patterns and method signatures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Design pattern recovery; Design patterns; Sub-patterns; Graph mining;
   Method signature
AB Design patterns are formalized best practices that address concerns related to high-level structures for applications being developed. The efficient recovery of design pattern instances significantly facilitates program comprehension and software reengineering. However, the recovery of design pattern instances is not a straightforward task. In this paper, we present a novel comprehensive approach to the recovery of instances of 23 GoF design patterns from source codes. The key point of the approach lies in that we consider different design pattern instances consist of some commonly recurring sub-patterns that are easier to be detected. In addition, we focus not only on the class relationship, but also on the characteristics of underlying method signatures in classes. We first transform the source codes and predefined GoF patterns into graphs, with the classes as nodes and the relationships as edges. We then identify the instances of sub-patterns that would be the possible constituents of pattern instances by means of subgraph discovery. The sub-pattern instances are further merged by the joint classes to see if the collective matches one of the predefined patterns. Finally, we compare the behavioral characteristics of method invocation with the predefined method signature templates of GoF patterns to obtain the final pattern instances directly. Compared with existing approaches, we integrate and improve some of the previous ideas and put forward a comprehensive and elaborative approach also based on our own ideas. We detect sub-patterns via graph isomorphism based on prime number composition and the joint classes to reduce the search space. Meanwhile, we employ the method signatures to investigate the behavioral features to avoid choosing the test cases with full code coverage. The results of the extensive experiments on recovering pattern instances from nine open source software systems demonstrate that our approach obtains the balanced high precision and recall. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Yu, Dongjin; Zhang, Yanyan; Chen, Zhenli] Hangzhou Dianzi Univ, Sch Comp, Hangzhou, Zhejiang, Peoples R China.
C3 Hangzhou Dianzi University
RP Yu, DJ (corresponding author), Hangzhou Dianzi Univ, Sch Comp, Hangzhou, Zhejiang, Peoples R China.
EM yudj@hdu.edu.cn
RI Zhang, Yanyan/AFT-0833-2022
FU National Natural Science Foundation of China [61100043]; Natural Science
   Foundation of Zhejiang Province [LY12F02003]; Key Science and Technology
   Project of Zhejiang [2012C11026-3]
FX The work is supported by National Natural Science Foundation of China
   (no. 61100043), Natural Science Foundation of Zhejiang Province (no.
   LY12F02003), the Key Science and Technology Project of Zhejiang (no.
   2012C11026-3). The authors would also like to thank anonymous reviewers
   and the colleagues in UC Santa Barbara who made valuable suggestions to
   improve the quality of the paper.
CR Alnusair A, 2014, INT J SOFTW TOOLS TE, V16, P315, DOI 10.1007/s10009-013-0292-z
   Ampatzoglou A, 2013, ENTERTAIN COMPUT, V4, P131, DOI 10.1016/j.entcom.2012.10.002
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Binun A, 2012, EUR CON SFTWR MTNCE, P245, DOI 10.1109/CSMR.2012.82
   Bouassida N, 2010, LECT NOTES COMPUT SC, V6051, P150, DOI 10.1007/978-3-642-13094-6_13
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia Andrea., 2010, Proceedings of the IEEE International Conference on Software Maintenance, ICSM, P1, DOI DOI 10.1109/ICSM.2010.5609707
   Dong J., 2007, P 19 INT C SOFTW ENG, P473
   Dong J, 2009, INT J SOFTW ENG KNOW, V19, P823, DOI 10.1142/S021819400900443X
   Dong J, 2009, IEEE T SYST MAN CY A, V39, P1271, DOI 10.1109/TSMCA.2009.2028012
   Dongjin Yu, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P255, DOI 10.1007/978-3-642-38977-1_17
   Elaasar M., 2013, SOFTWARE SYSTEMS MOD, P1
   Ferenc R, 2005, PROC IEEE INT CONF S, P295
   Fontana FA, 2011, J SYST SOFTWARE, V84, P2334, DOI 10.1016/j.jss.2011.07.006
   Fontana FA, 2013, J SOFTW-EVOL PROC, V25, P27, DOI 10.1002/smr.547
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Heuzeroth D, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ASE.2003.1240313
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Kaczor O, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P173
   Khatoon S., 2011, J SOFTWARE ENG, V5, P64
   Lebon M, 2012, P INT COMP SOFTW APP, P267, DOI 10.1109/COMPSAC.2012.37
   MARPLE Group, 2009, DES PATT DET CAT
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Pande A, 2010, COMM COM INF SC, V95, P108, DOI 10.1007/978-3-642-14825-5_10
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Posnett Daryl, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P122, DOI 10.1109/MSR.2010.5463349
   Qiu M, 2010, LECT NOTES ARTIF INT, V5990, P350
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Rasool G, 2010, ADV ENG SOFTW, V41, P519, DOI 10.1016/j.advengsoft.2009.10.014
   Romano S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P500, DOI 10.1109/ICSM.2011.6080818
   Shi N., 2006, 21 IEEE INT C AUT SO, P245
   Smith J.M, 2002, 02040 U N CAR
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Wendehals L, 2011, P ICSE WORKSH DYN AN, P29
   Yu DJ, 2013, P INT COMP SOFTW APP, P579, DOI 10.1109/COMPSAC.2013.92
NR 39
TC 30
Z9 35
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 1
EP 16
DI 10.1016/j.jss.2015.01.019
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE6TQ
UT WOS:000351971500001
DA 2024-07-18
ER

PT J
AU Xu, Z
   Liu, YH
   Mei, L
   Hu, CP
   Chen, L
AF Xu, Zheng
   Liu, Yunhuai
   Mei, Lin
   Hu, Chuanping
   Chen, Lan
TI Semantic based representing and organizing surveillance big data using
   video structural description technology
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Video structural description; Surveillance big data; Big data
   representing and organizing
ID DATA SETS; COST; TEXT
AB Big data is an emerging paradigm applied to datasets whose size is beyond the ability of commonly used software tools to capture, manage, and process the data within a tolerable elapsed time. Especially, the data volume of all video surveillance devices in Shanghai, China, is up to 1 TB every day. Thus, it is important to accurately describe the video content and enable the organizing and searching potential videos in order to detect and analyze related surveillance events. Unfortunately, raw data and low level features cannot meet the video based task. In this paper, a semantic based model is proposed for representing and organizing video big data. The proposed surveillance video representation method defines a number of concepts and their relations, which allows users to use them to annotate related surveillance events. The defined concepts include person, vehicles, and traffic sighs, which can be used for annotating and representing video traffic events unambiguous. In addition, the spatial and temporal relation between objects in an event is defined, which can be used for annotating and representing the semantic relation between objects in related surveillance events. Moreover, semantic link network is used for organizing video resources based on their associations. In the application, one case study is presented to analyze the surveillance big data. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Xu, Zheng; Liu, Yunhuai; Mei, Lin; Hu, Chuanping; Chen, Lan] Minist Publ Secur, Res Inst 3, Shanghai, Peoples R China.
   [Xu, Zheng] Tsinghua Univ, Beijing, Peoples R China.
C3 Ministry of Public Security (China); Tsinghua University
RP Xu, Z (corresponding author), Tsinghua Univ, Beijing, Peoples R China.
EM xuzheng@shu.edu.cn
FU National Science and Technology Major Project [2013ZX01033002-003];
   National High Technology Research and Development Program of China (863
   Program) [2013AA014601, 2013AA014603]; National Key Technology Support
   Program [2012BAH07B01]; National Science Foundation of China [61300202];
   Science Foundation of Shanghai [13ZR1452900]
FX This work was supported in part by the National Science and Technology
   Major Project under Grant 2013ZX01033002-003, in part by the National
   High Technology Research and Development Program of China (863 Program)
   under Grant 2013AA014601, 2013AA014603, in part by National Key
   Technology Support Program under Grant 2012BAH07B01, in part by the
   National Science Foundation of China under Grant 61300202, and in part
   by the Science Foundation of Shanghai under Grant 13ZR1452900.
CR Akdemir U., 2008, Proc. ACMMM, P709, DOI DOI 10.1145/1459359.1459466
   [Anonymous], P IEEE INT C SEM COM
   Bai L, 2007, IMVIP 2007: INTERNATIONAL MACHINE VISION AND IMAGE PROCESSING CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/IMVIP.2007.13
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Chen D, 2013, MOBILE NETW APPL, V18, P651, DOI 10.1007/s11036-013-0456-9
   Cheng HT, 2012, PROC CVPR IEEE, P741, DOI 10.1109/CVPR.2012.6247744
   Choi MJ, 2012, IEEE T PATTERN ANAL, V34, P240, DOI 10.1109/TPAMI.2011.119
   Deng J., 2009, IEEE P CVPR
   Deng Z, 2015, IEEE T PARALL DISTR, V26, P834, DOI 10.1109/TPDS.2014.2311811
   Dönderler ME, 2005, MULTIMED TOOLS APPL, V27, P79, DOI 10.1007/s11042-005-2715-7
   Fan JP, 2004, IEEE T MULTIMEDIA, V6, P70, DOI 10.1109/TMM.2003.819583
   Fan JP, 2001, J ELECTRON IMAGING, V10, P895, DOI 10.1117/1.1406944
   François ARJ, 2005, IEEE MULTIMEDIA, V12, P76, DOI 10.1109/MMUL.2005.87
   Hai ZG, 2010, ARTIF INTELL, V174, P190, DOI 10.1016/j.artint.2009.11.014
   Javed K, 2012, IEEE T KNOWL DATA EN, V24, P465, DOI 10.1109/TKDE.2010.263
   Lifeng Wu, 2010, 2010 IEEE International Conference on Systems, Man and Cybernetics (SMC 2010), P26, DOI 10.1109/ICSMC.2010.5642198
   Liu LM, 2009, IEEE T CIRC SYST VID, V19, P453, DOI 10.1109/TCSVT.2009.2017074
   Liu X, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559938
   Liu YH, 2011, IEEE T PARALL DISTR, V22, P2100, DOI 10.1109/TPDS.2011.113
   Liu YH, 2010, IEEE T PARALL DISTR, V21, P405, DOI 10.1109/TPDS.2009.57
   Luo XF, 2011, IEEE T AUTOM SCI ENG, V8, P482, DOI 10.1109/TASE.2010.2094608
   Ma H, 2010, IEEE T MULTIMEDIA, V12, P462, DOI 10.1109/TMM.2010.2051360
   Ma Y, 2014, IEEE T PARALL DISTR, V25, P2126, DOI 10.1109/TPDS.2013.272
   Ma Y, 2013, CONCURR COMP-PRACT E, V25, P1784, DOI 10.1002/cpe.2965
   Marszalek M., 2007, IEEE P CVPR
   Nevatia R., 2005, P 10 IEEE INT C COMP
   Plebani P, 2009, IEEE T KNOWL DATA EN, V21, P1629, DOI 10.1109/TKDE.2009.35
   Sevilmis T, 2008, IMAGE VISION COMPUT, V26, P1384, DOI 10.1016/j.imavis.2008.01.001
   Wang LZ, 2010, NEW GENERAT COMPUT, V28, P137, DOI 10.1007/s00354-008-0081-5
   Wigan MR, 2013, COMPUTER, V46, P46, DOI 10.1109/MC.2013.195
   Xu CS, 2008, IEEE T MULTIMEDIA, V10, P1342, DOI 10.1109/TMM.2008.2004912
   Xu Z, 2011, COMPUT SYST SCI ENG, V26, P153
   Yao BZ, 2010, P IEEE, V98, P1485, DOI 10.1109/JPROC.2010.2050411
   Yu HQ, 2012, IEEE T LEARN TECHNOL, V5, P130, DOI 10.1109/TLT.2012.1
   Yuan D, 2013, IEEE T PARALL DISTR, V24, P1234, DOI 10.1109/TPDS.2013.20
   Zhang J, 2008, IEEE T SYST MAN CY C, V38, P649, DOI 10.1109/TSMCC.2008.923876
   Zhang XY, 2014, IEEE T PARALL DISTR, V25, P363, DOI 10.1109/TPDS.2013.48
   Zhang XY, 2013, IEEE T PARALL DISTR, V24, P1192, DOI 10.1109/TPDS.2012.238
   ZHUGE H., 2012, The Knowledge Grid: Toward Cyber-Physical Society
   Zhuge H, 2008, IEEE T PARALL DISTR, V19, P145, DOI 10.1109/TC.2007.70725
   Zhuge H, 2011, ARTIF INTELL, V175, P988, DOI 10.1016/j.artint.2010.09.009
   Zhuge H, 2009, IEEE T KNOWL DATA EN, V21, P785, DOI 10.1109/TKDE.2008.141
NR 42
TC 70
Z9 72
U1 2
U2 47
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2015
VL 102
BP 217
EP 225
DI 10.1016/j.jss.2014.07.024
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD2RS
UT WOS:000350927300017
DA 2024-07-18
ER

PT J
AU Mubeen, S
   Mäki-Turja, J
   Sjödin, M
AF Mubeen, Saad
   Maki-Turja, Jukka
   Sjodin, Mikael
TI Integrating mixed transmission and practical limitations with the
   worst-case response-time analysis for Controller Area Network
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Controller Area Network; Real-time network; Response-time analysis
ID SCHEDULABILITY ANALYSIS; SCHEDULING THEORY
AB The existing worst-case response-time analysis for Controller Area Network (CAN) calculates upper bounds on the response times of messages that are queued for transmission either periodically or sporadically. However, it does not support the analysis of mixed messages. These messages do not exhibit a periodic activation pattern and can be queued for transmission both periodically and sporadically. They are implemented by several higher-level protocols based on CAN that are used in the automotive industry. We extend the existing analysis to support worst-case response-time calculations for periodic and sporadic as well as mixed messages. Moreover, we integrate the effect of hardware and software limitations in the CAN controllers and device drivers such as abortable and non-abortable transmit buffers with the extended analysis. The extended analysis is applicable to any higher-level protocol for CAN that uses periodic, sporadic and mixed transmission modes. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Mubeen, Saad; Maki-Turja, Jukka; Sjodin, Mikael] Malardalen Univ, Malardalen Real Time Res Ctr MRTC, Vasteras, Sweden.
   [Mubeen, Saad; Maki-Turja, Jukka] Arcticus Syst AB, Jarfalla, Sweden.
C3 Malardalen University
RP Mubeen, S (corresponding author), Malardalen Univ, Malardalen Real Time Res Ctr MRTC, Vasteras, Sweden.
EM saad.mubeen@mdh.se
RI Mubeen, Saad/HRB-4610-2023
OI Mubeen, Saad/0000-0003-3242-6113
FU Swedish Research Council (VR); Swedish Knowledge Foundation (KKS)
FX This work is supported by the Swedish Research Council (VR) within the
   project TiPCES and the Swedish Knowledge Foundation (KKS) within the
   projects FEMMVA and EEMDEF. The authors thank the industrial partners
   Arcticus Systems AB, BAE Systems Hagglunds and Volvo CE, Sweden.
CR [Anonymous], 1991, CAN SPEC VERS 2 0
   [Anonymous], 2014, TRANSMIT CANCELLATIO
   [Anonymous], 1993, 118981 ISO
   AUDSLEY N, 1993, SOFTWARE ENG J, V8, P284, DOI 10.1049/sej.1993.0034
   AUDSLEY NC, 1995, REAL-TIME SYST, V8, P173, DOI 10.1007/BF01094342
   Braun C., 2007, 7 IFAC INT C FIELDB
   Broster I., 2003, THESIS U YORK
   CANopen Application Layer and Communication Profile, 2002, 301 CIA
   Chen Y., 2011, P AS TEST S, P181, DOI DOI 10.1109/ATS.2011.40
   Davis R. I., 2012, Proceedings of the 2012 9th IEEE International Workshop on Factory Communication Systems (WFCS 2012), P33, DOI 10.1109/WFCS.2012.6242538
   Davis RI, 2007, REAL-TIME SYST, V35, P239, DOI 10.1007/s11241-007-9012-7
   Davis RI, 2013, REAL-TIME SYST, V49, P73, DOI 10.1007/s11241-012-9167-8
   Di Natale Marco, 2013, 18 IEEE C EM TECHN F
   DiNatale M, 2012, UNDERSTANDING AND USING THE CONTROLLER AREA NETWORK COMMUNICATION PROTOCOL: THEORY AND PRACTICE, P1, DOI 10.1007/978-1-4614-0314-2
   Hagglunds Controller Area Network (HCAN), 2009, NETW IMPL SPEC
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Khan D., 2011, 16 IEEE C EM TECHN F
   Khan D. A., 2010, 2010 8th IEEE International Workshop on Factory Communication Systems (WFCS 2010), P207, DOI 10.1109/WFCS.2010.5548604
   Mentor Graphics, 2014, VOLC NETW ARCH
   Meschi A., 1996, Proceedings of the Eighth Euromicro Workshop on Real-Time Systems, P243, DOI 10.1109/EMWRTS.1996.557931
   Mubeen S., 2013, COMPUT SCI INFORM SY, V10
   Mubeen S., 2012, 17 IEEE C EM TECHN F
   Mubeen S., 2012, 9 IEEE INT WORKSH FA
   Mubeen S., 2012, 7 IEEE INT S IND EMB
   Mubeen S., 2013, 18 IEEE C EM TECHN F
   Mubeen S., 2011, 16 IEEE C EM TECHN F
   Natale M. D., 2006, P BRAZ WORKSH REAL T, P1
   Nolin Mikael, 2008, Proceedings of the 2008 International Conference on Embedded Systems & Applications (ESA 2008), P173
   Rubus-ICE, 2014, INT COMP DEV ENV
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   Szakaly A., 2003, THESIS CHALMERS U TE
   TINDELL KW, 1994, REAL TIM SYST SYMP P, P259
   Yomsi P., 2012, 9 IEEE INT WORKSH FA
NR 33
TC 14
Z9 16
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2015
VL 99
BP 66
EP 84
DI 10.1016/j.jss.2014.09.005
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX8AB
UT WOS:000347131600005
DA 2024-07-18
ER

PT J
AU Zhang, ZQ
   Yan, J
   Zhao, Y
   Zhang, J
AF Zhang, Zhiqiang
   Yan, Jun
   Zhao, Yong
   Zhang, Jian
TI Generating combinatorial test suite using combinatorial optimization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Combinatorial testing; Test generation; Combinatorial optimization
ID SEARCH; ALGORITHM; COVERAGE
AB Combinatorial testing (CT) is an effective technique to test software with multiple configurable parameters. It is used to detect interaction faults caused by the combination effect of parameters. CT test generation aims at generating covering arrays that cover all t-way parameter combinations, where t is a given covering strength. In practical CT usage scenarios, there are usually constraints between parameters, and the performance of existing constraint-handling methods degrades fast when the number of constraints increases.
   The contributions of this paper are (1) we propose a new one-test-at-a-time algorithm for CT test generation, which uses pseudo-Boolean optimization to generate each new test case; (2) we have found that pursuing the maximum coverage for each test case is uneconomic, and a possible balance point is to keep the approximation ratio in [0.8,0.9]; (3) we propose a new self-adaptive mechanism to stop the optimization process at a proper time when generating each test case; (4) extensive experimental results show that our algorithm works fine on existing benchmarks, and the constraint-handling ability is better than existing approaches when the number of constraints is large; and (5) we propose a method to translate shielding parameters (a common type of constraints) into normal constraints. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Zhang, Zhiqiang; Zhang, Jian] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100864, Peoples R China.
   [Zhang, Zhiqiang] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Yan, Jun] Chinese Acad Sci, Inst Software, Technol Ctr Software Engn, Beijing 100864, Peoples R China.
   [Zhang, Zhiqiang; Yan, Jun] Beijing Jiaotong Univ, State Key Lab Rail Traff Control & Safety, Beijing, Peoples R China.
   [Zhao, Yong] Univ Colorado Colorado Springs, Coll Engn & Appl Sci, Dept Comp Sci, Colorado Springs, CO USA.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Chinese
   Academy of Sciences; Institute of Software, CAS; Beijing Jiaotong
   University; University of Colorado System; University of Colorado at
   Colorado Springs
RP Zhang, ZQ (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100864, Peoples R China.
EM zhangzq@ios.ac.cn; yanjun@otcaix.iscas.ac.cn; yzhao@uccs.edu;
   zj@ios.ac.cn
RI Zhang, Zhiqiang/W-2318-2019
OI Zhang, Zhiqiang/0000-0003-3947-5225
FU 973 Program of China [2014CB340701]; National Science Foundation of
   China [61100064]
FX This work is partially supported by the 973 Program of China (grant No.
   2014CB340701) and the National Science Foundation of China (grant No.
   61100064).
CR [Anonymous], P 3 INT C SOFTW TEST
   Avila-George H, 2013, IET SOFTW, V7, P104, DOI 10.1049/iet-sen.2012.0074
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Calvagna A, 2008, LECT NOTES COMPUT SC, V4966, P66
   Chen BQ, 2010, ASIA PAC SOFWR ENG, P280, DOI 10.1109/APSEC.2010.40
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   COHEN DM, 1996, Patent No. 5542043
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn CJ, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P345
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Ghandehari LSG, 2013, IEEE ICST WORKSHOP, P362, DOI 10.1109/ICSTW.2013.47
   Ghazi SA, 2003, IEEE C EVOL COMPUTAT, P1420
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hnich B, 2005, LECT NOTES COMPUT SC, V3419, P172
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Kuhn D. R., 2002, P 27 ANN NASA GODD I
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lopez-Escogido D, 2008, LECT NOTES ARTIF INT, V5317, P44, DOI 10.1007/978-3-540-88636-5_4
   Nie CH, 2012, ASIA PAC SOFWR ENG, P778, DOI 10.1109/APSEC.2012.16
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Richard Kuhn D., 2013, Introduction to combinatorial testing
   Segall I., 2011, P 2011 INT S SOFTWAR, P254
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Stardom J., 2001, THESIS S FRASER U
   Tatsumi K., 1987, P 11 ANN INT COMP SO
   Torres-Jimenez J, 2012, INFORM SCIENCES, V185, P137, DOI 10.1016/j.ins.2011.09.020
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Williams A. W., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P283
   Yan J, 2008, J SYST SOFTWARE, V81, P1681, DOI 10.1016/j.jss.2008.02.034
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P242, DOI 10.1109/ICST.2013.35
   ZHAO Y, 2013, IEEE ICST WORKSHOP, P267
NR 41
TC 33
Z9 37
U1 0
U2 18
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2014
VL 98
BP 191
EP 207
DI 10.1016/j.jss.2014.09.001
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AS7FF
UT WOS:000344421900012
DA 2024-07-18
ER

PT J
AU Ebert, C
   Brinkkemper, S
AF Ebert, Christof
   Brinkkemper, Sjaak
TI Software product management - An industry evaluation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Product management; Software business; Industry survey
AB Product management is a key success factor for software products as it spans the entire life-cycle and thus ensures both a technical and business perspective. With its many interfaces to various business processes and stakeholders across the life-cycle, it is a primary driver for requirements engineering in its focus on value-orientation and consistency across releases. This article provides an overview on product management in software and IT. It summarizes experiences with introducing, improving and deploying the role of a product manager. In order to get a profound industry overview we performed a field study with interviews and concrete insight across fifteen different organizations world-wide on the role of the product manager and its success factors. As a technical solution we present four success factors identified from the research and show how they address the challenges we identified in practice. The novel part of this research and technical study is the industry survey and evaluation of resulting solution proposals. We found that with increasing institutionalization of a consistent and empowered product management role, the success rate of projects in terms of schedule predictability, quality and project duration improves. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Ebert, Christof] Vector Consulting Serv, D-70499 Stuttgart, Germany.
   [Brinkkemper, Sjaak] Univ Utrecht, Dept Informat & Comp Sci, NL-3584 CC Utrecht, Netherlands.
C3 Utrecht University
RP Ebert, C (corresponding author), Vector Consulting Serv, Ingersheimer Str 24, D-70499 Stuttgart, Germany.
EM Christof.Ebert@vector.com; S.Brinkkemper@cs.uu.nl
RI Ebert, Christof/JXM-5500-2024
CR [Anonymous], P 8 INT WORKSH REQ E
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   Cooper RG, 2004, RES TECHNOL MANAGE, V47, P31
   Cusumano M.A., 1998, COMPETING INTERNET T
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   Ebert C., 2012, GLOBAL SOFTWARE IT
   Ebert C., 2009, CROSSTALK, V22, P15
   Ebert C, 2007, J SYST SOFTWARE, V80, P850, DOI 10.1016/j.jss.2006.09.017
   Gorschek T, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2009.164
   Heikkinen M.P., 2010, KNOCK KNOCK NOKIAS H
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   van de Weerd I, 2010, J INFORM SOFTWARE TE, V52, P720
   Vlaanderen K, 2011, INFORM SOFTWARE TECH, V53, P58, DOI 10.1016/j.infsof.2010.08.004
   Wohlin C, 2006, VALUE-BASED SOFTWARE ENGINEERING, P179, DOI 10.1007/3-540-29263-2_9
NR 14
TC 24
Z9 27
U1 2
U2 35
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2014
VL 95
BP 10
EP 18
DI 10.1016/j.jss.2013.12.042
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4VC
UT WOS:000341338500002
DA 2024-07-18
ER

PT J
AU Wang, CC
   Chang, YF
   Chang, CC
   Jan, JK
   Lin, CC
AF Wang, Chung-Chuan
   Chang, Ya-Fen
   Chang, Chin-Chen
   Jan, Jinn-Ke
   Lin, Chia-Chen
TI A high capacity data hiding scheme for binary images based on block
   patterns
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data hiding; Binary image; Watermarking; Authentication
ID AUTHENTICATION; DISTORTION; TRANSFORM; WATERMARKING; ALGORITHM
AB This paper proposes a high capacity data hiding scheme for binary images based on block patterns, which can facilitate the authentication and annotation of scanned images. The scheme proposes block patterns for a 2 x 2 block to enforce specific block-based relationship in order to embed a significant amount of data without causing noticeable artifacts. In addition, two kinds of matching pair (MP) methods, internal adjustment MP and external adjustment MP, are designed to decrease the embedding changes. Shuffling is applied before embedding to reduce the distortion and improve the security. Experimental results show that the proposed scheme gives a significantly improved embedding capacity than previous approaches in the same level of embedding distortion. We also analyze the perceptual impact and discuss the robustness and security issues. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Jan, Jinn-Ke] Natl Chung Hsing Univ, Dept Comp Sci, Taichung 402, Taiwan.
   [Lin, Chia-Chen] Providence Univ, Dept Comp Sci & Informat Management, Taichung 43301, Taiwan.
   [Chang, Chin-Chen] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
   [Chang, Ya-Fen] Natl Taichung Univ Sci & Technol, Dept Comp Sci & Informat Engn, Taichung, Taiwan.
   [Wang, Chung-Chuan] Chung Chou Univ Sci & Technol, Dept Multimedia & Game Sci, Changhua, Taiwan.
C3 National Chung Hsing University; Providence University - Taiwan; Feng
   Chia University; National Taichung University of Science & Technology
RP Lin, CC (corresponding author), Providence Univ, Dept Comp Sci & Informat Management, Taichung 43301, Taiwan.
EM ccwang@dragon.ccut.edu.tw; cyf@nutc.erdu.tw; ccc@cs.ccu.edu.tw;
   jkjan@cs.nchu.edu.tw; mhlin3@pu.edu.tw
RI Chang, Ching-Chun/JAN-6210-2023
CR Chang CC, 2013, J SYST SOFTWARE, V86, P389, DOI 10.1016/j.jss.2012.09.001
   Chen J, 2003, IEEE FIFTH INTERNATIOANL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P88
   Cheng J, 2005, IEEE INT SYMP CIRC S, P4405
   Cheng J, 2007, IEEE T IMAGE PROCESS, V16, P1691, DOI 10.1109/TIP.2007.896619
   Guo Q, 2011, OPT COMMUN, V284, P3918, DOI 10.1016/j.optcom.2011.04.006
   Huang LC, 2013, J SYST SOFTWARE, V86, P716, DOI 10.1016/j.jss.2012.11.024
   Lee Y, 2007, IEICE T COMMUN, VE90B, P3259, DOI 10.1093/ietcom/e90-b.11.3259
   Lee Y, 2009, INFORM SCIENCES, V179, P3866, DOI 10.1016/j.ins.2009.07.014
   Liu ZJ, 2010, OPT COMMUN, V283, P4923, DOI 10.1016/j.optcom.2010.07.034
   Liu ZJ, 2010, OPT EXPRESS, V18, P12033, DOI 10.1364/OE.18.012033
   Ou B, 2013, J SYST SOFTWARE, V86, P2700, DOI 10.1016/j.jss.2013.05.077
   Pan G, 2002, INT CONF ACOUST SPEE, P3469
   Pan G, 2001, LECT NOTES COMPUT SC, P261, DOI 10.1007/3-540-45600-7_30
   Tseng YC, 2002, IEEE T COMPUT, V51, P873, DOI 10.1109/TC.2002.1017706
   Tseng YC, 2001, IEEE INFOCOM SER, P887, DOI 10.1109/INFCOM.2001.916280
   Tzeng CH, 2003, IEEE COMMUN LETT, V7, P443, DOI 10.1109/LCOMM.2003.815656
   Venkatesan Manikanadan, 2007, INFORM ASSURANCE SEC, P468
   Willems FMJ, 2005, IEEE T INFORM THEORY, V51, P1209, DOI 10.1109/TIT.2004.842707
   Wu M, 2005, PROC SPIE, V5681, P194, DOI 10.1117/12.587379
   Wu M, 2004, IEEE T MULTIMEDIA, V6, P528, DOI 10.1109/tmm.2004.830814
   Wu M. Y., 1998, P INT S MULT INF PRO
   Yang HJ, 2008, IEEE T MULTIMEDIA, V10, P339, DOI 10.1109/TMM.2008.917404
   Yang HJ, 2007, IEEE T MULTIMEDIA, V9, P475, DOI 10.1109/TMM.2006.887990
NR 23
TC 22
Z9 22
U1 1
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2014
VL 93
BP 152
EP 162
DI 10.1016/j.jss.2014.02.023
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI5AJ
UT WOS:000336877500009
DA 2024-07-18
ER

PT J
AU Verner, JM
   Babar, MA
   Cerpa, N
   Hall, T
   Beecham, S
AF Verner, J. M.
   Babar, M. A.
   Cerpa, N.
   Hall, T.
   Beecham, S.
TI Factors that motivate software engineering teams: A four country
   empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software development team motivation; Project success; Motivational
   factors
ID SYSTEMS PEOPLE DIFFERENT; PROJECT SUCCESS; PRACTITIONERS; THINK
AB Motivation, although difficult to quantify, is considered to be the single largest factor in developer productivity; there are also suggestions that low motivation is an important factor in software development project failure. We investigate factors that motivate software engineering teams using survey data collected from software engineering practitioners based in Australia, Chile, USA and Vietnam. We also investigate the relationship between team motivation and project outcome, identifying whether the country in which software engineering practitioners are based affects this relationship. Analysis of 333 questionnaires indicates that failed projects are associated with low team motivation. We found a set of six common team motivational factors that appear to be culturally independent (project manager has good communication with project staff, project risks reassessed, controlled and managed during the project, customer has confidence in the project manager and the development team, the working environment is good, the team works well together, and the software engineer had a pleasant experience). We also found unique groupings of team motivational factors for each of the countries investigated. This indicates that there are cultural differences that project managers need to consider when working in a global environment. (C) 2014 Elsevier Inc. All rights reserved,
C1 [Verner, J. M.] Univ Oulu, SF-90100 Oulu, Finland.
   [Verner, J. M.] Keele Univ, Keele, Staffs, England.
   [Babar, M. A.] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
   [Cerpa, N.] Univ Talca, Talca, Chile.
   [Hall, T.] Brunel Univ, Uxbridge UB8 3PH, Middx, England.
   [Beecham, S.] Univ Limerick, Irish Software Engn Res Ctr, LERO, Limerick, Ireland.
C3 University of Oulu; Keele University; University of Adelaide;
   Universidad de Talca; Brunel University; University of Limerick
RP Cerpa, N (corresponding author), Univ Talca, Talca, Chile.
EM ncerpa@utalca.cl
RI Cerpa, Narciso/A-7823-2010; Beecham, Simon C/M-1544-2016
OI Hall, Tracy/0000-0002-2728-9014
FU Science Foundation Ireland - Irish Software Engineering Research Centre
   [10/CE/I1855]; project FONDECYT, of the Chilean Government [1030785]
FX This work was supported, in part, by Science Foundation Ireland grant
   10/CE/I1855 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie), and by the project FONDECYT 1030785, of the Chilean
   Government.
CR Agarwal R, 2002, COMMUN ACM, V45, P73, DOI 10.1145/567498.567502
   ANDERSEN ES, 2002, P 2002 ACM SIGCPR C, P65, DOI DOI 10.1145/512374.512375
   [Anonymous], GUARDIAN
   [Anonymous], SIGCPR COMPUT PERS
   [Anonymous], P 11 INT C SOFTW QUA
   [Anonymous], 464 U HERTF SCH COMP
   [Anonymous], 2005, P 38 ANN HAW INT C S
   [Anonymous], COMMUNICATIONS ACM
   Baccarini David., 1999, Project Management Journal, V30, P25, DOI DOI 10.1177/875697289903000405
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bennatan E., 2000, TIME BUDGET
   Boehm BW., 1981, Software Engineering Economics
   Brooks Frederick P., 1995, The mythical man-month
   Burn J. M., 1995, Computer Personnel, V16, P11, DOI 10.1145/224475.224480
   BURN JM, 1992, INFORM MANAGE, V22, P269, DOI 10.1016/0378-7206(92)90074-P
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cater-Steel Aileen, 2008, International Journal of Technology, Policy and Management, V8, P76, DOI 10.1504/IJTPM.2008.016182
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Collins A., 2004, J CONSTRUCTION RES, V5, P211, DOI DOI 10.1142/S1609945104000152
   COLLINS WR, 1994, COMMUN ACM, V37, P81, DOI 10.1145/175222.175229
   COUGER D, 1980, MOTIVATING MANAGING
   Couger J. D., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P1012, DOI 10.1109/HICSS.1995.375646
   DAFOULAS G, 2002, ELECTR J INF SYS DEV, V7, P1, DOI DOI 10.1002/J.1681-4835.2002.TB00040.X
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Ferratt T. W., 1986, Management Information Systems Quarterly, V10, P377, DOI 10.2307/249193
   FERRATT TW, 1988, MIS QUART, V12, P427, DOI 10.2307/249210
   Franca A. C. C., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P61, DOI 10.1109/SBES.2012.28
   GARZA AI, 2003, P ANN M DEC SCI I, P1067
   Geethalakshmi S.N., 2007, INT J TECHNOLOGY KNO, V3, P103
   Geethalakshmi S.N., 2007, 1 INT C KNOWL MAN PR
   Glass RL, 1999, COMMUN ACM, V42, P17, DOI 10.1145/299157.299161
   Hall T., 2008, P ACM SIGMIS CPR C C
   Hofstede G., 2013, Cultures and Organisations: Software of the Mind, V3rd
   Hoyle David., 2001, ISO 9000 quality systems handbook, V4th
   Ituma A., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P205, DOI 10.1145/1125170.1125222
   Jordan E., 1994, Proceedings of the 1994 ACM SIGCPR Conference, P57, DOI 10.1145/186281.186295
   Jorek Norbert, 2009, SHIFTING GEOGRAPHY O
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kandeel H., 2001, INF RES MAN ASS INT, P187
   Khalil O. E. M., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P187, DOI 10.1145/268820.268884
   Kirk R.E., 2006, STATISTICS
   Langley N., 2005, COMPUTER WEEKLY
   Lee P. C. B., 2002, P 2002 ACM SIGCPR C, P145, DOI DOI 10.1145/512360.512393
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Mak BL, 2001, INFORM MANAGE-AMSTER, V38, P265, DOI 10.1016/S0378-7206(00)00055-0
   McConnell S, 1996, IEEE SOFTWARE, V13, P111, DOI 10.1109/52.536469
   Mehta C.R., 1995, SPSS 6 1 EXACT TEST
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Myers M. E., 1992, Proceedings of the 1992 ACM SIGCPR Conference, P350, DOI 10.1145/144001.144103
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   PINTO JK, 1990, IEEE T ENG MANAGE, V37, P269, DOI 10.1109/17.62322
   Poulsen K., 2004, SECURITY FOCUS  0211
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Procaccino JD, 2006, J SYST SOFTWARE, V79, P1541, DOI 10.1016/j.jss.2006.01.010
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   PROCACCINO JD, 2002, INT J COMPUTERS INTE, V10, P20
   Ramachandran S., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P198, DOI 10.1145/1125170.1125221
   Reyes F, 2011, J SYST SOFTWARE, V84, P775, DOI 10.1016/j.jss.2010.12.036
   Saunders M., 2009, RES METHODS BUSINESS, DOI DOI 10.1007/S13398-014-0173-7.2
   Shokri-Ghasabeh Morteza, 2009, WSEAS Transactions on Business and Economics, V6, P456
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Smith D. C., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P123, DOI 10.1145/1125170.1125205
   *STAND GROUP INT, 1994, CHAOS PROJ FAIL SUCC
   Stebbins R.A., 2001, SAGE U PAPERS SERI M, V48m
   Tanner FR, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P214, DOI 10.1109/IEMC.2003.1252263
   Team C.P., 2006, CMMI DEV VERS 1 2
   Thomas Graeme, 2008, International Journal of Project Management, V26, P733, DOI 10.1016/j.ijproman.2008.06.003
   UK National Audit office, 2011, NAT PROGR IT NHS UPD
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Verner JM, 2012, INFORM SOFTWARE TECH, V54, P866, DOI 10.1016/j.infsof.2011.11.001
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Verner J, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P25
   Wateridge J., 1995, International Journal of Project Management, V13, P169, DOI 10.1016/0263-7863(95)00020-Q
   Wateridge J., 1998, International Journal of Project Management, V16, P59, DOI 10.1016/S0263-7863(97)00022-7
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 79
TC 36
Z9 44
U1 2
U2 46
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2014
VL 92
SI SI
BP 115
EP 127
DI 10.1016/j.jss.2014.01.008
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AG7XK
UT WOS:000335631900011
DA 2024-07-18
ER

PT J
AU Sagar, VBRV
   Abirami, S
AF Sagar, Vidhu Bhala R. Vidya
   Abirami, S.
TI Conceptual modeling of natural language functional requirements
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automated requirements analysis; Conceptual modeling; Natural language
   processing; Syntactic analysis
AB Requirements analysts consider a conceptual model to be an important artifact created during the requirements analysis phase of a software development life cycle (SDLC). A conceptual, or domain model is a visual model of the requirements domain in focus. Owing to its visual nature, the model serves as a platform for the deliberation of requirements by stakeholders and enables requirements analysts to further refine the functional requirements. Conceptual models may evolve into class diagrams during the design and execution phases of the software project. Even a partially automated conceptual model can save significant time during the requirements phase, by quickening the process of graphical communication and visualization.
   This paper presents a system to create a conceptual model from functional specifications, written in natural language in an automated manner. Classes and relationships are automatically identified from the functional specifications. This identification is based on the analysis of the grammatical constructs of sentences, and on Object Oriented principles of design. Extended entity-relationship (EER) notations are incorporated into the class relationships. Optimizations are applied to the identified entities during a post-processing stage, and the final conceptual model is rendered.
   The use of typed dependencies, combined with rules to derive class relationships offers a granular approach to the extraction of the design elements in the model. The paper illustrates the model creation process using a standard case study, and concludes with an evaluation of the usefulness of this approach for the requirements analysis. The analysis is conducted against both standard published models and conceptual models created by humans, for various evaluation parameters. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Sagar, Vidhu Bhala R. Vidya] Mindtree Ltd, Madras, Tamil Nadu, India.
   [Abirami, S.] Anna Univ, Coll Engn, Dept Informat Sci & Technol, Madras 600025, Tamil Nadu, India.
C3 Anna University; Anna University Chennai
RP Sagar, VBRV (corresponding author), Mindtree Ltd, Madras, Tamil Nadu, India.
EM vidhubhala.r.vidyasagar@gmail.com; abirami_mr@yahoo.com
RI Alsaif, Amal/IUO-9428-2023; S, Abirami/AHH-8969-2022
OI Alsaif, Amal/0000-0002-8204-0326; S, Abirami/0000-0002-2028-5344
FU UGC, New Delhi, India [42-129/2013(SR)]
FX Further work on this research is getting supported by UGC, New Delhi,
   India under Major Research project scheme of Engineering Sciences- F.no.
   42-129/2013(SR).
CR Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   [Anonymous], J AUTOMATED SOFTWARE
   [Anonymous], INT C INF MULT TECHN
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], IBM RAT SOFTW
   [Anonymous], WEBSTERS NEW WORLD E
   [Anonymous], NEWS AND EVENTS
   [Anonymous], STANFORD PARSER SPAT
   [Anonymous], APPL OMT PRACTICAL S
   [Anonymous], ENCHANTED LEARNING
   [Anonymous], WORDNET LEXICAL DATB
   [Anonymous], 2012 INT C REC ADV C
   [Anonymous], COMP INF SYST IND MA
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Booch G, 2010, OBJECT ORIENTED ANAL, V3rd
   Burg J.F.M., 1997, LINGUISTIC INSTRUMEN
   Elbendak M, 2011, J SYST SOFTWARE, V84, P1209, DOI 10.1016/j.jss.2011.02.025
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 23
TC 52
Z9 59
U1 0
U2 21
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2014
VL 88
BP 25
EP 41
DI 10.1016/j.jss.2013.08.036
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 297LV
UT WOS:000330257800002
DA 2024-07-18
ER

PT J
AU Sudevalayam, S
   Kulkarni, P
AF Sudevalayam, Sujesha
   Kulkarni, Purushottam
TI Affinity-aware modeling of CPU usage with communicating virtual machines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Platform virtualization; Network-affinity; Resource provisioning
AB Use of virtualization in Infrastructure as a Service (IaaS) environments provides benefits to both users and providers: users can make use of resources following a pay-per-use model and negotiate performance guarantees, whereas providers can provide quick, scalable and hardware-fault tolerant service and also utilize resources efficiently and economically. With increased acceptance of virtualization-based systems, an important issue is that of virtual machine migration-enabled consolidation and dynamic resource provisioning. Effective resource provisioning can result in higher gains for users and providers alike. Most hosted applications (for example, web services) are multi-tiered and can benefit from their various tiers being hosted on different virtual machines. These mutually communicating virtual machines may get colocated on the same physical machine or placed on different machines, as part of consolidation and flexible provisioning strategies. In this work, we argue the need for network affinity-awareness in resource provisioning for virtual machines. First, we empirically quantify the change in CPU resource usage due to colocation or dispersion of communicating virtual machines for both Xen and KVM virtualization technologies. Next, we build models based on these empirical measurement to predict the change in CPU utilization when transitioning between colocated and dispersed placements. Due to the modeling process being independent of virtualization technology and specific applications, the resultant model is generic and application-agnostic. Via extensive experimentation, we evaluate the applicability of our models for synthetic and benchmark application workloads. We find that the models have high prediction accuracy maximum prediction error within 2% absolute CPU usage. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Sudevalayam, Sujesha; Kulkarni, Purushottam] Indian Inst Technol, Dept Comp Sci & Engn, Bombay, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Sudevalayam, S (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Bombay, Maharashtra, India.
EM sujesha@cse.iitb.ac.in; puru@cse.iitb.ac.in
CR Amza C, 2001, 5 WORKSH WORKL CHAR
   [Anonymous], 2010, P 2 ACM SIGCOMM WORK
   [Anonymous], MUFF WORLD WID WE FI
   Aufeef M, 2011, 4 IEEE INT C CLOUD C
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Benvenuti C., 2005, UNDERSTANDING LINUX
   Bobroff N, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P119, DOI 10.1109/INM.2007.374776
   Chisnall David., 2008, DEFINITIVE GUIDE XEN
   Gmach D, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P43
   Hu L., 2012, Proceedings of the 9th international conference on Autonomic computing, P3
   Hyser C., 2007, AUTONOMIC VIRTUAL MA
   Jayasinghe D., 2011, 4 INT C CLOUD COMP
   Maechler M., robustbase: Basic robust statistics, 2022
   Meng x., 2011, 4 INT C CLOUD COMP
   Menon Aravind., 2005, Proceedings of the 1st ACM/USENIX international conference on Virtual execution environments, VEE '05, P13
   Sonnek Jason, 2010, Proceedings 39th International Conference on Parallel Processing (ICPP 2010), P228, DOI 10.1109/ICPP.2010.30
   Sonnek J., 2009, WORKSH HOT TOP CLOUD
   Sudevalayam S., 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P139, DOI 10.1109/CLOUD.2011.39
   T.A. Community, AM EL COMP CLOUD AM
   Van HN, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P1, DOI 10.1109/CLOUD.2009.5071526
   Withoff O, 2008, UNDERSTANDING XENSER
   Wood T., 2007, P 4 USENIX S NETW SY, P229, DOI DOI 10.1109/ICAC.2006.1662416
   Wood T, 2008, LECT NOTES COMPUT SC, V5346, P366, DOI 10.1007/978-3-540-89856-6_19
NR 23
TC 5
Z9 6
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2013
VL 86
IS 10
BP 2627
EP 2638
DI 10.1016/j.jss.2013.04.085
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 220EF
UT WOS:000324564100012
DA 2024-07-18
ER

PT J
AU Gómez, M
   Cervantes, J
AF Gomez, M.
   Cervantes, J.
TI User Interface Transition Diagrams for customer-developer communication
   improvement in software development projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE User Interface Flow; Functional requirements specification; Modelling
   notation
ID MODELS
AB We formalize the definition and construction of the User Interface Transition Diagram (UITD) which is a modelling notation for the transitions between UI presentations and the necessary conditions to trigger these transitions. We show how the UITD is able to improve the communication between stakeholders in a software development project: Human-Computer Interaction specialists, Software Engineers and customers who have little or no training in specialized modelling notations. We compare the UITD with other existing similar modelling notations highlighting the features that are better expressed in the UITD. We also include a case study in order to show how the UITD can be helpful in different phases of a software development project. The understandability of the UITD was confirmed by means of a test where different types of potential users were involved. (C) 2013 Elsevier Inc. All rights reserved.
C1 [Gomez, M.; Cervantes, J.] Univ Autonoma Metropolitana, Dept Matemat Aplicadas & Sistemas, Alvaro Obregon 01120, DF, Mexico.
C3 Universidad Autonoma Metropolitana - Mexico
RP Gómez, M (corresponding author), Univ Autonoma Metropolitana, Dept Matemat Aplicadas & Sistemas, Artificios 40 Col Hidalgo, Alvaro Obregon 01120, DF, Mexico.
EM mcgomezfuentes@aim.com
RI Gomez-Fuentes, Maria/Q-8500-2019; Gomez, Maria/C-5542-2014
OI Gomez, Maria/0000-0003-0033-4476
CR Ahmed S, 2007, J SYST SOFTWARE, V80, P1408, DOI 10.1016/j.jss.2006.10.037
   Ambler S., 2008, OBJECT PRIMER
   Blankenhorn K., 2004, THESIS U APPL SCI
   BOOCH G, 1999, UNIFIED MODELLING LA
   Book M., 2003, Proceedings of the Seventh IASTED International Conference on Software Engineering and Applications, P100
   Buie EA, 1997, ADV HUM FACT ERGON, V21, P525
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   da Silva PP, 2003, IEEE SOFTWARE, V20, P62, DOI 10.1109/MS.2003.1207457
   da Silva PP, 2001, LECT NOTES COMPUT SC, V1946, P207
   DASILVA PP, 2002, THESIS U MANCHESTER
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Dromey RG., 2006, SERIES COMPONENT BAS, P156, DOI [10.1142/9789812772831_0006, DOI 10.1142/9789812772831_0006]
   García F, 2008, INT J ENG EDUC, V24, P761
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Jensen K., 1991, High-Level Petri Nets, P44
   Lieberman B., 2004, UML ACTIVITY DIAGRAM
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   Lozano M.D., 2001, C REV SYST DEV US ID
   LOZANO MD, 2001, THESIS U POLITECNICA
   Luyten K, 2003, LECT NOTES COMPUT SC, V2844, P203
   Markopoulos P, 2000, P OZCHI 2000, P240
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mori G, 2002, IEEE T SOFTWARE ENG, V28, P797, DOI 10.1109/TSE.2002.1027801
   OMG UML, 2007, SUP V2 1 2 FORM 2007
   Paterno F., 1997, INTERACT 97 P IFIP T
   Paterno F., 2012, MBUI TASK M IN PRESS
   Perez-Medina JL, 2007, LNCS, V4849
   Phillips C., 2002, Australian Computer Science Communications, V24, P21, DOI DOI 10.1145/563997.563989
   Pinheiro Da Silva P., 2001, LECT NOTES COMPUTER, V1946
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Schlungbaum E., 1996, BCS FACS WORKSH FORM
   SCHWABE D, 2001, C REV SYST CAS STUD
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   TRAETTEBERG H, 2002, THESIS NORWEGIAN U S
   Vanderdonckt J, 2008, J MULTIMODAL USER IN, V2, P1, DOI 10.1007/s12193-008-0011-3
   WASSERMAN AI, 1985, IEEE T SOFTWARE ENG, V11, P699, DOI 10.1109/TSE.1985.232519
   Wiegers K.E., 2006, MORE SOFTWARE REQUIR
NR 37
TC 7
Z9 7
U1 0
U2 11
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2013
VL 86
IS 9
BP 2394
EP 2410
DI 10.1016/j.jss.2013.04.022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 210YC
UT WOS:000323870300016
DA 2024-07-18
ER

PT J
AU Fan, GS
   Yu, HQ
   Chen, LQ
   Liu, DM
AF Fan, Guisheng
   Yu, Huiqun
   Chen, Liqiong
   Liu, Dongmei
TI Petri net based techniques for constructing reliable service composition
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Service composition; Petri net; Exception; Transaction attributes;
   Reliability
ID WEB SERVICES; FRAMEWORK
AB Service composition is an important mean for integrating the individual Web services to create new value added systems that satisfy complex requirements. However, it is challenging to guarantee the reliability of service composition in a distributed, dynamic and complex environment. This paper proposes an approach to constructing the reliable service composition. The underlying formalism is Petri net, which provides means to observe behaviors of basic component, and to describe their interrelationship. The transaction attributes, reliability and failure processing mechanisms are articulated. The composition mechanism systematically integrates these schemas into a transaction mapping model. Based on this, a reliable composition strategy and its enforcement algorithm are proposed, which can verify the behaviors of service composition at design time or after runtime to repair design errors. The operational semantics and related theories of Petri nets help prove the effectiveness of the proposed method. Finally, we use a simplified Export Service system to demonstrate the feasiability of the method. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Fan, Guisheng; Yu, Huiqun; Liu, Dongmei] E China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
   [Fan, Guisheng; Yu, Huiqun] Shanghai Key Lab Comp Software Evaluating & Testi, Shanghai, Peoples R China.
   [Chen, Liqiong] Shanghai Inst Technol, Dept Comp Sci & Informat Engn, Shanghai, Peoples R China.
C3 East China University of Science & Technology; Shanghai Institute of
   Technology
RP Fan, GS (corresponding author), E China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
EM gsfan@ecust.edu.cn; yhq@ecust.edu.cn; lqchen@sit.edu.cn;
   dmliu@ecust.edu.cn
FU NSF of China [61173048, 60903020]; Fundamental Research Funds for the
   Central Universities; State Key Laboratory for Novel Software
   Technology, Innovation Program of Shanghai Municipal Education
   Commission [12YZ166]
FX The work is partially supported by the NSF of China under Grants Nos.
   61173048 and 60903020, the Fundamental Research Funds for the Central
   Universities, Fund of State Key Laboratory for Novel Software
   Technology, Innovation Program of Shanghai Municipal Education
   Commission under Grant No. 12YZ166. We would like to express our sincere
   appreciation to the anonymous reviewers for their insightful comments,
   which have greatly aided us in improving the quality of the paper.
CR Al-Masri E., 2008, THE QWS DATASET
   ANATOLIY G, 2008, P WORKSH EXC HANDL, P1
   [Anonymous], 2007, Web services business process execution language version 2.0
   Berardi D, 2005, INT J COOP INF SYST, V14, P333, DOI 10.1142/S0218843005001201
   Bessayah F, 2010, LECT NOTES COMPUT SC, V6303, P137, DOI 10.1007/978-3-642-15585-7_13
   Bhiri S, 2005, P 14 INT C WORLD WID, P138
   Bhiri S, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P99
   Bhiri S, 2011, J DATABASE MANAGE, V22, P64, DOI 10.4018/jdm.2011040103
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Fan GS, 2010, ASIA PAC SOFWR ENG, P176, DOI 10.1109/APSEC.2010.29
   Fan GS, 2009, ASIA PAC SOFWR ENG, P507, DOI 10.1109/APSEC.2009.25
   Farahbod R., 2006, International Journal of Business Process Integration and Management, V1, P279, DOI 10.1504/IJBPIM.2006.012626
   Fauvet MC, 2005, LECT NOTES COMPUT SC, V3806, P273
   Feingold M., 2007, WEB SERVICES COORDIN
   Freund T., 2007, WEB SERVICES BUSINES
   Fugini MG, 2008, LECT NOTES COMPUT SC, V4928, P245
   Gaaloul W., 2004, IEEE T SERV COMPUT, V3, P32
   García-Sánchez F, 2009, EXPERT SYST APPL, V36, P3167, DOI 10.1016/j.eswa.2008.01.037
   Girault C., 2003, Petri nets for system engineering: A guide to modeling, verification, and applications
   Hamadi R., 2003, Proceedings of the 14th Australasian database conference, V17, P191
   Huiqun Yu, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P312, DOI 10.1109/QSIC.2010.18
   Khaxar M, 2013, SERV ORIENTED COMPUT, V6, P33, DOI 10.1007/s11761-011-0098-3
   Krysander M, 2008, IEEE T SYST MAN CY A, V38, P197, DOI 10.1109/TSMCA.2007.909555
   Lee HJ, 2009, ADV ENG SOFTW, V40, P176, DOI 10.1016/j.advengsoft.2008.03.015
   LITTLE M, 2003, WEB SERVICES J, V3, P52
   Little M., 2007, WEB SERVICES ATOMIC
   Mikalsen T., 2002, P 2002 INT C DEP SYS, P792
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Roberts J., 2008, TENTATIVE HOLD PROTO
   Rusinkiewicz M., 1995, MODERN DATABASE SYST
   Schuldt H., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P316, DOI 10.1145/303976.304007
   Shin DH, 2009, J WEB SEMANT, V7, P332, DOI 10.1016/j.websem.2009.05.001
   Song XD, 2011, FUTURE GENER COMP SY, V27, P627, DOI 10.1016/j.future.2010.06.008
   Tan W, 2009, IEEE T AUTOM SCI ENG, V6, P94, DOI 10.1109/TASE.2008.916747
   Tang XF, 2011, EXPERT SYST APPL, V38, P13024, DOI 10.1016/j.eswa.2011.04.102
   Vieira M, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P623
   Xiao Y, 2012, IEEE T SERV COMPUT, V5, P59, DOI 10.1109/TSC.2011.25
   Xiao Y, 2008, LECT NOTES COMPUT SC, V5331, P139
   Xiong PC, 2010, IEEE T SYST MAN CY A, V40, P376, DOI 10.1109/TSMCA.2009.2037018
   Zhang J, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON SERVICE OPERATIONS AND LOGISTICS, AND INFORMATICS (SOLI 2006), PROCEEDINGS, P1070, DOI 10.1109/SOLI.2006.328900
   Zhou Z, 2011, J NETW COMPUT APPL, V34, P1043, DOI 10.1016/j.jnca.2010.06.006
NR 42
TC 27
Z9 27
U1 0
U2 43
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2013
VL 86
IS 4
BP 1089
EP 1106
DI 10.1016/j.jss.2012.11.037
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115SH
UT WOS:000316831700015
DA 2024-07-18
ER

PT J
AU Pereira, GCCF
   Santos, MAS
   de Oliveira, BT
   Simplicio, MA
   Barreto, PSLM
   Margi, CB
   Ruggiero, WV
AF Pereira, Geovandro C. C. F.
   Santos, Mateus A. S.
   de Oliveira, Bruno T.
   Simplicio, Marcos A., Jr.
   Barreto, Paulo S. L. M.
   Margi, Cintia B.
   Ruggiero, Wilson V.
TI SMSCrypto: A lightweight cryptographic framework for secure SMS
   transmission
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cryptography; SMS; Security; Elliptic curve cryptosystems
ID ENCRYPTION; IMPLEMENTATION; MARVIN; DESIGN
AB Despite the continuous growth in the number of smartphones around the globe, Short Message Service (SMS) still remains as one of the most popular, cheap and accessible ways of exchanging text messages using mobile phones. Nevertheless, the lack of security in SMS prevents its wide usage in sensitive contexts such as banking and health-related applications. Aiming to tackle this issue, this paper presents SMSCrypto, a framework for securing SMS-based communications in mobile phones. SMSCrypto encloses a tailored selection of lightweight cryptographic algorithms and protocols, providing encryption, authentication and signature services. The proposed framework is implemented both in Java (target at JVM-enabled platforms) and in C (for constrained SIM Card processors) languages, thus being suitable for a wide range of scenarios. In addition, the signature model adopted does not require an on-line infrastructure and the inherent overhead found in the Public Key Infrastructure (PKI) model, facilitating the development of secure SMS-based applications. We evaluate the proposed framework on a real phone and on SIM Card-comparable microcontroller. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Pereira, Geovandro C. C. F.; Santos, Mateus A. S.; de Oliveira, Bruno T.; Simplicio, Marcos A., Jr.; Barreto, Paulo S. L. M.; Margi, Cintia B.; Ruggiero, Wilson V.] Univ Sao Paulo, POLI USP, Escola Politecn, Dept Comp & Digital Syst Engn PCS, BR-05508900 Sao Paulo, Brazil.
C3 Universidade de Sao Paulo
RP Pereira, GCCF (corresponding author), Univ Sao Paulo, POLI USP, Escola Politecn, Dept Comp & Digital Syst Engn PCS, Av Prof Luciano Gualberto,Trav 3,158, BR-05508900 Sao Paulo, Brazil.
EM geovandro@larc.usp.br; mateus@larc.usp.br; btrevizan@larc.usp.br;
   mjunior@larc.usp.br; pbarreto@larc.usp.br; cbmargi@larc.usp.br;
   wilson@larc.usp.br
RI Margi, Cintia Borges/C-3769-2012; Santos, Mateus AS/J-4055-2014;
   Simplicio, Marcos A/D-9248-2012; Barreto, Paulo L/F-5788-2010
OI Margi, Cintia Borges/0000-0003-4441-8778; Simplicio, Marcos
   A/0000-0001-5227-7165; Barreto, Paulo L/0000-0001-8832-3071; Ruggiero,
   Wilson/0000-0003-3612-3937; Santos, Mateus/0000-0003-2919-8551
FU Brazilian National Council for Scientific and Technological Development
   (CNPq) [303163/2009-7, 482342/2011-0]; Sao Paulo Research Foundation
   (FAPESP) [2010/02909-8, 2010/16163-8]; Fundacao de Amparo a Pesquisa do
   Estado de Sao Paulo (FAPESP) [10/02909-8, 10/16163-8] Funding Source:
   FAPESP
FX This work was partially supported by the Brazilian National Council for
   Scientific and Technological Development (CNPq) under research
   productivity grant 303163/2009-7 and universal research grant
   482342/2011-0, and also by the Sao Paulo Research Foundation (FAPESP)
   under grants 2010/02909-8 and 2010/16163-8.
CR 3GPP2, 2005, C S0015 B V2 0 SHORT
   Agoyi M., 2010, Proceedings 2010 6th International Conference on Wireless and Mobile Communications (ICWMC 2010), P448, DOI 10.1109/ICWMC.2010.87
   Ahmadian Z, 2010, COMPUT NETW, V54, P2256, DOI 10.1016/j.comnet.2010.01.005
   Al-Riyami SS, 2003, LECT NOTES COMPUT SC, V2894, P452
   Albuja J.P., 2009, TRUSTED SMS COMMUNIC, P165
   [Anonymous], 2006, THESIS U CATHOLIQUE
   [Anonymous], 2007, PROC 2 ACM S INF COM
   [Anonymous], 2003, Guide to Elliptic Curve Cryptography
   [Anonymous], 2011, The world in 2010
   [Anonymous], 2010134 IACR EPRINT
   Aranha D.F., 2009, C HYP CURV DDISCR LO
   Asif S., 2011, NEXT GENERATION MOBI
   Atmel, 2011, ATM MICR REV 2467XS
   Baek J, 2005, LECT NOTES COMPUT SC, V3650, P134
   Barkan E, 2003, LECT NOTES COMPUT SC, V2729, P600
   Barreto P.S.L.M., 2008, BRAZ S INF COMP SYST
   Barreto PSLM, 2006, LECT NOTES COMPUT SC, V3897, P319
   Becher M, 2011, P IEEE S SECUR PRIV, P96, DOI 10.1109/SP.2011.29
   Bellare M, 2004, LECT NOTES COMPUT SC, V3017, P389
   Bellovin S., 2001, 2 NIST WORKSH MOD OP
   Benger N, 2010, LECT NOTES COMPUT SC, V6087, P180, DOI 10.1007/978-3-642-13797-6_13
   Biham E, 2005, LECT NOTES COMPUT SC, V3788, P443
   Black J., 2005, AUTHENTICATED ENCRYP
   Daemen J, 2020, The design of rijndael: the advanced encryption standard (AES), V2nd, DOI DOI 10.1007/978-3-662-60769-53
   De Santis A, 2010, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS (CISIS 2010), P843, DOI 10.1109/CISIS.2010.81
   Dent AW, 2008, INT J INF SECUR, V7, P349, DOI 10.1007/s10207-008-0055-0
   Devegili AJ, 2007, LECT NOTES COMPUT SC, V4575, P197
   Dunkelman O, 2010, LECT NOTES COMPUT SC, V6223, P393, DOI 10.1007/978-3-642-14623-7_21
   EM-Microelectronic, 2012, TG360 16B FACT SHEET
   He RY, 2009, COMPUT STAND INTER, V31, P629, DOI 10.1016/j.csi.2008.06.011
   Hossain MA, 2008, PROC INT CONF ANTI, P235, DOI 10.1109/IWASID.2008.4688386
   IPCS GROUP, 2011, IPCRYPTSIM SMS ENCR
   Khozooyi N, 2009, INT C COMP ELEC ENG, P168, DOI 10.1109/ICCEE.2009.128
   Laboratorio de Criptografia Aplicada do Instituto de Computacao da Universidade de Campinas, 2010, EFF LIB CRYPT RELIC
   Lee PHJ, 2008, SECRYPT 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY, P306
   Lee Y, 2007, COMPUT COMMUN, V30, P893, DOI 10.1016/j.comcom.2006.10.014
   Li F, 2008, LECT NOTES COMPUT SC, V5245, P116, DOI 10.1007/978-3-540-88140-7_11
   MEMSIC, 2012, 6020 0065 05 REV A M
   Miyaji A, 2001, IEICE T FUND ELECTR, VE84A, P1234
   NIST, 2005, SPECIAL PUBLICATION
   Nokia Corporation, 2012, DET SPEC NOK 5530 XP
   Oliveira LB, 2008, INSS 2008: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON NETWORKED SENSING SYSTEMS, P173, DOI 10.1109/INSS.2008.4610921
   Pereira G.C.C.F., 2011, THESIS U SAO PAULO S
   Pereira GCCF, 2011, J SYST SOFTWARE, V84, P1319, DOI 10.1016/j.jss.2011.03.083
   PortioResearch, 2011, MOB MESS FUT 2011 20
   RIVEST RL, 1978, COMMUN ACM, V21, P120, DOI [10.1145/359340.359342, 10.1145/357980.358017]
   Saarinen MJO, 2012, LECT NOTES COMPUT SC, V7549, P216, DOI 10.1007/978-3-642-34047-5_13
   Shamir A., 1985, Advances in Cryptology, V84 4, P47, DOI 10.1007/3-540-39568-7_5
   Shen S., 2009, DATAQUEST INSIGHT TO
   Simplicio Jr M.A., AD HOC NETW IN PRESS
   Simplicio MA, 2012, IEEE T INFORM THEORY, V58, P6223, DOI 10.1109/TIT.2012.2203093
   Simplicio MA, 2009, SECUR COMMUN NETW, V2, P165, DOI 10.1002/sec.66
   Toorani Mohsen, 2008, 2008 IEEE Symposium on Computers and Communications (ISCC), P700, DOI 10.1109/ISCC.2008.4625610
   van der Merwe A, 2005, IEEE SYS MAN CYBERN, P492
   Wu S., 2009, P INT C DIG SIGN PRO, P1
   Zhang Zhenfei., 2008, Proc. 2nd Int'l Conf. Signal Processing and Communication Systems (ICSPCS), P1
   Zheng YL, 1997, LECT NOTES COMPUT SC, V1294, P165
   Zhu Y., 2009, 2009 International Conference on Computational Science and Engineering (CSE), P326, DOI 10.1109/CSE.2009.364
NR 58
TC 7
Z9 7
U1 0
U2 28
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2013
VL 86
IS 3
BP 698
EP 706
DI 10.1016/j.jss.2012.11.004
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090XN
UT WOS:000315013400009
DA 2024-07-18
ER

PT J
AU Amoui, M
   Derakhshanmanesh, M
   Ebert, J
   Tahvildari, L
AF Amoui, Mehdi
   Derakhshanmanesh, Mahdi
   Ebert, Juergen
   Tahvildari, Ladan
TI Achieving dynamic adaptation via management and interpretation of
   runtime models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Adaptation framework; Runtime adaptivity; Self-adaptive software; Model
   transformation; Models at runtime
ID SUPPORT
AB In this article, we present a generic model-centric approach for realizing fine-grained dynamic adaptation in software systems by managing and interpreting graph-based models of software at runtime. We implemented this approach as the Graph-based Runtime Adaptation Framework (GRAF), which is particularly tailored to facilitate and simplify the process of evolving and adapting current software towards runtime adaptivity. As a proof of concept, we present case study results that show how to achieve runtime adaptivity with GRAF and sketch the framework's capabilities for facilitating the evolution of real-world applications towards self-adaptive software. The case studies also provide some details of the GRAF implementation and examine the usability and performance of the approach. (C) 2012 Elsevier Inc. All rights reserved.
C1 [Amoui, Mehdi] Univ Waterloo, Stat Decis Model Syst Test SDMS Project, Software Verificat & Validat Grp, Blackberry Internet Serv Dept, Waterloo, ON N2L 3G1, Canada.
   [Derakhshanmanesh, Mahdi; Ebert, Juergen] Univ Koblenz Landau, D-56070 Koblenz, Germany.
   [Tahvildari, Ladan] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo; University of Koblenz & Landau; University of
   Waterloo
RP Amoui, M (corresponding author), Univ Waterloo, Stat Decis Model Syst Test SDMS Project, Software Verificat & Validat Grp, Blackberry Internet Serv Dept, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
EM mamouika@uwaterloo.ca; manesh@uni-koblenz.de; ebert@uni-koblenz.de;
   ltahvild@uwaterloo.ca
CR Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], 1996, PATTERN ORIENTED SOF
   Asadollahi R, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P58, DOI 10.1109/SEAMS.2009.5069074
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bruhn J, 2008, I C COMP SYST APPLIC, P755, DOI 10.1109/AICCSA.2008.4493612
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Computing A., 2006, IBM White Paper, 31, V31, P1
   Derakhshanmanesh M., 2010, THESIS U KOBLENZ LAN
   Derakhshanmanesh Mahdi, 2011, P 6 INT S SOFTW ENG, P128, DOI DOI 10.1145/1988008.1988026
   Ebert J, 2010, LECT NOTES COMPUT SC, V5765, P335, DOI 10.1007/978-3-642-17322-6_15
   Ebert Jurgen., 2008, Workshop Software Reengineering, P67
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   Fraps, 2011, REALT VID CAPT BENCH
   Garlan D, 2004, LECT NOTES COMPUT SC, V3047, P200
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gayraud R., 2010, SIPP TRAFFIC GENERAT
   Grace P, 2008, LECT NOTES COMPUT SC, V4954, P215
   Horn Tassilo, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P183, DOI 10.1007/978-3-642-21732-6_13
   IBM, 2010, RAT SOFTW ARCH
   JBoss AOP, 2010, FRAM ORG CROSS CUTT
   Kephart JO, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2004.1309145
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   OMG, 2010, UN MOD LANG UML SUP
   OpenJSIP, 2009, OPEN SOURCE SIP SERV
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Rabin S., 2002, AI Game Programming Wisdom
   Sadjadi SM, 2004, LECT NOTES COMPUT SC, V3291, P1243
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   TPTP, 2011, ECL TEST PERF TOOLS
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Weyns D., 2010, P 7 INT C AUTONOMIC, P205, DOI 10.1145/1809049.1809078
   Widom J., 1996, ACTIVE DATABASE SYST
NR 39
TC 22
Z9 23
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2012
VL 85
IS 12
SI SI
BP 2720
EP 2737
DI 10.1016/j.jss.2012.05.033
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 031VB
UT WOS:000310669500005
DA 2024-07-18
ER

PT J
AU Morandi, B
   Nanz, S
   Meyer, B
AF Morandi, Benjamin
   Nanz, Sebastian
   Meyer, Bertrand
TI Performance analysis of SCOOP programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Performance analysis; Performance metric; Profiling; Tracing; Concurrent
   programming; SCOOP
ID MODEL; TIME
AB To support developers in writing reliable and efficient concurrent programs, novel concurrent programming abstractions have been proposed in recent years. Programming with such abstractions requires new analysis tools because the execution semantics often differs considerably from established models. We present a performance analyzer that is based on new metrics for programs written in SCOOP, an object-oriented programming model for concurrency. We discuss how the metrics can be used to discover performance issues, and we use the tool to optimize a concurrent robotic control software. (c) 2012 Elsevier Inc. All rights reserved.
C1 [Morandi, Benjamin; Nanz, Sebastian; Meyer, Bertrand] ETH, Chair Software Engn, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Morandi, B (corresponding author), ETH, Chair Software Engn, Clausiusstr 59, CH-8092 Zurich, Switzerland.
EM benjamin.morandi@inf.ethz.ch; sebastian.nanz@inf.ethz.ch;
   bertrand.meyer@inf.ethz.ch
RI Meyer, Bertrand/E-4543-2010
OI Meyer, Bertrand/0000-0002-5985-7434
FU European Research Council under the European Union's Seventh Framework
   Programme (FP7) / ERC [291389]; Hasler Foundation; ETH (ETHIIRA); Swiss
   National Foundation; Microsoft (Multicore award)
FX We thank the anonymous reviewers for their insightful comments. We also
   thank Martino Trosi who has worked on the SCOOP performance analyzer as
   part of his Master's thesis. The research leading to these results has
   received funding from the European Research Council under the European
   Union's Seventh Framework Programme (FP7/2007-2013) / ERC Grant
   agreement no. 291389, the Hasler Foundation, and ETH (ETHIIRA). Earlier
   work on the SCOOP model has also benefited from grants from the Swiss
   National Foundation and Microsoft (Multicore award).
CR AMD, 2012, CODEANALYST
   ANDERSON TE, 1990, PERF E R SI, V18, P115, DOI 10.1145/98460.98518
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2005, LITTLE BOOK SEMAPHOR
   BLUMOFE RD, 1995, SIGPLAN NOTICES, V30, P207
   Brooke PJ, 2007, FORM ASP COMPUT, V19, P487, DOI 10.1007/s00165-007-0033-8
   Brooke PJ, 2009, FORM ASP COMPUT, V21, P363, DOI 10.1007/s00165-008-0096-1
   CAI WT, 1994, COMPUT J, V37, P333, DOI 10.1093/comjnl/37.4.333
   Eiffel Software, 2012, EIFFELSTUDIO
   ETH Zurich, 2012, SCOOP
   ETH Zurich, 2012, EVE
   Hoare CAR., 1985, Communicating Sequential Processes
   Hollingsworth J. K., 1992, Proceedings. Supercomputing '92. (Cat. No.92CH3216-9), P4, DOI 10.1109/SUPERC.1992.236715
   Hollingsworth J.K., 1994, SLACK NEW PERFORMANC
   HOLLINGSWORTH JK, 1994, PROCEEDINGS OF THE SCALABLE HIGH-PERFORMANCE COMPUTING CONFERENCE, P841, DOI 10.1109/SHPCC.1994.296728
   Intel, 2012, PAR AMPL
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Miller B. P., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P206, DOI 10.1109/71.80132
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   Mills D, 2010, Computer Network Time Synchronization: The Network Time Protocol on Earth and in Space
   Nanz S, 2008, LECT NOTES COMPUT SC, V5079, P159
   Nanz S, 2011, INT SYMP EMP SOFTWAR, P325, DOI 10.1109/ESEM.2011.41
   NIENALTOWSKI P, 2007, THESIS ETH ZURICH
   Ostroff J. S., 2008, FORM ASP COMPUT, V21, P319
   Ramanathan G, 2010, IEEE INT C INT ROBOT, P1994, DOI 10.1109/IROS.2010.5650536
   Su HH, 2010, INT J HIGH PERFORM C, V24, P485, DOI 10.1177/1094342010370953
   Tallent NR, 2009, ACM SIGPLAN NOTICES, V44, P229, DOI 10.1145/1594835.1504210
   West S, 2010, LECT NOTES COMPUT SC, V6447, P597, DOI 10.1007/978-3-642-16901-4_39
   Wolf F, 2003, ELEVENTH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P13, DOI 10.1109/EMPDP.2003.1183560
   Yang C.-Q., 1988, 8th International Conference on Distributed Computing Systems (Cat. No.88CH2541-1), P366, DOI 10.1109/DCS.1988.12538
NR 31
TC 1
Z9 1
U1 0
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2012
VL 85
IS 11
BP 2519
EP 2530
DI 10.1016/j.jss.2012.05.076
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 013OU
UT WOS:000309315500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Palmieri, F
AF Palmieri, Francesco
TI Percolation-based routing in the Internet
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Inter-domain routing; Routing scalability; On-demand routing;
   Percolation search
AB The uncontrollable growth of the Internet, breaking through meshing and multi-homing practices the existing topology-based prefix aggregation mechanisms, creates the necessity of revisiting some fundamental aspects in the inter-domain routing model due to severe scalability issues in routing table size. In this paper, we at first analyze the root causes of these problems and then exploit a promising solution based on on-demand routing and on a widely known uniform caching and searching algorithm. Such algorithm is based on bond percolation, a mathematical phase transition model well-suited for random walk searches in power law networks, automatically shielding nodes with limited connectivity from large traffic volumes and reducing the total traffic to scale sub-linearly with the network size. The proposed solution introduces limited modifications to the BGP protocol, ensuring backward compatibility and allowing gradual deployment throughout the Internet. It dramatically reduces the routing table size requirements in all the nodes participating to the search network while allowing reliable and efficient on-demand discovery of unknown routing information, as demonstrated through extensive simulation experiments. (c) 2012 Elsevier Inc. All rights reserved.
C1 Univ Naples 2, Dept Informat Engn, I-81031 Aversa, CE, Italy.
C3 Universita della Campania Vanvitelli
RP Palmieri, F (corresponding author), Univ Naples 2, Dept Informat Engn, Via Roma 29, I-81031 Aversa, CE, Italy.
EM francesco.palmieri@unina.it
RI Palmieri, Francesco/AAT-9080-2020
OI Palmieri, Francesco/0000-0003-1760-5527
CR [Anonymous], GSE ALTERNA IN PRESS
   [Anonymous], LOCATOR ID IN PRESS
   Bailey N., 1975, MATH MED SERIES, V413
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Begtaevi F., 2001, P PAM2001 C
   Breslau L, 2000, COMPUTER, V33, P59, DOI 10.1109/2.841785
   Broadbent S. R., 1957, P CAMBRIDGE PHIL SOC, V53, P629
   Bu T, 2002, ACM SIGCOMM COMP COM, V32, P77, DOI 10.1145/510726.510751
   Caesar M, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P15
   Callaway DS, 2000, PHYS REV LETT, V85, P5468, DOI 10.1103/PhysRevLett.85.5468
   Chandra R., 2008, 2842 IETF RFC
   Chen E., 2008, 5291 IETF RFC
   Chen E., 2000, 2918 IETF RFC
   Cohen R, 2003, HANDBOOK OF GRAPHS AND NETWORKS: FROM THE GENOME TO THE INTERNET, P85
   Cohen R, 2000, PHYS REV LETT, V85, P4626, DOI 10.1103/PhysRevLett.85.4626
   Cohen R, 2002, PHYS REV E, V66, DOI 10.1103/PhysRevE.66.036113
   Deering Steve., 1996, The Map Encap Scheme for scalable IPv4 routing with portable site prefixes
   Draves RP, 1999, IEEE INFOCOM SER, P88, DOI 10.1109/INFCOM.1999.749256
   Eugster PT, 2004, COMPUTER, V37, P60, DOI 10.1109/MC.2004.1297243
   Faloutsos M, 1999, COMP COMM R, V29, P251, DOI 10.1145/316194.316229
   Grabowski A, 2010, ACTA PHYS POL B, V41, P1135
   Greenberg A, 2005, ACM SIGCOMM COMP COM, V35, P41, DOI 10.1145/1096536.1096541
   Grimmett G., 1996, PERCOLATION
   Hadzilacos V., 1993, DISTRIBUTED SYSTEMS, P97
   Hinden R., 1996, 1955 IETF RFC
   Huitema C., 2000, ITC SPEC SEM INT TRA
   Huston G., 2003, EXCHANGE ORG BEHAV T, P1
   JIN C, 2000, CSETR43300
   Jung JY, 2002, IEEE ACM T NETWORK, V10, P589, DOI 10.1109/TNET.2002.803905
   Karpilovsky E., 2006, P 2006 ACM CONEXT C, P2
   Meester R., 1999, CONTINUUM PERCOLATIO
   Meyer D., 2008, INTERNET PROTOCOL J, V11
   Meyer D., 2008, 4984 IETF RFC
   MOLLOY M, 1995, RANDOM STRUCT ALGOR, V6, P161, DOI 10.1002/rsa.3240060204
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Newman MEJ, 2001, PHYS REV E, V64, DOI [10.1103/PhysRevE.64.016132, 10.1103/PhysRevE.64.016131]
   Sarshar N, 2006, THEOR COMPUT SCI, V355, P48, DOI 10.1016/j.tcs.2005.12.014
   Sarshar N, 2004, FOURTH INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P2, DOI 10.1109/PTP.2004.1334925
   Sarshar N., 2006, ARXIVCONDMAT0601211V
   Siganos G, 2003, IEEE ACM T NETWORK, V11, P514, DOI 10.1109/TNET.2003.815300
   Subramanian L, 2005, ACM SIGCOMM COMP COM, V35, P13, DOI 10.1145/1090191.1080095
   Templin F., 2011, 6179 IRTF
   Verkaik P., 2003, ATOMS ATOMISED ROUTI
   Winick J., 2002, CSETR45602, P1
   Zhang XY, 2006, PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, P144
NR 45
TC 7
Z9 7
U1 0
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD NOV
PY 2012
VL 85
IS 11
BP 2559
EP 2573
DI 10.1016/j.jss.2012.05.094
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 013OU
UT WOS:000309315500013
DA 2024-07-18
ER

PT J
AU Frantz, RZ
   Corchuelo, R
   Molina-Jiménez, C
AF Frantz, Rafael Z.
   Corchuelo, Rafael
   Molina-Jimenez, Carlos
TI A proposal to detect errors in Enterprise Application Integration
   solutions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Enterprise Application Integration; Fault-tolerance; Error monitoring;
   Error detection
ID WORKFLOW MANAGEMENT-SYSTEMS; FAULT-TOLERANCE
AB Enterprise Application Integration (EAI) solutions comprise a set of specific-purpose processes that implement exogenous message workflows. The goal is to keep a number of applications' data in synchrony or to develop new functionality on top of them. Such solutions are prone to errors because they are highly distributed and usually involve applications that were not designed with integration concerns in mind. This has motivated many authors to work on provisioning EAI solutions with fault-tolerance capabilities. In this article we analyse EA! solutions from two orthogonal perspectives: viewpoint (orchestration versus choreography) and execution model (process- versus task-based model). A review of the literature shows that current proposals are bound to a specific viewpoint or execution model or have important limitations. To address the problem, we have devised an error monitor that can be used to provision EA! solutions with fault-tolerance capabilities. Our theoretical analysis proves that the algorithms we use are computationally tractable, and our experimental results prove that they are efficient enough to be used in situations in which the workload is very high. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Frantz, Rafael Z.] UNIJUF Univ, Dept Technol, BR-98700000 Ijuf, RS, Brazil.
   [Corchuelo, Rafael] Univ Seville, ETSI Informat, E-41012 Seville, Spain.
   [Molina-Jimenez, Carlos] Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 University of Sevilla; Newcastle University - UK
RP Frantz, RZ (corresponding author), UNIJUF Univ, Dept Technol, Rua Comercio 3000, BR-98700000 Ijuf, RS, Brazil.
EM rzfrantz@unijui.edu.br; corchu@us.es; carlos.molina@ncl.ac.uk
RI Frantz, Rafael Z./J-9521-2012; Corchuelo, Rafael/G-3149-2016
OI Frantz, Rafael Z./0000-0003-3740-7560; Corchuelo,
   Rafael/0000-0003-1563-6979
FU Evangelischer Entwicklungsdienst e.V. (EED); European Commission
   (FEDER); Spanish RDI programme [TIN2007-64119, P07-TIC-2602,
   P08-TIC-4100, TIN2008-04718-E, TIN2010-21744, TIN2010-09809-E,
   TIN2010-10811-E, TIN2010-09988-E]; Andalusian RDI programme
   [TIN2007-64119, P07-TIC-2602, P08-TIC-4100, TIN2008-04718-E,
   TIN2010-21744, TIN2010-09809-E, TIN2010-10811-E, TIN2010-09988-E]; UK
   EPSRC [EP/D037743/1]
FX The first author conducted part of this work at the Newcastle
   University, UK as visiting member of staff. His work is partially funded
   by the Evangelischer Entwicklungsdienst e.V. (EED). The first and the
   second authors are partially funded by the European Commission (FEDER),
   the Spanish and the Andalusian R&D&I programmes (grants TIN2007-64119,
   P07-TIC-2602, P08-TIC-4100, TIN2008-04718-E, TIN2010-21744,
   TIN2010-09809-E, TIN2010-10811-E, and TIN2010-09988-E). The third author
   is partially funded by UK EPSRC Platform Grant Number EP/D037743/1.
CR Alonso G, 2000, IEEE CONCURR, V8, P74, DOI 10.1109/4434.865896
   [Anonymous], 2005, WEB SERV CHOR DESCR
   [Anonymous], 2003, HDB GRAPH THEORY
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baresi L, 2008, LECT NOTES COMPUT SC, V5377, P1, DOI 10.1007/978-3-540-89897-9_1
   Borrego D., 2010, 21 INT WORKSH PRINC, P169
   Brodal GS, 1996, PROCEEDINGS OF THE SEVENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P52
   CAMPBELL RH, 1986, IEEE T SOFTWARE ENG, V12, P811, DOI 10.1109/TSE.1986.6312984
   Chen M.Y., 2004, INT S NETW SYST DES, V23
   Chiu DKW, 1999, INFORM SYST, V24, P159, DOI 10.1016/S0306-4379(99)00010-1
   Ermagan V, 2008, P IEEE I C SERV COMP, P63, DOI 10.1109/SCC.2008.140
   Erradi A, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P189
   Frantz RZ, 2011, COMM COM INF SC, V220, P170
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   HOPCROFT J, 1973, COMMUN ACM, V16, P372, DOI 10.1145/362248.362272
   Khanna G., 2009, IEEE T DEPEND SECURE, V3, P115
   Khanna G, 2007, SYM REL DIST SYST, P275, DOI 10.1109/SRDS.2007.15
   Laguna I, 2009, LECT NOTES COMPUT SC, V5896, P205, DOI 10.1007/978-3-642-10445-9_11
   LEVESON NG, 1991, COMMUN ACM, V34, P34, DOI 10.1145/102792.102799
   Li LX, 2008, IEEE T SYST MAN CY A, V38, P207, DOI 10.1109/TSMCA.2007.909559
   Li Y., 2009, 20 INT WORKSH PRINC, P267
   Liu A., 2006, INT C WEB INF SYST E, P90
   Liu A, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P272
   Liu CF, 2001, SEVENTH INTERNATIONAL CONFERENCE ON DATABASE SYSTEMS FOR ADVANCED APPLICATIONS, PROCEEDINGS, P276, DOI 10.1109/DASFAA.2001.916388
   Messerschmitt D., 2003, SOFTWARE ECOSYSTEM U
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Sampath M, 1996, IEEE T CONTR SYST T, V4, P105, DOI 10.1109/87.486338
   Sayed Mouchaweh M., 2010, 21 INT WORKSH PRINC
   Wu Q., 2006, IEEE INT C COMM ENT
   Yan Y., 2005, 3 EUR C WEB SERV
   Yan YH, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P51
   Zeng LZ, 2005, CEC 2005: Seventh IEEE International Conference on E-Commerce Technology, Proceedings, P355, DOI 10.1109/ICECT.2005.66
NR 35
TC 11
Z9 14
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2012
VL 85
IS 3
BP 480
EP 497
DI 10.1016/j.jss.2011.10.048
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 908CS
UT WOS:000301468600003
OA Green Published
DA 2024-07-18
ER

PT J
AU Magdaleno, AM
   Werner, CML
   de Araujo, RM
AF Magdaleno, Andrea Magalhaes
   Lima Werner, Claudia Maria
   de Araujo, Renata Mendes
TI Reconciling software development models: A quasi-systematic review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd Brazilian Symposium on Software Engineering
CY FEB, 2012
CL Pernambuco, BRAZIL
DE Systematic review; Software process; Reconciliation among development
   models; Plan-driven; Agile; Free/open source software
ID PROCESS DIVERSITY; AGILE METHODS; MANAGEMENT; COLLABORATION; QUALITY;
   LESSONS; BALANCE
AB Purpose: The purpose of this paper is to characterize reconciliation among the plan-driven, agile, and free/open source software models of software development.
   Design/methodology/approach: An automated quasi-systematic review identified 42 papers, which were then analyzed.
   Findings: The main findings are: there exist distinct - organization, group and process - levels of reconciliation; few studies deal with reconciliation among the three models of development; a significant amount of work addresses reconciliation between plan-driven and agile development; several large organizations (such as Microsoft, Motorola, and Philips) are interested in trying to combine these models; and reconciliation among software development models is still an open issue, since it is an emerging area and research on most proposals is at an early stage.
   Research limitations: Automated searches may not capture relevant papers in publications that are not indexed. Other data sources not amenable to execution of the protocol were not used. Data extraction was performed by only one researcher, which may increase the risk of threats to internal validity.
   Implications: This characterization is important for practitioners wanting to be current with the state of research. This review will also assist the scientific community working with software development processes to build a common understanding of the challenges that must be faced, and to identify areas where research is lacking. Finally, the results will be useful to software industry that is calling for solutions in this area.
   Originality/value: There is no other systematic review on this subject, and reconciliation among software development models is an emerging area. This study helps to identify and consolidate the work done so far and to guide future research. The conclusions are an important step towards expanding the body of knowledge in the field. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Magdaleno, Andrea Magalhaes; Lima Werner, Claudia Maria] Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Program, BR-21945970 Rio De Janeiro, RJ, Brazil.
   [de Araujo, Renata Mendes] Fed Univ Rio de Janeiro State UNIRIO, Grad Program Informat PPGI, Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Rio de Janeiro; Universidade Federal do Estado
   do Rio de Janeiro
RP Magdaleno, AM (corresponding author), Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Program, POB 68511, BR-21945970 Rio De Janeiro, RJ, Brazil.
EM andrea@cos.ufrj.br; werner@cos.ufrj.br; renata.araujo@uniriotec.br
RI de Araujo, Renata Mendes/M-1155-2013; Werner, Claudia/JZE-5245-2024; de
   Araujo, Renata Mendes/X-6380-2019
OI de Araujo, Renata Mendes/0000-0002-8674-1728; de Araujo, Renata
   Mendes/0000-0002-8674-1728; Lima Werner, Claudia
   Maria/0000-0002-4231-9621
CR Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Abrahamsson P., 2002, Agile software development methods: Review and analysis, P478, DOI DOI 10.1076/CSED.12.3.167.8613
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   Anderson DJ, 2005, AGILE 2005, Proceedings, P193, DOI 10.1109/ADC.2005.42
   Angioni M., 2005, 1 INT C OP SOURC SYS, P209
   [Anonymous], 2004, XP Ser
   [Anonymous], 1999, Open sources: voices from the open source revolution
   [Anonymous], 2007, Ninth International Workshop on Principles of Software Evolution in Conjunction with the 6th ESEC/FSE Joint Meeting-IWPSE'07
   [Anonymous], 2001, CATHEDRAL BAZAAR
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Asklund U., 2002, IEE Proceedings-Software, V149, P40, DOI 10.1049/ip-sen:20020196
   Awazu Y, 2004, J AM SOC INF SCI TEC, V55, P1016, DOI 10.1002/asi.20050
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Baker SA, 2006, ANKYLOSING SPONDYLIT, P1
   Barnett L., 2004, FORRESTER RES, P1
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bekkers W, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P43
   Biolchini J., 2005, Int. Sugar J.
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B., 2003, BALANCING AGILITY DI
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Capiluppi A., 2003, P 17 EUR C SOFTW MAI, P1
   Chrissis M., 2006, CMMI: Guidelines for Process Integration and Product Improvement
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Cubranic D., 1999, Proceedings. IEEE 8th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET ICE'99), P61, DOI 10.1109/ENABL.1999.805176
   Cugola G., 1998, Software Process Improvement and Practice, V4, P101, DOI 10.1002/(SICI)1099-1670(199809)4:3<101::AID-SPIP103>3.0.CO;2-K
   Dahlberg H, 2006, INT FED INFO PROC, V206, P291
   Deck M, 2001, IEEE SOFTWARE, V18, P21, DOI 10.1109/52.922721
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Deshpande A, 2008, INT FED INFO PROC, V275, P273
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2007, IEEE SOFTWARE, V24, P105, DOI 10.1109/MS.2007.83
   Feller J., 2001, Understanding open source software development
   FLORAC WA, 1999, SEI S SOFTW, P1
   FSF. Free Software Foundation, 2008, FREE SOFTW DEF
   Fuggetta A, 2003, J SYST SOFTWARE, V66, P77, DOI 10.1016/S0164-1212(02)00065-1
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Ginsberg MarkP., 1995, Process Tailoring and the Software Capability Maturity Model
   Glass R. L., 2001, Cutter IT Journal, V14, P12
   Glazer Hillel., 2008, Cmmi or agile: Why not embrace both!
   Glynn E., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Goth G, 2007, IEEE SOFTWARE, V24, P88, DOI 10.1109/MS.2007.28
   Hashmi SI, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P519, DOI 10.1109/ICIS.2008.53
   Huang M., 2006, UNIFYING SOFTWARE PR, P122
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   ISO/IEC, 1995, ISO/IEC 12207
   Jakobsen CR, 2008, AGILE 2008, PROCEEDINGS, P212, DOI 10.1109/Agile.2008.10
   Jaufman O, 2005, LECT NOTES COMPUT SC, V3547, P328
   Jedlitschka A, 2005, LECT NOTES COMPUT SC, V3547, P502
   Johnson JP, 2006, INF ECON POLICY, V18, P477, DOI 10.1016/j.infoecopol.2006.07.001
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   Kee W.H., 2006, INT C INN INF TECHN, P1
   Kitchenham B., 2007, Joint Report
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Koch S, 2004, LECT NOTES COMPUT SC, V3092, P85
   Kornstädt A, 2007, LECT NOTES COMPUT SC, V4716, P83
   Layman L, 2008, INT J ENG EDUC, V24, P659
   Lindvall M, 2000, IEEE SOFTWARE, V17, P14, DOI 10.1109/MS.2000.854063
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Magdaleno A. M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P331, DOI 10.1145/1810295.1810378
   Magdaleno A. M., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P40, DOI 10.1109/SSBSE.2010.15
   Magdaleno AM, 2010, LECT NOTES COMPUT SC, V6415, P435, DOI 10.1007/978-3-642-16558-0_37
   Margal ASC, 2007, IEEE ANNU SOFTW ENG, P13
   Miller G.J., 2001, Performance-based budgeting, P1
   Mills D, 2006, PROCEEDINGS OF THE IEEE SOUTHEASTCON 2006, P285, DOI 10.1109/second.2006.1629365
   Mnkandla E, 2004, AFRICON, P1207
   Moreira M., 2009, Adapting Configuration Management for Agile Teams: Balancing Sustainability and Speed
   Navarrete F, 2007, ICCBSS 2007: SIXTH INTERNATIONAL IEEE CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS)-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P103
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Park S, 2006, EXPERT SYST APPL, V30, P179, DOI 10.1016/j.eswa.2005.06.023
   PEDREIRA O, 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Phalnikar R, 2009, INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL : ICACC 2009 - PROCEEDINGS, P535, DOI 10.1109/ICACC.2009.93
   Rahimian V, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P337
   Raman S, 2000, IEEE AERO EL SYS MAG, V15, P33, DOI 10.1109/62.847929
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1196314
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Santana C, 2009, LECT NOTES BUS INF P, V31, P124
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Sharma S, 2002, INFORM SYST J, V12, P7, DOI 10.1046/j.1365-2575.2002.00116.x
   Siebel NT, 2003, J SOFTW MAINT EVOL-R, V15, P9, DOI 10.1002/smr.264
   Simmons G., 2003, INT C SOFTW SYST ENG
   Sommerville I., 2004, Software Engineering
   Soundararajan S, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P187, DOI 10.1109/ECBS.2009.21
   Surdu J., 2006, STSC CROSSTALK
   Theunissen M, 2008, LECT NOTES COMPUT SC, V5082, P84, DOI 10.1007/978-3-540-85279-7_7
   Travassos GH, 2008, IEEE INT C ENG COMP, P193, DOI 10.1109/ICECCS.2008.30
   Tsirakidis P, 2009, INT CONF GLOBAL SOFT, P295, DOI 10.1109/ICGSE.2009.42
   Turner R, 2002, LECT NOTES COMPUT SC, V2559, P134
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   Vinekar V, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46108.23.3.20060601/93705.4
   Vreede G.-J. de., 2005, Proceedings of the 38th Hawaii International Conference on System Sciences, V38, P1
   Vriens C, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P120, DOI 10.1109/ADC.2003.1231461
   Warsta J., 2003, 3rd Workshop on Open Source Software Engineering, P143
   XU P, 2008, IT PROFESSIONAL, V10, P39
NR 104
TC 34
Z9 42
U1 2
U2 28
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2012
VL 85
IS 2
BP 351
EP 369
DI 10.1016/j.jss.2011.08.028
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 893WH
UT WOS:000300387900013
DA 2024-07-18
ER

PT J
AU Prudêncio, JG
   Murta, L
   Werner, C
   Cepêda, R
AF Prudencio, Joao Gustavo
   Murta, Leonardo
   Werner, Claudia
   Cepeda, Rafael
TI To lock, or not to lock: That is the question
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article; Proceedings Paper
CT 23rd Brazilian Symposium on Software Engineering
CY FEB, 2012
CL Pernambuco, BRAZIL
DE Concurrency control; Software Configuration Management; Version control
ID SOFTWARE-DEVELOPMENT; MANAGEMENT
AB Mechanisms to control concurrent access over project artefacts are needed to execute the software development process in an organized way. These mechanisms are implemented by concurrency control policies in version control systems that may inhibit (i.e. 'to lock') or allow (i.e., 'not to lock') parallel development. This work presents a novel approach named Orion that analyzes the project's historical changes and suggests the most appropriate concurrency control policy for each software element. This suggestion aims at minimizing conflict situations and thus improving the productivity of the development team. In addition, it identifies critical elements that do not work well with any of these policies and are candidates to refactoring. We evaluated Orion through two experimental studies and the results, which indicated it was effective, led us to a prototype implementation. Apart from the Orion approach this paper also presents the planning, execution, and analysis stages of the evaluation, and details of prototype internals. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Prudencio, Joao Gustavo; Werner, Claudia; Cepeda, Rafael] Univ Fed Rio de Janeiro, COPPE, Programa Engn Sistemas & Comp, BR-21945 Rio De Janeiro, Brazil.
   [Murta, Leonardo] Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
C3 Universidade Federal do Rio de Janeiro; Universidade Federal Fluminense
RP Prudêncio, JG (corresponding author), Univ Fed Rio de Janeiro, COPPE, Programa Engn Sistemas & Comp, BR-21945 Rio De Janeiro, Brazil.
EM gustavo@cos.ufrj.br; leomurta@ic.uff.br; werner@cos.ufrj.br;
   rcepeda@cos.ufrj.br
RI Werner, Claudia/JZE-5245-2024
CR [Anonymous], 1540 IEEE
   Berczuk S., 2003, Software configuration management patterns: effective teamwork, practical integration
   Bitmover, 2010, BITM
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Cepeda Rafael D., 2010, J BRAZILIAN COMPUTER, V16, P117
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Conradi R., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P98, DOI 10.1145/111062.111075
   Eclipse Foundation, 2010, C ADV INF SYST ENG C
   Estublier J., 2000, Proceedings of the Conference on The Future of Software Engineering - ICSE '00, P279, DOI [DOI 10.1145/336512.336576, 10.1145/336512.336576]
   Estublier J., 2000, INT WORKSH SOFTW CON, P279
   Fogel K.F., 2001, Open source development with CVS
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   Froehlich J., 2004, C ORG COMP SYST MILP, P387
   Gamma Erich., 1994, DESIGN PATTERNS
   Grinter E., 1995, INT C SOFTW ENG ICSE, P168
   Lingen R., 2004, INT WORKSH COMP VERS, P573
   Loeliger J., 2009, VERSION CONTROL GIT
   Murta L, 2007, SCI COMPUT PROGRAM, V65, P249, DOI 10.1016/j.scico.2006.05.011
   O'Sullivan Bryan., 2009, Mercurial: The Definitive Guide
   OLIVEIRA HLR, 2005, INT WORKSH SOFTW CON, P1, DOI DOI 10.1016/J.SCICO.2006.05.011
   Page-Jones M., 1999, 23 BRAZ S SOFTW ENG
   Page-Jones Meilir., 1999, Fundamentals of Object-Oriented Design in UML
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   ROCHE T, 2001, ESSENTIAL SOURCESAFE
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A., 2003, P 2006 INT WORKSH RO, P444
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   WHITE BA, 2000, SOFTWARE CONFIGURATI
NR 30
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD FEB
PY 2012
VL 85
IS 2
BP 277
EP 289
DI 10.1016/j.jss.2011.04.065
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 893WH
UT WOS:000300387900006
DA 2024-07-18
ER

PT J
AU Mattiello-Francisco, F
   Martins, E
   Cavalli, AR
   Yano, ET
AF Mattiello-Francisco, Fatima
   Martins, Eliane
   Cavalli, Ana Rosa
   Yano, Edgar Toshiro
TI InRob: An approach for testing interoperability and robustness of
   real-time embedded software
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Integration testing; Interoperability test; Service model; Robustness
   test; Automatic test case generation; Timing deviations
AB Advances in digital technologies have contributed for significant reduction in accidents caused by hardware failures. However, the growing complexity of functions performed by embedded software has increased the number of accidents caused by software faults in critical systems. Moreover, due to the highly competitive market, software intensive subsystems are usually developed by different suppliers. Often these subsystems are required to interact with each other in order to provide a collaborative service. Testing approaches for subsystems integration support verification of the quality of service, focusing on the subsystems interfaces. The increasing complexity and tight coupling of real-time subsystems make integration testing unmanageable. The ad-hoc approach for testing is becoming less effective and more expensive. This article presents an integration testing approach denominated InRob, designed to verify the interoperability and robustness related to timing constraints of real-time embedded software. InRob guides the construction of services, based on formal models, aiming at the specifications of interoperability and robustness of test cases related to delays and time-outs of the messages exchanged in the interfaces of interconnected subsystems. The proposed formalism supports automatic test cases generation by verifying the relevant properties in the service behavioral model. As timing constraints are critical properties of aerospace systems, the feasibility of InRob is showed in the integration testing process of a telescope onboard in a satellite. The process is instantiated with existing testing tools and the case study is the software embedded in the telescope. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Mattiello-Francisco, Fatima] INPE, Sao Jose Dos Campos, Brazil.
   [Martins, Eliane] IC UNICAMP, Campinas, SP, Brazil.
   [Cavalli, Ana Rosa] INT Telecom SudPARIS, Paris, France.
   [Mattiello-Francisco, Fatima; Yano, Edgar Toshiro] ITA CTA, Sao Jose Dos Campos, Brazil.
C3 Instituto Nacional de Pesquisas Espaciais (INPE); Universidade Estadual
   de Campinas; IMT - Institut Mines-Telecom; Institut Polytechnique de
   Paris; Telecom SudParis; Comando-Geral de Tecnologia Aeroespacial (CTA);
   Instituto Tecnologico de Aeronautica (ITA)
RP Mattiello-Francisco, F (corresponding author), INPE, Sao Jose Dos Campos, Brazil.
EM fatima@iss.inpe.br; eliane@ic.unicamp.br; ana.cavalli@it-sudparis.eu;
   yano@ita.br
RI Yan, Edgar/KII-4120-2024; Mattiello-Francisco, Fátima/J-7005-2015
OI Mattiello-Francisco, Fátima/0000-0002-0796-3868; YANO,
   EDGAR/0000-0002-4104-104X
CR AMBROSIO AM, 2007, 3 LAT AM S DEP COMP, P170
   [Anonymous], ISO9646
   Batth S. S., 2007, 27 IFIP FORTE 2007 E
   Besse C., 2002, TESTCOM 2002 BERLIM
   Binder R., 2002, OBJECT ORIENTED SYST, P191
   Broy M., 2005, LNCS ADV LECT
   Cardell-Oliver R., 2000, Formal Aspects of Computing, V12, P350, DOI 10.1007/s001650070009
   CASTANET R, 2003, TECHNIQUES AVANCEES
   Cavalli A., 2008, 12 IEEE ACM INT S DI
   CAVALLI A, 1999, P IFIP INT C FORTE P
   DESMOULIN A, 2007, LNCS, V4916, P234
   En-Nouaary A, 1998, REAL TIM SYST SYMP P, P220, DOI 10.1109/REAL.1998.739748
   En-Nouaary A., 2004, NOUVELLES TECHNOLOGI
   European Cooperation for Space Standardization (ECSS), 2003, ECSSE40 SPAC ENG 1B
   Fennel H., 2006, SAE TECHNICAL PAPER
   Hessel A., 2006, THESIS UPSSALA U SWE
   Higashino T., 1999, WORKSH TEST COMM SYS
   Khorchef F.S., 2006, I2CS2006
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Lanigan P.E., 2010, P 40 ANN IEEE IFIP I
   Machado PDL, 2007, ELECTRON NOTES THEOR, V184, P3, DOI 10.1016/j.entcs.2007.06.001
   Mattiello-Francisco M.F., 2009, THESIS AER I TECHN B
   Mattiello-Francisco M.F., 2009, LAT AM C COMM MED P
   Mattiello-Francisco M. F., 2006, TRANSIENT MILKY WAY, P132
   Mattiello-Francisco M.F., 2006, SBES2006, P43
   MATTIELLOFRANCI.MF, 2007, 14 ISPE INT C CONC E, P167
   Merayo MG, 2008, IEEE T COMPUT, V57, P835, DOI 10.1109/TC.2008.15
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Vieira E.R., 2007, RTCSA 2007
   [No title captured]
NR 31
TC 12
Z9 16
U1 0
U2 14
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2012
VL 85
IS 1
BP 3
EP 15
DI 10.1016/j.jss.2011.02.034
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859RG
UT WOS:000297892900002
DA 2024-07-18
ER

PT J
AU Zhang, C
   Xiao, WD
   Tang, DQ
   Tang, JY
AF Zhang, Chong
   Xiao, Weidong
   Tang, Daquan
   Tang, Jiuyang
TI P2P-based multidimensional indexing methods: A survey
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Multidimensional index; Peer-to-peer computing; Survey
ID SIMILARITY QUERIES; OVERLAY
AB P2P-based multidimensional index (MI) is a hotspot which absorbs many researchers to dedicate them into. However, no summarization or review on this technology has been made at present. To the best of our knowledge, this is the first work on reviewing P2P-based MI. This paper innovatively adopts visualization technique to show the research groups and then analyzes investigating style of research groups. Based on evolution of P2P-based MI inheriting from centralized MI and P2P, we divide P2P-based MI methods into 4 categories: extending centralized MI, extending P2P. combining centralized MI and P2P, and miscellaneous. For each category, the paper selects classical techniques and describes them in detail. This is the first time of doing the classification job over massive related works. Finally, load balancing and update strategies are described and discussed for they are important factors related to performance. We believe many researchers will get benefits from our work for further studies. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Zhang, Chong; Xiao, Weidong; Tang, Daquan; Tang, Jiuyang] Natl Univ Def Technol, Technol Natl Def Sci & Technol Key LAB C4ISR, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Zhang, C (corresponding author), Natl Univ Def Technol, Technol Natl Def Sci & Technol Key LAB C4ISR, Changsha 410073, Hunan, Peoples R China.
EM leocheung8286@yahoo.com; wilsonshaw@vip.sina.com; dqtang@vip.sina.com;
   jiuyang_tang@sina.com
RI xiao, wei/KCK-6954-2024
CR [Anonymous], 1990, The design and analysis of spatial data structures
   [Anonymous], 1985, COMPUTATIONAL GEOMET, DOI DOI 10.1007/978-1-4612-1098-6
   Aspnes J, 2003, SIAM PROC S, P384
   Banaei-Kashani F., 2004, ACM C INF KNOWL MAN
   Batko M, 2005, LECT NOTES COMPUT SC, V3664, P25
   BECKMANN N, 1990, SIGMOD REC, V19, P322, DOI 10.1145/93605.98741
   BENTLEY JL, 1975, COMMUN ACM, V18, P509, DOI 10.1145/361002.361007
   Bertino E, 1999, IEEE T KNOWL DATA EN, V11, P17, DOI 10.1109/69.755611
   Bertino E., 1997, Indexing Techniques for Advanced Database Systems
   Bharambe A.R., 2004, ACM SIGCOMM 04
   Cai M., 2003, INT WORKSH GRID COMP
   Castelli S., 2008, P 27 C COMPUTER COMM, P1714, DOI DOI 10.1109/INF0C0M.2008.233
   Chen DH, 2006, LECT NOTES COMPUT SC, V4027, P87, DOI 10.1007/11766254_8
   Crainiceanu Adina., 2004, P 7 INT WORKSHOP WEB, P25, DOI DOI 10.1145/1017074.1017082
   Cui B, 2007, LECT NOTES COMPUT SC, V4505, P127
   Doulkeridis C, 2007, IEEE J SEL AREA COMM, V25, P25, DOI 10.1109/JSAC.2007.070104
   Doulkeridis Christos., 2007, Proc. of the 33rd VLDB Conf, P986
   FALCHI F, 2005, P DBISP2P, P126
   Faloutsos C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P247, DOI 10.1145/73721.73746
   Faloutsos C., 1986, SIGMOD Record, V15, P227, DOI 10.1145/16856.16877
   Finkel R. A., 1974, Acta Informatica, V4, P1, DOI 10.1007/BF00288933
   Gaede V, 1998, ACM COMPUT SURV, V30, P170, DOI 10.1145/280277.280279
   Ganesan P., 2004, WebDB
   Ganesan P., 2004, P 30 INT C VER LARG, P444
   Gao J, 2007, IEEE ICC, P1867, DOI 10.1109/ICC.2007.311
   Garcia-Molina H, 2003, C DAT ENG ICDE
   Guttman A., 1984, ACM SIGMOD, P47, DOI DOI 10.1145/971697.602266
   Hye-Young Kang, 2004, Web and Wireless Geographical Information Systems. 4th International Workshop, W2GIS 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3428), P136
   Jagadish H.V., 2005, Proceedings of the 31st International Conference on Very Large Data Bases (VLDB), P661
   Jagadish H.V., 2006, SIGMOD
   Jagadish HV, 2005, ACM T DATABASE SYST, V30, P364, DOI 10.1145/1071610.1071612
   JAGADISH HV, 1990, SIGMOD REC, V19, P332, DOI 10.1145/93605.98742
   Jagadish HV., 2006, Proc. Intl. Conf. on Data Engineering (ICDE), P34, DOI [10.1109/icde.2006.169, DOI 10.1109/ICDE.2006.169]
   Kalnis P, 2006, INFORM SYST, V31, P57, DOI 10.1016/j.is.2004.09.003
   Kamel I., 1994, VLDB, P500
   Kantere V, 2009, IEEE T KNOWL DATA EN, V21, P287, DOI 10.1109/TKDE.2008.139
   Kleinberg J., 2000, Proceedings of the Thirty Second Annual ACM Symposium on Theory of Computing, P163, DOI 10.1145/335305.335325
   Korn F., 2000, ACM SIGMOD
   Lee H., 2004, INT WORKSH DAT INF S
   Li M, 2006, PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, P12, DOI 10.1109/ICNP.2006.320194
   Liu B, 2005, INT CON DISTR COMP S, P155, DOI 10.1109/ICDCS.2005.75
   Lua EK, 2005, IEEE COMMUN SURV TUT, V7, P72, DOI 10.1109/COMST.2005.1610546
   Milojicic Dejan S., 2002, Technical Report
   Mondal A, 2004, LECT NOTES COMPUT SC, V3268, P516
   Nam B., 2006, INT PAR DISTR PROC S
   Ntarmos N., 2006, P 4 INT WORKSH DAT I, P111
   Okabe A., 2000, Spatial tessellations: concepts and applications of Voronoi diagrams, V43
   Orenstein Jack A., 1984, P 3 ACM SIGACT SIGMO, P181, DOI 10.1145/588011.588037
   Rao Ananth., 2003, IPTPS
   Ratnasamy S, 2001, ACM SIGCOMM COMP COM, V31, P161, DOI 10.1145/964723.383072
   Roussopoulos N., 1995, SIGMOD
   Rowstron Antony., 2001, PASTRY SCALABLE DIST
   Sahin O.D., 2005, WISE
   Samet H., 1990, The Design and Analysis of Spatial Data Structures
   Schmidt C., 2003, IEEE INT S HIGH PERF
   Shu Y., 2005, IEEE INT C PEER TO P
   Stanoi I., 2000, SIGMOD WORKSH RES IS
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Sun X., 2007, P WWW, P1191
   Surana S, 2006, PERFORM EVALUATION, V63, P217, DOI 10.1016/j.peva.2005.01.003
   Tang YZ, 2009, INT CON DISTR COMP S, P191, DOI 10.1109/ICDCS.2009.30
   Tanin E, 2007, VLDB J, V16, P165, DOI 10.1007/s00778-005-0001-y
   Tran D.A., 2008, IEEE INT PAR DISTR P
   UHLMANN JK, 1991, INFORM PROCESS LETT, V40, P175, DOI 10.1016/0020-0190(91)90074-R
   Vu QH, 2009, LECT NOTES COMPUT SC, V5704, P498
   Wang J., 2010, ACM INT C MAN DAT SI
   Wei X., 2006, INT S PAR DISTR COMP
   Yang C., 2001, ICDE
   Yin WK, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON NETWORK INFRASTRUCTURE AND DIGITAL CONTENT, PROCEEDINGS, P393, DOI 10.1109/ICNIDC.2009.5360887
   Yu XP, 2007, IEEE INT CONF CON AU, P236
   Zezula P, 2006, INFOSCALE
   ZHANG C, 2004, TR70304 PRINC U
   Zhang R, 2009, FUTURE GENER COMP SY, V25, P77, DOI 10.1016/j.future.2008.02.010
   Zhao BY, 2004, IEEE J SEL AREA COMM, V22, P41, DOI 10.1109/JSAC.2003.818784
   Zhuge H, 2008, IEEE T PARALL DISTR, V19, P145, DOI 10.1109/TC.2007.70725
   Zuo HY, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P250, DOI 10.1109/HPCC.2008.20
NR 76
TC 19
Z9 21
U1 0
U2 7
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD DEC
PY 2011
VL 84
IS 12
BP 2348
EP 2362
DI 10.1016/j.jss.2011.07.027
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840CE
UT WOS:000296415100025
DA 2024-07-18
ER

PT J
AU Nakagawa, EY
   Ferrari, FC
   Sasaki, MMF
   Maldonado, JC
AF Nakagawa, Elisa Y.
   Ferrari, Fabiano C.
   Sasaki, Mariela M. F.
   Maldonado, Jose C.
TI An aspect-oriented reference architecture for Software Engineering
   Environments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software Engineering Environment; Software architecture; Reference
   architecture; Aspect orientation; Software testing
AB Reusable and evolvable Software Engineering Environments (SEES) are essential to software production and have increasingly become a need. In another perspective, software architectures and reference architectures have played a significant role in determining the success of software systems. In this paper we present a reference architecture for SEEs, named RefASSET, which is based on concepts coming from the aspect-oriented approach. This architecture is specialized to the software testing domain and the development of tools for that domain is discussed. This and other case studies have pointed out that the use of aspects in RefASSET provides a better Separation of Concerns, resulting in reusable and evolvable SEEs. (C) 2011 Elsevier Inc. All rights reserved.
C1 [Nakagawa, Elisa Y.; Ferrari, Fabiano C.; Sasaki, Mariela M. F.; Maldonado, Jose C.] Univ Sao Paulo, Dept Comp Syst, Sao Carlos, SP, Brazil.
C3 Universidade de Sao Paulo
RP Nakagawa, EY (corresponding author), Univ Sao Paulo, Dept Comp Syst, Sao Carlos, SP, Brazil.
EM elisa@icmc.usp.br
RI Ferrari, Fabiano Cutigi/AAC-1392-2019; Maldonado, José
   Carlos/E-9290-2011; Isec, Inct/I-2409-2013
OI Ferrari, Fabiano Cutigi/0000-0002-7339-8529; Nakagawa, Elisa
   Yumi/0000-0002-7754-4298
FU FAPESP; CNPq; CAPES; European Community [IST-FP6-IP-034763]
FX This work is supported by the Brazilian funding agencies FAPESP, CNPq
   and CAPES, and by European Community (QualiPSo Research Project - Grant:
   IST-FP6-IP-034763).
CR ALDAWUD O, 2003, 3 INT WORKSH ASP OR
   Ambriola V., 1990, SIGSOFT Software Engineering Notes, V15, P183, DOI 10.1145/99278.99294
   ANDERSEN EP, 1992, LECT NOTES COMPUT SC, V615, P133, DOI 10.1007/BFb0053034
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Barbosa Ellen F., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P697
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BOUDIER G, 1989, SIGPLAN NOTICES, V24, P248
   CONRADI R, 1991, SOFTWARE ENG J, V6, P275, DOI 10.1049/sej.1991.0030
   Cuesta CE, 2006, ELECTRON NOTES THEOR, V154, P25, DOI 10.1016/j.entcs.2005.12.031
   Dai L., 2005, Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, P178
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Eckerson W. W., 1995, OPEN INFORMATION SYS, V3, P1
   *ECMA, 1993, NIST SPEC PUBL
   EICKELMANN NS, 1996, ICSE 96, P353
   EKLUND U, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Fayad M., 2000, Domain-specific application frameworks
   Ferraro FR, 2010, ASTROPHYSICS SPACE, P51, DOI 10.1007/978-90-481-3400-7_10
   FONTOURA M, 2002, OBJECT TECHNOLOGY SE
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   GARLAN D, 1987, THESIS CARNEGIE MELL
   GREENWOOD P, 2003, REFERENCE ARCHITECTU
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Grundy J, 2004, PROC INT CONF SOFTW, P768, DOI 10.1109/ICSE.2004.1317528
   HARRISON W, 2000, ICSE 00, P261
   Herrmann S, 2003, LECT NOTES COMPUT SC, V2591, P248
   HERRMANN S, 2007, 03 TU BERL
   HERRMANN S, 2000, OOPSLA 00, P188
   HERRMANN S, 2002, THESIS TECHNICAL U B
   *IEEE, 1998, 8291998 IEEE
   *ISO, 1995, 12207 ISOIEC
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Laddad R, 2003, IEEE SOFTWARE, V20, P90, DOI 10.1109/MS.2003.1241372
   LAU Y, 2007, ICCIT 2007, P450
   LI N, 2009, MUT 2009 ICST 2009, P220, DOI DOI 10.1109/ICSTW.2009.30
   MA YS, 2006, ICSE 06, P827
   Maldonado J.C., 2000, MUT 2000 S TOOL SESS, P113
   MERSON P, 2005, EARL ASP WORKSH OOPS
   MISURDA J, 2005, ICSE 05
   Nakagawa Elisa Yumi, 2008, IEEE Latin America Transactions, V6, P260, DOI 10.1109/TLA.2008.4653856
   NAKAGAWA EY, 2007, AARCH 07 AOSD 07 VAN, P1
   NAKAGAWA EY, 2006, THESIS U SAO PAULO S
   NAVARRO E, 2007, WICSA 07 JAN 2007, P23
   *OSGI ALL, 2011, OSG ALL SPEC ON LIN
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   OSSHER H, 2000, SACT 00, P1
   PINTO M, 2007, EARL ASP ICSE 07, P5
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   RUI W, 2009, WCSE 09, P362
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   *SOFTW ENG I, 2011, COMM SOFTW ARCH DEF
   Sommerville I, 2001, Software Engineering
   TAYLOR RN, 1988, ACM SIGSOFT 88, P1
   Turner CR, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P162, DOI 10.1109/IWSSD.1998.667935
   VINCENZI AMR, 2005, LATW 05 MARCH 2005 S
   WASSERMAN AI, 2004, WODISEE 04 ICSE 04, P65
   WASSERMAN AI, 1990, INT WORKSH SOFT ENG, P137
NR 59
TC 18
Z9 19
U1 0
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2011
VL 84
IS 10
BP 1670
EP 1684
DI 10.1016/j.jss.2011.04.052
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 816BF
UT WOS:000294573000007
DA 2024-07-18
ER

PT J
AU Jadhav, AS
   Sonar, RM
AF Jadhav, Anil S.
   Sonar, Rajendra M.
TI Framework for evaluation and selection of the software packages: A
   hybrid knowledge based system approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software evaluation; Software selection; Knowledge based system
ID SIMULATION SOFTWARE; EXPERT-SYSTEM; CRITERIA; QUALITY
AB Evaluation and selection of the software packages is complicated and time consuming decision making process. Selection of inappropriate software package can turn out to be costly and adversely affects business processes and functioning of the organization. In this paper we describe (i) generic methodology for software selection, (ii) software evaluation criteria, and (iii) hybrid knowledge based system (HKBS) approach to assist decision makers in evaluation and selection of the software packages. The proposed HKBS approach employs an integrated rule based and case based reasoning techniques. Rule based reasoning is used to capture user needs of the software package and formulate a problem case. Case based reasoning is used to retrieve and compare candidate software packages with the user needs of the package. This paper also evaluates and compares HKBS approach with the widely used existing software evaluation techniques such as analytic hierarchy process (AHP) and weighted scoring method (WSM). (C) 2011 Elsevier Inc. All rights reserved.
C1 [Jadhav, Anil S.] Sinhgad Inst Management, Dept Comp, Pune 411041, Maharashtra, India.
   [Sonar, Rajendra M.] Indian Inst Technol, Shailesh J Mehta Sch Management, Bombay 400076, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Jadhav, AS (corresponding author), Sinhgad Inst Management, Dept Comp, Pune 411041, Maharashtra, India.
EM a_s_jadhav74@yahoo.co.in; rm_sonar@iitb.ac.in
RI Jadhav, Anil/D-6706-2018
OI Jadhav, Anil/0000-0002-2684-1137
CR AAMODT A, 1994, AI COMMUN, V7, P39
   Adhikari A., 2004, Journal of International Accounting, Auditing and Taxation, V13, P53, DOI [10.1016/j.intaccaudtax.2004.02.001, DOI 10.1016/J.INTACCAUDTAX.2004.02.001]
   Andreou AS, 2007, INFORM SOFTWARE TECH, V49, P122, DOI 10.1016/j.infsof.2006.03.007
   [Anonymous], SEKE 02 ACM
   [Anonymous], P 10 INT WORKSH SOFT
   Arditi D., 1991, PROJECT MANAGEMENT, V9, P39
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Avramenko Y, 2006, COMPUT CHEM ENG, V30, P548, DOI 10.1016/j.compchemeng.2005.10.011
   BERGMANN R, 2003, LNCS LNAI, V1612, P35
   Chan CW, 2000, EXPERT SYST APPL, V18, P125, DOI 10.1016/S0957-4174(99)00058-5
   CHAU PYK, 1995, INFORM MANAGE, V29, P71, DOI 10.1016/0378-7206(95)00016-P
   Cochran JK, 2005, COMPUT OPER RES, V32, P153, DOI 10.1016/S0305-0548(03)00209-0
   Collier K., 1999, P 32 HAW INT C SYST, P1
   Colombo E, 2004, REQUIR ENG, V9, P186, DOI 10.1007/s00766-003-0184-y
   Franch X., 2003, USING QUALITY MODELS, P34
   Godse M, 2009, COMM COM INF SC, V31, P268
   GRAU G, 2004, P 30 EUROMICRO C IEE
   Hlupic V, 1996, COMPUT INTEGR MANUF, V9, P49, DOI 10.1016/0951-5240(95)00037-2
   Hlupic V, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P720
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   JARKE M, 1985, COMPUT SURV, V17, P313, DOI 10.1145/5505.5506
   Kathuria R, 1999, OMEGA-INT J MANAGE S, V27, P605, DOI 10.1016/S0305-0483(99)00029-8
   Kiper JD, 1997, J VISUAL LANG COMPUT, V8, P175, DOI 10.1006/jvlc.1996.0034
   KITCHENHAM BA, 1996, ACM SIGSOFT NOTES
   KIZZORT B, 2001, SELECTION COMPONENTS
   Kolodner J.L., 1993, Case-Based Reasoning
   Kontio J, 1996, CASCON 96 C TOR CAN
   Kunda D, 2003, LECT NOTES COMPUT SC, V2693, P64
   Lai VS, 1999, INFORM MANAGE-AMSTER, V36, P221, DOI 10.1016/S0378-7206(99)00021-X
   LEBLANC LA, 1989, INFORM MANAGE, V17, P49, DOI 10.1016/0378-7206(89)90054-2
   Leung KRPH, 2002, INFORM SOFTWARE TECH, V44, P703, DOI 10.1016/S0950-5849(02)00118-0
   Liao SH, 2005, EXPERT SYST APPL, V28, P93, DOI 10.1016/j.eswa.2004.08.003
   Lin H.-Y., 2006, EXPERT SYSTEMS APPL
   Mclvor R.T., 2000, Integrated Manufacturing Systems, V11, P295, DOI DOI 10.1108/09576060010335573
   Mohamed A, 2004, LECT NOTES COMPUT SC, V3096, P43
   Mollaghasemi M., 1997, TECHNICAL BRIEFING M
   NCUBE C, 2002, P 1 INT C COTS BAS S, P176
   Ngai E.W.T., 2005, EXPERT SYSTEM APPL, P1
   NIKOUKARAN J, 1998, P 1998 WINT SIM C
   OCHS M, 2001, P 7 INT SOFTW METR S, P285
   Oh KS, 2003, LECT NOTES COMPUT SC, V2713, P626
   Ossadnik W, 1999, EUR J OPER RES, V118, P578, DOI 10.1016/S0377-2217(98)00321-X
   Pal K, 1997, DATA BASE ADV INF SY, V28, P48
   PATEL N, 2002, 24 INT C IT INT CAVT
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   PLESSIS AL, 1993, INFORM MANAGE, V25, P93
   REED CN, 1982, COMPUT ENVIRON URBAN, V7, P329, DOI 10.1016/0198-9715(82)90020-5
   REIMANN BC, 1985, COMMUNICATIONS ACM, V28
   Ricci F, 2002, LECT NOTES ARTIF INT, V2416, P613
   Ricci F, 2007, IEEE INTELL SYST, V22, P22, DOI 10.1109/MIS.2007.43
   SHTUB A, 1988, COMPUT INTEGR MANUF, V1, P211, DOI 10.1016/0951-5240(88)90053-5
   SONAR RM, 2007, INT J APPL SCI ENG T, V4
   SONAR RM, 2004, P 6 IASTED INT C INT
   Stahl A, 2006, LECT NOTES ARTIF INT, V4106, P355
   Stylianou A.C., 1992, COMMUNICATIONS ACM, V32
   TAN KH, 2005, INT J PROD ECON, V27, P605
   Tewoldeberhan TW, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P67, DOI 10.1109/WSC.2002.1172870
   TOSHTZAR M, 1988, MATH COMPUT MODEL, V11, P276, DOI 10.1016/0895-7177(88)90498-0
   Vlahavas I, 1999, KNOWL-BASED SYST, V12, P183, DOI 10.1016/S0950-7051(99)00031-3
   Yoon P., 1995, MULTIPLE ATTRIBUTE D
NR 60
TC 74
Z9 85
U1 0
U2 16
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2011
VL 84
IS 8
BP 1394
EP 1407
DI 10.1016/j.jss.2011.03.034
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785KJ
UT WOS:000292227600011
DA 2024-07-18
ER

PT J
AU Dawes, B
   Chin, KW
AF Dawes, Brett
   Chin, Kwan-Wu
TI A comparison of deterministic and probabilistic methods for indoor
   localization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Localization; IEEE 802.11; Wireless local area networks; RSSI
   fingerprinting
AB Received signal strength indication fingerprinting (RSSIF) is an indoor localization technique that exploits the prevalence of wireless local area networks (WLANs). Past research into RSSIF systems has seen the development of a number of algorithmic methods that provide effective indoor positioning. A key limitation, however, is that the performance of these methods is heavily dependent on practical implementation parameters and the nature of the test-bed environment. As a result, past research has tend to only compare algorithms of the same paradigm using a specific test-bed, and thus making it difficult to judge and compare their performance objectively. There is, therefore, a critical need for a study that addresses this gap in the literature. To this end, this paper compares a range of RSSIF methods, drawn from both probabilistic and deterministic paradigms, on a common test-bed. We evaluate their localization efficiency and accuracy, and also propose a number of improvements and modifications. In particular, we report on the impact of dense and transient access points (APs) - two problems that stem from the popularity of WLANs. Our results show methods that average the distance to the k nearest neighbors in signal space perform well with reduced dimensions. Moreover, we show the benefits of using the standard deviation of RSSI values to exclude transient APs. Other than that, we outline a shortcoming of the Bayesian algorithm in uncontrolled environments with highly variable APs and RSSI values, and propose an extension that uses a mode filter to restore its accuracy with increasing samples. (C) 2010 Elsevier Inc. All rights reserved.
C1 [Chin, Kwan-Wu] Univ Wollongong, Sch Elect COmp & Telecommun Engn, Wollongong, NSW, Australia.
C3 University of Wollongong
RP Chin, KW (corresponding author), Univ Wollongong, Sch Elect COmp & Telecommun Engn, Northfields Ave, Wollongong, NSW, Australia.
EM bmd034@uow.edu.au; kwanwu@uow.edu.au
RI Chin, Kwan-Wu/AAY-6633-2021
OI Chin, Kwan-Wu/0000-0003-1547-9272
CR [Anonymous], 2000, P IEEE INFOCOM 2000
   [Anonymous], 2000, Enhancements to the RADAR user location and tracking system (Technical Report MSR-TR-2000-12)
   [Anonymous], 2005, THESIS
   BARDRAML JE, 2006, LECT NOTES COMPUTER
   BARSOCCHI P, 2009, IEEE ICC DRESD GERM
   Brunato M, 2005, COMPUT NETW, V47, P825, DOI 10.1016/j.comnet.2004.09.004
   GETTING IA, 1993, IEEE SPECTRUM, V30, P36, DOI 10.1109/6.272176
   HAARTSEN J, 1998, ACM MOBILE COMPUTING, V2
   HAEBERLEN A, 2004, ACM MOBICOM PHIL US
   HARTER A, 1999, ACM MOBICOM SEATTL U
   HOSSAIN M, 2007, IEEE MASS PIS IT OCT
   LADD A, 2002, IEEE MOBICOM ATL US
   LIM H, 2006, IEEE INFOCOM BARC SP
   *MICR, WLAN API SOFTW DOC
   ORR RJ, 2000, ACM C HUM FACT COMP
   PRASITHSANGAREE P, 2002, IEEE PIMRC PORT SEPT
   PRIYANTHA N, 2000, ACM MOBICOM BOST US
   Roos T., 2002, International Journal of Wireless Information Networks, V9, P155, DOI 10.1023/A:1016003126882
   SAHA S, 2003, IEEE WCNC 2003 NEW O
   *SOURCEFORGE, WIFI CARD MAN
   VARSHAVSKY A, 2007, ELSEVIER PERVASIVE M, V3, P698
   WANG R, 1992, ACM T INFORM SYSTEMS, V10, P91
   Xiang Z, 2004, IBM J RES DEV, V48, P617, DOI 10.1147/rd.485.0617
   Youssef M, 2003, IEEE WCNC, P1974
   Zagami JM, 1998, IEEE COMMUN MAG, V36, P66, DOI 10.1109/35.667415
NR 25
TC 64
Z9 72
U1 0
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAR
PY 2011
VL 84
IS 3
BP 442
EP 451
DI 10.1016/j.jss.2010.11.888
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 728XG
UT WOS:000287907200009
DA 2024-07-18
ER

EF