FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Xie, XD
   Li, ZH
   Chen, JF
   Zhang, Y
   Wang, XX
   Kudjo, PK
AF Xie, Xiaodong
   Li, Zhehao
   Chen, Jinfu
   Zhang, Yue
   Wang, Xiangxiang
   Kudjo, Patrick Kwaku
TI MUT Model: a metric for characterizing metamorphic relations diversity
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Metamorphic testing; Metamorphic relation; Similarity; Diversity
AB Metamorphic testing emerged as a solution to the Oracle problem, with its foundation deeply rooted in the concept of Metamorphic Relations (MRs). Researchers have made an intriguing discovery that certain diverse MRs exhibit similar fault detection capabilities as the test oracle. However, defining the criteria for diverse MRs has posed a challenge. Traditional metrics like Mutation Score (MS) and Fault Detection Rate (FDR) fail to assess the diversity of MRs. This paper introduces the MUT Model as a foundational framework for analyzing the "MR Diversity" between a pair of MRs. The word "diversity" in this paper pertains to the differences in the types of faults that two MRs are inclined to detect. The experimental findings indicate that by harnessing posterior knowledge, specifically by analyzing the MUT Model, it is possible to derive prior knowledge that can aid in the construction of Metamorphic Relations. Most importantly, the MUT Model may draw conclusions that violate intuition, exposing more details of the core essence of MR Diversity. Moreover, the concept of MR Diversity serves as a basis for MR selection, resulting in enhanced fault detection capabilities compared to the conventional MS-based approach. Additionally, it offers valuable insights into the construction of composite metamorphic relations, with the goal of amplifying their fault detection abilities beyond those of their individual MR components.
C1 [Xie, Xiaodong; Zhang, Yue; Wang, Xiangxiang] Huaqiao Univ, Sch Comp Sci & Technol, Xiamen 361021, Peoples R China.
   [Li, Zhehao; Chen, Jinfu; Kudjo, Patrick Kwaku] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
   [Kudjo, Patrick Kwaku] Wisconsin Int Univ Coll, Dept Business Comp, Accra, Ghana.
C3 Huaqiao University; Jiangsu University
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
EM xiaodongxie@hqu.edu.cn; 2212308057@stmail.ujs.edu.cn;
   jinfuchen@ujs.edu.cn; 496112817@qq.com; 1575370357@qq.com;
   pat.kudjo@wiuc-ghana.edu.gh
FU National Natural Science Foundation of China
FX No Statement AvailableDAS:The data of this study is openly available in
   Github at https://github.com/VinylLee/MUTModel.
CR Asrafi M., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P147, DOI 10.1109/SSIRI.2011.21
   Binder RV., 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Cao YX, 2013, INT CONF QUAL SOFTW, P153, DOI 10.1109/QSIC.2013.43
   Chan F. T., 1998, P IASTED INT C SOFTW
   Chen TY, 2020, Arxiv, DOI arXiv:2002.12543
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   Dong Guowei, 2008, Journal of Southeast University (English Edition), V24, P437
   Hoffman D., 1999, Software Testing and Quality Engineering, V1, P28
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   Liu Song, 2022, 2022 4th International Conference on Frontiers Technology of Information and Computer (ICFTIC), P290, DOI 10.1109/ICFTIC57696.2022.10075300
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   Orso A., 2014, FUTURE SOFTWARE ENG, P117, DOI [DOI 10.1145/2593882.2593885, 10.1145/2593882.2593885]
   Qiu K, 2022, IEEE T SOFTWARE ENG, V48, P1001, DOI 10.1109/TSE.2020.3009698
   Sadi MS, 2011, J BIOINF COMPUT BIOL, V9, P729, DOI 10.1142/S021972001100563X
   [王瑢 Wang Rong], 2012, [计算机科学, Computer Science], V39, P115
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wu Peng, 2005, Journal of Software, V16, P1210, DOI 10.1360/jos161210
   [谢晓东 Xie Xiaodong], 2016, [电子学报, Acta Electronica Sinica], V44, P1196
   Xie XY, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P1, DOI [10.1145/2896971.2896976, 10.1109/MET.2016.009]
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
NR 24
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 17
PY 2024
DI 10.1007/s11219-024-09689-x
EA JUL 2024
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS4W7
UT WOS:001270470100001
DA 2024-08-05
ER

PT J
AU Yin, JQ
   Chen, SN
   Lv, YX
   Zhu, HB
AF Yin, Jiaqi
   Chen, Sini
   Lv, Yixiao
   Zhu, Huibiao
TI Enhancement and formal verification of the ICC mechanism with a sandbox
   approach in android system
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Android; Inter-Component Communication (ICC); Inter-App Communication
   (IAC); Communicating Sequential Process (CSP); PAT with C#
AB Inter-Component Communication (ICC) plays a crucial role in facilitating information exchange and functionality integration within the complex ecosystem of Android systems. However, the security and safety implications arising from ICC interactions pose significant challenges. This paper is an extended work building upon our previously published research that focuses on the verification of safety properties in the ICC mechanism. We address the previously observed issues of data leakage and privilege escalation by incorporating a sandbox mechanism and permission control. The sandbox mechanism provides an isolated and controlled environment in which ICC components can operate while permission control mechanisms are introduced to enforce fine-grained access controls, ensuring that only authorized entities have access to sensitive resources. We further leverage formal methods, specifically communicating sequential processes (CSP), to verify several properties of the enhanced ICC mechanism. By employing CSP, we aim to systematically model and analyze the flow of information, the behavior of components, and the potential vulnerabilities associated with the enhanced ICC mechanism. The verification results highlight the effectiveness of our approach in enhancing the security and reliability of ICC mechanisms, ultimately contributing to the development of safer and more trustworthy Android Systems.
C1 [Yin, Jiaqi] Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
   [Chen, Sini; Lv, Yixiao; Zhu, Huibiao] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
   [Yin, Jiaqi] NPU, Yangtze River Delta Res Inst, Taicang, Peoples R China.
C3 Northwestern Polytechnical University; East China Normal University
RP Chen, SN; Zhu, HB (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
EM 52265902002@stu.ecnu.edu.cn; hbzhu@sei.ecnu.edu.cn
FU National Natural Science Foundation of China [62032024]; Digital Silk
   Road" Shanghai International Joint Lab of Trustworthy Intelligent
   Software [22510750100]; Shanghai Trusted Industry Internet Software
   Collaborative Innovation Center; China Basic Research Programs of
   Taicang [TC2022JC14]
FX This work was partially supported by the National Natural Science
   Foundation of China (No. 62032024), the "Digital Silk Road" Shanghai
   International Joint Lab of Trustworthy Intelligent Software (No.
   22510750100), Shanghai Trusted Industry Internet Software Collaborative
   Innovation Center, and China Basic Research Programs of Taicang (No.
   TC2022JC14).
CR Almomani IM, 2020, IEEE ACCESS, V8, P216671, DOI 10.1109/ACCESS.2020.3041432
   Au K. W. Y., 2012, Proceedings of the 2012 ACM Conference on Computer and Communications Security, CCS '12, ACM, New York, NY, USA, P217
   Bhandari S, 2017, COMPUT SECUR, V70, P392, DOI 10.1016/j.cose.2017.07.002
   Biswas S., 2018, INT C CYB SEC COMP S, P50
   Bugiel S., 2012, P NETW DISTR SYST SE, V17, P19
   Chin Erika, 2011, MobiSys, P239, DOI DOI 10.1145/1999995.2000018
   da Costa FH, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111092
   Developers A, DEVELOPER GUIDES INT
   DiMarzio J. F., 2008, ANDROID TRADE PROGRA
   Fang ZR, 2014, COMPUT SECUR, V43, P205, DOI 10.1016/j.cose.2014.02.007
   Gadient P, 2019, EMPIR SOFTW ENG, V24, P3046, DOI 10.1007/s10664-018-9673-y
   Hoare C.A.R, 1985, Communicating Sequential Processes
   Lowe G, 1997, IEEE T SOFTWARE ENG, V23, P659, DOI 10.1109/32.637148
   Lv YX, 2023, 2023 IEEE 34TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS, ISSREW, P89, DOI 10.1109/ISSREW60843.2023.00053
   Neuner S., 2014, PREPRINT
   Samhi J, 2021, PROC INT CONF SOFTW, P1398, DOI 10.1109/ICSE43902.2021.00126
   Sammler M, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3371100
   Vasilescu M, 2014, ROEDUNET IEEE
   Xu J., 2021, 7 C ENG COMP BAS SYS
   Zhou X., 2013, P 2013 ACM SIGSAC C, P1017, DOI DOI 10.1145/2508859.2516661
NR 20
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1175
EP 1202
DI 10.1007/s11219-024-09684-2
EA JUN 2024
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001258034600001
DA 2024-08-05
ER

PT J
AU Looks, H
   Fangmann, J
   Thomaschewski, J
   Escalona, MJ
   Schön, EM
AF Looks, Hanna
   Fangmann, Jannik
   Thomaschewski, Joerg
   Escalona, Maria-Jose
   Schoen, Eva-Maria
TI Towards improving agility in public administration
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Agile; Agile transformation; Agile values; e-Government; Measurement of
   agility; Public administration; Team level
ID IMPLEMENTATION
AB In times of crises, such as the refugee crisis or the corona pandemic, the workload in public administrations increases because of the demands of citizens or short-term legal changes. In addition, there is an increasing need for digitalization or to be able to react flexibly to changes. Agile process models and agile practices are appropriate to overcome these challenges. The objective of this paper is to investigate how public administrations can measure their degree of agility to identify potential for improving it. The authors conducted a descriptive single-case study which included multiple units of analysis in a public administration in Germany. The case study was supported by their questionnaire for measuring the degree of agility. One outcome of this study is a conceptual framework that can be used to drive agile transformation in public administrations by continuously measuring agility. Therefore, a questionnaire for measuring agility at team level in public administrations has been developed. The application of the questionnaire in three teams provide insights into dysfunctionality in the interdisciplinary teams as well as optimization potential in terms of affinity to change. The adoption of agility in public administration is a challenge, given that resistance to change is still prevalent. A transformational change is a constant journey, and therefore, the measurement of progress plays an important role in the continuous improvement of an organization. The applied approach delivers high potential for improvement in terms of agility and provides interesting insights for both practitioners and academics.
C1 [Looks, Hanna; Escalona, Maria-Jose] Univ Seville, Seville, Spain.
   [Fangmann, Jannik; Thomaschewski, Joerg; Schoen, Eva-Maria] Univ Appl Sci Emden Leer, Emden, Germany.
C3 University of Sevilla
RP Looks, H (corresponding author), Univ Seville, Seville, Spain.
EM hanna.looks@ux-researchgroup.com
RI Looks, Hanna/AAR-7432-2021; Thomaschewski, Jörg/D-5725-2016; Escalona,
   Maria Jose/G-3900-2010; Schon, Eva-Maria/G-3916-2015
OI Thomaschewski, Jörg/0000-0001-6364-5808; Escalona, Maria
   Jose/0000-0002-6435-1497; Schon, Eva-Maria/0000-0002-0410-9308; Looks,
   Hanna/0000-0001-8196-9603
FU Universidad de Sevilla
FX No Statement Available
CR Anderson D.J., 2010, Kanban-Successful Evolutionary Change for your Technology Business
   [Anonymous], 2010, 2010 43 HAW INT C SY
   [Anonymous], 2007, P EUR MED CONF INF S
   Baxter P, 2008, QUAL REP, V13, P544
   Dahmardeh N, 2011, IRAN J FUZZY SYST, V8, P95
   Digital.ai, 2020, 14 STAT AG
   FANGMANN J, 2020, 15 IBERIAN C INFORM, P1
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Fowler M., 2001, Software Development, V9, P28
   Gather U., 1980, MEDIZINISCHE INFORMA, V20, P27
   Goffin K, 2019, J PROD INNOVAT MANAG, V36, P586, DOI 10.1111/jpim.12492
   Gren L, 2015, J SYST SOFTWARE, V107, P38, DOI 10.1016/j.jss.2015.05.008
   Grohs, 2008, 10 JAHRE NEUES STEUE
   Gupta M, 2019, INT J INFORM MANAGE, V44, P13, DOI 10.1016/j.ijinfomgt.2018.09.006
   Jain P, 2018, INT CONF RELI INFO, P812, DOI 10.1109/ICRITO.2018.8748529
   Jain P, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1177
   Janssen M, 2016, GOV INFORM Q, V33, P1, DOI 10.1016/j.giq.2016.02.003
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Lencioni P., 2002, 5 DYSFUNCTIONS TEAM
   Little J, 2013, 2013 AGILE CONFERENCE (AGILE), P74, DOI 10.1109/AGILE.2013.30
   Looks H, 2021, LECT NOTES BUS INF P, V419, P71, DOI 10.1007/978-3-030-78098-2_5
   Mashmool A., 2021, IEEE 4 INT C WORKSH, V2021, P11, DOI [10.1109/CANDO-EPE54223.2021.9667902, DOI 10.1109/CANDO-EPE54223.2021.9667902]
   Mergel I, 2018, GOV INFORM Q, V35, P291, DOI 10.1016/j.giq.2018.04.003
   Packlick J, 2007, AGILE 2007, Proceedings, P266, DOI 10.1109/AGILE.2007.55
   Patel C., 2009, International Journal of Software Engineering, V2, P3
   Qumer A, 2009, LECT NOTES BUS INF P, V20, P41
   Reichel K., 2010, REORGANISATION ALS P, DOI [10.1007/978-3-8349-6082-5, DOI 10.1007/978-3-8349-6082-5]
   Ries E, 2011, LEAN STARTUP TODAYS
   Schön EM, 2020, IEEE ACCESS, V8, P129763, DOI 10.1109/ACCESS.2020.3009101
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schön EM, 2015, INT J INTERACT MULTI, V3, P61, DOI 10.9781/ijimai.2015.358
   Schwaber K., 2020, The scrum guide
   Siakas Kerstin V., 2007, Software Process: Improvement and Practice, V12, P597, DOI 10.1002/spip.344
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   Snowden DJ, 2007, HARVARD BUS REV, V85, P68
   So C, 2009, LECT NOTES BUS INF P, V31, P83
   Steinbrecher W., 2018, AGILE VERWALTUNG
   Stray V, 2020, LECT NOTES COMPUT SC, V12562, P3, DOI 10.1007/978-3-030-64148-1_1
   Torrecilla-Salinas C J., 2013, CEUR Workshop Proceedings, V1017, P1
   Yin A., 2011, 6 INT C SOFTW ENG AD, V2011, P1
   Yin R. K., 2003, Case study research: Design and methods
NR 42
TC 1
Z9 1
U1 7
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD MAR
PY 2024
VL 32
IS 1
BP 283
EP 311
DI 10.1007/s11219-023-09657-x
EA JAN 2024
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HK4A2
UT WOS:001145086900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Lemos, O
   Silveira, F
   Ferrari, F
   Silva, T
   Guerra, E
   Garcia, A
AF Lemos, Otavio
   Silveira, Fabio
   Ferrari, Fabiano
   Silva, Tiago
   Guerra, Eduardo
   Garcia, Alessandro
TI Unraveling the code: an in-depth empirical study on the impact of
   development practices in auxiliary functions implementation
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Pair programming; Test-first programming; TDD; Experimental software
   engineering; Agile
ID TEST-DRIVEN DEVELOPMENT; EXTERNAL QUALITY; PRODUCTIVITY; EDUCATION
AB Auxiliary functions in software systems, often overlooked due to their perceived simplicity, play a crucial role in overall system reliability. This study focuses on the effectiveness of agile practices, specifically the pair programming and the test-first programming practices. Despite the importance of these functions, there exists a dearth of empirical evidence on the impact of agile practices on their development, raising questions about their potential to enhance correctness without affecting time-to-market. This paper aims to bridge this gap by comparing the application of agile practices with traditional approaches in the context of auxiliary function development. We conducted six experiments involving 122 participants (85 novices and 37 professionals) who used both traditional and agile methods to develop six auxiliary functions across three different domains. Our analysis of 244 implementations suggests the potential benefits of agile practices in auxiliary function development. Pair programming showed a tendency towards improved correctness, while test-first programming did not significantly extend the total development time, particularly among professionals. However, these findings should be interpreted cautiously as they do not conclusively establish that agile practices outperform traditional approaches universally. As indicated by our results, the potential benefits of agile practices may vary depending on factors such as the programmer's experience level and the nature of the functions being developed. Further research is needed to fully understand the contexts in which these practices can be most effectively applied and to address the potential limitations of our study.
C1 [Lemos, Otavio; Silveira, Fabio; Silva, Tiago] Univ Fed Sao Paulo, Sci & Technol Inst, Sao Paulo, Brazil.
   [Ferrari, Fabiano] Univ Fed Sao Carlos, Comp Dept, Sao Carlos, Brazil.
   [Guerra, Eduardo] Free Univ Bolzen Bolzano, Fac Engn, Bolzano, Italy.
   [Garcia, Alessandro] Pontif Catholic Univ Rio Janeiro, Informat Dept, Rio De Janeiro, Brazil.
C3 Universidade Federal de Sao Paulo (UNIFESP); Universidade Federal de Sao
   Carlos; Free University of Bozen-Bolzano
RP Silveira, F (corresponding author), Univ Fed Sao Paulo, Sci & Technol Inst, Sao Paulo, Brazil.
EM otavio.lemos@unifesp.br; fsilveira@unifesp.br; fcferrari@ufscar.br;
   silvadasilva@unifesp.br; guerraem@gmail.com; afgarcia@inf.puc-rio.br
FU Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP); Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq)
FX Partial financial support was received from Fundacao de Amparo a
   Pesquisa do Estado de Sao Paulo (FAPESP) and Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq).
CR Abrahamsson P, 2005, INT FED INFO PROC, V180, P227
   [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Baldassarre MT, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110937
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beck K., 2003, Test Driven Development: By Example
   Begel A., 2008, P 4 INT WORKSH COMP, P3, DOI DOI 10.1145/1404520.1404522
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Black Duck Software Inc, 2014, OPEN HUB CODE SEARCH
   Bland M., 2014, GOTO FAIL HEARTBLEED
   Brock Z., 2015, WHAT TECH CO LOT PAI
   Canfora G, 2007, J SYST SOFTWARE, V80, P1317, DOI 10.1016/j.jss.2006.11.004
   Cellan-Jones R., 2010, SONYS LEAP YEAR BUG
   Estácio BJD, 2015, INFORM SOFTWARE TECH, V63, P1, DOI 10.1016/j.infsof.2015.02.011
   Dagenais B., 2010, P 32 ACM IEEE INT C, P275, DOI DOI 10.1145/1806799.1806842
   Demir Ö, 2021, J EDUC COMPUT RES, V58, P1448, DOI 10.1177/0735633120949788
   Desai Chetan, 2008, SIGCSE Bulletin, V40, P97, DOI 10.1145/1383602.1383644
   di Bella E, 2013, IEEE T SOFTWARE ENG, V39, P930, DOI 10.1109/TSE.2012.68
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Edwards S. H., 2004, SIGCSE Bulletin, V36, P26, DOI 10.1145/1028174.971312
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Fucci D, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240502
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   George B., 2003, P 2003 ACM S APPL CO, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Ghafari M., 2020, P 14 ACMIEEE INT S E, DOI 10.1145/3382494.3410687
   Ghaffari M., 2019, 2019 INT C MAN AUT R, P1
   Guerra E, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P201, DOI 10.1016/B978-0-12-802301-3.00009-0
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Karac I, 2021, IEEE T SOFTWARE ENG, V47, P1315, DOI 10.1109/TSE.2019.2920377
   Kazerouni AM, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P407, DOI 10.1145/3287324.3287366
   Krasner H., 2021, The Cost of Poor Software Quality in the US: A 2020 Report
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   Lemos OAL, 2018, J SYST SOFTWARE, V137, P497, DOI 10.1016/j.jss.2017.02.042
   Lemos OAL, 2012, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2012.6227163
   Lemos OAL, 2011, INFORM SOFTWARE TECH, V53, P294, DOI 10.1016/j.infsof.2010.11.009
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P197, DOI 10.1007/978-3-642-04288-1_10
   Matheny K., 2015, WHY IS IT PAIR PROGR
   Meyer B., 2014, AGILE GOOD HYPE UGLY, DOI DOI 10.1007/978-3-319-05155-0
   Montgomery D. C., 2009, Design and Analysis of Experiments, DOI DOI 10.1198/TECH.2006.S372
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Myers G, 1979, Art of Software Testing
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pressman RS., 2020, SOFTWARE ENG PRACTIT
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Romano S, 2019, LECT NOTES COMPUT SC, V11915, P3, DOI 10.1007/978-3-030-35333-9_1
   Salge CAD, 2016, P ANN HICSS, P5398, DOI 10.1109/HICSS.2016.667
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Saltz JS, 2017, IEEE INT CONF BIG DA, P2348, DOI 10.1109/BigData.2017.8258189
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09895-8
   Shull F., 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-5
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sillitti A, 2012, PROC INT CONF SOFTW, P1094, DOI 10.1109/ICSE.2012.6227110
   Spence N., 2011, APPLE OFFERS ADVICE
   Sun WY, 2016, IEEE SOFTWARE, V33, P72, DOI 10.1109/MS.2015.106
   Swamidurai Rajendran, 2012, ISRN Software Engineering, DOI 10.5402/2012/516184
   Tosun A, 2021, IEEE T SOFTWARE ENG, V47, P2438, DOI 10.1109/TSE.2019.2949811
   Trikha R., 2014, PAIR PROGRAMMING YAY
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L., 2002, PAIR PROGRAMMING ILL, P71
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, DOI DOI 10.1007/978-1-4615-4625-2
   Xu F, 2024, J COMPUT HIGH EDUC, V36, P320, DOI 10.1007/s12528-023-09356-3
   Zhong BC, 2020, J EDUC COMPUT RES, V58, P220, DOI 10.1177/0735633119829191
   Zieris F, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P51, DOI 10.1109/ICSE-NIER52604.2021.00019
NR 65
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1137
EP 1174
DI 10.1007/s11219-024-09682-4
EA JUN 2024
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001254030200001
DA 2024-08-05
ER

PT J
AU Wang, SX
   Jin, BQ
   Yu, DJ
   Cheng, SH
AF Wang, Sixuan
   Jin, Baoqing
   Yu, Dongjin
   Cheng, Shuhan
TI ASDMG: business topic clustering-based architecture smell detection for
   microservice granularity
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Business topic clustering; Microservice architecture; Granularity of
   architecture; Smell detection; Code analysis
AB Microservices architecture smells can significantly affect the quality of microservices due to poor design decisions, especially the granularity smells of microservice architectures will greatly affect the quality of a microservices architecture. The state-of-the-art methods of microservice architectural granularity detection primarily focus on the service level, which lacks consideration of detailed information such as interfaces, and these methods also lack considerations about semantic information related to business logic, leading to lower accuracy in the detection results. To address these issues, we introduce ASDMG, which takes semantic information within the Abstract Syntax Tree (AST) into consideration, integrating them with data dependency to extract business topic relationships of functions. It performs interface-oriented business topic clustering, allowing comprehensive detection of granularity smells both within individual microservices as well as the overall microservice architecture. Experiments were conducted using 5 open-source microservice systems in different scales and domains. Results show that ASDMG achieves an average precision of 83.41%, an average recall of 95.84%, and an average accuracy of 95.85% in detecting architectural granularity smells. Compared to state-of-the-art methods, it achieves better detection results and can improve the quality of microservice architecture.
C1 [Wang, Sixuan; Jin, Baoqing; Yu, Dongjin; Cheng, Shuhan] Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
C3 Hangzhou Dianzi University
RP Yu, DJ (corresponding author), Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
EM sixuan@hdu.edu.cn; jinbaoqin@hdu.edu.cn; yudj@hdu.edu.cn;
   212050352@hdu.edu.cn
FU Natural Science Foundation of Zhejiang Province [LY23F020016]; National
   Natural Science Foundation of China [62372145]; Key Research and
   Development Program of Zhejiang Province [2023C03200]
FX The work was supported by the Natural Science Foundation of Zhejiang
   Province under Grant LY23F020016, the National Natural Science
   Foundation of China under Grant 62372145, and the Key Research and
   Development Program of Zhejiang Province under Grant 2023C03200. DAS:The
   data that support the findings of this study are openly available at
   https://github.com/KimBoBo233/ASDMG.
NR 0
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1341
EP 1374
DI 10.1007/s11219-024-09681-5
EA JUL 2024
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001264624800001
DA 2024-08-05
ER

PT J
AU Tao, HW
   Niu, XX
   Xu, L
   Fu, LY
   Cao, QL
   Chen, HR
   Shang, ST
   Xian, Y
AF Tao, Hongwei
   Niu, Xiaoxu
   Xu, Lang
   Fu, Lianyou
   Cao, Qiaoling
   Chen, Haoran
   Shang, Songtao
   Xian, Yang
TI A comparative study of software defect binomial classification
   prediction models based on machine learning
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software defect prediction; Machine learning; Class imbalance; Data
   sampling
AB As information technology continues to advance, software applications are becoming increasingly critical. However, the growing size and complexity of software development can lead to serious flaws resulting in significant financial losses. To address this issue, Software Defect Prediction (SDP) technology is being developed to detect and resolve defects early in the software development process, ensuring high software quality. As a result, SDP research has become a major focus for academics worldwide. This study aims to compare various machine learning-based SDP algorithm models and determine if traditional machine learning algorithms affect SDP outcomes. Unlike previous studies that aimed to identify the best prediction model for all datasets, this paper constructs SDP superiority models separately for different datasets. Using the publicly available ESEM2016 dataset, 13 machine learning classification algorithms are employed to predict software defects. Evaluation indicators such as Accuracy, AUC(Area Under the Curve), F-measure, and Running Time(RT) are utilized to assess the performance of the classification algorithms. Due to the serious class imbalance problem in this dataset, 10 sampling methods are combined with the 13 machine learning algorithms to explore the effect of sampling techniques on the performance of traditional machine learning classification models. Finally, a comprehensive evaluation is conducted to identify the best combination of sampling techniques and classification models to construct the final dominant model for SDP.
C1 [Tao, Hongwei; Niu, Xiaoxu; Xu, Lang; Fu, Lianyou; Cao, Qiaoling; Chen, Haoran; Shang, Songtao; Xian, Yang] Zhengzhou Univ Light Ind, Coll Comp Sci & Technol, Zhengzhou 450002, Peoples R China.
C3 Zhengzhou University of Light Industry
RP Tao, HW (corresponding author), Zhengzhou Univ Light Ind, Coll Comp Sci & Technol, Zhengzhou 450002, Peoples R China.
EM tthhww_811@163.com; xiaoxuniu2022@163.com; 541807220150@zzuli.edu.cn;
   fly13233761631@163.com; 17839640477@163.com; chenhaoran@zzuli.edu.cn;
   2017080@zzuli.edu.cn; 2021016@zzuli.edu.cn
RI Niu, Xiaoxu/GRN-8666-2022; Chen, Haoran/F-9555-2012
OI Niu, Xiaoxu/0000-0003-0621-8767; Tao, Hongwei/0000-0002-4722-5915
FU National Natural Science Foundation of China [61906175]; Doctoral
   Research Fund of Zhengzhou University of Light Industry [2020BSJJ067];
   Science and Technology Project of Henan Province [222102210096,
   232102210014, 242102210033, 242102211050]; Henan Province Higher
   Education Teaching Reform Research and Practice Project [2021SJGLX292]
FX This work was financially supported by the National Natural Science
   Foundation of China (61906175), the Doctoral Research Fund of Zhengzhou
   University of Light Industry (2020BSJJ067), the Science and Technology
   Project of Henan Province (222102210096, 232102210014, 242102210033,
   242102211050), and the Henan Province Higher Education Teaching Reform
   Research and Practice Project (2021SJGLX292).
CR Ali A, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00289-8
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Bakir B., 2008, INT J MECH AEROSP IN, V2, P1334
   Batool I, 2023, SOFTWARE QUAL J, V31, P1241, DOI 10.1007/s11219-023-09642-4
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bhargava N., 2013, INT J ADV RES COMPUT, V3, P1114
   Bhat NA, 2023, SOFTWARE QUAL J, V31, P917, DOI 10.1007/s11219-023-09615-7
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COX DR, 1958, J R STAT SOC B, V20, P215
   Dhall S., 2013, CONFLUENCE 2013 NEXT, P5, DOI [10.1049/cp.2013.2313, DOI 10.1049/CP.2013.2313]
   Fawagreh K, 2014, SYST SCI CONTROL ENG, V2, P602, DOI 10.1080/21642583.2014.956265
   Felix EA, 2019, IET SOFTW, V13, P479, DOI 10.1049/iet-sen.2018.5193
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Ganguly KK, 2018, 2018 JOINT 7TH INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV) AND 2018 2ND INTERNATIONAL CONFERENCE ON IMAGING, VISION & PATTERN RECOGNITION (ICIVPR), P481, DOI 10.1109/ICIEV.2018.8641006
   Ge JX, 2018, 2018 19TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P399, DOI 10.1109/SNPD.2018.8441143
   Giray G, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111537
   Gong Li-Na, 2019, Journal of Software, V30, P3090, DOI 10.13328/j.cnki.jos.005790
   HART PE, 1968, IEEE T INFORM THEORY, V14, P515, DOI 10.1109/TIT.1968.1054155
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Iqbal A, 2019, INT J ADV COMPUT SC, V10, P300
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Kakkar M, 2016, 2016 6TH INTERNATIONAL CONFERENCE - CLOUD SYSTEM AND BIG DATA ENGINEERING (CONFLUENCE), P658, DOI 10.1109/CONFLUENCE.2016.7508200
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Ke GL, 2017, ADV NEUR IN, V30
   Khan B, 2021, J HEALTHC ENG, V2021, DOI 10.1155/2021/8899263
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Li YG, 2012, PHYSCS PROC, V25, P1104, DOI 10.1016/j.phpro.2012.03.206
   Li Z., 2022, J COMPUTER SCI, V45, P256
   Liu Yanbin, 2022, Procedia Computer Science, P1603, DOI 10.1016/j.procs.2022.11.349
   Liu Y., 2008, INT J ADV SCI TECHNO, V1, P35
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mizuno O., 2010, ADV COMPUTER SCI INF, DOI [10.1007/978-3-642-13577-441, DOI 10.1007/978-3-642-13577-441]
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Özakinci R, 2023, SOFTWARE QUAL J, V31, P121, DOI 10.1007/s11219-022-09595-0
   Parashar A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00340-2
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Prati RC, 2004, LECT NOTES ARTIF INT, V3171, P296
   Rath SK, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11172707
   Ridgeway G., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P101
   Shippey T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962620
   Singh H., 2013, INT J COMPUTER APPL, V74, P27, DOI [10.5120/12890-9837, DOI 10.5120/12890-9837]
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Stradowski S, 2023, IEEE INT CONF AUTOM, P1098, DOI 10.1109/ASE56229.2023.00026
   Suma V., 2014, P 48 ANN CONV COMP S, V249, P329, DOI [10.1007/978-3-319-03095-136, DOI 10.1007/978-3-319-03095-1_36]
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P769, DOI 10.1109/tsmc.1976.4309452
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   WILSON DL, 1972, IEEE T SYST MAN CYB, VSMC2, P408, DOI 10.1109/TSMC.1972.4309137
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Yan Z, 2010, LECT NOTES COMPUT SC, V6064, P17
   Zhang W, 2022, TRANSPORT RES E-LOG, V158, DOI 10.1016/j.tre.2022.102611
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1203
EP 1237
DI 10.1007/s11219-024-09683-3
EA JUL 2024
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001261484000001
DA 2024-08-05
ER

PT J
AU Martins, L
   Ghaleb, TA
   Costa, H
   Machado, I
AF Martins, Luana
   Ghaleb, Taher A.
   Costa, Heitor
   Machado, Ivan
TI A comprehensive catalog of refactoring strategies to handle test smells
   in Java-based systems
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software testing; Test smells; Test refactoring; Mining software
   repositories
ID CODE
AB Test smells, detrimental coding practices that hinder high-quality test code development, pose a significant challenge in software testing and maintenance. Software refactoring, traditionally a powerful approach for addressing code smells and improving software quality without changing functionality, often focuses on production code, leaving test code overlooked. Despite extensive research in test smell refactoring, understanding the efficacy of existing refactoring operations on test code quality remains limited. Investigating real-world developer refactoring practices is crucial to bridge this knowledge gap. In this study, we investigate refactorings performed by developers to address test smells, resulting in a comprehensive catalog of test smells and their corresponding test-specific refactorings. Two test-specific refactorings closely tied to JUnit5 and seven version-agnostic refactorings for various JUnit versions have been identified. While many of these test-specific refactorings are documented in the literature, this analysis unveils new test-specific refactorings aimed at dealing with the "Inappropriate Assertion" test smell. This research provides insights into the challenges faced by developers and prevailing practices for effectively refactoring test code, thereby enhancing software testing and maintenance.
C1 [Martins, Luana; Machado, Ivan] Univ Fed Bahia, Comp Sci Dept, BR-40170110 Salvador, Ba, Brazil.
   [Ghaleb, Taher A.] Univ Toronto, Fac Informat, Toronto, ON M5S 3G6, Canada.
   [Costa, Heitor] Univ Fed Lavras, Comp Sci Dept, BR-37200000 Lavras, MG, Brazil.
C3 Universidade Federal da Bahia; University of Toronto; Universidade
   Federal de Lavras
RP Martins, L (corresponding author), Univ Fed Bahia, Comp Sci Dept, BR-40170110 Salvador, Ba, Brazil.
EM martins.luana@ufba.br; taher.ghaleb@utoronto.ca; heitor@ufla.br;
   ivan.machado@ufba.br
FU Fundao de Amparo Pesquisa do Estado da Bahia
FX No Statement Available
CR ACCUMULO, 2019, COMM F10B40
   Ahmad A, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1791
   Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   [Anonymous], 2021, BACKPORT JUNIT UPGRA
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Camara Bruno, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P46, DOI 10.1145/3482909.3482916
   CAMEL, 2020, COMM 7A4363
   CAMEL, 2019, COMM 626196A
   CAMEL, 2020, COMM F7D1DBB
   CAMEL, 2019, COMM 9DC4DC6
   CAMEL, 2021, COMM C30DEA
   CAMEL, 2021, COMM D58C731
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CXF, 2019, COMM 7 11DA
   CXF, 2019, COMM 4955CA6
   Deursen A., 2001, Refactoring Test Code
   Di Z., 2018, P 30 INT C SOFTW ENG, V2018, P165
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Junior, 2021, J SOFTW ENG RES DEV, V9, P9, DOI [10.5753/jserd.2021.1802, DOI 10.5753/JSERD.2021.1802]
   KAFKA, 2021, COMM F4C203
   KAFKA, 2021, COMM 56D948
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kim DJ, 2021, PROC INT CONF SOFTW, P62, DOI 10.1109/ICSE43902.2021.00019
   Kummer M., 2015, THESIS U BERN
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Martinez M, 2020, PROC INT CONF SOFTW, P69, DOI 10.1145/3377812.3382151
   Martins L., 2023, TSR CATALOG CATALOG
   Martins L., 2023, FIGSHARE
   Meszaros G, 2007, xUnit test patterns: Refactoring test code
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1109/SBST.2016.010, 10.1145/2897010.2897016]
   Panichella A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10207-5
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Peruma A., 2020, P IEEE ACM 42 INT C, P350, DOI DOI 10.1145/3387940.3392189
   Peruma A., 2019, P 29 ANN INT C COMPU, P193
   Peruma A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10045-x
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Santana Railana, 2021, SBES '21: Brazilian Symposium on Software Engineering, P49, DOI 10.1145/3474624.3474639
   Santana Railana, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P374, DOI 10.1145/3422392.3422510
   Soares E, 2023, IEEE T SOFTWARE ENG, V49, P1152, DOI 10.1109/TSE.2022.3172654
   Soares E, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P50, DOI 10.1145/3425174.3425212
   Spadini D, 2020, IEEE WORK CONF MIN S, P311, DOI 10.1145/3379597.3387453
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P564, DOI 10.1145/3422392.3422499
   Weissgerber P., 2007, WRT, P58
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
NR 53
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 641
EP 679
DI 10.1007/s11219-024-09663-7
EA MAR 2024
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001177367300001
DA 2024-08-05
ER

PT J
AU Nishiura, K
   Choi, EH
   Choi, E
   Mizuno, O
AF Nishiura, Kinari
   Choi, Eun-Hye
   Choi, Eunjong
   Mizuno, Osamu
TI Two improving approaches for faulty interaction localization using
   logistic regression analysis
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software testing; Combinatorial testing; Faulty interaction
   localization; Logistic regression analysis
ID COVERING ARRAYS; COMBINATORIAL
AB Faulty Interaction Localization (FIL) is a process to identify which combination of input parameter values induced test failures in combinatorial testing. An accurate and fast FIL provides helpful information to fix defects causing the test failure. One type of conventional FIL approach, which analyzes test results of whole test cases and estimates the suspiciousness of each combination, has two main concerns; (1) the accuracy is not enough, (2) the huge time cost is sometimes needed. In this paper, we propose two novel approaches to improve those concerns. FROGa attempts to estimate suspiciousness more accurately using logistic regression analysis. FROGb attempts to estimate failure-inducing combinations at high speed by estimating the subsets of them using logistic regression analysis and exploring just their supersets. Through evaluation experiments using a large number of artificial test results based on several real software systems, we observed that FROGa has very high accuracy, and FROGb can drastically reduce time cost for targets that have been difficult to complete by the conventional method.
C1 [Nishiura, Kinari; Choi, Eunjong; Mizuno, Osamu] Kyoto Inst Technol, Kyoto, Japan.
   [Choi, Eun-Hye] Natl Inst Adv Ind Sci & Technol, Ikeda, Japan.
C3 Kyoto Institute of Technology; National Institute of Advanced Industrial
   Science & Technology (AIST)
RP Nishiura, K (corresponding author), Kyoto Inst Technol, Kyoto, Japan.
EM k-nishiura@kit.ac.jp; e.choi@aist.go.jp; echoi@kit.ac.jp;
   o-mizuno@kit.ac.jp
CR Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bonn J, 2019, IEEE ICST WORKSHOP, P224, DOI 10.1109/ICSTW.2019.00057
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Colbourn CJ, 2018, MATH COMPUT SCI, V12, P429, DOI 10.1007/s11786-018-0385-x
   Cramer J.S., 2002, The origins of logistic regression, DOI [10.2139/ssrn.360300, DOI 10.2139/SSRN.360300]
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Gargantini A, 2017, IEEE ICST WORKSHOP, P239, DOI 10.1109/ICSTW.2017.44
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Ghandehari LS, 2015, IEEE ICST WORKSHOP
   github, PICT PAIRWISE INDEPE
   Hagar JD, 2015, COMPUTER, V48, P64, DOI 10.1109/MC.2015.114
   Jayaram R., SMART COMPUTING INFO, P533
   Jin H, 2018, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2018.00062
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kuhn D.R., 2013, Introduction to combinatorial testing
   Kuhn R, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P91, DOI 10.1109/SEW.2002.1199454
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Manning CD., 2008, Introduction to Information Retrieval, DOI [DOI 10.1017/CBO9780511809071, 10.1017/CBO9780511809071]
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Nagamoto T, 2014, IEEE PAC RIM INT SYM, P155, DOI 10.1109/PRDC.2014.26
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nishiura K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P138, DOI 10.1109/QRS.2017.24
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P584, DOI 10.1109/TSE.2018.2865772
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   scikit-learn, about us
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Wei Zheng, 2016, Advances in Software Engineering, V2016, DOI 10.1155/2016/2409521
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang J., 2012, LNCS, P186, DOI DOI 10.1007/978-3-642-31612-8
   Zhang Zhiqiang., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P331, DOI DOI 10.1145/2001420.2001460
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 39
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1039
EP 1073
DI 10.1007/s11219-024-09677-1
EA JUN 2024
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001242196100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Pesqueira, A
   Sousa, MJ
AF Pesqueira, Antonio
   Sousa, Maria Jose
TI Exploring the role of big data analytics and dynamic capabilities in ESG
   programs within pharmaceuticals
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Supply and distribution; Big data; Technology; Organization and
   management; Emerging capabilities
AB Achieving the United Nations' Sustainable Development Goals (SDGs) requires environmental, social, and governance (ESG) programs in the pharmaceutical industry. Using the Millennium Development Goals, the 2030 agenda aims to transform European Union companies toward sustainability. In pharmaceuticals, in particular, ESG programs come with complexities such as employee skills, corporate goals, and management expectations. Managing these programs effectively requires advanced technologies such as big data analytics (BDA) and dynamic capabilities (DC). In this study, DC theory is used to develop an architecture for managing ESG criteria, focusing on provenance, traceability, and availability. BDA's role in ESG programs is explored, along with its use cases and benefits, and how DC drives success in ESG implementation. The study examined five pharmaceutical companies in Germany, Portugal, and Switzerland, all consulting the same firm for BDA systems, to identify the characteristics of effective BDA implementation. The research explores how BDA and DC jointly enhance ESG efforts, the essential skills needed, and how DC aids in real-time decision-making in BDA projects aligned with ESG standards. It highlights the BDA system's accuracy and effectiveness in managing ESG programs, with DC as a pivotal facilitator. Findings reveal BDA's value in operational efficiency and aligning business models with ESG goals, underscoring the need for diverse skills in BDA implementation and DC's importance in integrating various managerial capacities into effective strategies. The study promotes a dynamic, data-driven approach in the pharmaceutical industry for managing complex ESG initiatives. It stresses continuous learning, adaptation, and integrating technological advances with ethical business practices. The research concludes by emphasizing BDA and DC's vital roles in advocating ethical, socially responsible, and environmentally sustainable practices in the pharmaceutical sector, marrying technology with ethical business strategies.
C1 [Pesqueira, Antonio; Sousa, Maria Jose] ISCTE IUL, Lisbon, Portugal.
C3 Instituto Universitario de Lisboa
RP Pesqueira, A (corresponding author), ISCTE IUL, Lisbon, Portugal.
EM antonio_pesqueira@iscte-iul.pt; maria.jose.sousa@iscte-iul.pt
RI Pesqueira, Antonio/AAT-4659-2021; Sousa, Maria José/I-1818-2014
OI Pesqueira, Antonio/0000-0003-1530-6451; Sousa, Maria
   José/0000-0001-8633-4199
FU ISCTE - Instituto Universitrio
FX No Statement Available
CR Akter S, 2020, J BUS RES, V118, P177, DOI 10.1016/j.jbusres.2020.06.016
   Bari N, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14031531
   Cao GM, 2022, J COMPUT INFORM SYST, V62, P442, DOI 10.1080/08874417.2020.1842270
   Chiang L, 2017, ANNU REV CHEM BIOMOL, V8, P63, DOI 10.1146/annurev-chembioeng-060816-101555
   Ciampi F, 2021, J BUS RES, V123, P1, DOI 10.1016/j.jbusres.2020.09.023
   Du Y., 2022, EFFECT DYNAMIC CAPAB
   Eisenhardt KM, 2000, STRATEGIC MANAGE J, V21, P1105, DOI 10.1002/1097-0266(200010/11)21:10/11<1105::AID-SMJ133>3.0.CO;2-E
   Erevelles S, 2016, J BUS RES, V69, P897, DOI 10.1016/j.jbusres.2015.07.001
   Gebhardt M, 2022, INT J PROD RES, V60, P6967, DOI 10.1080/00207543.2021.1999521
   GRANGER CWJ, 1989, J APPL ECONOM, V4, pS145, DOI 10.1002/jae.3950040508
   Jucevicius G, 2022, J MANAGE ORGAN, V28, P587, DOI 10.1017/jmo.2022.37
   Junaid M, 2023, TECHNOL FORECAST SOC, V196, DOI 10.1016/j.techfore.2023.122828
   Kähkönen AK, 2023, INT J PROD RES, V61, P2696, DOI 10.1080/00207543.2021.2009588
   Kodama M., 2018, COLLABORATIVE DYNAMI, P14
   Liang Y, 2022, FRONT PSYCHOL, V13, DOI 10.3389/fpsyg.2022.887776
   Linton JD, 2007, J OPER MANAG, V25, P1075, DOI 10.1016/j.jom.2007.01.012
   Mehta N, 2018, INT J MED INFORM, V114, P57, DOI 10.1016/j.ijmedinf.2018.03.013
   Mikalef P., 2019, CHANGE MANAGEMENT ST
   Mostafiz MI, 2022, J BUS RES, V139, P1588, DOI 10.1016/j.jbusres.2021.10.078
   Pesqueira A, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01665-9
   Randhawa K, 2022, IND MARKET MANAG, V103, P183, DOI 10.1016/j.indmarman.2022.03.016
   Rashid S, 2021, WORLD J ENTREP MANAG, V17, P457, DOI 10.1108/WJEMSD-09-2020-0110
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Secinaro S, 2022, J BUS RES, V150, P399, DOI 10.1016/j.jbusres.2022.06.011
   Shahbaz M, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/5186870
   Shujahat M, 2019, J BUS RES, V94, P442, DOI 10.1016/j.jbusres.2017.11.001
   Su X, 2023, SUSTAINABILITY-BASEL, V15, DOI 10.3390/su151813506
   Wamba SF, 2020, INT J PROD ECON, V222, DOI 10.1016/j.ijpe.2019.09.019
   Wang F., 2016, J RESIDUALS SCI TECH, V13
   Wang G, 2018, DEV MATH, V53, P1, DOI 10.1007/978-981-13-0146-9
   Wang L., 2016, International Journal of Security and Networks, V1, P42, DOI DOI 10.20849/IJSN.V1I1.99
   Wang YC, 2018, TECHNOL FORECAST SOC, V126, P3, DOI 10.1016/j.techfore.2015.12.019
   Yin R.K., 2018, Case study research and applications: Design and methods, V6th ed.
NR 33
TC 1
Z9 1
U1 19
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 607
EP 640
DI 10.1007/s11219-024-09666-4
EA MAR 2024
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001175712400001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Jensen, MH
   Kadenic, MD
AF Jensen, Maria Hoffmann
   Kadenic, Maja Due
TI Enhancing big data analytics deployment: uncovering stakeholder dynamics
   and balancing salience in project roles
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Big data analytics; BDA; Deployment; Project management; Stakeholders;
   Stakeholder management
ID CRITICAL SUCCESS FACTORS; BUSINESS INTELLIGENCE; AGILE; MANAGEMENT;
   IDENTIFICATION; RETHINKING; INNOVATION; STRATEGY
AB Deployment constitutes a pivotal aspect of data science projects, such as big data analytics (BDA). A comprehensive definition of successful deployment necessitates the integration of perspectives from both the project stakeholders and the end-users. However, adequate consideration of project stakeholders remains notably absent within the broader view of project deployment. This paper investigates the role of stakeholders in the deployment of BDA projects by applying an ethnographic research design throughout a 12-month period within a large multinational organization. The study employs critical systems heuristics concepts to identify stakeholder roles, which are subsequently classified and analyzed according to the salience model. The empirical findings point towards the missing link between the technical and the business aspects of a BDA project. The organizational function and product management, (capable of comprehending both the technical and business dimensions) must undertake a highly salient stakeholder role to effectively guide the project toward the successful deployment. Additionally, this role will be able to identify the exact beneficiaries, thus enabling them to increase their salience and their interests to resonate across the spectrum of project stakeholders. This study advances the knowledge and understanding of BDA deployment through the lens of a stakeholder perspective and systems thinking. It uncovers the necessary resources by mapping the social roles of a project and assessing their salience. Balancing role-based salience contributes to successful BDA project deployment.
C1 [Jensen, Maria Hoffmann; Kadenic, Maja Due] Aarhus Univ, Dept Business Dev & Technol, Aarhus BSS, Birk Ctr Pk 15, Herning, Denmark.
C3 Aarhus University
RP Jensen, MH (corresponding author), Aarhus Univ, Dept Business Dev & Technol, Aarhus BSS, Birk Ctr Pk 15, Herning, Denmark.
EM Mariahoff@btech.au.dk
OI Kadenic, Maja Due/0000-0002-5197-1179; jensen, maria/0000-0003-1038-7029
FU Aarhus Universitet
FX The authors would like to thank all the participants within the case
   organization for their contribution - both the formal and informal
   conversations.
CR Achterkamp Marjolein C., 2008, International Journal of Project Management, V26, P749, DOI 10.1016/j.ijproman.2007.10.001
   Adrian C, 2017, INT CONF RES INNOV
   Agar M.H., 2008, PROFESSIONAL STRANGE, V2nd
   Agar M.H., 1986, Speaking of ethnography, DOI DOI 10.4135/9781412985895
   Ahmed R, 2022, J ENG TECHNOL MANAGE, V65, DOI 10.1016/j.jengtecman.2022.101697
   Al-Sai ZA, 2020, IEEE ACCESS, V8, P118940, DOI 10.1109/ACCESS.2020.3005461
   Alicke K., 2019, Supply Chain Management Review
   Angée S, 2018, COMM COM INF SC, V877, P613, DOI 10.1007/978-3-319-95204-8_51
   Assarroudi A, 2018, J RES NURS, V23, P42, DOI 10.1177/1744987117741667
   Atkinson R., 1999, INT J PROJ MANAG, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, https://doi.org/10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Bag S, 2020, RESOUR CONSERV RECY, V153, DOI 10.1016/j.resconrec.2019.104559
   Beck M., 2019, HARVARD BUS REV
   Cato P, 2015, IEEE INT CONF INNOV, P134, DOI 10.1109/INNOVATIONS.2015.7381528
   Chen HC, 2012, MIS QUART, V36, P1165
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Davenport T., 2021, HARVARD DATA SCI REV, V3, DOI [10.1162/99608f92.90814c32, DOI 10.1162/99608F92.90814C32]
   Davis K, 2017, INT J PROJ MANAG, V35, P604, DOI 10.1016/j.ijproman.2017.02.004
   Davis K, 2014, INT J PROJ MANAG, V32, P189, DOI 10.1016/j.ijproman.2013.02.006
   Di Maddaloni F, 2017, INT J PROJ MANAG, V35, P1537, DOI 10.1016/j.ijproman.2017.08.011
   DONALDSON T, 1995, ACAD MANAGE REV, V20, P65, DOI 10.5465/AMR.1995.9503271992
   Elgendy N., 2014, BIG DATA ANALYTICS L
   Eskerod P., 2013, PROJECT STAKEHOLDER
   Eskerod P, 2013, INT J MANAG PROJ BUS, V6, P36, DOI 10.1108/17538371311291017
   Freeman R.E., 2010, Stakeholder Theory: The State of the Art, DOI DOI 10.1017/CBO9780511815768
   Freeman R.E., 2002, Ethical Issues in Business: A Philosophical Approach, P38, DOI DOI 10.1017/CBO9781139192675
   Friedman AL, 2002, J MANAGE STUD, V39, P1, DOI 10.1111/1467-6486.00280
   Gao J., 2015, AMCIS 2015 P, V16
   Gong Y, 2018, INT J OPER PROD MAN, V38, P1061, DOI 10.1108/IJOPM-05-2017-0306
   Grady NW, 2017, IEEE INT CONF BIG DA, P2331, DOI 10.1109/BigData.2017.8258187
   Granzen A., 2022, FORRESTER
   Henke N., 2018, ANALYTICS TRANSLATOR
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Iyer K. C., 2007, International Journal of Project Management, V25, P527, DOI 10.1016/j.ijproman.2006.11.009
   Jensen M. H., 2023, RES PAPERS, P218
   Jensen M. H., 2019, P 27 EUROPEAN C INFO
   Jensen MH, 2023, INF SYST E-BUS MANAG, V21, P323, DOI 10.1007/s10257-022-00620-0
   Kabanda Gabriel, 2019, Oriental Journal of Computer Science and Technology, V12, P132, DOI 10.13005/ojcst12.04.01
   Kee K. F., 2022, IN 2022 IEEE INT C B, P2655, DOI [10.1109/BigData55660.2022.10020213, DOI 10.1109/BIGDATA55660.2022.10020213]
   Khodabandeh Shervin, 2020, Expanding AI's Impact With Organizational Learning
   Koscielniak H, 2015, PROCEDIA COMPUT SCI, V65, P1052, DOI 10.1016/j.procs.2015.09.053
   Larson D, 2016, INT J INFORM MANAGE, V36, P700, DOI 10.1016/j.ijinfomgt.2016.04.013
   Lee G, 2010, MIS QUART, V34, P87
   Lee J, 2014, PROC CIRP, V16, P3, DOI 10.1016/j.procir.2014.02.001
   Manyika J., 2011, Report fra McKinsey Global Institute
   Meskendahl S, 2010, INT J PROJ MANAG, V28, P807, DOI 10.1016/j.ijproman.2010.06.007
   Mikalef P, 2020, INFORM MANAGE-AMSTER, V57, DOI 10.1016/j.im.2019.05.004
   Miller GJ., 2022, PROJECT LEADERSHIP S, V3, P100068, DOI [10.1016/j.plas.2022.100068, DOI 10.1016/J.PLAS.2022.100068]
   Mitchell RK, 1997, ACAD MANAGE REV, V22, P853, DOI 10.2307/259247
   Myers M., 1999, Communication of the ISI, V2, P1, DOI [DOI 10.17705/1CAIS.00223, 10.17705/1CAIS.00223]
   Niebel T, 2019, ECON INNOV NEW TECH, V28, P296, DOI 10.1080/10438599.2018.1493075
   Osinga SA, 2022, AGR SYST, V195, DOI 10.1016/j.agsy.2021.103298
   Patanakul P, 2022, IEEE T ENG MANAGE, V69, P987, DOI 10.1109/TEM.2020.2964316
   Pauleen DJ, 2017, J KNOWL MANAG, V21, P1, DOI 10.1108/JKM-08-2016-0339
   Penn L, 2019, BMC PUBLIC HEALTH, V19, DOI 10.1186/s12889-018-6363-z
   PINTO JK, 1987, IEEE T ENG MANAGE, V34, P22, DOI 10.1109/TEM.1987.6498856
   Pollack J, 2018, INT J MANAG PROJ BUS, V11, P527, DOI 10.1108/IJMPB-09-2017-0107
   Polonsky MJ, 2005, EUR J MARKETING, V39, P1199, DOI 10.1108/03090560510610806
   Potter WJ, 1999, J APPL COMMUN RES, V27, P258, DOI 10.1080/00909889909365539
   Reggio G, 2020, EUROMICRO CONF PROC, P246, DOI 10.1109/SEAA51224.2020.00050
   Rose KH, 2013, PROJ MANAG J, V44, pe1, DOI 10.1002/pmj.21345
   SAVAGE Grant., 1991, ACAD MANAGE EXEC, V5, P61, DOI [10.5465/ame.1991.4274682, DOI 10.2307/4165008]
   Sfaxi L, 2020, DATA KNOWL ENG, V130, DOI 10.1016/j.datak.2020.101862
   Shabbir MQ, 2020, J BIG DATA-GER, V7, DOI 10.1186/s40537-020-00317-6
   Shah TR, 2022, TECHNOL SOC, V68, DOI 10.1016/j.techsoc.2021.101801
   Someh I, 2019, COMMUN ASSOC INF SYS, V44, P718, DOI 10.17705/1CAIS.04434
   Sutterfield J.S., 2006, PROJ MANAG J, V37, P26
   Nguyen THD, 2019, INT J PROJ MANAG, V37, P176, DOI 10.1016/j.ijproman.2018.12.001
   Tan KH, 2015, INT J PROD ECON, V165, P223, DOI 10.1016/j.ijpe.2014.12.034
   Too EG, 2014, INT J PROJ MANAG, V32, P1382, DOI 10.1016/j.ijproman.2013.07.006
   Tsoy M, 2021, INFORM SYST MANAGE, V38, P324, DOI 10.1080/10580530.2020.1818899
   Turner R, 2012, PROJ MANAG J, V43, P87, DOI 10.1002/pmj.21289
   ULRICH W, 1987, EUR J OPER RES, V31, P276, DOI 10.1016/0377-2217(87)90036-1
   Ulrich W., 1983, CRITICAL HEURISTICS
   Ulrich W., 1996, PRIMER CRITICAL SYST
   Ulrich W., 2020, Systems Approaches to Making Change: A Practical Guide, P255, DOI DOI 10.1007/978-1-4471-7472-1_6
   Ulrich W, 2010, SYSTEMS APPROACHES TO MANAGING CHANGE: A PRACTICAL GUIDE, P243, DOI 10.1007/978-1-84882-809-4_6
   Van Maanen J., 2011, Tales of the field: On writing ethnography, DOI DOI 10.7208/CHICAGO/9780226849638.001.0001
   Vos JFJ, 2006, EUR J INNOV MANAG, V9, P161, DOI 10.1108/14601060610663550
   Wamba SF, 2017, J BUS RES, V70, P356, DOI 10.1016/j.jbusres.2016.08.009
   Xu JN, 2023, INT J PHYS DISTR LOG, V53, P71, DOI 10.1108/IJPDLM-04-2022-0118
NR 80
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 703
EP 727
DI 10.1007/s11219-024-09665-5
EA MAR 2024
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001188262000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Husen, JH
   Washizaki, H
   Runpakprakun, J
   Yoshioka, N
   Tun, HT
   Fukazawa, Y
   Takeuchi, H
AF Husen, Jati H.
   Washizaki, Hironori
   Runpakprakun, Jomphon
   Yoshioka, Nobukazu
   Tun, Hnin Thandar
   Fukazawa, Yoshiaki
   Takeuchi, Hironori
TI Integrated multi-view modeling for reliable machine learning-intensive
   software engineering
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Machine learning; Model-based analysis; Multi-view; Integrated framework
AB Development of machine learning (ML) systems differs from traditional approaches. The probabilistic nature of ML leads to a more experimentative development approach, which often results in a disparity between the quality of ML models with other aspects such as business, safety, and the overall system architecture. Herein the Multi-view Modeling Framework for ML Systems (M3S) is proposed as a solution to this problem. M3S provides an analysis framework that integrates different views. It is supported by an integrated metamodel to ensure the connection and consistency between different models. To facilitate the experimentative nature of ML training, M3S provides an integrated platform between the modeling environment and the ML training pipeline. M3S is validated through a case study and a controlled experiment. M3S shows promise, but future research needs to confirm its generality.
C1 [Husen, Jati H.; Washizaki, Hironori; Runpakprakun, Jomphon; Yoshioka, Nobukazu; Tun, Hnin Thandar; Fukazawa, Yoshiaki] Waseda Univ, Tokyo 1698050, Japan.
   [Husen, Jati H.] Telkom Univ, Dept Ind Engn, Bandung 40257, Jawa Barat, Indonesia.
   [Takeuchi, Hironori] Musashi Univ, Tokyo 1768534, Japan.
C3 Waseda University; Telkom University
RP Husen, JH (corresponding author), Waseda Univ, Tokyo 1698050, Japan.; Husen, JH (corresponding author), Telkom Univ, Dept Ind Engn, Bandung 40257, Jawa Barat, Indonesia.
EM jati.h@asagi.waseda.jp; washizaki@waseda.jp; k-jomphon@moegi.waseda.jp;
   nobukazuy@acm.org; hninthandar003@gmail.com; fukazawa@waseda.jp;
   h.takeuchi@cc.musashi.ac.jp
FU JST-Mirai program [JPMJMI20B8]; JST SPRING [JPMJSP2128]
FX This work was supported by JST-Mirai program grant number JPMJMI20B8 and
   JST SPRING grant number JPMJSP2128.
CR Batot ER, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P788, DOI 10.1109/MODELS-C53483.2021.00125
   Bayram F, 2022, KNOWL-BASED SYST, V245, DOI 10.1016/j.knosys.2022.108632
   Bishop CM, 2013, PHILOS T R SOC A, V371, DOI 10.1098/rsta.2012.0222
   Chuprina T., 2021, ARTEFACT BASED REQUI, V2857
   Dorard Louis, 2015, Machine Learning Canvas
   El Hamlaoui M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P180, DOI 10.5220/0006774101800191
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Heiberger RM, 2014, J STAT SOFTW, V57
   Husen J., 2023, P 11 INT C MOD BAS S, P194, DOI [10.5220/0011699600003402.INSTICC, DOI 10.5220/0011699600003402.INSTICC]
   Husen JH, 2023, 2023 IEEE/ACM 2ND INTERNATIONAL CONFERENCE ON AI ENGINEERING - SOFTWARE ENGINEERING FOR AI, CAIN, P94, DOI 10.1109/CAIN58948.2023.00022
   Idowu S, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3543847
   Idowu Samuel., 2022, Emmm: A unified meta-model for tracking machine learning experiments. 2022_48th_Euromicro_Conference_on_Software Engineering_and_Advanced_Applications_(SEAA), P48, DOI DOI 10.1109/SEAA56994.2022.00016
   Iso iec, 2022, STANDARD
   Japan Automobile ManufacturersAssociation I., 2021, AUT DRIV SAF EV FRAM
   Kassani PH, 2017, APPL SOFT COMPUT, V52, P231, DOI 10.1016/j.asoc.2016.12.037
   Khomh F, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.3571224
   Kirchhof JC, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P380, DOI 10.1145/3550356.3561576
   Koseler K, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P13, DOI 10.5220/0007245800130024
   Langford MA, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P182, DOI 10.1109/MODELS50736.2021.00027
   Letier E., 2001, REASONING AGENTS GOA
   Leveson NG, 2011, ENG SYST, P1
   Likert R., 1932, ARCH PSYCHOL, V22, P5, DOI DOI 10.4135/9781412961288.N454
   Lima A, 2022, ICEIS: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 1, P308, DOI 10.5220/0010997300003179
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Matuleviius R., 2007, VISUALLY EFFECTIVE G, V4802, P265, DOI [10.1007/978-3-540-76292-832, DOI 10.1007/978-3-540-76292-832]
   Minka T., 2018, INFERNET 03
   Moin A., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2203.02927
   Moin A, 2022, SOFTW SYST MODEL, V21, P987, DOI 10.1007/s10270-021-00967-x
   Nahar N, 2023, 2023 IEEE/ACM 2ND INTERNATIONAL CONFERENCE ON AI ENGINEERING - SOFTWARE ENGINEERING FOR AI, CAIN, P171, DOI 10.1109/CAIN58948.2023.00034
   Nahar N, 2022, PROC INT CONF SOFTW, P413, DOI 10.1145/3510003.3510209
   Nalchigar S, 2021, REQUIR ENG, V26, P237, DOI 10.1007/s00766-020-00343-z
   Ozkaya I, 2020, IEEE SOFTWARE, V37, P3, DOI 10.1109/MS.2020.2993662
   Pereira A, 2020, MACH LEARN KNOW EXTR, V2, P579, DOI 10.3390/make2040031
   Rahman MS, 2023, SOFTWARE QUAL J, V31, P1065, DOI 10.1007/s11219-023-09621-9
   Reineke J, 2019, SOFTW SYST MODEL, V18, P1577, DOI 10.1007/s10270-017-0638-1
   Runpakprakun J., 2023, 2023 10 INT C DEP SY, P593, DOI [10.1109/DSA59317.2023.00086, DOI 10.1109/DSA59317.2023.00086]
   Runpakprakun J., 2014, STANDARD
   Sculley D, 2015, ADV NEUR IN, V28
   Sculley D., 2023, STANDARD
   Sotoudeh M, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P588, DOI 10.1145/3453483.3454064
   Stallkamp J, 2012, NEURAL NETWORKS, V32, P323, DOI 10.1016/j.neunet.2012.02.016
   Stallkamp J, 2011, 2011 INTERNATIONAL JOINT CONFERENCE ON NEURAL NETWORKS (IJCNN), P1453, DOI 10.1109/IJCNN.2011.6033395
   Takeuchi Hironori, 2023, 2023 IEEE International Conference on e-Business Engineering (ICEBE), P8, DOI 10.1109/ICEBE59045.2023.00013
   Takeuchi Hironori, 2020, Procedia Computer Science, V176, P1312, DOI 10.1016/j.procs.2020.09.140
   Tanaka H., 2023, 2023 10 INT C DEP SY, P135, DOI [10.1109/DSA59317.2023.00026, DOI 10.1109/DSA59317.2023.00026]
   Thiee L. -W., 2021, SYSTEMATIC LIT REV M, DOI [10.18420/informatik2021-101, DOI 10.18420/INFORMATIK2021-101]
   Villamizar H., 2022, 2022 48 EUR C SOFTW, P112, DOI [10.1109/SEAA56994.2022.00025, DOI 10.1109/SEAA56994.2022.00025]
   Vogelsang A, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P245, DOI 10.1109/REW.2019.00050
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wolf C. T., 2020, P IEEE ACM 42 INT C, P86, DOI DOI 10.1145/3387940.3391496
   Xiang QY, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13116515
NR 51
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1239
EP 1285
DI 10.1007/s11219-024-09687-z
EA JUL 2024
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001261484000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Karlsson, S
   Hughes, J
   Jongeling, R
   Causevic, A
   Sundmark, D
AF Karlsson, Stefan
   Hughes, John
   Jongeling, Robbert
   Causevic, Adnan
   Sundmark, Daniel
TI Exploring API behaviours through generated examples
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Property-based testing; Examples; Automated testing; API testing; REST
ID QUICKCHECK
AB Understanding the behaviour of a system's API can be hard. Giving users access to relevant examples of how an API behaves has been shown to make this easier for them. In addition, such examples can be used to verify expected behaviour or identify unwanted behaviours. Methods for automatically generating examples have existed for a long time. However, state-of-the-art methods rely on either white-box information, such as source code, or on formal specifications of the system behaviour. But what if you do not have access to either? This may be the case, for example, when interacting with a third-party API. In this paper, we present an approach to automatically generate relevant examples of behaviours of an API, without requiring either source code or a formal specification of behaviour. Evaluation on an industry-grade REST API shows that our method can produce small and relevant examples that can help engineers to understand the system under exploration.
C1 [Karlsson, Stefan; Causevic, Adnan] ABB AB, Vasteras, Sweden.
   [Karlsson, Stefan; Jongeling, Robbert; Sundmark, Daniel] Malardalen Univ, Vasteras, Sweden.
   [Hughes, John] Chalmers Univ Technol, Gothenburg, Sweden.
   [Hughes, John] Quviq AB, Gothenburg, Sweden.
C3 ABB; Malardalen University; Chalmers University of Technology
RP Karlsson, S (corresponding author), ABB AB, Vasteras, Sweden.; Karlsson, S (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM stefan.l.karlsson@se.abb.com; rjmh@chalmers.se;
   robbert.jongeling@mdu.se; adnan.causevic@se.abb.com;
   daniel.sundmark@mdu.se
FU ABB; Knowledge Foundation (KKS); Malardalen University; Knowledge
   Foundation (KKS)
FX This work is supported by ABB, the industrial postgraduate school
   Automation Region Research Academy (ARRAY) funded by The Knowledge
   Foundation (KKS).Open access funding provided by Malardalen University.
   This work is funded by ABB, and The Knowledge Foundation (KKS)
CR Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Barnaby C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1353, DOI 10.1145/3368089.3417052
   Burke DA, 2005, LECT NOTES COMPUT SC, V3492, P51, DOI 10.1007/11422532_4
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Fielding R. T., 2000, Architectural Styles and the Design of Network-based Software Architectures
   Fowler SJ., 2016, PRODUCTION READY MIC
   Gerdes A., 2018, P 17 ACM SIGPLAN INT, P13, DOI DOI 10.1145/3239332.3242763
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Head A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173659
   Hickey R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3386321
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hughes J, 2007, LECT NOTES COMPUT SC, V4354, P1
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Kim J, 2009, IEEE INT CONF AUTOM, P540, DOI 10.1109/ASE.2009.39
   Kim M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P289, DOI 10.1145/3533767.3534401
   Lavoie B., 1996, P 8 INT WORKSH NAT L, P9
   MacIver D.R, 2020, TEST CASE REDUCTION, V166
   Mar LW, 2011, ASIA PAC SOFWR ENG, P331, DOI [10.1109/APSEC.2011.18, 10.1109/APSC.2011.18]
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Mittal V.O, 1994, P 11 EUROPEAN C ARTI
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Novick D., 2006, P SPECIAL INTEREST G, P84, DOI DOI 10.1145/1166324.1166346
   Nykaza J., 2002, P 20 ANN INT C COMP, P133, DOI [DOI 10.1145/584955.584976, 10.1145/584955.584976]
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Swartout W.R, 1982, P AAAI NATL C, P404
   Wu HY, 2022, PROC INT CONF SOFTW, P426, DOI 10.1145/3510003.3510151
   Zhang M., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2208.03988
NR 32
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 729
EP 763
DI 10.1007/s11219-024-09668-2
EA APR 2024
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001206040400001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Guo, XJ
   Okamura, H
   Dohi, T
AF Guo, Xiujing
   Okamura, Hiroyuki
   Dohi, Tadashi
TI Optimal test case generation for boundary value analysis
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software testing; Boundary value analysis; Test input generation;
   Boundary coverage; Random testing
ID DOMAIN; COVERAGE
AB Boundary value analysis (BVA) is a common technique in software testing that uses input values that lie at the boundaries where significant changes in behavior are expected. This approach is widely recognized and used as a natural and effective strategy for testing software. Test coverage is one of the criteria to measure how much the software execution paths are covered by the set of test cases. This paper focuses on evaluating test coverage with respect to BVA by defining a metric called boundary coverage distance (BCD). The BCD metric measures the extent to which a test set covers the boundaries. In addition, based on BCD, we consider the optimal test input generation to minimize BCD under the random testing scheme. We propose three algorithms, each representing a different test input generation strategy, and evaluate their fault detection capabilities through experimental validation. The results indicate that the BCD-based approach has the potential to generate boundary values and improve the effectiveness of software testing.
C1 [Guo, Xiujing; Okamura, Hiroyuki; Dohi, Tadashi] Hiroshima Univ, Grad Sch Adv Sci & Engn, 1 Chome-2 Kagamiyama, Hiroshima 7398511, Japan.
C3 Hiroshima University
RP Guo, XJ (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, 1 Chome-2 Kagamiyama, Hiroshima 7398511, Japan.
EM guoxiujing6@gmail.com; okamu@hiroshima-u.ac.jp; dohi@hiroshima-u.ac.jp
FU Hiroshima University
FX No Statement Available
CR Ali S, 2016, IEEE C EVOL COMPUTAT, P379, DOI 10.1109/CEC.2016.7743819
   Awedikian Z., 2009, P 11 ANN C GEN EV CO, P1657
   Cadar C, 2008, OSDI, V8, P209
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   CHIB S, 1995, AM STAT, V49, P327, DOI 10.2307/2684568
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   CLARKE LA, 1982, IEEE T SOFTWARE ENG, V8, P380, DOI 10.1109/TSE.1982.235572
   Dobslaw F, 2020, IEEE ICST WORKSHOP, P346, DOI 10.1109/ICSTW50294.2020.00062
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Feldt R., 2019, AUTOMATED BOUNDARY V, P155
   Ghani K., 2009, THESIS
   Guo X., 2023, 2023 IEEE 10 INT C D
   Jamrozik Konrad, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P152, DOI 10.1007/978-3-642-38916-0_9
   Jeng BC, 1999, J SYST SOFTWARE, V49, P97, DOI 10.1016/S0164-1212(99)00071-0
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kosmatov N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ISSRE.2004.12
   Li L., 2012, APPL MATH-US, V6, p31S
   Pandita R., 2010, IEEE INT C SOFTW MAI, P1
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Zhang ZQ, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P239, DOI 10.1109/ISSRE.2015.7381817
   Zhao RL, 2010, SOFTW TEST VERIF REL, V20, P209, DOI 10.1002/stvr.414
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 24
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 543
EP 566
DI 10.1007/s11219-023-09659-9
EA FEB 2024
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001160351700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Jiang, JP
   Jiang, MY
   Nie, LM
   Ding, ZH
AF Jiang, Junpeng
   Jiang, Mingyue
   Nie, Liming
   Ding, Zuohua
TI A source model simplification method to assist model transformation
   debugging
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Model transformation; Delta debugging; Model reduction; Fault
   localization
AB Model transformation, which is a program targeting at transforming an input model to an output model, has been a critical basis for Model-Driven Engineering (MDE). The quality of model transformation programs directly affects the quality of software products built with MDE activities. Therefore, debugging model transformation programs has been crucial from the quality assurance point of view. One of the key impediments to the model transformation debugging is the high complexity and scale of the input models. In order to ameliorate the burden on model transformation debugging, this study proposes an effective approach to systematically reduce input models of model transformation programs. By combining the advantages of input simplification approaches for traditional programs and also the characteristics of model transformation, our approach leverages and adapts the delta debugging technique to model simplification. We conduct experiments to evaluate the proposed approach from two aspects: its effectiveness in model simplification, and its effects on model transformation debugging. Our experimental results confirm the positive contributions of the approach in both aspects. It delivers promising reduction effectiveness, and it can also well support the fault localization in model transformations.
C1 [Jiang, Junpeng; Jiang, Mingyue; Ding, Zuohua] Zhejiang Sci Tech Univ, Hangzhou, Zhejiang, Peoples R China.
   [Nie, Liming] Shenzhen Technol Univ, Shenzhen, Peoples R China.
C3 Zhejiang Sci-Tech University; Shenzhen Technology University
RP Jiang, MY (corresponding author), Zhejiang Sci Tech Univ, Hangzhou, Zhejiang, Peoples R China.
EM 202130504100@mails.zstu.edu.cn; mjiang@zstu.edu.cn;
   nieliming@sztu.edu.cn; zouhuading@hotmail.com
FU National Natural Science Foundation of China
FX No Statement Available
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Alkhazi B, 2020, AUTOMAT SOFTW ENG, V27, P91, DOI 10.1007/s10515-020-00271-w
   [Anonymous], 2005, Atl transformation example: Bibtexml to docbook
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   Bauer E, 2011, LECT NOTES COMPUT SC, V6705, P3, DOI 10.1007/978-3-642-21952-8_3
   Christi A, 2018, IEEE INT SYMP SOFTW, P184, DOI [10.1109/1SSREW.2018.00005, 10.1109/ISSREW.2018.00005]
   Clavel Manuel, 2007, Lecture Notes in Computer Science, V4350, DOI DOI 10.1007/978-3-540-71999-1
   Cuadrado JS., 2021, ANATLYZER STATIC ANA
   Field A., 2005, Discovering statistics using SAS, V2nd
   Götz S, 2021, SOFTW SYST MODEL, V20, P469, DOI 10.1007/s10270-020-00815-4
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Gupta Neelam., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, ASE '05, P263, DOI DOI 10.1145/1101908.1101948
   He X, 2019, SOFTW SYST MODEL, V18, P2051, DOI 10.1007/s10270-017-0634-5
   He X, 2016, J SYST SOFTWARE, V121, P247, DOI 10.1016/j.jss.2016.04.044
   Hodovan R., 2016, P 7 INT WORKSH AUT T, P31, DOI DOI 10.1145/2994291.2994296
   Hodován R, 2016, ICSOFT-EA: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 1, P241, DOI 10.5220/0005988602410248
   Höppner S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10194-7
   Janssen T, 2009, SINTER 09, P23
   Jones J.A., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P273
   Karimi M, 2024, J SYST SOFTWARE, V208, DOI 10.1016/j.jss.2023.111882
   López JAH, 2023, IEEE T SOFTWARE ENG, V49, P2661, DOI 10.1109/TSE.2022.3228630
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   MAXWELL AE, 1968, BRIT J MATH STAT PSY, V21, P105, DOI 10.1111/j.2044-8317.1968.tb00401.x
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Muñoz P, 2022, J OBJECT TECHNOL, V21, DOI 10.5381/jot.2022.21.4.a7
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nassar N, 2020, LECT NOTES COMPUT SC, V12076, P224, DOI 10.1007/978-3-030-45234-6_11
   Qi Y., 2013, P 2013 INT S SOFTW T, P191, DOI DOI 10.1145/2483760.2483785
   Rabin MRI, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P441, DOI 10.1145/3468264.3468539
   Cuadrado JS, 2018, PROC IEEE ACM INT C, P85, DOI 10.1145/3183440.3183479
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Suneja S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P945, DOI 10.1145/3468264.3468545
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Troya J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3523056
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   VaraminyBahnemiry Z, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P13, DOI 10.1109/MODELS50736.2021.00011
   Vince D, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P196, DOI 10.5220/0010560501960206
   Wang GC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P881, DOI 10.1145/3468264.3468625
   Win HM, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2023.111606
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhou X, 2018, IEEE INT CONF AUTOM, P802, DOI 10.1145/3238147.3240730
NR 49
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 961
EP 984
DI 10.1007/s11219-024-09676-2
EA MAY 2024
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001234043800001
DA 2024-08-05
ER

PT J
AU Li, X
   Wen, PA
   Chen, P
   Chen, J
   Wen, XM
   Xia, YN
AF Li, Xi
   Wen, Peian
   Chen, Peng
   Chen, Juan
   Wen, Xuming
   Xia, Yunni
TI An effective parallel convolutional anomaly multi-classification model
   for fault diagnosis in microservice system
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Microservice; Attention mechanism; Anomaly multi-classification; Fault
   diagnosis
AB Microservice architecture is a new technology for deploying large-scale applications and services in the cloud. But multivariate time series data with anomalies are increasingly generated in the cloud. Effectively diagnosing the runtime system anomalies is necessary to ensure the quality of service of microservice systems. Typical anomaly detection methods are effective in data quality and computing reliability of cloud computing. However, they all focus on one-class anomaly detection, which may not perform on practical microservice frameworks with diverse types of anomalies. Furthermore, locating the root cause of anomalies to eliminate after detection is essential. To address these issues, we propose an effective parallel convolutional anomaly multi-classification model (PCAC) based on an attention mechanism for fault diagnosis in microservice system. We first construct a parallel convolutional structure that allows subnetworks to extract features independently. Then, channel and spatial attention mechanisms are applied in the parallel convolutional layers to mitigate the loss of feature representation. Finally, causal inference based on the anomalous graph is used to locate the fault in the microservice system. The experimental results clearly show that the proposed model achieves the highest F1 scores on six public microservice datasets, improved by 37.9% in average macro-F1 and 4.4% in average micro-F1 scores respectively, outperforming eight state-of-the-art methods.
C1 [Li, Xi; Wen, Peian; Chen, Peng; Chen, Juan; Wen, Xuming] Xihua Univ, Sch Comp & Software Engn, Jinzhou Rd, Chengdu 610039, Sichuan, Peoples R China.
   [Xia, Yunni] Chongqing Univ, Coll Comp Sci, Shazheng St, Chongqing 400044, Peoples R China.
C3 Xihua University; Chongqing University
RP Chen, P (corresponding author), Xihua Univ, Sch Comp & Software Engn, Jinzhou Rd, Chengdu 610039, Sichuan, Peoples R China.; Xia, YN (corresponding author), Chongqing Univ, Coll Comp Sci, Shazheng St, Chongqing 400044, Peoples R China.
EM lixi@mail.xhu.edu.cn; wenpeian@stu.xhu.edu.cn; chenpeng@mail.xhu.edu.cn;
   chenjuan@mail.xhu.edu.cn; wenxuming@mail.xhu.edu.cn;
   xiayunni@hotmail.com
RI Chen, Peng/HTP-8857-2023
OI Chen, Peng/0000-0001-5221-3655
FU National Natural Science Foundation [62376043]; Science and Technology
   Program of Sichuan Province [2020JDRC0067, 2023JDRC0087, 24NSFTD0025,];
   Chunhui Project of Ministry of Education of China [Z2011085]
FX This research is supported by the National Natural Science Foundation
   under Grant No.62376043, Science and Technology Program of Sichuan
   Province under Grant No.2020JDRC0067, No.2023JDRC0087 and
   No.24NSFTD0025, and Chunhui Project of Ministry of Education of China
   under Grant No.Z2011085.
CR Assaf R, 2019, IEEE DATA MINING, P958, DOI 10.1109/ICDM.2019.00106
   Brin S., 1998, Technical report., V98, P161, DOI DOI 10.1109/IISWC.2012.6402911
   Chen P, 2022, COMPUT J, V65, P2909, DOI 10.1093/comjnl/bxac085
   Chen P, 2015, CONCURR COMP-PRACT E, V27, P4784, DOI 10.1002/cpe.3462
   Chen PF, 2019, IEEE T SERV COMPUT, V12, P214, DOI 10.1109/TSC.2016.2607739
   Chickering D. M., 2003, Journal of Machine Learning Research, V3, P507, DOI 10.1162/153244303321897717
   DENG A, 2020, P WEB C 2020, P246
   Deng AL, 2021, AAAI CONF ARTIF INTE, V35, P4027
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dongjie W., 2023, P 29 ACM SIGKDD C KN, DOI [10.48550/arXiv.2302.01987, DOI 10.48550/ARXIV.2302.01987]
   ENGLE RF, 1982, ECONOMETRICA, V50, P987, DOI 10.2307/1912773
   Fan C, 2018, APPL ENERG, V211, P1123, DOI 10.1016/j.apenergy.2017.12.005
   Fauvel K, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9233137
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Hyvärinen A, 2010, J MACH LEARN RES, V11, P1709
   Kiss I, 2014, INT C INTELL COMP CO, P275, DOI 10.1109/ICCP.2014.6937009
   Kriegel Hans-Peter, 2011, Proceedings of the 11th SIAM International Conference on Data Mining, P13, DOI 10.1137/1.9781611972818.2
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lewis R J, 2000, PROC ANN M SOC ACAD
   Long J., 2017, FULLY CONVOLUTIONAL
   Mariani L, 2018, IEEE INT CONF SOFTW, P262, DOI 10.1109/ICST.2018.00034
   Shimizu S, 2006, J MACH LEARN RES, V7, P2003
   Shimizu S, 2011, J MACH LEARN RES, V12, P1225
   Shyu ML, 2003, 2003 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL III, PROCEEDINGS, P353
   Song YJ, 2023, FUTURE GENER COMP SY, V145, P77, DOI 10.1016/j.future.2023.03.020
   Spirtes P., 2000, CAUSATION PREDICTION
   Tuli S, 2022, PROC VLDB ENDOW, V15, P1201, DOI 10.14778/3514061.3514067
   Wen PA, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app122010390
   Woo SH, 2018, LECT NOTES COMPUT SC, V11211, P3, DOI 10.1007/978-3-030-01234-2_1
   Wu L, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P31, DOI 10.1109/CloudIntelligence52565.2021.00015
   Xin RY, 2023, J CLOUD COMPUT-ADV S, V12, DOI 10.1186/s13677-022-00383-6
   Xu XF, 2022, P IEEE I C SERV COMP, P84, DOI 10.1109/SCC55611.2022.00024
   Yang Z, 2021, SCI PROGRAMMING-NETH, V2021, DOI 10.1155/2021/6617882
   Zhang XC, 2020, AAAI CONF ARTIF INTE, V34, P6845
NR 34
TC 0
Z9 0
U1 8
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 921
EP 938
DI 10.1007/s11219-024-09672-6
EA MAY 2024
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001228495900001
DA 2024-08-05
ER

PT J
AU Golla, MR
   Godboley, S
AF Golla, Monika Rani
   Godboley, Sangharatna
TI Automated SC-MCC test case generation using coverage-guided fuzzing
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Modified Condition/Decision Coverage; Multiple Condition Coverage;
   Short-Circuit evaluation property; Coverage Guided Fuzzing; Mutation
   testing; Test cases
AB One of the main objectives of testing is to achieve adequate code coverage. Modern code coverage standards suggest MC/DC (Modified Condition/Decision Coverage) instead of MCC (Multiple Condition Coverage) due to its ability to generate a feasible number of test cases. In contrast to the MC/DC, which only takes independent pairs into consideration, the MCC often considers each and every test case. In our work, we suggest SC-MCC, i.e., MCC with Short-Circuit. The key aspect of this paper is to demonstrate the effectiveness of SC-MCC-based test cases compared to MC/DC using Coverage-Guided Fuzzing (CGF) technique. In this work, we have considered American Fuzzy Lop (AFL) tool to generate both the SC-MCC and MC/DC test cases for 54 RERS benchmark programs. As part of this paper, we propose unique goal constraint generation and fuzz-instrumentation techniques that help in mitigating the masking problem of AFL. Subsequently, we performed mutation testing by employing the GCOV tool and computed the mutation score in order to evaluate the quality of the generated test cases. Finally, based on our observations, SC-MCC has performed better for over 85% of the programs taken into consideration.
C1 [Golla, Monika Rani; Godboley, Sangharatna] Natl Inst Technol Warangal, Dept Comp Sci & Engn, Warangal 506004, Telangana, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Warangal
RP Golla, MR (corresponding author), Natl Inst Technol Warangal, Dept Comp Sci & Engn, Warangal 506004, Telangana, India.
EM gm720080@student.nitw.ac.in; sanghu@nitw.ac.in
OI Golla, Monika Rani/0000-0002-1662-5764
CR Alshmrany KM, 2022, LECT NOTES COMPUT SC, V13241, P336, DOI 10.1007/978-3-030-99429-7_19
   Amalfitano D, 2022, COMMUN ACM, V65, P74, DOI 10.1145/3526099
   [Anonymous], 2024, CODE SC MCC AFL 3RUN
   [Anonymous], 2018, LIBFUZZER LIB COVERA
   [Anonymous], 2014, RERS RIGOROUS EXAMIN
   [Anonymous], 2016, RERS RIGOROUS EXAMIN
   [Anonymous], 2018, RERS RIGOROUS EXAMIN
   [Anonymous], 2020, RERS RIGOROUS EXAMIN
   [Anonymous], 2023, CODE SC MCC AFL RESU
   Araujo Claudio A., 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0031-8
   Barisal SK, 2022, J KING SAUD UNIV-COM, V34, P9757, DOI 10.1016/j.jksuci.2021.12.007
   Belle Lakshminarayan S., 2023, FUZZING COMP FUZZING
   Cadar C, 2008, OSDI, V8, P209
   Dutta A, 2021, J COMPUT LANG, V66, DOI 10.1016/j.cola.2021.101064
   Fan SP, 2021, IEEE ACCESS, V9, P86759, DOI 10.1109/ACCESS.2021.3089196
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Ghani K, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P152, DOI 10.1109/ICSEA.2009.31
   Godboley S, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P1728, DOI 10.1109/COMPSAC54236.2022.00275
   Godboley S, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P301, DOI 10.5220/0011032900003176
   Golla Monika Rani, 2022, ISEC 2022: 15th Innovations in Software Engineering Conference, DOI 10.1145/3511430.3511460
   Golla M. R., 2023, P 16 INN SOFTW ENG C, DOI [10.1145/3578527.3578546, DOI 10.1145/3578527.3578546]
   Golla MR, 2024, EXPERT SYST APPL, V238, DOI 10.1016/j.eswa.2023.122033
   Hamimoune S., 2016, 2016 International Conference on Engineering MIS (ICEMIS), P1, DOI DOI 10.1109/ICEMIS.2016.7745368
   Hayhurst Kelly J., 2001, A practical tutorial on modified condition/decision coverage
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Jaffar J, 2020, LECT NOTES COMPUT SC, V12076, P530, DOI 10.1007/978-3-030-45234-6_28
   John S, 2023, SOFTW SYST MODEL, V22, P1281, DOI 10.1007/s10270-022-01078-x
   Jung M, 2019, PROCEEDINGS OF THE 2019 IEEE INTERNATIONAL CONFERENCE ON FLEXIBLE AND PRINTABLE SENSORS AND SYSTEMS (IEEE FLEPS 2019)
   Kandl S, 2013, INT SYMP OBJECT COMP
   Kauttio J., 2013, MCDC BASED TEST SELE
   Kozyrev VP, 2022, PROGRAM COMPUT SOFT+, V48, P256, DOI 10.1134/S036176882204003X
   Kroening Daniel, 2014, P INT C TOOLS ALG CO, P389
   Le HM, 2019, LECT NOTES COMPUT SC, V11781, P246, DOI 10.1007/978-3-030-31784-3_14
   Leloudas P., 2023, TEST DESIGN TECHNIQU, P75, DOI [10.1007/978-1-4842-9514-4_5, DOI 10.1007/978-1-4842-9514-4_5]
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Oehlert P, 2005, IEEE SECUR PRIV, V3, P58, DOI 10.1109/MSP.2005.55
   Rani GM, 2022, IEEE INT CONF SOFTW, P469, DOI 10.1109/ICST53961.2022.00058
   RTCA I., 2011, SOFTWARE CONSIDERATI
   Thorup M., 1997, Graph-Theoretic Concepts in Computer Science. 23rd International Workshop, WG'97. Proceedings, P318, DOI 10.1007/BFb0024507
   Winzinger S, 2022, IEEE INT SYMP SERV O, P77, DOI 10.1109/SOSE55356.2022.00015
   Zalewski M., 2016, AM FUZZY LOP WHITEPA
   Zhang Y, 2022, CYBERSECURITY, V5, DOI 10.1186/s42400-022-00120-1
   Zhao YR, 2022, PROCEEDINGS OF THE 38TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, ACSAC 2022, P534, DOI 10.1145/3564625.3564660
NR 46
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 849
EP 880
DI 10.1007/s11219-024-09667-3
EA MAY 2024
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001222358200001
DA 2024-08-05
ER

PT J
AU Yin, JQ
   Fei, Y
AF Yin, Jiaqi
   Fei, Yuan
TI FVF-BIoT: a formal verification framework for blockchain-based IoT
   authentication
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Formal verification; Theorem proving; Blockchain; Smart contract; IoT
   authantication
AB Traditional IoT authentication methods, often centralized and reliant on a Trusted Third Party (TTP), face issues like high communication costs and vulnerability to data loss. Blockchain-based Internet of Things (IoT) authentication can effectively solve the problems brought by traditional IoT authentication. Because the authentication schemes are usually deployed on a large number of IoT devices it would be extremely expensive when there are issues to be fixed after the authentication schemes is deployed. Performing verification early at design time can alleviate this problem. To focus on these requirements, this article proposes a formal verification framework for blockchain-based IoT authentication (FVF-BIoT). Specifically, we design data type mapping and the conversion of elements in smart contracts for the authentication. Then we formalize the smart contracts into formal models in the interactive theorem prover Coq. Several algorithms are presented for the conversion of the smart contracts and the generation of examples. Examples and security properties related to contracts are described in the form of theorems, which are also proved by Coq. Through a case study, we not only demonstrate the effectiveness of the FVF-BIoT framework in ensuring the security and reliability of blockchain technology for IoT authentication but also highlight its innovative integration of formal verification processes. This distinctly addresses the previously unmet need for rigorous, mathematically proven security validations in the design and deployment of blockchain-based IoT authentication methods.
C1 [Yin, Jiaqi] Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
   [Fei, Yuan] Shanghai Jiao Tong Univ, Ctr Single Cell Omics, Sch Publ Hlth, State Key Lab Syst Med Canc,Sch Med, Shanghai, Peoples R China.
   [Yin, Jiaqi] NPU, Yangtze River Delta Res Inst, Suzhou, Peoples R China.
C3 Northwestern Polytechnical University; Shanghai Jiao Tong University
RP Fei, Y (corresponding author), Shanghai Jiao Tong Univ, Ctr Single Cell Omics, Sch Publ Hlth, State Key Lab Syst Med Canc,Sch Med, Shanghai, Peoples R China.
EM jqyin@nwpu.edu.cn; feiyuan@sjtu.edu.cn
FU National Natural Science Foundation of China [62372178]; Shanghai Key
   Laboratory of Trustworthy Computing [OP202003]; The 2023 Shanghai
   Educational Science Research Program [C2023039]; Basic Research Programs
   of Taicang [TC2022JC14]
FX This work was partially supported by the National Natural Science
   Foundation of China (No. 62372178), the Shanghai Key Laboratory of
   Trustworthy Computing (No. OP202003), the 2023 Shanghai Educational
   Science Research Program (No. C2023039), and the Basic Research Programs
   of Taicang (No. TC2022JC14). DAS:Data sharing not applicable to this
   article as no datasets were generated or analyzed during the current
   study.
CR Almadhoun R., 2018, The code of the smart contract for A User Authentication Scheme of IoT Devices using Blockchain-enabled Fog Nodes
   Almadhoun R, 2018, I C COMP SYST APPLIC
   Barthe G, 2001, LECT NOTES COMPUT SC, V2028, P302
   Ben Fekih Rim, 2020, Impact of Digital Technologies on Public Health in Developed and Developing Countries. 18th International Conference, ICOST 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12157), P268, DOI 10.1007/978-3-030-51517-1_23
   Bertot Yves, 2004, TEXT THEORET COMP S
   Chlipala A., 2013, Certified Programming with Dependent Types-A Pragmatic Introduction to the Coq Proof Assistant
   Dorfleitner G, 2021, RENEW SUST ENERG REV, V149, DOI 10.1016/j.rser.2021.111378
   Dukkipati C, 2018, PROCEEDINGS OF THE THIRD ACM WORKSHOP ON ATTRIBUTE-BASED ACCESS CONTROL (ABAC'18), P61, DOI 10.1145/3180457.3180458
   Garfatta Ikram, 2021, ACSW '21: Proceedings of the 2021 Australasian Computer Science Week Multiconference, DOI 10.1145/3437378.3437879
   Garfatta I, 2021, LECT NOTES COMPUT SC, V12632, P47, DOI 10.1007/978-3-030-76352-7_7
   Valadares DCG, 2021, IEEE INTERNET THINGS, V8, P17199, DOI 10.1109/JIOT.2021.3077850
   Hameed K, 2021, J SUPERCOMPUT, V77, P14461, DOI 10.1007/s11227-021-03841-1
   Huet G., 1997, Technical report
   Kafhali S. E., 2019, P 4 INT C BIG DAT IN
   Khalid U, 2020, CLUSTER COMPUT, V23, P2067, DOI 10.1007/s10586-020-03058-6
   Krebbers Robbert, 2014, Interactive Theorem Proving. 5th International Conference, ITP 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8558, P543, DOI 10.1007/978-3-319-08970-6_36
   Lone AH, 2021, COMPUT SCI REV, V39, DOI 10.1016/j.cosrev.2020.100360
   Majdoubi D. E., 2020, P 5 INT C CLOUD COMP, P1
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Nam W, 2022, IEEE ACCESS, V10, P8151, DOI 10.1109/ACCESS.2022.3143145
   Pradeep R, 2022, Journal of Physics: Conference Series, V2161
   Putra Dwiyan Rezkia, 2019, Proceeding the International Conference on ICT for Smart Society, V7, P1
   Song JW, 2022, SOFT COMPUT, V26, P841, DOI 10.1007/s00500-021-06163-9
   TianyuSun W. Y., 2020, Electronics, V9
   Underwood S, 2016, COMMUN ACM, V59, P15, DOI 10.1145/2994581
   Wan YL, 2022, TECHNOL FORECAST SOC, V177, DOI 10.1016/j.techfore.2022.121540
NR 26
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 20
PY 2024
DI 10.1007/s11219-024-09691-3
EA JUL 2024
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB1M0
UT WOS:001272739000001
DA 2024-08-05
ER

PT J
AU Dai, YJ
   Liu, SY
   Xu, GQ
AF Dai, Yujun
   Liu, Shaoying
   Xu, Guangquan
TI Enhancing human-machine pair inspection with risk number and code
   inspection diagram
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software inspection; Human-machine pair inspection; Static analysis
ID SOFTWARE INSPECTIONS; PARTICIPATION; VERIFICATION; REVIEWS
AB Software inspection is a widely-used approach to software quality assurance. Human-Machine Pair Inspection (HMPI) is a novel software inspection technology proposed in our previous work, which is characterized by machine guiding programmers to inspect their own code during programming. While our previous studies have shown the effectiveness of HMPI in telling risky code fragments to the programmer, little attention has been paid to the issue of how the programmer can be effectively guided to carry out inspections. To address this important problem, in this paper we propose to combine Risk Number with Code Inspection Diagram (CID) to provide accurate guidance for the programmer to efficiently carry out inspections of his/her own programs. By following the Code Inspection Diagram, the programmer will inspect every checking item shown in the CID to efficiently determine whether it actually contain bugs. We describe a case study to evaluate the performance of this method by comparing its inspection time and number of detected errors with our previous work. The result shows that the method is likely to guide the programmer to inspect the faulty code earlier and be more efficient in detecting defects than the previous HMPI established based on Cognitive Complexity.
C1 [Dai, Yujun; Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima 7398511, Japan.
   [Xu, Guangquan] Tianjin Univ, Coll Intelligence & Comp, Sch Cybersecur, Tianjin 300072, Peoples R China.
C3 Hiroshima University; Tianjin University
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima 7398511, Japan.
EM d201609@hiroshima-u.ac.jp; sliu@hiroshima-u.ac.jp; Losin@tju.edu.cn
FU National Key Research and Development Program of China
FX No Statement Available
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Assal H, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300519
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Ball T., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P206, DOI 10.1007/BFb0019410
   Barke S, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3586030
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Biffl S, 2001, PROC INT CONF SOFTW, P155, DOI 10.1109/ICSE.2001.919090
   Campbell GA, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P57, DOI 10.1145/3194164.3194186
   Crandall AS., 2023, J COMPUTING SCI COLL, V39, P38
   Dai Yujun, 2023, 2023 27th International Conference on Engineering of Complex Computer Systems (ICECCS), P108, DOI 10.1109/ICECCS59891.2023.00022
   Dai YJ, 2021, IEEE I C SQRS-C, P314, DOI 10.1109/QRS-C55045.2021.00054
   Danicic S., 1996, 4 RIMS WORKSH COMP
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   Fagan M., 2002, SOFTWARE PIONEERS, P575, DOI DOI 10.1007/978-3-642-59412-035
   Georgsen R. E., 2023, NORSK IKT K FORSK OG
   Gregory F., 1993, NASASTD220293
   Islam K, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106756
   Kollanus S., 2009, OPEN SOFTWARE ENG J, V3, DOI DOI 10.2174/1874107X00903010015
   Liu S., 2018, INT WORKSH STRUCT OB, P3
   Liu SY, 2012, IEEE T SOFTWARE ENG, V38, P1100, DOI 10.1109/TSE.2011.102
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   Ramalingam G, 2000, ACM SIGPLAN NOTICES, V35, P233, DOI 10.1145/358438.349330
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Sultana S, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10324-9
   Sykes A.O., 1993, Coase-Sandor Institute for Law & Economics Working Paper No. 20
   Szabó Z, 2023, FUTURE INTERNET, V15, DOI 10.3390/fi15100326
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
NR 34
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 939
EP 959
DI 10.1007/s11219-024-09674-4
EA MAY 2024
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001230075900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Han, JX
   Huang, C
   Liu, JY
AF Han, Jiaxuan
   Huang, Cheng
   Liu, Jiayong
TI bjEnet: a fast and accurate software bug localization method in natural
   language semantic space
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Bug localization; Code language model; Deep learning; Semantic matching
AB Automated software bug localization is a significant technology to improve the efficiency of software repair and ensure software quality while promoting the software ecosystem's stable development. The main objective is to address the semantic matching problem between bug reports and source codes. The appearance of the Transformer structure provides us with a new idea to solve this problem. Transformer-based deep learning models can provide accurate semantic matching results but with a considerable cost (e.g., time). In this paper, we propose a fast and accurate bug localization method named bjEnet based on natural language semantic matching. bjEnet utilizes a pre-trained code language model to transform source codes into code summaries. Then, a code filtering mechanism is employed to exclude source codes unrelated to bug reports, thereby reducing the number of source codes that need to be combined with bug reports for correlation evaluation. Finally, bjEnet uses a BERT-based cross-encoder to localize bugs in the natural language semantic space. The experimental results show that bjEnet is superior to state-of-the-art methods, with an average time to localize a bug report of less than 1 second.
C1 [Han, Jiaxuan; Huang, Cheng; Liu, Jiayong] Sichuan Univ, Sch Cyber Sci & Engn, Chengdu 610207, Sichuan, Peoples R China.
C3 Sichuan University
RP Liu, JY (corresponding author), Sichuan Univ, Sch Cyber Sci & Engn, Chengdu 610207, Sichuan, Peoples R China.
EM zhanSxDrive30i@gmail.com; opcodesec@gmail.com; ljy@scu.edu.cn
FU Sichuan Science and Technology Program
FX No Statement AvailableDAS:The data used in this paper is publicly
   available on the Internet and can be obtained from the following link:
   https://github.com/yanxiao6/BugLocalization-dataset.
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Ali W, 2023, EXPERT SYST APPL, V232, DOI 10.1016/j.eswa.2023.120562
   Chen CF, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P347, DOI 10.1109/ICCV48922.2021.00041
   Cheng MJ, 2022, PROC CVPR IEEE, P5174, DOI 10.1109/CVPR52688.2022.00512
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Das A, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P378
   Devlin J., 2019, Bert: Pre-training of deep bidirectional transformers for language understanding, V1810
   Fang Liu, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P473, DOI 10.1145/3324884.3416591
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gabeur Valentin, 2020, COMPUTER VISION ECCV, DOI [10.48550/arXiv.2007.10639, DOI 10.48550/ARXIV.2007.10639]
   Gao DH, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P2251, DOI 10.1145/3397271.3401430
   Gao SZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522674
   Gao YH, 2021, LECT NOTES COMPUT SC, V12903, P61, DOI 10.1007/978-3-030-87199-4_6
   Gong Z, 2022, EUR CON SFTWR MTNCE, P13, DOI 10.1109/SANER53432.2022.00013
   Gorti Satya Krishna, 2022, P IEEE CVF C COMP VI, P5006
   Gu WC, 2021, NEURAL NETWORKS, V141, P385, DOI 10.1016/j.neunet.2021.04.019
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo JF, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2019.102067
   Han JX, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00379-9
   Hanif MS, 2019, PATTERN RECOGN LETT, V120, P54, DOI 10.1016/j.patrec.2019.01.005
   Hou YP, 2024, LECT NOTES COMPUT SC, V14609, P364, DOI 10.1007/978-3-031-56060-6_24
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Jiang JY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P795
   Johnson J, 2021, IEEE T BIG DATA, V7, P535, DOI 10.1109/TBDATA.2019.2921572
   Karpukhin V, 2020, Arxiv, DOI arXiv:2004.04906
   Khot T, 2020, AAAI CONF ARTIF INTE, V34, P8082
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lin Y., 2020, P 58 ANN M ASS COMP, P7999, DOI [10.18653/v1/ 2020.acl-main.713, DOI 10.18653/V1/2020.ACL-MAIN.713]
   Liu PF, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1034
   Liu S., 2023, IEEE Transactions on Software Engineering
   Liu YQ, 2022, LECT NOTES COMPUT SC, V13674, P319, DOI 10.1007/978-3-031-19781-9_19
   Lu WP, 2020, J VIS COMMUN IMAGE R, V71, DOI 10.1016/j.jvcir.2020.102794
   Lyu B, 2021, AAAI CONF ARTIF INTE, V35, P13498
   Melekhov I, 2016, INT C PATT RECOG, P378, DOI 10.1109/ICPR.2016.7899663
   Pradel Michael, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P225, DOI 10.1145/3395363.3397356
   Qi BH, 2022, IEEE T RELIAB, V71, P235, DOI 10.1109/TR.2021.3104728
   Ranasinghe K, 2022, PROC CVPR IEEE, P2864, DOI 10.1109/CVPR52688.2022.00289
   Rao JF, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5370
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, DOI 10.48550/ARXIV.1908.10084]
   Ren Q., 2021, IEEE Geoscience and Remote Sensing Letters, V19, P1
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Serrano N, 2023, NEURAL COMPUT APPL, V35, P13941, DOI 10.1007/s00521-023-08610-0
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Ahmad WU, 2020, Arxiv, DOI arXiv:2005.00653
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang B, 2022, IEEE T SERV COMPUT, V15, P1649, DOI 10.1109/TSC.2020.3006214
   Wang WH, 2022, IEEE T SOFTWARE ENG, V48, P102, DOI 10.1109/TSE.2020.2979701
   Wang XH, 2021, PROC CVPR IEEE, P5075, DOI 10.1109/CVPR46437.2021.00504
   Wang X, 2021, INFORM SCIENCES, V546, P298, DOI 10.1016/j.ins.2020.08.009
   Wang Y., 2021, arXiv
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wei BL, 2019, ADV NEUR IN, V32
   Xiao X, 2023, INFORM SOFTWARE TECH, V162, DOI 10.1016/j.infsof.2023.107274
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2017, ASIA PAC SOFWR ENG, P338, DOI 10.1109/APSEC.2017.40
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yang Z, 2022, PROC CVPR IEEE, P18134, DOI 10.1109/CVPR52688.2022.01762
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Yasunaga M, 2021, Arxiv, DOI arXiv:2104.06378
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zan D., 2023, Long Papers, V1, P7443
   Zhang BW, 2022, PROC CVPR IEEE, P11294, DOI 10.1109/CVPR52688.2022.01102
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu ZY, 2022, KNOWL-BASED SYST, V248, DOI 10.1016/j.knosys.2022.108741
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 70
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 22
PY 2024
DI 10.1007/s11219-024-09693-1
EA JUL 2024
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZF8Z7
UT WOS:001273985500002
DA 2024-08-05
ER

PT J
AU Cornejo, O
   Briola, D
   Micucci, D
   Ginelli, D
   Mariani, L
   Parrilla, AS
   Juristo, N
AF Cornejo, Oscar
   Briola, Daniela
   Micucci, Daniela
   Ginelli, Davide
   Mariani, Leonardo
   Parrilla, Adrian Santos
   Juristo, Natalia
TI A family of experiments about how developers perceive delayed system
   response time
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Monitoring; User studies; Empirical software engineering
ID STRATEGIES
AB Collecting and analyzing data about developers working on their development tasks can help improve development practices, finally increasing the productivity of teams. Indeed, monitoring and analysis tools have already been used to collect data from productivity tools. Monitoring inevitably consumes resources and, depending on their extensiveness, may significantly slow down software systems, interfering with developers' activity. There is thus a challenging trade-off between monitoring and validating applications in their operational environment and preventing the degradation of the user experience. The lack of studies about when developers perceive an overhead introduced in an application makes it extremely difficult to fine-tune techniques working in the field. In this paper, we address this challenge by presenting an empirical study that quantifies how developers perceive overhead. The study consists of three replications of an experiment that involved 99 computer science students in total, followed by a small-scale experimental assessment of the key findings with 12 professional developers. Results show that non-negligible overhead can be introduced for a short period into applications without developers perceiving it and that the sequence in which complex operations are executed influences the perception of the system response time. This information can be exploited to design better monitoring techniques.
C1 [Cornejo, Oscar] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.
   [Briola, Daniela; Micucci, Daniela; Ginelli, Davide; Mariani, Leonardo] Univ Milano Bicocca, DISCO, Milan, Italy.
   [Parrilla, Adrian Santos] Univ Oulu, ITEE, Oulu, Finland.
   [Juristo, Natalia] Univ Politecn Madrid, Madrid, Spain.
C3 University of Luxembourg; University of Milano-Bicocca; University of
   Oulu; Universidad Politecnica de Madrid
RP Briola, D (corresponding author), Univ Milano Bicocca, DISCO, Milan, Italy.
EM oscar.cornejo@uni.lu; daniela.briola@unimib.it;
   daniela.micucci@unimib.it; davide.ginelli@unimib.it;
   leonardo.mariani@unimib.it; adrian.santos.parrilla@oulu.fi;
   natalia@fi.upm.es
RI MICUCCI, DANIELA/AAB-6066-2020; Briola, Daniela/AAG-5079-2019
OI MICUCCI, DANIELA/0000-0003-1261-2234; Briola,
   Daniela/0000-0003-1994-8929
FU European Research Council
FX No Statement Available
CR Abbas T., 2022, PROC ACM HUMAN COMPU, V6
   Arapakis I, 2021, CHIIR '21: PROCEEDINGS OF THE 2021 CONFERENCE ON HUMAN INFORMATION INTERACTION AND RETRIEVAL, P279, DOI 10.1145/3406522.3446038
   Arnold M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063241
   Baresi L., 2010, P FSESDP WORKSHOP FU
   Bartocci E., 2012, P INT C RUNTIME VERI
   Bertolino A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447240
   Bowring J., 2002, P ACM SIGPLAN SIGSOF
   Ceaparu I, 2004, INT J HUM-COMPUT INT, V17, P333, DOI 10.1207/s15327590ijhc1703_3
   Ceccato M., 2020, P INT C SOFTWARE TES
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Cohen J., 2016, What if there were no significance tests?, P69
   Colegrave N., 1851, P ROY SOC B-BIOL SCI, V284
   Cornejo O., 2017, P 2 INT WORKSHOP PRE
   Cornejo O, 2020, IEEE INT CONF SOFTW, P243, DOI 10.1109/ICST46399.2020.00033
   Cornejo O, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110523
   Cornejo O, 2019, IEEE ACCESS, V7, P85913, DOI 10.1109/ACCESS.2019.2925855
   Cornejo O, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P55, DOI 10.1109/ICSE-NIER.2017.19
   Couceiro R, 2019, PROC INT SYMP SOFTW, P93, DOI 10.1109/ISSRE.2019.00019
   Cumming G., 2012, UNDERSTANDING NEW ST, DOI DOI 10.4324/9780203807002
   Duncan J., 2005, MEASURING MIND SPEED, DOI [10.1093/acprof:oso/9780198566427.001.0001, DOI 10.1093/ACPROF:OSO/9780198566427.001.0001]
   Eclipse community, ECLIPSE EQUINOX WEAV
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Field A., 2005, Discovering statistics using SAS, V2nd
   Funk M., 2020, 12 INT C AUT MOT USE, P262, DOI [10.1145/3409120.3410651, DOI 10.1145/3409120.3410651]
   Gazzola L, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2452
   Gazzola L, 2017, PROC INT SYMP SOFTW, P67, DOI 10.1109/ISSRE.2017.10
   Ghisletta P, 2004, J EDUC BEHAV STAT, V29, P421, DOI 10.3102/10769986029004421
   Hirzel M., 2001, P 4 ACM WORKSHOP FEE
   Hosek P, 2015, ACM SIGPLAN NOTICES, V50, P339, DOI [10.1145/2694344.2694390, 10.1145/2775054.2694390]
   Hoxmeier J., 2000, P ASS INFORM SYSTEMS
   Jin GL, 2010, ACM SIGPLAN NOTICES, V45, P241, DOI 10.1145/1932682.1869481
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Juristo N., 2013, Basics of Software Engineering Experimentation
   KILLEEN PR, 1987, PSYCHOL REV, V94, P455, DOI 10.1037/0033-295X.94.4.455
   Laudato Gennaro, 2023, 2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE), P1, DOI 10.1109/ICSE48619.2023.00100
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Luo C, 2017, CHIIR'17: PROCEEDINGS OF THE 2017 CONFERENCE HUMAN INFORMATION INTERACTION AND RETRIEVAL, P127, DOI 10.1145/3020165.3020184
   McNeish D, 2017, PSYCHOL METHODS, V22, P114, DOI 10.1037/met0000078
   Meyer A.N., 2017, P INT C HUMAN COMPUT
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Miller R. B., 1968, PROCEEDINGS
   Nah FFH, 2004, BEHAV INFORM TECHNOL, V23, P153, DOI 10.1080/01449290410001669914
   Nielsen J, 1999, COMMUN ACM, V42, P65, DOI 10.1145/291469.291470
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Ohmann P, 2016, IEEE INT CONF AUTOM, P27, DOI 10.1145/2970276.2970351
   Orso A., 2010, P FSESDP WORKSHOP FU
   Orso A., 2002, P ACM SIGSOFT INT S
   Pavlopoulou Christina., 1999, P INT C SOFTWARE ENG
   Rubin V., 2014, P INT C SOFTWARE SYS
   Seow SC., 2008, DESIGNING ENG TIME P
   Shneiderman B., 2009, DESIGNING USER INTER
   Shneiderman B., 1987, SIGBIO NEWSL, V9
   Soderstrom Ulrik, 2018, P 36 EUROPEAN C COGN, P1, DOI [10.1145/3232078.3232092, DOI 10.1145/3232078.3232092]
   Song W., 2014, P WORKSHOP MOBILE CO
   Tu S., 2001, P ACM INT S ADV GEOG
   Van Der Aalst W, 2012, ACM Transactions on Management Information Systems, V3, P1, DOI [10.1145/2229156.2229157, DOI 10.1145/2229156.2229157]
   Verbeke G., 1997, Linear Mixed Models for Longitudinal Data BT-Linear Mixed Models in Practice: A SAS-Oriented Approach, P63, DOI DOI 10.1007/978-1-4612-2294-1_3
   Wadgave U, 2016, ASIAN J PSYCHIATR, V24, P67, DOI 10.1016/j.ajp.2016.08.016
   Wang M, 2014, Advances in Statistics, V2014, DOI [DOI 10.1155/2014/303728, 10.1155/2014/303728]
   West BT., 2014, Linear mixed models: A practical guide using statistical software, V2, DOI DOI 10.1201/B17198
   Zorn CJW, 2001, AM J POLIT SCI, V45, P470, DOI 10.2307/2669353
   Züger M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P61, DOI 10.1145/3025453.3025662
NR 62
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 567
EP 605
DI 10.1007/s11219-024-09660-w
EA MAR 2024
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001172988400001
PM 38912430
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Jia, K
   Yu, X
   Zhang, C
   Xie, WZ
   Zhao, DD
   Xiang, JW
AF Jia, Kai
   Yu, Xiao
   Zhang, Chen
   Xie, Wenzhi
   Zhao, Dongdong
   Xiang, Jianwen
TI TTAFPred: Prediction of time to aging failure for software systems based
   on a two-stream multi-scale features fusion network
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Software aging and rejuvenation; Performance degradation; TTAF
   prediction; Temporal-spatial feature fusion
ID USEFUL LIFE PREDICTION; REJUVENATION; MODEL
AB Software aging refers to the performance degradation and failure crash phenomena in long-running systems. As a proactive remedy, software rejuvenation can be scheduled timely to mitigate aging effects. Inescapably, how to accurately predict the time to aging failure (TTAF) of software is a prerequisite for implementing effective rejuvenation. However, the characterization of software aging is relatively complicated, leading to the selection of aging indicators case by case, which means that only fitting the variation trend of a single indicator for prediction models to formulate a rejuvenation schedule may be limited. To fill this gap, this paper proposes a novel framework called TTAFPred, which directly constructs the direct mapping relationships between the software aging process considering multiple system indicators and TTAF. Specifically, this framework includes three parts, i.e., data preprocessing, software degradation feature extraction, and TTAF prediction modules. First, the raw data is processed into the input form required by the network. Secondly, a temporal relationship extraction stream integrating bidirectional gated recurrent unit (BiGRU) with attention mechanism is used to extract temporal features from raw inputs. Synchronously, a spatial relationships extraction stream is adopted to extract the spatial features for enhancing the representation ability of degraded features by using the multi-scale one-dimensional convolutional neural network (1DCNN) with the residual connection. Then, extracted temporal-spatial features from the two streams are further fused. Finally, two fully-connected layers are constructed to estimate the TTAF. The experiments are performed on two mainstream software systems (OpenStack and Android), and four sets of real run-to-failure data for each software system are collected. The effectiveness of the proposed TTAFPred is verified through extensive experiments with its seven competing models, and the prediction performance can be improved by 9.1%, 8.0%, and 8.0%, respectively, in terms of three evaluation metrics, compared to the best baseline model.
C1 [Jia, Kai; Yu, Xiao; Zhang, Chen; Xie, Wenzhi; Zhao, Dongdong; Xiang, Jianwen] Wuhan Univ Technol, Engn Res Ctr Transportat Informat & Safety, Sch Comp Sci & Artificial Intelligence, MOE China,Hubei Key Lab Transportat Internet Thing, Wuhan 430070, Hubei, Peoples R China.
   [Jia, Kai; Yu, Xiao; Zhang, Chen; Xie, Wenzhi; Zhao, Dongdong; Xiang, Jianwen] Wuhan Univ Technol, Chongqing Res Inst, Chongqing 401120, Peoples R China.
C3 Wuhan University of Technology; Wuhan University of Technology
RP Xiang, JW (corresponding author), Wuhan Univ Technol, Engn Res Ctr Transportat Informat & Safety, Sch Comp Sci & Artificial Intelligence, MOE China,Hubei Key Lab Transportat Internet Thing, Wuhan 430070, Hubei, Peoples R China.; Xiang, JW (corresponding author), Wuhan Univ Technol, Chongqing Res Inst, Chongqing 401120, Peoples R China.
EM jiakai@whut.edu.cn; xiaoyu@whut.edu.cn; zhangchenorange@whut.edu.cn;
   xiewenzhi@whut.edu.cn; zdd@whut.edu.cn; jwxiang@whut.edu.cn
FU Natural Science Foundation of Chongqing
FX No Statement AvailableDAS:The data of this study is available on Github
   at https://github.com/agingprediction/TTAFPred.
CR Alonso J, 2013, PERFORM EVALUATION, V70, P231, DOI 10.1016/j.peva.2012.09.002
   Andrade E, 2023, IEEE T DEPEND SECURE, V20, P563, DOI 10.1109/TDSC.2021.3139201
   Bai J, 2023, IEEE T DEPEND SECURE, V20, P2811, DOI 10.1109/TDSC.2022.3150782
   Bai J, 2021, IEEE T VEH TECHNOL, V70, P5378, DOI 10.1109/TVT.2021.3077118
   Battisti F, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12136412
   Chung JY, 2014, Arxiv, DOI [arXiv:1412.3555, DOI 10.48550/ARXIV.1412.3555]
   Cotroneo Domenico, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P71, DOI 10.1109/ISSRE.2010.24
   Cotroneo D, 2007, SYM REL DIST SYST, P127, DOI 10.1109/SRDS.2007.22
   Cotroneo D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111181
   Cotroneo D, 2019, IEEE INT SYMP SOFTW, P239, DOI 10.1109/ISSREW.2019.00078
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Cotroneo D, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539117
   Cotroneo D, 2013, PERFORM EVALUATION, V70, P163, DOI 10.1016/j.peva.2012.09.004
   Dohi T, 2018, RELIAB ENG SYST SAFE, V180, P463, DOI 10.1016/j.ress.2018.08.009
   Du XT, 2020, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE5003.2020.00010
   Espinosa R, 2021, APPL SOFT COMPUT, V113, DOI 10.1016/j.asoc.2021.107850
   Grottke M, 2006, IEEE T RELIAB, V55, P411, DOI 10.1109/TR.2006.879609
   He LJ, 2022, KNOWL-BASED SYST, V258, DOI 10.1016/j.knosys.2022.109941
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Jia K, 2023, IEEE T EMERG TOP COM, V11, P580, DOI 10.1109/TETC.2023.3258503
   Jia K, 2022, PROC INT SYMP SOFTW, P435, DOI 10.1109/ISSRE55969.2022.00049
   Jin RB, 2022, IEEE T INSTRUM MEAS, V71, DOI 10.1109/TIM.2022.3167778
   Levitin G, 2020, RELIAB ENG SYST SAFE, V197, DOI 10.1016/j.ress.2019.106776
   Levitin G, 2020, RELIAB ENG SYST SAFE, V193, DOI 10.1016/j.ress.2019.106593
   Li DM, 2021, IEEE I C SQRS-C, P350, DOI 10.1109/QRS-C55045.2021.00059
   Li L, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P91, DOI 10.1109/ISESE.2002.1166929
   Li XQ, 2022, KNOWL-BASED SYST, V235, DOI 10.1016/j.knosys.2021.107652
   Li YF, 2023, RELIAB ENG SYST SAFE, V239, DOI 10.1016/j.ress.2023.109514
   Liang M., 2021, 2021 IEEE INT S SOFT, P1
   Liu J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P283, DOI 10.1109/ICWS.2019.00055
   Machida F, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539121
   Machida F, 2013, PERFORM EVALUATION, V70, P212, DOI 10.1016/j.peva.2012.09.003
   MARSHALL E, 1992, SCIENCE, V255, P1347, DOI 10.1126/science.255.5050.1347
   Meng H., 2021, Journal on Communications, V42, P163
   Ning GR, 2016, IEEE T RELIAB, V65, P1630, DOI 10.1109/TR.2016.2570539
   Pereira P, 2018, IEEE IPCCC
   Pietrantuono R, 2020, SOFTWARE QUAL J, V28, P7, DOI 10.1007/s11219-019-09448-3
   Qiao Y, 2019, IEEE T RELIAB, V68, P633, DOI 10.1109/TR.2018.2881306
   Qiao Y, 2018, IEEE INT SYMP SOFTW, P271, DOI [10.1109/1SSREW.2018.00018, 10.1109/ISSREW.2018.00018]
   Sun SG, 2022, IEEE T INSTRUM MEAS, V71, DOI 10.1109/TIM.2022.3178994
   Tan XY, 2021, IEEE INT C S Q R S, P759, DOI 10.1109/QRS54544.2021.00085
   Vinícius L, 2022, J SUPERCOMPUT, V78, P12898, DOI 10.1007/s11227-022-04389-4
   Wan SK, 2022, RELIAB ENG SYST SAFE, V224, DOI 10.1016/j.ress.2022.108528
   Wang DZ, 2007, PERFORM EVALUATION, V64, P247, DOI 10.1016/j.peva.2006.04.002
   Wang L, 2022, KNOWL-BASED SYST, V252, DOI 10.1016/j.knosys.2022.109340
   Wang T, 2022, ENG APPL ARTIF INTEL, V116, DOI 10.1016/j.engappai.2022.105445
   Wang Y, 2023, RELIAB ENG SYST SAFE, V231, DOI 10.1016/j.ress.2022.109006
   Weng CS, 2016, IEEE INT SYMP SOFTW, P78, DOI 10.1109/ISSREW.2016.20
   Xiang S, 2021, RELIAB ENG SYST SAFE, V216, DOI 10.1016/j.ress.2021.107927
   Xiao DY, 2022, KNOWL-BASED SYST, V239, DOI 10.1016/j.knosys.2021.107902
   Yan YQ, 2020, IET SOFTW, V14, P517, DOI 10.1049/iet-sen.2019.0254
   Yan YQ, 2020, J INF TECHNOL RES, V13, P30, DOI 10.4018/JITR.2020010103
   Yan YQ, 2019, J ENG-JOE, V2019, P7237, DOI 10.1049/joe.2018.5407
   Zhang JS, 2022, RELIAB ENG SYST SAFE, V221, DOI 10.1016/j.ress.2021.108297
   Zhang X, 2017, LECT NOTES COMPUT SC, V10638, P523, DOI 10.1007/978-3-319-70139-4_53
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 22
PY 2024
DI 10.1007/s11219-024-09692-2
EA JUL 2024
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZF8Z7
UT WOS:001273985500001
DA 2024-08-05
ER

PT J
AU Karlsson, S
   Jongeling, R
   Causevic, A
   Sundmark, D
AF Karlsson, Stefan
   Jongeling, Robbert
   Causevic, Adnan
   Sundmark, Daniel
TI Exploring behaviours of RESTful APIs in an industrial setting
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Property-based testing; Examples; Automated testing; REST API test
   generation; OpenAPI
AB A common way of exposing functionality in contemporary systems is by providing a Web-API based on the REST API architectural guidelines. To describe REST APIs, the industry standard is currently OpenAPI-specifications. Test generation and fuzzing methods targeting OpenAPI-described REST APIs have been a very active research area in recent years. An open research challenge is to aid users in better understanding their API, in addition to finding faults and to cover all the code. In this paper, we address this challenge by proposing a set of behavioural properties, common to REST APIs, which are used to generate examples of behaviours that these APIs exhibit. These examples can be used both (i) to further the understanding of the API and (ii) as a source of automatic test cases. Our evaluation shows that our approach can generate examples deemed relevant for understanding the system and for a source of test generation by practitioners. In addition, we show that basing test generation on behavioural properties provides tests that are less dependent on the state of the system, while at the same time yielding a similar code coverage as state-of-the-art methods in REST API fuzzing in a given time limit.
C1 [Karlsson, Stefan; Causevic, Adnan] ABB AB, Vasteras, Sweden.
   [Karlsson, Stefan; Jongeling, Robbert; Sundmark, Daniel] Malardalen Univ, Vasteras, Sweden.
C3 ABB; Malardalen University
RP Karlsson, S (corresponding author), ABB AB, Vasteras, Sweden.; Karlsson, S (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM stefan.l.karlsson@mdu.se; robbert.jongeling@mdu.se;
   adnan.causevic@se.abb.com; daniel.sundmark@mdu.se
FU Malardalen University; ABB; Knowledge Foundation (KKS)
FX Open access funding provided by Malardalen University. This work is
   funded by ABB, and The Knowledge Foundation (KKS).
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atlidakis V., 2020, ARXIV, DOI DOI 10.48550/ARXIV.2005.11498
   Atlidakis V, 2020, IEEE INT CONF SOFTW, P387, DOI 10.1109/ICST46399.2020.00046
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Barnaby C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1353, DOI 10.1145/3368089.3417052
   Breen RL, 2006, J GEOGR HIGHER EDUC, V30, P463, DOI 10.1080/03098260600927575
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Corradini D, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1808
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Fielding R. T., 2000, Architectural Styles and the Design of Network-based Software Architectures
   Fowler SJ., 2016, PRODUCTION READY MIC
   Gerdes A., 2018, P 17 ACM SIGPLAN INT, P13, DOI DOI 10.1145/3239332.3242763
   Godefroid P., 2020, DIFFERENTIAL REGRESS, P312, DOI [10.1145/3395363.3397374, DOI 10.1145/3395363.3397374]
   Godefroid P, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P725, DOI 10.1145/3368089.3409719
   Golmohammadi A, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3617175
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hatfield-Dodds Z., 2021, ARXIV, DOI DOI 10.48550/ARXIV.2112.10328
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Karlsson S, 2024, SOFTWARE QUAL J, V32, P729, DOI 10.1007/s11219-024-09668-2
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Kim J, 2009, IEEE INT CONF AUTOM, P540, DOI 10.1109/ASE.2009.39
   Kim M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P289, DOI 10.1145/3533767.3534401
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Laranjeiro N, 2021, IEEE ACCESS, V9, P24738, DOI 10.1109/ACCESS.2021.3056505
   Mar LW, 2011, ASIA PAC SOFWR ENG, P331, DOI [10.1109/APSEC.2011.18, 10.1109/APSC.2011.18]
   Martin J, 2022, INT C PROGRAM COMPRE, P321, DOI 10.1145/3524610.3527872
   Martin-Lopez A, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P408, DOI 10.1145/3540250.3549144
   Martin-Lopez A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P682, DOI 10.1145/3460319.3469082
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Mittal V. O., 1994, P 11 EUR C ART INT
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Novick D., 2006, P SPECIAL INTEREST G, P84, DOI DOI 10.1145/1166324.1166346
   Nykaza J., 2002, P 20 ANN INT C COMP, P133, DOI [DOI 10.1145/584955.584976, 10.1145/584955.584976]
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Segura S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P882, DOI 10.1145/3180155.3182528
   Serbout S., 2024, 2024 21 IEEE ACM INT
   Serbout S, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P84, DOI 10.1109/ICSA-C54293.2022.00059
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Sohan SM, 2017, S VIS LANG HUM CEN C, P53, DOI 10.1109/VLHCC.2017.8103450
   Stallenberg D, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P117, DOI 10.1109/ASE51524.2021.9678586
   Viglianisi E, 2020, IEEE INT CONF SOFTW, P142, DOI 10.1109/ICST46399.2020.00024
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu HY, 2022, PROC INT CONF SOFTW, P426, DOI 10.1145/3510003.3510151
   Zhang M., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2205.05325
   Zhang M., 2021, RESOURCE DEPENDENCY, DOI [10.1007/s10664-020-09937-1, DOI 10.1007/S10664-020-09937-1]
   Zhang M., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2208.03988
NR 53
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1287
EP 1324
DI 10.1007/s11219-024-09686-0
EA JUL 2024
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001261484000003
OA hybrid
DA 2024-08-05
ER

PT J
AU Mohammed, MA
   Alshayeb, M
   Hassine, J
AF Mohammed, Mawal A.
   Alshayeb, Mohammad
   Hassine, Jameleddine
TI A rule-based approach for the identification of quality improvement
   opportunities in GRL models
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Requirements engineering; Goals; Bad smells; Rule-based; OCL
ID REQUIREMENTS
AB Goal-oriented modeling languages have been proposed to elicit, analyze, and document high-level system requirements in the early stages of the requirements engineering (RE) process. Problems during this stage may disseminate to the subsequent stages in the software development process and artifacts. Therefore, improving the quality of goal models would improve the quality of the requirements and, consequently, the quality of the developed system. This paper proposes an approach to help modelers identify quality improvement opportunities in Goal-oriented Requirements Language (GRL) goal models. To this end, a list of GRL bad smells (i.e., bad quality symptoms) is introduced and evaluated by experts. Then, an automated rule-based technique is proposed to detect the instances of these smells. The proposed approach is evaluated using a dataset gathered from academic and real-world projects. The results show that the developed technique could successfully detect the instances of the proposed bad smells in the evaluation models. We also found that the instances of the proposed bad smells were prevalent in both academic and industrial settings. The proposed bad smells and the detection technique provide a tool to locate quality improvement opportunities in GRL goal models.
C1 [Mohammed, Mawal A.] Prince Sattam Bin Abdulaziz Univ, Dept Software Engn, Al Kjarj, Saudi Arabia.
   [Alshayeb, Mohammad; Hassine, Jameleddine] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Alshayeb, Mohammad; Hassine, Jameleddine] Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
C3 Prince Sattam Bin Abdulaziz University; King Fahd University of
   Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.; Alshayeb, M (corresponding author), Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
EM maw.mohammed@psau.edu.sa; alshayeb@kfupm.edu.sa; jhassine@kfupm.edu.sa
FU King Fahd University of Petroleum and Minerals in the development
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals in the development of this work.
CR AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Amyot D., 2011, ISTAR, V766, P160
   Amyot D, 2022, ENTERP MODELLING INF, V17, P1, DOI 10.18417/emisa.17.2
   Amyot D, 2009, LECT NOTES COMPUT SC, V5833, P254, DOI 10.1007/978-3-642-04947-7_31
   Arendt Thorsten., 2010, UML MODEL SMELLS MOD
   Asano K, 2017, LECT NOTES COMPUT SC, V10651, P122, DOI 10.1007/978-3-319-70625-2_12
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Baslyman M, 2017, LECT NOTES BUS INF P, V289, P151, DOI 10.1007/978-3-319-59041-7_9
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Booch G., 1997, UML DOCUMENTATION SE, P1
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Chung L, 2012, Non-functional requirements in software engineering, V5
   Czibula G, 2015, KNOWL INF SYST, V42, P545, DOI 10.1007/s10115-013-0721-z
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DeMarco T., 1979, PIONEERS THEIR CONTR, P255, DOI DOI 10.1007/978-3-642-48354-7
   Denger C, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P163, DOI 10.1007/3-540-28244-0_8
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Enckevort T. v., 2009, P 24 ACM SIGPLAN C C
   Femmer H., 2014, P 1 INT WORKSH RAP C
   Femmer H., 2017, REQUIREMENTS ENG ART
   Femmer H, 2016, LECT NOTES COMPUT SC, V10027, P506, DOI 10.1007/978-3-319-49094-6_36
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fowler M., 2018, Refactoring: improving the design of existing code
   Georg G, 2015, INFORM SOFTWARE TECH, V59, P109, DOI 10.1016/j.infsof.2014.11.003
   Ghanavati S., 2014, Proceedings of the 6th International Workshop on Modeling in Software Engineering, P1, DOI [10.1145/2593770.2593780, DOI 10.1145/2593770.2593780]
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Horkoff J, 2016, INT REQUIR ENG CONF, P106, DOI 10.1109/RE.2016.41
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   ITU-T Z., 2018, 151 USER REQUIREMENT
   Jiang DX, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P299, DOI 10.1109/IMCCC.2012.74
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   Katasonov A, 2006, REQUIR ENG, V11, P42, DOI 10.1007/s00766-005-0018-1
   Kessentini M, 2011, EUR CON SFTWR MTNCE, P241, DOI 10.1109/CSMR.2011.30
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Kim T.-W., 2013, International Journal of Software Engineering and Its Applications, V7, P35
   김태웅, 2008, [The KIPS Transactions : Part D, 정보처리학회논문지D], V15, P825
   Knauss E, 2009, LECT NOTES BUS INF P, V32, P28
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Lapouchnian A., 2005, GOAL ORIENTED REQUIR, P32
   Lee KS, 2005, COMPUT METHOD APPL M, V194, P3902, DOI 10.1016/j.cma.2004.09.007
   Liu X., 2009, INT C E TECHN
   Lones M., 2011, SEAN LUKE ESSENTIALS
   Maneerat N., 2011, 8 INT JOINT C COMP S
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mohammed MA, 2022, INT J SOFTW TOOLS TE, V24, P889, DOI 10.1007/s10009-022-00662-2
   Mohammed MA, 2022, SOFTW SYST MODEL, V21, P2007, DOI 10.1007/s10270-021-00965-z
   Mumtaz H, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2154
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Neace K, 2018, REQUIR ENG, V23, P509, DOI 10.1007/s00766-017-0278-6
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Peiris M, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P237, DOI 10.1145/2851553.2851563
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Rumbaugh J., 1991, OBJECT ORIENTED MODE, V199
   Salger F, 2013, S VIS LANG HUM CEN C, P250, DOI 10.1109/RE.2013.6636725
   Seki Y, 2019, INT REQUIR ENG CONF, P98, DOI 10.1109/RE.2019.00021
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Silva C. T., 2011, WER
   Standardization I. O. f., 2018, 291482018 ISOIECIEEE
   Stolc M, 2010, 2010 IEEE 8TH INTERNATIONAL SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS, P77
   Tekin U, 2014, SCI COMPUT PROGRAM, V95, P406, DOI 10.1016/j.scico.2013.09.015
   Tukur M, 2021, ARAB J SCI ENG, V46, P3723, DOI 10.1007/s13369-020-05159-1
   van Lamsweerde A, 2004, LECT NOTES COMPUT SC, V2941, P325
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   West D. B., 2001, INTRO GRAPH THEORY
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yan J. B., 2008, STATIC SEMANTICS CHE
   Yu E., 1998, P 4 INT WORKSH REQ E
   Yu E, 2013, S VIS LANG HUM CEN C, P366, DOI 10.1109/RE.2013.6636754
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zelkowitz M. V., 1983, SOFTWARE IND STATE A
NR 78
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1007
EP 1037
DI 10.1007/s11219-024-09679-z
EA JUN 2024
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001242125600001
DA 2024-08-05
ER

PT J
AU Wei, XJ
   Sun, CA
   Zhang, XY
AF Wei, Xinjie
   Sun, Chang-ai
   Zhang, Xiao-Yi
TI KAD: a knowledge formalization-based anomaly detection approach for
   distributed systems
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Distributed systems; Domain-specific language; Anomaly detection;
   Industrial evidence
AB Large-scale distributed systems are becoming key engines of the IT industry due to their scalability and extensibility. A distributed system often involves numerous complex interactions among components, suffering anomalies such as data inconsistencies between components and unanticipated delays in response times. Existing anomaly detection techniques, which extract knowledge from system logs using either statistical or machine learning techniques, exhibit limitations. Statistical techniques often miss implicit anomalies that are related to complex interactions manifested by logs, whereas machine learning techniques lack explainability and they are usually sensitive to log variations. In this paper, we propose KAD, a knowledge formalization-based anomaly detection approach for distributed systems. KAD includes a general knowledge description language (KDL), leveraging the general structure of system logs and extended Backus-Naur form (EBNF) for complex knowledge extraction. Particularly, the semantic set is constructed based on the bidirectional encoder representation from the transformer (BERT) model to improve the expressive capabilities of KDL in knowledge description. In addition, KAD incorporates distributed scheduling computation module to improve the efficiency of anomaly detection processes. Experimental results based on two widely used benchmarks show that KAD can accurately describe the knowledge associated with anomalies, with a high F1-score in detecting various anomaly types.
C1 [Wei, Xinjie; Sun, Chang-ai; Zhang, Xiao-Yi] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing 100083, Peoples R China.
C3 University of Science & Technology Beijing
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing 100083, Peoples R China.
EM xinjiewei@xs.ustb.edu.cn; casun@ustb.edu.cn; xiaoyi@ustb.edu.cn
FU National Natural Science Foundation of China
FX No Statement Available
CR Ali A, 2023, SENSORS-BASEL, V23, DOI 10.3390/s23042100
   Apache Hadoop, 2023, APACHE HADOOP HOME
   Apache Spark, 2023, WHAT IS APACHE SPARK
   Bertero C, 2017, PROC INT SYMP SOFTW, P351, DOI 10.1109/ISSRE.2017.43
   Breier Jakub, 2015, Information Science and Applications, P449, DOI 10.1007/978-3-662-46578-3_53
   Chen Lu, 2023, Web Information Systems and Applications: 20th International Conference, WISA 2023, Proceedings. Lecture Notes in Computer Science (14094), P427, DOI 10.1007/978-981-99-6222-8_36
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Fu Y, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10214-6
   Gutierrez C, 2021, COMMUN ACM, V64, P96, DOI [10.1145/3447772, 10.1145/3418294]
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   Hidayati J., 2023, UNCERTAIN SUPPLY CHA, V11, P31, DOI [10.5267/j.uscm.2022.12.003, DOI 10.5267/J.USCM.2022.12.003]
   HRISTOV M, 2021, P 2021 IEEE 20 INT S, P1
   Huang SH, 2023, IEEE T COMPUT, V72, P2656, DOI 10.1109/TC.2023.3257518
   IBM, 2023, ARIEL QUERY LANGUAGE
   Le VH, 2022, PROC INT CONF SOFTW, P1356, DOI 10.1145/3510003.3510155
   Li HM, 2020, 2020 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND COMPUTER ENGINEERING (ICAICE 2020), P347, DOI 10.1109/ICAICE51518.2020.00073
   Liang E., 2023, RAY
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Lu SY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P151, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037
   Ma XX, 2024, IEEE T IND INFORM, V20, P1687, DOI 10.1109/TII.2023.3280246
   Majeed A, 2019, J AMB INTEL HUM COMP, V10, P1509, DOI 10.1007/s12652-018-0936-7
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Moritz P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P561
   Nedelkoski S, 2020, IEEE DATA MINING, P1196, DOI 10.1109/ICDM50108.2020.00148
   Gómez ALP, 2023, SUSTAIN COMPUT-INFOR, V37, DOI 10.1016/j.suscom.2022.100842
   Qi JX, 2023, IEEE T NETW SERV MAN, V20, P1378, DOI 10.1109/TNSM.2023.3239522
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Splunk Enterprise, 2023, SEARCH TUTORIAL USE
   Tietz V, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P862, DOI 10.1145/3550356.3561552
   Vinayakumar R, 2017, 2017 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P236, DOI 10.1109/ICACCI.2017.8125846
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Zhang K, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P1291, DOI 10.1109/BigData.2016.7840733
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
NR 37
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 821
EP 845
DI 10.1007/s11219-024-09670-8
EA MAY 2024
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001220316900001
DA 2024-08-05
ER

PT J
AU Sener, U
   Gökalp, E
   Eren, PE
AF Sener, Umut
   Gokalp, Ebru
   Eren, P. Erhan
TI CLOUD-QM: a quality model for benchmarking cloud-based enterprise
   information systems
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Cloud computing; Quality model; Cloud-based enterprise information
   systems; Benchmarking; Decision making
ID SOFTWARE QUALITY; SERVICE QUALITY; ADOPTION; SMES
AB Organizations are increasingly migrating from on-premise enterprise information systems (EIS) to cloud products due to cloud computing benefits, such as flexibility, elasticity, and on-demand service. However, identifying the most suitable option becomes challenging with the proliferation of Cloud-EIS solutions in the market. To address this challenge, this study introduces a novel quality model named Cloud-QM, based on ISO/IEC 250nn standards. It diagnoses the quality of Cloud-EIS products, benchmarks available options, and identifies the most suitable choice for the organization. Cloud-QM comprises 10 main dimensions, 33 sub-dimensions, and corresponding metrics for a systematic quality assessment. Furthermore, the practical use of Cloud-QM is illustrated through a case study that evaluates two substitute Cloud-EIS products. The results from the case study highlight the effectiveness of Cloud-QM in enabling decision-makers to delve into the quality dimensions and facilitate the selection of the most suitable product for their organizations. The main contributions are as follows: (1) proposing a comprehensive and hierarchically structured quality model for Cloud-EIS products; (2) offering a quantifiable and standardized assessment approach through a set of metrics for quality evaluation; and (3) demonstrating applicability and usability of Cloud-QM by benchmarking Cloud-EIS products.
C1 [Sener, Umut; Eren, P. Erhan] Middle East Tech Univ, Grad Sch Informat, Ankara, Turkiye.
   [Gokalp, Ebru] Hacettepe Univ, Dept Comp Engn, Ankara, Turkiye.
C3 Middle East Technical University; Hacettepe University
RP Sener, U (corresponding author), Middle East Tech Univ, Grad Sch Informat, Ankara, Turkiye.
EM sumut@metu.edu.tr; ebrugokalp@hacettepe.edu.tr; ereren@metu.edu.tr
CR Adnan Rawashdeh., 2006, J COMPUTER SCI, V2, P373, DOI DOI 10.3844/JCSSP.2006.373.381
   Aletabi H., 2023, INT C INFORM TECHNOL, V2023, P695, DOI [10.1109/icit58056.2023.10225894, DOI 10.1109/ICIT58056.2023.10225894]
   Alkhatib Ahmad, 2021, 2021 International Conference on Information Technology (ICIT), P230, DOI 10.1109/ICIT52682.2021.9491680
   Alvaro A., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI [DOI 10.1145/1668862.1668863, 10.1145/1668862.1668863]
   [Anonymous], 2003, 91262 ISOIEC
   [Anonymous], 2011, ISOIEC 25010
   [Anonymous], 2015, 270017 ISOIEC
   [Anonymous], 2016, 25023 ISOIEC
   [Anonymous], 2014, 270018  ISOIEC
   [Anonymous], 2001, ISO/IEC 9126-1:2001
   [Anonymous], 2014, 25000 ISOIEC
   [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   [Anonymous], 2011, BSI STANDARDS PUBLIC
   Bayar A., 2023, EC GRIDS CLOUDS SYST, DOI [10.1007/978-3-031-29315-3_11, DOI 10.1007/978-3-031-29315-3_11]
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Benlian A, 2011, J MANAGE INFORM SYST, V28, P85, DOI 10.2753/MIS0742-1222280303
   Boehm B. W., 1978, MERRITT CHARACTERIST
   Bohn R. B., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P594, DOI 10.1109/SERVICES.2011.105
   Bukhari Z, 2019, INT J ADV COMPUT SC, V10, P223
   Bumpus W., 2013, NIST CLOUD COMPUTING, DOI [10.6028/NIST.SP.500-291r2, DOI 10.6028/NIST.SP.500-291R2]
   Buonanno G, 2005, J ENTERP INF MANAG, V18, P384, DOI 10.1108/17410390510609572
   Cavano J. P., 1978, P SOFTW QUAL ASS WOR, P133, DOI [DOI 10.1145/800283.811113, 10.1145/800283.811113]
   Côté MA, 2007, SOFTWARE QUAL J, V15, P401, DOI 10.1007/s11219-007-9029-0
   Dadhich M, 2019, PROCEEDINGS 2019 AMITY INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AICAI), P778, DOI [10.1109/aicai.2019.8701300, 10.1109/AICAI.2019.8701300]
   Dhamdhere S. N., 2013, CLOUD COMPUTING VIRT
   Dromey RG., 2011, SOFTWARE PROCESS IMP, V21, P269, DOI [10.1109/9781118156667.ch6, DOI 10.1109/9781118156667.CH6]
   Enríquez JG, 2019, COMPUT STAND INTER, V61, P77, DOI 10.1016/j.csi.2018.05.003
   Gartner, 2023, Gartner Forecasts Worldwide Public Cloud End-User Spending to Reach 79 Billion in 2024
   Henrique C., 2022, TOP 4 TRENDS ARE SHA
   Hourani H, 2018, INT CONF COMP SCI, P13, DOI 10.1109/CSIT.2018.8486161
   Kang X, 2011, IEEE ICC
   Karim Raed, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P341, DOI 10.1109/SERVICES.2013.71
   Kaynama SA., 2000, J PROFESSIONAL SERVI, V21, P63, DOI [10.1300/J090v21n01_05, DOI 10.1300/J090V21N01_05]
   Nguyen K, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162626
   Khosravi K., 2004, GERMAN IND STANDARD, V12
   Koc B., 2022, 2022 3 INT INF SOFTW, P1, DOI [10.1109/IISEC56263.2022.9998286, DOI 10.1109/IISEC56263.2022.9998286]
   Koteska B, 2018, INT J SOFTW ENG KNOW, V28, P407, DOI 10.1142/S0218194018500146
   Kumar P., 2012, Adv. Comput. Int. J, V3, P2, DOI [10.5121/acij.2012.3212, DOI 10.5121/ACIJ.2012.3212]
   Linstone H.A., 1975, Journal of Marketing Research, DOI DOI 10.2307/3150755
   Loiacono ET, 2007, INT J ELECTRON COMM, V11, P51, DOI 10.2753/JEC1086-4415110302
   Loo I. De., 2010, 8 INT C ENT SYST ACC, P11
   Ma QX, 2005, INFORM MANAGE-AMSTER, V42, P1067, DOI 10.1016/j.im.2004.11.007
   Parasuraman A., 1995, Understanding services management
   Ramchand K, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-020-00210-w
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sandhu R, 2010, PROCEEDINGS OF THE 2010 ACM WORKSHOP CLOUD COMPUTING SECURITY WORKSHOP (CCSW'10:), P13, DOI 10.1145/1866835.1866839
   Seffah A, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P311, DOI 10.1109/APAQS.2001.990036
   Sener U., 2017, EC GRIDS CLOUDS SYST, P249, DOI [10.1007/978-3-319-68066-8_19, DOI 10.1007/978-3-319-68066-8_19]
   Sener U., 2023, INTELLIGENT SYSTEMS, DOI [10.1007/978-3-031-16598-6_4, DOI 10.1007/978-3-031-16598-6_4]
   Sener U, 2016, COMM COM INF SC, V639, P53, DOI 10.1007/978-3-319-46254-7_5
   Shepperd M, 2022, SOFTWARE QUAL J, V30, P281, DOI 10.1007/s11219-022-09584-3
   Stieninger M, 2014, PROC TECH, V16, P85, DOI 10.1016/j.protcy.2014.10.071
   Sultan NA, 2011, INT J INFORM MANAGE, V31, P272, DOI 10.1016/j.ijinfomgt.2010.08.001
   Wilson DN, 1998, SOFTWARE QUAL J, V7, P67, DOI 10.1023/B:SQJO.0000042060.88173.fe
   Yilmaz N, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2458
   Yin RK., 2014, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zeithaml VA, 2002, J ACAD MARKET SCI, V30, P362, DOI 10.1177/009207002236911
   Zheng XR, 2014, IEEE T IND INFORM, V10, P1527, DOI 10.1109/TII.2014.2306329
NR 58
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 881
EP 920
DI 10.1007/s11219-024-09669-1
EA MAY 2024
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001222358200002
DA 2024-08-05
ER

PT J
AU Zhang, JL
   Wang, ZB
   Jiang, ZL
   Wu, M
   Li, C
   Yamanishi, Y
AF Zhang, Jinli
   Wang, Zhenbo
   Jiang, Zongli
   Wu, Man
   Li, Chen
   Yamanishi, Yoshihiro
TI Quantitative evaluation of molecular generation performance of
   graph-based GANs
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Quantitative evaluation; Molecular generation; Generative adversarial
   network; Reinforcement learning
AB Deep generative models have been widely used in molecular generation tasks because they can save time and cost in drug development compared with traditional methods. Previous studies based on generative adversarial network (GAN) models typically employ reinforcement learning (RL) to constrain chemical properties, resulting in efficient and novel molecules. However, such models have poor performance in generating molecules due to instability in training. Therefore, quantitative evaluation of existing molecular generation models, especially GAN models, is necessary. This study aims to evaluate the performance of discrete GAN models using RL in molecular generation tasks and explore the impact of different factors on model performance. Through evaluation experiments on QM9 and ZINC datasets, the results show that noise sampling distributions, training epochs, and training data volumes can affect the performance of molecular generation. Finally, we provide strategies for stable training and improved performance for GAN models.
C1 [Zhang, Jinli; Wang, Zhenbo; Jiang, Zongli] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
   [Wu, Man] Keio Univ, Dept Informat & Comp Sci, Yokohama, Japan.
   [Li, Chen; Yamanishi, Yoshihiro] Nagoya Univ, Grad Sch Informat, Nagoya, Japan.
C3 Beijing University of Technology; Keio University; Nagoya University
RP Wu, M (corresponding author), Keio Univ, Dept Informat & Comp Sci, Yokohama, Japan.; Li, C (corresponding author), Nagoya Univ, Grad Sch Informat, Nagoya, Japan.
EM wu.man.wi5@am.ics.keio.ac.jp; li.chen.z2@a.mail.nagoya-u.ac.jp
FU the JSPS KAKENHI Grant Number JP22K21285, Japan [JP22K21285]; JSPS
   KAKENHI
FX We would like to acknowledge the financial support provided by two
   grants, the JSPS KAKENHI Grant Number JP22K21285, Japan and the
   International Research Fellow of Japan Society for the Promotion of
   Science (Postdoctoral Fellowships for Research in Japan [Standard]),
   which made this research possible.
CR An Zhiwei, 2023, Knowledge Science, Engineering and Management: 16th International Conference, KSEM 2023, Proceedings. Lecture Notes in Computer Science, Lecture Notes in Artificial Intelligence (14119), P160, DOI 10.1007/978-3-031-40289-0_13
   Bagal V, 2022, J CHEM INF MODEL, V62, P2064, DOI 10.1021/acs.jcim.1c00600
   Bao F., 2022, PREPRINT
   Bickerton GR, 2012, NAT CHEM, V4, P90, DOI [10.1038/NCHEM.1243, 10.1038/nchem.1243]
   Comer J, 2001, PHARMACOKINETIC OPTIMIZATION IN DRUG RESEARCH, P275, DOI 10.1002/9783906390437.ch17
   DeCao N., 2018, PREPRINT
   Dror RO, 2023, PMLR, P38592
   Ertl P, 2009, J CHEMINFORMATICS, V1, DOI 10.1186/1758-2946-1-8
   Gómez-Bombarelli R, 2018, ACS CENTRAL SCI, V4, P268, DOI 10.1021/acscentsci.7b00572
   Gomez-Rodriguez M., 2018, PREPRINT
   Goodfellow IJ, 2014, ADV NEUR IN, V27, P2672, DOI 10.1145/3422622
   Guimaraes G.L., 2017, PREPRINT
   Hoogeboom E, 2022, PR MACH LEARN RES
   Huang L, 2023, AAAI CONF ARTIF INTE, P5105
   Irwin JJ, 2012, J CHEM INF MODEL, V52, P1757, DOI 10.1021/ci3001277
   Jiang Zongli, 2022, 2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys), P110, DOI 10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00048
   Jin WG, 2018, PR MACH LEARN RES, V80
   Kadurin A, 2017, MOL PHARMACEUT, V14, P3098, DOI 10.1021/acs.molpharmaceut.7b00346
   Kim S, 2016, NUCLEIC ACIDS RES, V44, pD1202, DOI 10.1093/nar/gkv951
   Kingma D. P., 2013, PREPRINT
   Kusner MJ, 2017, PR MACH LEARN RES, V70
   Li C., 2023, PREPRINT
   Li C., 2021, P 31 INT JOINT C ART, P3884
   Li C, 2023, LECT NOTES ARTIF INT, V14169, P323, DOI 10.1007/978-3-031-43412-9_19
   Li C, 2022, INT J MATH ENG MANAG, V7, P325, DOI 10.33889/IJMEMS.2022.7.3.022
   Li C, 2018, IEEE INT CONF BIG DA, P5372, DOI 10.1109/BigData.2018.8622411
   Li Y., 2015, PREPRINT
   Lillicrap TP, 2015, ARXIV
   Maziarka L, 2020, J CHEMINFORMATICS, V12, DOI 10.1186/s13321-019-0404-1
   Morehead A., 2023, PREPRINT
   Ramakrishnan R, 2014, SCI DATA, V1, DOI 10.1038/sdata.2014.22
   Rifaioglu AS, 2021, BIOINFORMATICS, V37, P693, DOI 10.1093/bioinformatics/btaa858
   ROGERS DJ, 1960, SCIENCE, V132, P1115, DOI 10.1126/science.132.3434.1115
   Sanchez-Lengeling B., 2017, OPTIMIZING DISTRIBUT
   Sarpong D, 2023, TECHNOVATION, V122, DOI 10.1016/j.technovation.2022.102581
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Shi C., 2020, PREPRINT
   Simonovsky M, 2018, LECT NOTES COMPUT SC, V11139, P412, DOI 10.1007/978-3-030-01418-6_41
   Song T, 2023, METHODS, V211, P10, DOI 10.1016/j.ymeth.2023.02.001
   Walker ARP, 1998, ECOL FOOD NUTR, V37, P21, DOI 10.1080/03670244.1998.9991536
   WILLIAMS RJ, 1992, MACH LEARN, V8, P229, DOI 10.1007/BF00992696
   You JX, 2018, PR MACH LEARN RES, V80
   Yu LT, 2017, AAAI CONF ARTIF INTE, P2852
   Zhang X., 2019, B NETWORKING COMPUTI, V8, P9
   Zhao Bocheng, 2022, 2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys), P194, DOI 10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00058
   Zhu JY, 2017, IEEE I CONF COMP VIS, P2242, DOI 10.1109/ICCV.2017.244
NR 46
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 791
EP 819
DI 10.1007/s11219-024-09671-7
EA APR 2024
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001208211900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Junaid, W
   Li, Z
AF Junaid, Waqas
   Li, Zhi
TI Tackling visual and conceptual complexity of problem-oriented modeling
   of requirements
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Auto-layout; Overlapping detection and resolution; GUI; Problem Frames;
   Cause and effect association; Problem diagram
ID DESIGN
AB In the contemporary age of cyber-physical systems (CPS), where software governs the control, coordination, and management of physical objects to tackle real-world problems, engineering requirements for such systems present considerable challenges. Consequently, it is not surprising that the requirements engineering (RE) community, encompassing both academia and industry, has turned to established RE methodologies and applied them within the context of CPS; notably, Jackson's Problem Frames (PF) approach deploys problem diagrams for modeling CPS. However, problem diagrams of realistic CPS often present visual and conceptual complexities, which must be addressed before PF can be usefully applied in practice. In this paper, the above problem is addressed in two steps: firstly, preliminary findings are presented by deriving from the application of eye-tracking software in the assessment of a technique designed to mitigate the visual complexity inherent in the CARE (Computer-Aided Requirements Engineering) tool developed for PF. An auto-layout technique is developed for detecting and resolving overlaps, aimed at enhancing its usability from the perspectives of cognition, psychology, and user studies; secondly, the technique of a complexity matrix is applied for calculating and evaluating the conceptual complexity inherent in problem diagrams. Our eye-tracking results show the successful implementation of overlap detection and resolution. The case studies in the second step also demonstrate the applicability and effectiveness of the complexity matrix calculations.
C1 [Junaid, Waqas; Li, Zhi] Guangxi Normal Univ, Sch Comp Sci & Engn, Guilin 541004, Guangxi, Peoples R China.
C3 Guangxi Normal University
RP Li, Z (corresponding author), Guangxi Normal Univ, Sch Comp Sci & Engn, Guilin 541004, Guangxi, Peoples R China.
EM waqasjunaid1@gmail.com; zhili@gxnu.edu.cn
FU National Natural Science Foundation of China, and "DuXiu Scholar" Fund,
   and Guangxi "Bagui Scholar"
FX No Statement Available
CR Akiki PA, 2016, IEEE T SOFTWARE ENG, V42, P1118, DOI 10.1109/TSE.2016.2553035
   Al-alshuhai A, 2015, 2015 SAI INTELLIGENT SYSTEMS CONFERENCE (INTELLISYS), P884, DOI 10.1109/IntelliSys.2015.7361247
   ALERYANI A., 2016, International Journal of Scientific and Research Publications, V6, P124
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Carter BT, 2020, INT J PSYCHOPHYSIOL, V155, P49, DOI 10.1016/j.ijpsycho.2020.05.010
   Chen C. L. T., 2010, DISTRIBUTED COLLISIO
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cheng S., 2010, P 2010 WORKSH EYE GA
   Cheng SW, 2012, J MULTIMODAL USER IN, V5, P77, DOI 10.1007/s12193-011-0064-6
   Darwish A, 2018, J AMB INTEL HUM COMP, V9, P1541, DOI 10.1007/s12652-017-0575-4
   Del Bianco V., 2009, 2009 14 IEEE INT C E
   Deng Y., 2022, TRACE4PF TOOL AUTOMA
   Esterle L., 2016, CYBER PHYS SYSTEMS C
   Harris P., 2017, WHAT IS USER INTERFA
   Hoffmann MW, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21061991
   Jackson M., 2001, PROBLEM FRAMES ANALY
   Junaid W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P284, DOI 10.1145/3463274.3463344
   Lavazza L., 2010, P 2010 ACM IEEE INT
   Li Z, 2014, REQUIR ENG, V19, P397, DOI 10.1007/s00766-013-0173-8
   Liu GY, 2015, INT J SOFTW ENG KNOW, V25, P1747, DOI 10.1142/S0218194015710114
   Liu Z, 2023, IEEE T SOFTWARE ENG, V49, P403, DOI 10.1109/TSE.2022.3150876
   Longo L., 2017, HUMAN COMPUTER INTER
   March V., 2005, IEEE C LOC COMP NETW
   McMurrey D., 2019, OPEN TECHNICAL COMMU, V36, P27
   Mehta R., 2004, PFEDIT GRAPHICAL EDI
   Ozkaya I., 2006, 1 INT WORKSH REQ ENG
   Pelczer I, 2013, PROCD SOC BEHV, V78, P195, DOI 10.1016/j.sbspro.2013.04.278
   Pobaru M., 2023, 2023 IEEE INT C CONT
   Quadri I., 2015, ADA USER, V36, P246
   Sabharwal S., 2014, 2014 IEEE INT S SIGN
   Sabharwal S, 2011, INT J SOFTW ENG KNOW, V21, P1097, DOI 10.1142/S021819401100561X
   Silk EM, 2021, DESIGN STUD, V74, DOI 10.1016/j.destud.2021.101015
   Torngren Martin, 2018, Principles of Modeling - Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 10760), P478, DOI 10.1007/978-3-319-95246-8_27
   TVERSKY A, 1981, SCIENCE, V211, P453, DOI 10.1126/science.7455683
   Wang D. M. -H., 2006, 396 COEN
   Winkler A., 2007, NEW AUTOLAYOUT ALGOR
   Yigitbas E, 2020, SOFTW SYST MODEL, V19, P1057, DOI 10.1007/s10270-020-00777-7
NR 37
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 681
EP 702
DI 10.1007/s11219-024-09662-8
EA MAR 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001179730300001
DA 2024-08-05
ER

PT J
AU Yilmaz, N
   Tarhan, AK
AF Yilmaz, Nebi
   Tarhan, Ayca Kolukisa
TI Quality evaluation meta-model for open-source software: multi-method
   validation study
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Software quality; Quality evaluation; Quality measurement; Meta-model;
   Quality model; Open-source software
AB In recent years, open-source software (OSS) has attracted increasing attention due to its easy accessibility via cloud repositories, voluntary community, no vendor lock-in, and low total cost of ownership. In turn, specifying and evaluating OSS quality has become a significant challenge for OSS adoption in organizations that are inclined to use them. Although many OSS quality models have been proposed in the literature, the dynamic and diverse nature of OSS has caused these models to be heterogeneous in terms of structure and content. This has adversely affected the standardization of evaluations and led to the evaluation results obtained from different OSS quality models for the same purpose being incomparable and sometimes unreliable. Therefore, in this study, a meta-model for OSS quality (OSS-QMM), which employs a unified structure from existing quality models and enables the derivation of homogeneous models, has been proposed. For this purpose, a systematic and laborious effort has been spent via a step-based meta-model creation process including review-and-revise iterations. In order to validate the OSS-QMM, case study and expert opinion methods have been applied to answer three research questions (RQs) targeted to investigate practical applicability, results comparability, and effectiveness of using the meta-model. Multiple and embedded case study designs have been employed for evaluating three real ERP systems, and 20 subject matter experts have been interviewed during the validation process. The results of multi-faceted empirical studies have indicated that the OSS-QMM has addressed solving problems in OSS quality evaluation and its adoption with high degrees of confidence.
C1 [Yilmaz, Nebi] Hacettepe Univ, Grad Sch Sci & Engn, Software Engn Res Grp HUSE, Ankara, Turkiye.
   [Tarhan, Ayca Kolukisa] Hacettepe Univ, Comp Engn Dept, Software Engn Res Grp HUSE, Ankara, Turkiye.
C3 Hacettepe University; Hacettepe University
RP Yilmaz, N (corresponding author), Hacettepe Univ, Grad Sch Sci & Engn, Software Engn Res Grp HUSE, Ankara, Turkiye.; Tarhan, AK (corresponding author), Hacettepe Univ, Comp Engn Dept, Software Engn Res Grp HUSE, Ankara, Turkiye.
EM yilmaz@cs.hacettepe.edu.tr; atarhan@cs.hacettepe.edu.tr
OI yilmaz, Nebi/0000-0002-0591-4667
CR Adeoye-Olatunde OA, 2021, J AM COLL CLIN PHARM, V4, P1358, DOI 10.1002/jac5.1441
   Adewumi A, 2019, SOFTWARE PRACT EXPER, V49, P780, DOI 10.1002/spe.2682
   Adewumi A, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3612-4
   Al-dhaqm A, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0170793
   Alsolai H, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106214
   [Anonymous], 1999, 1459831999 ISOIEC
   [Anonymous], 2019, CODEMETRICS
   [Anonymous], 2001, ISO/IEC 9126-1:2001
   [Anonymous], 1993, INT VOCABULARY BASIC
   [Anonymous], 2020, SCITOOLS UNDERSTAND
   [Anonymous], 2004, METRICSRELOADED
   [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   [Anonymous], 2007, 159392007 ISOIEC
   [Anonymous], 2023, LIST QUESTIONS EXPER
   Ardito L, 2020, SCI PROGRAMMING-NETH, V2020, DOI 10.1155/2020/8840389
   Arthur J. D., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P40, DOI 10.1109/ICSM.1989.65192
   Aversano L, 2017, PROCEDIA COMPUT SCI, V121, P423, DOI 10.1016/j.procs.2017.11.057
   Aversano L, 2013, INFORM SOFTWARE TECH, V55, P1260, DOI 10.1016/j.infsof.2013.01.007
   Bakar A.D., 2012, Int. Rev. Comput. Software, V7, P903
   Bayer J, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P269, DOI 10.1109/ECBS.2006.18
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P1106, DOI 10.1109/TSE.2002.1158285
   Brings J, 2020, FUTURE GENER COMP SY, V112, P1010, DOI 10.1016/j.future.2020.06.049
   Butler S, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111152
   Chakraborty S., 2022, DECISION ANALYTICS J, V2, P100021, DOI [DOI 10.1016/J.DAJOUR.2021.100021, 10.1016/j.dajour.2021.100021]
   Chawla M. K., 2015, P 8 ANN ACM IND C P 8 ANN ACM IND C NE, P9
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Dubey SK., 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020983
   Duijnhouwer F. W., 2003, CAPGEMINI EXPERT LET
   Dweiri F, 2016, EXPERT SYST APPL, V62, P273, DOI 10.1016/j.eswa.2016.06.030
   Eghan EE, 2019, SOFTWARE QUAL J, V27, P969, DOI 10.1007/s11219-018-9428-4
   Frantz RZ, 2019, SOFTWARE PRACT EXPER, V49, P1531, DOI 10.1002/spe.2733
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Gezici B, 2019, EUROMICRO CONF PROC, P363, DOI 10.1109/SEAA.2019.00062
   Goeb A., 2013, ELECTR COMMUN, V60
   Grady RB., 1992, PRACTICAL SOFTWARE M
   Habra N., 2010, P 20 INT WORKSHOP SO
   Hanefi Calp M., 2011, POLITEKNIK DERGISI J, V14141, P9
   Hanine M, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-1888-z
   Hasnain S, 2020, CASE STUD THERM ENG, V19, DOI 10.1016/j.csite.2020.100636
   Hauge O., 2009, ICSE WORKSHOP EMERGI
   Hmood A., 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P334, DOI 10.1109/COMPSACW.2012.67
   Ho W, 2018, EUR J OPER RES, V267, P399, DOI 10.1016/j.ejor.2017.09.007
   IEEE Standard for a Software Quality Metrics Methodology, 1998, 10611998 IEEE
   Isiklar G, 2007, COMPUT STAND INTER, V29, P265, DOI 10.1016/j.csi.2006.05.002
   Jha S, 2019, IEEE ACCESS, V7, P61840, DOI 10.1109/ACCESS.2019.2913349
   Jiang S, 2021, INT C COMP SUPP COOP, P244, DOI 10.1109/CSCWD49262.2021.9437661
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI DOI 10.9734/BJAST/2015/14975
   Khashei-Siuki A, 2020, GROUNDWATER SUST DEV, V10, DOI 10.1016/j.gsd.2019.100328
   Khatri S. K., 2016, 5 INT C RELIABILITY
   Kim H. M., 1999, THESIS U TORONTO CAN
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Klas M., 2010, P 20 INT WORKSHOP SO
   Lenarduzzi V, 2020, EUROMICRO CONF PROC, P437, DOI 10.1109/SEAA51224.2020.00076
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Magaldi D., 2020, ENCY PERSONALITY IND, P4825, DOI DOI 10.1007/978-3-319-24612-3_857
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   Mens T., 2011, 15 EUROPEAN C SOFTWA
   Nistala P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P125, DOI 10.1109/ICSSP.2019.00025
   Object Management Group (OMG), 2019, META OBJECT FACILITY
   Othman S. H., 2010, 21 AUSTRALASIAN C IN
   Othman SH, 2014, INFORM PROCESS MANAG, V50, P235, DOI 10.1016/j.ipm.2013.11.001
   Saaty T., 1980, ANAL HIERARCHY PROCE
   Saaty T. L., 2008, Int. J. Serv. Sci, V1, P83, DOI DOI 10.1504/IJSSCI.2008.017590
   Saaty TL., 2015, International Journal of the Analytic Hierarchy Process, V7, P589, DOI DOI 10.13033/IJAHP.V7I3.341
   Salem IEB, 2015, TOUR HOSP RES, V15, P240, DOI 10.1177/1467358415581445
   Samoladas I., 2008, IFIP INT C OPEN SOUR
   Semeteys R., 2006, METHOD QUALIFICATION
   Silva DG., 2023, J OPEN INNOV TECHNOL, V9, P21, DOI 10.1016/j.joitmc.2023.01.002
   Sjoberg G., 2020, A case for the case study
   Soto M, 2009, INT SYMP EMP SOFTWAR, P499
   Spinellis D., 2011, METRIC DESCRIPTION
   Swedberg R, 2020, STRAT SOC INQ, P17
   Tanriöver ÖÖ, 2011, COMPUT STAND INTER, V33, P448, DOI 10.1016/j.csi.2010.12.001
   Tassone Joseph, 2018, 2018 IEEE/ACIS 17th International Conference on Computer and Information Science (ICIS). Proceedings, P411, DOI 10.1109/ICIS.2018.8466436
   Visconti M, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P179, DOI 10.1109/SCCC.2002.1173192
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Wasserman A. I., 2017, OPEN SOURCE SYSTEMS
   Wasserman M. P., 2006, 1 BRR RFC
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Yalcin AS, 2022, TECHNOL FORECAST SOC, V174, DOI 10.1016/j.techfore.2021.121193
   Yilmaz N., 2020, INT WORKSHOP SOFTWAR
   Yilmaz N., 2023, SUPPLEMENTARY DOCUME, DOI [10.5281/zenodo.7986369, DOI 10.5281/ZENODO.7986369]
   Yilmaz N, 2023, SOFTWARE QUAL J, V31, P721, DOI 10.1007/s11219-022-09603-3
   Yilmaz N, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2458
   Yin R.K., 2018, Case study research and applications: Design and methods, V6th ed.
   Zhao YH, 2021, CYBERSECURITY, V4, DOI 10.1186/s42400-021-00084-8
NR 91
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 487
EP 541
DI 10.1007/s11219-023-09658-w
EA FEB 2024
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001156645100001
DA 2024-08-05
ER

PT J
AU Gordillo, A
   Calero, C
   Moraga, MA
   García, F
   Fernandes, JP
   Abreu, R
   Saraiva, J
AF Gordillo, Alberto
   Calero, Coral
   Moraga, M. angeles
   Garcia, Felix
   Fernandes, Joao Paulo
   Abreu, Rui
   Saraiva, Joao
TI Programming languages ranking based on energy measurements
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Energy consumption; Programming languages; Ranking; Green software;
   Hardware measurements
ID SUSTAINABLE SOFTWARE
AB Software is developed using programming languages whose choice is made based on a wide range of criteria, but it should be noted that the programming language selected can affect the quality of the software product. In this paper, we focus on analysing the differences in energy consumption when running certain algorithms that have been developed using different programming languages. Therefore, we focus on the software quality from the perspective of greenability, in concrete in the aspects related to energy efficiency. For this purpose, this study has conducted an empirical investigation about the most suitable programming languages from an energy efficiency perspective using a hardware-based consumption measurement instrument that obtains real data about energy consumption. The study builds upon a previous study in which energy efficiency of PL were ranked using a software-based approach where the energy consumption is an estimation. As a result, no significant differences are obtained between two approaches, in terms of ranking the PL. However, if it is required to have a more realistic knowledge of consumption, it is necessary to use hardware approaches. Furthermore, the hardware approach provides information about the energy consumption of specific DUT hardware components, such as, HDD, graphics card, and processor, and a ranking for each of component is elaborated. This can provide useful information to make a more informed decision on the choice of a PL, depending on several factors, such as the type of algorithms to be implemented, or the effects on power consumption not only in overall, but also depending on specific DUT hardware components.
C1 [Gordillo, Alberto; Calero, Coral; Moraga, M. angeles; Garcia, Felix] Univ Castilla La Mancha, Inst Technol & Informat Syst, Ciudad Real, Spain.
   [Fernandes, Joao Paulo] NYU, Abu Dhabi, U Arab Emirates.
   [Abreu, Rui] Univ Porto, DEI FEUP, Porto, Portugal.
   [Saraiva, Joao] Univ Minho, Minho, Portugal.
C3 Universidad de Castilla-La Mancha; Universidade do Porto; Universidade
   do Minho
RP Gordillo, A (corresponding author), Univ Castilla La Mancha, Inst Technol & Informat Syst, Ciudad Real, Spain.
EM alberto.gordillo@uclm.es; coral.calero@uclm.es;
   mariaangeles.moraga@uclm.es; felix.garcia@uclm.es; jpaulo@fe.up.pt;
   rma@fe.up.pt; saraiva@di.uminho.pt
FU OASSIS [PID2021-22554OB-C31]; CECD (JCCM) [SBPLY/21/180501/000115];
   FEDER funds; MCIN/AEI [PDC2022-133249-C31, TED2021-129245B-C22];
   European Union NextGenerationEU/PRTR; European Regional Development Fund
   (FEDER) [2022-GRIN-34110]
FX The work has received support from the following projects: OASSIS
   (PID2021-22554OB-C31/ AEI/10.13039/ 501100011033/FEDER, UE); EMMA
   (Project SBPLY/21/180501/000115, funded by CECD (JCCM) and FEDER funds);
   SEEAT (PDC2022-133249-C31 funded by MCIN/AEI/
   https://doi.org/10.13039/501100011033 and European Union
   NextGenerationEU/PRTR); PLAGEMIS (TED2021-129245B-C22 funded by
   MCIN/AEI/ https://doi.org/10.13039/501100011033 and European Union
   NextGenerationEU/PRTR). Financial support for the execution of applied
   research projects, within the framework of the UCLM Own Research Plan,
   co-financed at 85% by the European Regional Development Fund (FEDER)
   UNION (2022-GRIN-34110). DAS: No datasets were generated or analysed
   during the current study.
CR García-Mireles GA, 2018, INFORM SOFTWARE TECH, V95, P108, DOI 10.1016/j.infsof.2017.10.002
   Andrae AS., 2019, International Journal of Science and Engineering Investigations (IJSEI), V8, P27
   [Anonymous], 2008, SOFTWARE PROCESS ENG
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   benchmarksgame-team, The computer language benchmarks game
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Brooks A., 1996, Replication of experimental results in software engineering
   Cabot J, 2019, IEEE SOFTWARE, V36, P98, DOI 10.1109/MS.2019.2897833
   Calero C., 2015, Green in Software Engineering, P231
   Calero C., 2015, Green in software engineering, V3
   Choroszucho A., 2019, SPIE, V11176, P1800
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1109/MSR.2016.015, 10.1145/2901739.2901763]
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Corral-García J, 2021, J SUPERCOMPUT, V77, P3261, DOI 10.1007/s11227-020-03382-z
   Cruz L, 2019, PROC IEEE INT CONF S, P29, DOI 10.1109/ICSME.2019.00013
   Dirlewanger W., 2006, Measurement and rating of computer systems performance and of software efficiency: An introduction to the ISO/IEC 14756 method and a guide to its application
   Fonseca A, 2019, IEEE SOFTWARE, V36, P79, DOI 10.1109/MS.2019.2924498
   Georgiou S, 2018, IEEE WORK CONF MIN S, P303, DOI 10.1145/3196398.3196414
   Gordillo A., 2024, Repository of programming languages ranking based on energy measurements
   Guaman D., 2021, Supporting Sustainability and Technical Debt-Driven Design Decisions in Software Architectures
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Harrison R, 1996, SOFTWARE ENG J, V11, P247, DOI 10.1049/sej.1996.0030
   IEC I., 2011, ISO/IEC 25010: System and Software engineering-System and software Quality Requirements and Evaluation (SQuaRE)-System and software quality models
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kelefouras V, 2019, J SUPERCOMPUT, V75, P6710, DOI 10.1007/s11227-019-02880-z
   Kern E, 2018, FUTURE GENER COMP SY, V86, P199, DOI 10.1016/j.future.2018.02.044
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   Koch C., 2022, PREPRINT
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Li D., 2014, P 3 INT WORKSHOP GRE, P46
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Mancebo J, 2021, SUSTAIN COMPUT-INFOR, V30, DOI 10.1016/j.suscom.2021.100558
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Muna Altherwi, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3310013.3310017
   Murtagh F., 2011, PREPRINT
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Pankratius V, 2012, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2012.6227200
   Penzenstadler Birgit, 2014, SYSTEMATIC MAPPING S, DOI 10.1145/2601248.2601256
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pereira R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2021.102609
   Pereira R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110463
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rosetta code, About us
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Venters C. C., 2014, Software sustainability: The modern tower of babel, V1216, P7
   Vidal J., 2017, Climate Home News, V11
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Yang H., 2024, IEEE Transactions on Software Engineering
NR 56
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 27
PY 2024
DI 10.1007/s11219-024-09690-4
EA JUL 2024
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZU7E5
UT WOS:001277859200001
DA 2024-08-05
ER

PT J
AU Santana, A
   Figueiredo, E
   Pereira, JA
   Garcia, A
AF Santana, Amanda
   Figueiredo, Eduardo
   Pereira, Juliana Alves
   Garcia, Alessandro
TI An exploratory evaluation of code smell agglomerations
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article; Early Access
DE Code smell; Code modularity; Software quantitative analysis; Metrics
ID METRICS SUITE; IMPACT; MAINTAINABILITY; BAD
AB Code smell is a symptom of decisions about the system design or code that may degrade its modularity. For example, they may indicate inheritance misuse, excessive coupling and size. When two or more code smells occur in the same snippet of code, they form a code smell agglomeration. Few studies evaluate how agglomerations may impact code modularity. In this work, we evaluate which aspects of modularity are being hindered by agglomerations. This way, we can support practitioners in improving their code, by refactoring the code involved with code smell agglomeration that was found as harmful to the system modularity. We analyze agglomerations composed of four types of code smells: Large Class, Long Method, Feature Envy, and Refused Bequest. We then conduct a comparison study between 20 systems mined from the Qualita Corpus dataset with 10 systems mined from GitHub. In total, we analyzed 1789 agglomerations in 30 software projects, from both repositories: Qualita Corpus and GitHub. We rely on frequent itemset mining and non-parametric hypothesis testing for our analysis. Agglomerations formed by two or more Feature Envy smells have a significant frequency in the source code for both repositories. Agglomerations formed by different smell types impact the modularity more than classes with only one smell type and classes without smells. For some metrics, when Large Class appears alone, it has a significant and large impact when compared to classes that have two or more method-level smells of the same type. We have identified which agglomerations are more frequent in the source code, and how they may impact the code modularity. Consequently, we provide supporting evidence of which agglomerations developers should refactor to improve the code modularity.
C1 [Santana, Amanda; Figueiredo, Eduardo] Univ Fed Minas Gerais, Dept Comp Sci, Antonio Carlos Ave, BR-31270901 Belo Horizonte, MG, Brazil.
   [Pereira, Juliana Alves; Garcia, Alessandro] Pontif Catholic Univ Rio de Janeiro, Informat Dept, BR-22451900 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal de Minas Gerais
RP Santana, A (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Antonio Carlos Ave, BR-31270901 Belo Horizonte, MG, Brazil.
EM amandads@dcc.ufmg.br; figueiredo@dcc.ufmg.br; juliana@inf.puc-rio.br;
   afgarcia@inf.puc-rio.br
FU CAPES, PROEX,
FX No Statement AvailableDAS:All of the available data will be published
   under GitHub and are currently available at Santana et al. (2024).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Alizadeh Vahid, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P823, DOI 10.1109/ASE.2019.00081
   Alkharabsheh K, 2021, SOFTWARE QUAL J, V29, P197, DOI 10.1007/s11219-021-09550-5
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Aniche M, 2015, JAVA CODE METRICS CA
   Arcoverde R., 2011, Proceedings of the 4th Workshop on Refactoring Tools. WRT 11, P33, DOI [10.1145/1984732.1984740, DOI 10.1145/1984732.1984740]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Brown C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1065, DOI 10.1145/3368089.3409722
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz D, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P31, DOI 10.1145/3387906.3388618
   da S., 2018, P 7 BRAZ S SOFTW COM, P3, DOI [10.1145/3267183, DOI 10.1145/3267183]
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Digkas G, 2022, SOFTWARE QUAL J, V30, P283, DOI 10.1007/s11219-021-09569-8
   Falessi D, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P45, DOI 10.1109/TechDebt52882.2021.00014
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hamdi O, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P26, DOI 10.1109/ASEW52652.2021.00018
   Han JS, 2011, DISCRETE DYN NAT SOC, V2011, DOI 10.1155/2011/980315
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Ichtsis A, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P61, DOI 10.1145/3524843.3528089
   Kerievsky J., 2004, Refactoring to patterns, DOI [10.1007/978-3-540-27777-454, DOI 10.1007/978-3-540-27777-454]
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Lozano A, 2015, 2015 IEEE 2ND INTERNATIONAL WORKSHOP ON PATTERNS PROMOTION AND ANTI-PATTERNS PREVENTION (PPAP), P1, DOI 10.1109/PPAP.2015.7076847
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Martins Julio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P52, DOI 10.1145/3422392.3422419
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meyer B., 1997, Object-Oriented Software Construction, V2
   Moha N., 2007, P 22 IEEE ACM INT C, P527, DOI [10.1145/1321631.1321727, DOI 10.1145/1321631.1321727]
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Oizumi Willian, 2018, Journal of the Brazilian Computer Society, V24, DOI 10.1186/s13173-018-0078-y
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oizumi WN., 2015, Journal of Software Engineering Research and Development, V3, P11, DOI [10.1186/s40411-015-0025-y, DOI 10.1186/S40411-015-0025-Y]
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P8, DOI 10.1109/MALTESQUE.2017.7882010
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pietrzak B, 2006, LECT NOTES COMPUT SC, V4044, P75
   PMD, 2024, PMD source code analyser
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Rahman MM, 2022, INT SYMP EMP SOFTWAR, P289, DOI 10.1145/3544902.3546634
   Santana A., 2024, Online appendix
   Santana A, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1289, DOI 10.1145/3412841.3442003
   Santos Geanderson, 2023, Fundamental Approaches to Software Engineering: 26th International Conference, FASE 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2023, Proceedings. Lecture Notes in Computer Science (13991), P282, DOI 10.1007/978-3-031-30826-0_16
   Sheskin DJ., 2020, Handbook of parametric and nonparametric statistical procedures, DOI DOI 10.1201/9780429186196
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soares Vinicius, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P788, DOI 10.1145/3422392.3422439
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Terra R., 2013, Software Engineering Notes, V38, P1, DOI DOI 10.1145/2507288.2507314
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Tuffry S., 2011, Data mining and statistics for decision making, DOI DOI 10.1002/9780470979174
   Uchôa A, 2021, IEEE WORK CONF MIN S, P471, DOI 10.1109/MSR52588.2021.00059
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Vidal S, 2015, 2015 34TH INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY (SCCC)
   Walter B, 2018, J SYST SOFTWARE, V144, P1, DOI 10.1016/j.jss.2018.05.057
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yuepu Guo, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P167, DOI 10.1145/1810295.1810321
NR 78
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD 2024 JUL 11
PY 2024
DI 10.1007/s11219-024-09680-6
EA JUL 2024
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YP2J9
UT WOS:001269621100001
DA 2024-08-05
ER

PT J
AU Du, XT
   Liu, ZH
   Li, CL
   Ma, XY
   Li, YZ
   Wang, XY
AF Du, Xiaoting
   Liu, Zhihao
   Li, Chenglong
   Ma, Xiangyue
   Li, Yingzhuo
   Wang, Xinyu
TI LLM-BRC: A large language model-based bug report classification
   framework
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Bug report classification; Deep learning framework; Large-language model
AB Deep learning frameworks serve as the cornerstone for constructing robust deep learning systems. However, bugs within these frameworks can have severe consequences, negatively affecting various applications. Accurately classifying and understanding these bugs is essential to ensure framework reliability. By doing so, developers can proactively take appropriate measures to mitigate potential risks associated with specific bug types in both current and future software releases. Despite the significance of bug report classification, existing methods fall short in terms of performance, rendering them impractical for real-world applications. To address this limitation, we propose a bug report classification framework for deep learning frameworks, called LLM-BRC, leveraging OpenAI's latest embedding model, text-embedding-ada-002. Our LLM-BRC framework achieves an impressive accuracy range of 92% to 98.75% in bug report classification for three deep learning frameworks: TensorFlow, MXNET, and PaddlePaddle. This represents a substantial improvement of 17.21% to 69.15% compared to existing methods. Furthermore, we conduct a comprehensive investigation into the impact of different bug report components and different models.
C1 [Du, Xiaoting; Li, Yingzhuo; Wang, Xinyu] Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing, Peoples R China.
   [Du, Xiaoting] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
   [Liu, Zhihao; Li, Chenglong; Ma, Xiangyue] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications; East China Normal
   University; Beihang University
RP Du, XT (corresponding author), Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing, Peoples R China.; Du, XT (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
EM duxiaoting@bupt.edu.cn; li_chenglong@buaa.edu.cn
RI Li, Chenglong/KNJ-7177-2024
OI Li, Chenglong/0000-0001-5777-6828
FU Fundamental Research Funds for the Central Universities
FX No Statement Available
CR Antoniol G., 2008, P 2008 C CTR ADV STU, P304
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen JJ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3587155
   Collobert R., 2002, Torch: A Modular Machine Learning Software Library
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Du XT, 2023, IEEE T DEPEND SECURE, V20, P2696, DOI 10.1109/TDSC.2022.3152239
   Du XT, 2022, IEEE T RELIAB, V71, P1540, DOI 10.1109/TR.2021.3110096
   Du XT, 2017, IEEE INT SYMP SOFTW, P259, DOI 10.1109/ISSREW.2017.28
   Frattini F, 2016, SPRINGER SER RELIAB, P551, DOI 10.1007/978-3-319-30599-8_21
   Girija SS., 2016, TENSORFLOW LARGE SCA, V39
   Grottke M., 2005, J RELIABILITY ENG AS, V27, P425, DOI DOI 10.11348/REAJSHINRAI.27.7_425
   Guo Q., 2018, ARXIV
   Guo S., 2023, ARXIV
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Liu SQ, 2014, I S BIOMED IMAGING, P1015, DOI 10.1109/ISBI.2014.6868045
   Liu ZH, 2022, PROC INT SYMP SOFTW, P423, DOI 10.1109/ISSRE55969.2022.00048
   Lukasiewicz T., 2023, ARXIV
   Lux M., 2019, ACM SIGMULTIMEDIA RE, V10, P7, DOI [10.1145/3310195.3310202, DOI 10.1145/3310195.3310202]
   Makkouk T, 2022, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME55016.2022.00012
   Mingxi Li, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P474, DOI 10.1109/DSA52907.2021.00071
   Nov O., 2023, PUTTING CHATGPTS MED, P2023
   Otoom AF, 2019, PROCEEDINGS OF 9TH INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND MANAGEMENT (ICICM 2019), P17, DOI 10.1145/3357419.3357424
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Radford, 2018, OPENAI BLOG
   Radford A., 2019, OpenAI blog, V1, P9
   Ray P. P., 2023, Internet of Things and Cyber-Physical Systems
   Ren Y., 2020, ARXIV
   Tambon F., 2021, ARXIV
   Team T.T.D., 2016, ARXIV
   Vaswani A, 2017, ADV NEUR IN, V30
   Wen W, 2016, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE.2016.29
   Xia X, 2014, IEEE INT C ENG COMP, P39, DOI 10.1109/ICECCS.2014.14
   Yang YL, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107004
   Zhang J, 2021, SOFTWARE PRACT EXPER, V51, P2540, DOI 10.1002/spe.2847
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 40
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 985
EP 1005
DI 10.1007/s11219-024-09675-3
EA MAY 2024
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001230075700001
DA 2024-08-05
ER

PT J
AU Tian, ZZ
   Wang, FF
   Chen, YP
   Chen, LW
AF Tian, Zhenzhou
   Wang, Fanfan
   Chen, Yanping
   Chen, Lingwei
TI Differential testing solidity compiler through deep contract
   manipulation and mutation
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Smart contract; Differential testing; Solidity compiler fuzzing;
   Contract generation; Deep learning; Bug detection
AB Solidity, the language utilized for developing smart contracts, has been gaining increased importance in blockchain system. Ensuring bug-free of its accompanying language compiler, which converts the contract source codes into executables finally deployed on the blockchain, is thus of paramount importance. This study presents DeSCDT, a Deep learning-based Solidity Compiler Differential Testing approach, to explore possible defects in Solidity compiler. At the core lies a well-behaving deep contract generator following the Transformer architecture and learnt with diverse contract code. From an initial seed pool of contracts carefully picked through semantic encoding and clustering, the generator is capable of stably producing highly syntactic-valid and functional-rich smart contracts, with three meticulously formulated generation strategies and a set of mutation operations. Subsequently, in the meantime of compiling these generated contracts to trigger compiler crashes, a differential testing environment is set up to explore misoptimization bugs, by observing the inconsistencies between the outcomes and the aspects including opcode size of the optimized and non-optimized bytecodes. For the experiments, the syntactic validity and diversity of the contracts generated with DeSCDT, as well as its ability in discovering compiler defects, are investigated. The findings indicate that DeSCDT can effectively generate syntactically correct contracts with a pass rate of 90.8% alongside high diversity. Among the contracts tested for a 24-h running of DeSCDT, 37.4% of them expose inconsistencies across the optimized and non-optimized version of the same contract. Six bugs that could trigger direct crashing of the compiler have also been detected.
C1 [Tian, Zhenzhou; Wang, Fanfan; Chen, Yanping] Xian Univ Posts & Telecommun, Dept Comp Sci & Technol, Xian 710121, Peoples R China.
   [Tian, Zhenzhou; Chen, Yanping] Xian Univ Posts & Telecommun, Shaanxi Key Lab Network Data Anal & Intelligent Pr, Xian 710121, Shaanxi, Peoples R China.
   [Tian, Zhenzhou; Chen, Yanping] Xian Univ Posts & Telecommun, Xian Key Lab Big Data & Intelligent Comp, Xian 710121, Peoples R China.
   [Chen, Lingwei] Wright State Univ, Dept Comp Sci & Engn, Dayton, OH 45435 USA.
C3 Xi'an University of Posts & Telecommunications; Xi'an University of
   Posts & Telecommunications; Xi'an University of Posts &
   Telecommunications; University System of Ohio; Wright State University
   Dayton
RP Tian, ZZ (corresponding author), Xian Univ Posts & Telecommun, Dept Comp Sci & Technol, Xian 710121, Peoples R China.; Tian, ZZ (corresponding author), Xian Univ Posts & Telecommun, Shaanxi Key Lab Network Data Anal & Intelligent Pr, Xian 710121, Shaanxi, Peoples R China.; Tian, ZZ (corresponding author), Xian Univ Posts & Telecommun, Xian Key Lab Big Data & Intelligent Comp, Xian 710121, Peoples R China.
EM tianzhenzhou@xupt.edu.cn; wangfanfan@stu.xupt.edu.cn;
   chenyp@xupt.edu.cn; lingwei.chen@wright.edu
FU National Natural Science Foundation of China
FX No Statement Available
CR AFL++, 2024, AFL
   AFL, 2019, AM FUZZY LOP
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Chaliasos S, 2022, PROCEEDINGS OF THE 43RD ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '22), P183, DOI 10.1145/3519939.3523427
   Chen C, 2018, COMPUT SECUR, V75, P118, DOI 10.1016/j.cose.2018.02.002
   Chen JC, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488245
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen Yongheng., PROC 2021 IEEE S SEC, P2021, DOI DOI 10.1109/SP40001.2021.00071
   Chowdhury SA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P981, DOI 10.1145/3180155.3180231
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   Even-Mendoza K, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10146-1
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Gross S, 2023, NETWORK DISTRIBUTED, V2023, P1
   Holler Christian, 2012, P 21 USENIX C SECUR, P38
   HyungSeok H., 2019, NETWORK DISTRIBUTED, P1
   Jiang B, 2020, P INT COMP SOFTW APP, P861, DOI 10.1109/COMPSAC48688.2020.0-156
   Lee S, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2613
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   List of Known Bugs, 2023, LIST KNOWN BUGS
   Liu X, 2019, AAAI CONF ARTIF INTE, P1044
   Livinskii V, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428264
   Ma H., 2023, IEEE T SUST COMPUT, V1, P1
   Mallissery S, 2024, ACM COMPUT SURV, V56, DOI 10.1145/3623375
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   McKeeman M. W., 1998, DIGITAL TECHNICAL J, V10
   Rebert A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P861
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Tang YX, 2022, IEEE T SOFTWARE ENG, V48, P4411, DOI 10.1109/TSE.2021.3119186
   The Optimizer, 2023, OPTIMIZER
   Tian ZZ, 2022, INT J INTELL SYST, V37, P450, DOI 10.1002/int.22633
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang JJ, 2023, PROCEEDINGS OF THE 32ND USENIX SECURITY SYMPOSIUM, P1865
   Wang JJ, 2019, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2019.00081
   Wang X., 2024, SURVEY EVALUATION LA, DOI [10.1145/3641289, DOI 10.1145/3641289]
   Wang YB, 2023, IEEE T SOFTWARE ENG, V49, P2980, DOI 10.1109/TSE.2023.3237123
   Xu HR, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9206911
   Yang XJ, 2011, ACM SIGPLAN NOTICES, V46, P283, DOI 10.1145/1993316.1993532
   Zhao YQ, 2022, PROC INT CONF SOFTW, P1133, DOI 10.1145/3510003.3510059
   Zhao ZY, 2023, IEEE T SUST COMPUT, V8, P257, DOI 10.1109/TSUSC.2022.3221444
NR 42
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD JUN
PY 2024
VL 32
IS 2
BP 765
EP 790
DI 10.1007/s11219-024-09673-5
EA APR 2024
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UX1Q1
UT WOS:001207074500001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhao, XF
   Bu, YL
   Pang, WD
   Cai, JJ
AF Zhao, Xufeng
   Bu, Yilei
   Pang, Wendi
   Cai, Jiajia
TI Periodic and random incremental backup policies in reliability theory
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Incremental backup; Full backup; Database failure; Maintenance theory;
   Reliability theory
ID DATABASE SYSTEM; FULL
AB For a 24/7 database system, backups should be implemented right after a large volume of data has been updated, putting their backup windows in non-busy states with user's convenience.From this viewpoint, this paper studies periodic and random incremental backup policies, in which, incremental backup is implemented right after data update and full backup is performed at periodic times KT\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\varvec{KT}$$\end{document}, or at a number N\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\varvec{N}$$\end{document} of data updates, respectively. We firstly describe the stochastic processes of data update and database failure, and then model the expected cost rates for data backup and data restoration.Respective K & lowast;,N & lowast;,Kf & lowast;\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\varvec{K<^>*, N<^>*, K_f<^>*}$$\end{document}, and Nf & lowast;\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\varvec{N_f<^>*}$$\end{document} are obtained to minimize their expected cost rates in analytical ways, respectively. Finally, numerical examples are given to illustrate the optimum policies.
C1 [Zhao, Xufeng] Nanjing Univ Aeronaut & Astronaut, Coll Econ & Management, Nanjing 211106, Peoples R China.
   [Bu, Yilei; Pang, Wendi] Jiangsu Adm Market Regulat, Dept Informat Ctr, Nanjing 210036, Peoples R China.
   [Cai, Jiajia] Yangzhou Univ, Business Sch, Yangzhou 225127, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Yangzhou University
RP Zhao, XF (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Econ & Management, Nanjing 211106, Peoples R China.
EM zx.peak@outlook.com
FU Jiangsu Administration for Market Regulation [KJ2022018]
FX This work is supported by Science and Technology Project of Jiangsu
   Administration for Market Regulation (NO. KJ2022018).
CR Beard B., 2018, BEGINNING BACKUP RES
   Chervenak A.L., 1998, JOINT NASA IEEE MASS
   DASILVA J, 1993, PROCEEDINGS OF THE SEVENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA VII), P171
   deGuise P., 2008, Enterprise systems backup and recovery: A corporate insurance policy
   Fan M, 2017, RELIAB ENG SYST SAFE, V165, P422, DOI 10.1016/j.ress.2017.05.004
   Green R. J., 1996, Digital Technical Journal, V8, P32
   KUMAR A, 1993, ACM T DATABASE SYST, V18, P102, DOI 10.1145/151284.151287
   Lee EK, 1996, ACM SIGPLAN NOTICES, V31, P84, DOI 10.1145/248209.237157
   Lenhard T. H., 2022, DATA SECURITY TECHNI, P61
   Levitin G, 2018, RELIAB ENG SYST SAFE, V170, P127, DOI 10.1016/j.ress.2017.10.016
   Levitin G, 2017, IEEE T SYST MAN CY-S, V47, P3310, DOI 10.1109/TSMC.2016.2576023
   Levitin G, 2016, IEEE T DEPEND SECURE, V13, P644, DOI 10.1109/TDSC.2015.2413404
   Li X, 2014, IEEE T SYST MAN CY-S, V44, P1216, DOI 10.1109/TSMC.2014.2301140
   Nakagawa T, 2014, SPRINGER SER RELIAB, P1, DOI 10.1007/978-1-4471-6575-0
   Nakagawa T, 2007, SPRINGER SER RELIAB, P1, DOI 10.1007/978-1-84628-442-7
   NAKAGAWA T, 2005, SPRING SER RELIAB EN, pR5
   Nakamura S, 2003, MATH COMPUT MODEL, V38, P1373, DOI [10.1016/S0895-7177(03)90140-3, 10.1016/S0895-7177(03)00351-0]
   Nakamura S, 2019, INT J RELIAB QUAL SA, V26, DOI 10.1142/S0218539319500025
   Phillips B.D., 2015, Disaster recovery
   Qian CH, 2002, RAIRO-OPER RES, V36, P227, DOI 10.1051/ro:2003004
   Qian CH, 2002, ELECTRON COMM JPN 3, V85, P1, DOI 10.1002/ecjc.1081
   Ranjkesh SH, 2019, RELIAB ENG SYST SAFE, V192, DOI 10.1016/j.ress.2018.01.006
   Tang Y, 2012, IEEE T DEPEND SECURE, V9, P903, DOI 10.1109/TDSC.2012.49
   Wang JJ, 2021, RELIAB ENG SYST SAFE, V211, DOI 10.1016/j.ress.2021.107606
   Yang L, 2024, IEEE T RELIAB, V73, P115, DOI 10.1109/TR.2023.3273082
   Zhao X., 2018, ADV MAINTENANCE POLI
   Zhao X., 2017, RELIABILITY MODELING, P235
   Zhao XL, 2023, ANIM BIOTECHNOL, V34, P2537, DOI 10.1080/10495398.2022.2105226
NR 28
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1325
EP 1340
DI 10.1007/s11219-024-09685-1
EA JUL 2024
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001262864700001
DA 2024-08-05
ER

PT J
AU Santokhee, A
   Augusto, JC
   Brodie, L
AF Santokhee, Adityarajsingh
   Augusto, Juan Carlos
   Brodie, Lindsey
TI Towards engineering higher quality intelligent environments: a multi
   case study approach
SO SOFTWARE QUALITY JOURNAL
LA English
DT Article
DE Intelligent environments; Quality model; Multiple case study;
   Qualitative study
ID INTERNET; MODEL; ARCHITECTURE; THINGS; IOT; EXPERIENCE; PLATFORMS;
   CONTEXT; SYSTEMS; DESIGN
AB This study addresses the need to enhance the quality of Intelligent Environments, recognizing their unique characteristics and the absence of adequate guidance on quality management during development. It pursues three primary objectives: proposing a novel quality-in-use model, presenting an enhanced version of the User-Centered Intelligent Environment Development Process, and reporting on the application of these approaches through a multiple case study. To embed quality into systems, we advocate for the integration of quality characteristics from ISO/IEC 25000 standards with functional requirements. Stakeholders collaboratively define targets using measures from quality standards, and metrics enable early problem detection and resolution during development. The proposed quality-in-use model provides an insightful and objective perspective on system capabilities, guiding development and ensuring stakeholder involvement. However, challenges such as shortening development cycles for early and regular stakeholder feedback and managing an increased number of system tests were noted. Our study makes a significant contribution to the field of Intelligent Environments by providing a structured approach to embedding and managing quality throughout the development lifecycle. The multiple case study offers empirical evidence of the effectiveness of the proposed approaches, with ongoing considerations for challenges in the development process.
C1 [Santokhee, Adityarajsingh] Middlesex Univ Mauritius, Sch Digital Technol, RG Intelligent Environm, Uniciti, Mauritius.
   [Augusto, Juan Carlos; Brodie, Lindsey] Middlesex Univ, Dept Comp Sci, RG Dev Intelligent Environm, London, England.
C3 Middlesex University
RP Santokhee, A (corresponding author), Middlesex Univ Mauritius, Sch Digital Technol, RG Intelligent Environm, Uniciti, Mauritius.
EM a.santokhee@mdx.ac.mu; j.augusto@mdx.ac.uk;
   lindseybrodie@btopenworld.com
CR Aarts E., 2003, IC DESIGN CHALLENGES, DOI [10.1007/b94080, DOI 10.1007/B94080]
   Abdelouahid RA., 2018, NEW INTEROPERABILITY, P1
   Ahmad M, 2015, J SYST SOFTWARE, V107, P50, DOI 10.1016/j.jss.2015.05.028
   Ali A., 2022, 2022 2 INT C DIG FUT, DOI DOI 10.1109/ICODT255437.2022.9787463
   Amiribesheli M, 2018, J AMB INTEL HUM COMP, V9, P1755, DOI 10.1007/s12652-017-0645-7
   [Anonymous], 2021, 25012 ISOIEC
   [Anonymous], 2022, 25023 ISOIEC
   [Anonymous], 2021, 25000 ISOIEC
   [Anonymous], 2021, 25010 ISOIEC
   [Anonymous], 2014, Software Engineering-A Practitioner's Approach
   Antonino PO, 2022, ADV ENG INFORM, V54, DOI 10.1016/j.aei.2022.101801
   Antonino PO, 2011, LECT NOTES COMPUT SC, V7040, P264, DOI 10.1007/978-3-642-25167-2_36
   Anurag A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2210
   Ashouri M, 2021, INTERNET THINGS-NETH, V13, DOI 10.1016/j.iot.2020.100346
   Augusto J, 2018, UNIVERSAL ACCESS INF, V17, P115, DOI 10.1007/s10209-016-0514-8
   Augusto J.C., 2007, INTELLIGENT COMPUTIN, P213, DOI DOI 10.1007/978-1-84628-943-911
   Augusto JC, 2013, HUM-CENT COMPUT INFO, V3, DOI 10.1186/2192-1962-3-12
   Banijamali A, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106271
   Bass Len, 2012, SEI S SOFTW
   Beevi FHA., 2016, DATA QUALITY ORIENTE, DOI [10.4108/eai.16-5-2016.2263753, DOI 10.4108/EAI.16-5-2016.2263753]
   Benghazi K, 2012, J SYST SOFTWARE, V85, P498, DOI 10.1016/j.jss.2011.05.022
   Bergman J, 2018, LECT NOTES COMPUT SC, V10753, P20, DOI 10.1007/978-3-319-77243-1_2
   Bezerra C., 2014, CHALLENGES USABILITY, P183
   Boehm B., 1981, Software Engineering Economics
   Botto-Tobar M., 2021, QUALITY USE MODEL AM, P643
   Brodie L., 2009, 17 INT C SOFTW QUAL
   Budgen David., 2003, SOFTWARE DESIGN
   Cáceres MC, 2021, COMM COM INF SC, V1456, P184, DOI 10.1007/978-3-030-89941-7_14
   Augusto JC, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT ENVIRONMENTS (IE), P252, DOI 10.1109/IE.2014.47
   Carvalho RM., 2017, DISTRIBUTED AMBIENT
   Cedillo P., 2020, CLOUDIOTSECURITY EVA, P1
   Chen HX, 2023, BMC PUBLIC HEALTH, V23, DOI [10.1186/s12889-023-15262-1, 10.1186/s12889-023-15801-w, 10.1186/s12870-023-04136-8]
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Clickup, 2022, US
   Cote M.-A., 2006, J SOFTWARE QUALITY M, V14, P31
   Creswell J., 2018, Research Design: Qualitative, quantitative and mixed methods approaches, V5th, DOI DOI 10.3109/08941939.2012.723954
   Cristescu I, 2020, INT C ELECT COMPUT, DOI 10.1109/ecai50035.2020.9223192
   Dalcher D., 2007, Successful it projects
   De Sanctis M, 2019, LECT NOTES COMPUT SC, V11681, P178, DOI 10.1007/978-3-030-29983-5_12
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Erazo-Garzon L., 2021, APPL TECHNOLOGIESICA, V1388
   European Commission, 2009, AMBIENT ASSISTED LIV
   Fenton N., 2014, 3 EDITION, DOI [10.1201/b17461, DOI 10.1201/B17461]
   Ferry Nicolas, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P121, DOI 10.1007/978-3-030-39306-9_9
   Fizza K, 2023, IEEE COMMUN SURV TUT, V25, P567, DOI 10.1109/COMST.2022.3205377
   Garcés L, 2017, INFORM SOFTWARE TECH, V82, P121, DOI 10.1016/j.infsof.2016.10.005
   Ghobadian A., 1994, Total Quality Management, V5, P53, DOI [10.1080/09544129400000025, DOI 10.1080/09544129400000025]
   Gibbert M, 2008, STRATEGIC MANAGE J, V29, P1465, DOI 10.1002/smj.722
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   Gilb T., 2012, P 22 ANN INCOSE INT, V1, P1010
   Goncalves RF., 2022, ANAL QUALITY MODEL D, DOI [10.1145/3571473.3571484, DOI 10.1145/3571473.3571484]
   GORDON VS, 1993, SOFTWARE QUAL J, V2, P93, DOI 10.1007/BF00590438
   Greening DR, 2015, P ANN HICSS, P5038, DOI 10.1109/HICSS.2015.597
   Hamzah N., 2018, ASSESSING USABILITY, P1
   Hanslo R, 2019, FED CONF COMPUT SCI, P813, DOI 10.15439/2019F220
   Hoyos JR, 2016, COMPUT ELECTR ENG, V55, P39, DOI 10.1016/j.compeleceng.2016.07.002
   Hron M, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111110
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Hyvarinen M., 2008, SAGE HDB SOCIAL RES, P447, DOI DOI 10.4135/9781446212165
   IPA, 2010, EMBEDDED SYSTEM DEV
   Jones C., 2011, EC SOFTWARE QUALITY
   Kakarontzas G, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON E-BUSINESS (ICE-B), P47
   Kan S. H., 2002, Metrics and models in software quality engineering
   Kara M, 2017, PROCEDIA COMPUT SCI, V113, P392, DOI 10.1016/j.procs.2017.08.354
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   Kumar RM, 2022, J BIOMOL STRUCT DYN, V40, P12165, DOI [10.1080/07391102.2021.1968500, 10.1007/s40860-021-00139-0]
   Kurtel K, 2013, J SOFTW-EVOL PROC, V25, P663, DOI 10.1002/smr.1557
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Maciel Paulo, 2022, Journal of Reliable Intelligent Environments, P227, DOI 10.1007/s40860-021-00154-1
   Mantoro T., 2009, METRICS EVALUATION C, P574
   MARTIRANO L, 2020, 2020 20 IEEE INT C, pNI990, DOI DOI 10.1109/eeeic/icpseurope49358.2020.9160662
   McKinsey, 2021, INTERNET THINGS CATC
   Memon M, 2014, SENSORS-BASEL, V14, P4312, DOI 10.3390/s140304312
   Minovski D, 2020, IEEE INTERNET THINGS, V7, P3833, DOI 10.1109/JIOT.2020.2975418
   Morse J.M., 1994, Handbook of qualitative research, P220
   Munnelly J., 2008, INFRASTRUCTURE UBIQU, P1
   Murzi M., 2007, PHILOS LOGICAL POSIT
   Naeini EK, 2019, PROCEDIA COMPUT SCI, V151, P551, DOI 10.1016/j.procs.2019.04.074
   Neisse R, 2008, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE FOR YOUNG COMPUTER SCIENTISTS, VOLS 1-5, P1925, DOI 10.1109/ICYCS.2008.368
   Niedermaier S, 2022, SOFTWARE QUAL J, V30, P337, DOI 10.1007/s11219-021-09556-z
   Nielsen J., 1994, Usability inspection methods, DOI [10.1145/259963.260531, DOI 10.1145/259963.260531]
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Ogbuabor GO, 2021, LECT NOTES ARTIF INT, V13101, P267, DOI 10.1007/978-3-030-91100-3_22
   Olianas D, 2022, SOFTWARE QUAL J, V30, P389, DOI 10.1007/s11219-021-09565-y
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   Oriol M, 2020, SOFTWARE QUAL J, V28, P931, DOI 10.1007/s11219-020-09509-y
   Pal D., 2018, QUALITY PROVISIONING, P1
   Rashidi P, 2011, IEEE T KNOWL DATA EN, V23, P527, DOI 10.1109/TKDE.2010.148
   Regan G, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2295
   Reggio G, 2020, INTERNET THINGS-NETH, V12, DOI 10.1016/j.iot.2020.100313
   Rizk J, 2022, COMPUT EDUC OPEN, V3, DOI 10.1016/j.caeo.2022.100099
   Rodriguez-Dominguez Carlos, 2022, J Reliab Intell Environ, V8, P223, DOI 10.1007/s40860-022-00182-5
   Rubin HJ, 2011, Qualitative interviewing: The art of hearing data, DOI DOI 10.4135/9781452226651
   Ruiz-López T, 2013, J AMB INTEL SMART EN, V5, P287, DOI 10.3233/AIS-130209
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salomón S, 2022, J AMB INTEL HUM COMP, DOI 10.1007/s12652-021-03693-w
   Salvi D, 2015, J AMB INTEL SMART EN, V7, P329, DOI 10.3233/AIS-150317
   Santokhee A., 2019, INT ENV WORKSH, P17
   Santos RM., 2013, QUALITY MODEL HUMAN, DOI [10.1007/978-3-319-03068-513, DOI 10.1007/978-3-319-03068-513]
   Sas D, 2020, SOFTWARE QUAL J, V28, P505, DOI 10.1007/s11219-019-09478-x
   Saunders M. N. K., 2016, Research methods for business students
   Schipor OA, 2019, INFORM SOFTWARE TECH, V109, P43, DOI 10.1016/j.infsof.2019.01.006
   Scott E, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2363
   SCRUMstudy, 2016, GUIDE SCRUM BODY KNO
   Sharma M., 2022, 2022 3 INT C NEXT GE, P1, DOI [10.1109/NextComp55567.2022.9932198, DOI 10.1109/NEXTCOMP55567.2022.9932198]
   Shin DH, 2017, INFORM MANAGE-AMSTER, V54, P998, DOI 10.1016/j.im.2017.02.006
   Sicari S, 2019, SOFTWARE PRACT EXPER, V49, P1663, DOI 10.1002/spe.2740
   Sommerville I., 2011, Software engineering, V9th ed.
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Streitz N., 2017, HEURISTICS EVALUATE, P120
   Tröls M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2308
   Vogel M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2296
   Washizaki H, 2020, IEEE INTERNET THINGS, V7, P10091, DOI 10.1109/JIOT.2020.3003528
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Werner C, 2022, PROC IEEE ACM INT C, P300, DOI [10.1145/3510454.3517069, 10.1109/ICSE-Companion55297.2022.9793830]
   Weyns D., 2018, APPLYING ARCHITECTUR, DOI [10.1007/978-3-030-00761-44, DOI 10.1007/978-3-030-00761-44]
   White G, 2017, J SYST SOFTWARE, V132, P186, DOI 10.1016/j.jss.2017.05.125
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   World Health Organization, 2022, Global report on health equity for persons with disabilities
   Yin R.K., 2018, Case study research and applications: Design and methods, V6th ed.
   Zheng XR, 2014, IEEE T IND INFORM, V10, P1527, DOI 10.1109/TII.2014.2306329
NR 121
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 0963-9314
EI 1573-1367
J9 SOFTWARE QUAL J
JI Softw. Qual. J.
PD SEP
PY 2024
VL 32
IS 3
BP 1075
EP 1135
DI 10.1007/s11219-024-09678-0
EA JUN 2024
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E4
UT WOS:001246648600001
OA hybrid
DA 2024-08-05
ER

EF