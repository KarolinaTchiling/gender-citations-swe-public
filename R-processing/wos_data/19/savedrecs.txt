FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Shamsujjoha, M
   Grundy, J
   Khalajzadeh, H
   Lu, QH
   Li, L
AF Shamsujjoha, Md.
   Grundy, John
   Khalajzadeh, Hourieh
   Lu, Qinghua
   Li, Li
TI Developer and End-User Perspectives on Addressing Human Aspects in
   Mobile eHealth Apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE eHealth App; Human Aspect; User Study; App Development; Stakeholders
   Perspectives
AB Context: eHealth apps are mobile apps that help in self-management of critical illnesses, provide home-based disease management, and help with personalized care. Users of eHealth apps are naturally very diverse in terms of their human aspects, e.g., their age, gender, emotional reactions to the apps, cognitive style, physical and mental challenges. Unfortunately, many eHealth apps do not take these user differences sufficiently into account, making them ineffective or even unusable.Objective: This paper reports a study from eHealth app stakeholders' - developers and end-users - perspectives on critical challenges and benefits of better incorporating human aspects into eHealth app development and usage. We also investigate how different human aspects are being addressed by developers, which ones are the most important for different user groups, and which ones are currently missing/poorly handled.Method: A mixed-method approach that integrates qualitative and quantitative research was used for this study. We gathered and analyzed data from 240 online survey responses and 25 detailed interviews within the same study and validated the results.Results: We report key issues encountered in eHealth app design, difficulty in addressing different human aspects, areas requiring further research and practical assistance, and recommend our findings to best address these challenges. We found addressing human aspects throughout the app development life-cycle is beneficial for more effective eHealth apps. Our findings also suggest the need for improved standards and guidelines, better developer-user collaborative culture, and better human aspects education to produce more effective eHealth apps.Conclusion: This paper investigates current approaches used in the eHealth app domain that take into account the human aspects of app users. The paper guides eHealth app stakeholders, future researchers, academia and industry partners be aware of human aspects related challenges and improve produce apps.
C1 [Shamsujjoha, Md.; Grundy, John] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Melbourne, Australia.
   [Khalajzadeh, Hourieh] Deakin Univ, Sch Informat Technol, Fac Sci Engn & Built Environm, Melbourne, Australia.
   [Lu, Qinghua] CSIRO, Data61, Sydney, Australia.
   [Li, Li] Beihang Univ, Sch Software, Beijing, Peoples R China.
C3 Monash University; Deakin University; Commonwealth Scientific &
   Industrial Research Organisation (CSIRO); Beihang University
RP Shamsujjoha, M (corresponding author), Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Melbourne, Australia.
EM md.shamsujjoha@monash.edu; john.grundy@monash.edu;
   hkhalajzadeh@deakin.edu.au; qinghua.lu@data61.csiro.au;
   lilicoding@ieee.org
RI Khalajzadeh, Hourieh/AAR-6188-2020; Lu, Qinghua/AAG-3378-2021; Grundy,
   John/AAF-1716-2019; Shamsujjoha, Md./U-8430-2017
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Grundy,
   John/0000-0003-4928-7076; Shamsujjoha, Md./0000-0002-9459-5281; Li,
   Li/0000-0003-2990-1614
FU Australian Research Council [FL190100035]; Discovery Early Career
   Researcher Award (DECRA) [DE200100016, DP200100020]; Monash
   International Tuition Scholarship; CSIRO Data61
FX The authors would like to thank all the interview participants and
   survey respondents; without them, this work would never have been
   accomplished. The authors also express gratitude to Dr. Ingo Mueller and
   Dr. Jennifer McIntosh for their assistance. This work was supported by
   the Australian Research Council, Australia (ARC) under a Laureate
   Fellowship project FL190100035, a Discovery Early Career Researcher
   Award (DECRA) project DE200100016, and a Discovery project DP200100020.
   In addition, Md. Shamsujjoha was supported by Monash International
   Tuition Scholarship, RTP Stipend, and CSIRO Data61 Top -up Scholarship
   for his Ph.D. study at Monash University, Australia.
CR Almao Elenia Carrasco, 2019, Human Aspects of IT for the Aged Population. Design for the Elderly and Technology Acceptance. 5th International Conference, ITAP 2019 Held as Part of the 21st HCI International Conference, HCII 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11592), P357, DOI 10.1007/978-3-030-22012-9_26
   Alobaidi H, 2022, COMPUT SECUR, V113, DOI 10.1016/j.cose.2021.102557
   Bally ELS, 2020, FRONT PUBLIC HEALTH, V7, DOI 10.3389/fpubh.2019.00407
   Barnett S, 2019, J COMPUT LANG, V51, P88, DOI 10.1016/j.cola.2019.02.001
   Baysari M T, 2015, Yearb Med Inform, V10, P47, DOI 10.15265/IY-2015-011
   Bi TT, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503508
   Broekhuis M, 2021, JMIR FORM RES, V5, DOI 10.2196/18198
   Carroll Jennifer K, 2017, J Med Internet Res, V19, pe125, DOI 10.2196/jmir.5604
   Cho J, 2014, J MED INTERNET RES, V16, P206, DOI 10.2196/jmir.3283
   Clement J., 2019, Tech. Rep
   Zapata BC, 2018, J MED SYST, V42, DOI 10.1007/s10916-018-0902-0
   Zapata BC, 2015, J MED SYST, V39, DOI 10.1007/s10916-014-0182-2
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Farao J, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0237910
   Fazzini M, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P38, DOI 10.1145/3524613.3527814
   Garcia-Perez C, 2017, PERVASIVE MOB COMPUT, V40, P674, DOI 10.1016/j.pmcj.2017.06.021
   Grundy J., 2021, Evaluation of Novel Approaches to Software Engineering, P444, DOI [10.1007/978-3-030-70006-5_18, DOI 10.1007/978-3-030-70006-5_18]
   Hammersley M., 1987, British Educational Research Journal, V13, P73, DOI DOI 10.1080/0141192870130107
   Harte Richard, 2017, JMIR Hum Factors, V4, pe8, DOI 10.2196/humanfactors.5443
   Holzinger A, 2007, LECT NOTES COMPUT SC, V4554, P923
   Jake-Schoffman DE, 2017, JMIR MHEALTH UHEALTH, V5, DOI 10.2196/mhealth.8758
   Jim AY, 2021, ENASE: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P68, DOI 10.5220/0010403000680079
   Jokela T., 2003, P LAT AM C HUM COMP, DOI DOI 10.1145/944520.944525
   Jones M, 2018, INT J ENV RES PUB HE, V15, DOI 10.3390/ijerph15030515
   Khalajzadeh H, 2023, IEEE T SOFTWARE ENG, V49, P2149, DOI 10.1109/TSE.2022.3212329
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Lippincot Ben, 2020, Computers Helping People with Special Needs. 17th International Conference, ICCHP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12377), P266, DOI 10.1007/978-3-030-58805-2_32
   Liquid State, 2018, Tech. Report
   Mak Derek, 2017, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V61, P1156, DOI 10.1177/1541931213601773
   Martínez-Pérez B, 2015, J MED SYST, V39, DOI 10.1007/s10916-014-0181-3
   Ministry of Health New Zealand, 2017, Digital health sector architecture, standards and governance: Health applications assessment guidance
   Morey SA, 2019, ERGON DES, V27, P4, DOI 10.1177/1064804619840731
   Nadal C, 2020, J MED INTERNET RES, V22, DOI 10.2196/17256
   Nunes A., 2018, Communications in Computer and Information Science, V982, P167, DOI DOI 10.1007/978-3-030-15736-4_9
   Patch K., 2015, MOBILE ACCESSIBILITY
   Polhemus AM, 2020, JMIR MHEALTH UHEALTH, V8, DOI 10.2196/16043
   Ross J, 2016, Arxiv, DOI [arXiv:1605.04693, 10.48550/arXiv.1605.04693, DOI 10.48550/ARXIV.1605.04693]
   Ruck A., 2016, EU guidelines on assessment of the reliability of mobile health applications
   Schnall R, 2016, J BIOMED INFORM, V60, P243, DOI 10.1016/j.jbi.2016.02.002
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Shamsujjoha M., 2022, Interview codebook, survey questionary, and tentative interview schedules, list of tools and techniques reported in studies for developer and end-user perspectives on addressing human aspects in mobile eHealth apps
   Shamsujjoha M., 2021, eHealth app analysis results and dataset of extracted keywords from medical dictionaries
   Shamsujjoha M, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106693
   Shamsujjoha M, 2021, INT C PROGRAM COMPRE, P422, DOI 10.1109/ICPC52881.2021.00050
   Shamsujjoha M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P506, DOI 10.1109/SANER50967.2021.00055
   Sharma S, 2022, JMIR FORM RES, V6, DOI 10.2196/29922
   Stowell E, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173589
   Stoyanov SR, 2015, JMIR MHEALTH UHEALTH, V3, DOI 10.2196/mhealth.3422
   Vo V, 2019, JMIR MHEALTH UHEALTH, V7, DOI 10.2196/13817
   WHO, 2019, WHO Guideline: Recommendations on Digital Interventions for Health System Strengthening
   Yan SG, 2019, ACM T ACCESS COMPUT, V12, DOI 10.1145/3300176
NR 52
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107353
DI 10.1016/j.infsof.2023.107353
EA NOV 2023
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y7QW4
UT WOS:001107179800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Nejati, S
   Sorokin, L
   Safin, D
   Formica, F
   Mahboob, MM
   Menghi, C
AF Nejati, Shiva
   Sorokin, Lev
   Safin, Damir
   Formica, Federico
   Mahboob, Mohammad Mahdi
   Menghi, Claudio
TI Reflections on Surrogate-Assisted Search-Based Testing: A Taxonomy and
   Two Replication Studies based on Industrial ADAS and Simulink Models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based testing; Surrogate models; Advanced driver assistance
   systems; Simulink models; Simulators; Replications; Evaluation metrics
AB Context: Surrogate-assisted search-based testing (SA-SBT) aims to reduce the computational time for testing compute-intensive systems. Surrogates enhance testing techniques by improving test case generation focusing the testing budget on the most critical portions of the input domain. In addition, they can serve as approximations of the system under test (SUT) to predict test results instead of executing the tests on compute-intensive SUTs.Objective: This article reflects on the existing SA-SBT techniques, particularly those applied to system-level testing and often facilitated using simulators or complex test beds. Recognizing the diversity of heuristic algorithms and evaluation methods employed in existing SA-SBT techniques, our objective is to synthesize these differences and present a comprehensive view of SA-SBT solutions. In addition, by critically reviewing our previous work on SA-SBT, we aim to identify the limitations in our proposed algorithms and evaluation methods and to propose potential improvements. Method: We present a taxonomy that categorizes and contrasts existing SA-SBT solutions and highlights key research gaps. To identify the evaluation challenges, we conduct two replication studies of our past SA-SBT solutions: One study uses industrial advanced driver assistance system (ADAS) and the other relies on a Simulink model benchmark. We compare our results with those of the original studies and identify the difficulties in evaluating SA-SBT techniques, including the impact of different contextual factors on results generalization and the validity of our evaluation metrics. Results: Based on our taxonomy and replication studies, we propose future research directions, including re-considerations in the current evaluation metrics used for SA-SBT solutions, utilizing surrogates for fault localization and repair in addition to testing, and creating frameworks for large-scale experiments by applying SA-SBT to multiple SUTs and simulators.
C1 [Nejati, Shiva] Univ Ottawa, Ottawa, ON K1N6N5, Canada.
   [Sorokin, Lev; Safin, Damir] Fortiss, Munich, Germany.
   [Formica, Federico; Mahboob, Mohammad Mahdi; Menghi, Claudio] McMaster Univ, 1280 Main St, Hamilton, ON L8S4L8, Canada.
   [Menghi, Claudio] Univ Bergamo, via Salvecchio 19, I-24129 Bergamo, Italy.
C3 University of Ottawa; fortiss; McMaster University; University of
   Bergamo
RP Nejati, S (corresponding author), Univ Ottawa, Ottawa, ON K1N6N5, Canada.
EM snejati@uottawa.ca; sorokin@fortiss.org; safin@fortiss.org;
   formicaf@mcmaster.ca; mahbom2@mcmaster.ca; claudio.menghi@unibg.it
RI MENGHI, CLAUDIO/AAC-2265-2022; Nejati, Shiva/KBT-7650-2024
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Formica,
   Federico/0000-0002-3033-7371
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [DGECR-2020-00261, RGPIN-2022-04622, DGECR-2022-0040]; European Union
   [956123]
FX We acknowledge Gidon Ernst for leading the Falsification Category of the
   ARCH Competition in 2020, 2021, and 2022. We also acknowledge Khouloud
   Gaaloul that supported the participation of ARIsTEO inthe 2020 and 2021
   editions of the ARCH competition.We acknowledge the support of the
   Natural Sciences and Engineering Research Council of Canada (NSERC)
   [funding reference numbersDGECR-2020-00261, RGPIN-2022-04622,
   DGECR-2022-0040].This research paper has further received funding from
   the European Union's Horizon 2020 research and innovation programme
   undergrant agreement No 956123
CR AMS M.M., 1989, P ELECT SYSTEM IDENT
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2023, RES REPL NSGAII DT
   Araujo H, 2019, LECT NOTES COMPUT SC, V11724, P183, DOI 10.1007/978-3-030-30446-1_10
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Ayesh M., 2022, EPIC SERIES COMPUTIN, V90
   BEGLEROVIC H, 2017, 2017 IEEE 20 INT C I, P1, DOI DOI 10.1109/ITSC.2017.8317768
   Belbachir A, 2012, PROCD SOC BEHV, V48, P1205, DOI 10.1016/j.sbspro.2012.06.1096
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bittanti S., 2019, Model identification and data analysis
   BOOST, 2022, US
   Borg M, 2021, IEEE INT CONF SOFTW, P383, DOI 10.1109/ICST49551.2021.00050
   Chen T., 2020, ABS200209040 CORR
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   cps-vo, 2022, INT COMP VER CONT HY
   da Silva Araujo H.L., 2020, 31 IEEE ANN INT S PE, P1, DOI [10.1109/PIMRC48278.2020.9217142, DOI 10.1109/PIMRC48278.2020.9217142]
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dosovitskiy A., 2017, arXiv
   Dybå T, 2014, IEEE SOFTWARE, V31, P32, DOI 10.1109/MS.2014.97
   Ernst G., 2021, P WORKSH APPL VER CO, V80, P133
   Ernst G., 2020, EPiC Series in Computing, V74
   Ernst G, 2018, Arxiv, DOI arXiv:1812.04159
   Ernst Gidon, 2022, EPiC Series in Computing, V90, P204
   FOCETA, 2023, US
   Gambi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P27, DOI 10.1109/ICSE-Companion.2019.00030
   Heidlauf P., 2018, ARCH ADHS, P208, DOI DOI 10.29007/91X9
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Hu JH, 2000, LECT NOTES COMPUT SC, V1790, P160
   Humeniuk D., 2021, ABS210211491 CORR
   Humeniuk D, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106936
   Innes C, 2022, IEEE INT CONF ROBOT, P6814, DOI 10.1109/ICRA46639.2022.9811579
   Jin X., 2014, P 17 INT C HYBRID SY, P253, DOI DOI 10.1145/2562059.2562140
   Jin YC, 2011, SWARM EVOL COMPUT, V1, P61, DOI 10.1016/j.swevo.2011.05.001
   Luke S., 2013, Essentials of Metaheuristics
   Matinnejad Reza, 2014, P INT C AUTOMATED SO, P163, DOI DOI 10.1145/2642937.2642978
   MatlabBGL, 2022, US
   MCKAY MD, 1979, TECHNOMETRICS, V21, P239, DOI 10.2307/1268522
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   NARMA-L2, 2022, DES NARMA L2 NEUR CO
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Pedrielli G., 2021, ABS211010729 CORR
   PreScan, 2023, SIMC PRESC
   Schuler S., 2017, EPIC SERIES COMPUTIN, V43, P18, DOI [10.29007/tf1p, DOI 10.29007/TF1P]
   Stocco Andrea, 2022, IEEE T SOFTWARE ENG, P1, DOI [10.1109/TSE.2022.3202311, DOI 10.1109/TSE.2022.3202311]
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Waga M, 2020, PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC2020) (PART OF CPS-IOT WEEK), DOI 10.1145/3365365.3382193
   Wang YY, 2022, IEEE T INTELL TRANSP, V23, P23809, DOI 10.1109/TITS.2022.3191088
   Wu JH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10127-4
   Yaghoubi S, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P179, DOI 10.1145/3302504.3311814
   Yamagata Y, 2021, IEEE T SOFTWARE ENG, V47, P2823, DOI 10.1109/TSE.2020.2969178
   Zeller A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P49, DOI 10.1109/SBST.2017.3
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V13047, P330, DOI 10.1007/978-3-030-90870-6_18
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12759, P595, DOI 10.1007/978-3-030-81685-8_29
   Zhong Z., 2021, ABS210906126 CORR
NR 57
TC 2
Z9 2
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107286
DI 10.1016/j.infsof.2023.107286
EA JUL 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O0GY0
UT WOS:001040703200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, ZY
   Bu, DX
   Wang, NN
   Yu, SJ
   Gou, SY
   Sun, AY
AF Wang, Ziyuan
   Bu, Dexin
   Wang, Nannan
   Yu, Sijie
   Gou, Shanyi
   Sun, Aiyue
TI An empirical study on bugs in JavaScript engines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; JavaScript engine; Software bug; SpiderMonkey; Chakra;
   V8
AB Context: JavaScript is a prototype-based dynamic type scripting language. The correct running of a JavaScript program depends on the correctness of both the program and the JavaScript engine.Objective: An in-depth understanding of the characteristics of bugs in JavaScript engines can help detect and fix them.Methods: We conduct an empirical study on the bugs in three mainstream JavaScript engines: V8, SpiderMonkey, and Chakra. Such an empirical study involves 19,019 bug reports, 16,437 revisions, 805 test cases, and root causes of randomly selected 540 bugs.Results: (1) The Compiler and the DOM are the most buggy component in V8 and SpiderMonkey, respectively. Most of the source files contain only one bug. (2) The scales of the testing programs that reveal bugs are usually small. Most bug fixes involve only limited modifications since the number of modified source files and lines of code modified are small. (3) Most bugs can be fixed within half a year (80.33% for V8 and 91.9% for SpiderMonkey). Only 4.33% of SpiderMonkey bugs need more than a year to fix. Bugs in SpiderMonkey are usually fixed faster than bugs in V8. (4) High priority tends to be assigned to Infrastructure bugs in V8 and Release Automation bugs in SpiderMonkey. The duration of bugs is not strictly correlated with their priorities. (5) Semantic bugs are the most common root causes of bugs. And among semantic bugs, the processing bugs, missing features bugs and function call bugs are more than others.Conclusion: This study deepens our understanding of bugs in JavaScript engines, and empirical results could indicate some potential problems during the detecting and fixing of bugs in JavaScript engines, assist developers of JavaScript engines in improving their development quality, assist maintainers in detecting and fixing bugs more effectively, and suggest users of JavaScript evade potential risks.
C1 [Wang, Ziyuan; Bu, Dexin; Wang, Nannan; Yu, Sijie; Gou, Shanyi; Sun, Aiyue] Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Nanjing University of Posts & Telecommunications
RP Wang, ZY (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM wangziyuan@njupt.edu.cn
RI Wang, Ziyuan/GSE-4594-2022
FU National Natural Science Founda-tion of China; Science Foundation of
   Nanjing University of Posts and Telecommunications, China;  [61772259]; 
   [NY220015]
FX Acknowledgments This work was supported by the National Natural Science
   Founda-tion of China (grant number 61772259) , and the Science
   Foundation of Nanjing University of Posts and Telecommunications, China
   (grant number NY220015) .
CR Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Gokhale SS, 2010, EMPIR SOFTW ENG, V15, P296, DOI 10.1007/s10664-009-9115-y
   Gong Liang, 2015, P 2015 INT S SOFTW T, P94
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Hewett R, 2009, EMPIR SOFTW ENG, V14, P165, DOI 10.1007/s10664-008-9064-x
   Hirsch T., 2021, ROOT CAUSE PREDICTIO
   Laukkanen EI, 2011, INT SYMP EMP SOFTWAR, P197, DOI 10.1109/ESEM.2011.28
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Ocariza FS, 2016, SOFTW TEST VERIF REL, V26, P69, DOI 10.1002/stvr.1576
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Ortu M, 2016, INT WORKS EMERG TREN, P1, DOI [10.1145/2897695.2897696, 10.1109/WETSoM.2016.009]
   Ozment A., 2016, MILK WINE DOES SOFTW
   Punitha K, 2013, 2013 INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND EMBEDDED SYSTEMS (ICICES), P555, DOI 10.1109/ICICES.2013.6508369
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Ramarao P, 2016, 2016 International Conference on Information Systems Engineering (ICISE), P57, DOI 10.1109/ICISE.2016.18
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sahoo S.K., 2010, ACM IEEE INT C SOFTW
   Sun Chengnian, 2016, P 25 INT S SOFTW TES, P294
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Nguyen TT, 2019, PROCEEDINGS OF THE 2019 ANNUAL ACM SOUTHEAST CONFERENCE (ACMSE 2019), P257, DOI 10.1145/3299815.3314472
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Van Liere D., 2009, ICIS 2009 P
   Vijayakumar K, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING APPLICATIONS (ICICA 2014), P335, DOI 10.1109/ICICA.2014.75
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang J, 2018, IEEE INT CONF SOFTW, P127, DOI 10.1109/ICST.2018.00022
   Yokoyama H, 2017, INT WORKSH EMPIR ENG, P47, DOI 10.1109/IWESEP.2017.15
   Yusop NSM, 2017, ASIA PAC SOFWR ENG, P358, DOI 10.1109/APSEC.2017.42
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zaman S., 2011, P 8 INT WORKING C MI
   Zhang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P176, DOI 10.1145/3338906.3338917
   Zhou B, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P507, DOI 10.1109/ISSRE.2015.7381843
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 35
TC 1
Z9 1
U1 2
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107105
DI 10.1016/j.infsof.2022.107105
EA NOV 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200017
DA 2024-07-18
ER

PT J
AU Kovaleva, Y
   Hyrynsalmi, S
   Saltan, A
   Happonen, A
   Kasurinen, J
AF Kovaleva, Yekaterina
   Hyrynsalmi, Sonja
   Saltan, Andrey
   Happonen, Ari
   Kasurinen, Jussi
TI Becoming an entrepreneur: A study of factors with women from the tech
   sector
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Women in tech; Entrepreneurship; Affecting factors; Equality; Gender
   bias
ID GENDER; PERSISTENCE; TECHNOLOGY; CHOICE; SKILLS
AB Context: The gender imbalance in technology, sciences, and engineering is a global problem and according to the statistics, this really has not changed much in the last thirty years. Moreover, there is also a lack of women in tech entrepreneurship; most success stories are about male entrepreneurs, and in Silicon Valley the term describing the start-up culture is called "tech bros" for a reason.Objective: This paper identifies different factors affecting the women's decision to select a tech sector and become an entrepreneur in the tech sector. In this paper we also aim to identify different pitfalls and problems, which could influence the attractiveness of the tech sector, and specifically technology entrepreneurship, towards the women interested in the science, technology, and engineering domains.Method: To study the factors affecting women's interest towards entrepreneurship in the technology sector, we conducted a series of surveys and interviews to understand the underlying phenomena. Overall, this study interviewed ten female company founders, and conducted two surveys with women working, interested, or studying towards the tech sector, allowing us to combine and compare the qualitative data from the women who had become entrepreneurs against the quantitative trends and ideas collected from the general audiences.Results: The most common factors limiting the individuals' interest towards entrepreneurship such as financial risks or high responsibilities might not be gender-related, but there are also aspects as social acceptance, discrimination, and lack of role models, which affect especially the women interested in the possibilities of becoming an entrepreneur in tech.Conclusions: In general, the current younger generations are aware of the option of becoming entrepreneurs, and what becoming one requires. Initiatives, such as adding positive examples of females' success, or supporting entry-level opportunities towards full-time entrepreneurship, could have a meaningful impact of reducing the gender imbalance in the STEM fields, and in technology entrepreneurship in general.
C1 [Kovaleva, Yekaterina; Hyrynsalmi, Sonja; Saltan, Andrey; Happonen, Ari; Kasurinen, Jussi] LUT Univ, Sch Engn Sci, Yliopistonkatu 34, Lappeenranta 53850, Finland.
C3 Lappeenranta-Lahti University of Technology LUT
RP Kasurinen, J (corresponding author), LUT Univ, Sch Engn Sci, Yliopistonkatu 34, Lappeenranta 53850, Finland.
EM jussi.kasurinen@lut.fi
RI Kovaleva, Yekaterina/KHC-9134-2024; Happonen, Ari/H-2697-2018;
   Kasurinen, Jussi/B-5147-2015
OI Kovaleva, Yekaterina/0000-0002-8069-3905; Happonen,
   Ari/0000-0003-0744-1776; Hyrynsalmi, Sonja/0000-0002-1715-6250;
   Kasurinen, Jussi/0000-0001-9454-8664
CR [Anonymous], 2021, ED UN SUSTAINABLE DE
   [Anonymous], Gender Equality Index 2017
   Benner AD, 2016, J YOUTH ADOLESCENCE, V45, P1053, DOI 10.1007/s10964-016-0431-4
   Bordalo P, 2016, Q J ECON, V131, P1753, DOI 10.1093/qje/qjw029
   Bruni A, 2004, GENDER WORK ORGAN, V11, P406, DOI 10.1111/j.1468-0432.2004.00240.x
   Burkhardt K, 2020, CORP SOC RESP ENV MA, V27, P1591, DOI 10.1002/csr.1907
   Chen MA, 2021, INT J ENV RES PUB HE, V18, DOI 10.3390/ijerph18158217
   Cho Y, 2020, ADV DEV HUM RESOUR, V22, P176, DOI 10.1177/1523422320907047
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cukier W, 2020, GEND MANAG, V35, P303, DOI 10.1108/GM-11-2019-0204
   Eagly AH, 2020, AM PSYCHOL, V75, P301, DOI 10.1037/amp0000494
   Ellemers N., 2017, GENDER STEREOTYPES, V2017, P27
   Endendijk JJ, 2014, PARENT-SCI PRACT, V14, P141, DOI 10.1080/15295192.2014.972753
   Ferguson S.J., WOMEN ED, V89, P31
   Ferraz C, 2019, INTERNATIONAL CONFERENCE ON GAME JAMS, HACKATHONS AND GAME CREATION EVENTS (ICGJ 2019), DOI 10.1145/3316287.3316290
   Fine C, 2020, SOC ISS POLICY REV, V14, P36, DOI 10.1111/sipr.12064
   Fink A., 2015, How to conduct surveys: A step-by-step guide
   Germeijs V, 2009, J RES ADOLESCENCE, V19, P459, DOI 10.1111/j.1532-7795.2009.00603.x
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Griffith AL, 2010, ECON EDUC REV, V29, P911, DOI 10.1016/j.econedurev.2010.06.010
   Hyde JS, 2014, ANNU REV PSYCHOL, V65, P373, DOI 10.1146/annurev-psych-010213-115057
   Jayachandran S, 2015, ANNU REV ECON, V7, P63, DOI 10.1146/annurev-economics-080614-115404
   Jirout JJ, 2015, PSYCHOL SCI, V26, P302, DOI 10.1177/0956797614563338
   Kakar AK, 2018, INFORM SOFTWARE TECH, V97, P135, DOI 10.1016/j.infsof.2018.01.007
   Kanze D., 2017, MALE FEMALE ENTREPRE, P6
   Kemp PJ, 2020, ACM T COMPUT EDUC, V20, DOI 10.1145/3366016
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knoll S, 2011, INT J ADVERT, V30, P867, DOI 10.2501/IJA-30-5-867-888
   Kollmayer M, 2018, SEX ROLES, V79, P329, DOI 10.1007/s11199-017-0882-4
   Kovaleva Y, 2021, LECT NOTES BUS INF P, V434, P137, DOI 10.1007/978-3-030-91983-2_11
   KREHBIEL T.C., 2004, DECISION SCI J INNOV, V2, P97, DOI DOI 10.1111/J.0011-7315.2004.00025.X
   Kuschel Katherina, 2016, International Journal of Entrepreneurship and Small Business, V27, P333
   Laosethakul K., 2010, MULTICULT ED TECHNOL, V4, P173, DOI [10.1108/17504971011075174, DOI 10.1108/17504971011075174]
   Manzanera-Román S, 2016, SUMA NEG, V7, P38, DOI 10.1016/j.sumneg.2016.02.001
   Mastekaasa A, 2008, HIGH EDUC, V55, P189, DOI 10.1007/s10734-006-9042-4
   Mitchelmore S, 2013, J SMALL BUS ENTERP D, V20, P125, DOI 10.1108/14626001311298448
   Moss-Racusin CA, 2010, PSYCHOL MEN MASCULIN, V11, P140, DOI 10.1037/a0018093
   Noll N., 2020, GENDER EQUALITY GEND
   Onwuegbuzie AJ, 2007, QUAL QUANT, V41, P233, DOI 10.1007/s11135-006-9000-3
   Plasman J, 2021, ADOLESC RES REV, V6, P33, DOI 10.1007/s40894-020-00136-z
   Poggesi S, 2020, INT ENTREP MANAG J, V16, P17, DOI 10.1007/s11365-019-00599-0
   Powell A, 2012, EUR J ENG EDUC, V37, P541, DOI 10.1080/03043797.2012.724052
   Reavley Martha A., 2008, International Journal of Entrepreneurship and Small Business, V5, P272, DOI 10.1504/IJESB.2008.017304
   Smith S.L., 2012, GENDER ROLES OCCUPAT
   Starr CR, 2021, SOC PSYCHOL EDUC, V24, P273, DOI 10.1007/s11218-021-09611-4
   Stoet G, 2018, PSYCHOL SCI, V29, P581, DOI 10.1177/0956797617741719
   Tomasetto C, 2015, CONTEMP EDUC PSYCHOL, V42, P186, DOI 10.1016/j.cedpsych.2015.06.007
   Tsui L., 2009, J COLL ADMISS
   Wang MT, 2013, DEV REV, V33, P304, DOI 10.1016/j.dr.2013.08.001
   Whittemore R., VALIDITY QUALITATIVE, P16
   Wilbourn MP, 2010, SEX ROLES, V62, P670, DOI 10.1007/s11199-010-9773-7
   Williams Gayna, 2014, Interactions, V21, P36, DOI 10.1145/2524808
NR 52
TC 2
Z9 3
U1 4
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107110
DI 10.1016/j.infsof.2022.107110
EA NOV 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200008
OA hybrid
DA 2024-07-18
ER

PT J
AU Kao, CH
   Chang, CY
   Jiau, HC
AF Kao, Chia Hung
   Chang, Cheng-Ying
   Jiau, Hewijin Christine
TI Towards cost-effective API deprecation: A win-win strategy for API
   developers and API users
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API deprecation; API removal management; API migration; API usage
   statistics
ID EVOLUTION; SUPPORT
AB API deprecation, which enables API developers to assist API users in migration tasks, has been widely employed in API removal management. However, mismanaged API deprecation will cause unnecessary cost and bring negligible benefit to API users. Cost-effective investments in API deprecation become challenges for API developers. In this work, an iterative model for cost-effective investments in API deprecation is developed. The model provides a data-driven mechanism for API developers to iteratively make investments in API deprecation. A tool named AWARE (A Win-win Assistant for API REmoval management) is also developed for API developers to accurately assess the benefit from the perspective of API usage statistics. Based on the prioritized benefit, API developers can allocate appropriate resources on API deprecation. A case study is performed to evaluate the effectiveness of the iterative model with AWARE. The evaluation result shows that the cost paid by API developers can be reduced significantly while the benefit brought to API users can be increased. A win-win strategy for API deprecation can be achieved.
C1 [Kao, Chia Hung] Natl Taitung Univ, Dept Appl Math, Taitung, Taiwan.
   [Chang, Cheng-Ying] Natl Cheng Kung Univ, Inst Comp & Commun Engn, Taitung, Taiwan.
   [Jiau, Hewijin Christine] Natl Cheng Kung Univ, Dept Elect Engn, Taitung, Taiwan.
RP Kao, CH (corresponding author), Natl Taitung Univ, Dept Appl Math, Taitung, Taiwan.
EM chkao@nttu.edu.tw
OI Kao, Chia Hung/0000-0002-1178-5662; Chang,
   Cheng-Ying/0000-0002-3131-6150
CR [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   Bartolomei TT, 2010, PROC IEEE INT CONF S
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Brito G, 2018, J SYST SOFTWARE, V137, P306, DOI 10.1016/j.jss.2017.12.007
   Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Collard ML, 2003, PROG COMPREHEN, P134
   COLLARD ML, 2010, 2010 IEEE INT C SOFT
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Deokyoon Ko, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P27, DOI 10.1109/APSEC.2014.87
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P441, DOI 10.1145/1368088.1368148
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Heydarnoori A, 2012, IEEE T SOFTWARE ENG, V38, P1464, DOI 10.1109/TSE.2011.77
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Lamothe M, 2018, IEEE WORK CONF MIN S, P503, DOI 10.1145/3196398.3196420
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   MALETIC JI, 2015, 2015 IEEE ACM 37 IEE
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Murphy L, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P249, DOI 10.1109/VLHCC.2018.8506523
   Musavi P, 2016, PROC INT SYMP SOFTW, P424, DOI 10.1109/ISSRE.2016.42
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Perkins J.H., 2006, ACM SIGSOFT SOFTWARE, V31, P111
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sawant AA, 2018, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2018.00011
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sparks S, 1996, COMPUTER, V29, P52, DOI 10.1109/2.536784
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Wu W, 2011, CONF PROC INT SYMP C, P262, DOI 10.1109/ICPC.2011.43
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P392, DOI 10.1109/SANER.2017.7884640
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yu D.-F., 2017, P 12 INT C SOFTWARE, P219
   Zhang TC, 2020, IEEE GLOB COMM CONF, DOI 10.1109/GLOBECOM42002.2020.9322560
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
NR 55
TC 1
Z9 1
U1 13
U2 54
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106746
DI 10.1016/j.infsof.2021.106746
EA OCT 2021
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900006
DA 2024-07-18
ER

PT J
AU Zhang, Z
   Lei, Y
   Mao, XG
   Yan, M
   Xu, L
   Zhang, XH
AF Zhang, Zhuo
   Lei, Yan
   Mao, Xiaoguang
   Yan, Meng
   Xu, Ling
   Zhang, Xiaohong
TI A study of effectiveness of deep learning in locating real faults
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Debugging; Neural networks; Deep learning;
   Suspiciousness
AB Context: The recent progress of deep learning has shown its promising learning ability in making sense of data, and many fields have utilized this learning ability to learn an effective model, successfully solving their problems. Fault localization has explored and used deep learning to server an aid in debugging, showing the promising results on fault localization. However, as far as we know, there is no detailed studies on evaluating the benefits of using deep learning for locating real faults present in programs. Objective: To understand the benefits of deep learning in locating real faults, this paper explores more about deep learning by studying the effectiveness of fault localization using deep learning for a set of real bugs reported in the widely used programs. Method: We use three representative deep learning architectures (i.e. convolutional neural network, recurrent neural network and multi-layer perceptron) for fault localization, and conduct large-scale experiments on 8 real-world programs equipped with all real faults to evaluate their effectiveness on fault localization. Results: We observe that the localization effectiveness varies considerably among three neural networks in the context of real faults. Specifically, convolutional neural network performs the best in locating real faults, showing an average of 38.97% and 26.22% saving over multi-layer perceptron and recurrent neural network respectively; recurrent neural network and multi-layer perceptron yield comparable effectiveness even if the effectiveness of recurrent neural network is marginally higher than multi-layer perceptron. Conclusion: In context of real faults, convolutional neural network is the most effective for fault localization among the investigated architectures, and we suggest potential factors of deep learning for improving fault localization.
C1 [Zhang, Zhuo] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin 541000, Peoples R China.
   [Lei, Yan; Yan, Meng; Xu, Ling; Zhang, Xiaohong] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
   [Zhang, Zhuo; Mao, Xiaoguang] Natl Univ Def Technol, Coll Comp, Changsha 410073, Peoples R China.
C3 Guilin University of Electronic Technology; Chongqing University;
   National University of Defense Technology - China
RP Lei, Y (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
EM zz8477@126.com; yanlei@cqu.edu.cn; xgmao@nudt.edu.cn; mengy@cqu.edu.cn;
   xuling@cqu.edu.cn; xhongz@cqu.edu.cn
RI Zhang, Xiaohong/A-3060-2015
OI Yan, Meng/0000-0002-9538-9121
FU Guangxi Key Laboratory of Trusted Software [kx202008]; National Defense
   Basic Scientific Research Project [WDZC20205500308]; National Natural
   Science Foundation of China [62002034, 61602504]; Fundamental Research
   Funds for the Central Universities [2019CDXYRJ0011, 2020CDCGRJ037,
   2020CDCGRJ072]
FX This work is partially supported by Guangxi Key Laboratory of Trusted
   Software (No. kx202008), the National Defense Basic Scientific Research
   Project (No. WDZC20205500308), the National Natural Science Foundation
   of China (Nos. 62002034, 61602504), and the Fundamental Research Funds
   for the Central Universities (Nos. 2019CDXYRJ0011, 2020CDCGRJ037,
   2020CDCGRJ072).
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   [Anonymous], 2015, NATURE, DOI [DOI 10.1038/NATURE14539, 10.1038/nature14539]
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2012, P INT C MACH LEARN
   [Anonymous], 2019, IEEE T SOFTWARE ENG
   [Anonymous], 2016, MATH PROBL ENG THE 4, DOI DOI 10.7510/JGJS.ISSN.1001-3806.2016.01.028
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Baah GeorgeK., 2008, P 2008 INT S SOFTWAR, P189, DOI DOI 10.1145/1390630.1390654
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Foreman D.I., 2010, INT STAT REV, V78
   Gers F.A., 2002, J MACH LEARN RES, V3
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Heiden S, 2019, SOFTWARE PRACT EXPER, V49, P1197, DOI 10.1002/spe.2703
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Jarrett K, 2009, IEEE I CONF COMP VIS, P2146, DOI 10.1109/ICCV.2009.5459469
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   LeCun Y., 2004, COMP VIS PATT REC 20
   Lee H., 2009, P 26 ANN INT C MACH, P609
   Lei Y, 2018, IET SOFTW, V12, P190, DOI 10.1049/iet-sen.2017.0026
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pinto N, 2009, PLOS COMPUT BIOL, V5, DOI 10.1371/journal.pcbi.1000579
   Turaga SC, 2010, NEURAL COMPUT, V22, P511, DOI 10.1162/neco.2009.10-08-881
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wohlin C., 2012, Experimentation in Software Engineering
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhang Z, 2017, IEICE T INF SYST, VE100D, P3027, DOI 10.1587/transinf.2017EDL8143
NR 53
TC 22
Z9 24
U1 2
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106486
DI 10.1016/j.infsof.2020.106486
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000007
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Grov, J
AF Jorgensen, Magne
   Grov, Jon
TI A field experiment on trialsourcing and the effect of contract types on
   outsourced software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Outsourcing; Software development skill; Contract types; Empirical study
AB Context: To ensure the success of software projects, it is essential to select skilled developers and to use suitable work contracts. Objective: This study tests two hypotheses: (i) the use of work-sample testing (trialsourcing) improves the selection of skilled software developers; and (ii) the use of contracts based on hourly payment leads to better software project outcomes than fixed-price contracts. Method: Fifty-seven software freelancers with relevant experience and good evaluation scores from previous clients were invited to complete a two-hour long trialsourcing task to qualify for a software development project. Thirty-six developers completed the trialsourcing task with acceptable performance, and, based on a stratified random allocation process, were asked to give a proposal based on an hourly payment or a fixed-price contract. Eight hourly payment-based and eight fixed-priced proposals were accepted. The process and product characteristics of the completion of these 16 projects were collected and analysed. Results and Conclusion: While the use of trialsourcing may have prevented the selection of developers with insufficient skills, the performance on the trialsourcing task of the selected developers did, to a large extent, not predict their performance on the projects. The use of hourly payments seems to have led to lower costs than fixed-price contracts, but not to improved processes or products. We plan to follow up these results with research on how to design more skill-predictive trialsourcing tasks, and when and why different project contexts give different contract consequences.
C1 [Jorgensen, Magne] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
   [Jorgensen, Magne] Oslo Metropolitan Univ, Oslo, Norway.
   [Grov, Jon] Langs Radgiving, Oslo, Norway.
C3 Oslo Metropolitan University (OsloMet)
RP Jorgensen, M (corresponding author), Simula Metropolitan Ctr Digital Engn, Oslo, Norway.; Jorgensen, M (corresponding author), Oslo Metropolitan Univ, Oslo, Norway.
EM magnej@simula.no; jon.grov@langs.no
CR Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Jorgensen M., 2020, IEEE T SOFTWARE ENG
   Jorgensen M, 2017, INT J PROJ MANAG, V35, P1573, DOI 10.1016/j.ijproman.2017.09.003
   Jorgensen M, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.24
   Liang C., 2016, P INT C INF SYST ICI
   Roth PL, 2005, PERS PSYCHOL, V58, P1009, DOI 10.1111/j.1744-6570.2005.00714.x
NR 6
TC 2
Z9 2
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106559
DI 10.1016/j.infsof.2021.106559
EA FEB 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600007
DA 2024-07-18
ER

PT J
AU Rubei, R
   Di Sipio, C
   Nguyen, PT
   Di Rocco, J
   Di Ruscio, D
AF Rubei, Riccardo
   Di Sipio, Claudio
   Nguyen, Phuong T.
   Di Rocco, Juri
   Di Ruscio, Davide
TI PostFinder: Mining Stack Overflow posts to support software developers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Recommender systems; Mining Stack Overflow posts; Indexing posts
AB Context - During the development of complex software systems, programmers look for external resources to understand better how to use specific APIs and to get advice related to their current tasks. Stack Overflow provides developers with a broader insight into API usage as well as useful code examples. Given the circumstances, tools and techniques for mining Stack Overflow are highly desirable. Objective - In this paper, we introduce PostFinder, an approach that analyzes the project under development to extract suitable context, and allows developers to retrieve messages from Stack Overflow being relevant to the API function calls that have already been invoked. Method - PostFinder augments posts with additional data to make them more exposed to queries. On the client side, it boosts the context code with various factors to construct a query containing information needed for matching against the stored indexes. Multiple facets of the data available are used to optimize the search process, with the ultimate aim of recommending highly relevant SO posts. Results - The approach has been validated utilizing a user study involving a group of 12 developers to evaluate 500 posts for 50 contexts. Experimental results indicate the suitability of PostFinder to recommend relevant Stack Overflow posts and concurrently show that the tool outperforms a well-established baseline. Conclusions - We conclude that PostFinder can be deployed to assist developers in selecting relevant Stack Overflow posts while they are programming as well as to replace the module for searching posts in a code-to-code search engine.
C1 [Rubei, Riccardo; Di Sipio, Claudio; Nguyen, Phuong T.; Di Rocco, Juri; Di Ruscio, Davide] Univ Aquila, Laquila, Italy.
C3 University of L'Aquila
RP Nguyen, PT (corresponding author), Univ Aquila, Laquila, Italy.
EM riccardo.rubei@univaq.it; claudio.disipio@univaq.it;
   phuong.nguyen@univaq.it; juri.dirocco@univaq.it;
   davide.diruscio@univaq.it
RI Di Sipio, Claudio/JYQ-5925-2024; Nguyen, Phuong/ABE-3890-2021; Di
   Ruscio, Davide/AAG-4674-2020; Di Rocco, Juri/HSE-7230-2023
OI Di Sipio, Claudio/0000-0001-9872-9542; Nguyen,
   Phuong/0000-0002-3666-4162; Di Ruscio, Davide/0000-0002-5077-6793;
   Rubei, Riccardo/0000-0001-9622-5949; Di Rocco, Juri/0000-0002-7909-3902
FU European Union [732223]
FX The research described in this paper has been carried out as part of the
   CROSSMINER Project, which has received funding from the European Union's
   Horizon 2020 Research and Innovation Programme under Grant 732223
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   [Anonymous], SOURC COD SEARCH ENG
   [Anonymous], **DATA OBJECT**, DOI DOI 10.5281/ZEN0D0.1489120
   [Anonymous], 1992, Springer Series in Statistics, DOI DOI 10.1007/978-1-4612-4380-9_16
   [Anonymous], KRUGL SOFTW DEV PROD
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Borg M., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement. ESEM'14, DOI DOI 10.1145/2652524.2652556
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Happ M, 2019, STAT MED, V38, P363, DOI 10.1002/sim.7983
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu MW, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275227
   Luan Sifei, 2018, CORR
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Perez-Iglesias Joaquin, 2009, ARXIV09115046
   Pettigrew S, 2008, QUAL MARK RES, V11, P331, DOI 10.1108/13522750810879048
   Ponzanelli L, 2016, EMPIR SOFTW ENG, V21, P2190, DOI 10.1007/s10664-015-9397-1
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard Martin P., 2014, Recommendation Systems in Software Engineering, P15, DOI [10.1007/978-3-642-45135-5, DOI 10.1007/978-3-642-45135-5]
   Rubei R., 2020, POSTFINDER ONLINE AP
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Viera AJ, 2005, FAM MED, V37, P360
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
NR 39
TC 27
Z9 27
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106367
DI 10.1016/j.infsof.2020.106367
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700005
DA 2024-07-18
ER

PT J
AU Garousi, V
   Bauer, S
   Felderer, M
AF Garousi, Vahid
   Bauer, Sara
   Felderer, Michael
TI NLP-assisted software testing: A systematic mapping of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Natural Language Processing (NLP); Systematic
   literature mapping; Systematic literature review
ID CODE
AB Context: To reduce manual effort of extracting test cases from natural-language requirements, many approaches based on Natural Language Processing (NLP) have been proposed in the literature. Given the large amount of approaches in this area, and since many practitioners are eager to utilize such techniques, it is important to synthesize and provide an overview of the state-of-the-art in this area.
   Objective: Our objective is to summarize the state-of-the-art in NLP-assisted software testing which could benefit practitioners to potentially utilize those NLP-based techniques. Moreover, this can benefit researchers in providing an overview of the research landscape.
   Method: To address the above need, we conducted a survey in the form of a systematic literature mapping (classification). After compiling an initial pool of 95 papers, we conducted a systematic voting, and our final pool included 67 technical papers.
   Results: This review paper provides an overview of the contribution types presented in the papers, types of NLP approaches used to assist software testing, types of required input requirements, and a review of tool support in this area. Some key results we have detected are: (1) only four of the 38 tools (11%) presented in the papers are available for download; (2) a larger ratio of the papers (30 of 67) provided a shallow exposure to the NLP aspects (almost no details).
   Conclusion: This paper would benefit both practitioners and researchers by serving as an "index" to the body of knowledge in this area. The results could help practitioners utilizing the existing NLP-based techniques; this in turn reduces the cost of test-case design and decreases the amount of human resources spent on test activities. After sharing this review with some of our industrial collaborators, initial insights show that this review can indeed be useful and beneficial to practitioners.
C1 [Garousi, Vahid] Queens Univ Belfast, Belfast, Antrim, North Ireland.
   [Bauer, Sara; Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Felderer, Michael] Blekinge Inst Technol, Karlshamn, Sweden.
C3 Queens University Belfast; University of Innsbruck; Blekinge Institute
   Technology
RP Garousi, V (corresponding author), Queens Univ Belfast, Belfast, Antrim, North Ireland.
EM v.garousi@qub.ac.uk; sara.bauer@uibk.ac.at; michael.felderer@uibk.ac.at
OI Garousi, Vahid/0000-0001-6590-7576
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Ahsan I, 2017, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INTERNET OF THINGS, DATA AND CLOUD COMPUTING (ICC 2017), DOI 10.1145/3018896.3036375
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2018, WHY ARE PAPERS CODE
   Atkinson L.Z., 2018, BJPsych Advances, V24, P74, DOI [DOI 10.1192/BJA2017, 10.1192/bja.2017.3, DOI 10.1192/BJA.2017.3]
   Baker M., 1 500 SCI LIFE LID R
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Barnes N, 2010, NATURE, V467, P753, DOI 10.1038/467753a
   Berti-Equille L., 2015, SYNTHESIS LECT DATA
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Chen P, 2007, J INFORMETR, V1, P8, DOI 10.1016/j.joi.2006.06.001
   Cook W.A., 1989, CASE GRAMMARTHEORY
   De Marneffe M.-C., 2006, LREC, V6, P449
   Denger C., 2003, TECH REP
   EnagoAcademy, IMP SCI TRANSP REPR
   Escalona MJ, 2011, J SYST SOFTWARE, V84, P1379, DOI 10.1016/j.jss.2011.03.051
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V, 2018, TESTING EMBEDDED SOF
   Garousi V., DATASET STUDY NLP AS
   Garousi V, 2019, INFORM SOFTWARE TECH, V108, P35, DOI 10.1016/j.infsof.2018.12.003
   Garousi V, 2017, SCIENTOMETRICS, V112, P963, DOI 10.1007/s11192-017-2419-6
   Garousi V, 2017, IEEE SOFTWARE, V34, P90, DOI 10.1109/MS.2017.34
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Gewin V, 2016, NATURE, V529, P117, DOI 10.1038/nj7584-117a
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Graham D., 2012, EXPERIENCES TEST AUT
   Gutierrez J.J., 2008, P EUR AM C TEL INF S
   Indurkhya N, 2010, CH CRC MACH LEARN PA, pXXI
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kim J, 2008, ELE COM ENG, P86
   Kitchenham B., 2007, 2007001 EBSE
   Koehn P., 2009, STAT MACHINE TRANSLA, DOI DOI 10.1017/CBO9780511815829
   Leidner J.L., 2003, P WORKSH SOFTW ENG A, P45
   Liddy E.D., 2001, ENCY LIB INFORM SCI
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mathew G., 2018, IEEE T SOFTW ENG
   McCafferty D, 2010, COMMUN ACM, V53, P16, DOI 10.1145/1831407.1831415
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Nazir F, 2017, LECT NOTES ELECTR EN, V424, P485, DOI 10.1007/978-981-10-4154-9_56
   Nguyen VM, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0132557
   Obrenovic Z, 2017, IEEE SOFTWARE, V34, P71, DOI 10.1109/MS.2017.101
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rodriguez J.J. Gutierrez, 2006, WORKSH SYST TEST VAL
   Shahbaz M, 2012, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2012.15
   Sinha R, 2007, ICSC 2007: INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING, PROCEEDINGS, P363, DOI 10.1109/ICSC.2007.87
   Tsafnat G, 2018, SYST REV-LONDON, V7, DOI 10.1186/s13643-018-0724-7
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Zhang M, 2014, LECT NOTES COMPUT SC, V8769, P142, DOI 10.1007/978-3-319-11743-0_10
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 55
TC 37
Z9 37
U1 4
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106321
DI 10.1016/j.infsof.2020.106321
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800010
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Zakari, A
   Lee, SP
   Abreu, R
   Ahmed, BH
   Rasheed, RA
AF Zakari, Abubakar
   Lee, Sai Peck
   Abreu, Rui
   Ahmed, Babiker Hussien
   Rasheed, Rasheed Abubakar
TI Multiple fault localization of software programs: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Program debugging; Parallel debugging; Fault localization; Multiple
   faults; One-bug-at-a-time (OBA)
AB Context: Multiple fault localization (MFL) is the act of identifying the locations of multiple faults (more than one fault) in a faulty software program. This is known to be more complicated, tedious, and costly in comparison to the traditional practice of presuming that a software contains a single fault. Due to the increasing interest in MFL by the research community, a broad spectrum of MFL debugging approaches and solutions have been proposed and developed.
   Objective: The aim of this study is to systematically review existing research on MFL in the software fault localization (SFL) domain. This study also aims to identify, categorize, and synthesize relevant studies in the research domain.
   Method: Consequently, using an evidence-based systematic methodology, we identified 55 studies relevant to four research questions. The methodology provides a systematic selection and evaluation process with rigorous and repeatable evidence-based studies selection process.
   Result: The result of the systematic review shows that research on MFL is gaining momentum with stable growth in the last 5 years. Three prominent MFL debugging approaches were identified, i.e. One-bug-at-a-time debugging approach (OBA), parallel debugging approach, and multiple-bug-at-a-time debugging approach (MBA), with OBA debugging approach being utilized the most.
   Conclusion: The study concludes with some identified research challenges and suggestions for future research. Although MFL is becoming of grave concern, existing solutions in the field are less mature. Studies utilizing real faults in their experiments are scarce. Concrete solutions to reduce MFL debugging time and cost by adopting an approach such as MBA debugging approach are also less, which require more attention from the research community.
C1 [Zakari, Abubakar] Kano Univ Sci & Technol, Dept Comp Sci, PMB 3244, Kano, Nigeria.
   [Lee, Sai Peck; Ahmed, Babiker Hussien] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
   [Rasheed, Rasheed Abubakar] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Comp Syst & Technol, Kuala Lumpur 50603, Malaysia.
   [Abreu, Rui] Univ Lisbon, INESC ID, Lisbon, Portugal.
   [Abreu, Rui] Univ Lisbon, IST, Lisbon, Portugal.
C3 Universiti Malaya; Universiti Malaya; INESC-ID; Universidade de Lisboa;
   Universidade de Lisboa
RP Zakari, A (corresponding author), Kano Univ Sci & Technol, Dept Comp Sci, PMB 3244, Kano, Nigeria.
EM abubakar.zakari@yahoo.com
RI zakari, abubakar/X-8880-2019; Abreu, Rui/K-7048-2019
OI zakari, abubakar/0000-0001-6488-0666; Abreu, Rui/0000-0003-3734-3157
CR Abreu R, 2011, J SYST SOFTWARE, V84, P573, DOI 10.1016/j.jss.2010.11.915
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Alam KA, 2015, INFORM SYST, V54, P43, DOI 10.1016/j.is.2015.06.003
   Alipour M.A., 2012, AUTOMATED FAULT LOCA
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews James H., 2005, P 27 INT C SOFTW ENG
   [Anonymous], [No title captured]
   [Anonymous], 2005, 20 IEEE ACM INT C AU
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], P 2007 INT S SOFTW T
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2014, P 22 ACM SIGSOFT INT
   [Anonymous], 2012, SOFTW TEST VER VAL I
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], SOFTW REL ENG WORKSH
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], IEEE ACCESS
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2014 IEEE 25 INT S S
   David F, 2009, SISTEMAS E TECHNOLOGIAS DE INFORMACAO: ACTAS DA 4A CONFERENCIA IBERICA DE SISTEMAS E TECNOLOGIAS DE LA INFORMACAO, P97
   Dean B.C., 2009, P 2009 IEEE ACM INT
   DiGiuseppe N., 2011, P 2011 INT S SOFTW T
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Gao RZ, 2017, SOFTWARE QUAL J, V25, P131, DOI 10.1007/s11219-015-9295-1
   Gong DD, 2015, INFORM SOFTWARE TECH, V57, P430, DOI 10.1016/j.infsof.2014.05.022
   Gousios Georgios, 2014, P 11 WORK C MIN SOFT
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Lamraoui S-M., 2016, J Inf Process, V24, P88
   Liu B, 2016, SOFTW AN EV REENG SA
   Neelofar N, 2018, SOFTWARE PRACT EXPER, V48, P641, DOI 10.1002/spe.2527
   Ouhbi S, 2015, REQUIR ENG, V20, P119, DOI 10.1007/s00766-013-0192-5
   Pal D., 2013, AUTOMATED BUG LOCALI
   Parsa S, 2015, COMPUT INFORM, V34, P823
   Parsa S, 2014, SOFTWARE QUAL J, V22, P427, DOI 10.1007/s11219-013-9199-x
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Perez A, 2014, J SYST SOFTWARE, V90, P18, DOI 10.1016/j.jss.2013.12.036
   Shu T, 2016, INFORM SCIENCES, V360, P43, DOI 10.1016/j.ins.2016.04.023
   Sun XB, 2016, FRONT COMPUT SCI-CHI, V10, P812, DOI 10.1007/s11704-016-5226-y
   Wang XY, 2016, J SYST SOFTWARE, V122, P144, DOI 10.1016/j.jss.2016.09.014
   Wang XY, 2015, J SYST SOFTWARE, V104, P69, DOI 10.1016/j.jss.2015.02.038
   Wang YB, 2014, J SYST SOFTWARE, V98, P44, DOI 10.1016/j.jss.2014.08.032
   Wang Y, 2018, IEEE ACCESS, V6, P8925, DOI 10.1109/ACCESS.2018.2796849
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Wong WZ, 2009, PROCEEDINGS OF TECHNICAL PROGRAM: 2009 INTERNATIONAL SYMPOSIUM ON VLSI TECHNOLOGY, SYSTEMS AND APPLICATIONS, P9, DOI 10.1109/VTSA.2009.5159268
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Xiao Y, 2019, J PLAN EDUC RES, V39, P93, DOI 10.1177/0739456X17723971
   Xu J, 2013, INFORM SOFTWARE TECH, V55, P880, DOI 10.1016/j.infsof.2012.08.006
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xue XY, 2013, 2013 5TH IEEE INTERNATIONAL MEMORY WORKSHOP (IMW), P132, DOI 10.1109/IMW.2013.6582116
   Yu ZX, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P924, DOI 10.1109/ICSE.2015.102
   Zakari A, 2019, 2019 IEEE 15 INT C S
   Zakari A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2178
   Zakari A, 2019, IEEE ACCESS, V7, P50012, DOI 10.1109/ACCESS.2019.2910327
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang M., 2017, P 26 ACM SIGSOFT INT, p261
   Zhang XY, 2018, J SYST SOFTWARE, V136, P278, DOI 10.1016/j.jss.2017.07.027
   Zhang YJ, 2016, J SYST SOFTWARE, V114, P38, DOI 10.1016/j.jss.2015.10.052
   Zheng Y, 2018, J SYST SOFTWARE, V139, P107, DOI 10.1016/j.jss.2018.02.001
NR 85
TC 43
Z9 43
U1 2
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2020
VL 124
AR 106312
DI 10.1016/j.infsof.2020.106312
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP3MD
UT WOS:000534222000002
DA 2024-07-18
ER

PT J
AU Uddin, G
   Khomh, F
   Roy, CK
AF Uddin, Gias
   Khomh, Foutse
   Roy, Chanchal K.
TI Mining API usage scenarios from stack overflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API; Mining; Usage; Documentation
AB Context: APIs play a central role in software development. The seminal research of Carroll et al. [15] on minimal manual and subsequent studies by Shull et al. [79] showed that developers prefer task-based API documentation instead of traditional hierarchical official documentation (e.g., Javadoc). The Q&A format in Stack Overflow offers developers an interface to ask and answer questions related to their development tasks.
   Objective: With a view to produce API documentation, we study automated techniques to mine API usage scenarios from Stack Overflow.
   Method: We propose a framework to mine API usage scenarios from Stack Overflow. Each task consists of a code example, the task description, and the reactions of developers towards the code example. First, we present an algorithm to automatically link a code example in a forum post to an API mentioned in the textual contents of the forum post. Second, we generate a natural language description of the task by summarizing the discussions around the code example. Third, we automatically associate developers reactions (i.e., positive and negative opinions) towards the code example to offer information about code quality.
   Results: We evaluate the algorithms using three benchmarks. We compared the algorithms against seven baselines. Our algorithms outperformed each baseline. We developed an online tool by automatically mining API usage scenarios from Stack Overflow. A user study of 31 software developers shows that the participants preferred the mined usage scenarios in Opiner over API official documentation. The tool is available online at: http://opiner.polymtl.ca/.
   Conclusion: With a view to produce API documentation, we propose a framework to automatically mine API usage scenarios from Stack Overflow, supported by three novel algorithms. We evaluated the algorithms against a total of eight state of the art baselines. We implement and deploy the framework in our proof-of-concept online tool, Opiner.
C1 [Uddin, Gias; Khomh, Foutse; Roy, Chanchal K.] McGill Univ, Polytech Montreal, Montreal, PQ, Canada.
   [Uddin, Gias; Khomh, Foutse; Roy, Chanchal K.] Univ Saskatchewan, Saskatoon, SK, Canada.
C3 McGill University; Universite de Montreal; Polytechnique Montreal;
   University of Saskatchewan
RP Uddin, G (corresponding author), McGill Univ, Polytech Montreal, Montreal, PQ, Canada.
EM gias.uddin@mail.mcgill.ca
CR Agrawal R., 1994, P C 20 INT C VER LAR, P192
   Ahasanuzzaman M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P244, DOI 10.1109/SANER.2018.8330213
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 2012, ACM SIGSOFT SOFTWARE
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Blair-Goldensohn S., 2008, WWW WORKSH NLP INF E, P10
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Cai I., 2000, THESIS
   Calefato F., 2017, J EMPIR SOFTW ENG, P2543
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Campbell JC, 2013, IEEE WORK CONF MIN S, P57, DOI 10.1109/MSR.2013.6624005
   Campos EC, 2016, J SOFTW-EVOL PROC, V28, P863, DOI 10.1002/smr.1800
   Campos Eduardo C., 2016, P 26 ANN INT C COMPU, P232
   Carbonell J., 1998, Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P335, DOI 10.1145/290941.291025
   Carroll J. M., 1987, Human-Computer Interaction, V3, P123, DOI 10.1207/s15327051hci0302_2
   Chan WM, 2012, PERTANIKA J SOC SCI, V20, P1
   Cohan A., 2016, P LANG RES EV, P8
   Dagenais B, P 18 INT S FDN SOFT, P127
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   de Souza LBL, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P21, DOI 10.1109/SBES.2014.15
   Delfim F., 2016, J BRAZIL COMPUT SOC, V29
   Freelon D., 2017, RECAL3 RELIABILITY 3
   Freelon D., 2016, RECAL2 RELIABILITY 2
   Gambhir M, 2017, ARTIF INTELL REV, V47, P1, DOI 10.1007/s10462-016-9475-9
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Harper FM, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P865
   HART S G, 1988, P139
   Hatzivassiloglou V., 18 C ASS COMP LING, P299
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Holmes R, 2009, PROC IEEE INT CONF S, P555, DOI 10.1109/ICSM.2009.5306387
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   Phan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P632, DOI 10.1145/3180155.3180230
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kavaler David, 2013, Social Informatics. 5th International Conference, SocInfo 2013. Proceedings: LNCS 8238, P405, DOI 10.1007/978-3-319-03260-3_35
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Li J., 2018, IEEE T SERV COMPUT, V1, P1, DOI [10.1109/TSC.2018.2789893, DOI 10.1109/TSC.2018.2789893]
   Li J., 2018, J INF SCI, V448-449, P46
   Li L, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1453, DOI 10.1145/2740908.2742129
   Lin B., 2019, P 41 ACM IEEE INT C, P12
   Liu B., SENTIMENT ANAL SUBJE
   Liu B., 2012, SYNTHESIS LECT HUMAN, V5, P1, DOI [DOI 10.2200/S00416ED1V01Y201204HLT016, 10.2200/s00416ed1v01y201204hlt016]
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mihalcea R., 2004, P 2004 C EMPIRICAL M, P404, DOI DOI 10.3115/1219044.1219064
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Nielsen A., 8 EXT SEM WEB C, P93
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ponzanelli L, 2016, EMPIR SOFTW ENG, V21, P2190, DOI 10.1007/s10664-015-9397-1
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard M.P., 2017, P 33 IEEE INT C SOFT, P5
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rosson M. B., 1990, SIGCHI Bulletin, P423
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Srinivasan U, 2017, HEALTHCARE ETHICS AND TRAINING: CONCEPTS, METHODOLOGIES, TOOLS, AND APPLICATIONS, P12, DOI 10.4018/978-1-5225-2237-9.ch002
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sushine J, 2015, INT C PROGRAM COMPRE, P82, DOI 10.1109/ICPC.2015.17
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Uddin G., 2017, AUTOMATIC RESOLUTION, P6
   Uddin G, 2019, IEEE Trans Softw Eng, P1
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Uddin Gias, 2019, IEEE T SOFTWARE ENG, V47, P1
   Uddin MS, 2017, COMPANION PROCEEDINGS OF THE 2016 ACM INTERNATIONAL CONFERENCE ON INTERACTIVE SURFACES AND SPACES (ISS 2016), P13, DOI 10.1145/3009939.3009942
   van der Meij H., 1992, SIGDOC '92. The 10th Annual International Conference. Conference Proceedings. Going Online. The New World of Multimedia Documentation, P7, DOI 10.1145/147001.147003
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Wilson TS, 2005, PHIL EDUC, P347, DOI 10.3115/1220575.1220619
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Ye D., 2016, P 32 INT C SOFTW MAI, P12
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 91
TC 20
Z9 20
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106277
DI 10.1016/j.infsof.2020.106277
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Minhas, NM
   Petersen, K
   Börstler, J
   Wnuk, K
AF Minhas, Nasir Mehmood
   Petersen, Kai
   Borstler, Jurgen
   Wnuk, Krzysztof
TI Regression testing for large-scale embedded software development -
   Exploring the state of practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Practices; Challenges; Goals; Multi-case study
ID SELECTION; SYSTEM; AGILE
AB Context: A majority of the regression testing techniques proposed by academics have not been adopted in industry. To increase adoption rates, we need to improve our understanding of the practitioners' perspectives on regression testing.
   Objective: This study aims at exploring the regression testing state of practice in the large-scale embedded software development. The study has two objectives: 1) to highlight the potential challenges in practice, and 2) to identify the industry-relevant research areas regarding regression testing.
   Method: We conducted a qualitative study in two large-scale embedded software development companies, where we carried out semi-structured interviews with representatives from five software testing teams.
   Results: The practitioners run regression testing mostly with limited scope based on the size, complexity, and location of the change. Test cases are prioritized on the basis of risk and critical functionality. The practitioners rely on their knowledge and experience for the decision making regarding selection and prioritization of test cases. The companies are using both automated and manual regression testing, and mainly rely on in-house developed tools for test automation. The challenges identified in the companies are: time to test, information management, test suite maintenance, lack of communication, test selection/prioritization, lack of assessment, etc. Regression testing goals identified in this study are customer satisfaction, critical defect detection, confidence, effectiveness, efficiency, and controlled slip through of faults.
   Conclusions: Considering the current state of practice and the identified challenges we conclude that there is a need to reconsider the regression test strategy in the companies. Researchers need to analyze the industry perspective when proposing new regression testing techniques.
C1 [Minhas, Nasir Mehmood; Petersen, Kai; Borstler, Jurgen; Wnuk, Krzysztof] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Minhas, NM (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
EM nasir.mehmood.minhas@bth.se; kai.petersen@bth.se;
   jurgen.borstler@bth.se; krzysztof.wnuk@bth.se
RI Minhas, Nasir Mehmood/G-4297-2018; Minhas, Nasir Mehmood/AAP-4624-2021;
   Börstler, Jürgen/IWE-4001-2023
OI Minhas, Nasir Mehmood/0000-0001-8177-4355; Minhas, Nasir
   Mehmood/0000-0001-8177-4355; Börstler, Jürgen/0000-0003-0639-4234;
   Petersen, Kai/0000-0002-1532-8223
FU Vinnova; Sony Mobile; Axis; Softhouse through the EASE Industrial
   Excellence Center [2015-03235]
FX The authors would like to thank the practitioners from Sony Mobile
   Communications AB and Axis Communications AB, who participated in all
   sessions of the study. We are also thankful to all facilitators who
   helped us in organizing the study.; The funding agency Vinnova, as well
   as Sony Mobile, Axis and Softhouse support the work through the EASE
   Industrial Excellence Center (reference number 2015-03235).
CR Ali N. B., 2019, EMPIR SOFTW ENG, P1
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2007, TECHNICAL REPORT
   [Anonymous], 2010, ADV SOFTWARE ENG
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bin Ali N, 2012, INT SYMP EMP SOFTWAR, P211, DOI 10.1145/2372251.2372290
   Brahneborg D, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P618, DOI 10.1109/QRS-C.2017.117
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dias-Neto AC, 2017, SOFTWARE QUAL J, V25, P1145, DOI 10.1007/s11219-016-9329-3
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Engstrom RN, 2010, DESIGN, MEANING AND CHOICE IN DIRECT DEMOCRACY: THE INFLUENCES OF PETITIONERS AND VOTERS, P75
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   IEEE Standards Coordinating Committee and others, 1990, TECHNICAL REPORT
   ISO, 2010, ISO/IEC/IEEE 24765:2010- Systems and Software EngineeringVocabulary
   Jafrin Samia, 2016, International Journal of Modern Education and Computer Science, V8, P33, DOI 10.5815/ijmecs.2016.04.05
   Juergens E, 2011, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2011.44
   Kapfhammer G. M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P99, DOI 10.1109/ICSTW.2011.88
   Kassab M, 2017, IEEE SOFTWARE, V34, P46, DOI 10.1109/MS.2017.3571582
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Khan SUR, 2018, IEEE ACCESS, V6, P11816, DOI 10.1109/ACCESS.2018.2809600
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Minhas NM, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P25, DOI 10.1109/APSECW.2017.23
   Ng SP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P116, DOI 10.1109/ASWEC.2004.1290464
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Parsons D, 2014, SOFTWARE QUAL J, V22, P717, DOI 10.1007/s11219-013-9225-z
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Wnuk K, 2013, INFORM SOFTWARE TECH, V55, P921, DOI 10.1016/j.infsof.2012.12.001
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 34
TC 12
Z9 12
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106254
DI 10.1016/j.infsof.2019.106254
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM6FK
UT WOS:000514233800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Coviello, C
   Romano, S
   Scanniello, G
   Marchetto, A
   Corazza, A
   Antoniol, G
AF Coviello, Carmen
   Romano, Simone
   Scanniello, Giuseppe
   Marchetto, Alessandro
   Corazza, Anna
   Antoniol, Giuliano
TI Adequate vs. inadequate test suite reduction approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adequate test suite reduction; Clustering; Inadequate test suite
   reduction; Regression testing; Test suite reduction
ID TEST-CASE PRIORITIZATION; SELECTION
AB Context: Regression testing is an important activity that allows ensuring the correct behavior of a system after changes. As the system grows, the time and resources to perform regression testing increase. Test Suite Reduction (TSR) approaches aim to speed up regression testing by removing obsolete or redundant test cases. These approaches can be classified as adequate or inadequate. Adequate TSR approaches reduce test suites and completely preserve test requirements (e.g., covered statements) of the original test suites. Inadequate TSR approaches do not preserve test requirements. The percentage of satisfied test requirements indicates the inadequacy level.
   Objective: We compare some state-of-the-art adequate and inadequate TSR approaches with respect to the size of reduced test suites and their fault-detection capability. We aim to increase our body of knowledge on TSR approaches by comparing: (i) well-known traditional adequate TSR approaches; (ii) their inadequate variants; and (iii) several variants of a novel Clustering-Based (CB) approach for (adequate and inadequate) TSR.
   Method: We conducted an experiment to compare adequate and inadequate TSR approaches. This comparison is founded on a public dataset containing information on real faults.
   Results: The most important findings from our experiment can be summarized as follows: (i) there is not an inadequate TSR approach that outperforms the others;
   (ii) some inadequate variants of the CB approach, and few traditional inadequate approaches, outperform the adequate ones in terms of reduction in test suite size with a negligible effect on fault-detection capability; and (iii) the CB approach is less sensitive than the other inadequate approaches, that is, variations in the inadequacy level have small effect on reduction in test suite size and on loss in fault-detection capability.
   Conclusions: These findings imply that inadequate TSR approaches and especially the CB approach might be appealing because they lead to a greater reduction in test suite size (with respect to the adequate ones) at the expense of a small loss in fault-detection capability.
C1 [Coviello, Carmen; Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Romano, Simone] Univ Bari, Bari, Italy.
   [Corazza, Anna] Univ Naples Federico II, Naples, Italy.
   [Antoniol, Giuliano] Polytech Montreal, Montreal, PQ, Canada.
C3 University of Basilicata; Universita degli Studi di Bari Aldo Moro;
   University of Naples Federico II; Universite de Montreal; Polytechnique
   Montreal
RP Coviello, C (corresponding author), Univ Basilicata, Potenza, Italy.
EM carmen.coviello@unibas.it; simone.romano@uniba.it;
   giuseppe.scanniello@unibas.it; alex.marchetto@gmail.com;
   anna.corazza@unina.it; antoniol@ieee.org
RI Romano, Simone/ABD-6504-2020; Marchetto, Alessandro/AAE-4179-2022;
   Romano, Simone/JVZ-6529-2024
OI Romano, Simone/0000-0003-4880-3622; Marchetto,
   Alessandro/0000-0002-6833-896X; Scanniello, Giuseppe/0000-0003-0024-7508
CR Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen T., 1970, HEURISTICS OPTIMIZAT, V14
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Coviello C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240497
   Coviello C, 2018, PROC IEEE ACM INT C, P306, DOI 10.1145/3183440.3194983
   Coviello C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P95, DOI 10.1109/SANER.2018.8330200
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Karatzoglou A, 2010, COMPUT STAT DATA AN, V54, P290, DOI 10.1016/j.csda.2009.09.023
   Khalilian A, 2012, LECT NOTES COMPUT SC, V7054, P243
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marchetto A, 2019, IEEE T SOFTWARE ENG, V45, P363, DOI 10.1109/TSE.2017.2777831
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Mohapatra SK, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P505, DOI 10.1109/IndiaCom.2014.6828189
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Parsa S, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 3, P189, DOI 10.1109/ICCSIT.2009.5234742
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Romano S, 2018, INFORM SOFTWARE TECH, V99, P62, DOI 10.1016/j.infsof.2018.03.004
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Smith A.M., 2007, P 22 IEEEACM INT C A, P539
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Williams H.P., 2013, Model Building in Mathematical Programming
   Wohlin C., 2012, Experimentation in Software Engineering
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yang Y., 2002, P 8 ACM SIGKDD INT C, P682, DOI DOI 10.1145/775047.775149
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   [No title captured]
NR 45
TC 9
Z9 9
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106224
DI 10.1016/j.infsof.2019.106224
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100006
DA 2024-07-18
ER

PT J
AU Wijayarathna, C
   Arachchilage, NAG
AF Wijayarathna, Chamila
   Arachchilage, Nalin Asanka Gamagedara
TI Using cognitive dimensions to evaluate the usability of security APIs:
   An empirical investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security API usability; Usability evaluation; Developer experience;
   Cognitive dimensions
AB Context Usability issues of security Application Programming Interfaces (APIs) are a main factor for mistakes programmers make that could result in introducing security vulnerabilities into applications they develop. This has become a common problem as there is no methodology to evaluate the usability of security APIs. A usability evaluation methodology for security APIs would allow API developers to identify usability issues of security APIs and fix them. A Cognitive Dimensions Framework (CDF) based usability evaluation methodology has been proposed in previous research to empirically evaluate the usability of security APIs.
   Objective: In this research, we evaluated the proposed CDF based methodology through four security APIs (Google Authentication API, Bouncy Castle light weight Crypto API, Java Secure Socket Extension API, OWASP Enterprise Security API).
   Method: We conducted four experiments where in each experiment we recruited programmers and they completed a programming task using one of the four security APIs. Participants' feedback on each cognitive dimension of the particular API was collected using the cognitive dimensions questionnaire. Usability issues of each API was identified based on this feedback.
   Results: Results of the four experiments revealed that over 83% of the usability issues in a security API could be identified by this methodology with a considerably good validity and reliability.
   Conclusion: The proposed CDF based usability evaluation methodology provides a good platform to conduct usability evaluation for security APIs.
C1 [Wijayarathna, Chamila; Arachchilage, Nalin Asanka Gamagedara] Univ New South Wales, Australian Def Force Acad, SEIT, POB 7916, Canberra Ba, ACT 2610, Australia.
   [Wijayarathna, Chamila] CSIRO, Data61, Melbourne, Vic 3008, Australia.
   [Arachchilage, Nalin Asanka Gamagedara] La Trobe Univ, Optus La Trobe Cyber Secur Res Hub, Bundoora, Vic 3086, Australia.
C3 Australian Defense Force Academy; University of New South Wales Sydney;
   Commonwealth Scientific & Industrial Research Organisation (CSIRO); La
   Trobe University
RP Wijayarathna, C (corresponding author), Univ New South Wales, Australian Def Force Acad, SEIT, POB 7916, Canberra Ba, ACT 2610, Australia.; Wijayarathna, C (corresponding author), CSIRO, Data61, Melbourne, Vic 3008, Australia.
EM z5122098@student.unsw.edu.au; n.arachchilage@latrobe.edu.au
RI Wijayarathna, Chamila/AAQ-3329-2020
OI Wijayarathna, Chamila/0000-0001-5332-5341
CR Acar Y., 2017, S US PRIV SEC SOUPS
   Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P3, DOI [10.1109/SecDev.2016.20, 10.1109/SecDev.2016.013]
   AlRoobaea R, 2014, 2014 SCIENCE AND INFORMATION CONFERENCE (SAI), P48, DOI 10.1109/SAI.2014.6918171
   [Anonymous], EVALUATION USABILITY
   [Anonymous], 2017, JSSE REFERENCE GUIDE
   [Anonymous], 2011, Thesis
   [Anonymous], 2016, Technical Report
   Aumasson J.-P., 2014, PASSWORD HASHING COM
   Babbie E.R., 1973, Survey research methods
   Baker T.L., 1988, DOING SOCIAL RES
   BASTIEN JMC, 1995, INT J HUM-COMPUT INT, V7, P105, DOI 10.1080/10447319509526114
   Blackwell Alan F, 2000, P 12 ANN WORKSH PSYC, V13
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Carbonnelle Pierre, 2019, PYPL POPULARITY PROG
   Clarke S, 2004, DR DOBBS J, V29, pS6
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Fahl Sascha, 2013, P ACM SIGSAC C COMP, P49
   Farooq U, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Folstad Asbjorn, 2012, Proceedings of the IADIS International Conference on e-society 2012, P257
   Freier A., 2011, TECHNICAL REPORT
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   Gerken J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3373
   GitHut, 2014, SMALL PLAC DISC LANG
   Gorski Peter, 2016, P 10 INT S HUM ASP I, P252
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   Grill Thomas, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P164, DOI 10.1007/978-3-642-34347-6_10
   Hartson HR, 2001, INT J HUM-COMPUT INT, V13, P373, DOI 10.1207/S15327590IJHC1304_03
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hertzum M, 2009, BEHAV INFORM TECHNOL, V28, P165, DOI 10.1080/01449290701773842
   Hornbaek K, 2010, BEHAV INFORM TECHNOL, V29, P97, DOI 10.1080/01449290801939400
   Iacono L.L., 2017, EUROUSEC 17, V17
   Lavery D, 1997, BEHAV INFORM TECHNOL, V16, P246, DOI 10.1080/014492997119824
   Meyer C, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P733
   Mindermann K, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P62, DOI [10.1109/CHASE.2016.021, 10.1145/2897586.2897610]
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   Nielsen J, 1990, Proceedings ACM CHI'90 Conf, DOI [DOI 10.1145/97243.97281, 10.1145/97243.97281]
   Oliveira DS, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P315
   Petrie H., 2012, P SIGCHI C HUMAN FAC, P2107, DOI DOI 10.1145/2207676.2208363
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Rashtian H., 2014, S USABLE PRIVACY SEC, P285
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Sears A, 1997, INT J HUM-COMPUT INT, V9, P213, DOI 10.1207/s15327590ijhc0903_2
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   StackOverflow, 2019, DEV SURV RES 2019
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Tukiainen M., 2001, P 13 ANN M PPIG, P291
   Van Someren MW, 1994, AcademicPress
   VIRZI RA, 1992, HUM FACTORS, V34, P457, DOI 10.1177/001872089203400407
   Wijayarathna C., 2018, WHY JOHNNY CANT STOR
   Wijayarathna C., 2019, P 52 HAW INT C SYST
   Wijayarathna C., 2018, COMPUT SECUR
   Wijayarathna C, 2018, INT CONF INF AUTOMAT
   Wijayarathna C, 2017, LECT NOTES COMPUT SC, V10292, P160, DOI 10.1007/978-3-319-58460-7_11
   Wurster G, 2009, NSPW'08: PROCEEDINGS OF THE 2008 NEW SECURITY PARADIGMS WORKSHOP, P89
NR 59
TC 10
Z9 11
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 5
EP 19
DI 10.1016/j.infsof.2019.07.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IX7GL
UT WOS:000485851700002
DA 2024-07-18
ER

PT J
AU Romano, S
   Capece, N
   Erra, U
   Scanniello, G
   Lanza, M
AF Romano, Simone
   Capece, Nicola
   Erra, Ugo
   Scanniello, Giuseppe
   Lanza, Michele
TI On the use of virtual reality in software visualization: The case of the
   city metaphor
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code city; Software visualization; Virtual reality; Experiment
ID MULTIPLE COMPARISONS; REPLICATIONS
AB Background: Researchers have been exploring 31) representations for visualizing software. Among these representations, one of the most popular is the city metaphor, which represents a target object-oriented system as a virtual city. Recently, this metaphor has been also implemented in interactive software visualization tools that use virtual reality in an immersive 3D environment medium.
   Aims: We assessed the city metaphor displayed on a standard computer screen and in an immersive virtual reality with respect to the support provided in the comprehension of Java software systems.
   Method: We conducted a controlled experiment where we asked the participants to fulfill program comprehension tasks with the support of (i) an integrated development environment (Eclipse) with a plugin for gathering code metrics and identifying bad smells; and (ii) a visualization tool of the city metaphor displayed on a standard computer screen and in an immersive virtual reality.
   Results: The use of the city metaphor displayed on a standard computer screen and in an immersive virtual reality significantly improved the correctness of the solutions to program comprehension tasks with respect to Eclipse. Moreover, when carrying out these tasks, the participants using the city metaphor displayed in an immersive virtual reality were significantly faster than those visualizing with the city metaphor on a standard computer screen.
   Conclusions: Virtual reality is a viable means for software visualization.
C1 [Romano, Simone] Univ Bari, Bari, Italy.
   [Capece, Nicola; Erra, Ugo; Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Lanza, Michele] Univ Svizzera Italiana USI, Software Inst, Lugano, Switzerland.
C3 Universita degli Studi di Bari Aldo Moro; University of Basilicata;
   Universita della Svizzera Italiana
RP Romano, S (corresponding author), Univ Bari, Bari, Italy.
EM simone.romano@uniba.it; nicola.capece@unibas.it; ugo.erra@unibas.it;
   giuseppe.scanniello@unibas.it; michele.lanza@usi.ch
RI Erra, Ugo/X-3889-2019; Capece, Nicola/U-1110-2019; Lanza,
   Michele/JNQ-9470-2023; Romano, Simone/ABD-6504-2020; Romano,
   Simone/JVZ-6529-2024
OI Erra, Ugo/0000-0003-2942-7131; Capece, Nicola/0000-0002-1544-3977;
   Lanza, Michele/0000-0003-4391-0197; Romano, Simone/0000-0003-4880-3622;
   Scanniello, Giuseppe/0000-0003-0024-7508
FU Swiss National Science Foundation (SNF NRP) [407540_167173]; Swiss
   National Science Foundation (SNF) [407540_167173] Funding Source: Swiss
   National Science Foundation (SNF)
FX Lanza gratefully acknowledges the financial support of the Swiss
   National Science Foundation for the project "Exploratory Visual
   Analytics for Interaction Graphs" (SNF NRP Project No. 407540_167173).
CR Abdi H., 2010, ENCY RES DESIGN, V169, P1
   Ahn T, 2007, INFORM MANAGE-AMSTER, V44, P263, DOI 10.1016/j.im.2006.12.008
   [Anonymous], 201005 U LUG
   Arsham H., BARTLETTS TEST, P87, DOI [10.1007/978-3-642-04898-2_132, DOI 10.1007/978-3-642-04898-2_132]
   Bacchelli A, 2011, ECLIPSE IT, P307
   Baldassarre M. T., 2014, EASE 2014, P18
   Balogh G, 2013, IEEE INT WORK C SO, P136, DOI 10.1109/SCAM.2013.6648194
   Bartlett MS, 1937, PROC R SOC LON SER-A, V160, P0268, DOI 10.1098/rspa.1937.0109
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Capece N, 2017, LECT NOTES COMPUT SC, V10325, P319, DOI 10.1007/978-3-319-60928-7_28
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Charters StuartM., 2002, SEKE '02, P765
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Erra U, 2015, IEEE INT CONF INF VI, P171, DOI 10.1109/iV.2015.39
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Knight C, 2000, IEEE INFOR VIS, P198, DOI 10.1109/IV.2000.859756
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Marcus Andrian, 2003, ACM S SOFTWARE VISUA, P27
   Merino L, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P54, DOI 10.1109/VISSOFT.2018.00014
   Merino L, 2017, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2017.70
   Merino L, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P11, DOI 10.1109/VISSOFT.2017.17
   Misiak M, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P112, DOI 10.1109/VISSOFT.2018.00020
   Misiak M, 2018, 25TH 2018 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES (VR), P637, DOI 10.1109/VR.2018.8446057
   Panas T, 2003, IEEE INFOR VIS, P314, DOI 10.1109/IV.2003.1217996
   Panas T, 2007, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2007.20
   Romano S, 2019, MULTIMED TOOLS APPL, V78, P33113, DOI 10.1007/s11042-019-07748-1
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Rüdel MO, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P21, DOI 10.1109/VISSOFT.2018.00011
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Souza R., 2012, P 2 BRAZ WORKSH SOFT, P17
   Teyseyre AR, 2009, IEEE T VIS COMPUT GR, V15, P87, DOI 10.1109/TVCG.2008.86
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Wettel R, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P155
   Wohlin C., 2012, Experimentation in Software Engineering
NR 50
TC 24
Z9 24
U1 2
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 92
EP 106
DI 10.1016/j.infsof.2019.06.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bogdanova, D
   Snoeck, M
AF Bogdanova, Dania
   Snoeck, Monique
TI CaMeLOT: An educational framework for conceptual data modelling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bloom's taxonomy; Conceptual data modelling; Educational framework;
   Software engineering education
ID BLOOMS TAXONOMY; DESIGN SCIENCE; QUALITY; NOVICES
AB Context Teaching conceptual data modelling (CDM) remains a challenging task for educators. Despite the fact that CDM is an integral part of software engineering curricula, there is no generally accepted educational framework for the subject. Moreover, the existing educational literature shows significant gaps when it comes to pursued learning outcomes and their assessment.
   Objective: In this paper, we propose an educational framework for conceptual data modelling, based on the revised Bloom's taxonomy of educational objectives, and provide necessary examples of systemized learning outcomes.
   Method: We utilized the revised Bloom's taxonomy to develop an adapted framework specifically for learning outcomes related to CDM. We validated the framework by mapping learning outcomes distilled from the existing course material to the framework, by presenting the framework for feedback to the experts in the field and further elaborating and refining it based on the feedback and experiences from these validation activities.
   Results: CaMeLOT is an adaptation of the Bloom's taxonomy specifically for learning outcomes related to CDM. We identified different content areas and indicated the necessary scaffolding. Based on the framework, we worked out 17 example tables of learning outcomes related to content areas at different levels of scaffolding, exemplifying the different knowledge and cognitive levels. We clarify the differences in learning outcomes related to different knowledge and cognitive levels and thereby provide a domain specific clarification of the classification guidelines.
   Conclusion: CaMeLOT gives educators an opportunity to enhance the CDM part of software engineering curricula with a systemized set of learning outcomes to be pursued, and open the path for creating more complete, useful and effective assessment packages. The adoption of our educational framework may reduce the time spent on designing educational material and, at the same time, improve its quality.
C1 [Bogdanova, Dania; Snoeck, Monique] Katholieke Univ Leuven, Res Ctr Management Informat, Naamsestr 69, B-3000 Leuven, Belgium.
C3 KU Leuven
RP Bogdanova, D (corresponding author), Katholieke Univ Leuven, Res Ctr Management Informat, Naamsestr 69, B-3000 Leuven, Belgium.
EM daria.bogdanova@kuleuven.be; monique.snoeck@kuleuven.be
RI Snoeck, Monique/H-7771-2018
OI Snoeck, Monique/0000-0002-3824-3214; Bogdanova,
   Daria/0000-0001-6481-4300
FU KU Leuven Research Council [C24/16/002]
FX This research is funded by grant C24/16/002 of the KU Leuven Research
   Council.
CR Adcock R., 2009, Curriculum Guidelines for Graduate Degree Programs in Software Engineering
   An B. S., 1971, HDB FORMATIVE SUMMAT
   [Anonymous], 2011, Fundamentals of Database Systems
   Ardis  M., 2014, COMPUT CURRIC SER, DOI [10.1093/bib/bbp050, DOI 10.1093/BIB/BBP050]
   Batra D, 1995, EUR J INFORM SYST, V4, P185, DOI 10.1057/ejis.1995.21
   Batra D, 1994, EUR J INFORM SYST, V3, P57, DOI 10.1057/ejis.1994.7
   Biggs J, 1996, HIGH EDUC, V32, P347, DOI 10.1007/BF00138871
   Blaha M., 1998, Object-Oriented Modeling and Design for Database Applications
   Bogdanova D., 2017, Domain Modelling in Bloom: Deciphering How We Teach It, P3, DOI [DOI 10.1007/978-3-319-70241-4_1, 10.1007/978-3-319-70241-4_1]
   Coplien  J., P TECHN OBJ OR LANG, P352, DOI [10.1109/TOOLS.1997.681881, DOI 10.1109/TOOLS.1997.681881]
   Cowling AJ, 2005, J SYST SOFTWARE, V75, P41, DOI 10.1016/j.jss.2004.02.021
   Cowling AJ, 1998, 11TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION, PROCEEDINGS, P44, DOI 10.1109/CSEE.1998.658297
   Crowe A, 2008, CBE-LIFE SCI EDUC, V7, P368, DOI 10.1187/cbe.08-05-0024
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dolog P, 2016, ACM T COMPUT EDUC, V16, DOI 10.1145/2845091
   Faulkner  S., 2016, BASES DE DONNEES
   Gorgone John T., 2006, ACM SIGCSE Bulletin, V38, P121, DOI DOI 10.1145/1138403.1138448
   Harden RM, 2002, MED TEACH, V24, P151, DOI 10.1080/0142159022020687
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jonassen DH, 1997, ETR&D-EDUC TECH RES, V45, P65, DOI 10.1007/BF02299613
   Kayama M, 2014, 2014 IIAI 3RD INTERNATIONAL CONFERENCE ON ADVANCED APPLIED INFORMATICS (IIAI-AAI 2014), P616, DOI 10.1109/IIAI-AAI.2014.131
   Kolp  M., UCL IAG ISYS UNITE S
   Krathwohl DR, 2002, THEOR PRACT, V41, P212, DOI 10.1207/s15430421tip4104_2
   Lee J, 2011, INFORM SOFTWARE TECH, V53, P51, DOI 10.1016/j.infsof.2010.08.005
   Leung Felix., 2005, P P 38 ANN HAWAII IN, V7, P188
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Moody D.L, 2003, ECIS 2003 P, P79
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Poelmans  S., DESIGN BUSINESS INFO
   Powell SG, 2007, J OPER RES SOC, V58, P983, DOI 10.1057/palgrave.jors.2602275
   Sedrakyan G, 2014, COMPUT HUM BEHAV, V41, P486, DOI 10.1016/j.chb.2014.09.054
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Snoeck  M., ARCHITECTURE MODELLI
   Snoeck  M., 2017, UML CLASS DIAGRAMS S
   Starr C.W., 2008, SIGCSE'08, P261, DOI [10.1145/1352135.1352227, DOI 10.1145/1352135.1352227]
   The Open University, MOD OBJ OR SOFTW INT
   Thompson AR, 2015, ANAT SCI EDUC, V8, P493, DOI 10.1002/ase.1507
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Van Merrienboer JJG, 2006, APPL COGNITIVE PSYCH, V20, P343, DOI 10.1002/acp.1250
   Venable J. R., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P50, DOI 10.1109/SEEP.1996.533980
   Widom  J., 2014, DB9 UNIFIED MODELLIN
   Zaidi NB, 2017, ANAT SCI EDUC, V10, P456, DOI 10.1002/ase.1685
   Zheng AY, 2008, SCIENCE, V319, P414, DOI 10.1126/science.1147852
NR 47
TC 17
Z9 17
U1 0
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 92
EP 107
DI 10.1016/j.infsof.2019.02.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HU1RI
UT WOS:000465049100007
DA 2024-07-18
ER

PT J
AU Sunitha, EV
   Samuel, P
AF Sunitha, E. V.
   Samuel, Philip
TI Object constraint language for code generation from activity models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code generation; UML; XML; OCL; Activity diagram
AB Context: Achieving hundred percent automation in code generation process from Unified Modeling Language (UML) models will make a drastic advancement in software industry. UML does not use a fully formalized semantics. So it leads to ambiguity during automatic implementation of UML models. These ambiguities can be avoided to a large extent using Object Constraint Language (OCL). OCL is formal and user friendly which is also familiar to industry people.
   Objective: This paper examines how to improve the code generation from UML models, with the help of Object Constraint Language. It also explores the possibilities to incorporate OCL in UML activity models and generate code from the OCL enhanced activity diagrams.
   Method: Meta models for the association of OCL expressions with the UML activity diagram is proposed in the paper. OCL expressions are added as part of the UML activity models to improve the code generation and to specify assertions and behavior. Moreover a tool, called ActivityOCLKode, is implemented which follows the algorithm for code generation. The algorithm is depicted in the text.
   Results: The tool which is implemented based on the proposed method gives a promising result. More than 80% of source code is generated using the tool. In addition, the average execution time for our approach is only 11.46 ms.
   Conclusion: The meta model proposed in the paper gives the strong theoretical back ground to attach OCL statements with each element in the UML activity diagrams. The proposed method of code generation will improve the productivity of the software industries, since it reduces the software development effort and time. Since UML and OCL are commonly used in software industry, our method is easily adaptable by software programmers in industry.
C1 [Sunitha, E. V.; Samuel, Philip] Cochin Univ Sci & Technol, Dept Comp Sci, Kochi 682022, Kerala, India.
C3 Cochin University Science & Technology
RP Sunitha, EV (corresponding author), Cochin Univ Sci & Technol, Dept Comp Sci, Kochi 682022, Kerala, India.
EM sunithaev@gmail.com; philips@cusat.ac.in
RI EV, Sunitha/ABA-1460-2021
OI EV, Sunitha/0000-0003-4447-3216
CR [Anonymous], 2 RTAS WORKSH MOD DR
   [Anonymous], INT C INT FORM METH
   [Anonymous], SYMB NUM ALG SCI COM
   [Anonymous], P IEEE INT C COMP RE
   [Anonymous], IEEE ELT 2007 P
   [Anonymous], ELECT NOTES THEOR CO
   [Anonymous], SEKE
   [Anonymous], GENERATING JAVA SKEL
   [Anonymous], USING FUML SEMANTICS
   [Anonymous], P 8 INT WORK OCL CON
   [Anonymous], 2003, MDA GUIDE VERSION 1
   [Anonymous], P 28 ANN ACM S APPL
   [Anonymous], P 7 WORKSH MOD RUN T
   [Anonymous], 201107 AIB RWTH AACH
   [Anonymous], P VERIFY WORKSH FED
   [Anonymous], 2014, Object Constraint Language 2.4.1.
   [Anonymous], MOD DRIV REQ ENG WOR
   [Anonymous], 13 IEEE INT S OBJ CO
   [Anonymous], ARXIV160402386
   [Anonymous], IEEE INT ADV COMP C
   [Anonymous], DIG INF MAN 2006 1 I
   [Anonymous], OBJECT ORIENTED SOFT
   [Anonymous], 5 E EUR ADBIS 2001 V
   [Anonymous], 2012 IEEE 15 INT S O
   [Anonymous], ACT LANG FOUNDATIONA
   [Anonymous], INT C UN MOD LANG
   [Anonymous], UPGRADE J
   [Anonymous], TECHNICAL REPORT
   [Anonymous], PRATICAL APPL OBJECT
   [Anonymous], 2 OOPSLA WORKSH GEN
   [Anonymous], EXECUTABLE UML FDN M
   [Anonymous], FORMAL METHODS MODEL
   [Anonymous], CODE GENERATION TEMP
   [Anonymous], P IEEE INT C SOFTW T
   [Anonymous], SOFTW ENG ADV APPL S
   [Anonymous], IFI1204 TU CLAUSTH
   [Anonymous], AUTOMATED CODE GENER
   [Anonymous], IEEE INT JOINT C COM
   [Anonymous], 2016 INT C INF TECHN
   [Anonymous], 14 AS PAC SOFTW ENG
   [Anonymous], P MODELS 05 C WORKSH
   [Anonymous], THESIS
   [Anonymous], INTRO OMGS MODEL DRI
   [Anonymous], VNU J SCI
   [Anonymous], SEM FDN SUBS EX UML
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Dang DH, 2010, J UNIVERS COMPUT SCI, V16, P2293
   Eshuis R., 2001, FORMAL SEMANTICS UML
   Govindaraju M, 2007, 2007 IEEE International Conference on Web Services, Proceedings, P1212
   Hamie A, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P288, DOI 10.1109/APSEC.1998.733731
   Hamie Ali, 2004, P 2004 ACM S APPL CO, P1531
   Harrison W, 2000, ACM SIGPLAN NOTICES, V35, P178, DOI 10.1145/354222.353184
   Jurack S, 2008, LECT NOTES COMPUT SC, V5301, P341, DOI 10.1007/978-3-540-87875-9_25
   Koehler J, 2005, IBM SYST J, V44, P47, DOI 10.1147/sj.441.0047
   Lano K, 2009, SOFTW SYST MODEL, V8, P85, DOI 10.1007/s10270-007-0064-x
   Moreira Tomas G., 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P1085, DOI 10.1109/INDIN.2010.5549590
   Ngolah C. F., 2004, Canadian Conference on Electrical and Computer Engineering 2004 (IEEE Cat. No.04CH37513), P1533, DOI 10.1109/CCECE.2004.1349698
   Pandey R., 2011, ACM SIGSOFT Soft Eng Notes, V36, P1, DOI [10.1145/1921532.1921543, DOI 10.1145/1921532.1921543]
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rudahl KT, 2008, ECTI-CON 2008: PROCEEDINGS OF THE 2008 5TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING/ELECTRONICS, COMPUTER, TELECOMMUNICATIONS AND INFORMATION TECHNOLOGY, VOLS 1 AND 2, P181, DOI 10.1109/ECTICON.2008.4600402
   Samuel Philip, 2009, International Journal of Recent Trends in Engineering, V1, P206
   Schattkowsky T, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P117, DOI 10.1109/VLHCC.2005.64
   Sunil E, 2016, The influence of traffic structure on airspace capacity, P1
   Thongmak M, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P485, DOI 10.1109/APSEC.2002.1183052
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
   Warmer Jos B, 1998, ADDISON WESLEY OBJEC
NR 66
TC 6
Z9 6
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 92
EP 111
DI 10.1016/j.infsof.2018.06.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000006
DA 2024-07-18
ER

PT J
AU Trinkenreich, B
   Santos, G
   Barcellos, MP
AF Trinkenreich, Bianca
   Santos, Gleison
   Barcellos, Monalessa Perini
TI SINIS: A GQM plus Strategies-based approach for identifying goals,
   strategies and indicators for IT services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: Measurement is a key process to support organizations in managing and improving processes, products and services. The literature on IT (Information Technology) Service states that IT services should support critical business processes and should be measured in order to provide useful information for decision-making. However, there is a lack of clear guidance regarding what should be measured and which critical business processes should be considered.
   Objective: We conducted this work aiming to answer the research question: How to support identification of IT service goals, strategies and indicators at different organizational levels and aligned to business goals?
   Method: We defined SINIS, a method to identify Goals, Strategies and Indicators for IT Services, which has been developed to support IT service departments in identifying IT service goals, strategies and indicators to provide information for decision-making at different organizational levels and in alignment with business goals. SINIS supports defining strategies to achieve IT service goals, and identifying indicators to evaluate the strategies and goals achievement. SINIS is based on process improvement approaches (mainly GQM + Strategies) and approaches related to IT service management (mainly COBIT Goals Cascade) Results: SINIS was used in a case study in the IT Infrastructure and IT Security departments of a large global company.
   Results: showed that participants were able to build the GQM + Strategies Grid and discard useless indicators. In addition, team members became more devoted to measurement and strategies, and better understood relations between goals, strategies and indicators. Templates, examples and checklists useful to learn how to execute SINIS and to properly record the produced results were used by the study participants.
   Conclusions: Initial evidences show that SINIS supports building the GQM + Strategies Grid and helps IT service departments to define strategies and identify useful indicators, contributing to focus efforts on strategies aligned to IT service and business goals.
C1 [Trinkenreich, Bianca; Santos, Gleison] Fed Univ State Rio De Janeiro UNIRIO, Grad Program Comp Sci, Dept Appl Informat, Rio De Janeiro, Brazil.
   [Barcellos, Monalessa Perini] Fed Univ Espirito Santo UFES, Comp Sci Dept, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro; Universidade Federal
   do Espirito Santo
RP Trinkenreich, B (corresponding author), Fed Univ State Rio De Janeiro UNIRIO, Grad Program Comp Sci, Dept Appl Informat, Rio De Janeiro, Brazil.
EM bianca.trinkenreich@uniriotec.br; gleison.santos@uniriotec.br;
   monalessa@inf.ufes.br
RI Barcellos, Monalessa/JFJ-4331-2023; Santos, Gleison/AAD-5299-2022;
   Trinkenreich, Bianca/ABE-4435-2020
OI Barcellos, Monalessa/0000-0002-6225-9478; Santos,
   Gleison/0000-0003-0279-0440; 
FU CAPES; FAPERJ [E-26/010.000883/2016, E-26/010.001644/2016,
   E-211.174/2016]; CNPq [461777/2014-2]; UNIRIO [PQ-UNIRIO 01/2016,
   01/2017]
FX The authors wish to thank CAPES, FAPERJ (Projects E-26/010.000883/2016 e
   E-26/010.001644/2016, E-211.174/2016), CNPq (Process 461777/2014-2) and
   UNIRIO (Project PQ-UNIRIO 01/2016 and 01/2017) for their financial
   support.
CR Abdi Mohammed, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1473, DOI 10.1109/ITSIM.2010.5561624
   [Anonymous], 200001 ISOIEC
   Asghari N., 2012, THESIS, P54
   Barcellos MP, 2012, IEEE INT ENTERP, P114, DOI 10.1109/EDOCW.2012.24
   Barcellos MP, 2010, FRONT ARTIF INTEL AP, V209, P213, DOI 10.3233/978-1-60750-535-8-213
   Barcellos MP, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P467, DOI 10.1109/QUATIC.2010.84
   Barcellos MP, 2010, IEEE INT ENTERP, P253, DOI 10.1109/EDOCW.2010.15
   Bartens Y, 2015, P ANN HICSS, P4554, DOI 10.1109/HICSS.2015.543
   Bartens Y, 2014, P ANN HICSS, P4356, DOI 10.1109/HICSS.2014.538
   Basili V, 2014, FRAUNHOFER IESE SER, P1, DOI 10.1007/978-3-319-05047-8
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Basili V, 2013, LECT NOTES COMPUT SC, V7983, P184, DOI 10.1007/978-3-642-39259-7_16
   Cases M., 2010, INTRO SERVICE ENG, P109
   Drucker P. F., 1954, PRACTICE MANAGE, P368
   Dumas M, 2013, QUALITATIVE PROCESS, P185, DOI DOI 10.1007/978-3-642-33143-5_6
   Eckerson W., 2011, PERFORMANCE DASHBOAR
   Engelmann K., 2008, Services Science, P119, DOI DOI 10.1007/978-3-540-74489-4_12
   Florae W. A., 1997, CMUSEI97HB003
   Forrester E.C., 2010, CMMI For Services: Guidelines For Superior Services
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Guzmán JG, 2010, SOFTWARE QUAL J, V18, P341, DOI 10.1007/s11219-010-9094-7
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Hrgovcic V., 2011, 35 IEEE ANN COMP SOF, DOI [10.1109/COMPSACW.2011.77, DOI 10.1109/COMPSACW.2011.77]
   Huxley C., 2003, THESIS
   ISACA, 2012, COBIT 5 CONTR OBJ MA
   Jantti M., 2010, INT J ADV SYST MEASU, V3
   Kaneko T., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P221, DOI 10.1109/IWSM-MENSURA.2011.22
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   Kowalczyk M., 2011, 8 SOFTW MEAS EUR FOR, P45
   Lepmets M., 2011, 2011 Annual SRII Global Conference (SRII), P767, DOI 10.1109/SRII.2011.84
   LEPMETS M, 2014, GLOBAL J FLEXIBLE SY, V15, P39, DOI DOI 10.1007/S40171-013-0052-7
   López G, 2016, LECT NOTES COMPUT SC, V10027, P311, DOI 10.1007/978-3-319-49094-6_20
   López G, 2016, LECT NOTES COMPUT SC, V10027, P198, DOI 10.1007/978-3-319-49094-6_13
   Maglio PP, 2009, INF SYST E-BUS MANAG, V7, P395, DOI 10.1007/s10257-008-0105-1
   McGarry John., 2002, Practical Software Measurement: Objective Information for Decision Makers
   Munch Jurgen, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P70, DOI 10.1109/SEAA.2013.62
   OGCa, 2011, ITIL SERV OP
   PARASURAMAN A, 1985, J MARKETING, V49, P41, DOI 10.2307/1251430
   Parmenter D., 2015, KEY PERFORMANCE INDI, P448
   Petersen K, 2015, EMPIR SOFTW ENG, V20, P968, DOI 10.1007/s10664-014-9306-z
   Robitaille D., 2004, ROOT CAUSE ANAL BASI, P104
   Runeson P., 2012, SOFTWARE ENG GUIDELI
   Steinberg R., 2013, MEASURING ITSM MEASU, P196
   Steuperaert Dirk, 2016, International Journal of IT/Business Alignment and Governance, V7, P49, DOI 10.4018/IJITBAG.2016070104
   Tien JM, 2006, J SYST SCI SYST ENG, V15, P257, DOI 10.1007/s11518-006-5019-1
   Trinkenreich Bianca, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P330
   Trinkenreich B., 2017, 0032007 DIAUNIRIO
   Trinkenreich B., 2014, 10 ANN MPS PROGR WOR
   Trinkenreich B., 2015, 14 BRAZ S SOFTW QUAL
   Trinkenreich B, 2017, INT SYMP EMP SOFTWAR, P374, DOI 10.1109/ESEM.2017.51
   Trinkenreich B, 2015, LECT NOTES COMPUT SC, V9459, P68, DOI 10.1007/978-3-319-26844-6_6
   Trinkenreich Bianca, 2015, P 17 INT C ENT INF S, V1, P395, DOI [10.5220/0005398003950403, DOI 10.5220/0005398003950403]
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
NR 55
TC 7
Z9 7
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 147
EP 164
DI 10.1016/j.infsof.2018.04.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100010
DA 2024-07-18
ER

PT J
AU Agrawal, A
   Fu, W
   Menzies, T
AF Agrawal, Amritanshu
   Fu, Wei
   Menzies, Tim
TI What is wrong with topic modeling? And how to fix it using search-based
   software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Topic modeling; Stability; LDA; Tuning; Differential evolution
ID DIFFERENTIAL EVOLUTION; SCATTER SEARCH; CLASSIFICATION
AB Context: Topic modeling finds human-readable structures in unstructured textual data. A widely used topic modeling technique is Latent Dirichlet allocation. When running on different datasets, LDA suffers from "order effects", i.e., different topics are generated if the order of training data is shuffled. Such order effects introduce a systematic error for any study. This error can relate to misleading results; specifically, inaccurate topic descriptions and a reduction in the efficacy of text mining classification results.
   Objective: To provide a method in which distributions generated by LDA are more stable and can be used for further analysis.
   Method: We use LDADE, a search-based software engineering tool which uses Differential Evolution (DE) to tune the LDA's parameters. LDADE is evaluated on data from a programmer information exchange site (Stackoverfiow), title and abstract text of thousands of Software Engineering (SE) papers, and software defect reports from NASA. Results were collected across different implementations of LDA (Python + Scikit-Learn, Scala + Spark) across Linux platform and for different kinds of LDAs (VEM, Gibbs sampling). Results were scored via topic stability and text mining classification accuracy.
   Results: In all treatments: (i) standard LDA exhibits very large topic instability; (ii) LDADE's tunings dramatically reduce cluster instability; (iii) LDADE also leads to improved performances for supervised as well as unsupervised learning.
   Conclusion: Due to topic instability, using standard LDA with its "off-the-shelf" settings should now be depreciated. Also, in future, we should require SE papers that use LDA to test and (if needed) mitigate LDA topic instability. Finally, LDADE is a candidate technology for effectively and efficiently reducing that instability.
C1 [Agrawal, Amritanshu; Fu, Wei; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Agrawal, A (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM amritbhanu@gmail.com; wfu@ncsu.edu
RI Menzies, Tim/X-7680-2019; Agrawal, Amritanshu/R-7093-2019; Fu,
   Wei/AAN-6829-2021; Fu, Wei/AAF-7120-2019
OI Menzies, Tim/0000-0002-5040-3196; Agrawal,
   Amritanshu/0000-0002-1220-8533; 
FU NSF [1506586]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1506586] Funding Source:
   National Science Foundation
FX The work is partially funded by NSF award #1506586.
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   [Anonymous], 2009, UAI 09, DOI DOI 10.1080/10807030390248483
   [Anonymous], 2006, P 29 ANN INT ACM SIG, DOI DOI 10.1145/1148170.1148204
   [Anonymous], 2000, J ED BEHAV STAT
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2017, ARXIV170300133
   [Anonymous], 2002, Proceedings of the Eighteenth Conference on Uncertainty in Artificial Intelligence. UAI'02
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beausoleil RP, 2006, EUR J OPER RES, V169, P426, DOI 10.1016/j.ejor.2004.08.008
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen T.-H., 2016, J SYST SOFTW
   Chiha I, 2012, APPL COMPUT INTELL S, V2012, DOI 10.1155/2012/536326
   Das S, 2011, IEEE T EVOLUT COMPUT, V15, P4, DOI 10.1109/TEVC.2010.2059031
   Efron B, 1994, INTRO BOOTSTRAP, DOI DOI 10.1201/9780429246593
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Feldman R., 2006, TEXT MINING HDB
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   GENNARI JH, 1989, ARTIF INTELL, V40, P11, DOI 10.1016/0004-3702(89)90046-5
   GLOVER F, 1986, COMPUT OPER RES, V13, P563, DOI 10.1016/0305-0548(86)90050-X
   Goldberg A. T., 1979, THESIS
   Grant S, 2013, SCI COMPUT PROGRAM, V78, P1663, DOI 10.1016/j.scico.2013.03.015
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P243, DOI 10.1109/ICSM.2012.6405278
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Koltsov S., 2014, P 2014 ACM C WEB SCI, P161, DOI DOI 10.1145/2615569.2615680
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Krishna R, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P65, DOI [10.1109/BIGDSE.2016.019, 10.1145/2896825.2896836]
   Lau J. H., 2014, P 14 C EUR CHAPT ASS, P530, DOI [DOI 10.3115/V1/E14-1056, 10.3115/v1/E14-1056]
   Layman L., 2016, COMMUNICATION
   Layman L, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P303, DOI 10.1145/2901739.2901760
   Le TDB, 2014, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE.2014.39
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Mathew G, 2017, PROC IEEE ACM INT C, P397, DOI 10.1109/ICSE-C.2017.52
   Meng X., 2016, J. Mach. Learn. Res., V17, P1, DOI DOI 10.1145/2882903.2912565
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T., 2008, IMPROVING 4 5 TECHNI
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Molina J, 2007, INFORMS J COMPUT, V19, P91, DOI 10.1287/ijoc.1050.0149
   Nadkarni A., 2014, IDC IND DEV MODELS
   Nebro AJ, 2008, IEEE T EVOLUT COMPUT, V12, P439, DOI 10.1109/TEVC.2007.913109
   Nikolenko S. I., 2015, J INF SCI
   O'Callaghan D, 2015, EXPERT SYST APPL, V42, P5645, DOI 10.1016/j.eswa.2015.02.055
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Omran MGH, 2005, IEEE C EVOL COMPUTAT, P966
   Pan H., 2008, COMP SCI SOFTW ENG 2, V1, P78
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Porter M.F., 1980, The Porter Stemming Algorithm
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Vasilescu B, 2014, SCI COMPUT PROGRAM, V89, P251, DOI 10.1016/j.scico.2014.01.016
   Vasilescu B, 2013, IEEE WORK CONF MIN S, P373, DOI 10.1109/MSR.2013.6624051
   Vesterstrom J, 2004, IEEE C EVOL COMPUTAT, P1980
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang Yue, 2015, Contributions to Smart Metering: Protocol Design and Data Analytics
   Zhao Y, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/s12859-015-0558-4
   Zuluaga M., 2013, INT C MACH LEARN, V28, P462
NR 86
TC 105
Z9 122
U1 2
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 74
EP 88
DI 10.1016/j.infsof.2018.02.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200006
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Magdich, A
   Kacem, YH
   Kerboeuf, M
   Mahfoudhi, A
   Abid, M
AF Magdich, Amina
   Kacem, Yessine Hadj
   Kerboeuf, Mickael
   Mahfoudhi, Adel
   Abid, Mohamed
TI A design pattern-based approach for automatic choice of semi-partitioned
   and global scheduling algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automatic scheduling; Semi-partitioned scheduling; Global scheduling;
   UML/MARTE; MDE; Design pattern; Detection algorithm; Similarity scoring
ID SUBGRAPH ISOMORPHISM
AB Context Because of the evergrowing complexity of Real-Time Embedded Systems (RTES) coupled with the variety of scheduling approaches and algorithms, the scheduling step has become more challenging mainly for new designers. In particular, the choice of the appropriate scheduling algorithm for a RTES is a hard step that requires vast knowledge and expertise of the scheduling field. Therefore, there is still a need for directives and guidelines to assist designers while choosing the appropriate scheduling algorithm to avoid system failures. In this respect, some approaches were proposed to deal with automatic scheduling. However, only the partitioned scheduling approach which prevents task migration was supported.
   Objective: Our work aims at supporting the automatic choice of scheduling approach and algorithm at a highlevel of abstraction. A key feature of this proposal is that it supports semi-partitioned and global scheduling, which allow task migration.
   Method: With the above objective in mind, we propose a model-based approach which focuses on the use of the Model Driven Engineering (MDE) and design patterns to support the automatic scheduling at a high-level of abstraction. The proposed approach uses two design patterns previously published (Magdich et al., 2014, 2015) to model the semi-partitioned and global scheduling approaches. They allow checking the correctness of the studied system model and detecting automatically the appropriate scheduling approach and algorithm. A schedulability analysis step is, therefore, performed to check the temporal behavior of the studied system once the selected scheduling algorithm is applied.
   Results: The findings reveal the important impact of the use of high-level methodologies during the RTES scheduling. The automatic choice of the scheduling algorithm makes the scheduling step easier.
   Conclusions: Our proposal represents the first attempt to support the automatic scheduling regarding semi partitioned and global scheduling. Thanks to the use of high-level techniques during the RTES design and scheduling, the designer's effort is reduced.
C1 [Magdich, Amina] Princess Nourah Bint Abdulrahman Univ, Coll Community, Riyadh, Saudi Arabia.
   [Kacem, Yessine Hadj] King Khalid Univ Abha, Coll Comp Sci, Abha, Saudi Arabia.
   [Kerboeuf, Mickael] Brest Univ, Lab STICC, MOCS Team, Brest, France.
   [Mahfoudhi, Adel; Abid, Mohamed] Sfax Univ, CES Lab, ENIS, Sfax, Tunisia.
C3 Princess Nourah bint Abdulrahman University; King Khalid University;
   Universite de Bretagne Occidentale; Universite de Sfax; Ecole Nationale
   dIngenieurs de Sfax (ENIS)
RP Magdich, A (corresponding author), Princess Nourah Bint Abdulrahman Univ, Coll Community, Riyadh, Saudi Arabia.
EM amina.magdich@ceslab.org
RI Hadj kacem, Yessine/C-8874-2016
OI Hadj kacem, Yessine/0000-0002-5757-6516; Magdich,
   Amina/0000-0003-4854-1482; , Yessine Hadj Kacem/0000-0001-8256-3808
CR [Anonymous], 2007, Int. Arab J. Inf. Technol.
   [Anonymous], 2015, INDIAN J SCI TECHNOL
   [Anonymous], THESIS
   Arcelli F, 2004, INTELLIGENT AND ADAPTIVE SYSTEMS AND SOFTWARE ENGINEERING, P290
   Baruah S. K., 2006, P 20 INT PAR DISTR P
   Bletsas K, 2011, REAL-TIME SYST, V47, P319, DOI 10.1007/s11241-011-9114-0
   Cheramy M., 2014, P WATERS, P6
   CPN Group, 2015, CPN TOOLS
   Demathieu S., 2008, THALES REPORT TECHNI
   Diaz-Ramirez A., 2012, 2012 22nd International Conference on Electrical Communications and Computers (CONIELECOMP 2012), P157, DOI 10.1109/CONIELECOMP.2012.6189901
   Donn F., 2010, 18 INT C REAL TIM NE, P207
   Du C, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P92
   Espinoza H., 2006, P MARTES WORKSH MODE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gaudel V., 2013, P 3 EMB OP SYST WORK
   Gaudel V, 2011, SIGADA 2011: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P61, DOI 10.1145/2070336.2070359
   George aurent, 1996, RR2966 INRIA
   Gomaa H., 2001, Software Engineering Notes, V26, P69, DOI 10.1145/379377.375252
   Hagner M., 2008, P WORKSH MOD AN REAL
   Harbour MG, 2001, EUROMICRO, P125, DOI 10.1109/EMRTS.2001.934015
   JEFFAY K, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P129, DOI 10.1109/REAL.1991.160366
   Kacem Yessine Hadj, 2012, P IEEE 19 INT C WORK, P316
   Kato S, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P23, DOI 10.1109/RTAS.2009.9
   Konrad S, 2004, IEEE T SOFTWARE ENG, V30, P970, DOI 10.1109/TSE.2004.102
   LEUNG JYT, 1982, PERFORM EVALUATION, V2, P237, DOI 10.1016/0166-5316(82)90024-4
   Li S., 2012, ACM SIGADA ADA LETT, V32, P81
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Magdich A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P371, DOI 10.1109/ISSRE.2012.2
   Magdich A., 2014, P 23 INT C EN TECHN
   Magdich A, 2013, STUDIES COMPUTATIONA, P73
   Magdich A., 2015, LECT NOTES BUSINESS, V214, P447
   Medina J. L., 2011, 2 WORKSH MOD BAS ENG
   Messmer BT, 2000, IEEE T KNOWL DATA EN, V12, P307, DOI 10.1109/69.842269
   Olteanu Alexandra, 2010, Proceedings of the 2010 IEEE 6th International Conference on Intelligent Computer Communication and Processing (ICCP 2010), P435, DOI 10.1109/ICCP.2010.5606400
   OMG, 2008, UML PROF MART MOD AN
   Paul P. V., 2004, SIAM REV, V46, P647
   Rubini S., 2013, EWILI WORKSH
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Singhoff F., 2004, Ada Letters, V24, P1
   Starke R. A., 2012, 2012 Second Brazilian Conference on Critical Embedded Systems (CBSEC 2012), P70, DOI 10.1109/CBSEC.2012.9
   Thanikesavan S, 2004, WFCS 2004: IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS, PROCEEDINGS, P307
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Urunuela R., 2010, Emerging Technologies and Factory Automation (ETFA), P1
   Zamfirache F., 2011, P INT C KNOWL ENG PR
NR 45
TC 6
Z9 8
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 83
EP 98
DI 10.1016/j.infsof.2018.01.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600007
DA 2024-07-18
ER

PT J
AU Zhang, PC
   Jin, HY
   He, ZP
   Leung, HT
   Song, W
   Jiang, Y
AF Zhang, Pengcheng
   Jin, Huiying
   He, Zhipeng
   Leung, Hareton
   Song, Wei
   Jiang, Yan
TI IgS-wBSRM: A time-aware Web Service QoS monitoring approach in dynamic
   environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality of Service; Time-aware; Information gain; Sliding window;
   Dynamic monitoring
AB Context: Quality of Service(QoS) is an important criterion to measure the quality of third-party web services. However, it is always affected by different environmental factors. Consequently, how to monitor web service QoS timely and accurately in dynamic environments is an important problem.
   Objective: Our article aims to design a novel Web service QoS monitoring approach which can be used in dynamic environments.
   Method: To achieve the above objective, we propose a novel weighted naive Bayesian runtime monitoring approach based on information gain theory and sliding window mechanism, called IgS-wBSRM. IgS-wBSRM initializes the weights of different environmental factors according to training samples collected. Then, according to information entropy and information gain theory, IgS-wBSRM reads the sample data flow in sequence, and calculates the information gain of each environmental impact factor after the arrival of new sample. It updates the initialized weights with TF-IDF algorithm in dynamic environments. In this way, IgS-wBSRM can correct the delay judgement, jitter noise and off-line constant problems in traditional monitoring approaches. Furthermore, considering the timeliness of the training samples, IgS-wBSRM combines a sliding window mechanism to update the weights-of each environmental impact factor, and it can eliminate the impact of the recent service state in the accumulated historical data.
   Results: A set of dedicated experiments based on a real world data set and a simulated data set demonstrates that IgS-wBSRM can abandon the expiration information of historical data effectively, and can monitor QoS more accurately.
   Conclusions: The overall effect of IgS-wBSRM is better than other QoS monitoring approaches. We suggest directions for follow-up work, e.g., exploring the influence of the size of the sliding window, considering multiple QoS attributes combined with data integration theory and applying IgS-wBSRM in other QoS areas.
C1 [Zhang, Pengcheng; Jin, Huiying; He, Zhipeng; Jiang, Yan] Hohai Univ, Coll Comp & Informat, Nanjing 211100, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   [Song, Wei] Nanjing Univ Sci & Technol, Sch Comp Sci & Technol, Nanjing 210094, Jiangsu, Peoples R China.
C3 Hohai University; Hong Kong Polytechnic University; Nanjing University
   of Science & Technology
RP Zhang, PC (corresponding author), Hohai Univ, Coll Comp & Informat, Nanjing 211100, Jiangsu, Peoples R China.
EM pchzhang@hhu.edu.cn; hareton.leung@polyu.edu.hk; wsong@njustedu.cn
FU National Natural Science Foundation of China [61572171, 61702159];
   Natural Science Foundation of Jiangsu Province [BK20171427, BK20170893];
   Fundamental Research Funds for the Central Universities [B15020191]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61572171, Grant 61702159, by the Natural
   Science Foundation of Jiangsu Province under Grant BK20171427, Grant
   BK20170893, and by the Fundamental Research Funds for the Central
   Universities under Grant B15020191.
CR Adinolfi O, 2012, 8TH INTERNATIONAL CONFERENCE ON SIGNAL IMAGE TECHNOLOGY & INTERNET BASED SYSTEMS (SITIS 2012), P527, DOI 10.1109/SITIS.2012.82
   [Anonymous], INTRO WALD 1945 SEQU
   [Anonymous], 2011, 2011 INT C
   [Anonymous], THEORY TIMED AUTOMAT
   [Anonymous], EFFECTIVE QOS MONITO
   [Anonymous], ACM SIGS INT S FDN S
   [Anonymous], QOS MONITORING CLOUD
   [Anonymous], BOOTSTRAPPING PERFOR
   [Anonymous], STAT RUNTIME CHECKIN
   [Anonymous], 2013, 2013 IEEE 3 INT C CO
   [Anonymous], 2003, SIGECOM EXCH
   Baresi L, 2005, LECT NOTES COMPUT SC, V3826, P269
   Chan K, 2005, LECT NOTES COMPUT SC, V3712, P38
   Cicotti G, 2015, INT J COMPUT SCI ENG, V11, P29, DOI 10.1504/IJCSE.2015.071359
   Ellis R., 1997, SLA RES LANGUAGE TEA
   FIELD DA, 1988, COMMUN APPL NUMER M, V4, P709, DOI 10.1002/cnm.1630040603
   Grunske L, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P183, DOI 10.1145/1595696.1595724
   Grunske L, 2011, INFORM SOFTWARE TECH, V53, P190, DOI 10.1016/j.infsof.2010.10.003
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Gunter D, 2002, 11TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P163, DOI 10.1109/HPDC.2002.1029915
   Halevy Alon, 2006, Proceedings of the 32nd international conference on Very large data bases (2006), P9
   Huang AFM, 2009, INFORM SCIENCES, V179, P3309, DOI 10.1016/j.ins.2009.05.018
   Jing Li, 2010, 2010 IEEE Symposium on Computers and Communications (ISCC), P687, DOI 10.1109/ISCC.2010.5546721
   Karimi M. B., 2016, J SUPERCOMPUT, P1
   KHEILOVA M, 1994, CZECH J PHYS, V44, P729, DOI 10.1007/BF01700639
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Michlmayr Anton., 2009, MWSOC 09 P 4 INT WOR, P1, DOI DOI 10.1145/1657755.1657756
   Ren Duan, 2011, Proceedings of the 2011 IEEE International Conference on Internet of Things and 4th IEEE International Conference on Cyber, Physical and Social Computing (iThings/CPSCom 2011), P717, DOI 10.1109/iThings/CPSCom.2011.125
   Roelleke T, 2008, P 31 ANN INT ACM SIG, P435, DOI [DOI 10.1145/1390334.1390409, 10.1145/1390334.1390409]
   Romano L., 2011, 2011 First International Conference on Data Compression, Communications and Processing, P45, DOI 10.1109/CCP.2011.49
   Sammapun U, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P147, DOI 10.1109/RTCSA.2005.84
   Shao LS, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P439
   Wang Guo-Yin, 2002, Chinese Journal of Computers, V25, P759
   Wang Shang-Guang, 2011, Journal of Software, V22, P1426, DOI 10.3724/SP.J.1001.2011.03842
   Wang XY, 2015, IEEE T SERV COMPUT, V8, P630, DOI 10.1109/TSC.2014.2320271
   Xia JC, 2006, P INT COMP SOFTW APP, P359
   Zeng L, 2007, LECT NOTES COMPUT SC, V4749, P132
   Zhang PC, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P145, DOI 10.1109/ICWS.2015.29
   Zhang PC, 2011, SOFTWARE PRACT EXPER, V41, P841, DOI 10.1002/spe.1038
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
   Zhang YL, 2011, SYM REL DIST SYST, P1, DOI 10.1109/SRDS.2011.10
   Zheng Z, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL CONFERENCE ON APPLICATION OF MATHEMATICS AND PHYSICS, VOL 2, P89
   Zheng ZB, 2011, IEEE T SERV COMPUT, V4, P140, DOI 10.1109/TSC.2010.52
   Zhou X, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P25, DOI 10.1109/SCC.2015.14
   Zhu YL, 2013, INT CONF QUAL SOFTW, P45, DOI 10.1109/QSIC.2013.55
NR 46
TC 11
Z9 13
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 14
EP 26
DI 10.1016/j.infsof.2017.11.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200002
DA 2024-07-18
ER

PT J
AU Lee, E
   Kim, YG
   Seo, YD
   Seol, K
   Baik, DK
AF Lee, Euijong
   Kim, Young-Gab
   Seo, Young-Duk
   Seol, Kwangsoo
   Baik, Doo-Kwon
TI RINGA: Design and verification of finite state machine for self-adaptive
   software at runtime
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-adaptive software; Model checking; Finite state machine; Runtime
ID QUANTITATIVE VERIFICATION; ADAPTATION
AB Context In recent years, software environments such as the cloud and Internet of Things (IoT) have become increasingly sophisticated, and as a result, development of adaptable software has become very important. Self adaptive software is appropriate for today's needs because it changes its behavior or structure in response to a changing environment at runtime. To adapt to changing environments, runtime verification is an important requirement, and research that integrates traditional verification with self-adaptive software is in high demand.
   Objective: Model checking is an effective static verification method for software, but existing problems at runtime remain unresolved. In this paper, we propose a self-adaptive software framework that applies model checking to software to enable verification at runtime.
   Method: The proposed framework consists of two parts: the design of self-adaptive software using a finite state machine and the adaptation of the software during runtime. For the first part, we propose two finite state machines for self-adaptive software called the self-adaptive finite state machine(SA-FSM) and abstracted finite state machine (A-FSM). For the runtime verification part, a self-adaptation process based on a MAPE (monitoring, analyzing, planning, and executing) loop is implemented.
   Results: We performed an empirical evaluation with several model-checking tools(i.e., NuSMV and CadenceSMV), and the results show that the proposed method is more efficient at runtime. We also investigated a simple example application in six scenarios related to the IoT environment. We implemented Android and Arduino applications, and the results show the practical usability of the proposed self-adaptive framework at runtime.
   Conclusions: We proposed a framework for integrating model checking with a self-adaptive software lifecycle. The results of our experiments showed that the proposed framework can achieve verify self-adaptation software at runtime.
C1 [Lee, Euijong; Seo, Young-Duk; Seol, Kwangsoo; Baik, Doo-Kwon] Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
   [Kim, Young-Gab] Sejong Univ, Dept Comp & Informat Secur, Seoul, South Korea.
C3 Korea University; Sejong University
RP Lee, E; Seo, YD; Seol, K; Baik, DK (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.; Kim, YG (corresponding author), Sejong Univ, Dept Comp & Informat Secur, Seoul, South Korea.
EM kongjjagae@korea.ac.kr; alwaysgabi@sejong.ac.kr; seoyoungd@korea.ac.kr;
   seolks@korea.ac.kr; baikdk@korea.ac.kr
RI Kim, Young-Gab/AIE-4008-2022
OI Kim, Young-Gab/0000-0001-9585-8808; Lee, Euijong/0000-0002-7308-7392
FU Next-Generation Information Computing Development Program through
   National Research Foundation of Korea (NRF) - Ministry of Science, ICT &
   Future Planning [2012M3C4A7033346]; Institute for Information &
   communications Technology Promotion (IITP) grant - Korea government
   (MSIP) [2016-0-00498]
FX This research was supported by the Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by the Ministry of Science, ICT & Future Planning
   (2012M3C4A7033346). This work also partially was supported by Institute
   for Information & communications Technology Promotion (IITP) grant
   funded by the Korea government (MSIP) (No. 2016-0-00498, User behavior
   pattern analysis based authentication and anomaly detection within the
   system using deep learning techniques)
CR A. Computing, 2006, ARCH BLU AUT COMP
   Abeywickrama DB, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P33, DOI 10.1109/ECBS.2012.30
   [Anonymous], 2007, INTRO AUTOMATA THEOR
   [Anonymous], 2017, INTEL DATA CTR SOLUT
   [Anonymous], NUSMV NEW SYMB MOD C
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barna C, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P83, DOI 10.1109/SEAMS.2015.26
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Camara Javier, 2012, 7 INT S SOFTW ENG AD, P53, DOI [DOI 10.1109/SEAMS.2012.6224391, 10.1109/SEAMS.2012.6224391, 10.1109/seams.2012.6224391]
   Cavada R., 2004, ITC IRST VIA SOMMARI, V18, P38055
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   de Lemos Rogerio, 2013, Software Engineering for Self-Adaptive Systems: A Second Research Roadmap, P1, DOI [10.1007/978- 3- 642-35813-5_1, DOI 10.1007/978-3-642-35813-5_1]
   DIppolito N. R, 2010, P INT S FOUND SOFW E, P77
   Filieri A., 2013, ASSURANCES SELF ADAP, P30
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Johnson Kenneth, 2013, P 16 INT ACM SIGSOFT, P33, DOI DOI 10.1145/2465449.2465456
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Muller Hausi A., 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P32, DOI 10.1007/978-3-540-95888-8_2
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Tallabaci G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P93, DOI 10.1109/SEAMS.2013.6595496
   Tesei L., 2013, EUROPEAN C COMPLEX S
   Wang YQ, 2009, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2009.66
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Wuttke J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P27, DOI 10.1109/SEAMS.2012.6224388
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
NR 32
TC 19
Z9 19
U1 1
U2 18
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 200
EP 222
DI 10.1016/j.infsof.2017.09.008
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200013
DA 2024-07-18
ER

PT J
AU Yan, M
   Zhang, XH
   Liu, C
   Xu, L
   Yang, MN
   Yang, D
AF Yan, Meng
   Zhang, Xiaohong
   Liu, Chao
   Xu, Ling
   Yang, Mengning
   Yang, Dan
TI Automated change-prone class prediction on unlabeled dataset using
   unsupervised method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Change-prone prediction; Unlabeled dataset;
   Unsupervised prediction
ID OBJECT-ORIENTED SOFTWARE; OPEN-SOURCE PRODUCTS; MAINTAINABILITY;
   METRICS; CODE; PROJECT; MODELS; SUITE
AB Context: Software change-prone class prediction can enhance software decision making activities during software maintenance (e.g., resource allocating). Researchers have proposed many change-prone class prediction approaches and most are effective on labeled datasets (projects with historical labeled data). These approaches usually build a supervised model by learning from historical labeled data. However, a major challenge is that this typical change-prone prediction setting cannot be used for unlabeled datasets (e.g., new projects or projects with limited historical data). Although the cross-project prediction is a solution on unlabeled dataset, it needs the prior labeled data from other projects and how to select the appropriate training project is a difficult task.
   Objective: We aim to build a change-prone class prediction model on unlabeled datasets without the need of prior labeled data.
   Method: We propose to tackle this task by adopting a state-of-art unsupervised method, namely CLAMI. In addition, we propose a novel unsupervised approach CLAMI+ by extending CLAMI. The key idea is to enable change-prone class prediction on unlabeled dataset by learning from itself.
   Results: The experiments among 14 open source projects show that the unsupervised methods achieve comparable results to the typical supervised within-project and cross-project prediction baselines in average and the proposed CLAMI+ slightly improves the CLAMI method in average.
   Conclusion: Our method discovers that it is effective for building change-prone class prediction model by using unsupervised method. It is convenient for practical usage in industry, since it does not need prior labeled data. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Zhang, Xiaohong] Minist Educ, Key Lab Dependable Serv Comp Cyber Phys Soc, Chongqing 400044, Peoples R China.
   [Yan, Meng; Zhang, Xiaohong; Liu, Chao; Xu, Ling; Yang, Mengning; Yang, Dan] Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
C3 Chongqing University
RP Zhang, XH (corresponding author), Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
EM xhongz@cqu.edu.cn
RI Zhang, Xiaohong/A-3060-2015; Yan, Meng/AAH-6762-2019; Liu,
   Chao/JXN-7672-2024; YANG, Dan/HHD-2733-2022
OI Liu, Chao/0000-0002-8283-9146; Yan, Meng/0000-0002-9538-9121
FU National Natural Science Foundation of China [61402062, 61602068];
   Fundamental Research Funds for the Central Universities of China
   [106112017CDJXY090001]; Chongqing Research Program of Basic Science &
   Frontier Technology [cstc2017jcyjB0305]
FX The work described in this paper was partially supported by the National
   Natural Science Foundation of China (Grant no. 61402062 and 61602068),
   the Fundamental Research Funds for the Central Universities of China
   (Grant No. 106112017CDJXY090001) and Chongqing Research Program of Basic
   Science & Frontier Technology (No. cstc2017jcyjB0305).
CR Amoui M, 2009, INT J SOFTW ENG KNOW, V19, P995, DOI 10.1142/S0218194009004489
   [Anonymous], PROC INT CONF SOFTW
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Elish MO, 2009, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2009.57
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Godara D., 2014, INT J COMPUTER SCI T, V5, P1
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2011, EMPIR SOFTW ENG, V16, P812, DOI 10.1007/s10664-011-9162-z
   Hongmin Lu, 2012, Empirical Software Engineering, V17, P200, DOI 10.1007/s10664-011-9170-z
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Malhotra R., 2016, AUTOMAT SOFTW ENG, P1
   Malhotra R, 2015, ADV COMPUTER SCI INF, V2, P30
   Malhotra R, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P228, DOI 10.1109/ICACCI.2015.7275614
   Malhotra R, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P201, DOI 10.1109/ICACCI.2014.6968347
   Malhotra R, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P635, DOI 10.1109/HPCSim.2014.6903747
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Posnett D, 2011, EMPIR SOFTW ENG, V16, P396, DOI 10.1007/s10664-010-9148-2
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Yan M., 2016, P 28 INT C SOFTW ENG
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   YANG YB, 2016, P 2016 24 ACM SIGSOF, P157
   Zhong S, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P149
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 46
TC 18
Z9 19
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 1
EP 16
DI 10.1016/j.infsof.2017.07.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200001
DA 2024-07-18
ER

PT J
AU Zhao, YY
   Leung, HT
   Yang, YB
   Zhou, YM
   Xu, BW
AF Zhao, Yangyang
   Leung, Hareton
   Yang, Yibiao
   Zhou, Yuming
   Xu, Baowen
TI Towards an understanding of change types in bug fixing code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Change; Bug fixing code; Empirical study; Understanding; Software
   quality
AB Context: As developing high quality software becomes increasingly challenging because of the explosive growth of scale and complexity, bugs become inevitable in software systems. The knowledge of bugs will naturally guide software development and hence improve software quality. As changes in bug fixing code provide essential insights into the original bugs, analyzing change types is an intuitive and effective way to understand the characteristics of bugs.
   Objective: In this work, we conduct a thorough empirical study to investigate the characteristics of change types in bug fixing code.
   Method: We first propose a new change classification scheme with 5 change types and 9 change subtypes. We then develop an automatic classification tool CTforC to categorize changes. To gain deeper insights into change types, we perform our empirical study based on three questions from three perspectives, i.e. across project, across domain and across version.
   Results: Based on 17 versions of 11 systems with thousands of faulty functions, we find that: (1) across project: the frequencies of change subtypes are significantly similar across most studied projects; interface related code changes are the most frequent bug-fixing changes (74.6% on average); most of faulty functions (65.2% on average) in studied projects are finally fixed by only one or two change subtypes; function call statements are likely to be changed together with assignment statements or branch statements; (2) across domain: the frequencies of change subtypes share similar trends across studied domains; changes on function call, assignment, and branch statements are often the three most frequent changes in studied domains; and (3) across version: change subtypes occur with similar frequencies across studied versions, and the most common subtype pairs tend to be same.
   Conclusion: Our experimental results improve the understanding of changes in bug fixing code and hence the understanding of the characteristics of bugs. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Zhao, Yangyang; Yang, Yibiao; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Nanjing University; Hong Kong Polytechnic University
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM cs.zhou.yuming@gmail.com
RI Xu, Baowen/IXW-4882-2023; Yang, Yibiao/ABP-4159-2022; zhao,
   yang/HTN-4320-2023; zhao, yang/GXF-4424-2022
OI Xu, Baowen/0000-0001-7743-1296; Yang, Yibiao/0000-0003-1153-2013; 
FU National Natural Science Foundation of China [61272082, 61432001,
   91418202]; National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of Jiangsu Province
   [BK20130014]
FX The work in this paper is supported by the National Natural Science
   Foundation of China (61272082, 61432001, 91418202), the National Key
   Basic Research and Development Program of China (2014CB340702), and the
   National Natural Science Foundation of Jiangsu Province (BK20130014).
CR [Anonymous], ASPL 16 16 INT C
   Arshad FA, 2013, PROC INT SYMP SOFTW, P198, DOI 10.1109/ISSRE.2013.6698919
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Brunel J, 2009, ACM SIGPLAN NOTICES, V44, P114, DOI 10.1145/1594834.1480897
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   CHAWATHE SS, 1996, ACM SIGMOD RECORD, V25, P493
   Chawla I, 2015, P 8 IND SOFTW ENG C, DOI DOI 10.1145/2723742.2723751
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cohen H., 2015, HDB CATEGORIZATION C
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Demillo R.A., 1995, SERCTR165P PURD U
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Falessi D, 2008, COMM COM INF SC, V10, P136
   Falessi D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P512, DOI 10.1145/2591062.2591122
   Felderer M, 2014, EUROMICRO CONF PROC, P377, DOI 10.1109/SEAA.2014.37
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Hayes JH, 2011, SOFTW TEST VERIF REL, V21, P299, DOI 10.1002/stvr.426
   Hayes JH, 2005, LECT NOTES COMPUT SC, V3463, P415
   Henningsson K, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P95
   ISDW Group, 2010, 10442009 IEEE ISDW G
   Kidwell B, 2014, INT CONF QUAL SOFTW, P202, DOI 10.1109/QSIC.2014.10
   Lawall Julia, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P191, DOI 10.1109/EDCC.2010.31
   Lawall JL, 2013, SOFTWARE PRACT EXPER, V43, P67, DOI 10.1002/spe.2102
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   LiGuo Huang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P412, DOI 10.1109/ASE.2011.6100086
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Marick B., 1990, SURVEY SOFTWARE FAUL
   Michael I.R.C., 2004, THESIS
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nagwani N.Kumar., 2012, Journal of Software Engineering and Applications, V5, P436
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Palix N., 2010, P 9 WORKSH ASP COMP, P9
   Palix N, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P43, DOI 10.1109/SANER.2015.7081814
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pearson K., 1894, Philosophical Transactions, V185a, P71, DOI 10.1098/rsta.1894.0003
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Vetro Antonio, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P187, DOI 10.1049/ic.2012.0025
   Xia X, 2014, IEEE INT C ENG COMP, P39, DOI 10.1109/ICECCS.2014.14
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
   Zhu X., 2012, INT J OPEN SOURCE SO, V4, P16
   Zhu XY, 2015, SOFTWARE PRACT EXPER, V45, P1479, DOI 10.1002/spe.2298
NR 46
TC 15
Z9 19
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 37
EP 53
DI 10.1016/j.infsof.2017.02.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9DB
UT WOS:000399855200003
DA 2024-07-18
ER

PT J
AU Bao, T
   Liu, SF
AF Bao, Tie
   Liu, Shufen
TI Quality evaluation and analysis for domain software: Application to
   management information system of power plant
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Domain software; Evaluation model; Level model;
   Evidence metrics
ID MODEL; SIMULATION; STANDARDS
AB Context: Domain software plays an important role in the management of many enterprises; therefore, its quality is critical to these enterprises and impacts its selection, maintenance, and service quality evaluation to a great extent. Consequently, how to evaluate the quality of domain software has become an area that deserves more research. The existing research pays much attention to software for specific purposes and fields, or to specific stage of the software, which is not enough.
   Objective: This paper proposes a systematic quality evaluation method, which fully considers the generality, domain features, and application environment of domain software, and also supports subsequent analysis.
   Method: The quality evaluation method proposed in this paper defines all aspects of the domain software to be inspected by establishing an attribute model, obtains basic data on evaluation by analyzing and measuring evidence, tailor-makes the computing logic of quality evaluation score by establishing an evaluation model, and classifies domain software quality by establishing level model. This research verifies the applicability of evaluation by applying this method to management information system (MIS) in the field of a power plant.
   Results: The case example not only indicates that the proposed method can be applied to the quality evaluation and analysis of the power plant's MIS, but also its ease of usability.
   Conclusion: The method is applicable and can be easily used for the quality evaluation and analysis of the MIS in a power plant. Based on mechanisms, such as model customization and weight determination, this method also supports the quality evaluation and analysis of software applied in different fields. In the future, there will be a need to improve the objectivity and automation degree of the evaluation, and to apply and verify the method according to the different types of software in various fields. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Bao, Tie; Liu, Shufen] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
C3 Jilin University
RP Bao, T (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
EM apche@126.com
FU National Natural Science Foundation of China [61472160]; National Key
   Technology Research and Development Program of China [2014BAH29F03];
   Jilin Province Science and Technology Development Program
   [20140204072GX]
FX This work was supported by the National Natural Science Foundation of
   China (Grant No. 61472160), the National Key Technology Research and
   Development Program of China (Grant No. 2014BAH29F03), and the Jilin
   Province Science and Technology Development Program (Grant No.
   20140204072GX).
CR [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   Aversano L, 2013, INFORM SOFTWARE TECH, V55, P1260, DOI 10.1016/j.infsof.2013.01.007
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bao T, 2011, CHINESE J ELECTRON, V20, P195
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Bogado V, 2014, SIMUL-T SOC MOD SIM, V90, P290, DOI 10.1177/0037549713518586
   Chiam YK, 2013, INFORM SOFTWARE TECH, V55, P1419, DOI 10.1016/j.infsof.2013.02.001
   Darmawan N, 2010, J COMPUT INFORM SYST, V50, P139
   Díaz-Ley M, 2010, ADV ENG SOFTW, V41, P1223, DOI 10.1016/j.advengsoft.2010.06.007
   Dubielewicz I, 2010, PRZ ELEKTROTECHNICZN, V86, P230
   International Organization for Standardization, 2012, 25021 ISOIEC
   International Organization for Standardization, 2008, 12207 ISO
   International Organization for Standardization, 2003, 9126 ISO 2, P2003
   International Organization for Standardization, 2008, 25010 ISOIEC
   Kannabiran G, 2011, INFORM SOFTWARE TECH, V53, P1199, DOI 10.1016/j.infsof.2011.05.001
   Karg LM, 2011, J SYST SOFTWARE, V84, P415, DOI 10.1016/j.jss.2010.11.904
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lee YC, 2014, INFORM SYST MANAGE, V31, P2, DOI 10.1080/10580530.2013.854020
   Lewis BR, 2005, EUR J INFORM SYST, V14, P388, DOI 10.1057/palgrave.ejis.3000552
   Li KW, 2014, APPL MATH INFORM SCI, V8, P793, DOI 10.12785/amis/080240
   Li KW, 2012, INFORMATION-TOKYO, V15, P3957
   Li QX, 2014, J INTELL FUZZY SYST, V26, P1687, DOI 10.3233/IFS-130848
   Lin LL, 2008, INT J INNOV COMPUT I, V4, P2639
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   Menolli A, 2013, INT J SOFTW ENG KNOW, V23, P1153, DOI 10.1142/S0218194013500356
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Ran S. H., 1994, IBM SYST J, V33, P4
   Rincon G, 2005, INFORM MANAGE-AMSTER, V42, P1051, DOI 10.1016/j.im.2004.04.007
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   Sarrab M, 2014, ADV ENG SOFTW, V69, P1, DOI 10.1016/j.advengsoft.2013.12.001
   Soycan M, 2012, ARAB J SCI ENG, V37, P147, DOI 10.1007/s13369-011-0162-5
   Svensson RB, 2013, INFORM SOFTWARE TECH, V55, P1224, DOI 10.1016/j.infsof.2013.01.006
   Villalba MT, 2010, INT J SOFTW ENG KNOW, V20, P27, DOI 10.1142/S0218194010004633
   Toshihiro K, 2008, NEC TECH J, V3, P27
   Trudel S, 2006, SOFTWARE QUAL J, V14, P7, DOI 10.1007/s11219-006-5997-8
   Walterbusch M, 2015, INT J INF TECH DECIS, V14, P253, DOI 10.1142/S0219622015500054
NR 36
TC 4
Z9 6
U1 2
U2 46
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 53
EP 65
DI 10.1016/j.infsof.2016.05.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR0YZ
UT WOS:000379634100003
DA 2024-07-18
ER

PT J
AU Teruel, MA
   Navarro, E
   González, P
   López-Jaquero, V
   Montero, F
AF Teruel, Miguel A.
   Navarro, Elena
   Gonzalez, Pascual
   Lopez-Jaquero, Victor
   Montero, Francisco
TI Applying thematic analysis to define an awareness interpretation for
   collaborative computer games
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Awareness; Collaborative computer games; Gamespace awareness; Thematic
   synthesis; Game development; Empirical evaluation
ID REQUIREMENTS; CSCW; SUPPORT; REALITY; TOOL
AB Context: Collaborative computer games have evolved from single-player to massively multiplayer awareness-demanding games, usually involving collaboration to achieve team goals. As a consequence of such evolution, these players should be provided with awareness information that enables them to perform collaborative tasks with other team members.
   Objective: The objective of this work is the analysis of current awareness interpretations in order to develop an awareness interpretation that collects the awareness needs of such games.
   Method: This analysis has been conducted by means of a step-by-step Thematic Analysis of current interpretations that led us to extract the most relevant awareness elements defined in existing interpretations. The developed awareness interpretation was empirically evaluated by means of several surveys aimed at assessing whether the implementation of the interpretation elements in a game would improve the players enjoyment.
   Results: The Thematic Synthesis Analysis concluded that none of the current awareness interpretations can deal properly with collaborative computer games, specifically due to collaboration and social & group dynamics. This Thematic Synthesis Analysis led us to coin Gamespace Awareness, a new awareness interpretation based on a combination of the previously analyzed awareness interpretations, which is suitable for collaborative computer games. The interpretation was positively evaluated for two games, namely a first person shooter and a real-time strategy game.
   Conclusions: Gamespace Awareness combines the potential awareness elements needed for collaborative computer games, making it possible to identify the awareness requirements of these games from the very beginning. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Teruel, Miguel A.; Navarro, Elena; Gonzalez, Pascual; Lopez-Jaquero, Victor; Montero, Francisco] Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacetey 02071, Spain.
C3 Universidad de Castilla-La Mancha
RP Teruel, MA (corresponding author), Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacetey 02071, Spain.
EM miguel@dsi.uclm.es; elena.navarro@uclm.es; pgonzalez@dsi.uclm.es;
   victor@dsi.uclm.es; fmontero@dsi.uclm.es
RI González, Pascual/E-3693-2016; montero, francisco/U-4830-2019; Navarro,
   Elena/I-7452-2013; Martínez, Miguel Ángel Teruel/AAD-2356-2020;
   López-Jaquero, Víctor/AAE-2232-2022
OI González, Pascual/0000-0003-3549-5712; montero,
   francisco/0000-0002-0902-9681; Navarro, Elena/0000-0001-9496-6890;
   Martínez, Miguel Ángel Teruel/0000-0003-0102-6918; 
FU Spanish Ministry of Economy and Competitiveness; FEDER funds from the EU
   under the Grant insPIre Project [TIN2012-34003]; Spanish Ministry of
   Education, Culture and Sport [AP2010-0259]
FX This work is funded by the Spanish Ministry of Economy and
   Competitiveness and by FEDER funds from the EU under the Grant insPIre
   Project (TIN2012-34003). It has also been funded by the Spanish Ministry
   of Education, Culture and Sport thanks to an FPU scholarship
   (AP2010-0259).
CR Ackerman MS, 2000, HUM-COMPUT INTERACT, V15, P179, DOI 10.1207/S15327051HCI1523_5
   [Anonymous], 2006, LIKERT TYPE SCALE RE
   [Anonymous], 2006, PATTERNS GAME DESIGN
   [Anonymous], WORLD OF WARCR
   [Anonymous], TOP 10 BEST SELL VID
   [Anonymous], 2014, Essential Facts about the Computer and Video Game Industry
   [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], MICR VIS 2013
   [Anonymous], BORD PRES
   [Anonymous], 2009, STRATEGIE BADANIA JA
   [Anonymous], BUS PROD GAMES
   [Anonymous], AG EMP ONL
   [Anonymous], MASTERING UNREAL TEC
   [Anonymous], P 7 AN U SOUTH MULT
   [Anonymous], OGAME
   [Anonymous], PAN EUR GAM INF
   [Anonymous], P DIG GAM RES C DIGR
   [Anonymous], COMPUTER GAME DEV PR
   [Anonymous], ADV WARS BY WEB
   [Anonymous], 14 FORMS FN
   [Anonymous], 2013, PERSPECTIVES FUTURE
   [Anonymous], P DIG GAM RES C DIGR
   [Anonymous], P DIG GAM RES C DIGR
   [Anonymous], FIR TRUCK
   [Anonymous], YB VID GAM IND
   [Anonymous], P CSCW 98 HANDH CSCW
   [Anonymous], P DIG GAM RES C DIGR
   [Anonymous], P 6 INT C METH TECHN
   [Anonymous], 2004, Theory of Fun for Game Design
   [Anonymous], 2003, Rules of Play: Game Design Fundamental
   [Anonymous], DIAB15021 U CAST LA
   [Anonymous], 2004, P AAAI WORKSH CHALL
   [Anonymous], GUIDELINES DEV SUCCE
   [Anonymous], DIABL 3
   [Anonymous], P IEEE INT C SYST MA
   [Anonymous], 2015, ART GAME DESIGN BOOK
   Antunes P, 2014, J SYST SOFTWARE, V89, P146, DOI 10.1016/j.jss.2013.11.1078
   Babar MA, 2006, J SYST SOFTWARE, V79, P912, DOI 10.1016/j.jss.2005.06.043
   Baldwin A., 2014, P EXTENDED ABSTRACTS, P1489
   Begole JB, 2007, HUM-COMPUT INTERACT, V22, P7
   Bernhaupt R, 2010, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84882-963-3_1
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brewer J, 2008, INT J HUM-COMPUT ST, V66, P963, DOI 10.1016/j.ijhcs.2008.03.003
   Brown B., 2004, Computer Supported Cooperative Work Conference Proceedings, P350, DOI 10.1145/1031607.1031666
   Carroll JM, 2006, INTERACT COMPUT, V18, P21, DOI 10.1016/j.intcom.2005.05.005
   Carroll JM, 2003, INT J HUM-COMPUT ST, V58, P605, DOI 10.1016/S1071-5819(03)00024-7
   Carter J., 2010, P 2010 ACM C COMPUTE, DOI [10.1145/1718918.1718958, DOI 10.1145/1718918.1718958]
   Cheok AD, 2002, PERS UBIQUIT COMPUT, V6, P430, DOI 10.1007/s007790200047
   Collazos C. A., 2002, Proceedings of the IASTED International Conference Information and Knowledge Sharing, P13
   Convertino G, 2005, THIRD INTERNATIONAL CONFERENCE ON COORDINATED & MULTIPLE VIEWS IN EXPLORATORY VISUALIZATION, PROCEEDINGS, P121
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Daneva M, 2014, J SYST SOFTWARE, V95, P1, DOI 10.1016/j.jss.2014.06.035
   Dennis AR, 2008, MIS QUART, V32, P575
   Despain Wendy., 2013, 100 Principles of Game Design
   Desurvire H, 2009, LECT NOTES COMPUT SC, V5621, P557, DOI 10.1007/978-3-642-02774-1_60
   Dix A., 2000, ACM Transactions on Computer-Human Interaction, V7, P285, DOI 10.1145/355324.355325
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Dourish Paul, 2006, P ACM C COMP SUPP CO, P299, DOI DOI 10.1145/1180875.1180921
   Ducheneaut Nicolas, 2007, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V16, P129, DOI 10.1007/s10606-007-9041-8
   Endslay Mica., 2004, COGNITIVE APPROACH S, VFirst, P317
   Endsley M. R., 2011, DESIGNING SITUATION, V2nd
   ENDSLEY MR, 1995, HUM FACTORS, V37, P32, DOI 10.1518/001872095779049543
   Garcia A. S., 2008, 7 ACM SIGGRAPH INT C, P1, DOI [https://doi.org/10.1145/1477862.1477904, DOI 10.1145/1477862.1477904]
   Gough D., 2017, INTRO SYSTEMATIC REV
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1998, CHI 98. Human Factors in Computing Systems. CHI 98 Conference Proceedings, P511, DOI 10.1145/274644.274713
   Gutwin C., 1999, ACM Transactions on Computer-Human Interaction, V6, P243, DOI 10.1145/329693.329696
   Gutwin C., 1996, P CHI C HUMAN FACTOR, P210
   Harrison Steve R, 1996, P 1996 ACM C COMP SU, V96, P67, DOI [DOI 10.1145/240080.240193, 10.1145/240080.240193]
   Jelassi MN, 2014, J SYST SOFTWARE, V94, P30, DOI 10.1016/j.jss.2013.06.061
   Jin DalYong., 2010, KOREAS ONLINE GAMING
   Johansen R., 1991, LEADING BUSINESS TEA
   Kim MK, 2007, LECT NOTES COMPUT SC, V4402, P609
   Lombard M., 2006, J. Comput. Mediat. Commun, V3, P72, DOI [DOI 10.1111/J.1083-6101.1997.TB00072.X, https://doi.org/10.1111/j.1083-6101.1997.tb00072.x]
   Martínez J, 2014, INT J HUM-COMPUT INT, V30, P855, DOI 10.1080/10447318.2014.941272
   Moore Robert J., 2007, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V16, P265, DOI 10.1007/s10606-006-9021-4
   Neyem Andrés, 2007, Ingeniare. Rev. chil. ing., V15, P227
   Nova N, 2007, MULTIMED TOOLS APPL, V32, P161, DOI 10.1007/s11042-006-0065-8
   O'Donovan C, 2012, PHYSIOTHERAPY, V98, P224, DOI 10.1016/j.physio.2012.05.010
   Oculus, 2020, OCULUS RIFT
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pedersen E.R., 1997, P SIGCHI C HUMAN FAC, P51, DOI DOI 10.1145/258549.258584
   Pinelle D, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1453
   Prinz W, 2010, COMPUT SUPP COOP WOR, P3, DOI 10.1007/978-1-84882-965-7_1
   Rahman Noorihan Abdul, 2013, Lecture Notes on Software Engineering, V1, P106, DOI 10.7763/LNSE.2013.V1.24
   RODDEN T, 1991, PROCEEDINGS OF THE SECOND EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK : ECSCW 91, P49
   Rodden T., 1996, Proceedings of the 1996 ACM Conference on Computer Supported Cooperative Work, P87
   Rollings a., 2003, Game Architecture and Design
   Santos Bruno, 2013, Advances in Computer Entertainment. 10th International Conference, ACE 2013. Proceedings: LNCS 8253, P380, DOI 10.1007/978-3-319-03161-3_28
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   SCHWARZER R, 1995, MEASURES HLTH PSYCHO, P35, DOI DOI 10.1037/T00393-000
   Snilstveit B, 2012, J DEV EFFECT, V4, P409, DOI 10.1080/19439342.2012.710641
   Steinmacher I, 2010, LECT NOTES COMPUT SC, V6257, P185, DOI 10.1007/978-3-642-15714-1_15
   Stohl C., 2002, New directions in group communication, P237
   Tam J, 2006, INT J HUM-COMPUT ST, V64, P583, DOI 10.1016/j.ijhcs.2006.02.004
   Teruel MA, 2014, INFORM SOFTWARE TECH, V56, P922, DOI 10.1016/j.infsof.2014.02.009
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Teruel MA, 2011, LECT NOTES COMPUT SC, V6998, P33, DOI 10.1007/978-3-642-24606-7_4
   Thomas J, 2008, BMC MED RES METHODOL, V8, DOI 10.1186/1471-2288-8-45
   Tollmar Konrad, 1996, P 1996 ACM C COMP SU, P298
   Whitson J., 2008, P 2008 C FUTUREPLAY, P220, DOI DOI 10.1145/1496984.1497028
   Winters B, 2010, MUSIC LETT, V91, P224, DOI 10.1093/ml/gcq019
   Witmer BG, 1998, PRESENCE-TELEOP VIRT, V7, P225, DOI 10.1162/105474698565686
   Wohlin C., 2012, Experimentation in Software Engineering
NR 107
TC 22
Z9 53
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 17
EP 44
DI 10.1016/j.infsof.2016.01.009
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DJ7BX
UT WOS:000374368000002
DA 2024-07-18
ER

PT J
AU Langdon, WB
   Dolado, J
   Sarro, F
   Harman, M
AF Langdon, William B.
   Dolado, Javier
   Sarro, Federica
   Harman, Mark
TI Exact Mean Absolute Error of Baseline Predictor, MARP<sub>0</sub>
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Prediction systems; Empirical validation;
   Randomisation techniques; Search based software engineering
AB Shepperd and MacDonell "Evaluating prediction systems in software project estimation. Information and Software Technology 54 (8), 820-827, 2012, proposed an improved measure of the effectiveness of predictors based on comparing them with random guessing. They suggest estimating the performance of random guessing using a Monte Carlo scheme which unfortunately excludes some correct guesses. This biases their MARpo to be slightly too big, which in turn causes their standardised accuracy measure SA to over estimate slightly. In commonly used software engineering datasets it is practical to calculate an unbiased MARN exactly. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Langdon, William B.; Dolado, Javier; Sarro, Federica; Harman, Mark] UCL, Dept Comp Sci, CREST, Gower St, London WC1E 6BT, England.
C3 University of London; University College London
RP Langdon, WB (corresponding author), UCL, Dept Comp Sci, CREST, Gower St, London WC1E 6BT, England.
EM w.langdon@cs.ucl.ac.uk
RI Dolado, Jose Javier/I-5402-2015
OI Dolado, Jose Javier/0000-0002-3301-5650; Sarro,
   Federica/0000-0002-9146-442X
FU EPSRC [EP/M025853/1] Funding Source: UKRI
CR Menzies T., 2015, The promise repository of empirical software engineering data
   Shepperd M., 2005, P 11 IEEE INT SOFTW, P10, DOI DOI 10.1109/METRICS.2005.5
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
NR 3
TC 58
Z9 59
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 16
EP 18
DI 10.1016/j.infsof.2016.01.003
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400002
DA 2024-07-18
ER

PT J
AU Tahir, T
   Rasool, G
   Gencel, C
AF Tahir, Touseef
   Rasool, Ghulam
   Gencel, Cigdem
TI A systematic literature review on software measurement programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software measurement; Software measurement program; Software metrics;
   GQM; Systematic Literature Review
ID GQM-BASED MEASUREMENT; AUTOMATED SUPPORT; PROJECT SUCCESS; METRICS;
   DEFINITION; TOOL
AB Context: Software measurement programs (MPs) are an important means for understanding, evaluating, managing, and improving software processes, products and resources. However, implementing successful MPs still remains a challenge.
   Objectives: To make a comprehensive review of the studies on MPs for bringing into light the existing measurement planning models and tools used for implementing MPs,the accumulated knowledge on the success/failure factors of MPs and mitigation strategies to address their challenges.
   Methods: A Systematic Literature Review (SLR) was conducted. In total, 65primary studies were reviewed and analyzed.
   Results: We identified 35 measurement planning models and 11 associated tools, most of which either proposed extensions or improvements for goal based approaches. The identified success factors include (a) organizational adoption of MP, (b) integration of MP with SDLC, (c) synchronization of MP with SPI and (d) design of MP. The mostly mentioned mitigation strategies for addressing challenges are effective change management and measurement stakeholder management, automated tool support and incorporation of engineering mechanisms for designing sustainable, effective, scalable and extendible MPs, and measurement expertise and standards development.
   Conclusion: Most of the success factors and mitigation strategies have interdependencies. Therefore, for successful MP implementation, software organizations should consider these factors in combination and make a feasibility study at the very beginning. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Tahir, Touseef; Rasool, Ghulam] COMSATS Inst Informat Technol, Dept Comp Sci, Lahore, Pakistan.
   [Gencel, Cigdem] DEISER, Madrid, Spain.
C3 COMSATS University Islamabad (CUI)
RP Rasool, G (corresponding author), COMSATS Inst Informat Technol, Dept Comp Sci, Lahore, Pakistan.
EM grasool@ciitlahore.edu.pk
RI Gencel, Cigdem/H-8630-2019
OI Gencel, Cigdem/0000-0003-0115-8902; , Touseef Tahir/0009-0005-7792-6412
FU ICEBERG Project (EU FP7-PEOPLE-IAPP)
FX This study is supported by the ICEBERG Project (EU
   FP7-PEOPLE-2012-IAPP).
CR Abib J. C., 1999, Software Engineering Notes, V24, P75, DOI 10.1145/329155.329167
   [Anonymous], 2001, 91262 ISOIEC
   [Anonymous], 1996, GOAL DRIVEN SOFTWARE
   [Anonymous], CMUSEI2001TN026
   [Anonymous], APPROACH CLASSIFY SO
   [Anonymous], P 7 INT SOFTW METR S
   [Anonymous], 2002, CMUSEI2002TR011 CMMI
   [Anonymous], CMUSEI2006TR009
   [Anonymous], 2007, EBSE200701 KEEL U DE
   [Anonymous], 2002, P 12 INT WORKSHOP SO
   [Anonymous], 2001, 91263 ISOIEC
   [Anonymous], 2004, ISOIEC91264
   Ardimento P, 2004, LECT NOTES COMPUT SC, V3009, P159
   Auer M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P144, DOI 10.1109/METRIC.2003.1232463
   Baldassarre MT, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P89, DOI 10.1109/ISESE.2003.1237968
   Basili V. R., 2010, IEEE COMPUT, V43, P7
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Berander P., 2006, INT S EMPIRICAL SOFT, P316
   Berry M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P314, DOI 10.1109/METRIC.2004.1357917
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   Berry M, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P222, DOI 10.1109/METRIC.2001.915531
   Bhatti AM, 2009, COMM COM INF SC, V42, P44
   Bianchi AJ, 2001, TECHNOLOGY MANAGEMENT IN THE KNOWLEDGE ERA, P217, DOI 10.1109/PICMET.2001.952021
   Birk A, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P93, DOI 10.1109/METRIC.1998.731231
   Boehm B., 2006, Systems Engineering, V9, P1, DOI 10.1002/sys.20044
   Boyd A, 2002, ASLIB PROC, V54, P177, DOI 10.1108/00012530210441728
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P1106, DOI 10.1109/TSE.2002.1158285
   Buglione L., 2005, P INT WORKSH SOFTW M, P14
   Cameron EstherMike Green., 2012, Making Sense of Change Management
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chirinos L, 2005, J SYST SOFTWARE, V74, P207, DOI 10.1016/j.jss.2004.01.019
   Ciolkowski M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P243
   CMMI, 2002, CMUSEI2002TR012 CMMI
   Cyra L, 2008, LECT NOTES COMPUT SC, V5082, P26
   Daubner B., 2005, P INT SOFTW METR S
   Dekkers C. A., 2002, IT Professional, V4, P24, DOI 10.1109/MITP.2002.1000457
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Díaz-Ley M, 2008, IET SOFTW, V2, P417, DOI 10.1049/iet-sen:20080026
   Díaz-Ley M, 2008, LECT NOTES COMPUT SC, V4895, P154
   Díaz-Ley M, 2008, LECT NOTES COMPUT SC, V5089, P19, DOI 10.1007/978-3-540-69566-0_5
   Díaz-Ley M, 2010, ADV ENG SOFTW, V41, P1223, DOI 10.1016/j.advengsoft.2010.06.007
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fuggetta A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P411, DOI 10.1145/292182.292197
   García F, 2007, INFORM SCIENCES, V177, P2570, DOI 10.1016/j.ins.2007.01.018
   García F, 2003, LECT NOTES COMPUT SC, V2786, P94
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Gencel C, 2013, J SYST SOFTWARE, V86, P3091, DOI 10.1016/j.jss.2013.07.022
   Gencel C, 2009, LECT NOTES COMPUT SC, V5891, P144, DOI 10.1007/978-3-642-05415-0_11
   Goldenson D., 1996, ISERN9709 FRAUNH I E
   Goldenson D. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P10, DOI 10.1109/METRIC.1999.809721
   Gómez O, 2008, COMM COM INF SC, V10, P165
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Gopal A, 2005, IEEE T SOFTWARE ENG, V31, P679, DOI 10.1109/TSE.2005.95
   Gorbutt J, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/STEP.1997.615483
   Habra N, 2008, J SYST SOFTWARE, V81, P633, DOI 10.1016/j.jss.2007.07.038
   Hamann D., 2001, USING FAME ASSESSMEN, P220
   Harrison W, 2004, J SYST SOFTWARE, V72, P225, DOI 10.1016/S0164-1212(03)00092-X
   Heidrich J, 2008, LECT NOTES COMPUT SC, V5089, P4, DOI 10.1007/978-3-540-69566-0_4
   Henderson-Sellers B., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P2, DOI 10.1109/METRIC.1999.809720
   Humphrey W. S., 1993, CMUSEI92TR7 SOFTW EN
   *ISO IEC, 1998, 14598 ISOIEC
   *ISO IEC, 2005, 25021 ISOIEC
   ISO/IEC, 2009, 209262009 ISOIEC
   *ISO IEC, 2002, 209682002 ISOIEC
   *ISO IEC, 2002, 15939 ISOIEC
   *ISO IEC, 2008, 298812008 ISOIEC
   *ISO IEC, 2005, 245702005 ISOIEC
   Iversen J, 2003, INFORM SYST J, V13, P3, DOI 10.1046/j.1365-2575.2003.00136.x
   Kaner C., 2004, P INT SOFTW METR S
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Komi-Sirvio Seija., 2001, IEEE Seventh International Software Metrics Symposium (METRICS'01), P306
   Lavazza L, 2005, PROC INT CONF SOFTW, P234
   Lavazza L, 2000, IEEE SOFTWARE, V17, P56, DOI 10.1109/52.896250
   Lindvall Mikael, 2005, IEEE COMPUTER SOC, P21, DOI [10.1109/METRICS.2005.49, DOI 10.1109/METRICS.2005.49]
   Lucero S., 2001, P SOFTW ENG WORKSH A, P71
   Mandic V, 2010, LECT NOTES COMPUT SC, V6156, P291, DOI 10.1007/978-3-642-13792-1_23
   Mendonca MG, 1998, IBM SYST J, V37, P484, DOI 10.1147/sj.374.0484
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Mitchell T. M., 1997, MACHINE LEARNING
   Murphy T, 2012, PROC TECH, V5, P50, DOI 10.1016/j.protcy.2012.09.006
   Niessink F, 2001, PROC IEEE INT CONF S, P553, DOI 10.1109/ICSM.2001.972770
   Niessink F., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P31, DOI 10.1109/METRIC.1999.809723
   Niessink F, 2001, INFORM SOFTWARE TECH, V43, P617, DOI 10.1016/S0950-5849(01)00168-9
   Niessink F, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P82, DOI 10.1109/CSMR.1998.665755
   Offen RJ, 1997, IEEE SOFTWARE, V14, P45, DOI 10.1109/52.582974
   Olsson T., 2001, Proceedings of the 7th International Software Metrics Symposium, P236, DOI DOI 10.1109/METRIC.2001.915532
   Parviainen P, 1997, SOFTWARE QUAL J, V6, P283, DOI 10.1023/A:1018576422091
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Petersen K, 2015, EMPIR SOFTW ENG, V20, P968, DOI 10.1007/s10664-014-9306-z
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Schalken J, 2008, J SYST SOFTWARE, V81, P603, DOI 10.1016/j.jss.2007.07.041
   Schunk S, 2008, LECT NOTES COMPUT SC, V5338, P76
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Software Engineering, 2011, 197612011 ISOIEC
   Soini J, 2011, INT SYMP EMP SOFTWAR, P49, DOI 10.1109/ESEM.2011.13
   Staron M, 2011, E-INFORMATICA, V5, P7, DOI 10.2478/v10233-011-0027-z
   Staron M, 2012, INFORM SOFTWARE TECH, V54, P887, DOI 10.1016/j.infsof.2012.02.003
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P212, DOI 10.1007/978-3-642-05415-0_16
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P1, DOI 10.1007/978-3-642-05415-0_1
   Sureshchandar GS, 2006, MEAS BUS EXCELL, V10, P22, DOI 10.1108/13683040610719254
   Tahir T., 2011, Proceedings of the 2011 Frontiers of Information Technology (FIT 2011), P39, DOI 10.1109/FIT.2011.15
   Tahir T., 2010, 2010 6th International Conference on Emerging Technologies (ICET), P282, DOI 10.1109/ICET.2010.5638475
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   UMARJI M, 2005, P 11 IEEE INT SOFTW, P10
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Latum F, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.646887
   Villavicencio Monica., 2011, Journal of Software Engineering and Applications, V4, P227
   Wohlin C, 2003, EMPIR SOFTW ENG, V8, P285, DOI 10.1023/A:1024476828183
NR 118
TC 37
Z9 38
U1 0
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 101
EP 121
DI 10.1016/j.infsof.2016.01.014
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400008
DA 2024-07-18
ER

PT J
AU Veerapen, N
   Ochoa, G
   Harman, M
   Burke, EK
AF Veerapen, Nadarajen
   Ochoa, Gabriela
   Harman, Mark
   Burke, Edmund K.
TI An Integer Linear Programming approach to the single and bi-objective
   Next Release Problem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Integer Linear Programming; Multi-objective optimization; Next Release
   Problem; Requirements optimization; Search based software engineering
ID LARGE-SCALE; EVOLUTIONARY; OPTIMIZATION; ALGORITHM
AB Context: The Next Release Problem involves determining the set of requirements to implement in the next release of a software project. When the problem was first formulated in 2001, Integer Linear Programming, an exact method, was found to be impractical because of large execution times. Since then, the problem has mainly been addressed by employing metaheuristic techniques.
   Objective: In this paper, we investigate if the single-objective and hi-objective Next Release Problem can be solved exactly and how to better approximate the results when exact resolution is costly.
   Methods: We revisit Integer Linear Programming for the single-objective version of the problem. In addition, we integrate it within the Epsilon-constraint method to address the bi-objective problem. We also investigate how the Pareto front of the bi-objective problem can be approximated through an anytime deterministic Integer Linear Programming-based algorithm when results are required within strict run-time constraints. Comparisons are carried out against NSGA-II. Experiments are performed on a combination of synthetic and real-world datasets.
   Findings: We show that a modern Integer Linear Programming solver is now a viable method for this problem. Large single objective instances and small hi-objective instances can be solved exactly very quickly. On large bi-objective instances, execution times can be significant when calculating the complete Pareto front. However, good approximations can be found effectively.
   Conclusion: This study suggests that (1) approximation algorithms can be discarded in favor of the exact method for the single-objective instances and small bi-objective instances, (2) the Integer Linear Programming-based approximate algorithm outperforms the NSGA-II genetic approach on large hi-objective instances, and (3) the run times for both methods are low enough to be used in real-world situations. (C) 2015 The Authors. Published by Elsevier B.V.
C1 [Veerapen, Nadarajen; Ochoa, Gabriela; Burke, Edmund K.] Univ Stirling, Comp Sci & Math, Stirling FK9 4LA, Scotland.
   [Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of Stirling; University of London; University College London
RP Veerapen, N (corresponding author), Univ Stirling, Comp Sci & Math, Stirling FK9 4LA, Scotland.
EM nve@cs.stir.ac.uk
RI Burke, Edmund/HTQ-9231-2023; Burke, Edmund/JFJ-4936-2023; Veerapen,
   Nadarajen/J-5993-2015
OI Veerapen, Nadarajen/0000-0003-3699-1080; Ochoa,
   Gabriela/0000-0001-7649-5669; Burke, Edmund/0000-0003-0712-4762; Harman,
   Mark/0000-0002-5864-4488
FU DAASE project, EPSRC [EP/J017515/1]; EPSRC [EP/J017515/1] Funding
   Source: UKRI
FX This work has been funded under the DAASE project, EPSRC programme grant
   EP/J017515/1. The authors would like to thank Dr. Y. Zhang from
   University College London (UCL) for kindly providing the real-world
   instances used in this paper and for discussions on the NRP. IBM
   graciously provided an academic license for the IBM ILOG CPLEX
   Optimizer.
CR ANEJA YP, 1979, MANAGE SCI, V25, P73, DOI 10.1287/mnsc.25.1.73
   [Anonymous], 2022, Introduction to robust estimation and hypothesis testing
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   BALAS E, 1980, OPER RES, V28, P1130, DOI 10.1287/opre.28.5.1130
   Bang-Jensen J, 2009, SPRINGER MONOGR MATH, P1, DOI 10.1007/978-1-84800-998-1_1
   Beier R, 2003, P 35 ANN ACM S THEOR, P232
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   de Souza JT, 2011, LECT NOTES COMPUT SC, V6956, P142, DOI 10.1007/978-3-642-23716-4_15
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   Dubois-Lacoste J, 2011, ANN MATH ARTIF INTEL, V61, P125, DOI 10.1007/s10472-011-9235-0
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Ehrgott M., 2002, International Series in Operations Research & Management Science, V2, DOI [10.1007/b101915, DOI 10.1007/B101915]
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Freitas FG., 2011, International Journal of Computer Applications, V22, P1, DOI DOI 10.5120/2607-3636
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   HAIMES YY, 1971, IEEE T SYST MAN CYB, VSMC1, P296
   Harman M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2537853
   He Jiang, 2010, Proceedings of the 2nd International Conference on Software Engineering and Data Mining (SEDM 2010), P166
   Hernández-Díaz AG, 2008, IEEE C EVOL COMPUTAT, P1617, DOI 10.1109/CEC.2008.4631008
   Hwang C. L., 1979, Multiple objective decision makingmethods and applications. A state of the art survey
   Koch T, 2011, MATH PROGRAM COMPUT, V3, P103, DOI 10.1007/s12532-011-0025-9
   Li C, 2007, LECT NOTES COMPUT SC, V4542, P93
   Liefooghe A, 2010, STUD COMPUT INTELL, V272, P87
   Lim S. L., 2010, Social networks and collaborative filtering for large-scale requirements elicitation
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Lodi A, 2010, 50 YEARS INTEGER PRO, P619
   Lopes MA, 2010, ESTUD HUMAN, P209, DOI 10.1007/978-3-642-02538-9_9
   NEMHAUSER GL, 1969, MANAGE SCI, V15, P494, DOI 10.1287/mnsc.15.9.494
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Ruhe G., 2011, Product release planning: methods, tools and applications
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Surry P. D., 1996, Evolutionary Computing. AISB Workshop. Selected Papers, P269, DOI 10.1007/BFb0032789
   van den Akker J.M., 2005, P 11 INT WORKSH REQ
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   VANWASSENHOVE LN, 1980, EUR J OPER RES, V4, P42, DOI 10.1016/0377-2217(80)90038-7
   Xuan JF, 2012, IEEE T SOFTWARE ENG, V38, P1195, DOI 10.1109/TSE.2011.92
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 49
TC 46
Z9 47
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 1
EP 13
DI 10.1016/j.infsof.2015.03.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Tüzün, E
   Tekinerdogan, B
   Kalender, ME
   Bilgen, S
AF Tuzun, Eray
   Tekinerdogan, Bedir
   Kalender, Mert Emin
   Bilgen, Semih
TI Empirical evaluation of a decision support model for adopting software
   product line engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line engineering; Software product line transition
   strategies; Software product line engineering feasibility analysis;
   Decision support system; Systematic literature review; Case study design
AB Context: The software product line engineering (SPLE) community has provided several different approaches for assessing the feasibility of SPLE adoption and selecting transition strategies. These approaches usually include many rules and guidelines which are very often implicit or scattered over different publications. Hence, for the practitioners it is not always easy to select and use these rules to support the decision making process. Even in case the rules are known, the lack of automated support for storing and executing the rules seriously impedes the decision making process.
   Objective: We aim to evaluate the impact of a decision support system (DSS) on decision-making in SPLE adoption. In alignment with this goal, we provide a decision support model (DSM) and the corresponding DSS.
   Method: First, we apply a systematic literature review (SLR) on the existing primary studies that discuss and present approaches for analyzing the feasibility of SPLE adoption and transition strategies. Second, based on the data extraction and synthesis activities of the SLR, the required questions and rules are derived and implemented in the DSS. Third, for validation of the approach we conduct multiple case studies.
   Results: In the course of the SLR, 31 primary studies were identified from which we could construct 25 aspects, 39 questions and 312 rules. We have developed the DSS tool Transit-PL that embodies these elements.
   Conclusions: The multiple case study validation showed that the adoption of the developed DSS tool is justified to support the decision making process in SPLE adoption. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Tuzun, Eray] Middle E Tech Univ, Inst Informat, TR-06800 Ankara, Turkey.
   [Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, NL-6706 KN Wageningen, Netherlands.
   [Kalender, Mert Emin] Microsoft Corp, Redmond, WA 98052 USA.
   [Bilgen, Semih] Yeditepe Univ, Dept Comp Engn, TR-34755 Istanbul, Turkey.
C3 Middle East Technical University; Wageningen University & Research;
   Microsoft; Yeditepe University
RP Tüzün, E (corresponding author), Middle E Tech Univ, Inst Informat, TR-06800 Ankara, Turkey.
EM e170994@metu.edu.tr; bedir.tekinerdogan@wur.nl; mertk@microsoft.com;
   semih.bilgen@yeditepe.edu.tr
RI Tekinerdogan, Bedir/K-3639-2019; Tuzun, Eray/AAD-7282-2021
OI Tekinerdogan, Bedir/0000-0002-8538-7261; Tuzun, Eray/0000-0002-5550-7816
CR Ahmed F, 2010, SOFTWARE QUAL J, V18, P195, DOI 10.1007/s11219-009-9088-5
   Ahnassay A., 2011, EMPIRICAL EVALUATION, P1
   [Anonymous], [No title captured]
   [Anonymous], P 4 INT WORKSH VAR M
   Bagheri E., 2012, AUTOMAT SOFTW ENG, V44, P1
   Bagheri E, 2014, REQUIR ENG, V19, P187, DOI 10.1007/s00766-013-0165-8
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Bockle G., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P49
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Bosch J., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P257
   BUHNE S, 2004, 5 INT WORKSH SOFTW P, V3014, P19
   Buhrdorf R, 2004, LECT NOTES COMPUT SC, V3014, P317
   CAPRETZ L. F., 2006, J INTERPRETABILITY B, V1, P9
   Catal C., 2009, SIGSOFT Softw. Eng. Notes, V34, P1
   Charters S., 2007, 2007001 EBSE
   Clements P., 2002, Software product lines
   Clements P., 2001, SOFTWARE PRODUCT LIN, P608
   Clements P., 2007, FRAMEWORK SOFTWARE P
   Cohen S., 2002, CMUSEI2002TN017
   Eisenbarth T, 2002, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2002.1167778
   Ferreira Bastos Jonatas, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P11, DOI 10.1049/ic.2011.0002
   Fritsch C., 2004, SOFTWARE PRODUCT LIN, P95
   Gacek C., 2001, 01301E IESE
   Jones L. G., 2005, CMUSEI2005TN028
   Jones LG., 2002, Software Process Improvement and Product Line Practice: CMMI and the Framework for Software Product Line Practice
   Kalender ME, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P150
   Kircher M, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P163
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Krueger C., 2010, 200805071R3, P1
   Krueger C., 2002, DATA SALIONS SOFTWAR
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kuvaja P., 2011, Software engineering techniques: third IFIP TC 2 central and east european conference, CEE-SET 2008, Brno, Czech Republic, October 13-15, 2008, Revised Selected Papers, P143, DOI DOI 10.1007/978-3-642-22386-0_11
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   Niemelä E, 2005, LECT NOTES COMPUT SC, V3714, P186
   Northrop L., 2004, SOFTWARE PRODUCT LIN
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Person C., 2009, STATE OF THE ART SUR
   Pick R.A., 2012, Review of Business Information Systems RBIS, V17, P7, DOI DOI 10.19030/RBIS.V17I1.7580
   Raatikainen M., 2004, CASE STUDY QUESTIONS
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid K, 2002, EUROMICRO CONF PROC, P272, DOI 10.1109/EURMIC.2002.1046172
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schmid K., 2001, 25 ANN INT COMP SOFT
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schutz D., 2010, P 15 EUR C PATT LANG
   Sherif K, 2002, DECIS SUPPORT SYST, V33, P55, DOI 10.1016/S0167-9236(01)00130-0
   Tekinerdogan B, 2010, LECT NOTES COMPUT SC, V6287, P461, DOI 10.1007/978-3-642-15579-6_37
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   Van Der Linden F., 2007, SOFTWARE PRODUCT LIN, P334
   Van Der Linden F., 2005, FAMILY EVALUATION FR
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   Yin R.K., 2003, Essential guide to qualitative methods in organizational research, V5, P219, DOI DOI 10.1046/J.1365-2648.2003.02790_1.X
NR 52
TC 23
Z9 25
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 77
EP 101
DI 10.1016/j.infsof.2014.12.007
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700005
DA 2024-07-18
ER

PT J
AU Laradji, IH
   Alshayeb, M
   Ghouti, L
AF Laradji, Issam H.
   Alshayeb, Mohammad
   Ghouti, Lahouari
TI Software defect prediction using ensemble learning on selected features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Defect prediction; Ensemble learning; Software quality; Feature
   selection; Data imbalance; Feature redundancy/correlation
ID SUPPORT VECTOR MACHINES; NEURAL-NETWORKS; CLASSIFICATION; EXPERIENCE;
   MODELS
AB Context: Several issues hinder software defect data including redundancy, correlation, feature irrelevance and missing samples. It is also hard to ensure balanced distribution between data pertaining to defective and non-defective software. In most experimental cases, data related to the latter software class is dominantly present in the dataset.
   Objective: The objectives of this paper are to demonstrate the positive effects of combining feature selection and ensemble learning on the performance of defect classification. Along with efficient feature selection, a new two-variant (with and without feature selection) ensemble learning algorithm is proposed to provide robustness to both data imbalance and feature redundancy.
   Method: We carefully combine selected ensemble learning models with efficient feature selection to address these issues and mitigate their effects on the defect classification performance.
   Results: Forward selection showed that only few features contribute to high area under the receiver-operating curve (AUC). On the tested datasets, greedy forward selection (GFS) method outperformed other feature selection techniques such as Pearson's correlation. This suggests that features are highly unstable. However, ensemble learners like random forests and the proposed algorithm, average probability ensemble (APE), are not as affected by poor features as in the case of weighted support vector machines (W-SVMs). Moreover, the APE model combined with greedy forward selection (enhanced APE) achieved AUC values of approximately 1.0 for the NASA datasets: PC2, PC4, and MC1.
   Conclusion: This paper shows that features of a software dataset must be carefully selected for accurate classification of defective components. Furthermore, tackling the software data issues, mentioned above, with the proposed combined learning model resulted in remarkable classification performance paving the way for successful quality control. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Laradji, Issam H.; Alshayeb, Mohammad; Ghouti, Lahouari] King Fand Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fand Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM g200790850@kfupm.edu.sa; alshayeb@kfupm.edu.sa; lahouari@kfupm.edu.sa
RI ; Alshayeb, Mohammad/B-5941-2015
OI Ghouti, Lahouari/0000-0002-6381-4250; Alshayeb,
   Mohammad/0000-0001-7950-0099
FU King Fand University of Petroleum and Minerals
FX The authors acknowledge the support of King Fand University of Petroleum
   and Minerals in the development of this work.
CR Akbani R, 2004, LECT NOTES COMPUT SC, V3201, P39, DOI 10.1007/978-3-540-30115-8_7
   Andersson C, 2007, EMPIR SOFTW ENG, V12, P161, DOI 10.1007/s10664-006-9018-0
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Bouguila N., 2008, 4th International IEEE Conference on Intelligent Systems, p11, DOI [DOI 10.1109/IS.2008.4670508, 10.1109/IS.2008, DOI 10.1109/IS.2008]
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla N.V., 2011, ARXIV11061813
   Dietterich T.G., 2002, The Handbook of the Brain Theory and Neural Networks, V2, P405, DOI DOI 10.1007/978-1-4419-9326-7_1
   Duda RO., 2004, Pattern Classification, V2nd
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Galar M, 2012, IEEE T SYST MAN CY C, V42, P463, DOI 10.1109/TSMCC.2011.2161285
   Gray D., 2011, EVALUATION ASSESSMEN, P12
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Huali Chen, 2004, Proceedings of the 21st IEEE Instrumentation and Measurement Technology Conference (IEEE Cat. No.04CH37510), P2273, DOI 10.1109/IMTC.2004.1351546
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Khoshgoftaar TM, 2012, INT J SOFTW ENG KNOW, V22, P161, DOI 10.1142/S0218194012400013
   Khoshgoftaar TM, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P51, DOI 10.1109/HASE.2002.1173102
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lim H., 2008, SOFTWARE EFFORT PRED
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MARKOWETZ F, 2001, THESIS U HEIDELBERG
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Miyamoto A., 2013, SPIE MED IMAGING
   Nasrabadi N.M, 2007, Pattern recognition and machine learning, V16
   Nguyen G. H., 2009, Learning pattern classification tasks with imbalanced data sets, P193, DOI DOI 10.5772/7544
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pelayo L, 2012, IEEE T RELIAB, V61, P516, DOI 10.1109/TR.2012.2183912
   Peng CR, 2012, PROTEIN PEPTIDE LETT, V19, P108, DOI 10.2174/092986612798472802
   Quinlan JR, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P725
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Saeys Y, 2007, BIOINFORMATICS, V23, P2507, DOI 10.1093/bioinformatics/btm344
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Seliya Naeem, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P26, DOI 10.1109/HASE.2010.29
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Sun YM, 2007, PATTERN RECOGN, V40, P3358, DOI 10.1016/j.patcog.2007.04.009
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Suykens JAK, 2002, NEUROCOMPUTING, V48, P85, DOI 10.1016/S0925-2312(01)00644-0
   Tang S, 2012, IEEE T MULTIMEDIA, V14, P43, DOI 10.1109/TMM.2011.2168198
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Vapnik V., 1999, NATURE STAT LEARNING
   Wang S, 2013, INT J COMPUT INTELL, V12, DOI 10.1142/S1469026813400014
   Wang T., 2011, Journal of Information Computational Science, V8, P4241
   Wu G., 2003, INT C MACH LEARN ICM
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Yuan XH, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P85, DOI 10.1109/ASSET.2000.888052
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
   Zhong DX, 2010, OPT ENG, V49, DOI 10.1117/1.3465582
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 57
TC 230
Z9 248
U1 1
U2 53
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 388
EP 402
DI 10.1016/j.infsof.2014.07.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800023
DA 2024-07-18
ER

PT J
AU Gong, DD
   Su, XH
   Wang, TT
   Ma, PJ
   Wang, Y
AF Gong Dandan
   Su Xiaohong
   Wang Tiantian
   Ma Peijun
   Wang Yu
TI State dependency probabilistic model for fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Statistical analysis; Control flow graph
AB Context: Fault localization is an important and expensive activity in software debugging. Previous studies indicated that statistically-based fault-localization techniques are effective in prioritizing the possible faulty statements with relatively low computational complexity, but prior works on statistical analysis have not fully investigated the behavior state information of each program element.
   Objective: The objective of this paper is to propose an effective fault-localization approach based on the analysis of state dependence information between program elements.
   Method: In this paper, state dependency is proposed to describe the control flow dependence between statements with particular states. A state dependency probabilistic model uses path profiles to analyze the state dependency information. Then, a fault-localization approach is proposed to locate faults by differentiating the state dependencies in passed and failed test cases.
   Results: We evaluated the fault-localization effectiveness of our approach based on the experiments on Siemens programs and four UNIX programs. Furthermore, we compared our approach with current state-of-art fault-localization methods such as SOBER, Tarantula, and CP. The experimental results show that, our approach can locate more faults than the other methods in every range on Siemens programs, and the overall efficiency of our approach in the range of 10-30% of analyzed source code is higher than the other methods on UNIX programs.
   Conclusion: Our studies show that our approach consistently outperforms the other evaluated techniques in terms of effectiveness in fault localization on Siemens programs. Moreover, our approach is highly effective in fault localization even when very few test cases are available. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gong Dandan; Su Xiaohong; Wang Tiantian; Ma Peijun; Wang Yu] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
   [Gong Dandan] Shanghai Acad Spaceflight Technol, Shanghai 201109, Peoples R China.
C3 Harbin Institute of Technology
RP Gong, DD (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
EM gongdandan0418@126.com
FU National Natural Science Foundation of China [61173021, 61202092];
   Research Fund for the Doctoral Program of Higher Education of China
   [20112302120052, 20092302110040]
FX This research is supported by the National Natural Science Foundation of
   China (Grant No. 61173021 and 61202092) and the Research Fund for the
   Doctoral Program of Higher Education of China (Grant No. 20112302120052
   and 20092302110040). We are extremely grateful to Zhang Zhenyu for the
   subject programs and their experimental results, and to anonymous
   reviewers for their suggestions for improvement.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Alves E., P 2011 26 IEEE ACM I, V201, P520
   American Psychological Association, 2009, Publication manual of the American Psychological Association, V6th
   [Anonymous], P 14 ACM SIGSOFT INT
   [Anonymous], 2010, ICSE
   [Anonymous], 2008, ISSTA
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   CHEN ZY, 2008, SAC, P390
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Daniel P., 2013, INT J SOFTW ENG APPL, V5, P403
   diGiuseppe N., 2011, INFLUENCE MULTIPLE F
   Feng Min., 2010, P 9 ACM SIGPLAN SIGS, P81, DOI [10.1145/1806672.1806688, DOI 10.1145/1806672.1806688]
   Gao YC, 2013, INT CONF QUAL SOFTW, P288, DOI 10.1109/QSIC.2013.23
   Gong DD, 2013, COMPUT LANG SYST STR, V39, P95, DOI 10.1016/j.cl.2013.04.001
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hao D., 2005, INT C AUT SOFTW ENG
   Hao D, 2010, AUTOMAT SOFTW ENG, V17, P5, DOI 10.1007/s10515-009-0056-x
   Hassan AE, 2013, IEEE SOFTWARE, V30, P53, DOI 10.1109/MS.2013.85
   Hofer B, 2012, FRONT ARTIF INTEL AP, V242, P420, DOI 10.3233/978-1-61499-098-7-420
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Jang B., 2012, INF SOFTW TECHNOL, P739
   Jeffrey D, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1745312.1745314
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lyle J. R., 1987, Second International Conference on Computers and Applications (Cat. No.87CH2433-1), P877
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Mariani Leonardo, 2010, P 2 INT WORKSH PRINC, P22, DOI [10.1145/1808885.1808891, DOI 10.1145/1808885.1808891]
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   Pytlik Brock., 2003, Proceedings of AADEBUG'03, P273
   Rothermel G., 1998, 14 IEEE INT C SOFTW
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Santelices R., 2009, P 31 INT C SOFTW ENG
   Sterling C.D., 2005, Proceedings of the Sixth International Symposium on Automated Analysis-Driven Debugging, P23, DOI [10.1145/1085130.1085134, DOI 10.1145/1085130.1085134]
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wen W., 2011, P 23 INT C SOFTW ENG, P213
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   Wotawa F, 2002, LECT NOTES ARTIF INT, V2358, P746
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang X., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC'10, (New York, NY, USA), P2229, DOI DOI 10.1145/1774088.1774556
   Zhang XY, 2007, SOFTWARE PRACT EXPER, V37, P935, DOI 10.1002/spe.795
   ZHANG Z, 2009, P 7 JOINT M EUR SOFT, P43, DOI DOI 10.1145/1595696.1595705
NR 50
TC 14
Z9 21
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 430
EP 445
DI 10.1016/j.infsof.2014.05.022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500025
DA 2024-07-18
ER

PT J
AU Savic, M
   Rakic, G
   Budimac, Z
   Ivanovic, M
AF Savic, Milos
   Rakic, Gordana
   Budimac, Zoran
   Ivanovic, Mirjana
TI A language-independent approach to the extraction of dependencies
   between source code entities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software networks; Dependency extraction; Enriched concrete syntax tree;
   Software metrics; Fact extraction; Reverse engineering
ID SOFTWARE COMPONENTS; COMPLEX NETWORKS; DESIGN; SUITE; TOOL
AB Context: Software networks are directed graphs of static dependencies between source code entities (functions, classes, modules, etc.). These structures can be used to investigate the complexity and evolution of large-scale software systems and to compute metrics associated with software design. The extraction of software networks is also the first step in reverse engineering activities.
   Objective: The aim of this paper is to present SNEIPL, a novel approach to the extraction of software networks that is based on a language-independent, enriched concrete syntax tree representation of the source code.
   Method: The applicability of the approach is demonstrated by the extraction of software networks representing real-world, medium to large software systems written in different languages which belong to different programming paradigms. To investigate the completeness and correctness of the approach, class collaboration networks (CCNs) extracted from real-world Java software systems are compared to CCNs obtained by other tools. Namely, we used Dependency Finder which extracts entity-level dependencies from Java bytecode, and Doxygen which realizes language-independent fuzzy parsing approach to dependency extraction. We also compared SNEIPL to fact extractors present in language-independent reverse engineering tools.
   Results: Our approach to dependency extraction is validated on six real-world medium to large-scale software systems written in Java, Modula-2, and Delphi. The results of the comparative analysis involving ten Java software systems show that the networks formed by SNEIPL are highly similar to those formed by Dependency Finder and more precise than the comparable networks formed with the help of Doxygen. Regarding the comparison with language-independent reverse engineering tools, SNEIPL provides both language-independent extraction and representation of fact bases.
   Conclusion: SNEIPL is a language-independent extractor of software networks and consequently enables language-independent network-based analysis of software systems, computation of design software metrics, and extraction of fact bases for reverse engineering activities. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Savic, Milos; Rakic, Gordana; Budimac, Zoran; Ivanovic, Mirjana] Univ Novi Sad, Fac Sci, Dept Math & Informat, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Savic, M (corresponding author), Univ Novi Sad, Fac Sci, Dept Math & Informat, Trg Dositeja Obradovica 4, Novi Sad 21000, Serbia.
EM svc@dmi.uns.ac.rs; goca@dmi.uns.ac.rs; zjb@dmi.uns.ac.rs;
   mira@dmi.uns.ac.rs
RI Ivanovic, M./AAE-7711-2020; Rakic, Gordana/K-6200-2012
OI Rakic, Gordana/0000-0001-7366-5159; Ivanovic,
   Mirjana/0000-0003-1946-0384; Budimac, Zoran/0000-0001-5688-6320; Savic,
   Milos/0000-0003-1267-5411
FU Serbian Ministry of Education, Science and Technological Development
   through project Intelligent Techniques and Their Integration into
   Wide-Spectrum Decision [OI174023]
FX The authors gratefully acknowledge the support of this work by the
   Serbian Ministry of Education, Science and Technological Development
   through project Intelligent Techniques and Their Integration into
   Wide-Spectrum Decision Support, No. OI174023. The authors would also
   like to thank the anonymous reviewers for their valuable comments.
CR Albert R, 2002, REV MOD PHYS, V74, P47, DOI 10.1103/RevModPhys.74.47
   Albert R, 2000, NATURE, V406, P378, DOI 10.1038/35019019
   [Anonymous], P 6 INT C COMPL SYST
   [Anonymous], P 5 BALK C INF BCI 1
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], P 6 WORK C REV ENG
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Berner D., 2005, Sixth International Workshop on Microprocessor Test and Verification (MTV'05), P99, DOI [10.1109/MTV.2005.8, DOI 10.1109/MTV.2005.8]
   Beszedes A., 2005, Proceedings of the 13th IEEE Workshop on Software Technology and Engineering Practice (STEP 2005), P93
   Boccaletti S, 2006, PHYS REP, V424, P175, DOI 10.1016/j.physrep.2005.10.009
   Bollobas B., 2005, Handbook of Graphs and Networks, P1
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Budimac Z., 2012, Proceedings of the Fifth Balkan Conference in Informatics, BCI'12, P287, DOI DOI 10.1145/2371316.2371380
   Capiluppi A, 2008, LECT NOTES COMPUT SC, V5030, P282, DOI 10.1007/978-3-540-68073-4_31
   Capiluppi A, 2011, IFIP ADV INF COMM TE, V365, P159
   Capiluppi A, 2009, INT FED INFO PROC, V299, P34
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chiricota Y, 2003, PROG COMPREHEN, P217
   de Moura APS, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.017102
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Ducasse Stephane, 2000, 2 INT S CONSTR SOFTW
   Ebert J., 2002, Electronic Notes in Theoretical Computer Science, V72, P47
   FELLER W, 1948, ANN MATH STAT, V19, P177, DOI 10.1214/aoms/1177730243
   Fortunato S, 2010, PHYS REP, V486, P75, DOI 10.1016/j.physrep.2009.11.002
   Gerlec C, 2012, COMPUT SCI INF SYST, V9, P1155, DOI 10.2298/CSIS120104026G
   HYLLANDWOOD D, 2006, TRMS1286 U MAR COLL
   Jenkins S, 2007, INFORM SCIENCES, V177, P2587, DOI 10.1016/j.ins.2007.01.021
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Kolek J., 2013, Proceedings of the 2nd Workshop on Software Quality Analysis, Monitoring, Improvement, and Applications (SQAMIA), P35
   Kong XJ, 2011, COMPUT SCI INF SYST, V8, P1129, DOI 10.2298/CSIS110312061K
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Newman M., 2010, Networks: an introduction, DOI [10.1162/artl_r_00062, 10.1093/acprof:oso/9780199206650.001.0001]
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Nguyen V. H., 2010, COMP COMM TECHN RES, P1
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   OMG, ARCH DRIV MOD ADM AB
   *OMG, ARCH DRIV MOD ADM KN
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   Puppin D., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1409, DOI 10.1145/1141277.1141605
   Rakic G., 2013, Proceedings of the 6th Balkan Conference in Informatics, BCI'13, P236
   Rakic G., 2011, Proceedings of the 14th International Multiconference on Information Society (IS), Collaboration, Software And Services In Information Society (CSS), P211
   RAKIC G, 2011, P ICNAAM2011 S COMP, P544
   Raza A, 2006, LECT NOTES COMPUT SC, V4006, P71
   Risi M, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P449, DOI 10.1145/2254556.2254643
   SAVIC M, 2011, P 15 INT C SYST THEO, P544
   Savic M, 2012, AIP CONF PROC, V1479, P486, DOI 10.1063/1.4756172
   Savic M, 2011, INF TECHNOL CONTROL, V40, P48, DOI 10.5755/j01.itc.40.1.192
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   SHTERN M, 2012, ADV SOFTW ENG, V2012
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Valverde S, 2002, EUROPHYS LETT, V60, P512, DOI 10.1209/epl/i2002-00248-2
   Valverde S., 2007, Dyn. Contin. Discret. Impuls. Syst. Ser. B: Appl. Algorithms, V14, P305
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wen L, 2009, IEEE T SYST MAN CY B, V39, P845, DOI 10.1109/TSMCB.2009.2020206
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Wu JW, 2005, PROC IEEE INT CONF S, P525
NR 69
TC 16
Z9 18
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1268
EP 1288
DI 10.1016/j.infsof.2014.04.011
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700007
DA 2024-07-18
ER

PT J
AU She, S
   Ryssel, U
   Andersen, N
   Wasowski, A
   Czarnecki, K
AF She, Steven
   Ryssel, Uwe
   Andersen, Nele
   Wasowski, Andrzej
   Czarnecki, Krzysztof
TI Efficient synthesis of feature models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature models; Variability models; Software product lines
ID COMPUTATION; SEMANTICS
AB Context: Variability modeling, and in particular feature modeling, is a central element of model-driven software product line architectures. Such architectures often emerge from legacy code, but, creating feature models from large, legacy systems is a long and arduous task. We describe three synthesis scenarios that can benefit from the algorithms in this paper.
   Objective: This paper addresses the problem of automatic synthesis of feature models from propositional constraints. We show that the decision version of the problem is NP-hard. We designed two efficient algorithms for synthesis of feature models from CNF and DNF formulas respectively.
   Method: We performed an experimental evaluation of the algorithms against a binary decision diagram (BDD)-based approach and a formal concept analysis (FCA)-based approach using models derived from realistic models.
   Results: Our evaluation shows a 10 to 1,000-fold performance improvement for our algorithms over the BDD-based approach. The performance of the DNF-based algorithm was similar to the FCA-based approach, with advantages for both techniques. We identified input properties that affect the runtimes of the CNF- and DNF-based algorithms.
   Conclusions: Our algorithms are the first known techniques that are efficient enough to be used on dependencies extracted from real systems, opening new possibilities of creating reverse engineering and model management tools for variability models. (C) 2014 Elsevier B.V. All rights reserved.
C1 [She, Steven; Czarnecki, Krzysztof] Univ Waterloo, Dept Elect & Comp Engn, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
   [Ryssel, Uwe] Tech Univ Dresden, Inst Angew Informat, D-01062 Dresden, Germany.
   [Andersen, Nele] Configit AS, DK-2100 Copenhagen, Denmark.
   [Wasowski, Andrzej] IT Univ Copenhagen, DK-2300 Copenhagen, Denmark.
C3 University of Waterloo; Technische Universitat Dresden; IT University
   Copenhagen
RP Wasowski, A (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
EM shshe@gsd.uwaterloo.ca; uwe.ryssel@tu-dresden.de;
   nele.andersen@gmail.com; wasowski@itu.dk; kczarnec@gsd.uwaterloo.ca
OI Wasowski, Andrzej/0000-0003-0532-2685
CR Acher M., 2011, THESIS U NICE SOPHIA
   Andersen N., 2012, P 16 INT SOFTWARE PR, V1, P106, DOI DOI 10.1145/2362536
   Andersen N., 2009, THESIS IT U COPENHAG
   [Anonymous], J SOFTWARE MAINTENAN
   [Anonymous], 2009, AD091203 OMG
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D., 2010, INFORM SYST
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2010, LECT NOTES COMPUT SC, V6287, P498, DOI 10.1007/978-3-642-15579-6_48
   Brayton Robert K., 1984, KLUWER INT SERIES EN, V2
   BRON C, 1973, COMMUN ACM, V16, P575, DOI 10.1145/362342.362367
   Cai LM, 1997, SIAM J COMPUT, V26, P733, DOI 10.1137/S0097539793258295
   Chandru Vijay., 1999, WIL INT S D
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Coudert O., 1992, Proceedings. 29th ACM/IEEE Design Automation Conference (Cat. No.92CH3144-3), P36, DOI 10.1109/DAC.1992.227866
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K., 2005, Conference on Object Oriented Programming Systems Languages and Applications, P200, DOI [10.1145/1094855.1094934, DOI 10.1145/1094855.1094934]
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 2002, LECT NOTES ARTIF INT, V2424, P549, DOI 10.1007/3-540-45757-7_53
   Errico B., 1995, Eighth Australian Joint Conference on Artificial Intelligence, P355
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Hadzic T., 2007, ARXIV07041394
   HAUGEN O, 2008, P 12 INT SOFTW PROD, P139, DOI DOI 10.1109/SPLC.2008.25
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   JACKSON P, 1990, LECT NOTES ARTIF INT, V449, P543
   Jackson P., 1992, P 11 C AUT DED CADE, P253
   Janota M, 2008, LECT NOTES COMPUT SC, V5301, P431, DOI 10.1007/978-3-540-87875-9_31
   Jepsen HP, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203
   Kang Kyo C, 1990, Technical Report
   Kastner Christian, 2010, THESIS U MAGDEBURG
   KEAN A, 1990, J SYMB COMPUT, V9, P185, DOI 10.1016/S0747-7171(08)80029-6
   Kishi T, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1183236.1183270
   Kleine Buning H., 1999, PROPOSITIONAL LOGIC
   Loesch F, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151, DOI 10.1109/SPLINE.2007.31
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Manquinho VM, 1997, PROC INT C TOOLS ART, P232, DOI 10.1109/TAI.1997.632261
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Rubin J, 2012, LECT NOTES COMPUT SC, V7212, P285, DOI 10.1007/978-3-642-28872-2_20
   Ryssel U, 2011, P 15 INT SOFTW PROD, V2, P4
   Ryssel U., 2010, GPCE '10, 9th International Conference on Generative Programming and Component Engineering, P23
   Ryssel U, 2012, SCI COMPUT PROGRAM, V77, P83, DOI 10.1016/j.scico.2010.06.005
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   She Steven, 2012, P VARIABILITY YOU WO, P15, DOI [10.1145/2425415.2425419, DOI 10.1145/2425415.2425419]
   Silva J.P.M., 1997, P INT WORKSH LOG SYN
   Subbarayan S, 2005, LECT NOTES COMPUT SC, V3542, P276
   Umans C., 1999, Automata, Languages and Programming. 26th International Colloquium, ICALP'99. Proceedings (Lecture Notes in Computer Science Vol.1644), P687
   Umans C, 1998, ANN IEEE SYMP FOUND, P556, DOI 10.1109/SFCS.1998.743506
   Zhang LT, 2005, LECT NOTES COMPUT SC, V3569, P482
NR 58
TC 33
Z9 34
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1122
EP 1143
DI 10.1016/j.infsof.2014.01.012
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000006
DA 2024-07-18
ER

PT J
AU Rodriguez, D
   Ruiz, R
   Riquelme, JC
   Harrison, R
AF Rodriguez, Daniel
   Ruiz, Roberto
   Riquelme, Jose C.
   Harrison, Rachel
TI A study of subgroup discovery approaches for defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Subgroup discovery; Rules; Defect prediction; Imbalanced datasets
ID STATIC CODE ATTRIBUTES; SOFTWARE; METRICS; REGRESSION; MODULES; MODELS;
   RULES
AB Context: Although many papers have been published on software defect prediction techniques, machine learning approaches have yet to be fully explored.
   Objective: In this paper we suggest using a descriptive approach for defect prediction rather than the precise classification techniques that are usually adopted. This allows us to characterise defective modules with simple rules that can easily be applied by practitioners and deliver a practical (or engineering) approach rather than a highly accurate result.
   Method: We describe two well-known subgroup discovery algorithms, the SD algorithm and the CN2-SD algorithm to obtain rules that identify defect prone modules. The empirical work is performed with publicly available datasets from the Promise repository and object-oriented metrics from an Eclipse repository related to defect prediction. Subgroup discovery algorithms mitigate against characteristics of datasets that hinder the applicability of classification algorithms and so remove the need for preprocessing techniques.
   Results: The results show that the generated rules can be used to guide testing effort in order to improve the quality of software development projects. Such rules can indicate metrics, their threshold values and relationships between metrics of defective modules.
   Conclusions: The induced rules are simple to use and easy to understand as they provide a description rather than a complete classification of the whole dataset. Thus this paper represents an engineering approach to defect prediction, i.e., an approach which is useful in practice, easily understandable and can be applied by practitioners. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Rodriguez, Daniel] Univ Alcala, Dept Comp Sci, Madrid 28871, Spain.
   [Ruiz, Roberto] Pablo de Olavide Univ, Sch Engn, Seville 41013, Spain.
   [Riquelme, Jose C.] Univ Seville, Dept Comp Sci, E-41012 Seville, Spain.
   [Harrison, Rachel] Oxford Brookes Univ, Sch Technol, Oxford OX33 1HX, England.
C3 Universidad de Alcala; Universidad Pablo de Olavide; University of
   Sevilla; Oxford Brookes University
RP Rodriguez, D (corresponding author), Univ Alcala, Dept Comp Sci, Ctra Barcelona,Km 33-6, Madrid 28871, Spain.
EM daniel.rodriguezg@uah.es; robertoruiz@upo.es; riquelme@lsi.us.es;
   rachel.harrison@brookes.ac.uk
RI Riquelme, Jose C/E-6451-2010; RODRIGUEZ, Daniel/GWC-3563-2022;
   Rodriguez, Daniel/N-8939-2018; Ruiz, Roberto/L-4545-2014
OI Riquelme, Jose C/0000-0002-8243-2186; Rodriguez,
   Daniel/0000-0002-2887-0185; Ruiz, Roberto/0000-0002-7453-705X
FU project ICEBERG [IAPP-2012-324356]; project MICINN
   [TIN2011-28956-C02-00]
FX The authors are grateful to Dr. Petra Kralj Novak for answering some of
   our questions about the Orange tool and the anonymous reviewers for
   their useful comments while improving this manuscript. This work has
   been supported by the projects ICEBERG (IAPP-2012-324356) and MICINN
   TIN2011-28956-C02-00. Also D. Rodriguez carried out part of this work as
   a visiting research fellow at Oxford Brookes University, UK.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 1996, Advances in Knowledge Discovery and Data Mining
   [Anonymous], 7 IEEE WORK C MIN SO
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Azar D, 2009, INFORM SOFTWARE TECH, V51, P1365, DOI 10.1016/j.infsof.2009.05.003
   Bay SD, 2001, DATA MIN KNOWL DISC, V5, P213, DOI 10.1023/A:1011429418057
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Bibi S, 2006, I C COMP SYST APPLIC, P330, DOI 10.1109/AICCSA.2006.205110
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Brune K., 1997, CMUSEI97HB001
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clark P., 1989, Machine Learning, V3, P261, DOI 10.1007/BF00116835
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Dong G., 1999, P 5 ACM SIGKDD INT C, P43, DOI [10.1145/312129., DOI 10.1145/312129, DOI 10.1145/312129.312191]
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fayyad U, 1996, AI MAG, V17, P37
   FAYYAD UM, 1992, MACH LEARN, V8, P87, DOI 10.1007/BF00994007
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gamberger D, 2002, J ARTIF INTELL RES, V17, P1
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halkidi M, 2011, INTELL DATA ANAL, V15, P413, DOI 10.3233/IDA-2010-0475
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, OPERATING PROGRAMMIN, V2
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Herrera F, 2011, KNOWL INF SYST, V29, P495, DOI 10.1007/s10115-010-0356-2
   Houari D.A., P 2 EUR SOFTW MEAS C
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   KIRA K, 1992, MACHINE LEARNING /, P249
   Kononenko I., 1994, EUR C MACH LEARN, V94, P171, DOI DOI 10.1007/3-540-57868-4_57
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kralj P., P 8 INT MULT INF SOC, P228
   Lavrac N, 2004, J MACH LEARN RES, V5, P153
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2012, IEEE Transactions on Software Engineering, P1
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Novak PK, 2009, J MACH LEARN RES, V10, P377
   Peng Y, 2012, INFORM SCIENCES, V191, P3, DOI 10.1016/j.ins.2010.04.019
   Peng Y, 2009, INT J INF TECH DECIS, V8, P749, DOI 10.1142/S0219622009003715
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rodríguez D, 2012, INFORM SCIENCES, V191, P14, DOI 10.1016/j.ins.2011.01.039
   Rodriguez D., IEEE INT C INF REUS, P667
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Watson ArthurH., 1996, NIST special Publication, V500, P1
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wrobel S., P 1 EUR S PRINC DAT, P78
   Wrobel S., 2001, INDUCTIVE LOGIC PROG
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zimmermann T., INT WORKSH PRED MOD, P9
NR 75
TC 25
Z9 30
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1810
EP 1822
DI 10.1016/j.infsof.2013.05.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ebnenasir, A
AF Ebnenasir, Ali
TI Action-based discovery of satisfying subsets: A distributed method for
   model correction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model checking; Model correction; Liveness
ID TEMPORAL LOGIC; SYSTEMS; CHECKING; PROGRAMS; UPDATE
AB Context: Understanding and resolving counterexamples in model checking is a difficult task that often takes a significant amount of resources and many rounds of regression model checking after any fix. As such, it is desirable to have algorithmic methods that correct finite-state models when their model checking for a specific property fails without undermining the correctness of the rest of the properties, called the model correction problem.
   Objective: The objective of this paper is to mitigate time and space complexity of correction.
   Method: To achieve the objective, this paper presents a distributed method that solves the model correction problem using the concept of satisfying subsets, where a satisfying subset is a subset of model computations that meets a new property while preserving existing properties. The proposed method automates the elimination of superfluous non-determinism in models of concurrent computing systems, thereby generating models that are correct by construction.
   Results: We have implemented the proposed method in a distributed software tool, called the Model Corrector (ModCor). Due to the distributed nature of the correction algorithms. ModCor exploits the processing power of computer clusters to mitigate the space and time complexity of correction. Our experimental results are promising as we have used a small cluster of five regular PCs to automatically correct large models (with about 3(159) reachable states) in a few hours. Such corrections would have been impossible without using ModCor.
   Conclusions: The results of this paper illustrate that partitioning finite-state models based on their transition relations and distributing them across a computer cluster facilitates the automated correction of models when their model checking fails. (C) 2012 Elsevier B.V. All rights reserved.
C1 Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
C3 Michigan Technological University
RP Ebnenasir, A (corresponding author), Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
EM aebnenas@mtu.edu
CR ABADI M, 1993, ACM T PROGR LANG SYS, V15, P73, DOI 10.1145/151646.151649
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   [Anonymous], 1984, Logics and Models of Concurrent Systems (NATO ASI Series, DOI [DOI 10.1007/978-3-642-82453-1_5, 10.1007/978-3-642-82453-1\5]
   [Anonymous], 2003, LECT NOTES COMPUTER, V2619, P2
   [Anonymous], 2005, Principles of Distributed Systems, 9th International Conference, OPODIS 2005, Pisa, Italy, December 12-14, 2005, Revised Selected Papers
   [Anonymous], LNCS
   [Anonymous], THESIS MICHIGAN STAT
   [Anonymous], P 31 IEEE S FDN COMP
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   Attie PC, 2004, ACM T PROGR LANG SYS, V26, P125, DOI 10.1145/963778.963782
   Attie PC, 2001, ACM T PROGR LANG SYS, V23, P187, DOI 10.1145/383043.383044
   Attie PC, 1998, ACM T PROGR LANG SYS, V20, P51, DOI 10.1145/271510.271519
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barnat Jiri, 2009, Proceedings of the 2009 IEEE 15th International Conference on Parallel and Distributed Systems (ICPADS 2009), P34, DOI 10.1109/ICPADS.2009.50
   Barnat J., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P200
   Barnat J, 2006, FORM METHOD SYST DES, V29, P117, DOI 10.1007/s10703-006-0009-y
   Barnett J.P., 2002, Proceedings of Workshops on Growing Longleaf Pine in Containers - 1999 and 2001, P1
   Beer I, 2009, LECT NOTES COMPUT SC, V5643, P94, DOI 10.1007/978-3-642-02658-4_11
   BENDAVID S, 2003, INT J SOFTW TOOLS TE, V4, P496
   Bollig B., 2002, 9 INT SPIN WORKSH 20, P128
   Bonakdarpour B, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1462187.1462192
   Bonakdarpour B, 2008, LECT NOTES COMPUT SC, V5401, P408, DOI 10.1007/978-3-540-92221-6_26
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Burch J.R., 1991, IEEE ACM INT DES AUT, P403
   Cerná I, 2003, LECT NOTES COMPUT SC, V2648, P49
   Chai D., 2004, MVSIS 2 0 USERS MANU
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   Chechik M, 2005, LECT NOTES COMPUT SC, V3442, P220, DOI 10.1007/978-3-540-31984-9_17
   Cho KH, 1998, IEEE T ROBOTIC AUTOM, V14, P348, DOI 10.1109/70.681255
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Dijkstra E., 1990, DISCIPLINE PROGRAMMI
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   Ding YL, 2006, FRONT ARTIF INTEL AP, V141, P362
   Ebnenasir Ali, 2008, International Journal on Software Tools for Technology Transfer, V10, P455, DOI 10.1007/s10009-008-0083-0
   Ebnenasir A., 2004, INT C DEP SYST NETW
   Ebnenasir A., 2007, P 22 IEEEACM INT C A, P44
   Emerson E., 1990, HDB THEORETICAL COMP
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Gurfinkel A, 2003, LECT NOTES COMPUT SC, V2619, P160
   Heyman Tamir., 2000, CAV 00, P20
   Krishnamurthi S., 2004, Software Engineering Notes, V29, P137, DOI 10.1145/1041685.1029916
   Kroening D, 2004, LECT NOTES COMPUT SC, V3308, P224
   Kulkarni SS, 1997, INFORM PROCESS LETT, V64, P29, DOI 10.1016/S0020-0190(97)00143-9
   KUPFERMAN O, 2001, P 16 IEEE S LOG COMP
   Kurshan R.P., 1994, THESIS PRINCETON U
   Lafortune S., 1991, Discrete Event Dynamic Systems: Theory & Applications, V1, P61, DOI 10.1007/BF01797143
   Laster K, 1998, LECT NOTES COMPUT SC, V1384, P20, DOI 10.1007/BFb0054162
   Lerda F, 1999, LECT NOTES COMPUT SC, V1680, P22
   LIN F, 1990, IEEE T AUTOMAT CONTR, V35, P1330, DOI 10.1109/9.61009
   MANNA Z, 1984, ACM T PROGR LANG SYS, V6, P68, DOI 10.1145/357233.357237
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2619, P2
   Melatti I., 2009, International Journal on Software Tools for Technology Transfer, V11, P13, DOI 10.1007/s10009-008-0094-x
   Meolic R, 2004, LECT NOTES COMPUT SC, V3235, P259
   Pasareanu CS, 1999, LECT NOTES COMPUT SC, V1680, P168
   Pu F, 2008, IEEE HI ASS SYS ENGR, P187, DOI 10.1109/HASE.2008.17
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   ROHLOFF K. R., 2004, THESIS U MICHIGAN MI
   RUDIE K, 1992, IEEE T AUTOMAT CONTR, V37, P1692, DOI 10.1109/9.173140
   Rudie K., IEEE T AUTOMATIC CON, V48
   Somenzi Fabio., CUDD CU DECISION DIA
   Thomas W., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P1
   Thomas W., 2002, LECT NOTES COMPUTER, V2404, P58, DOI [DOI 10.1007/3-540-45657-0, 10.1007/3-540-45657-0\_5]
   VARDI MY, 1995, IEEE S LOG, P101, DOI 10.1109/LICS.1995.523248
   Wallmeier N, 2003, LECT NOTES COMPUT SC, V2759, P11
   Zhang Y, 2008, J ARTIF INTELL RES, V31, P113, DOI 10.1613/jair.2420
NR 67
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 201
EP 214
DI 10.1016/j.infsof.2012.07.018
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500002
DA 2024-07-18
ER

PT J
AU Restrepo, A
   Wong, WE
AF Restrepo, Andy
   Wong, W. Eric
TI Validation of SDL-based architectural design models using
   communication-based coverage criteria
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SDL (Specification and Description Language); White-box testing;
   Coverage testing and criteria; Architectural design models
ID FINITE-STATE MACHINES; GENERATION; SPECIFICATIONS
AB Context: As the capability to automatically generate code from different models becomes more sophisticated, it is critical that these models be adequately tested for quality assurance prior to code generation. Objective: Although simulation-based black-box testing strategies exist for these models, it is important that we also employ white-box testing strategies similar to those used to test implementation code to further validate the quality of these models.
   Method: We apply coverage testing to architectural design models represented by SDL, a Specification and Description Language. Our previous study defined a methodology for automatic test generation with respect to two structural-based criteria, all-node and all-edge, for each individual SDL process. In this paper, we present new coverage criteria such as n-step-message-transfer and sender-receiver-round-trip, aiming at the communication between different SDL processes.
   Results: A test generator using innovative backward tracking and forward validation has been implemented to support these criteria, guiding test generation to detect bugs which could not be revealed by test cases generated only with respect to the all-node and all-edge criteria.
   Conclusions: The results of our case study support the feasibility of using our test generator to create test cases satisfying the proposed communication-based criteria. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM andrew_restrepo@raytheon.com; ewong@utdallas.edu
CR [Anonymous], SPEC DESCR LANG
   [Anonymous], P 10 ISSAT INT C REL
   [Anonymous], P INT C TRENDS COMM
   [Anonymous], P 21 ACM SIGPLAN SIG
   [Anonymous], P 7 AS INT ENG C BAN
   [Anonymous], RAT TAU
   [Anonymous], P IFIP 14 INT C TEST
   [Anonymous], P 5 INT C FORM DESCR
   [Anonymous], P 5 INT WORKSH FORM
   [Anonymous], VALIDATION TELECOM S
   [Anonymous], P 4 SDL FOR LOSB POR
   [Anonymous], SYSTEMS ENG SDL DEV
   [Anonymous], P 8 SDL FOR EVR FRAN
   [Anonymous], 2010, Computer Networks
   [Anonymous], P 10 IEEE ITN S AUT
   [Anonymous], P IFIP TC 6 WORK C C
   [Anonymous], P 5 IEEE INT C SEC S
   Belina F., 1991, SDL APPL PROTOCOL SP
   Bourhfir C, 2001, COMPUT COMMUN, V24, P319, DOI 10.1016/S0140-3664(00)00220-6
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Fisher J., SDL 2000 TUTORIAL
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Kit E., 1995, SOFTWARE TESTING REA
   Kojima H, 2009, ISADS 2009: 2009 INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P363
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Lei Y, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P316, DOI 10.1109/ISSRE.2002.1173279
   Li X., 2011, P 7 IEEE INT C WIREL, P1
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P72, DOI 10.1109/32.263756
   Miller RE, 1996, CONFERENCE PROCEEDINGS OF THE 1996 IEEE FIFTEENTH ANNUAL INTERNATIONAL PHOENIX CONFERENCE ON COMPUTERS AND COMMUNICATIONS, P225, DOI 10.1109/PCCC.1996.493638
   Nilsson Ulf, 1995, Logic, Programming and Prolog
   Robinson-Mallett C, 2008, SOFTWARE QUAL J, V16, P185, DOI 10.1007/s11219-007-9036-1
   Tan QM, 1996, 1996 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS - CONVERGING TECHNOLOGIES FOR TOMORROW'S APPLICATIONS, VOLS. 1-3, P225, DOI 10.1109/ICC.1996.542187
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Ural H, 2000, COMPUT COMMUN, V23, P609, DOI 10.1016/S0140-3664(99)00227-3
   Wong WE, 2009, INFORM SOFTWARE TECH, V51, P1505, DOI 10.1016/j.infsof.2009.06.005
   Wong WE, 2008, INT J SOFTW ENG KNOW, V18, P803, DOI 10.1142/S0218194008003878
   Wong WE, 2003, COMPUT NETW, V42, P359, DOI 10.1016/S1389-1286(03)00248-2
   Zhang J, 2001, INT J SOFTW ENG KNOW, V11, P139, DOI 10.1142/S0218194001000487
NR 40
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1418
EP 1431
DI 10.1016/j.infsof.2012.06.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200009
DA 2024-07-18
ER

PT J
AU Santiago, I
   Jiménez, A
   Vara, JM
   De Castro, V
   Bollati, VA
   Marcos, E
AF Santiago, Ivan
   Jimenez, Alvaro
   Manuel Vara, Juan
   De Castro, Valeria
   Bollati, Veronica A.
   Marcos, Esperanza
TI Model-Driven Engineering as a new landscape for traceability management:
   A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Traceability; Model-Driven Engineering; Systematic literature review
ID REQUIREMENTS TRACEABILITY; TRANSFORMATION; SUPPORT
AB Context: Model-Driven Engineering provides a new landscape for dealing with traceability in software development.
   Objective: Our goal is to analyze the current state of the art in traceability management in the context of Model-Driven Engineering.
   Method: We use the systematic literature review based on the guidelines proposed by Kitchenham. We propose five research questions and six quality assessments.
   Results: Of the 157 relevant studies identified, 29 have been considered primary studies. These studies have resulted in 17 proposals.
   Conclusion: The evaluation shows that the most addressed operations are storage, CRUD and visualization, while the most immature operations are exchange and analysis traceability information. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Santiago, Ivan; Jimenez, Alvaro; Manuel Vara, Juan; De Castro, Valeria; Bollati, Veronica A.; Marcos, Esperanza] Rey Juan Carlos Univ, Dept Comp Languages & Syst 2, Kybele Res Grp, Madrid 28933, Spain.
C3 Universidad Rey Juan Carlos
RP Santiago, I (corresponding author), Rey Juan Carlos Univ, Dept Comp Languages & Syst 2, Kybele Res Grp, Madrid 28933, Spain.
EM ivan.santiago@urjc.es; alvaro.jimenez@urjc.es; juanmanuel.vara@urjc.es;
   valeria.decastro@urjc.es; veronica.bollati@urjc.es;
   esperanza.marcos@urjc.es
RI de Castro, Maria Valeria/AAH-9809-2021; Martinez, Esperanza
   Marcos/AAS-8564-2021; de Castro, Valeria V/N-4401-2013; Vara, Juan
   Manuel/K-6774-2014; Martinez, Esperanza Marcos/JCE-5935-2023
OI de Castro, Maria Valeria/0000-0003-2193-7807; Vara, Juan
   Manuel/0000-0002-8637-6580; Marcos, Esperanza/0000-0003-2666-9995
FU MASAI Project [TIN-2011-22617]; Spanish Ministry of Science and
   Innovation
FX This research was carried out in the framework of the MASAI Project
   (TIN-2011-22617) and the Technical Support Staff Subprogram
   (MICCINN-PTA-2009), which are partially financed by the Spanish Ministry
   of Science and Innovation.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Aleksy M., 2009, PROCESS INNOVATION E
   Allilaire F., 2009, MODEL TRANSFORMATION, P150
   [Anonymous], DESIGNING SOFTWARE I
   [Anonymous], TAXONOMY DEFINITION
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], P 2 OOPSLA WORKSHOP
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Anquetil N, 2010, SOFTW SYST MODEL, V9, P427, DOI 10.1007/s10270-009-0120-9
   Asuncion H., 2008, 30 INT C SOFTW ENG A
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Barber M., 2007, P INT C SYST ENG MOD
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bernstein P.A., 2003, 1 BIENN C INN DAT SY
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Biolchini J., 2005, SYSTEMATIC REV SOFTW, V679, P45
   Bonde L., 2005, APPL SPECIFICATION D, P263
   Boronat A., 2005, 1 EUR C MOD DRIV ARC
   Brcina R., 2008, P 4 EUR C MOD DRIV A
   Briand L.C., 2003, P INT C SOFTW MAINT
   Campos P, 2007, IEEE SOFTWARE, V24, P73, DOI 10.1109/MS.2007.24
   Czarnecki K., 2002, ENCY SOFTWARE ENG
   Drivalos N., 2010, P 6 ECMFA TRAC WORKS
   Drivalos N., 2008, P 4 EUR C MOD DRIV A
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Egyed A., 2004, P 12 ACM SIGSOFT 12
   Fallen J.R., 2006, P 2 EUR C MOD DRIV A
   Galvao I., 2007, P 11 IEEE INT ENT DI
   Grammel B., 2010, P 6 ECMFA TRAC WORKS
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Jimenez A., 2011, 16 JORN ING SOFTW BA
   Jossic A., 2007, INT C SYST ENG MOD I
   Jouault F., 2005, 1 EUR C MOD DRIV ARC
   Jouault F., 2010, P 2010 ACM S APPL CO
   Kirchenham B., 2007, 2007001 EBSE KEEL U
   Kolovos D., 2006, P 2 EUR C MOD DRIV A
   Kurtev I., 2006, P 2006 ACM S APPL CO
   Levendovszky T., 2010, P 6 ECMFA TRAC WORKS
   Mader P., 2009, P 5 EUR C MOD DRIV A
   Margaria T, 2009, COMPUTER, V42, P106, DOI 10.1109/MC.2009.315
   Melby S., 2007, THESIS U OSLO NORWAY
   Naslavsky L., 2005, P 3 INT WORKSH TRAC
   Oldevik J., 2006, P 2 EUR C MOD DRIV A
   Oliveto R., 2008, 12 EUR C SOFTW MAINT
   Olsen G.K., 2007, P 3 EUR C MOD DRIV A
   Paige R., 2008, P 4 EUR C MOD DRIV A
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Ramesh B, 1997, ANN SOFTW ENG, V3, P397, DOI 10.1023/A:1018969401055
   Sánchez P, 2011, IEEE T COMPUT, V60, P1059, DOI 10.1109/TC.2010.149
   Santiago I., 2011, 16 JORN ING SOFTW BA
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sousa A., 2008, P 4 EUR C MOD DRIV A
   Steinberg D., 2008, ECLIPSE SERIES
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Valderas P, 2009, INFORM SOFTWARE TECH, V51, P749, DOI 10.1016/j.infsof.2008.09.008
   Vanhooff B., 2005, 1 EUR C MOD DRIV ARC
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Walderhaug S., 2006, 2 EUR C MOD DRIV ARC
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Yu Y., GRACETR2010
NR 66
TC 38
Z9 45
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1340
EP 1356
DI 10.1016/j.infsof.2012.07.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200004
DA 2024-07-18
ER

PT J
AU Tairas, R
   Gray, J
AF Tairas, Robert
   Gray, Jeff
TI Increasing clone maintenance support by unifying clone detection and
   refactoring activities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Maintenance; Code clones; Refactoring
ID CODE CLONES
AB Context: Clone detection tools provide an automated mechanism to discover clones in source code. On the other side, refactoring capabilities within integrated development environments provide the necessary functionality to assist programmers in refactoring. However, we have observed a gap between the processes of clone detection and refactoring.
   Objective: In this paper, we describe our work on unifying the code clone maintenance process by bridging the gap between clone detection and refactoring.
   Method: Through an Eclipse plug-in called CeDAR (Clone Detection, Analysis, and Refactoring), we forward clone detection results to the refactoring engine in Eclipse. In this case, the refactoring engine is supplied with information about the detected clones to which it can then determine those clones that can be refactored. We describe the extensions to Eclipse's refactoring engine to allow clones with additional similarity properties to be refactored.
   Results: Our evaluation of open source artifacts shows that this process yields considerable increases in the instances of clone groups that may be suggested to the programmer for refactoring within Eclipse.
   Conclusion: By unifying the processes of clone detection and refactoring, in addition to providing extensions to the refactoring engine of an IDE, the strengths of both processes (i.e., more significant detection capabilities and an established framework for refactoring) can be garnered. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Tairas, Robert] AtlanMod, INRIA, Nantes, France.
   [Tairas, Robert] Ecole Mines Nantes, Nantes, France.
   [Gray, Jeff] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Inria; IMT - Institut Mines-Telecom; IMT Atlantique; University of
   Alabama System; University of Alabama Tuscaloosa
RP Tairas, R (corresponding author), AtlanMod, INRIA, Nantes, France.
EM robert.tairas@inria.fr; gray@cs.ua.edu
OI Gray, Jeff/0000-0003-0082-6753
FU National Science Foundation [CCF-0702764]
FX This material is based upon work supported by the National Science
   Foundation under Grant No. CCF-0702764.
CR [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], SAC
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Biegel B., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P237, DOI 10.1109/WCRE.2010.34
   Bulychev Peter, 2009, P INT WORKSH SOFTW C
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Code Clones Literature, 2011, CODE CLONES LIT
   Continuous Quality Assessment Toolkit (ConQAT), 2011, CLON DET
   Copy/Paste Detector (CPD), 2011, COPY PASTE DETECTOR
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Davis I. J., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P242, DOI 10.1109/WCRE.2010.35
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Duplication Management Framework (DMF), 2011, DUPLICATION MANAGEME
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GAMMA E, 1995, DESIGN PATTERNS
   Harder J., 2011, P 5 INT WORKSH SOFTW, P81
   Higo Y, 2009, WORK CONF REVERSE EN, P315, DOI 10.1109/WCRE.2009.39
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juillerat N., 2006, PROC 3 WORKSHOP SOFT, V2006, P63
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Komondoor R, 2003, PROG COMPREHEN, P33
   Koni-N'Sapu G., 2001, THESIS U BERN SWITZE
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lawrence S., 2006, SOFTWARE ENG THEORY
   Lee S., 2005, SDD: high performance code clone detection system for large scale source code, P140
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Li H., 2009, PROC ACM SIGPLAN WOR, P169
   Liu Y., 2004, THESIS U STUTTGART G
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Simian-Similarity Analyser, 2011, SIMIAN SIMILARITY AN
   SimScan, 2010, SIMSCAN
   Sun Y., 2008, P INT C SOFTW LANG E, P178
   Tairas R., 2011, P 5 INT WORKSH SOFTW, P54
   Tairas R., 2009, Companion to the 24th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2009, October 25-29, 2009, Orlando, Florida, P817, DOI [10.1145 /1639950.1640030, DOI 10.1145/1639950.1640030]
   Toomim M, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P173, DOI 10.1109/VLHCC.2004.35
   Zibran M.F., 2011, P 5 INT WORKSH SOFTW, P75
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
NR 46
TC 38
Z9 41
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1297
EP 1307
DI 10.1016/j.infsof.2012.06.011
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200001
DA 2024-07-18
ER

PT J
AU Di Tria, F
   Lefons, E
   Tangorra, F
AF Di Tria, Francesco
   Lefons, Ezio
   Tangorra, Filippo
TI Hybrid methodology for data warehouse conceptual design by UML schemas
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data warehouse; Conceptual design; Requirement analysis; i* Framework;
   UML multidimensional model; Data modelling
ID MODEL; PROFILE
AB Context: Data warehouse conceptual design is based on the metaphor of the cube, which can be derived from either requirement-driven or data-driven methodologies. Each methodology has its own advantages. The first allows designers to obtain a conceptual schema very close to the user needs but it may be not supported by the effective data availability. On the contrary, the second ensures a perfect traceability and consistence with the data sources in fact, it guarantees the presence of data to be used in analytical processing but does not preserve from missing business user needs. To face this issue, the necessity emerged in the last years to define hybrid methodologies for conceptual design.
   Objective: The objective of the paper is to use a hybrid methodology based on different multidimensional models in order to gather all advantages of each of them.
   Method: The proposed methodology integrates the requirement-driven strategy with the data-driven one, in that order, possibly performing alterations of functional dependencies on UML multidimensional schemas reconciled with data sources.
   Results: As case study, we illustrate how our methodology can be applied to the university environment. Furthermore, we evaluate quantitatively the benefits of this methodology by comparing it with some popular and conventional methodologies.
   Conclusion: In conclusion, we highlight how the hybrid methodology improves the conceptual schema quality. Finally, we outline our present work devoted to introduce automatic design techniques in the methodology on the basis of the logical programming. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Di Tria, Francesco; Lefons, Ezio; Tangorra, Filippo] Univ Bari Aldo Moro, Dipartimento Informat, I-70125 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro
RP Di Tria, F (corresponding author), Univ Bari Aldo Moro, Dipartimento Informat, Via Orabona 4, I-70125 Bari, Italy.
EM francescoditria@di.uniba.it; lefons@di.uniba.it; tangorra@di.uniba.it
CR [Anonymous], 2009, Data warehouse design: modern principles and methodologies
   Atzeni P, 2008, VLDB J, V17, P1347, DOI 10.1007/s00778-008-0105-2
   Ballard C., 1998, Data Modeling Techniques for Data Warehousing. s.l
   Bonifati A, 2001, ACM T SOFTW ENG METH, V10, P452, DOI 10.1145/384189.384190
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Chung L., 2000, Non-functional Requirements in Software Engineering
   dell'Aquila C, 2010, LECT NOTES COMPUT SC, V6263, P1, DOI 10.1007/978-3-642-15105-7_1
   Dell'Aquila C, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P211, DOI 10.1109/ISCIS.2009.5291846
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Golfarelli M, 1998, INT J COOP INF SYST, V7, P215, DOI 10.1142/S0218843098000118
   Golfarelli M, 1998, P ANN HICSS, P334, DOI 10.1109/HICSS.1998.649228
   Hahn K., 2000, P 3 ACM INT WORKSHOP, P9
   Lechtenbörger J, 2003, INFORM SYST, V28, P415, DOI 10.1016/S0306-4379(02)00024-8
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   Mazon J.N., 2005, REBNITA, V5, P44
   Mazón JN, 2007, DATA KNOWL ENG, V63, P725, DOI 10.1016/j.datak.2007.04.004
   Mazón JN, 2006, LECT NOTES COMPUT SC, V4215, P385
   Mazón JN, 2009, SIGMOD REC, V38, P12, DOI 10.1145/1815918.1815920
   *OBJ MAN GROUP, 2008, MET FAC 2 0 QUER VIE
   Object Management Group, 2002, MET FAC SPEC VERS 1
   Object Management Group, 2003, COMM WAR MET SPEC VE, V1
   Phipps C., 2002, Proc. 4th Intl. Work. DMDW, P23
   Purchase HC, 1996, LECT NOTES COMPUT SC, V1027, P435, DOI 10.1007/BFb0021827
   Rahayu JW, 2000, INFORM SOFTWARE TECH, V42, P571, DOI 10.1016/S0950-5849(00)00103-8
   Rizzi S, 2001, P INT C DAT ENG DEM, P7
   Romero O, 2006, LECT NOTES COMPUT SC, V4081, P85
   Romero O, 2010, DATA KNOWL ENG, V69, P917, DOI 10.1016/j.datak.2010.03.006
   Romero O, 2009, INT J DATA WAREHOUS, V5, P1, DOI 10.4018/jdwm.2009040101
   Schneider M, 2008, INT J PROD ECON, V112, P309, DOI 10.1016/j.ijpe.2006.11.027
   Serrano M., 2003, EFFECTIVE DATABASES, P156, DOI DOI 10.4018/978-1-93177-747-6.CH010
   Serrano M, 2007, INFORM SOFTWARE TECH, V49, P851, DOI 10.1016/j.infsof.2006.09.008
   Stefanov V, 2007, LECT NOTES COMPUT SC, V4802, P137
   Wu L, 2001, INFORM SOFTWARE TECH, V43, P109, DOI 10.1016/S0950-5849(00)00143-9
   Yu Eric., 1998, P 4 INT WORKSHOP REQ, P15
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 35
TC 19
Z9 19
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 360
EP 379
DI 10.1016/j.infsof.2011.11.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100003
DA 2024-07-18
ER

PT J
AU Lassen, KB
   van der Aalst, WMP
AF Lassen, Kristian Bisgaard
   van der Aalst, Wil M. P.
TI Complexity metrics for Workflow nets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metrics; Petri nets; Understandability
ID PROCESS MODELS; VERIFICATION; INHERITANCE
AB Process modeling languages such as EPCs, BPMN, flow charts, UML activity diagrams, Petri nets, etc., are used to model business processes and to configure process-aware information systems. It is known that users have problems understanding these diagrams. In fact, even process engineers and system analysts have difficulties in grasping the dynamics implied by a process model. Recent empirical studies show that people make numerous errors when modeling complex business processes, e.g., about 20% of the EPCs in the SAP reference model have design flaws resulting in potential deadlocks, livelocks, etc. It seems obvious that the complexity of the model contributes to design errors and a lack of understanding. It is not easy to measure complexity, however. This paper presents three complexity metrics that have been implemented in the process analysis tool ProM. The metrics are defined for a subclass of Petri nets named Workflow nets, but the results can easily be applied to other languages. To demonstrate the applicability of these metrics, we have applied our approach and tool to 262 relatively complex Protos models made in the context of various student projects. This allows us to validate and compare the different metrics. It turns out that our new metric focusing on the structuredness outperforms existing metrics. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Lassen, Kristian Bisgaard] Univ Aarhus, Dept Comp Sci, DK-8200 Aarhus N, Denmark.
   [van der Aalst, Wil M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Aarhus University; Eindhoven University of Technology
RP Lassen, KB (corresponding author), Univ Aarhus, Dept Comp Sci, IT Parken,Aabogade 34, DK-8200 Aarhus N, Denmark.
EM K.B.Lassen@daimi.au.dk; w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940
CR Kindler E, 2000, LECT NOTES COMPUT SC, V1806, P235
   Kindler E, 1999, INFORM PROCESS LETT, V70, P269, DOI 10.1016/S0020-0190(99)00074-5
   Martens A., 2003, PETRI NET NEWSLETTER, V65, P12
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mendling J, 2006, LECT NOTES COMPUT SC, V4102, P451
   Mendling J, 2008, LECT NOTES BUS INF P, V7, P142
   Mendling J, 2007, LECT NOTES COMPUT SC, V4803, P113
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   van der Aalst WMP, 2007, LECT NOTES COMPUT SC, V4546, P484
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3098, P1
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2002, SCI COMPUT PROGRAM, V42, P129, DOI 10.1016/S0167-6423(01)00005-3
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   van Glabbeek RJ, 2003, LECT NOTES COMPUT SC, V2678, P184
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 24
TC 67
Z9 75
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 610
EP 626
DI 10.1016/j.infsof.2008.08.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 400TM
UT WOS:000262891500006
DA 2024-07-18
ER

PT J
AU Postmus, D
   Wijngaard, J
   Wortmann, H
AF Postmus, Douwe
   Wijngaard, Jacob
   Wortmann, Hans
TI An economic model to compare the profitability of pay-per-use and
   fixed-fee licensing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software pricing; Pay-per-use licensing; Fixed-fee licensing;
   Mathematical modeling
ID SWITCHING COSTS; SOFTWARE; COMPETITION
AB This paper develops an economic model to compare the profitability of two strategies for the pricing of packaged software: fixed-fee and pay-per-use licensing. It is assumed that the market consists of a monopoly software vendor who is selling packaged software to Customers who are homogeneous in marginal value of software use but heterogeneous in level of use. In addition to obtaining the software package from the market, customers can develop the required software in-house. When in-house development costs are constant across customers, the results show that the software vendor prefers pay-per-use licensing over fixed-fee licensing if in-house development is relatively expensive, whereas fixed-fee licensing is optimal if the cost of in-house development drops below a certain threshold value. When the assumption of a constant in-house development cost is relaxed by letting it vary among customers, it still holds that pay-per-use licensing is optimal if its average is relatively large. For low and medium values of the average cost of in-house development, however, fixed-fee licensing may no longer be optimal as the relative attractiveness of the two licensing strategies now depends on flow dispersed the in-house development costs of individual Customers are. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Postmus, Douwe; Wortmann, Hans] Univ Groningen, Dept Business, NL-9700 AV Groningen, Netherlands.
   [Postmus, Douwe; Wortmann, Hans] Univ Groningen, ICT, NL-9700 AV Groningen, Netherlands.
   [Wijngaard, Jacob] Univ Groningen, Dept Operat, NL-9700 AV Groningen, Netherlands.
C3 University of Groningen; University of Groningen; University of
   Groningen
RP Postmus, D (corresponding author), Univ Groningen, Dept Business, POB 800, NL-9700 AV Groningen, Netherlands.
EM d.postmus@rug.nl; j.wijngaard@rug.nl; j.c.wortmann@rug.nl
RI Wortmann, Johan C/J-9677-2012; Postmus, Douwe/AAF-5454-2021
OI Postmus, Douwe/0000-0002-9458-7038; Wortmann, Johan/0000-0002-8138-6931
CR [Anonymous], 2000, Simulation Modeling and Analysis
   [Anonymous], 1992, Microeconomic analysis
   Bontis N, 2000, INTERNET RES, V10, P246, DOI 10.1108/10662240010331993
   Burnham TA, 2003, J ACAD MARKET SCI, V31, P109, DOI 10.1177/0092070302250897
   Choudhary V., 1998, Journal of Organizational Computing and Electronic Commerce, V8, P277, DOI 10.1207/s15327744joce0804_2
   Choudhary V, 2007, J MANAGE INFORM SYST, V24, P141, DOI 10.2753/MIS0742-1222240206
   CUSAMO MA, 2007, COMMUN ACM, V50, P19
   Forsythe GE., 1977, Computer methods for mathematical computations
   Gurnani H, 2001, J OPER RES SOC, V52, P64, DOI 10.1057/palgrave.jors.2601046
   JIANG BJ, 2006, SOFTWARE PRICING PAY
   KATZ ML, 1985, AM ECON REV, V75, P424
   KLEMPERER P, 1995, REV ECON STUD, V62, P515, DOI 10.2307/2298075
   Murtojaervi M, 2007, IEEE T SOFTWARE ENG, V33, P305, DOI 10.1109/TSE.2007.1003
   Nocedal J., 1999, NUMERICAL OPTIMIZATI
   Olsen KA, 2007, INFORM SYST J, V17, P37, DOI 10.1111/j.1365-2575.2006.00229.x
   Shapiro C., 1999, Information rules: A strategic guide to the network economy
   Sundararajan A, 2004, MANAGE SCI, V50, P1660, DOI 10.1287/mnsc.1040.0291
   THIBODEAU P, 2005, COMPUTERWORLD, V39, P38
   Zhang J., 2003, P 2003 CSM ANN M CHI, P276
NR 19
TC 9
Z9 18
U1 2
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 581
EP 588
DI 10.1016/j.infsof.2008.08.004
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 400TM
UT WOS:000262891500003
DA 2024-07-18
ER

PT J
AU Wang, AI
   Arisholm, E
AF Wang, Alf Inge
   Arisholm, Erik
TI The effect of task order on the maintainability of object-oriented
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented design; Object-oriented programming; Maintainability;
   Maintenance planning; Software maintenance; Schedule and organizational
   issues
ID MENTAL REPRESENTATIONS; COMPREHENSION; INFORMATION; PROGRAMS
AB This paper presents results from a quasi-experiment that investigates how the sequence in which maintenance tasks are performed affects the time required to perform them and the functional correctness of the changes made. Specifically, the study compares how time required and correctness are affected by (1) starting with the easiest change task and progressively performing the more difficult tasks (Easy-First), versus (2) starting with the most difficult change task and progressively performing the easier tasks (Hard-First), In both cases, the experimental tasks were performed on two alternative types of design of a Java system to assess whether the choice of the design strategy moderates the effects of task order on effort and correctness.
   The results show that the time spent on making the changes is not affected significantly by the task order of the maintenance tasks, regardless of the type of design. However, the correctness of the maintainability tasks is significantly higher when the task order of the change tasks is Easy-First compared to Hard-First, again regardless of design. A possible explanation for the results is that a steeper learning curve (Hard-First) causes the programmer to create software that is less maintainable overall. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Wang, Alf Inge] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
   [Arisholm, Erik] Simula Res Lab, N-1325 Lysaker, Norway.
   [Arisholm, Erik] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 Norwegian University of Science & Technology (NTNU); University of Oslo
RP Wang, AI (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Sem Saelandsvei 7-9, N-7491 Trondheim, Norway.
EM alfw@idi.ntnu.no; erika@simula.no
RI Wang, Alf Inge/AGH-1875-2022
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], CONTROLLED EXPT PROF
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2001, EMPIRICAL ASSESSMENT
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   BERGIN S, 2003, J SOFTWARE MAINTENAN, V15, P254
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Charette RN, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.589232
   COCKBURN A, 1998, C C USERS J      MAY
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   GREFEN D, 1996, P IEEE INT C SOFTW M, P134
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hatton L, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.58
   *INT ORG STAND, 1992, ISO9126
   Jeffries R., 1982, AERA ANN M
   Johnson DL, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.854067
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LETOVSKY S, 1986, IEEE SOFTWARE, V3, P41, DOI 10.1109/MS.1986.233414
   LETOVSKY S, 1986, P 1 WORKSH EMP STUD, P58
   Lott C.M., 1994, P 19 SOFTW ENG WORKS, P297
   Mosemann R, 2001, PROG COMPREHEN, P79, DOI 10.1109/WPC.2001.921716
   MYERS RAYMONDH., 2001, Generalized Linear Models with Applications in Engineering and the Sciences
   Nanja M., 1987, EMPIRICAL STUDIES PR, P172
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Poole CJ, 2001, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2001.972743
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   RAMOS CS, 2004, P 8 EUR C SOFTW MAIN, P48
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   SNEED H, 2007, P 11 EUR C SOFTW MAI, P171
   Soloway E., 1988, The nature of expertise, P129
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   VESSEY I, 1985, INT J MAN MACHINE ST, V23
   von Mayrhauser A., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P157, DOI 10.1145/266399.266414
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   Wiedenbeck S, 1999, INT J HUM-COMPUT ST, V51, P71, DOI 10.1006/ijhc.1999.0269
   Wu C F J., 2011, Experiments: Planning, Analysis, and Optimization
NR 46
TC 10
Z9 11
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 293
EP 305
DI 10.1016/j.infsof.2008.03.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900005
DA 2024-07-18
ER

PT J
AU Chang, CK
   Jiang, HY
   Di, Y
   Zhu, D
   Ge, YJ
AF Chang, Carl K.
   Jiang, Hsin-yi
   Di, Yu
   Zhu, Dan
   Ge, Yujia
TI Time-line based model for software project scheduling with genetic
   algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE genetic algorithm; optimization; project management; scheduling; task
   assignment
ID OPTIMIZATION
AB Effective management of complex software projects depends oil the ability to solve complex, Subtle optimization problems. Most studies on software project management do not pay enough attention to difficult problems Such as employee-to-task assignments, which require optimal schedules and careful use of resources. Commercial tools, Such as Microsoft Project, assume that managers as users are capable of assigning tasks to employees to achieve the efficiency of resource utilization, while the project continually evolves. Our earlier work applied genetic algorithms (GAs) to these problems. This paper extends that work, introducing a new, richer model that is capable of more realistically simulating real-world situations. The new model is described along with a new GA that produces optimal or near-optimal schedules. simulation results Show that this new model enhances the ability of GA-based approaches, while providing decision support under more realistic conditions. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Chang, Carl K.; Jiang, Hsin-yi] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Di, Yu] Univ Illinois, Dept Comp Sci, Chicago, IL USA.
   [Zhu, Dan] Iowa State Univ, Coll Business, Ames, IA 50011 USA.
   [Ge, Yujia] Zhejiang Gongshang Univ, Dept Comp Sci, Hangzhou, Zhejiang, Peoples R China.
C3 Iowa State University; University of Illinois System; University of
   Illinois Chicago; University of Illinois Chicago Hospital; Iowa State
   University; Zhejiang Gongshang University
RP Jiang, HY (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
EM hsinyij@iastate.edu
CR ABU G, 2005, SOFTWARE ENG SE
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1994, Advances in neural information processing systems
   [Anonymous], Project Management for Small Business - An Introduction
   [Anonymous], THESIS MIT
   BEYER HG, 2002, CL13902 U DORTM
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Brooks Frederick P., 1995, The mythical man-month
   CHAN WT, 1996, J CONSTR ENG M ASCE, P125
   Chang CK, 1999, IEEE SOFTWARE, V16, P80, DOI 10.1109/52.805479
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Chao C, 1994, THESIS U ILLINOIS CH
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Coley D.A., 1999, An Introduction to Genetic Algorithms for Scientists and Engineers
   Felfernig A., 2004, INT C EC TECHNICAL O, P109
   Fogel D.B., 1995, EVOLUTIONARY COMPUTA
   Galorath D.D., 2006, SOFTWARE SIZING ESTI
   Garmus David., 2001, AW INFORMAT
   Glover F., 1990, ORSA Journal on Computing, V2, P4, DOI [10.1287/ijoc.1.3.190, 10.1287/ijoc.2.1.4]
   Hegazy T, 2003, J CONSTR ENG M ASCE, V129, P396, DOI 10.1061/(ASCE)0733-9364(2003)129:4(396)
   Hindi KS, 2002, IEEE T EVOLUT COMPUT, V6, P512, DOI 10.1109/TEVC.2002.804914
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Horn J., 1995, FDN GENETIC ALGORITH, V3, P243
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Kerzner H., 2010, PROJECT MANAGEMENT B, V2nd
   Kerzner H., 2003, PROJECT MANAGEMENT S
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   PLEKHANOVA V, LECT NOTES COMPUTER, P116
   Rees J, 2006, EUR J OPER RES, V175, P806, DOI 10.1016/j.ejor.2005.04.045
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sommerville I, 2001, Software Engineering
   Valls V, 2008, EUR J OPER RES, V185, P495, DOI 10.1016/j.ejor.2006.12.033
   WALL M, C LIB ALGORITHM COMP
   2003, J SOFTWARE MAINTENAN, V15, P71
NR 41
TC 69
Z9 78
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1142
EP 1154
DI 10.1016/j.infsof.2008.03.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200007
DA 2024-07-18
ER

PT J
AU Yang, LH
   Lee, ML
   Hsu, W
   Huang, DC
   Wong, LS
AF Yang, Liang Huai
   Lee, Mong Li
   Hsu, Wynne
   Huang, Decai
   Wong, Limsoon
TI Efficient mining of frequent XML query patterns with repeating-siblings
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML query pattern; tree pattern mining; frequent pattern mining;
   structured pattern
ID LENGTH
AB A recent approach to improve the performance of XML query evaluation is to cache the query results of frequent query patterns. Unfortunately, discovering these frequent query patterns is an expensive operation. In this paper, we develop a two-pass mining algorithm 2PXMiner that guarantees the discovery of frequent query patterns by scanning the database at most twice. By exploiting a transaction summary data structure, and an enumeration tree, we are able to determine the upper bounds of the frequencies of the candidate patterns, and to quickly prune away the infrequent patterns. We also design an index to trace the repeating candidate subtrees generated by sibling repetition, thus avoiding redundant computations. Experiments results indicate that 2PXMiner is both efficient and scalable. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Yang, Liang Huai; Huang, Decai] Zhejiang Univ Technol, Coll Informat Engn, Hangzhou, Peoples R China.
   [Lee, Mong Li; Hsu, Wynne; Wong, Limsoon] Natl Univ Singapore, Sch Comp, Singapore 117548, Singapore.
C3 Zhejiang University of Technology; National University of Singapore
RP Yang, LH (corresponding author), Zhejiang Univ Technol, Coll Informat Engn, Hangzhou, Peoples R China.
EM yang.lianghuai@gmail.com; leeml@comp.nus.edu.sg; whsu@comp.nus.edu.sg;
   hdc@zjut.edu.cn; wongls@comp.nus.edu.sg
RI Wong, Limsoon/W-3611-2019; huang, decai/H-4080-2012
OI Wong, Limsoon/0000-0003-1241-5441; Hsu, Wynne/0000-0002-4142-8893; Yang,
   Liang Huai/0000-0002-4297-4845; Lee, Mong Li/0000-0002-9636-388X
CR Agrawal R., 1994, P 20 INT C VER LARG, P487
   [Anonymous], 2005, PVLDB
   Asai T, 2002, SIAM PROC S, P158
   Borgelt C, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P51, DOI 10.1109/ICDM.2002.1183885
   Chen L., 2002, XCache: a semantic caching system for XML queries, P618
   Chi Y, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P509
   Chung C.W., 2002, P ACM SIGMOD INT C M, P121, DOI DOI 10.1145/564691.564706
   Cong G, 2002, SIAM PROC S, P175, DOI 10.1137/1.9781611972726.11
   Cook DJ, 1993, J ARTIF INTELL RES, V1, P231, DOI 10.1613/jair.43
   Cook DJ, 2000, IEEE INTELL SYST APP, V15, P32, DOI 10.1109/5254.850825
   COOK ER, 1995, HOLOCENE, V5, P229, DOI 10.1177/095968369500500211
   DEHASPE L, 1998, FINDING FREQUENT SUB, P30
   FENG J, 2006, ACM S APPL COMP, P517
   GUPTA A, 2002, VIEW SELECTION STREA
   GUPTA AK, 2003, VIEW SELECTION PROBL
   GUPTA H, 1997, SELECTION VIEWS MAT, P98
   HRISTIDIS V, 2002, SEMANTIC CACHING XML
   HSIEH M, 2006, SIAM C DAT MIN, P628
   HU H, 2005, MINING COHERENT DENS, P213
   Huan J, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P549
   INOKUCHI A, 2002, RT0448 TOK RES LAB I
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   KIKLAU G, 2002, CONTAINMENT EQUIVALE, P65
   Kuramochi M, 2005, DATA MIN KNOWL DISC, V11, P243, DOI 10.1007/s10618-005-0003-9
   Kuramochi M., 2004, SIAM INT C DAT MIN S
   KURAMOCHI M, 2001, FREQUENT SUBGRAPH DI, P313
   Li GL, 2006, IEEE DATA MINING, P350
   MANDHANI B, 2005, 31 VLDB C, P469
   March L.X., 2001, IEEE Data Engineering Bulletin, V24, P40
   RAO P, 2006, SKETCHTREE APPROXIMA, P80
   REYNER SW, 1977, SIAM J COMPUT, V6, P730, DOI 10.1137/0206053
   SHASHA D, 2004, UNORDERED TREE MININ, P708
   Shasha Dennis, 2002, P PRINC DAT SYST POD, P39, DOI DOI 10.1145/543613.543620
   Tan H, 2005, WIT TRANS INFO COMM, P287
   TERMIER A, 2002, TREEFINDER 1 STEP XM, P450
   WAN JW, 2003, EXTRACTING ASS RULES, P94
   WANG JTL, 1996, ACM SIGKDD, P70
   Wang K, 2000, IEEE T KNOWL DATA EN, V12, P353, DOI 10.1109/69.846290
   Wong KF, 2006, WORLD WIDE WEB, V9, P277, DOI 10.1007/s11280-006-8557-z
   YAN X, 2005, MINING CLOSED RELATI, P357
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   YANG LH, 2004, 2PXMINER EFFICIENT 2, P731
   YANG LH, 2003, EFFICIENT MINING XML, P69
   YANG LH, 2002, MINING FREQUENT QUER, P355
   ZAKI MJ, 2002, EFFICIENTLY MINING F, P71
   ZHANG J, 2003, BUILDING XML DATA WA, P99
NR 46
TC 10
Z9 11
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 375
EP 389
DI 10.1016/j.infsof.2007.02.019
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200002
DA 2024-07-18
ER

PT J
AU Kim, CJ
   Chung, HS
   Cho, ES
AF Kim, Chul Jin
   Chung, Hyun Sook
   Cho, Eun Sook
TI Micro and macro workflow variability design techniques of component
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE component variability; micro/macro workflow; reusability
AB Components should provide variability in satisfying a variety of domains [C. Szyperski, Component Software: Beyond Object-Oriented Programming, Addison-Wesley, 2002.], but it is not easy to develop components which can be applied to all domains. Although components are developed by analyzing many different requirements, developing components that satisfy all requirements is difficult since unexpected requirements occur during the utilization of components. Hence, providing the variability of components becomes an important prerequisite for a successful component-based application development.
   In this paper, we propose a variability design technique that can satisfy the business workflow requirements of many different kinds of domains. The technique addresses a method for designing the variability of the workflow in a more detailed method and uses an object-oriented mechanism and design patterns. One of the most important goals of this technique is to provide a practical process can be effectively applied in component-based application development. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Cho, Eun Sook] Seoil Coll, Dept Software, Seoul 131702, South Korea.
   [Kim, Chul Jin] Samsung Electron Co Ltd, Digital Solut Ctr, Architecture Grp, Seoul 135524, South Korea.
   [Chung, Hyun Sook] Chosun Univ, Dept Comp Engn, Kwangju 501759, South Korea.
C3 Samsung; Chosun University
RP Cho, ES (corresponding author), Seoil Coll, Dept Software, Seoul 131702, South Korea.
EM escho@seoil.ac.kr
CR AMERICA P, 2000, KLUWER INT SERIES SO, P15
   ANASTASOPOULOS M, 2000, 08900E IESE
   [Anonymous], 1995, Design patterns for object-oriented software development
   Atkinson C., 2001, COMPONENT BASED PROD
   BERGNER K, 2000, ADAPTATION STRATEGIE
   BERGNER K, COMPONENTWARE BIG PI
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   FOLMER E, 2003, P WORKSH BRIDG GAPS
   FOWLER M, 1998, UML DISTILLED APPL S
   HOPKINS J, 2000, COMMUNICATIONS ACM, V43
   *HP CO, 1998, ENG PROC SUMM FUS 2
   *ISO IEC, 2001, N2419 ISO IEC JTC1 S
   JEFFREY SP, 1994, MEASURING SOFTWARE R
   JOSE C, 1996, NEXT GENERATION OBJE
   KANG K, 1999, INT WORKSH COMP BAS
   KANG K., 1990, CMUSEI90TR21 SEI
   KIM C, 2005, LECT NOTES ARTIF INT, V3397, P460
   KIM S, 2003, C QM PRACTICAL QUALI
   LEE SD, 1999, APSEC 99, P54
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   MATINLASSI M, 2002, VTT PUBLICATIONS, V456
   Muthig Dirk., 2002, Net. ObjectDays: International Conference on Object-Oriented and Internet-Based Technologies, Concepts, P313
   RAUSCH A, 2000, P 22 INT C SOFTW ENG
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHORT K, 1997, TECHNICAL HDB VERSIO
   *STERL SOFTW INC, 1998, CBD STAND VERS 2 1
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   WEISS DM, 1998, 2 INT WORKSH DEV EV
NR 28
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 259
EP 279
DI 10.1016/j.infsof.2007.01.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261UL
UT WOS:000253105400002
DA 2024-07-18
ER

PT J
AU Anquetil, N
   de Oliveira, KM
   de Sousa, KD
   Dias, MGB
AF Anquetil, Nicolas
   de Oliveira, Kathia M.
   de Sousa, Kleiber D.
   Dias, Marcio G. Batista
TI Software maintenance seen as a knowledge management issue
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software maintenance; software evolution; knowledge management; post
   mortem analysis; ontology; project revision; post partum analysis
ID ONTOLOGY; POSTMORTEM; EXPERIENCE
AB Creating and maintaining software systems is a knowledge intensive task. One needs to have a good understanding of the application domain, the problem to solve and all its requirements, the software process used, technical details of the programming language(s), the system's architecture and how the different parts fit together, how the system interacts with its environment, etc. All this knowledge is difficult and costly to gather. It is also difficult to store and usually lives only in the mind of the software engineers who worked on a particular project.
   If this is a problem for development of new software, it is even more for maintenance, when one must rediscover lost information of an abstract nature from legacy source code among a swarm of unrelated details.
   In this paper, we submit that this lack of knowledge is one of the prominent problems in software maintenance. To try to solve this problem, we adapted a knowledge extraction technique to the knowledge needs specific to software maintenance. We explain how we explicit the knowledge discovered on a legacy software during maintenance so that it may be recorded for future use. Some applications on industry maintenance projects are reported. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Catolica Brasilia, Brasilia, DF, Brazil.
   Univ Ctr Goias, Anhanguera, Go, Brazil.
C3 Universidade Catolica de Brasilia
RP Anquetil, N (corresponding author), Univ Catolica Brasilia, SGAN 916,Modulo B, Brasilia, DF, Brazil.
EM anquetil@ucb.br
OI Marcal de Oliveira, Kathia/0000-0001-8146-5966; Anquetil,
   Nicolas/0000-0003-1486-8399
CR BASILI V, 2001, P 26 ANN NASA GODD S
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   BOOCH G, 1998, UNIFIED MODELING LAN
   BRIAND LC, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P38, DOI 10.1109/ICSM.1994.336791
   CAROLYN B, 2000, INT WORKSH EMP STUD
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Davenport T. H., 1998, Working Knowledge: How Organizations Manage What They Know
   de Oliveira KM, 2004, J SYST SOFTWARE, V72, P145, DOI 10.1016/S0164-1212(03)00233-4
   DERIDDER D, 2002, FACILITATING SOFTWAR
   Dias MGB, 2003, J UNIVERS COMPUT SCI, V9, P641
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   DINGSOYR T, 2001, LECT NOTES COMPUTER, V2188, P167
   Fox MS, 1996, COMPUT IND, V29, P123, DOI 10.1016/0166-3615(95)00079-8
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Gruninger M., 1995, Workshop on Basic Ontological Issues in Knowledge Sharing, IJCAI-95
   Guarino N, 1998, FR ART INT, V46, P3
   *ISO IEC, 1995, 12207 ISO IEC
   *ISO IEC, 1999, 14764 ISO IEC
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Kerth N. L., APPROACH POSTMORTA P
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   KLEIBER D, 2004, LECT NOTES COMPUTER, P67
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Pfleeger SL, 2002, IEEE SOFTWARE, V19, P64, DOI 10.1109/MS.2002.1049393
   PIGOSKI TM, 1996, PRACT SOFTWARE MAINT
   RISING L, 1999, P 23 ANN INT COMP SO
   Rodríguez OM, 2004, LECT NOTES COMPUT SC, V3213, P1181
   Rodríguez OM, 2004, LECT NOTES COMPUT SC, V3096, P78
   Ruiz F, 2004, INT J SOFTW ENG KNOW, V14, P323, DOI 10.1142/S0218194004001646
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Schneider K, 2002, IEEE SOFTWARE, V19, P46, DOI 10.1109/MS.2002.1003453
   STALHANE T, 2001, P EUR SOFTW PROC IMP
   Tiwana A., 2000, The knowledge management toolkit: Practical techniques for building a knowledge management system
   VALETT KJ, 1994, P 19 ANN SOFTW ENG W
   VICTOR R, 2001, P 13 INT C SOFTW ENG, P102
   von Mayrhauser A., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P74, DOI 10.1109/WPC.1994.341253
   YOURDON, 2001, MINIPOSTMORTEMS
NR 42
TC 33
Z9 43
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 515
EP 529
DI 10.1016/j.infsof.2006.07.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200007
DA 2024-07-18
ER

PT J
AU Samuel, P
   Mall, R
   Kanth, P
AF Samuel, Philip
   Mall, Rajib
   Kanth, Pratyush
TI Automatic test case generation from UML communication diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML based testing; cluster level testing; automatic test case
   generation; communication diagram
AB We present a method to generate cluster level test cases based on UML communication diagrams. In our approach, we first construct a tree representation of communication diagrams. We then carry out a post-order traversal of the constructed tree for selecting conditional predicates from the communication diagram. We transform the conditional predicates on the communication diagram and apply function minimization technique to generate the test data. The generated test cases achieve message paths coverage as well as boundary coverage. We have implemented our technique and tested it on several example problems. (c) 2006 Elsevier B.V. All rights reserved.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Samuel, P (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM philips@cusat.ac.in; rajib@cse.iitkgp.ernet.in
RI Jaafar, Mohamad Farid/B-4563-2010
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Abdurazik A., 2004, A controlled experimental evaluation of test cases generated from UML diagrams
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], 2005, UN MOD LANG SPEC VER
   BASANIERI F, 2002, LNCS, V2460, P383
   BERTOLINO A, 2000, P 4 INT SOFTW SYST M
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Cavalli A, 2005, ELECTRON NOTES THEOR, V116, P133, DOI 10.1016/j.entcs.2004.02.072
   Cavarra A, 2004, INFORM SOFTWARE TECH, V46, P309, DOI 10.1016/j.infsof.2003.09.004
   Chen HY, 2003, IEEE SYS MAN CYBERN, P1064
   CHEN HY, 2001, ACM T SOFTW ENG METH, V10, P56109
   DINHTRONG TT, 2004, DOCT S 7 INT C UN MO
   FRAIKIN F, 2000, P 17 IEEE INT C AUT, P261
   Ghosh S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P332
   HAJNAL A, 1998, P ACM SIGSOFT INT S
   HARTMANN J, 2000, P INT S SOFTW TEST A
   Hartmann J, 2005, INNOV SYST SOFTW ENG, V1, P12, DOI 10.1007/s11334-005-0006-0
   JENG B, 1994, ACM T SOFTW ENG METH, V3
   KANSOMKEAT S, 2003, P SAICSIT 2003 ACM, P296
   Kim SK, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P100
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Mall R., 2003, FUNDAMENTALS SOFTWAR
   McQuillan J., 2005, A Survey of UML-Based Coverage Criteria for Software Testing. Technical report
   *N M INC, MAG UML VERS 9 5
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Ostrand T.J., 1998, COMMUNICATIONS ACM, V31
   Pilskalns O, 2003, LECT NOTES COMPUT SC, V2863, P234
   ROUNTVED A, 2005, P 8 INT C FUND APP S, P234
   Scheetz M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P250, DOI 10.1109/ISSRE.1999.809330
   Smith D, 2005, MATER WORLD, V13, P3
   Supavita S, 2005, ITCC 2005: International Conference on Information Technology: Coding and Computing, Vol 2, P449, DOI 10.1109/ITCC.2005.269
   Wang LZ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P284, DOI 10.1109/APSEC.2004.55
NR 33
TC 27
Z9 29
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 158
EP 171
DI 10.1016/j.infsof.2006.04.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300006
DA 2024-07-18
ER

PT J
AU Pardede, E
   Rahayu, JW
   Taniar, D
AF Pardede, Eric
   Rahayu, J. Wenny
   Taniar, David
TI Object-relational complex structures for XML storage
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE object relational database; user-defined type; row type; collection
   type; XML; XML schema
AB XML data can be stored in various database repositories, including Object-Relational Database (ORDB). Using an ORDB, we get the benefit of the relational maturity and the richness of Object-Oriented modeling, including various complex data types. These data types resemble the true nature of XML data and therefore, the conceptual semantic of XML data can be preserved. However, very often when the data is stored in an ORDB repository, they are treated as purely flat tables. Not only do we not fully utilize the facilities in current ORDB, but also we do not preserve the conceptual semantic of the XML data.
   In this paper, we propose novel methodologies to store XML data into new ORDB data structures, such as user-defined type, row type and collection type. Our methodology has preserved the conceptual relationship structure in the XML data, including aggregation, composition and association. For XML data retrieval, we also propose query classification based on the current SQL.
   Compared to the existing techniques, this work has several contributions. Firstly, it utilizes the newest features of ORDB for storing XML data. Secondly, it covers a full database design process, from the conceptual to the implementation phase. Finally, the proposed transformation methodologies maintain the conceptual semantics of the XML data by keeping the structure of the data in different ORDB complex structures. (C) 2006 Elsevier B.V. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3083, Australia.
   Monash Univ, Sch Business Syst, Clayton, Vic 3800, Australia.
C3 La Trobe University; Monash University
RP Pardede, E (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3083, Australia.
EM E.Pardede@latrobe.edu.au; wenny@cs.latrobe.edu.au;
   david.taniar@infotech.monash.edu.au
RI Pardede, Eric/AEA-2046-2022
OI Pardede, Eric/0000-0001-8218-2343
CR Almarimi A, 2005, INT J WEB INF SYST, V1, P25, DOI 10.1108/17440080580000080
   [Anonymous], [No title captured]
   BOURRET R, 2004, MAPPING DTDS DATABAS
   Cattell R.G. G., 2000, OBJECT DATABASE STAN
   *CODASYL DAT TASK, 1971, DAT BAS TASK GROUP R
   Elmasri R., 2002, Fundamentals of Database System"
   Feng L, 2002, ACM T INFORM SYST, V20, P390, DOI 10.1145/582415.582417
   Feng L., 2005, Int. J. Bus. Intell. Data Min, V1, P22
   Florescu D., 1999, B TECHNICAL COMMITTE, V22, P27
   FORTIER P, 1999, SQL3 IMPLEMENTING SQ
   HAN WS, 2003, J OBJECT TECHNOLOGY, V2, P113
   *IP, 2004, IP XML DAT
   Jaeschke G., 1982, PODS 82, P124, DOI DOI 10.1145/588111.588133
   Jagadish HV, 2002, VLDB J, V11, P274, DOI 10.1007/s00778-002-0081-x
   KLETTKE M, 2000, P WEBDB 2000, P151
   MELTON J, 2002, DATABASE LANGUAGE 2
   Nassis V., 2005, International Journal of Data Warehousing and Mining, V1, P63, DOI 10.4018/jdwm.2005070104
   Pardede E, 2003, STANDARDIZATION AND INNOVATION IN INFORMATION TECHNOLOGY, PROCEEDINGS, P191
   PARDEDE E, 2005, P AINA 2005 IEEE COM, V2, P695
   PARDEDE E, 2004, P ACM SAC 2004, P703
   Pardede E, 2005, INT J WEB INF SYST, V1, P65, DOI 10.1108/17440080580000084
   Rahayu JW, 2001, DATA KNOWL ENG, V38, P265, DOI 10.1016/S0169-023X(01)00026-X
   Roth Mark A., 1987, P INT C MAN DAT SIGM, P143
   Rusu L. I., 2005, International Journal of Data Warehousing and Mining, V1, P23, DOI 10.4018/jdwm.2005040102
   Schewe KD, 2005, INT J WEB INF SYST, V1, P5, DOI 10.1108/17440080580000078
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   *SOFTW AG, 2004, TAMINO 1 XML MAN
   Vlist E., 2002, XML SCHEMA
   Widjaya ND, 2003, LECT NOTES COMPUT SC, V2877, P251
   WIDJAYA ND, 2002, P 4 INT C INF INT WE, P135
   Xiao RG, 2001, LECT NOTES COMPUT SC, V2113, P795
NR 31
TC 16
Z9 17
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 370
EP 384
DI 10.1016/j.infsof.2005.12.015
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800003
DA 2024-07-18
ER

PT J
AU Müller, MM
AF Mueller, Matthias M.
TI A preliminary study on the impact of a pair design phase on pair
   programming and solo programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE pair programming; preliminary study; post-development test-cases
AB The drawback of pair programming is the nearly doubled personnel cost. The extra cost of pair programming originates from the strict rule of extreme programming where every line of code should be developed by a pair of developers. Is this rule not a waste of resources? Is it not possible to gain a large portion of the benefits of pair programming by only a small fraction of the meeting time of a pair programming session? We conducted a preliminary study to answer this question by splitting the pair programming process into a pair design and a pair implementation phase. The pair implementation phase is compared to a solo implementation phase, which in turn was preceeded by a pair design phase, as well. The study is preliminary as its major goal was to identify an appropriate sample size for subsequent experiments. The data from this study suggest that there is no difference in terms of development cost between a pair and a solo implementation phase if the cost for developing programs of similar level of correctness is concerned. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Karlsruhe, Fak Informat, D-76128 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Müller, MM (corresponding author), Univ Karlsruhe, Fak Informat, Fasanengarten 5, D-76128 Karlsruhe, Germany.
EM muellerm@ipd.uka.de
RI Müller, Matthias M/A-1055-2017
CR Cohen J., 1988, STAT POWER ANAL BEHA
   Ghosh BK., 1970, SEQUENTIAL TESTS STA
   HEIBERG S, 2003, LNCS, V2675, P215
   Hollander M., 1999, NOPARAMETRIC STAT ME
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey W.S., 1999, INTRO TEAM SOFTWARE
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P151, DOI 10.1109/METRIC.2004.1357899
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Müller MM, 2004, LECT NOTES COMPUT SC, V3092, P294
   Nawrocki J., 2001, European Software Control and Metrics
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Padberg F, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/METRIC.2003.1232465
   Tomayko J.E., 2002, J COMPUTER SCI ED, V12, P213, DOI DOI 10.1076/CSED.12.3.213.8614
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
NR 16
TC 20
Z9 22
U1 3
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2006
VL 48
IS 5
BP 335
EP 344
DI 10.1016/j.infsof.2005.09.008
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158EH
UT WOS:000245773500004
DA 2024-07-18
ER

PT J
AU Kálmán, M
   Havasi, F
   Gyimóthy, T
AF Kálmán, M
   Havasi, F
   Gyimóthy, T
TI Compacting XML documents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; SRML; XML compaction; XML semantics
AB Nowadays, one of the most common formats for storing information is XML. The biggest drawback of XML documents is that their size is rather large compared to the information they store. XML documents may contain redundant attributes, which can be calculated from others. These redundant attributes can be deleted from the original XML document if the calculation rules can be stored somehow. In an Attribute Grammar environment there is an analog description for these rules: semantic rules. In order to use this technique in an XML environment we defined a new metalanguage called SRML. We have developed a method, which enables us to use this SRML metalanguage for compacting XML documents. After compaction it is possible to use XML compressors to make the compacted document much smaller. By using this combined approach we could achieve a significant size reduction compared to the compressed size of the XML specific compressors. This article extends the method published earlier to provide the possibility of automatically generating rules using machine learning techniques, with which it can find relationships between attributes which might not have been noticed by the user beforehand. (c) 2005 Elsevier B.V. All rights reserved.
C1 Dept Software Engn, H-6720 Szeged, Hungary.
RP Dept Software Engn, Aradi Vet Tere 1, H-6720 Szeged, Hungary.
EM kalman@inf.u-szeged.hu
RI Gyimothy, Tibor/M-3705-2018
OI Gyimothy, Tibor/0000-0002-2123-7387
CR ALBLAS H, 1991, LECT NOTES COMPUT SC, V545, P1
   Bray T., Extensible markup language (xml) 1.0
   CANNATARO M, 2001, SEMANTIC LOSSY COMPR
   CHENEY J, 2001, P DAT COMPR C IEEE C
   COKUS M, 2002, XML C EXP BALT CONV
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Ferenc R, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/WCRE.2001.957809
   Goldfarb C., 2001, The XML Handbook
   Gyimothy T., 1997, Nordic Journal of Computing, V4, P287
   Havasi F., 2002, Acta Cybernetica, V15, P509
   Hirakawa M, 2002, NUCLEIC ACIDS RES, V30, P158, DOI 10.1093/nar/30.1.158
   KALMAN M, 2003, P 8 S PROGR LANG SOF, P137
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Lanza M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P409, DOI 10.1109/CSMR.2003.1192450
   LEVENE M, 2002, XML STRUCTURE COMPRE
   Liefke Hartmut., 2000, P 2000 ACM SIGMOD IN, P153
   Mitchell T. M., 1997, MACHINE LEARNING
   PASILA G, P 2 WORKSH ATTR GRAM, P113
   Quinlan J.R., 1990, READINGS MACHINE LEA, P57
   SCHAFNER B, 2003, MODEL XML DTDS RATIO
   TOLANI P, 2002, P 18 INT C DAT ENG I
NR 21
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2006
VL 48
IS 2
BP 90
EP 106
DI 10.1016/j.infsof.2005.03.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OD
UT WOS:000234398100002
DA 2024-07-18
ER

PT J
AU Bavan, AS
   Abeysinghe, G
AF Bavan, AS
   Abeysinghe, G
TI On the specification and implementation of distributed systems using
   NMDS and LIPS
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE distributed computing; process modelling; role activity diagrams; data
   flow; guarded processes
AB This paper describes a graphical notation called NMDS and an implementation language called LIPS for producing distributed systems. NMDS is a set of notations based on Role Activity Diagrams with features for expressing concurrency, dataflow and communication and it lends itself to elicitation and verification while expressing concurrency unambiguously in a concise manner. It also fits in with the syntax and semantics of LIPS. LIPS is a distributed message passing language that promotes the separation of communication from computation by using the concept of guarded processes. One of the major advantages of using NMDS with LIPS is that reverse engineering of LIPS programs can easily be achieved. (c) 2004 Elsevier B.V. All rights reserved.
C1 Middlesex Univ, Sch Comp Sci, London NW4 4BT, England.
C3 Middlesex University
RP Bavan, AS (corresponding author), Middlesex Univ, Sch Comp Sci, Hendon Campus,The Burroughs, London NW4 4BT, England.
EM s.bavan@mdx.ac.uk; g.abeysinghe@mdx.ac.uk
CR Abeysinghe G. K., 1997, COMBINING PROCESS MO
   Andrews Gregory R., 1993, SR PROGRAMMING LANGU
   BAL HE, 1992, IEEE T SOFTWARE ENG, V18, P190, DOI 10.1109/32.126768
   BAVAN AS, 2004, VECPAR 04 P 6 INT C, V2, P783
   Dijkstra EW, 1968, COOPERATING SEQUENTI, P43
   Fencott C., 1996, FORMAL METHODS CONCU
   Geist A., 1994, PVM: Parallel Virtual Machine
   Gray D.F., 1999, Introduction to the Formal Design of Real Time Systems
   Gropp W., 1994, USING MPI PORTABLE P
   Hoare C.A.R., 1985, Communication Sequential Processes
   ILLINGWORTH E, 1995, NTUG 95 NORD TRANSP
   *INMOS LTD, 1992, TRANSP DAT BOOK
   KERRIDGE J, 1987, OCCAM PROGRAMMING PR
   Milner R., 1989, Communication and concurrency
   Milner R., 1992, P LNCS
   Ould M.A., 1995, BUSINESS PROCESSES M
   OULD MA, 1995, P 3 INT SOFTW PROC W
   OULD MA, 1986, P 3 INT SOFTW PROC W
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   REISIG W, 1985, EATCS MONOGRAPHS THE, V4
   REISIG W, 1998, APPL LECT NOTES COMP, V1492
   Roscoe A.W., 1998, THEORY PRACTICE CONC
NR 22
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2005
VL 47
IS 11
BP 721
EP 734
DI 10.1016/j.infsof.2004.11.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 954ZR
UT WOS:000231194700002
DA 2024-07-18
ER

PT J
AU Lastovetsky, A
AF Lastovetsky, A
TI Parallel testing of distributed software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE parallel computing; software testing; distributed programming systems;
   software maintenance; CORBA; orbix
ID HETEROGENEOUS NETWORKS; SYSTEM
AB The paper presents the experience of the use of parallel computing technologies to accelerate the testing of a complex distributed programming system such as Orbix 3, which is IONA's implementation of the CORBA 2.1 standard. The design and implementation of the parallel testing system are described in detail. Experimental results proving the high efficiency of the system are given. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Coll Dublin, Dept Comp Sci, Dublin 4, Ireland.
C3 University College Dublin
RP Univ Coll Dublin, Dept Comp Sci, Dublin 4, Ireland.
EM alexey.lastovetsky@ucd.ie
RI Lastovetsky, Alexey L/B-3837-2013
OI Lastovetsky, Alexey L/0000-0001-9460-3897
CR ALBERTS DS, 1976, AFIPS C P, V45, P433
   Arapov D, 1999, PARALLEL DISTRIBUTED, V2, P87
   BAKER S, 1997, CORBA DISTRIBUTED OB
   Batteram HJ, 2003, BELL LABS TECH J, V8, P15, DOI 10.1002/bltj.10072
   DEMILLO R.A., 1987, SOFTWARE TESTING EVA
   Karimi F, 2003, MICROELECTRON J, V34, P3, DOI 10.1016/S0026-2692(02)00124-6
   Kim WW, 2004, LECT NOTES COMPUT SC, V3044, P262
   Lastovetsky A, 2000, CONCURRENCY-PRACT EX, V12, P1317, DOI 10.1002/1096-9128(200011)12:13<1317::AID-CPE536>3.0.CO;2-K
   Lastovetsky A, 2002, PARALLEL COMPUT, V28, P1369, DOI 10.1016/S0167-8191(02)00159-X
   Myers Glenford J., 2011, The Art of Software Testing
   *OBJ MAN GROUP, 1997, COMM OBJ REQ BROK AR
   Starkloff E, 2001, IEEE AERO EL SYS MAG, V16, P3, DOI 10.1109/62.931129
NR 12
TC 7
Z9 8
U1 1
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2005
VL 47
IS 10
BP 657
EP 662
DI 10.1016/j.infsof.2004.11.006
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 948IL
UT WOS:000230709200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kettunen, P
   Laanti, M
AF Kettunen, P
   Laanti, M
TI How to steer an embedded software project: tactics for selecting the
   software process model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software project management; software process models; risk management;
   embedded systems; new product development
ID MANAGEMENT; RISK
AB Modem large new product developments (NPD) are typically characterized by many uncertainties and frequent changes. Often the embedded software development projects working on such products face many problems compared to traditional, placid project environments. One of the major project management decisions is then the selection of the project's software process model. An appropriate process model helps coping with the challenges, and prevents many potential project problems. On the other hand, an unsuitable process choice causes additional problems. This paper investigates the software process model selection in the context of large market-driven embedded software product development for new telecommunications equipment. Based 011 a quasi-formal comparison of publicly known software process models including modem agile methodologies, we propose a process model selection frame, which the project manager can use as a systematic guide for (re)choosing the project's process model. A novel feature of this comparative selection model is that we make the comparison against typical software project problem issues. Some real-life project case examples are examined against this model. The selection matrix expresses how different process models answer to different questions, and indeed there is not a single process model that would answer all the questions. On the contrary, some of the seeds to the project problems are in the process models themselves. However, being conscious of these problems and pitfalls when steering a project enables the project manager to master the situation. (c) 2004 Elsevier B.V. All rights reserved.
EM petri.kettunen@nokia.com; maarit.laanti@nokia.com
OI Kettunen, Petri/0000-0002-2928-5885
CR Aaen I, 2003, IEEE SOFTWARE, V20, P86, DOI 10.1109/MS.2003.1231159
   Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   [Anonymous], 2002, Agile software development
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   [Anonymous], 2004, Agile and Iterative Development
   BASSETT PG, 1997, FRAMING REUSE LESSON
   BECK K, 2001, PLANNING EXTREM PROG
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   BOHEM B, 1988, IEEE COMPUT, V21, P61
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brooks Frederick., 1995, Mythical ManMonth, The: Essays on Software Engineering, Vanniversary
   Brown William., 2000, ANTIPATTERNS PROJECT
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Fairley RE, 2003, IEEE SOFTWARE, V20, P18, DOI 10.1109/MS.2003.1184161
   Glass R.L., 1998, SOFTWARE RUNAWAYS
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   GLAZER H, 2001, CROSSTALK, V14, P27
   GNANTZ M, 2003, SQP, V5, P4
   Highsmith J., 2002, Agile software development ecosystems
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   *IEE EIA, 1995, 1220701996 IEEEEIA
   Jones C., 1996, Patterns of software system failure and success
   Kähkönen T, 2004, LECT NOTES COMPUT SC, V3009, P378
   KEENAN F, 2004, AG PROC TAIL PROBL A, P45
   Kettunen P., 2003, IEE Proceedings-Software, V150, P359, DOI 10.1049/ip-sen:20031173
   Manhart P, 2004, PROC INT CONF SOFTW, P378, DOI 10.1109/ICSE.2004.1317460
   Manzoni LV, 2003, IEEE T SOFTWARE ENG, V29, P181, DOI 10.1109/TSE.2003.1178058
   MAY G, 2002, IEE ENG MANAGEMENT J, V12, P83
   McConnell S., 1998, Software Project Survival Guide: How to Be Sure Your First Important Project Isnt Your Last
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   Mellis W, 1998, SOFTWARE QUAL J, V7, P277, DOI 10.1023/A:1008987423699
   Ould Martyn A., 1999, Managing software quality and business risk
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Reifer D, 2002, IEEE SOFTWARE, V19, P12, DOI 10.1109/52.991324
   RONKAINEN J, 2003, P 4 INT C EXTR PROGR, P73
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Royce W.E., 1998, AW OBJ TECHNOL S
   SMITH J, 2002, MANAGEMENT J, V12, P238
   SMITH J, COMP IBM RATIONAL UN
   Smith J., 2001, TROUBLED IT PROJECTS
   Sommerville I, 1996, ACM COMPUT SURV, V28, P269, DOI 10.1145/234313.234420
   SONG XP, 1992, IEEE SOFTWARE, V9, P43, DOI 10.1109/52.136166
   Sorensen R., 1995, CrossTalk, V8
   TARAMAA J, 1998, P 24 EUR C, V2, P905
   TURNER R, 2003, CROSSTALK, V16, P4
   VANHANEN J, 2003, P 4 INT C EXTR PROGR, P279
   White SF, 2001, COMPUTER, V34, P39, DOI 10.1109/2.963442
   Yourdon E. E., 1999, DEATH MARCH COMPLETE
NR 53
TC 18
Z9 21
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2005
VL 47
IS 9
BP 587
EP 608
DI 10.1016/j.infsof.2004.11.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934GQ
UT WOS:000229695300002
DA 2024-07-18
ER

PT J
AU Trienekens, JJM
   Kusters, RJ
   Rendering, B
   Stokla, K
AF Trienekens, JJM
   Kusters, RJ
   Rendering, B
   Stokla, K
TI Business-oriented process improvement: practices and experiences at
   Thales Naval the Netherlands (TNNL)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE process improvement; business goal decomposition; measurement
AB Over the last decade many organizations are increasingly concerned with the improvement of their hardware/software development processes. The Capability Maturity Model and ISO9001 are well-known approaches that are applied in these initiatives. However. one of the major bottlenecks to the success of process improvement is the lack of business goal orientation. Additionally, business-oriented improvement approaches often show a lack of process orientation. This paper reports on a process improvement initiative at Thales Naval Netherlands that attempts to combine the best of both worlds, i.e. process improvement and business goal orientation. Main factors in this approach are goal decomposition and the implementation of goal-oriented measurement on three organizational levels, i.e. the business the process and the team level. (C) 2004 Elsevier B.V. All rights reserved.
C1 KEMA Qual, NL-5600 MB Eindhoven, Netherlands.
   Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   Thales NNL, NL-7554 RR Hengelo, Netherlands.
C3 Eindhoven University of Technology; Thales Group
RP Trienekens, JJM (corresponding author), KEMA Qual, Dolech 1, NL-5600 MB Eindhoven, Netherlands.
EM j.j.m.trienekens@tm.tue.nl; r.j.kusters@tm.tue.nl;
   ben.rendering@nl.thalesgroup.com; kees.stokla@nl.thalesgroup.com
RI Kusters, Rob/B-3093-2010
OI Kusters, Rob/0000-0003-4069-5655
CR Balla K, 2001, SOFTWARE QUAL J, V9, P177, DOI 10.1023/A:1013301503616
   Cattaneo F., 2001, Software Process Improvement and Practice, V6, P3, DOI 10.1002/spip.131
   Dawson R, 2003, SOFTWARE QUAL J, V11, P243, DOI 10.1023/A:1025118811896
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   GACK GA, 2003, SOFTWARE QUALITY PRO, V5
   Kaplan R.S., 2000, Harvard Business School Press Books, P1
   MELLIS W, 2000, SOFTW QUAL J, V7, P277
   NEIGER D, 2003, P INT C BPM2003 EIND, P72
   PAULK MC, 1995, IEEE SOFTWARE    JAN, P74
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Trienekens J, 2001, SOFTWARE QUAL J, V9, P269, DOI 10.1023/A:1013715203889
   van Latum F, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.646887
   van Solingen R, 2000, INFORM SOFTWARE TECH, V42, P965, DOI 10.1016/S0950-5849(00)00148-8
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
NR 14
TC 7
Z9 7
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2005
VL 47
IS 2
BP 67
EP 79
DI 10.1016/j.infsof.2004.06.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 886VD
UT WOS:000226260000001
DA 2024-07-18
ER

PT J
AU Odeh, M
   Kamm, R
AF Odeh, M
   Kamm, R
TI Bridging the gap between business models and system models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE process modelling; unified modelling language; use cases; business
   modelling
AB This paper discusses links that may be made between process models and Unified Modelling Language (UML) software specification techniques, working from an argument that the whole complexity of organisational activity cannot be captured by UML alone. The approach taken is to develop a set of use cases, which would be capable of providing information support to a pre-defined organisational process. The nature of the thinking. which is necessary to derive the use cases, is outlined using the pre-defined process as a case study. The grouping of transactions and state changes into Use Cases is shown to require design choices, which may vary between particular organisational contexts. Conclusions are drawn about the direction of further investigation of links between process modelling and UML. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ W England, Fac Comp Engn & Math Sci, Syst Modeling Res Grp, Bristol BS16 1QY, Avon, England.
   Univ Bath, Sch Management, Syst Modeling Res Grp, Bath BA2 7AY, Avon, England.
C3 University of West England; University of Bath
RP Odeh, M (corresponding author), Univ W England, Fac Comp Engn & Math Sci, Syst Modeling Res Grp, Coldharbour Lane, Bristol BS16 1QY, Avon, England.
OI Kamm, Richard/0009-0009-7693-3468
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   BEESON I, 2002, INFORMATION SYSTEMS, P319
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Cockburn A., 2001, Writing effective use cases
   Davenport T.H., 1993, Process Innovation
   Eriksson H., 2000, Business modelling with UML
   Fowler M., 2000, UML Distilled, V2nd
   HOLT AW, 1983, ELECTR COMMUN, P308
   JACOBSON I, 1994, OBJECT ADV BUSINESS
   Jacobson I., 2000, The Road to the Unified Software Development Process
   KRUCHTEN P, 2000, RATIONAL UNIT PROCES
   MARSHALL C, 2000, ENTERPRISE MODELLING
   ODEH M, 2002, 3 INT AR C INF TECHN
   Ould M.A., 1995, BUSINESS PROCESSES M
   OULD MA, 1993, SOFTWARE ASSISTANCE, P81
NR 15
TC 31
Z9 35
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1053
EP 1060
DI 10.1016/S0950-5849(03)00133-2
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bergstra, J
   Walters, P
AF Bergstra, J
   Walters, P
TI Operator programs and operator processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE algorithms; agent modeling; human-computer interaction; specification
   languages; user behavior; user modeling
AB We define a notion of program which is not a computer program but an operator program: a detailed description of actions performed and decisions taken by a human operator (computer user) performing a task to achieve a goal in a simple setting consisting of that user, one or more computers and a work environment.
   Our definition and notations are based on the program algebra PGA: a small body of theory allowing one to reason fundamentally and practically about programs viewed as instruction sequences.
   This article is entirely self-contained and introduces all concepts and notations used. We offer some small examples, and we sketch one limitation of our approach. (C) 2003 Elsevier B.V. All rights reserved.
C1 Microsoft Corp, Amsterdam, Netherlands.
   Univ Amsterdam, Programming Res Grp, NL-1009 DB Amsterdam, Netherlands.
   Univ Utrecht, Dept Philosophy, Appl Log Grp, Utrecht, Netherlands.
C3 Microsoft; University of Amsterdam; Utrecht University
RP Walters, P (corresponding author), Microsoft Corp, Amsterdam, Netherlands.
EM jan.bergstra@phil.uu.nl; pwalters@microsoft.com
CR [Anonymous], 1983, The Psychology of Human-Computer Interaction
   Bergstra JA, 2002, J LOGIC ALGEBR PROGR, V51, P175, DOI 10.1016/S1567-8326(02)00020-6
   Bergstra JA, 2002, J LOGIC ALGEBR PROGR, V51, P125, DOI 10.1016/S1567-8326(02)00018-8
   Chiu BC, 1998, USER MODEL USER-ADAP, V8, P131, DOI 10.1023/A:1008296930163
   JACOBSON I, 1995, SCENARIO BASED DESIG, P306
   KEMXP RH, 1994, INT J HUM-COMPUT ST, V41, P363, DOI 10.1006/ijhc.1994.1064
   MIDDELBURG CA, 2002, J LOGIC ALGEBRAIC PR, V51
   Webb GI, 1995, USER MODEL USER-ADAP, V5, P117, DOI 10.1007/BF01099758
   Whiteside J., 1988, HDB HUMAN COMPUTER I, P791
   WIXON D, 1990, HUM FACT COMP SYST C, P329
NR 10
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 681
EP 689
DI 10.1016/S0950-5849(03)00075-2
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800005
DA 2024-07-18
ER

PT J
AU Reformat, M
   Pedrycz, W
   Pizzi, NJ
AF Reformat, M
   Pedrycz, W
   Pizzi, NJ
TI Software quality analysis with the use of computational intelligence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software quality assessment; software measures; computational
   intelligence; self-organizing maps; decision trees; data visualization;
   classification; knowledge extraction
ID METRICS
AB Quality of individual objects composing a software system is one of the important factors that determine quality of this system. Quality of objects. on the other hand. can be related to a number of attributes, such as extensibility, reusability, clarity and efficiency. These attributes do not have representations suitable for automatic processing. There is a need to find a way to support quality related activities using data gathered during quality assurance processes, which involve humans.
   This paper proposes an approach, which can be used to support quality assessment of individual objects. The approach exploits techniques of Computational Intelligence that are treated as a consortium of granular Computing, neural networks and evolutionary techniques. In particular. self-organizing maps and evolutionary-based developed decision trees are used to gain a better insight into the software data and to support a process of classification of software objects. Genetic classifiers-a novel algorithmic framework-serve as 'filters' for software objects. These classifiers are built on data representing subjective evaluation of software objects done by humans. Using these classifiers, a system manager can predict quality of software objects and identify low quality objects for review and possible revision. The approach is applied to analyze an object-oriented visualization-based software system for biomedical data analysis. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2V4, Canada.
   Natl Res Council Canada, Winnipeg, MB R3B 1Y6, Canada.
C3 University of Alberta; National Research Council Canada
RP Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2V4, Canada.
EM reform@ee.ualberta.ca; pedrycz@ee.ualberta.ca; pizzi@nrc.ca
OI Reformat, Marek Z./0000-0003-4783-0717
CR Back Thomas., 2000, Evolutionary computation 1: Basic algorithms and operators, V1
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   JAHNKE JH, 1997, LNCS, P1301
   KHOSHGOFTAAR TM, 2000, IEEE T RELIABILITY, V49
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   KOHONEN T, 1982, BIOL CYBERN, V43, P59, DOI 10.1007/BF00337288
   Kohonen T., 1995, SELF ORGANIZING MAPS
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Lee J, 2001, INT J INTELL SYST, V16, P807, DOI 10.1002/int.1036
   Lee J, 1999, INFORM SCIENCES, V118, P101, DOI 10.1016/S0020-0255(99)00042-0
   Pedrycz W, 2002, STUD FUZZ SOFT COMP, V81, P168
   Pedrycz W, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P1349, DOI 10.1109/NAFIPS.2001.943745
   Pedrycz W., 1997, COMPUTATIONAL INTELL
   PEDRYCZ W, 2001, P 2 INT WORKSH SOFT, P6
   PEDRYCZ W, 1998, COMPUTATIONAL INTELL, V16
   Pedrycz W., 1998, An introduction to fuzzy sets: analysis and design
   PEDRYCZ W, 2001, 1 ASERC WORKSH QUANT, P49
   PETERS JF, 2000, SOFTWARE ENG ENG APP, P505
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   REFORMAT M, 2003, FUZZY SETS SYSTEMS
   SZABO RM, 1999, P 5 ISSAT INT C REL, P142
NR 24
TC 15
Z9 18
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 405
EP 417
DI 10.1016/S0950-5849(03)00012-0
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500003
DA 2024-07-18
ER

PT J
AU Li, RY
   Liang, P
   Avgeriou, P
AF Li, Ruiyin
   Liang, Peng
   Avgeriou, Paris
TI Warnings: Violation symptoms indicating architecture erosion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architecture erosion symptom; Architecture violation; Code review; Code
   commit
ID MISMATCH; REUSE
AB Context: As a software system evolves, its architecture tends to degrade, and gradually impedes software maintenance and evolution activities and negatively impacts the quality attributes of the system. The main root cause behind architecture erosion phenomenon derives from violation symptoms (i.e., various architecturallyrelevant violations, such as violations of architecture pattern). Previous studies focus on detecting violations in software systems using architecture conformance checking approaches. However, code review comments are also rich sources that may contain extensive discussions regarding architecture violations, while there is a limited understanding of violation symptoms from the viewpoint of developers. Objective: In this work, we investigated the characteristics of architecture violation symptoms in code review comments from the developers' perspective. Methods: We employed a set of keywords Related to violation symptoms to collect 606 (out of 21,583) code review comments from four popular OSS projects in the openStack and qt communities. We manually analyzed the collected 606 review comments to provide the categories and linguistic patterns of violation symptoms, as well as the reactions how developers addressed them. Results: Our findings show that: (1) three main categories of violation symptoms are discussed by developers during the code review process; (2) The frequently-used terms of expressing violation symptoms are "inconsistent "and "violate", and the most common linguistic pattern is Problem Discovery; (3) Refactoring and removing code are the major measures (90%) to tackle violation symptoms, while a few violation symptoms were ignored by developers. Conclusions: Our findings suggest that the investigation of violation symptoms can help researchers better understand the characteristics of architecture erosion and facilitate the development and maintenance activities, and developers should explicitly manage violation symptoms, not only for addressing the existing architecture violations but also preventing future violations.
C1 [Li, Ruiyin; Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Li, Ruiyin; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
C3 Wuhan University; University of Groningen
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
EM ryli_cs@whu.edu.cn; liangp@whu.edu.cn; p.avgeriou@rug.nl
OI Li, Ruiyin/0000-0001-8536-4935; Avgeriou, Paris/0000-0002-7101-0754
FU National Natural Science Foundation of China (NSFC) [62172311]; Special
   Fund of Hubei Luojia Laboratory
FX This work has been partially supported by the National Natural Science
   Foundation of China (NSFC) with Grant No. 62172311 and the Special Fund
   of Hubei Luojia Laboratory.
CR Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass Len, 2012, SEI S SOFTW
   Bhattacharya S., 2007, P 6 WORK IEEE IFIP C, P44
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Brunet J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P257, DOI 10.1109/WCRE.2012.35
   Brunet J., 2014, P 11 WORK C MIN SOFT, P340
   Caracciolo A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P41, DOI 10.1109/WICSA.2015.11
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   da Silva AR, 2017, PROCEEDINGS OF THE 22ND EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2017), DOI 10.1145/3147704.3147728
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Filho JLM, 2017, LECT NOTES COMPUT SC, V10475, P67, DOI 10.1007/978-3-319-65831-5_5
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hassaine S, 2012, EUR CON SFTWR MTNCE, P267, DOI 10.1109/CSMR.2012.34
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hirao T, 2022, IEEE T SOFTWARE ENG, V48, P69, DOI 10.1109/TSE.2020.2977907
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Kashiwa Y, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106855
   Lenhard J, 2019, SOFTWARE QUAL J, V27, P241, DOI 10.1007/s11219-018-9404-z
   Li R., 2022, REPLICATION PACKAGE, DOI [10.5281/zenodo.7054370, DOI 10.5281/ZENODO.7054370]
   Li RY, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P24, DOI 10.1109/ICSA53651.2022.00011
   Li RY, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2423
   Li RY, 2021, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC52881.2021.00037
   Li ZY, 2021, INT C PROGRAM COMPRE, P219, DOI 10.1109/ICPC52881.2021.00029
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Maffort C, 2016, EMPIR SOFTW ENG, V21, P854, DOI 10.1007/s10664-014-9348-2
   Mair M., 2014, P 11 WORK IEEE IFIP, P1
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martin R.C., 2006, Agile Principles, Patterns, and Practices in C#
   Mendoza C, 2021, SOFTWARE PRACT EXPER, V51, P1822, DOI 10.1002/spe.3004
   Miranda S, 2016, J OBJECT TECHNOL, V15, DOI 10.5381/jot.2016.15.3.a1
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Paixao M, 2021, IEEE T SOFTWARE ENG, V47, P1041, DOI 10.1109/TSE.2019.2912113
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pruijt L., 2014, P 11 WORK IEEE IFIP, P1
   Rocha H., 2017, J BRAZ COMPUT SOC, V23, P1
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Schröder S, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P167, DOI 10.1145/3129790.3129812
   Schultis KB, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P241, DOI 10.1109/WICSA.2016.16
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Uchôa A, 2020, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSME46990.2020.00055
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Wagner Wiebke, 2010, Lang Resour Eval, V44, P421, DOI [10.1007/s10579-010-9124-x, DOI 10.1007/S10579-010-9124-X]
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 61
TC 0
Z9 0
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107319
DI 10.1016/j.infsof.2023.107319
EA AUG 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R3PO1
UT WOS:001063506700001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Wang, SM
   Yao, XJ
   Gong, DW
   Tu, HJ
AF Wang, Simin
   Yao, Xiangjuan
   Gong, Dunwei
   Tu, Huijie
TI Overlapping community detection in software ecosystem based on pheromone
   guided personalized PageRank algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem; Collaboration network; Community detection;
   Personalized PageRank algorithm; Ant colony optimization
ID REPOSITORIES; NETWORKS
AB Context: Software ecosystem has aroused the interest of numerous researchers and plays an important role in many aspects. According to different participants and their relationships, software ecosystem can be constructed into various types of complex networks. Overlapping community detection in complex networks can help reveal the community structure and find the intersection between communities. However, existing overlapping community detection algorithms often suffer from reduced applicability or accuracy when applied to networks in software ecosystems. Objective: To reveal the overlapping community structure in software ecosystem, we propose an overlapping community detection algorithm by improving the standard personalized PageRank (PPR) algorithm. Method: We first construct a developer collaboration network in software ecosystem based on the intensity of cooperation between developers. Then, the similarity between developers is calculated to guide the walking process of the PPR algorithm, making it suitable for weighted networks. Finally, in the proposed algorithm PGPPR, inspired by the idea of using pheromones to guide the walking in ant colony algorithm, we run the algorithm in multiple rounds and use the results of the previous round to guide the walking process in the current round to reduce redundant diffusion. Results: The experimental results on the five real-world networks show that our algorithm is applicable and effective in detecting communities. And in the five developer collaboration networks, PGPPR can effectively detect overlapping community structures with higher stability and accuracy than the four baselines. Conclusion: The PGPPR algorithm can find overlapping community structures in weighted networks and effectively reduce the redundant diffusion generated when applying the standard PPR algorithm to community detection. Compared to other algorithms, our algorithm can detect the overlapping communities more accurately and stably when applied to developer collaboration networks in software ecosystem.
C1 [Wang, Simin; Yao, Xiangjuan; Tu, Huijie] China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
   [Yao, Xiangjuan] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Peoples R China.
C3 China University of Mining & Technology; Nanjing University; Qingdao
   University of Science & Technology
RP Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.; Yao, XJ (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM yaoxj@cumt.edu.cn
FU National Natural Science Foundation of China [42230704, 62133015];
   Fundamental Research Funds for the Central Universities, China
   [2020ZDPYMS40]
FX Acknowledgments This work was supported by National Natural Science
   Foundation of China (42230704, 62133015) and Fundamental Research Funds
   for the Central Universities, China (No. 2020ZDPYMS40) .
CR Aljemabi MA, 2018, IEEE ACCESS, V6, P51049, DOI 10.1109/ACCESS.2018.2868427
   Andersen R, 2006, ANN IEEE SYMP FOUND, P475
   Bana R, 2018, INT CONF CONTEMP, P166
   Barrat A, 2004, P NATL ACAD SCI USA, V101, P3747, DOI 10.1073/pnas.0400087101
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Chen DB, 2010, PHYSICA A, V389, P4177, DOI 10.1016/j.physa.2010.05.046
   Fortunato S, 2016, PHYS REP, V659, P1, DOI 10.1016/j.physrep.2016.09.002
   Gao Y, 2021, EXPERT SYST APPL, V173, DOI 10.1016/j.eswa.2021.114682
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hanssen GK, 2014, INFORM SOFTWARE TECH, V56, P1421, DOI 10.1016/j.infsof.2014.06.013
   Hou TT, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106451
   Jabbour S, 2020, COMPUTING, V102, P1275, DOI 10.1007/s00607-020-00803-y
   Jabbour S, 2018, LECT NOTES COMPUT SC, V11191, P151, DOI 10.1007/978-3-030-01768-2_13
   Jabbour S, 2018, INT CON ADV INFO NET, P437, DOI 10.1109/AINA.2018.00072
   Jabbour S, 2017, LECT NOTES ARTIF INT, V10235, P786, DOI 10.1007/978-3-319-57529-2_61
   Jansen S, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106219
   Javed MA, 2018, J NETW COMPUT APPL, V108, P87, DOI 10.1016/j.jnca.2018.02.011
   Kannan R, 2004, J ACM, V51, P497, DOI 10.1145/990308.990313
   Lancichinetti A, 2009, NEW J PHYS, V11, DOI 10.1088/1367-2630/11/3/033015
   Leskovec J., 2014, SNAP Datasets: Stanford large network dataset collection
   Lusseau D, 2003, BEHAV ECOL SOCIOBIOL, V54, P396, DOI 10.1007/s00265-003-0651-y
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Newman MEJ, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.056131
   Page L., 1999, PAGERANK CITATION RA
   Prabavathi G., 2016, INT J INNOV RES COMP, V4, P997
   Shen HW, 2009, PHYSICA A, V388, P1706, DOI 10.1016/j.physa.2008.12.021
   Shen X., 2022, CHINESE J ELECTRON, V32, P1
   Shi C, 2013, DATA KNOWL ENG, V87, P394, DOI 10.1016/j.datak.2013.05.004
   Stolee KT, 2013, INFORM SOFTWARE TECH, V55, P1289, DOI 10.1016/j.infsof.2012.10.004
   Sun Y., 2017, J CENT CHINA NORM U
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wen XY, 2017, IEEE T EVOLUT COMPUT, V21, P363, DOI 10.1109/TEVC.2016.2605501
   Whang JJ, 2016, IEEE T KNOWL DATA EN, V28, P1272, DOI 10.1109/TKDE.2016.2518687
   Wu P, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P196, DOI 10.1109/ASONAM.2014.6921582
   Yang J., 2013, P 6 ACM INT C WEB SE, P587, DOI [DOI 10.1145/2433396.2433471, 10.1145/2433396.2433471]
   Yin DY, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA SCIENCE IN CYBERSPACE (DSC 2016), P44, DOI 10.1109/DSC.2016.74
   ZACHARY WW, 1977, J ANTHROPOL RES, V33, P452, DOI 10.1086/jar.33.4.3629752
   Zhang Deguang, 2015, Computer Engineering, V41, P106, DOI 10.3969/j.issn.1000-3428.2015.11.019
NR 41
TC 3
Z9 3
U1 3
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107283
DI 10.1016/j.infsof.2023.107283
EA JUN 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N1MZ5
UT WOS:001034750800001
DA 2024-07-18
ER

PT J
AU Yan, Y
   Jiang, SJ
   Zhang, YM
   Zhang, SG
   Zhang, C
AF Yan, Yue
   Jiang, Shujuan
   Zhang, Yanmei
   Zhang, Shenggang
   Zhang, Cheng
TI A fault localization approach based on fault propagation context
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software fault localization; Spectrum-based fault localization; Program
   analysis; Fault propagation context
ID COVERAGE
AB Context: Spectrum-based fault localization (SBFL) performs statistical analysis on the coverage information of failed or passed test cases. It provides the programmer with a guide for fault localization by generating a sorted list of suspicious elements. Unfortunately, the SBFL technology has a tie problem. Many elements in the list have the same suspicious values, which seriously affects the developer finding faults.Objective: Therefore, we aim to solve the tie problem of SBFL techniques by applying the fault propagation context. In this paper, we propose an approach to boost the performance of fault localization by applying inter-class and intra-class fault propagation context to weight the suspicious elements.Methods: We first apply the SBFL techniques to calculate the initial suspicious values of the statements. Then, we analyze the fault propagation context of the suspicious statements. Finally, we weight the initial suspicious values of the statements to solve the tie problem of SBFL techniques. The weighted suspicious values are sorted in descending order to generate a list, which is provided to developers for fault localization.Results: To evaluate our approach, we experiment on Defects4J, a real-world software fault benchmark. Experimental results show that the proposed approach outperforms existing fault context-based methods that only use intra-class context and traditional SBFL methods. For example, our approach can locate 129 faults in Top-1, which is 94 more than Ochiai method. Moreover, we provide programmers with the fault propagation context for accurate fault localization.Conclusion: Applying fault propagation context can effectively solve the tie problem in SBFL. It is valuable to study how to efficiently utilize the fault propagation context for fault localization.
C1 [Yan, Yue; Jiang, Shujuan; Zhang, Yanmei; Zhang, Shenggang; Zhang, Cheng] China Univ Min & Technol, Minist Educ, Engn Res Ctr Mine Digitalizat, Xuzhou 221116, Peoples R China.
   China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Minist Educ, Engn Res Ctr Mine Digitalizat, Xuzhou 221116, Peoples R China.
EM shjjiang@cumt.edu.cn
RI li, yuan/KBQ-4200-2024; Li, J N/JXL-5833-2024; Wang, Bo/KEH-0105-2024;
   li, jiaxin/JNT-5073-2023; Li, YU/JQV-2716-2023; lin, lin/KCZ-0185-2024;
   Zhang, Tianxi/KEH-5921-2024; Zhang, Yuan/JUF-7293-2023; YANG,
   DAN/KCL-5217-2024; Wang, Xin/JVE-0200-2024; Liu, Xiaohan/KBB-4246-2024;
   Yu, Xiaohan/KCK-5462-2024; yang, liu/JXX-5043-2024; Wen,
   Jing/KCL-6614-2024; Li, Wenjuan/KDN-8450-2024; zhao, yan/JNT-6961-2023;
   wang, xin/JWA-3772-2024; Wang, Xuechun/JRX-6509-2023; lin,
   yuan/JXL-9592-2024; li, li/JVP-2971-2024; wang, wenjing/KEH-0575-2024;
   Zhang, Kai/KBD-3312-2024; you, li/KHW-2201-2024; yang,
   yunfeng/KHT-9566-2024; Liu, Yang/JVD-6777-2023; wang, wei/JYP-7819-2024;
   Liu, Xiong/JWO-1231-2024; zhang, ying/JQX-1479-2023; li,
   tao/JVO-9006-2024; lu, Li/KBA-2603-2024; song, yu/KCZ-2003-2024; wang,
   Xiaoming/KBB-8854-2024; Wang, Yue/JRY-8962-2023; xiang,
   wei/JXL-3308-2024; liu, jingwen/JQW-9270-2023; chang, yu/KFB-2822-2024;
   Liu, Yuxuan/JVO-7759-2024; su, hang/KEH-2976-2024; wang,
   jun/JPY-3635-2023; Zhang, Bo/JVD-9890-2024; LI, WEI/JUE-9796-2023; li,
   lan/KCJ-5061-2024; PENG, CHENG/KCL-2506-2024; luo, Jing/KFT-0288-2024;
   Wang, Huiyan/JXW-9178-2024; Li, Yan/JUU-5189-2023; Liu,
   Zhihao/JUF-7651-2023; Ling, Li/JYO-7043-2024; ZHOU, YUE/KCJ-8790-2024;
   Wang, Jin/KAM-5595-2024; Yang, Fan/JVO-8611-2024; wang,
   yi/JYO-8193-2024; Zhang, Youyou/KCY-0810-2024; LI, LI/KCJ-5600-2024;
   Wang, Jing/JRW-1512-2023; Yuan, Ye/KBC-9835-2024; Li,
   siqi/KDN-4520-2024; liu, yuhao/JWP-0475-2024; Li, Yan/JRW-0176-2023; Li,
   Wen/JQI-4757-2023
OI Liu, Xiaohan/0009-0009-5291-2494; Liu, Xiong/0000-0001-9021-3031; Wang,
   Yue/0000-0001-8673-6358; Yuan, Ye/0009-0008-1640-7047; Jiang,
   Shujuan/0000-0003-0643-0565; ZHANG, CHENG/0000-0001-8721-0577
FU National Natural Science Foundation of China [61673384]; Natural Science
   Foundation of Jiangsu Province, China [BK20181353]
FX Acknowledgments This research was supported in part supported by
   National Natural Science Foundation of China (61673384) ; Natural
   Science Foundation of Jiangsu Province, China (BK20181353) .
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Artzi S, 2010, IEEE T SOFTWARE ENG, V36, P474, DOI 10.1109/TSE.2010.31
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Elmishali A, 2016, AAAI CONF ARTIF INTE, P4003
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Galindo C, 2022, LECT NOTES COMPUT SC, V13550, P146, DOI 10.1007/978-3-031-17108-6_9
   Hammacher C, 2009, 2009 ICSE WORKSHOP ON MULTICORE SOFTWARE ENGINEERING (IWMSE), P49, DOI 10.1109/IWMSE.2009.5071383
   Herman P. M., 1976, Australian Computer Journal, V8, P92
   Horváth F, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P23, DOI [10.1109/IBF.2019.8665415, 10.1109/ibf.2019.8665415]
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P502, DOI 10.1109/ASE.2019.00054
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim J, 2019, INFORM SOFTWARE TECH, V107, P179, DOI 10.1016/j.infsof.2018.11.009
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li YH, 2022, IEEE T RELIAB, V71, P803, DOI 10.1109/TR.2022.3165195
   Liu C, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P72, DOI 10.1109/QRS-C51114.2020.00023
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Ma PJ, 2013, INT CONF INSTR MEAS, P1194, DOI 10.1109/IMCCC.2013.265
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Rabinowitz P.H., 1978, SOME MINIMAX THEOREM, P161, DOI DOI 10.1016/B978-0-12-165550-1.50016-1
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Ribeiro H., 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870182
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Walkinshaw N, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P55, DOI 10.1109/SCAM.2003.1238031
   Wang Y, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-017-9112-2
   Wang Y, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P96, DOI 10.1109/SATE.2016.23
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yan Y., SOURCE CODE STEPS FP
   Yan Y., 2021, DEPENDABLE SOFTWARE, P219, DOI [10.1007/978-3-030-91265-9_12, DOI 10.1007/978-3-030-91265-9_12]
   Yu JJ, 2022, INT C PROGRAM COMPRE, P482, DOI 10.1145/3524610.3527891
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang Zhuo, 2019, Journal of Software, V30, P266, DOI 10.13328/j.cnki.jos.005677
   Zhao L, 2010, LECT NOTES COMPUT SC, V6377, P158, DOI 10.1007/978-3-642-16167-4_21
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 45
TC 1
Z9 1
U1 5
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107245
DI 10.1016/j.infsof.2023.107245
EA MAY 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I5NG2
UT WOS:001003240400001
DA 2024-07-18
ER

PT J
AU Balasubramaniam, N
   Kauppinen, M
   Rannisto, A
   Hiekkanen, K
   Kujala, S
AF Balasubramaniam, Nagadivya
   Kauppinen, Marjo
   Rannisto, Antti
   Hiekkanen, Kari
   Kujala, Sari
TI Transparency and explainability of AI systems: From ethical guidelines
   to requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Transparency; Explainability; Ethical guidelines; Quality requirements;
   Explainability requirements; AI systems
AB Context and Motivation: Recent studies have highlighted transparency and explainability as important quality requirements of AI systems. However, there are still relatively few case studies that describe the current state of defining these quality requirements in practice.Objective: This study consisted of two phases. The first goal of our study was to explore what ethical guidelines organizations have defined for the development of transparent and explainable AI systems and then we inves-tigated how explainability requirements can be defined in practice.Methods: In the first phase, we analyzed the ethical guidelines in 16 organizations representing different in-dustries and public sector. Then, we conducted an empirical study to evaluate the results of the first phase with practitioners. Results: The analysis of the ethical guidelines revealed that the importance of transparency is highlighted by almost all of the organizations and explainability is considered as an integral part of transparency. To support the definition of explainability requirements, we propose a model of explainability components for identifying explainability needs and a template for representing explainability requirements. The paper also describes the lessons we learned from applying the model and the template in practice.Contribution: For researchers, this paper provides insights into what organizations consider important in the transparency and, in particular, explainability of AI systems. For practitioners, this study suggests a systematic and structured way to define explainability requirements of AI systems. Furthermore, the results emphasize a set of good practices that help to define the explainability of AI systems.
C1 [Balasubramaniam, Nagadivya; Kauppinen, Marjo; Rannisto, Antti; Hiekkanen, Kari; Kujala, Sari] Aalto Univ, Dept Comp Sci, Espoo, Finland.
   [Rannisto, Antti] Solita, Helsinki, Finland.
   [Hiekkanen, Kari] Haaga Hel Univ Appl Sci, Helsinki, Finland.
C3 Aalto University
RP Balasubramaniam, N (corresponding author), Aalto Univ, Dept Comp Sci, Espoo, Finland.
EM nagadivya.balasubramaniam@aalto.fi; marjo.kauppinen@aalto.fi;
   antti.rannisto@aalto.fi; kari.hiekkanen@aalto.fi; sari.kujala@aalto.fi
RI Kujala, Sari/M-7004-2013
OI Balasubramaniam, Nagadivya/0009-0007-3869-6479
CR Abdollahi B, 2018, HUM-COMPUT INT-SPRIN, P21, DOI 10.1007/978-3-319-90403-0_2
   Ahmad K, 2021, INT REQUIR ENG CONF, P1, DOI 10.1109/RE51729.2021.00008
   ai-governance, ARTIF INTELL
   Attard-Frost Blair, 2023, AI Ethics, V3, P389, DOI [10.1007/s43681-022-00156-6, DOI 10.1007/S43681-022-00156-6]
   Balasubramaniam N, 2022, LECT NOTES COMPUT SC, V13216, P3, DOI 10.1007/978-3-030-98464-9_1
   Balasubramaniam N, 2020, LECT NOTES COMPUT SC, V12562, P331, DOI 10.1007/978-3-030-64148-1_21
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Chazette L, 2021, INT REQUIR ENG CONF, P197, DOI 10.1109/RE51729.2021.00025
   Chazette L, 2020, REQUIR ENG, V25, P493, DOI 10.1007/s00766-020-00333-1
   Chazette L, 2019, INT REQUIR ENG CONF, P223, DOI 10.1109/RE.2019.00032
   Chazette L, 2019, INT REQUIR ENG CONF, P470, DOI 10.1109/RE.2019.00064
   Cohn Mike, 2006, AGILE ESTIMATING PLA
   Corbin J., 2015, BASICS QUALITATIVE R
   Cysneiros Luiz Marcio, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P335, DOI 10.1007/978-3-030-49418-6_23
   Cysneiros L.M, 2013, USING I ELICIT MODEL, P19
   Cysneiros LM, 2018, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2018.00-21
   Dattner B., 2019, HARV BUS REV, V25
   Drobotowicz K, 2021, LECT NOTES COMPUT SC, V12685, P99, DOI 10.1007/978-3-030-73128-1_7
   European Commission, Ethics Guidelines for Trustworthy AI
   Gorschek T., 2020, contemp. Empir. Methods softw. Engineering, P503, DOI [10.1007/978-3-030-32489-618, DOI 10.1007/978-3-030-32489-618]
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Guizzardi Renata, 2020, Advances in Artificial Intelligence. 33rd Canadian Conference on Artificial Intelligence, Canadian AI 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12109), P251, DOI 10.1007/978-3-030-47358-7_24
   Habibullah KM, 2021, INT REQUIR ENG CONF, P13, DOI 10.1109/RE51729.2021.00009
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   IEEE, ETH AL DES
   Jobin A, 2019, NAT MACH INTELL, V1, P389, DOI 10.1038/s42256-019-0088-2
   Köhl MA, 2019, INT REQUIR ENG CONF, P363, DOI 10.1109/RE.2019.00046
   Kwan D., 2021, ARXIV
   Lepri B., 2018, Philosophy & Technology, V31, P611, DOI DOI 10.1007/S13347-017-0279-X
   Paech Barbara, 2020, 2020 1st Workshop on Ethics in Requirements Engineering Research and Practice (REthics), P11, DOI 10.1109/REthics51204.2020.00008
   Leite JCSD, 2010, BUS INFORM SYST ENG+, V2, P127, DOI 10.1007/s12599-010-0102-z
   SIIA (Software and information industry association), 2017, ETH PRINC ART INT DA, P1
   Sommerville P., 2006, IEEE SOFTWARE
   Stirbu V., 2021, IEEE SOFTWARE
   Wohlin C, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106678
   Zieni B, 2021, INT REQUIR ENG CONF, P94, DOI 10.1109/RE51729.2021.00016
NR 36
TC 15
Z9 15
U1 15
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107197
DI 10.1016/j.infsof.2023.107197
EA MAR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C5ES9
UT WOS:000962150500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Iqbal, M
   Han, JC
   Zhou, ZQ
   Towey, D
   Chen, TY
AF Iqbal, Muhammad
   Han, Jia Cheng
   Zhou, Zhi Quan
   Towey, Dave
   Chen, Tsong Yueh
TI Metamorphic testing of Advanced Driver-Assistance System (ADAS)
   simulation platforms: Lane Keeping Assist System (LKAS) case studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Metamorphic testing; Metamorphic exploration; Advanced
   Driver-Assistance System (ADAS); Lane Keeping Assist System (LKAS);
   Simulation platform
AB Context: Simulation-based testing is essential when developing Advanced Driver-Assistance Systems (ADASs) and autonomous driving (AD) systems, producing fast, high-quality test results, at relatively low cost. Simulation testing relies on the quality of the ADAS simulation platform: If the simulation platform is faulty, then the simulation results may be incorrect, and hence useless. However, because of the lack of suitable test oracles - mechanisms to determine the correctness of the software output or behavior - it can be too difficult (or expensive) to verify or validate ADAS/AD simulation platforms, a situation known as the oracle problem. Objective: To alleviate the oracle problem and better understand ADAS simulation software.Methods: We develop geometric-transformation-based metamorphic testing approaches, and report on em-pirical studies conducted on the verification and validation (V&V) of three popular simulation platforms for ADAS development: Simulink, CarMaker and 51Sim-One Cloud. Our examination focused on the platforms' Lane Keeping Assist Systems (LKASs).Results: When tested with ordinary (traditional) test cases, no issues were identified on any simulation platform. However, after applying geometric-transformation-based metamorphic testing, issues were revealed, some of which were later confirmed by the MATLAB and IPG Automotive teams. To the best of our knowledge, this paper is the first to report on real bugs and issues in ADAS simulation platforms. Conclusion: Our research shows the simplicity, effectiveness and applicability of the proposed approach for ADAS simulation testing. This paper also provides successful examples of incorporating metamorphic testing into the testing of ADAS standards and protocols, and shows how practitioners can design effective metamorphic relations (MRs) inspired by using the symmetry metamorphic relation pattern.
C1 [Iqbal, Muhammad; Han, Jia Cheng; Zhou, Zhi Quan] Univ Wollongong, Sch Comp & Informat Technol, Wollongong, Australia.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Peoples R China.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Melbourne, Australia.
C3 University of Wollongong; University of Nottingham Ningbo China;
   Swinburne University of Technology
RP Towey, D (corresponding author), Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Peoples R China.
EM mi759@uowmail.edu.au; jch458@uowmail.edu.au; zhiquan@uow.edu.au;
   dave.towey@nottingham.edu.cn; tychen@swin.edu.au
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353; Iqbal, Muhammad/0000-0002-2778-949X
FU Higher Education Commission of Pakistan, through the University of
   Wollongong [4995]; Australian Research Council [DP210102447]; Australian
   Government Research Training Program scholarship; Western River
   entrepreneurship grant; Natural Science Foundation of China [61872167]
FX This work was supported, in part, by the Higher Education Commission of
   Pakistan, through the University of Wollongong, under project
   HRD/UESTPs/UETs/Batch-VI-2018, award no. 4995. It was also supported by
   a discovery grant of the Australian Research Council (project ID:
   DP210102447) , an Australian Government Research Train-ing Program
   scholarship, and a Western River entrepreneurship grant. This work was
   also partly supported by the Natural Science Foundation of China
   (project no. 61872167) . We wish to thank Morphick Solutions Pty Ltd,
   Australia, the MATLAB team, the IPG Automotive team, and the 51WORLD
   team, for their support.
CR Ahlgren J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P140, DOI 10.1109/ICSE-SEIP52600.2021.00023
   [Anonymous], 2016, J3048201602 SAE
   [Anonymous], 2011, SEHC
   [Anonymous], 2014, Standard ISO 11270:2014
   Ayerdi J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1264, DOI 10.1145/3468264.3473920
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bartlett J.S., 2021, WHICH LANE KEEPING A
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Chan A, 2022, IEEE T NEUR NET LEAR, V33, P6976, DOI 10.1109/TNNLS.2021.3072166
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Choksey J., 2021, LANE DEPARTURE VS LA
   Cumali K, 2019, 2019 11TH INTERNATIONAL CONFERENCE ON ELECTRICAL AND ELECTRONICS ENGINEERING (ELECO 2019), P820, DOI [10.23919/ELECO47770.2019.8990555, 10.23919/eleco47770.2019.8990555]
   Donaldson AF, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P1, DOI [10.1109/MET.2019.00008, 10.1007/978-3-030-03611-9]
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Hamlet R., 2002, ENCY SOFTWARE ENG, P970, DOI [10.1002/0471028959.sof268, DOI 10.1002/0471028959.SOF268]
   Han Jia Cheng, 2020, P IEEEACM 42 INT C S, P380
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Iqbal M, 2021, 2021 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2021), P37, DOI 10.1109/MET52542.2021.00013
   Jarman DC, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P21, DOI 10.1109/MET.2017.1
   Kanewala U, 2019, COMPUT SCI ENG, V21, P66, DOI 10.1109/MCSE.2018.2875368
   Klück F, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P418, DOI 10.1109/QRS.2019.00058
   Koopman P, 2017, IEEE INTEL TRANSP SY, V9, P90, DOI 10.1109/MITS.2016.2583491
   Lindvall M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P35, DOI 10.1109/MET.2017.6
   Mansur MN, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P639, DOI 10.1145/3468264.3468573
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Olsen M, 2019, IEEE T RELIAB, V68, P91, DOI 10.1109/TR.2018.2850315
   Pullum L., 2017, MET 17 P 2 INT WORKS, DOI [10.1109/MET.2017.11, DOI 10.1109/MET.2017.11]
   Raunak M. S., 2021, 2021 IEEE ACM 6 INT, P47
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sentouh C, 2019, IEEE T CONTR SYST T, V27, P1962, DOI 10.1109/TCST.2018.2842211
   Shan LJ, 2009, COMPUT J, V52, P571, DOI 10.1093/comjnl/bxm043
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Toohey J, 2021, COMPUTER, V54, P77, DOI [10.1109/MC.2021.3079921, 10.1109/mc.2021.3079921]
   Valle P, 2021, PROC IEEE ACM INT C, P105, DOI 10.1109/ICSE-Companion52605.2021.00048
   Xu LM, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111060
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou JW, 2016, SAE INT J PASSENG CA, V9, P66, DOI 10.4271/2016-01-0049
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2018, J SYST SOFTWARE, V136, P187, DOI 10.1016/j.jss.2017.08.031
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 47
TC 4
Z9 4
U1 7
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107104
DI 10.1016/j.infsof.2022.107104
EA DEC 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200016
DA 2024-07-18
ER

PT J
AU Ozcelikkan, N
   Tuzkaya, G
   Alabas-Uslu, C
   Sennaroglu, B
AF Ozcelikkan, Nilay
   Tuzkaya, Gulfem
   Alabas-Uslu, Cigdem
   Sennaroglu, Bahar
TI A multi-objective agile project planning model and a comparative
   meta-heuristic approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Sprint planning; Scrum; Multi-objective
   model; NSGA-II; SPEA2
ID NSGA-II; OPTIMIZATION; ALGORITHM
AB Agile software development methodologies are used to meet the changing needs in the market. The most popular framework among these methodologies is the Scrum framework. In Scrum planning, the assignment of user stories to sprints requires the consideration of multiple objectives to use the limited resources more effectively. In this paper, a multi-objective mixed-integer programming model is developed which considers three objectives: maximizing the sprint capacity usage, maximizing the assignment of user stories with high priority to primary sprints, and maximizing the assignment of affine user stories to the same sprint. The aim is to contribute to both theory and practice of Scrum planning considering multiple objectives. Additionally, different from the existing literature of Scrum planning, alternative user stories are also taken into account. The proposed model is applied to the small, medium, and big-sized instances of the problem taken from a real-life system. Non-dominated Sorting Genetic Algorithm (NSGA-II) and Strong Pareto Evolutionary Algorithm (SPEA2) are used as heuristic approaches since big-sized instances of the problem could not be solved using optimization approaches. To analyze the performances of these algorithms, Hypervolume (HV), Epsilon (epsilon), Generational Distance (GD), Inverted Generational Distance (IGD), Inverted Generational Distance Plus (IGD+), and Spread (Delta) indicators are used. Results showed that NSGA-II performs better than SPEA2 according to e indicator for big-sized instance. On the other hand, SPEA2 performs better than NSGA-II according to HV, GD, IGD, IGD+, and Delta indicators. However, the results are very close to each other for HV, epsilon, IGD, and IGD+ indicators. In conclusion, both algorithms can be used to deal with the multi-objective Scrum planning problem.
C1 [Ozcelikkan, Nilay; Tuzkaya, Gulfem; Alabas-Uslu, Cigdem; Sennaroglu, Bahar] Marmara Univ, Dept Ind Engn, Istanbul, Turkey.
   [Ozcelikkan, Nilay] Softtech Software Technol Res Dev & Mkt Trade Inc, Istanbul, Turkey.
C3 Marmara University
RP Tuzkaya, G (corresponding author), Marmara Univ, Dept Ind Engn, Istanbul, Turkey.
EM nilay.ozcelikkan@gmail.com; gulfem.tuzkaya@marmara.edu.tr;
   cigdem.uslu@marmara.edu.tr; bsennar@marmara.edu.tr
RI Tuzkaya, Gulfem/L-5809-2016; Sennaroglu, Bahar/L-3782-2016
OI Tuzkaya, Gulfem/0000-0001-7683-4405; Sennaroglu,
   Bahar/0000-0002-6809-634X
CR Ahmadi H, 2016, IET GENER TRANSM DIS, V10, P31, DOI 10.1049/iet-gtd.2014.1226
   Al-Zubaidi WHA, 2018, ASIA PAC SOFWR ENG, P484, DOI 10.1109/APSEC.2018.00063
   Alanis D, 2014, IEEE ACCESS, V2, P614, DOI 10.1109/ACCESS.2014.2327596
   Beck K., 2000, EXTREME PROGRAMMING
   Ben Hamida I, 2016, I C SCI TECH AUTO CO, P368, DOI 10.1109/STA.2016.7952079
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Boschetti MA, 2014, COMPUT OPER RES, V43, P116, DOI 10.1016/j.cor.2013.09.007
   Carson J., 2017, Genetic Algorithms: Advances in Research and Applications
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 1995, Complex Systems, V9, P115
   Deb K., 1996, Computer Science and informatics, V26, P30
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dilettoso E, 2017, MATH COMPUT APPL, V22, DOI 10.3390/mca22010025
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Escandon-Bailon V, 2021, KNOWL-BASED SYST, V220, DOI 10.1016/j.knosys.2021.106922
   Falcon-Cardona J.G., 2021, EC P GENETIC EVOLUTI, DOI [10.1145/3449639, DOI 10.1145/3449639]
   Fowler M., 2001, Software Development, V9, P28
   Gademann N, 2005, IIE TRANS, V37, P153, DOI 10.1080/07408170590885611
   Gadhvi B, 2016, PROC TECH, V23, P361, DOI 10.1016/j.protcy.2016.03.038
   Galin D., 2018, Software Quality: Concepts and Practice, P635, DOI [10.1002/9781119134527.app4, DOI 10.1002/9781119134527.APP4]
   Ghosh A, 2008, FUND INFORM, V83, P231
   Gilb T., 1981, SIGSOFT SOFTW ENG NO, V6, P17, DOI DOI 10.1145/1010865.1010868
   Golfarelli Matteo, 2012, Data Warehousing and Knowledge Discovery. Proceedings of the 14th International Conference, DaWaK 2012, P30, DOI 10.1007/978-3-642-32584-7_3
   Golfarelli M, 2013, J SYST SOFTWARE, V86, P2357, DOI 10.1016/j.jss.2013.04.028
   Griffiths M., 2020, PMI ACP EXAM PREP
   Falcón-Cardona JG, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P2024, DOI 10.1145/3319619.3326902
   Huseyinov I, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P531, DOI [10.1109/ubmk.2019.8907139, 10.1109/UBMK.2019.8907139]
   Iqbal U., 2020, KIET J COMPUT INF SC, V3, P65
   Ishibuchi Hisao, 2019, Evolutionary Multi-Criterion Optimization. 10th International Conference, EMO 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11411), P332, DOI 10.1007/978-3-030-12598-1_27
   Jingxian Yang, 2020, 2020 IEEE 4th Conference on Energy Internet and Energy System Integration (EI2), P2267, DOI 10.1109/EI250167.2020.9346601
   Johnson E., 2021, Why is Scrum so Popular? Why is Scrum So Successful?
   Kumar Paul Neeraj, 2020, Proyecciones (Antofagasta), V39, P1393
   Li C, 2010, REQUIR ENG, V15, P375, DOI 10.1007/s00766-010-0104-x
   Liker J. K., 2004, TOYOTA WAY 14 MANAGE
   Lim Siew Mooi, 2017, International Journal of Machine Learning and Computing, V7, P9, DOI 10.18178/ijmlc.2017.7.1.611
   Liu Q, 2018, IEEE ACCESS, V6, P6286, DOI 10.1109/ACCESS.2018.2789361
   Ma BL, 2021, IEEE T NUCL SCI, V68, P110, DOI 10.1109/TNS.2020.3040500
   Maheta HH, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON ISSUES AND CHALLENGES IN INTELLIGENT COMPUTING TECHNIQUES (ICICT), P75, DOI 10.1109/ICICICT.2014.6781256
   Nauss RM, 2003, INFORMS J COMPUT, V15, P249, DOI 10.1287/ijoc.15.3.249.16075
   Okabe T, 2003, IEEE C EVOL COMPUTAT, P878
   Orouskhani M, 2021, IEEE T FUZZY SYST, V29, P118, DOI 10.1109/TFUZZ.2020.2979119
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Savelsbergh M, 1997, OPER RES, V45, P831, DOI 10.1287/opre.45.6.831
   Schwaber K., 2020, Scrum Guide
   Singh P, 2018, 2018 FIRST INTERNATIONAL CONFERENCE ON SECURE CYBER COMPUTING AND COMMUNICATIONS (ICSCCC 2018), P273, DOI 10.1109/ICSCCC.2018.8703315
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Szoke A, 2011, INFORM SOFTWARE TECH, V53, P574, DOI 10.1016/j.infsof.2011.01.008
   Taha K, 2020, IEEE ACCESS, V8, P80855, DOI 10.1109/ACCESS.2020.2989219
   Tanabe R, 2020, IEEE T EVOLUT COMPUT, V24, P853, DOI 10.1109/TEVC.2020.2966014
   van Valkenhoef G, 2011, INFORM SOFTWARE TECH, V53, P1227, DOI 10.1016/j.infsof.2011.05.007
   Zaenudin E., 2016, 2016 International Conference on Information Technology Systems and Innovation (ICITSI), Bandung - Bali, Indonesia, P1, DOI DOI 10.1109/ICITSI.2016.7858224
   Zapotecas-Martinez Saul, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1495, DOI 10.1145/3377929.3398146
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., 2001, TIK-Report. 103, V103, DOI [10.3929/ethza-004284029, DOI 10.3929/ETHZA-004284029]
NR 55
TC 4
Z9 5
U1 2
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107023
DI 10.1016/j.infsof.2022.107023
EA AUG 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100012
DA 2024-07-18
ER

PT J
AU Jiang, MY
   Chen, TY
   Wang, S
AF Jiang, Mingyue
   Chen, Tsong Yueh
   Wang, Shuai
TI On the effectiveness of testing sentiment analysis systems with
   metamorphic testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Metamorphic relation; Sentiment analysis; False
   satisfaction
AB Context: Metamorphic testing (MT) has been successfully applied to a wide scope of software systems. In these applications, the testing results of MT form the basis for drawing conclusions about the target system's performance. Therefore, the effectiveness of MT is crucial to the trustfulness of the derived conclusions.
   Objective: However, due to the nature of MT, its effectiveness can be affected by various factors. Despite of MT's success, it is still important to study its effectiveness under different application contexts.
   Method: To investigate the effectiveness of MT, we focus on an important aspect, namely, false satisfactions (which are satisfactions of metamorphic relations that involve at least one failing execution), and revisit the application of MT to sentiment analysis (SA) systems. An in-depth analysis of the essence of false satisfactions reveals the situations where they would occur, and how they would affect the effectiveness of MT. Furthermore, 20 metamorphic relations (MRs) are identified for supporting a user-oriented evaluation of SA systems.
   Results: The occurrence rates of false satisfactions are reported with respect to four SA systems. For the majority of MRs, false satisfactions account for about 20% to 50% of all MR satisfactions, suggesting that false satisfactions occur quite frequently in the evaluation of SA systems. It is also demonstrated that such high occurrence rates of false satisfactions adversely affect the users' selection of SA systems.
   Conclusion: Our analysis reveals that without considering the occurrence of false satisfactions, MT may overestimate the system's conformance to the relevant MR. Furthermore, our experiments empirically show that conclusions derived from MT can be adversely affected when there are many false satisfactions. Our findings will help the MT community to adopt a more fair and reliable way of using the test outcomes of MT, and can also inspire the development of solid foundations for MT.
C1 [Jiang, Mingyue] Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou, Peoples R China.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
   [Wang, Shuai] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
C3 Zhejiang Sci-Tech University; Swinburne University of Technology; Hong
   Kong University of Science & Technology
RP Jiang, MY (corresponding author), Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou, Peoples R China.
EM mjiang@zstu.edu.cn; tychen@swin.edu.au; shuaiw@cse.ust.hk
OI Wang, Shuai/0000-0002-0866-0308
FU National Nature Science Foundation of China [61802349, 62132014];
   Zhejiang Provincial Natural Science Foundation of China [LY20F020021]
FX This work was supported by the National Nature Science Foundation of
   China (Grant No. 61802349 and No. 62132014), and the Zhejiang Provincial
   Natural Science Foundation of China (Grant No. LY20F020021).
CR Ahlgren J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P140, DOI 10.1109/ICSE-SEIP52600.2021.00023
   Alamoodi AH, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114155
   Alharthi AS, 2020, 2020 IEEE SENSORS APPLICATIONS SYMPOSIUM (SAS 2020), DOI 10.1109/sas48726.2020.9220046
   [Anonymous], 2006, AAAI Symposium on Computational Approaches to Analysing Weblogs (AAAI-CAAW)
   Asyrofi M.H., 2021, ARXIV210201859
   Ayerdi J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1264, DOI 10.1145/3468264.3473920
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chandran A, 2022, INDIAN J OTOLARYNGOL, V74, P3043, DOI [10.1007/s12070-021-02758-8, 10.1080/09715010.2021.1902872]
   Chen TY, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1487, DOI 10.1145/3468264.3473136
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   de Oliveira GA, 2021, COMPUT COMMUN, V174, P154, DOI 10.1016/j.comcom.2021.04.026
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Donaldson AF, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P1, DOI [10.1109/MET.2019.00008, 10.1007/978-3-030-03611-9]
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   He PJ, 2020, PROC INT CONF SOFTW, P961, DOI 10.1145/3377811.3380339
   Hernández A, 2016, PROCEEDINGS 2016 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P610, DOI 10.1109/ICIT.2016.7474819
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   Hughes J, 2020, LECT NOTES COMPUT SC, V12053, P58, DOI 10.1007/978-3-030-47147-7_4
   Jiang MY, 2021, IEEE T RELIAB, V70, P285, DOI 10.1109/TR.2020.3003313
   Jiang MY, 2017, J SYST SOFTWARE, V126, P127, DOI 10.1016/j.jss.2016.04.002
   Junhua Ding, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P190, DOI 10.1109/SSIRI.2010.25
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kiritchenko S, 2018, P 7 JOINT C LEX COMP, P43, DOI [10.18653/v1/S18-2005, DOI 10.18653/V1/S18-2005]
   Kuo FC, 2011, C LOCAL COMPUT NETW, P291, DOI 10.1109/LCN.2011.6115306
   Li XD, 2014, KNOWL-BASED SYST, V69, P14, DOI 10.1016/j.knosys.2014.04.022
   Li YM, 2012, DECIS SUPPORT SYST, V54, P9, DOI 10.1016/j.dss.2012.02.012
   Lin XY, 2021, IEEE SOFTWARE, V38, P61, DOI [10.1109/ms.2020.3029468, 10.1109/MS.2020.3029468]
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Mai PX, 2020, IEEE INT CONF SOFTW, P186, DOI 10.1109/ICST46399.2020.00028
   Mansur MN, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P639, DOI 10.1145/3468264.3468573
   Medhat W, 2014, AIN SHAMS ENG J, V5, P1093, DOI 10.1016/j.asej.2014.04.011
   Olsen M, 2019, IEEE T RELIAB, V68, P91, DOI 10.1109/TR.2018.2850315
   Pang B., 2004, ANN M ASS COMP LING, P271, DOI [10.3115/1218955.1218990, DOI 10.3115/1218955.1218990]
   Qiu K., 2020, IEEE T SOFTWARE ENG, V1
   Ribeiro M. T., 2020, ARXIV200504118, DOI 10.18653/v1/2020.acl-main.442
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Spieker H, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110574
   Sun C., 2019, IEEE T SOFTWARE ENG, V47, P1764
   Sun CA, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P12, DOI [10.1109/MET.2016.011, 10.1145/2896971.2896974]
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tolksdorf S, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P273, DOI 10.1145/3293882.3330567
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Xie XY, 2020, IEEE T RELIAB, V69, P1293, DOI 10.1109/TR.2020.2972266
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yousif A, 2019, ARTIF INTELL REV, V52, P1805, DOI 10.1007/s10462-017-9597-8
   Yuan YY, 2021, PROC CVPR IEEE, P16903, DOI 10.1109/CVPR46437.2021.01663
   Yue L, 2019, KNOWL INF SYST, V60, P617, DOI 10.1007/s10115-018-1236-4
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou ZQ, 2021, IEEE T SOFTWARE ENG, V47, P1164, DOI 10.1109/TSE.2019.2915065
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 59
TC 4
Z9 5
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106966
DI 10.1016/j.infsof.2022.106966
EA JUN 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100011
DA 2024-07-18
ER

PT J
AU Mandal, N
   Uddin, G
AF Mandal, Nibir
   Uddin, Gias
TI An empirical study of IoT security aspects at sentence-level in
   developer textual discussions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE IoT; Security; Stack overflow; Deep learning; Empirical study
ID SENTIMENT ANALYSIS; INTERNET; THINGS
AB Context: IoT is a rapidly emerging paradigm that now encompasses almost every aspect of our modern life. As such, ensuring the security of IoT devices is crucial. IoT devices can differ from traditional computing (e.g., low power, storage, computing), thereby the design and implementation of proper security measures can be challenging in IoT devices. We observed that IoT developers discuss their security-related challenges in developer forums like Stack Overflow (SO). However, we find that IoT security discussions can also be buried inside non-security discussions in SO.
   Objective: In this paper, we aim to understand the challenges IoT developers face while applying security practices and techniques to IoT devices. We have two goals: (1) Develop a model that can automatically find security-related IoT discussions in SO, and (2) Study the model output (i.e., the security discussions) to learn about IoT developer security-related challenges.
   Methods: First, we download all 53K posts from StackOverflow (SO) that contain discussions about various IoT devices, tools, and techniques. Second, we manually labeled 5,919 sentences from 53K posts as 1 or 0 (i.e., whether they contain a security aspect or not). Third, we then use this benchmark to investigate a suite of deep learning transformer models. The best performing model is called SecBot. Fourth, we apply SecBot on the entire 53K posts and find around 30K sentences labeled as security. Fifth, we apply topic modeling to the 30K security-related sentences labeled by SecBot. Then we label and categorize the topics. Sixth, we analyze the evolution of the topics in SO.
   Results: We found that (1) SecBot is based on the retraining of the deep learning model RoBERTa. SecBot offers the best F1-Score of .935, (2) there are six error categories in misclassified samples by SecBot. SecBot was mostly wrong when the keywords/contexts were ambiguous (e.g., 'gateway' can be a security gateway or a simple gateway), (3) there are 9 security topics grouped into three categories: Software, Hardware, and Network, and (4) the highest number of topics belongs to software security, followed by network security and hardware security.
   Conclusion: IoT researchers and vendors can use SecBot to collect and analyze security-related discussions from developer discussions in SO. The analysis of nine security-related topics can guide major IoT stakeholders like IoT Security Enthusiasts, Developers, Vendors, Educators, and Researchers in the rapidly emerging IoT ecosystems.
C1 [Mandal, Nibir; Uddin, Gias] Univ Calgary, DISA Lab, Calgary, AB, Canada.
C3 University of Calgary
RP Uddin, G (corresponding author), Univ Calgary, DISA Lab, Calgary, AB, Canada.
EM gias.uddin@ucalgary.ca
OI Uddin, Gias/0000-0003-1376-095X
FU NSERC [RGPIN-2021-02575]
FX Gias Uddin was supported by NSERC Grant (RGPIN-2021-02575).
CR Abdellatif A., 2020, 17 INT C MINING SOFT
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   Alharbi ASM, 2019, COGN SYST RES, V54, P50, DOI 10.1016/j.cogsys.2018.10.001
   Aly M, 2021, INTERNET THINGS-NETH, V14, DOI 10.1016/j.iot.2021.100364
   [Anonymous], 2015, ACM HOTNETS
   [Anonymous], 2019, STACK EXCH DAT DUMP
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Awad M., 2015, Support vector machines for classification, P39, DOI [DOI 10.1007/978-1-4302-5990-93, 10.1007/978-1-4302-5990-9, DOI 10.1007/978-1-4302-5990-9_3]
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Batra H, 2021, LECT NOTES COMPUT SC, V12923, P138, DOI 10.1007/978-3-030-86472-9_13
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Burmeister E, 2012, AUST CRIT CARE, V25, P271, DOI 10.1016/j.aucc.2012.07.002
   Celik ZB, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23326
   Celik ZB, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P147
   Celik ZB, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1687
   Chaqfeh M. A., 2012, 2012 International Conference on Collaboration Technologies and Systems (CTS), P21, DOI 10.1109/CTS.2012.6261022
   Chauhan U, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3462478
   Chi HT, 2020, I C DEPEND SYS NETWO, P411, DOI 10.1109/DSN48063.2020.00056
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Dai J., 2021, J PHYS C SERIES, V1827
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P832, DOI 10.1145/3243734.3243865
   Edwards S., 2016, RAPIDITY NETW, V16, P18
   Frustaci M, 2018, IEEE INTERNET THINGS, V5, P2483, DOI 10.1109/JIOT.2017.2767291
   Ghag KV, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATION AND CONTROL (IC4)
   Gong NZQ, 2017, INT CON DISTR COMP S, P2212, DOI 10.1109/ICDCS.2017.68
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Hameed Z, 2020, IEEE ACCESS, V8, P73992, DOI 10.1109/ACCESS.2020.2988550
   He WJ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P255
   Ho G, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P461, DOI 10.1145/2897845.2897886
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Hussain SR, 2019, IEEE INT CONF DISTR, P66, DOI 10.1109/DCOSS.2019.00032
   Kant Neel., 2018, arXiv preprint arXiv:1812.01207
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   Leclezio L., 2014, PEDIATR NEUROL, V52
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Liao YX, 2018, IEEE INTERNET THINGS, V5, P4515, DOI 10.1109/JIOT.2018.2834151
   Liu Yinhan, 2019, ARXIV190711692
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marjani M, 2017, IEEE ACCESS, V5, P5247, DOI 10.1109/ACCESS.2017.2689040
   Minoli D, 2017, 2017 IEEE/ACM SECOND INTERNATIONAL CONFERENCE ON CONNECTED HEALTH - APPLICATIONS, SYSTEMS AND ENGINEERING TECHNOLOGIES (CHASE), P13, DOI 10.1109/CHASE.2017.53
   NLTK, 2016, PROC WORKSHOP SEMANT
   Obaidi M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P80, DOI 10.1145/3463274.3463328
   Overflow S., 2020, STACK OV QUEST
   Pipalia K., P 2020 9 INT C SYST, P411
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Pretz K., 2013, The next evolution of the internet, V50
   Prinzie A, 2008, EXPERT SYST APPL, V34, P1721, DOI 10.1016/j.eswa.2007.01.029
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Ronen E, 2017, P IEEE S SECUR PRIV, P195, DOI 10.1109/SP.2017.14
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sethi P, 2017, J ELECTR COMPUT ENG, V2017, DOI 10.1155/2017/9324035
   Sharma N., 2019, Internet of Things and Big Data Analytics for Smart Generation, P27, DOI [DOI 10.1007/978-3-030-04203-5_3, 10.1007/978-3-030-04203-5_3]
   Shekar B. H., 2019, 2019 2 INT C ADV COM, P1, DOI [DOI 10.1109/ICACCP.2019.8882943, 10.1109/ICACCP.2019.8882943]
   Sun X, 2015, Computer and Information Science, P22
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Tabassum J., 2020, P 58 ANN M ASS COMPU
   Tai W.-H., 2020, FINDINGS
   Tawalbeh L, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10124102
   Tedeschi P, 2020, IEEE INTERNET THINGS, V7, P621, DOI 10.1109/JIOT.2019.2953549
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Uddin G., 2018, IEEE T SOFTW ENG, V35
   Uddin G., 2021, EMPIRICAL STUDY EFFE
   Uddin G, 2019, IEEE Transactions on Software Engineering, V35
   Uddin G, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND PRACTICES FOR THE IOT (SERP4IOT), P36, DOI 10.1109/SERP4IoT52556.2021.00013
   Uddin G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10021-5
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Viera AJ, 2005, FAM MED, V37, P360
   Wan Z., 2019, IEEE T SOFTWARE ENG, P24
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
   Winters R, 2010, OCHSNER J, V10, P213
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yang Z., 2020, XLNET GEN AUTOREGRES
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhang W, 2011, EXPERT SYST APPL, V38, P2758, DOI 10.1016/j.eswa.2010.08.066
   Zhang ZK, 2014, IEEE INT CONF SERV, P230, DOI 10.1109/SOCA.2014.58
NR 91
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106970
DI 10.1016/j.infsof.2022.106970
EA JUN 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wong, TRC
   Wagner, M
   Treude, C
AF Wong, Terence
   Wagner, Markus
   Treude, Christoph
TI Self-adaptive systems: A systematic literature review across categories
   and domains
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Self-adaptive systems; Literature review
ID CYBER-PHYSICAL SYSTEMS; MULTIAGENT SYSTEMS; SOFTWARE ARCHITECTURE;
   HEALING SYSTEMS; FORMAL APPROACH; CONTEXT-AWARE; ADAPTATION;
   PERFORMANCE; MANAGEMENT; DRIVEN
AB Context: Championed by IBM's vision of autonomic computing paper in 2003, the autonomic computing research field has seen increased research activity over the last 20 years. Several conferences (SEAMS, SASO, ICAC) and workshops (SISSY) have been established and have contributed to the autonomic computing knowledge base in search of a new kind of system - a self-adaptive system (SAS). These systems are characterized by being context-aware and can act on that awareness. The actions carried out could be on the system or on the context (or environment). The underlying goal of a SAS is the sustained achievement of its goals despite changes in its environment. Objective: Despite a number of literature reviews on specific aspects of SASs ranging from their requirements to quality attributes, we lack a systematic understanding of the current state of the art. Method: This paper contributes a systematic literature review into self-adaptive systems using the dblp computer science bibliography as a database. We filtered the records systematically in successive steps to arrive at 293 relevant papers. Each paper was critically analyzed and categorized into an attribute matrix. This matrix consisted of five categories, with each category having multiple attributes. The attributes of each paper, along with the summary of its contents formed the basis of the literature review that spanned 30 years (1990-2020). Results: We characterize the maturation process of the research area from theoretical papers over practical implementations to more holistic and generic approaches, frameworks, and exemplars, applied to areas such as networking, web services, and robotics, with much of the recent work focusing on IoT and IaaS. Conclusion: While there is an ebb and flow of application domains, domains like bio-inspired approaches, security, and cyber-physical systems showed promise to grow heading into the 2020s.
C1 [Wong, Terence; Wagner, Markus] Univ Adelaide, Sch Comp Sci, Adelaide, Australia.
   [Treude, Christoph] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Australia.
C3 University of Adelaide; University of Melbourne
RP Treude, C (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Australia.
EM terence.wong@adelaide.edu.au; markus.wagner@adelaide.edu.au;
   christoph.treude@unimelb.edu.au
RI Wagner, Markus/HZM-6101-2023; Treude, Christoph/AAZ-6257-2021
OI Wagner, Markus/0000-0002-3124-0061; Treude,
   Christoph/0000-0002-6919-2149
CR Adeel U., 2014, ICAC, P161
   Almeida J., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P84
   Alvares F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P271, DOI 10.1109/ICAC.2017.48
   Alvares F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P187, DOI 10.1109/ICAC.2015.31
   Andersson J, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P38, DOI 10.1109/SEAMS.2009.5069072
   Andrade SS, 2013, INT CONF SELF SELF, P61, DOI 10.1109/SASO.2013.42
   Andras P, 2005, LECT NOTES COMPUT SC, V3460, P229
   [Anonymous], 2010, P 7 INT C AUT COMP I, DOI DOI 10.1145/1809049.1809084
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Anthony Richard John, 2009, International Journal of Autonomic Computing, V1, P1, DOI 10.1504/IJAC.2009.024497
   Anthony RJ, 2005, 3RD INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P265
   Arellanes D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P24, DOI 10.1109/ICAC.2019.00014
   Aygalinc C, 2016, P IEEE I C SERV COMP, P491, DOI 10.1109/SCC.2016.70
   Babaoglu O., 2005, Self-Star Properties in Complex Information Systems. Conceptual and Practical Foundations, P1
   Ballagny C, 2009, INT CONF SELF SELF, P206, DOI 10.1109/SASO.2009.11
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Baresi L., 2008, ACM SEAMS 08, P57
   Barna C., 2011, Proceedings of the 8th ACM International Conference on Autonomic Computing - ICAC'11, P91
   Barrett R, 2005, ADV ENG INFORM, V19, P213, DOI 10.1016/j.aei.2004.11.001
   Bartolini N, 2009, COMPUT NETW, V53, P727, DOI 10.1016/j.comnet.2008.11.015
   Bauer L, 2007, FIRST IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, P344, DOI 10.1109/SASO.2007.2
   Beal J, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3105758
   Beauquier J, 1999, LECT NOTES COMPUT SC, V1693, P240
   Bellman K, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P1, DOI 10.1109/FAS-W.2019.00014
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bennani MN, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P62, DOI 10.1109/ICAC.2004.1301348
   Bernauer A, 2009, INT CONF SELF SELF, P126, DOI 10.1109/SASO.2009.41
   Berns A, 2009, INT CONF SELF SELF, P10, DOI 10.1109/SASO.2009.25
   Bhat V, 2005, 3RD INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P15
   Birdsey L, 2017, INT CONF SELF SELF, P131, DOI 10.1109/SASO.2017.22
   Boes J, 2017, J SYST SOFTWARE, V134, P12, DOI 10.1016/j.jss.2017.08.038
   Bonnet J, 2015, INT CONF SELF SELF, P11, DOI 10.1109/SASO.2015.9
   Borda A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P1, DOI 10.1145/3194133.3194146
   Bosse S, 2017, 2017 IEEE 2ND INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P70, DOI 10.1109/FAS-W.2017.123
   Boubin J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P11, DOI 10.1109/ICAC.2019.00012
   Breitgand D, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P204
   Brinkschulte U, 2016, CONCURR COMP-PRACT E, V28, P3711, DOI 10.1002/cpe.3460
   Brun Y., 2010, P 2010 ICSE WORKSH S, P1, DOI DOI 10.1145/1808984.1808985
   BULUSU N, 2004, ACM T EMBED COMPUT S, V3, P24, DOI [DOI 10.1145/972627.972630, 10.1145/972627.972630]
   Burzlaff F., 2019, P ANN HAWAII INT C S, P1, DOI [10.24251/hicss.2019.899, DOI 10.24251/HICSS.2019.899]
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Camara Javier, 2015, 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P146, DOI 10.1109/SEAMS.2015.14
   Cámara J, 2017, IEEE T DEPEND SECURE, V14, P50, DOI 10.1109/TDSC.2015.2429128
   Cámara J, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P155, DOI 10.1145/2593929.2593933
   Camara J, 2016, SCI COMPUT PROGRAM, V127, P50, DOI 10.1016/j.scico.2015.12.006
   Cámara J, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P13, DOI 10.1109/SEAMS.2013.6595488
   Cámara J, 2013, COMPUTING, V95, P689, DOI 10.1007/s00607-013-0311-7
   Cámara J, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P28, DOI 10.1109/SEAMS.2009.5069071
   Camara Javier, 2012, 7 INT S SOFTW ENG AD, P53, DOI [DOI 10.1109/SEAMS.2012.6224391, 10.1109/SEAMS.2012.6224391, 10.1109/seams.2012.6224391]
   Camara Moreno Javier, 2015, Formal Aspects of Component Software - 11th International Symposium, FACS 2014. Revised Selected Papers: LNCS 8997, P89, DOI 10.1007/978-3-319-15317-9_6
   Campbell A., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P119, DOI 10.1109/SASO.2011.23
   Carzaniga Antonio., 2008, Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems. Seams'08, P17
   Casanova P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P75, DOI 10.1145/2593929.2593946
   Chainbi W, 2005, FRONT ARTIF INTEL AP, V135, P282
   Champrasert P, 2012, CONCURR COMP-PRACT E, V24, P1015, DOI 10.1002/cpe.1906
   Chan KSM, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P20, DOI 10.1109/SEAMS.2009.5069070
   Chen BH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P676, DOI 10.1145/2568225.2568310
   Chen T, 2017, IEEE T SOFTWARE ENG, V43, P453, DOI 10.1109/TSE.2016.2608826
   Cheng A. M. K., 1992, Proceedings 11th Symposium on Reliable Distributed Systems (Cat. No.92CH3187-2), P172, DOI 10.1109/RELDIS.1992.235129
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Cheng SW, 2012, J SYST SOFTWARE, V85, P2860, DOI 10.1016/j.jss.2012.02.060
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   Cheng SW, 2005, LECT NOTES COMPUT SC, V3460, P158
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Clair G, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P107, DOI 10.1109/SASO.2008.19
   Coker Z, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P168, DOI 10.1109/SEAMS.2015.16
   Colson K, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P4, DOI [10.1145/2897053.2897055, 10.1109/SEAMS.2016.009]
   Condori-Fernandez N, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P15, DOI 10.1109/SEmotion.2017.8
   D'Angelo M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P13, DOI 10.1109/SEAMS.2019.00012
   da Silva C.E., 2011, P 6 INT S SOFTW ENG, P148, DOI DOI 10.1145/1988008.1988029
   da Silva CE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P86, DOI 10.1109/SEAMS.2009.5069077
   da Silva JPS, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P87, DOI 10.1145/3194133.3194136
   Dai YS, 2011, IEEE T RELIAB, V60, P369, DOI 10.1109/TR.2011.2136490
   Dalpiaz F, 2009, LECT NOTES COMPUT SC, V5565, P246, DOI 10.1007/978-3-642-02144-2_22
   de Lemos R, 2005, LECT NOTES COMPUT SC, V3460, P219
   De Wolf T, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P52
   Debbabi B., 2012, 2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2012), P69, DOI 10.1109/SASO.2012.21
   DeVries B, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P94, DOI 10.1145/3194133.3194141
   Diaconescu A, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P168, DOI 10.1109/FAS-W.2018.00043
   Diaconescu A, 2016, INT CONF SELF SELF, P100, DOI 10.1109/SASO.2016.16
   Ding ZH, 2018, IEEE T FUZZY SYST, V26, P967, DOI 10.1109/TFUZZ.2017.2700286
   Dolev S, 2008, IEEE T SOFTWARE ENG, V34, P564, DOI 10.1109/TSE.2008.46
   Dotsch Florian, 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P223, DOI 10.1109/SASO.2010.20
   Dusparic I, 2009, INT CONF SELF SELF, P20, DOI 10.1109/SASO.2009.23
   Dusparic I, 2009, LECT NOTES COMPUT SC, V5586, P105, DOI 10.1007/978-3-642-02704-8_9
   Dustdar S., 2010, P 2010 ICSE WORKSH S, P10, DOI [DOI 10.1145/18089841808986, DOI 10.1145/1808984.1808986]
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Filieri A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P13, DOI 10.1145/2786805.2786833
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Floch J, 2013, SOFTWARE PRACT EXPER, V43, P359, DOI 10.1002/spe.2116
   Franco JM, 2016, J SYST SOFTWARE, V115, P42, DOI 10.1016/j.jss.2016.01.026
   Fredericks Erik M., 2015, 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P157, DOI 10.1109/SEAMS.2015.15
   Fredericks EM, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P59, DOI 10.1145/3194718.3194726
   Fredericks EM, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P16, DOI [10.1109/SEAMS.2016.010, 10.1145/2897053.2897059]
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Fredericks EM, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P8, DOI 10.1109/SBST.2015.9
   Gacek C., 2008, P INT WORKSH SOFTW E, P121, DOI [DOI 10.1145/1370018.1370040, 10.1145/1370018.1370040]
   Ganek AG, 2004, THIRD IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P151, DOI 10.1109/NCA.2004.1347772
   Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   Garcia, 2010, P IEEEACM INT C AUTO, P467, DOI [10.1145/1858996.1859092, DOI 10.1145/1858996.1859092]
   Gerostathopoulos I, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P59, DOI 10.1109/SEAMS51251.2021.00018
   Gerostathopoulos I, 2019, J SYST SOFTWARE, V148, P37, DOI 10.1016/j.jss.2018.10.051
   Gerostathopoulos I, 2016, J SYST SOFTWARE, V122, P378, DOI 10.1016/j.jss.2016.02.028
   Ghahremani S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P59, DOI 10.1109/ICAC.2017.35
   Ghanbari H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P48, DOI 10.1109/SEAMS.2009.5069073
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Gomaa H., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P11, DOI 10.1109/SEAMS.2012.6224386
   Pereira EG, 2006, J COMPUT SYST SCI, V72, P1172, DOI 10.1016/j.jcss.2005.12.008
   Grosselfinger P, 2013, INT CONF SELF SELF, P121, DOI 10.1109/SASO.2013.15
   Grua EM, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P51, DOI 10.1109/SEAMS.2019.00016
   Gupta I, 2005, LECT NOTES COMPUT SC, V3460, P260
   Hales D, 2005, LECT NOTES COMPUT SC, V3460, P433
   Hassan S, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P134, DOI 10.1109/SEAMS.2015.13
   Heinzemann C, 2013, INT CONF SELF SELF, P71, DOI 10.1109/SASO.2013.17
   Hemmati H, 2008, LECT NOTES COMPUT SC, V5060, P289
   Herbst NR, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P46, DOI 10.1109/SEAMS.2015.23
   Houben G.-J., 2005, 1 INT WORKSH AD SELF, P53
   Hu PZ, 2008, INT CONF PERVAS COMP, P213, DOI 10.1109/PERCOM.2008.56
   Huang WC, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P123, DOI 10.1109/SEAMS.2013.6595499
   Hudson J., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P11, DOI 10.1109/SASO.2011.12
   Hudson J, 2015, AUTON AGENT MULTI-AG, V29, P973, DOI 10.1007/s10458-014-9274-0
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Idziak P, 2014, INT CONF SELF SELF, P137, DOI 10.1109/SASOW.2014.23
   Iftikhar M. Usman, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P76, DOI 10.1109/SEAMS.2017.21
   Iftikhar MU, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P125, DOI 10.1145/2593929.2593944
   Incerto E, 2017, IEEE INT CONF AUTOM, P485, DOI 10.1109/ASE.2017.8115660
   Inglés-Romero JF, 2013, LECT NOTES BUS INF P, V148, P432
   Jahan S, 2017, INT CONF SELF SELF, P121, DOI 10.1109/SASO.2017.21
   Jelasity M, 2006, IEEE INTELL SYST, V21, P50, DOI 10.1109/MIS.2006.30
   Jiao WP, 2016, J SYST SOFTWARE, V122, P165, DOI 10.1016/j.jss.2016.09.025
   Junuzovic S., 2012, P ACM C COMP SUPP CO, P1421, DOI [10.1145/2145204.2145414, DOI 10.1145/2145204.2145414]
   Kacem NH, 2010, LECT NOTES COMPUT SC, V6285, P279, DOI 10.1007/978-3-642-15114-9_21
   Kaddoum E., 2010, P 2010 ICSE WORKSHOP, P29, DOI [10.1145/1808984.1808988, DOI 10.1145/1808984.1808988]
   Kandasamy N, 2005, LECT NOTES COMPUT SC, V3460, P174
   Kapoor V, 2005, P IEEE I C SERV COMP, P41
   Kasinger H, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P139, DOI 10.1109/SASO.2008.51
   Kephart J., 2004, INT C AUTONOMIC COMP
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khakpour N, 2012, SCI COMPUT PROGRAM, V78, P3, DOI 10.1016/j.scico.2011.09.004
   Kim D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P76, DOI 10.1109/SEAMS.2009.5069076
   King DW, 2018, INT CONF SELF SELF, P60, DOI 10.1109/SASO.2018.00017
   King Tariq M., 2011, Autonomic and Trusted Computing. Proceedings 8th International Conference (ATC 2011), P31, DOI 10.1007/978-3-642-23496-5_3
   Kinneer C, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P40, DOI 10.1145/3194133.3194145
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Klus H., 2006, P 2006 INT WORKSH SE, P72, DOI [10.1145/1137677.1137692, DOI 10.1145/1137677.1137692]
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Krupitzer C, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P182, DOI 10.1109/FAS-W.2018.00045
   Krupitzer C, 2016, PR INT CONF AUTONOM, P308, DOI 10.1109/ICAC.2016.18
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kurmas Z, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P172, DOI 10.1109/ICAC.2004.1301361
   Lalanda P, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P488, DOI 10.1109/SCC.2014.71
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li XL, 2006, LECT NOTES COMPUT SC, V4158, P143
   Lorenzoli D, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P39, DOI 10.1109/ISSRE.2007.21
   Luckey M, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P143, DOI 10.1109/SEAMS.2013.6595501
   Luckey M, 2012, INT CONF SELF SELF, P111, DOI 10.1109/SASOW.2012.28
   Lulli G, 2011, LECT NOTES BUS INF P, V83, P385
   Lung CH, 2016, J SYST SOFTWARE, V121, P311, DOI 10.1016/j.jss.2016.06.102
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Malek S, 2009, PESOS: 2009 ICSE WORKSHOP ON PRINCIPLES OF ENGINEERING SERVICE ORIENTED SYSTEMS, P62, DOI 10.1109/PESOS.2009.5068821
   Marshall A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P149, DOI 10.1145/3194133.3194139
   Martin A, 2015, I C DEPEND SYS NETWO, P462, DOI 10.1109/DSN.2015.56
   Maurel Y., 2012, 2012 IEEE International Conference on Services Computing (SCC), P65, DOI 10.1109/SCC.2012.7
   Maurel Y., 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P544, DOI 10.1109/SCC.2011.36
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Meling H, 2007, LECT NOTES COMPUT SC, V4610, P156
   Mikic-Rakic M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P114, DOI 10.1109/ICAC.2004.1301354
   Moghaddam FA, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P23, DOI 10.1145/3129790.3129824
   Monteiro Barbosa Davi, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P24, DOI 10.1109/SEAMS.2017.18
   Moore R.W., 2011, P 6 INT S SOFTW ENG, P228, DOI [10.1145/1988008.1988041, DOI 10.1145/1988008.1988041]
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Moreno Gabriel A., 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P90, DOI 10.1109/SEAMS.2017.7
   Moreno Gabriel A., 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P42, DOI 10.1109/SEAMS.2017.2
   Moreno G, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P181, DOI 10.1109/SEAMS.2019.00031
   Moreno GA, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P51, DOI 10.1145/3194133.3194144
   Moreno GA, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P137, DOI 10.1145/3194133.3194163
   Moreno GA, 2016, PR INT CONF AUTONOM, P147, DOI 10.1109/ICAC.2016.59
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Muccini H, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P75, DOI [10.1109/SEAMS.2016.016, 10.1145/2897053.2897069]
   Nafz F, 2009, LECT NOTES COMPUT SC, V5586, P17, DOI 10.1007/978-3-642-02704-8_3
   Nakagawa H., 2012, 2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2012), P59, DOI 10.1109/SASO.2012.17
   Nakagawa Hiroyuki., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P40
   Nallur V, 2018, AUTON AGENT MULTI-AG, V32, P275, DOI 10.1007/s10458-017-9380-x
   Naqvi NZ, 2016, P ANN HICSS, P5701, DOI 10.1109/HICSS.2016.705
   Nitto E.D., 2012, 2012 IEEE 6 INTERNA, DOI [10.1109/saso.2012.27, DOI 10.1109/SASO.2012.27]
   Nowostawski M, 2004, LECT NOTES COMPUT SC, V3038, P552
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Palmerino J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P949, DOI 10.1109/ASE.2019.00092
   Pandey A, 2016, INT CONF SELF SELF, P130, DOI 10.1109/SASO.2016.19
   Pascual GG, 2015, FUTURE GENER COMP SY, V47, P127, DOI 10.1016/j.future.2014.08.015
   Pastrana JL, 2008, COMPUT J, V51, P481, DOI 10.1093/comjnl/bxm094
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Patikirikorala T., 2011, 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P218, DOI DOI 10.1145/1988008.1988040
   Patikirikorala T, 2012, J SYST SOFTWARE, V85, P2678, DOI 10.1016/j.jss.2012.05.077
   Peng X, 2012, J SYST SOFTWARE, V85, P2707, DOI 10.1016/j.jss.2012.04.079
   Pham TQ, 2000, 2000 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2000), VOLS 1-3, PROCEEDINGS, P1094, DOI 10.1109/IROS.2000.893165
   Philippe J, 2010, SOFTWARE PRACT EXPER, V40, P259, DOI 10.1002/spe.957
   Piel E., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P99, DOI 10.1109/SASO.2011.21
   Podolskiy V, 2019, INT CONF SELF SELF, P72, DOI 10.1109/SASO.2019.00018
   Podolskiy V, 2018, INT CONF SELF SELF, P40, DOI 10.1109/SASO.2018.00015
   Pournaras E, 2017, FUTURE GENER COMP SY, V76, P73, DOI 10.1016/j.future.2017.05.018
   Pradhan S, 2016, J SYST SOFTWARE, V122, P344, DOI 10.1016/j.jss.2016.05.038
   Provoost M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P195, DOI 10.1109/SEAMS.2019.00033
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Qin Y, 2016, J SYST SOFTWARE, V120, P70, DOI 10.1016/j.jss.2016.07.002
   Quintal F, 2019, CHI EA '19 EXTENDED ABSTRACTS: EXTENDED ABSTRACTS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290607.3312874
   Raibulet C, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P30, DOI 10.1145/3129790.3129825
   Ralph P., 2020, ARXIV PREPRINT ARXIV, DOI [10.48550/arXiv.2010.03525, DOI 10.48550/ARXIV.2010.03525]
   Rambold M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P192, DOI 10.1109/SCC.2009.59
   Reichstaller A, 2018, INT CONF SELF SELF, P80, DOI 10.1109/SASO.2018.00019
   Reorda MS, 2017, IEEE T COMPUT, V66, P1022, DOI 10.1109/TC.2016.2607749
   Rodrigues A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P206, DOI 10.1145/3194133.3194147
   Rosa L, 2013, IEEE T SOFTWARE ENG, V39, P403, DOI 10.1109/TSE.2012.29
   Rosemann N., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P1, DOI 10.1109/SASO.2011.11
   Salama M, 2017, J SYST SOFTWARE, V133, P95, DOI 10.1016/j.jss.2017.07.041
   Salehie M, 2012, SOFTWARE PRACT EXPER, V42, P211, DOI 10.1002/spe.1066
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Salvaneschi G, 2015, SCI COMPUT PROGRAM, V102, P20, DOI 10.1016/j.scico.2014.11.016
   Saputri TRD, 2020, IEEE ACCESS, V8, P205948, DOI 10.1109/ACCESS.2020.3036037
   Satzger B, 2008, LECT NOTES COMPUT SC, V5060, P60
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schneider C, 2015, SOFTWARE PRACT EXPER, V45, P1375, DOI 10.1002/spe.2250
   Seebach H, 2010, LECT NOTES COMPUT SC, V6407, P47, DOI 10.1007/978-3-642-16576-4_4
   Serrano M, 2009, LECT NOTES COMPUT SC, V5586, P249, DOI 10.1007/978-3-642-02704-8_19
   Shevtsov Stepan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P12, DOI 10.1109/SEAMS.2017.3
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Shin ME, 2005, SCI COMPUT PROGRAM, V57, P27, DOI 10.1016/j.scico.2004.10.003
   Sicard S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P101, DOI 10.1145/1368088.1368103
   Sivasubramanian S, 2006, FIRST INTERNATIONAL WORKSHOP ON ADVANCED ARCHITECTURES AND ALGORITHMS FOR INTERNET DELIVERY AND APPLICATIONS, PROCEEDINGS, P2
   Solano GF, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P89, DOI 10.1109/SEAMS.2019.00020
   Solomon B., 2010, Proceedings ACM ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P94, DOI DOI 10.1145/1808984.1808995
   Sousa J. P., 2005, ADV INFORM SYSTEMS E, P83
   Spinnner S, 2019, J SYST SOFTWARE, V147, P1, DOI 10.1016/j.jss.2018.09.089
   Staab S, 2003, IEEE INTELL SYST, V18, P72, DOI [10.1109/MIS.2003.1179197, 10.1109/MIS.2003.1217631]
   Staron M, 2018, SOFTWARE PRACT EXPER, V48, P719, DOI 10.1002/spe.2522
   Sucipto S., 2015, J SOFTWARE ENG, V1, P17
   Swanson J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P377, DOI 10.1145/2635868.2635915
   Sykes D., 2007, Proceedings of the 2007 conference on Specification and verification of component-based systems: 6th Joint Meeting of the European Conference on Software Engineering and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, P15, DOI DOI 10.1145/1292316.1292318
   Sykes Daniel., 2008, Proceedings of the 2008 international workshop on Software engineering for adaptive and self-managing systems, SEAMS '08, P1
   Taherizadeh S, 2018, J SYST SOFTWARE, V136, P19, DOI 10.1016/j.jss.2017.10.033
   Tajalli H., 2010, P IEEE ACM INT C AUT, P467, DOI DOI 10.1145/1858996.1859092
   Tamura G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P153, DOI 10.1109/SEAMS.2013.6595502
   Tidwell T, 2008, LECT NOTES COMPUT SC, V5060, P149
   Tomás L, 2011, FUTURE GENER COMP SY, V27, P486, DOI 10.1016/j.future.2010.12.004
   van der Burg S., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P208, DOI 10.1145/1988008.1988039
   van Veelen J.B., 2006, P 2006 INT WORKSHOP, P58, DOI [10.1145/1137677.1137689, DOI 10.1145/1137677.1137689]
   Vilajosana X., 2010, International Journal of Autonomic Computing, V1, P374, DOI 10.1504/IJAC.2010.037513
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Viroli M, 2013, SCI COMPUT PROGRAM, V78, P556, DOI 10.1016/j.scico.2012.10.002
   Vogel T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P129, DOI 10.1109/SEAMS.2012.6224399
   Vogel T., 2018, DAGSTUHL ARTIFACTS S, V4, DOI DOI 10.4230/DARTS.4.1.1
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   Wang SY, 2016, COMPUT NETW, V101, P158, DOI 10.1016/j.comnet.2015.12.017
   Wang YQ, 2009, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2009.66
   Weis T, 2011, P 2011 WORKSH ORG CO, P59, DOI DOI 10.1145/1998642.1998653
   Weiss G, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P26, DOI 10.1145/3194133.3194157
   Weiss G, 2009, LECT NOTES COMPUT SC, V5586, P32, DOI 10.1007/978-3-642-02704-8_4
   Weissbach M, 2017, INT CONF SELF SELF, P111, DOI 10.1109/SASO.2017.20
   Weyns D., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P89, DOI 10.1109/SEAMS.2012.6224395
   Weyns D., 2010, P 7 INT C AUTONOMIC, P205, DOI 10.1145/1809049.1809078
   Weyns D., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P84, DOI [DOI 10.1145/1808984.1808994, 10.1145/1808984.1808994]
   Weyns D, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P1, DOI 10.1109/FAS-W.2018.00012
   Weyns D, 2016, PR INT CONF AUTONOM, P364, DOI 10.1109/ICAC.2016.67
   Weyns D, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P3, DOI 10.1109/SEAMS.2013.6595487
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   White SR, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P2, DOI 10.1109/ICAC.2004.1301340
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wildstrom J, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P241
   Wolter K, 2005, LECT NOTES COMPUT SC, V3460, P189
   Yamauchi K, 1999, NEURAL NETWORKS, V12, P1347, DOI 10.1016/S0893-6080(99)00064-7
   Yan Z, 2006, LECT NOTES COMPUT SC, V4158, P279
   Yang JM, 2005, 14TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P69
   Yang WH, 2018, J SYST SOFTWARE, V138, P82, DOI 10.1016/j.jss.2017.12.009
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
   Yau SS, 2006, LECT NOTES COMPUT SC, V4158, P173
   Yuan E., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P109, DOI 10.1109/SEAMS.2012.6224397
   Yuan E, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P27, DOI 10.1145/2593929.2593934
   Zavala E, 2020, FUTURE GENER COMP SY, V105, P607, DOI 10.1016/j.future.2019.12.026
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zhao Y, 2005, LECT NOTES COMPUT SC, V3707, P39
   Zhuoqun Yang, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P55, DOI 10.1007/978-3-319-05843-6_5
NR 286
TC 11
Z9 11
U1 5
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2022
VL 148
AR 106934
DI 10.1016/j.infsof.2022.106934
EA MAY 2022
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1T7TN
UT WOS:000804930600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Malgaonkar, S
   Licorish, SA
   Savarimuthu, BTR
AF Malgaonkar, Saurabh
   Licorish, Sherlock A.
   Savarimuthu, Bastin Tony Roy
TI Prioritizing user concerns in app reviews-A study of requests for new
   features, enhancements and bug fixes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements prioritization; App reviews; Software maintenance; Natural
   language processing; Entropy; Frequency; TF-IDF; Sentiment analysis;
   Multi-criteria heuristic function
ID SOFTWARE REQUIREMENTS PRIORITIZATION; HEURISTIC ALGORITHM;
   CLASSIFICATION; SELECTION; DESIGN
AB Context: : App developers spend exhaustive manual efforts towards the identification and prioritization of informative end-user reviews. Informative reviews are those that express end-users' requests for new features, bug fixes and possible enhancements. Problem Statement: While prior studies have proposed approaches to convert app reviews into actionable knowledge, these are limited in utility due to being domain knowledge dependent or manually-based. Objective: : In this study, in order to facilitate app maintenance and evolution cycles, we develop two novel automated prioritization techniques to rank informative reviews, and also compare their performances. Method: : We developed the techniques comprising of entropy, frequency, TF-IDF and sentiment scoring methods using reviews from four popular apps comprising more than 1000 informative reviews in each app. Time and accuracy metrics were then used to measure the performance of our techniques. We performed evaluations where the ranking outcomes generated by our techniques were compared to those provided by regular app users and developers using two rounds of evaluations (internal and external evaluations). Results: : Our results show that the time required for prioritization was in the range of 17-25 s and the accuracy of prioritization was in the range of 73-90%. Conclusion: : These are promising outcomes when compared to prior work, where our outcomes were 4% and 185% better in terms of accuracy and time respectively. Thus, it is anticipated that our proposed techniques could support app developers in identifying and prioritizing informative reviews.
C1 [Malgaonkar, Saurabh; Licorish, Sherlock A.; Savarimuthu, Bastin Tony Roy] Univ Otago, Dept Informat Sci, Dunedin Otago, New Zealand.
RP Licorish, SA (corresponding author), Univ Otago, Dept Informat Sci, Dunedin Otago, New Zealand.
EM sherlock.licorish@otago.ac.nz; tony.savarimuthu@otago.ac.nz
FU Commerce Research Grant (CRG) at the Otago Business School
FX This work was partially funded by a Commerce Research Grant (CRG) at the
   Otago Business School.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Akao Y., 1994, QFD CUSTOMER DRIVEN
   Alin A, 2010, WIRES COMPUT STAT, V2, P370, DOI 10.1002/wics.84
   Allison P., 2012, STAT HORIZONS
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 2015, INT J SALES RETAILIN
   [Anonymous], 2014, TOLERANCE VARIANCE I
   [Anonymous], 2000, DETERMINING SAMPLE S
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Asghar MW, 2013, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2013.62
   Aslam N, 2020, IEEE ACCESS, V8, P185619, DOI 10.1109/ACCESS.2020.3029634
   Bebensee T., 2010, Binary Priority List for Prioritizing Software Requirements
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blot A., 2017, AUTOMATICALLY CONFIG
   Boehm B, 2001, PROC INT CONF SOFTW, P591, DOI 10.1109/ICSE.2001.919133
   Bozkurt S., 2016, MULTICRITERIA HEURIS, P17
   Brunetti G, 2000, COMPUT AIDED DESIGN, V32, P877, DOI 10.1016/S0010-4485(00)00076-2
   Campo Cristina del, 2016, Journal of Business Economics, V86, P389, DOI DOI 10.1007/S11573-016-0811-Y
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chea R.S., 2009, GOOGLE PATENTS
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chopra R.K., 2016, PERSPECTIVES SCI, V8, P79
   Ciurumelea A., 2018, 2018 IEEE ACM 40 INT
   CORTINA JM, 1993, J MANAGE, V19, P915, DOI 10.1177/014920639301900411
   Das A, 2012, P 2 INT C WEB INT MI
   Dasgupta P., 2013, MULTIOBJECTIVE HEURI
   de Jong T, 2010, INSTR SCI, V38, P105, DOI 10.1007/s11251-009-9110-0
   Diebold P, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234177
   Dogtiev A., 2019, APP REVENUES
   Etaiwi L, 2020, P INT COMP SOFTW APP, P912, DOI 10.1109/COMPSAC48688.2020.0-151
   EVANS IS, 1977, T I BRIT GEOGR, V2, P98, DOI 10.2307/622195
   Fang X, 2015, Journal of Big Data, V2, P5, DOI 10.1186/s40537-015-0015-2
   Filcek G, 2017, TRANSP RES PROC, V27, P656, DOI 10.1016/j.trpro.2017.12.108
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Ganu G., 2009, Beyond the stars: Improving rating predictions using review text content
   Gao CY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P904, DOI 10.1145/3236024.3264595
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Garg N., 2017, GOASREP GOAL ORIENTE
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gopal Krishna Patro S., 2015, IARJSET, V2, P20, DOI [10.17148/IARJSET.2015.2305, DOI 10.17148/IARJSET.2015.2305]
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Groen E.C., 2015, CROWD BASED REQUIREM
   Hosseini M, 2015, INT CONF RES CHAL, P133, DOI 10.1109/RCIS.2015.7128873
   Htay SS, 2013, SCI WORLD J, DOI 10.1155/2013/394758
   Hutto C.J., 2013, P SIGCHI C HUMAN FAC
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Kadilar C, 2003, BIOMETRICAL J, V45, P218, DOI 10.1002/bimj.200390007
   Kassab M, 2015, INNOV SYST SOFTW ENG, V11, P303, DOI 10.1007/s11334-015-0260-8
   Katsanos C, 2009, LECT NOTES COMPUT SC, V5726, P419, DOI 10.1007/978-3-642-03655-2_45
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kifetew FM, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106635
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Ko Y., 2000, Proceedings of Twelfth International Conference on Software Engineering and Knowledge Engineering (SEKE 2000), Chicago, USA, P344
   Kravchenko TK, 2017, BIZN INFORM, V40, P7, DOI [10.17323/1998-0663.2017.2.7.16., 10.17323/1998-0663.2017.2.7.16]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Letier E, 2019, LECT NOTES COMPUT SC, V11412, P183, DOI 10.1007/978-3-030-15538-4_14
   Licorish S. A., 2017, INT C EV ASS SOFTW E, P108
   LIN S, 1973, OPER RES, V21, P498, DOI 10.1287/opre.21.2.498
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Malgaonkar S., 2020, AUTOMATED TAXONOMY G
   Malgaonkar S, 2020, IET SOFTW, V14, P607, DOI 10.1049/iet-sen.2019.0215
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Mayring P., 2000, A companion to qualitative research, P266
   McZara J, 2015, EMPIR SOFTW ENG, V20, P1721, DOI 10.1007/s10664-014-9334-8
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Rahman M.A., 2020, ASM SCI J, V13, P21
   Renyi A., 1961, P 4 BERK S MATH STAT, V1, P547
   Rodrigues P, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P109, DOI 10.1145/3041021.3054139
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Sharma M, 2020, ALGO INTELL SY, P347, DOI 10.1007/978-981-15-0222-4_31
   Solemon B, 2008, INTERNATIONAL SYMPOSIUM OF INFORMATION TECHNOLOGY 2008, VOLS 1-4, PROCEEDINGS, P2563
   Somprasertsri G, 2008, CONF CYBERN INTELL S, P786
   Srinivasa-Desikan B., 2018, Natural Language Processing and Computational Linguistics
   Stumpf S, 2007, 2007 INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P82
   SUNDARAM S.K., 2005, Proceedings of the 2005 workshop on Predictor models in software engineering, P1, DOI 10.1145/1082983.1083169
   Suresh Keerthana Pramudi, 2020, 2020 International Conference on Computation, Automation and Knowledge Management (ICCAKM). Proceedings, P358, DOI 10.1109/ICCAKM46823.2020.9051529
   Takahira R, 2016, ENTROPY-SWITZ, V18, DOI 10.3390/e18100364
   Voola Persis, 2013, Software Engineering Notes, V38, P152, DOI 10.1145/2492248.2492278
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Zelkowitz M.V., 2003, Lecture Notes on Empirical Software Engineering, P229
   Zha ZJ, 2014, IEEE T KNOWL DATA EN, V26, P1211, DOI 10.1109/TKDE.2013.136
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
   Zhang R., 2008, 2008 IEEE WIC ACM IN
NR 94
TC 9
Z9 9
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106798
DI 10.1016/j.infsof.2021.106798
EA DEC 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YK3DU
UT WOS:000745098800004
DA 2024-07-18
ER

PT J
AU Yao, JX
   Shepperd, M
AF Yao, Jingxiu
   Shepperd, Martin
TI The impact of using biased performance metrics on software defect
   prediction research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Machine learning; Software defect prediction;
   Computational experiment; Classification metrics
ID CLASSIFICATION; REVIEWS
AB Context: Software engineering researchers have undertaken many experiments investigating the potential of software defect prediction algorithms. Unfortunately some widely used performance metrics are known to be problematic, most notably F1, but nevertheless F1 is widely used. Objective: To investigate the potential impact of using F1 on the validity of this large body of research. Method: We undertook a systematic review to locate relevant experiments and then extract all pairwise comparisons of defect prediction performance using F1 and the unbiased Matthews correlation coefficient (MCC). Results: We found a total of 38 primary studies. These contain 12,471 pairs of results. Of these comparisons, 21.95% changed direction when the MCC metric is used instead of the biased F1 metric. Unfortunately, we also found evidence suggesting that F1 remains widely used in software defect prediction research. Conclusion: We reiterate the concerns of statisticians that the F1 is a problematic metric outside of an information retrieval context, since we are concerned about both classes (defect-prone and not defect-prone units). This inappropriate usage has led to a substantial number (more than one fifth) of erroneous (in terms of direction) results. Therefore we urge researchers to (i) use an unbiased metric and (ii) publish detailed results including confusion matrices such that alternative analyses become possible.
C1 [Yao, Jingxiu] Beihang Univ, Beijing, Peoples R China.
   [Shepperd, Martin] Brunel Univ London, London, England.
C3 Beihang University; Brunel University
RP Shepperd, M (corresponding author), Brunel Univ London, London, England.
EM JingxiuYao@buaa.edu.cn; martin.shepperd@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013; Yao, Jingxiu/HKE-8358-2023
OI Shepperd, Martin/0000-0003-1874-6145; Yao, Jingxiu/0000-0003-3742-9612
FU China Scholarship Council
FX The authors wish to thank the reviewers and the editor for their helpful
   and constructive comments. They also thank the authors of the 38 primary
   studies included for providing sufficient information to make this
   analysis possible. We also wish to stress that our criticism of F1 does
   not mean we are criticising their papers. On the contrary, their
   foresight that alternative metrics to F1 are needed, has been
   invaluable. Jingxiu Yao wishes to acknowledge the support of the China
   Scholarship Council.
CR Abaei G., 2018, J KING SAUD U COMPUT
   Al Dallal J, 2018, ARAB J SCI ENG, V43, P7153, DOI 10.1007/s13369-017-3012-2
   Ali U., 2020, INT J MOD ED COMPUT, V12
   Allison DB, 2016, NATURE, V530, P27, DOI 10.1038/530027a
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   Antal G, 2021, TECHNOLOGIES, V9, DOI 10.3390/technologies9010003
   Ayon SI, 2019, 2019 1 INT C ADV SCI, P1
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Bowes D., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering, P109, DOI [10.1145/2365324.2365338, DOI 10.1145/2365324.2365338]
   Bowes D., 2015, 11 ACM INT C PRED MO, P1
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Bowes D, 2014, AUTOMAT SOFTW ENG, V21, P287, DOI 10.1007/s10515-013-0129-8
   Brown LD, 2001, STAT SCI, V16, P101, DOI 10.1214/ss/1009213286
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chen H., 2020, IEEE T SOFTW ENG
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Colquhoun D, 2014, ROY SOC OPEN SCI, V1, DOI 10.1098/rsos.140216
   Donoho DL, 2009, COMPUT SCI ENG, V11, P8, DOI 10.1109/MCSE.2009.15
   ELMORE RF, 1991, REV EDUC RES, V61, P293
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Felix EA, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0229131
   Fernández DM, 2019, EMPIR SOFTW ENG, V24, P1057, DOI 10.1007/s10664-019-09712-x
   Flach PA, 2015, ADV NEUR IN, V28
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Ge JX, 2018, 2018 19TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P399, DOI 10.1109/SNPD.2018.8441143
   Gelman A, 2006, AM STAT, V60, P328, DOI 10.1198/000313006X152649
   Gelman A, 2009, AM STAT, V63, P1, DOI 10.1198/tast.2009.0001
   Gong LN, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2172
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand D, 2018, STAT COMPUT, V28, P539, DOI 10.1007/s11222-017-9746-6
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   Herbold S., 2019, IEEE T SOFTW ENG
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Iqbal A., 2020, INT J MODERN ED COMP, V12, P18, DOI [10.5815/ijmecs.2020.01.03, DOI 10.5815/IJMECS.2020.01.03]
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   Son LH, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020212
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Matloob F., 2019, INT J MOD ED COMPUT, V12, P14
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Munafò MR, 2017, NAT HUM BEHAV, V1, DOI 10.1038/s41562-016-0021
   Naseem R., 2020, COMPLEXITY 2020
   NezhadShokouhi MM, 2020, J SUPERCOMPUT, V76, P602, DOI 10.1007/s11227-019-03051-w
   Niu L, 2020, NEURAL PROCESS LETT, V52, P2415, DOI 10.1007/s11063-020-10355-z
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Pan C, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9102138
   Pandey SK, 2020, EXPERT SYST APPL, V144, DOI 10.1016/j.eswa.2019.113085
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Powers D, 2003, P 2003 INT C COGN SC
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rizwan S., 2017, P 2017 INT C SOFTWAR, P55, DOI DOI 10.1145/3178212.3178221
   Rodriguez D, 2014, P 18 INT C EV ASS SO, P1
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Shepperd M, 2019, LECT NOTES COMPUT SC, V11871, P102, DOI 10.1007/978-3-030-33607-3_12
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shippey T, 2018, EUROMICRO CONF PROC, P239, DOI 10.1109/SEAA.2018.00047
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Sun YM, 2009, INT J PATTERN RECOGN, V23, P687, DOI 10.1142/S0218001409007326
   Tian YL, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P212, DOI 10.1109/QRS51102.2020.00038
   Tong HN, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10228059
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Tran H., 2019, 2019 11 INT C KNOWL, P1
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Xu Z., 2020, J SYST SOFTWARE, V170
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Xuan X, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1644, DOI 10.1145/2695664.2695959
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang YW, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110585
   Zhao LC, 2019, IEEE ACCESS, V7, P7663, DOI 10.1109/ACCESS.2018.2889061
NR 78
TC 31
Z9 32
U1 2
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106664
DI 10.1016/j.infsof.2021.106664
EA JUN 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, M
   Keung, JW
   Chen, TY
   Xiao, Y
AF Zhang, Miao
   Keung, Jacky Wai
   Chen, Tsong Yueh
   Xiao, Yan
TI Validating class integration test order generation systems with
   Metamorphic Testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Integration testing; Class integration test order generation;
   Metamorphic Testing; Metamorphic Relations
AB Context: Previous studies proposed different kinds of approaches for class integration test order generation, and corresponding systems can be implemented based on these approaches. Such class integration test order generation systems can facilitate the process of software integration testing if they are implemented correctly.
   Objective: However, a test oracle problem exists in the class integration test order generation systems. Since these approaches for class integration test order generation normally deliver a local optimum rather than a global optimum, there are no practically feasible ways to validate their generated class integration test orders, that is, these implementation systems are untestable.
   Method: To address the test oracle problem, we apply Metamorphic Testing (MT) to validate class integration test order generation systems. Metamorphic Relations (MRs), which are the key components of MT, reason about relations between test outputs of a system. Five effective MRs are developed to ensure the quality of the class integration test order generation systems. In these proposed MRs, follow-up test inputs are generated by modifying classes or class dependencies in the source test inputs while some characteristics of the source test outputs are preserved, for example, the same class integration test order or the equal stubbing cost. Faults can be detected in systems if an individual MR is violated for certain tests.
   Results: Failure detection of MT has been successfully demonstrated in empirical experiments on three systems implementing different typical class integration test order generation approaches. More than 84% of faulty programs can be detected by all MRs, for three class integration test order generation systems under investigation.
   Conclusion: The experimental results show that the proposed MRs are able to systematically and effectively detect faults in class integration test order generation systems. This study explores a new application domain in MT and further extends its applications in Software Engineering.
C1 [Zhang, Miao; Keung, Jacky Wai] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 City University of Hong Kong; Swinburne University of Technology;
   National University of Singapore
RP Zhang, M (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM miazhang9-c@my.cityu.edu.hk; jacky.Keung@cityu.edu.hk;
   tychen@swin.edu.au; dcsxan@nus.edu.sg
OI ZHANG, Miao/0000-0001-9659-9393; Keung, Jacky/0000-0002-3803-9600
FU General Research Fund of the Research Grants Council of Hong Kong, China
   [11208017]; City University of Hong Kong [7005028, 7005217]; Intel,
   China [9220097, 9678149, 9440227, 9229029, 9440180, 9220103]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong, China (No. 11208017) and the
   research funds of City University of Hong Kong (7005028 and 7005217),
   and the Research Support Fund by Intel, China (9220097), and funding
   supports from other industry partners, China (9678149, 9440227, 9229029,
   9440180 and 9220103).
CR Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   [Anonymous], 1998, HKUSTCS9801
   Bansal P., 2009, P 2009 INT C METH MO, P1
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2003, SPRING INT SER ENG C, V731, P204
   Chan F., 1998, P IASTED INT C SOFTW, P191
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Ding J, 2017, IEEE TRANS BIG DATA, V7790, P1
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Kung D, 1995, P INT COMP SOFTW APP, P239, DOI 10.1109/CMPSAC.1995.524786
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Mouha N, 2018, IEEE T RELIAB, V67, P870, DOI 10.1109/TR.2018.2847247
   Pugh S, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P2, DOI 10.1109/MET.2019.00009
   Pullum LL, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P62, DOI 10.1109/BioMedCom.2012.17
   Ramanathan A, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON BIOMEDICAL COMPUTING (BIOMEDCOM), P68, DOI 10.1109/BioMedCom.2012.18
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Tao QM, 2010, ASIA PAC SOFWR ENG, P270, DOI 10.1109/APSEC.2010.39
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
NR 21
TC 3
Z9 5
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106507
DI 10.1016/j.infsof.2020.106507
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900005
DA 2024-07-18
ER

PT J
AU Pei, HY
   Yin, BB
   Xie, M
   Cai, KY
AF Pei, Hanyu
   Yin, Beibei
   Xie, Min
   Cai, Kai-Yuan
TI Dynamic random testing with test case clustering and distance-based
   parameter adjustment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic random testing; Testing profile; Test case clustering; Software
   cybernetics
ID PROPORTIONAL SAMPLING STRATEGY; TEST-CASE PRIORITIZATION; SOFTWARE;
   PARTITION
AB Context: Software testing is essential in software engineering to improve software reliability. One goal of software testing strategies is to detect faults faster. Dynamic Random Testing (DRT) strategy uses the testing results to guide the selection of test cases, which has shown to be effective in the fault detection process.
   Objective: Previous studies have demonstrated that DRT is greatly affected by the test case classification and the process of adjusting the testing profile. In this paper, we propose Distance-based DRT (D-DRT) strategies, aiming at enhancing the fault detection effectiveness of DRT.
   Method: D-DRT strategies utilize distance information of inputs into the test case classification and the testing profile adjustment process. The test cases are vectorized based on the input parameters and classified into disjoint subdomains through certain clustering methods. And the distance information of subdomains, along with testing results, are used to adjust the testing profile, such that test cases that are closer to failure-causing sub domains are more likely to be selected.
   Results: We conduct empirical studies to evaluate the performance of the proposed algorithms using 12 versions of 4 open-source programs. The experimental results show that, compared with Random Testing (RT), Random Partition Testing (RPT), DRT and Adaptive Testing (AT), our strategies achieve greater fault detection effectiveness with a low computational cost. Moreover, the distance-based testing profile adjustment method is the dominant factor in the improvement of the D-DRT strategy.
   Conclusion: D-DRT strategies are effective testing strategies, and the distance-based testing profile adjustment method plays a crucial role.
C1 [Pei, Hanyu; Yin, Beibei; Cai, Kai-Yuan] Beihang Univ BUAA, Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
   [Pei, Hanyu; Xie, Min] City Univ Hong Kong, Dept Syst Engn & Engn Management, Hong Kong, Peoples R China.
C3 Beihang University; City University of Hong Kong
RP Yin, BB (corresponding author), Beihang Univ BUAA, Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
EM peihanyu@buaa.edu.cn; yinbeibei@buaa.edu.cn; minxie@cityu.edu.hk;
   kycai@buaa.edu.cn
RI Xie, Min/IUQ-1412-2023; Xie, Min/A-5552-2011
OI Xie, Min/0000-0002-8500-8364; Pei, Hanyu/0000-0001-9893-9814
FU National Natural Science Foundation of China [61772055, 61872169];
   Technical Foundation Project of Ministry of Industry and Information
   Technology of China [JSZL2016601B003]; Equipment Preliminary R&D Project
   of China [41402020102]
FX This work is supported in part by the National Natural Science
   Foundation of China under Grant 61772055 and Grant 61872169, in part by
   the Technical Foundation Project of Ministry of Industry and Information
   Technology of China under Grant JSZL2016601B003, and in party by
   Equipment Preliminary R&D Project of China under Grant 41402020102.
CR AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], Software-artifact Infrastructure Repository (SIR)
   [Anonymous], 2015, 2015 IEEE 39 ANN, V3, P466
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Bernardi P, 2010, IEEE T DEPEND SECURE, V7, P439, DOI 10.1109/TDSC.2010.33
   Bertolino A, 2021, IEEE T SOFTWARE ENG, V47, P881, DOI 10.1109/TSE.2019.2906187
   Boland PJ, 2003, IEEE T SOFTWARE ENG, V29, P88, DOI 10.1109/TSE.2003.1166591
   Cai K.Y., 2009, P 20 INT S SOFTWARE, P1
   Cai KY, 2007, J SYST SOFTWARE, V80, P1328, DOI 10.1016/j.jss.2006.11.008
   Cai KY, 2010, COMPUT MATH APPL, V59, P3245, DOI 10.1016/j.camwa.2010.03.011
   Cai KY, 2005, P INT COMP SOFTW APP, P113
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   CAI KY, 1994, FUZZY SET SYST, V66, P59, DOI 10.1016/0165-0114(94)90301-8
   Cao P, 2013, INFORM SCIENCES, V218, P119, DOI 10.1016/j.ins.2012.06.034
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chen JF, 2018, J SYST SOFTWARE, V135, P107, DOI 10.1016/j.jss.2017.09.031
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Fu WH, 2017, IEICE T INF SYST, VE100D, P1218, DOI 10.1587/transinf.2016EDP7356
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   Hamlet D., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P206, DOI 10.1109/WST.1988.5376
   Haraty RA, 2016, INT J SOFTW ENG KNOW, V26, P733, DOI 10.1142/S0218194016500248
   Hoque E, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P138, DOI [10.1109/SecDev.2016.12, 10.1109/SecDev.2016.038]
   Huang RB, 2015, INFORM SOFTWARE TECH, V67, P13, DOI 10.1016/j.infsof.2015.06.003
   Junpeng Lv, 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P19, DOI 10.1109/COMPSACW.2011.14
   Li Y., COMP SOFTW APPL C CO
   Liu H, 2016, IEEE T COMPUT, V65, P1896, DOI 10.1109/TC.2015.2455981
   Lv JP, 2014, IEEE T SYST MAN CY-S, V44, P1649, DOI 10.1109/TSMC.2014.2318019
   Lv JP, 2014, IEEE T SOFTWARE ENG, V40, P396, DOI 10.1109/TSE.2014.2310194
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pei HY, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P46, DOI 10.1109/QRS.2019.00019
   Pei HY, 2019, IEEE T RELIAB, V68, P872, DOI 10.1109/TR.2019.2911593
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   Sun CA, 2022, IEEE T SERV COMPUT, V15, P736, DOI 10.1109/TSC.2019.2960496
   Sun CA, 2019, IEEE T COMPUT, V68, P157, DOI 10.1109/TC.2018.2866040
   Sun CA, 2012, P INT COMP SOFTW APP, P164, DOI 10.1109/COMPSAC.2012.26
   Xiao P, 2020, IEEE T SYST MAN CY-S, V50, P911, DOI 10.1109/TSMC.2017.2761767
   Xiaoying Bai, 2008, 2008 IEEE International Conference on Web Services (ICWS), P465, DOI 10.1109/ICWS.2008.111
   Yadav DK, 2019, INT J INF SYST MODEL, V10, P92, DOI 10.4018/IJISMD.2019070106
   Yang HJ, 2017, J SYST SOFTWARE, V124, P169, DOI 10.1016/j.jss.2016.08.095
   Yang ZJ, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P37, DOI 10.1109/COMPSACW.2014.10
   Zeng JY, 2008, IEEE I C EMBED SOFTW, P496, DOI 10.1109/ICESS.2008.21
   Zhang L, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P31, DOI 10.1109/COMPSACW.2014.9
NR 53
TC 9
Z9 10
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106470
DI 10.1016/j.infsof.2020.106470
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000012
DA 2024-07-18
ER

PT J
AU Alyahya, S
AF Alyahya, Sultan
TI Crowdsourced software testing: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Crowdsourcing; Software testing; Crowdsourced software testing;
   Empirical software engineering; Systematic literature review
AB Context: Crowdsourced software testing (CST) refers to the use of crowdsourcing techniques in the domain of software testing. CST is an emerging area with its applications rapidly increasing in the last decade.
   Objective: A comprehensive review on CST has been conducted to determine the current studies aiming to improve and assess the value of using CST as well as the challenges identified by these evaluation studies.
   Method: We conducted a systematic literature review on CST by searching six popular databases. We identified 50 primary studies that passed our quality assessment criteria and defined two research questions covering the aim of the study.
   Results: There are three main process activities that the current literature aims to improve, namely selection of suitable testers, reporting of defects, and validation of submitted defects. In addition, there are 23 CST evaluation studies and most of them involve a large group and real crowd. These studies have identified 27 different challenges encountered during the application of crowdsourcing in software testing.
   Conclusions: The improvements achieved for the specific process activities in CST help explore other unexplored process activities. Similarly, knowing the characteristics of the evaluation studies can direct us on what other studies are worth investigating. Additionally, many of the challenges identified by the evaluation studies represent research problems that need better understanding and alternative solutions. This research also offers opportunities for practitioners to understand and apply new solutions proposed in the literature and the variations between them. Moreover, it provides awareness to the related parties regarding the challenges reported in the literature, which they may encounter during CST tasks.
C1 [Alyahya, Sultan] King Saud Univ, Informat Syst Dept, Riyadh, Saudi Arabia.
C3 King Saud University
RP Alyahya, S (corresponding author), King Saud Univ, Informat Syst Dept, Riyadh, Saudi Arabia.
EM sualyahya@ksu.edu.sa
RI Alyahya, Sultan/AAB-9339-2019
OI Alyahya, Sultan/0000-0002-3870-7613
FU Deanship of Scientific Research at King Saud University [RGP-1436-039]
FX The author would like to extend his sincere appreciation to the Deanship
   of Scientific Research at King Saud University for its funding this
   Research -Group No (RGP-1436-039).
CR Aliady R., 2018, J COMPUT SCI, V14
   Allahbakhsh M, 2013, IEEE INTERNET COMPUT, V17, P76, DOI 10.1109/MIC.2013.20
   Alsayyari M, 2018, IEEE INT SYMP SERV O, P69, DOI 10.1109/SOSE.2018.00018
   Alyahya S., 2018, J THEOR APPL INF TEC, V96
   Alyahya S, 2020, INT J COOP INF SYST, V29, DOI 10.1142/S0218843020400092
   Alyahya S, 2017, INT J ADV COMPUT SC, V8, P32
   Ambreen T, 2016, INT CONF GLOBAL SOFT, P189, DOI 10.1109/ICGSE.2016.37
   [Anonymous], 1981, WRITING TOOLS STYLE
   [Anonymous], 2006, IEEECOMPUT SOC C COM
   [Anonymous], 2009, WORKSH OP SOURC INN
   Brabham D. C, 2008, Convergence, V14, P75, DOI DOI 10.1177/1354856507084420
   Brabham D.C., 2013, MIT PRESS ESSENT KNO
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Daniel F, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148148
   Difallah D.E., 2012, CEUR WORKSHOP P
   Dit B., 2008, P ACM SIGSOFT S FDN
   Erickson L.B., 2012, ORG USES CROWD DEV F
   Estellés-Arolas E, 2012, J INF SCI, V38, P189, DOI 10.1177/0165551512437638
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Herbold S., 2011, P 4 IEEE INT C SOFTW
   Hetmank L., 2013, COMPONENTS FUNCTIONS
   Hossain M., 2012, 2012 International Conference on Innovation Management and Technology Research, P501, DOI 10.1109/ICIMTR.2012.6236447
   Hosseini M, 2014, INT CONF RES CHAL
   Jeff Howe., 2006, WIRED
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Konstan JA, 2004, ACM T INFORM SYST, V22, P1, DOI 10.1145/963770.963771
   Lakhani K R, 2010, Harvard Business School General Management Unit Case, P610
   Leicht N., 2018, P 51
   Liu D., 2012, P ASIST ANN M
   Malone D., 2017, 2017 28 IR SIGN SYST, DOI [https://doi.org/10.1109/ISSC.2017.7983605, DOI 10.1109/ISSC.2017.7983605]
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   Thuan NH, 2016, INFORM SYST FRONT, V18, P47, DOI 10.1007/s10796-015-9578-x
   Sari A., 2019, J SYST SOFTW
   Satzger B., 2014, EC DRI SOFTW ARCHIT
   Schenk E, 2011, J INNOV ECON MANAG, P93, DOI 10.3917/jie.007.0093
   Sterling B., 2002, The Hacker Crackdown
   Stol KJ, 2019, IEEE T SOFTWARE ENG, V45, P237, DOI 10.1109/TSE.2017.2774297
   Vukovic M, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P686, DOI 10.1109/SERVICES-I.2009.56
   Vuurens J., 2011, ACM SIGIR Work. on Crowdsourcing for Inf. Retr. (CIR11), P21
   Wu GQ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P253, DOI 10.1109/ICWS.2017.40
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 49
TC 19
Z9 19
U1 1
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106363
DI 10.1016/j.infsof.2020.106363
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700007
DA 2024-07-18
ER

PT J
AU Fernandes, E
   Chávez, A
   Garcia, A
   Ferreira, I
   Cedrim, D
   Sousa, L
   Oizumi, W
AF Fernandes, Eduardo
   Chavez, Alexander
   Garcia, Alessandro
   Ferreira, Isabella
   Cedrim, Diego
   Sousa, Leonardo
   Oizumi, Willian
TI Refactoring effect on internal quality attributes: What haven't they
   told you yet?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code refactoring; Internal quality attribute; Software metric;
   Quantitative study; Mining software repository
ID METRICS; EXECUTION
AB Context: Code refactoring was conceived for enhancing code structures, often in terms of internal quality attributes such as cohesion and coupling. Developers may have to apply multiple refactoring operations to achieve the expected enhancement. Re-refactoring occurs whenever one or more refactoring operations are performed on a previously refactored code element. The literature often assumes each single refactoring improves rather than worsens internal quality attributes, while re-refactoring implies further improvements. Unfortunately, quantitative evidence on this matter is scarce if not nonexistent.
   Objective: This paper extends a large quantitative study about the refactoring effect on internal quality attributes with new insights, plus an unprecedented re-refactoring effect analysis. We particularly investigate if re-refactoring operations are more effective in improving attributes when compared to single operations.
   Method: We analyzed 23 open software projects with 29,303 refactoring operations, from which nearly 50% constitute re-refactorings. We assessed five attributes: cohesion, complexity, coupling, inheritance, and size. We combined descriptive analysis and statistical tests to deeply understand the effect of both refactoring and re-refactoring on each attribute.
   Results: Contrary to current knowledge, our study revealed that 90% of refactoring operations, and 100% of re-refactoring operations, were applied to code elements with at least one critical attribute. Critical attribute is an attribute whose metrics used for computing it have anomalous values, e.g. high coupling. Most operations (65%) improve attributes presumably associated with the refactoring type applied; the other operations (35%) keep those attributes unaffected. Whenever refactoring and re-refactoring operations are applied without additional changes, i.e., root-canal refactoring, attributes tend to improve or at least not worsen. Surprisingly, if these operations occur with additional changes such as feature additions, i.e., floss refactoring, they mostly improve rather than worsen attributes.
   Conclusions: Besides revealing the effect of refactoring and re-refactoring on each attribute, we derived insights on leveraging the current refactoring practices.
C1 [Fernandes, Eduardo; Garcia, Alessandro; Oizumi, Willian] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Chavez, Alexander] Pontificia Univ Catolica Rio de Janeiro, Tecgraf Inst, Rio de Janeiro, Brazil.
   [Ferreira, Isabella] Polytech Montreal, Montreal, PQ, Canada.
   [Cedrim, Diego] Amazon, Sao Paulo, Brazil.
   [Sousa, Leonardo] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Oizumi, Willian] Fed Inst Educ Sci & Technol Parana, Paranavai, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Pontificia
   Universidade Catolica do Rio de Janeiro; Universite de Montreal;
   Polytechnique Montreal; Carnegie Mellon University
RP Fernandes, E (corresponding author), Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
EM emfernandes@inf.puc-rio.br; achavez@tecgraf.puc-rio.br;
   afgarcia@inf.puc-rio.br; isabella.ferreira@polymtl.ca;
   dccedrim@amazon.com; leo.sousa@sv.cmu.edu; woizumi@inf.puc-rio.br
RI Fernandes, Eduardo/F-8555-2017; Oizumi, Willian Nalepa/D-2031-2017
OI Fernandes, Eduardo/0000-0002-1222-2247; Oizumi, Willian
   Nalepa/0000-0002-8956-5272
FU CNPq [434969/2018-4, 312149/2016-6]; CAPES/Procad [175956]; FAPERJ
   [22520-7/2016, 200.773/2019]
FX CNPq (434969/2018-4 and 312149/2016-6), CAPES/Procad (175956), and
   FAPERJ (22520-7/2016 and 200.773/2019) partially funded this work.
CR Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bibiano AC, 2019, INT SYMP EMP SOFTWAR, P31
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Destefanis G., 2014, 15 XP, P157
   Fernandes E, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P9, DOI 10.1109/IWoR.2019.00009
   Fernandes E, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P206, DOI 10.1109/ICSE-Companion.2019.00083
   Fernandes E, 2017, LECT NOTES COMPUT SC, V10221, P48, DOI 10.1007/978-3-319-56856-0_4
   Figueiredo E, 2018, SOFTW QUAL J, V27, P1
   Fontana F.A., 2011, Proceedings of the 4th Workshop on Refactoring Tools, P37, DOI DOI 10.1145/1984732.1984741
   Fowler M., 1999, AW OBJ TECHNOL S
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hinkle DE., 2002, APPL STAT BEHAV SCI
   Jiau HC, 2013, IEEE T SOFTWARE ENG, V39, P1245, DOI 10.1109/TSE.2013.19
   Kallen M, 2014, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2014.21
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Murgia A., 2011, 18 WCRE, P372
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   NEJMEH BA, 1988, COMMUN ACM, V31, P188, DOI 10.1145/42372.42379
   Oliveira J, 2019, INFORM SOFTWARE TECH, V110, P136, DOI 10.1016/j.infsof.2019.03.002
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Prete K, 2010, PROC IEEE INT CONF S
   Soetens QD, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P313, DOI 10.1109/QUATIC.2010.58
   Stein C., 2006, INFOCOMP, V5, P44
   Szoke G, 2015, PROC IEEE INT CONF S, P429, DOI 10.1109/ICSM.2015.7332494
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Veerappa V., 2013, 7 ESEM, P271
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
NR 40
TC 19
Z9 20
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106347
DI 10.1016/j.infsof.2020.106347
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800012
DA 2024-07-18
ER

PT J
AU Honfi, D
   Micskei, Z
AF Honfi, David
   Micskei, Zoltan
TI Automated isolation for white-box test generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Testing; Test generation; White-box; Isolation; Mocking; Code
   transformation; Empirical evaluation
ID SYMBOLIC EXECUTION
AB Context: While-box test generation is a technique used for automatically selecting test inputs using only the code under test. However, such techniques encounter challenges when applying them to complex programs. One of the challenges is handling invocations to external modules or dependencies in the code under test.
   Objective: Without using proper isolation, like mocks, generated tests cannot cover all parts of the source code. Moreover, invoking external dependencies may cause unexpected side effects (e.g., accessing the file system or network). Our goal was to tackle this issue while maintaining the advantages of while-box test generation.
   Method: In this paper, we present an automated approach addressing the external dependency challenge for white-box test generation. This technique isolates the test generation and execution by transforming the code under test and creating a parameterized sandbox with generated mocks. We implemented the approach in a ready-to-use tool using Microsoft Pex as a test generator, and evaluated it on 10 open-source projects from GitHub having more than 38.000 lines of code in total.
   Results: The results from the evaluation indicate that if the lack of isolation hinders while-box test generation, then our approach is able to help: it increases the code coverage reached by the automatically generated tests, while it prevents invoking any external module or dependency. Also, our results act as a unique baseline for the test generation performance of Microsoft Pex on open-source projects.
   Conclusion: Based on the results, our technique might serve well for handling external dependencies in while-box test generation as it increases the coverage reached in such situations, while maintaining the practical applicability of the tests generated on the isolated code.
C1 [Honfi, David; Micskei, Zoltan] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Honfi, D (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
EM honfi@mit.bme.hu; micskeiz@mit.bme.hu
RI Honfi, David/J-2720-2015; Micskei, Zoltan/G-8351-2012
OI Honfi, David/0000-0001-5217-828X; Micskei, Zoltan/0000-0003-1846-261X
FU National Research, Development and Innovation Fund (Thematic Excellence
   Program) [TUDFO/51757/2019-ITM]; BME-Artificial Intelligence FIKP grant
   of EMMI (BME FIKP-MI/SC)
FX This work was partially supported by the BME-Artificial Intelligence
   FIKP grant of EMMI (BME FIKP-MI/SC) and by the National Research,
   Development and Innovation Fund (TUDFO/51757/2019-ITM, Thematic
   Excellence Program).
CR Alshahwan N., 2010, DAGSTUHL SEMINAR P
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Galler StefanJ., 2010, Proceedings of the 5th Workshop on Automation of Software Test, P43, DOI DOI 10.1145/1808266.1808273
   Havrikov N, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P30, DOI 10.1109/AST.2017.2
   Honfi D., 2017, PERIODICA POLYTECH E, V61, P116, DOI [10.3311/PPee.9768., DOI 10.3311/PPEE.9768]
   Honfi D., 2017, P 24 PHD MIN BUTE DM, P46, DOI 10.5281/zenodo.291898.
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Islam MM, 2010, PROCEEDINGS OF THE ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE, DETC 2010, VOL 4, P29
   Jeon J, 2016, PROC INT CONF SOFTW, P156, DOI 10.1145/2884781.2884856
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Klikovits S, 2015, LECT NOTES COMPUT SC, V9274, P46, DOI 10.1007/978-3-319-23129-7_4
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Meszaros G., 2006, XUNIT TEST PATTERNS
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pasternak Benny, 2009, International Journal on Software Tools for Technology Transfer, V11, P273, DOI 10.1007/s10009-009-0115-4
   R Core Team, 2017, R: A language and environment for statistical computing
   Sen P, 2007, PROC INT CONF DATA, P571
   Taneja K., 2010, ASE, P289, DOI DOI 10.1145/1858996.1859053
   Tillmann N., 2014, P 29 ACMIEEE INT C A, P385, DOI [10.1145/2642937, DOI 10.1145/2642937]
   Tillmann N., 2007, US Patent App, Patent No. [11/322,967, 11322967]
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tillmann N, 2006, IEEE INT CONF AUTOM, P365
   Tillmann Nikolai., 2005, SIGSOFT Softw. Eng. Notes, V30, P253
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 31
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106319
DI 10.1016/j.infsof.2020.106319
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Le, DM
   Dang, DH
   Nguyen, VH
AF Duc Minh Le
   Duc-Hanh Dang
   Viet-Ha Nguyen
TI Generative software module development for domain-driven design with
   annotation-based domain specific language
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain-driven design (DDD); Module-based architecture; UML-based domain
   modelling; Domain-specific language (DSL); Object-oriented programming
   language (OOPL); Attribute-oriented programming (AtOP)
AB Context: Object-oriented domain-driven design (DDD) aims to iteratively develop software around a realistic model of the application domain, which both thoroughly captures the domain requirements and is technically feasible for implementation. The main focus of recent work in DDD has been on using a form of annotation-based domain specific language (aDSL), internal to an object-oriented programming language, to build the domain model. However, these work do not consider software modules as first-class objects and thus lack a method for their development.
   Objective: In this paper, we tackle software module development with the DDD method by adopting a generative approach that uses aDSL. To achieve this, we first extend a previous work on module-based software architecture with three enhancements that make it amenable to generative development. We then treat module configurations as first-class objects and define an aDSL, named MCCL, to express module configuration classes. To improve productivity, we define function MCCGEN to automatically generate each configuration class from the module's domain class.
   Method: We define our method as a refinement of an aDSL-based software development method from a previous work. We apply meta-modelling with UML/OCL to define MCCL and implement MCCL in a Java software framework. We evaluate the applicability of our method using a case study and formally define an evaluation framework for module generativity. We also analyse the correctness and performance of function MCCGEN.
   Results: MCCL is an aDSL for module configurations. Our evaluation shows MCCL is applicable to complex problem domains. Further, the MCCs and software modules can be generated with a high and quantifiable degree of automation.
   Conclusion: Our method bridges an important gap in DDD with a software module development method that uses a novel aDSL with a module-based software architecture and a generative technique for module configuration.
C1 [Duc Minh Le; Duc-Hanh Dang; Viet-Ha Nguyen] Vietnam Natl Univ, VNU Univ Engn & Technol, Dept Software Engn, Hanoi, Vietnam.
   [Duc Minh Le] Hanoi Univ, Dept Software Engn, Hanoi, Vietnam.
C3 Vietnam National University Hanoi; University of Hanoi
RP Nguyen, VH (corresponding author), Vietnam Natl Univ, VNU Univ Engn & Technol, Dept Software Engn, Hanoi, Vietnam.
EM duclm@hanu.edu.vn; hanhdd@vnu.edu.vn; hanv@vnu.edu.vn
RI Dang, Duc-Hanh/IUN-4196-2023
OI Le, Duc/0000-0001-7654-1127
FU Vietnam National Foundation for Science and Technology Development
   (NAFOSTED) [102.03-2015.25]
FX This work is supported by the Vietnam National Foundation for Science
   and Technology Development (NAFOSTED) under grant number 102.03-2015.25.
   We wish to thank the anonymous reviewers for their insightful comments.
CR Amir R., 2004, Companion to the 19th annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, P192
   [Anonymous], P 7 INT WORKSH ASP O
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 1986, Abstraction and Specification in Program Development
   [Anonymous], THESIS
   [Anonymous], 2014, DOMAIN DRIVEN DESIGN
   [Anonymous], 2015, OMG UN MOD LANG OMG
   Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Cepa Vasian., 2007, Attribute Enabled Software Development
   Ceri S, 2012, COMPUTER AND INFORMATION SCIENCES II, P1, DOI [10.1007/978-1-4471-2155-8_1, 10.1007/978-3-642-34002-4_1]
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3566, P326
   Distante D, 2007, LECT NOTES COMPUT SC, V4607, P457
   Le DM, 2019, SOICT 2019: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY, P399, DOI 10.1145/3368926.3369657
   Le DM, 2018, COMPUT LANG SYST STR, V54, P199, DOI 10.1016/j.cl.2018.05.001
   Le DM, 2017, INT CONF KNOWL SYS, P77, DOI 10.1109/KSE.2017.8119438
   Le DM, 2015, 2015 Seventh International Conference on Knowledge and Systems Engineering (KSE), P19, DOI 10.1109/KSE.2015.26
   Le DM, 2016, 2016 IEEE RIVF INTERNATIONAL CONFERENCE ON COMPUTING & COMMUNICATION TECHNOLOGIES, RESEARCH, INNOVATION, AND VISION FOR THE FUTURE (RIVF), P247, DOI 10.1109/RIVF.2016.7800302
   El Hachem J, 2016, ASIA PAC SOFWR ENG, P89, DOI [10.1109/APSEC.2016.52, 10.1109/APSEC.2016.023]
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fowler M., 2010, Domain-specific languages
   Gosling J., 2017, JAVA LANGUAGE SPECIF
   Haywood D., 2013, METHODS TOOLS PRACTI, V21, P40
   Hejlsberg Anders., 2010, C# Programming Language
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Le D.M., 2017, MCCL IMPLEMENTATION
   Le D.M., 2019, TECHNICAL REPORT
   Liskov B., 2000, PROGRAM DEV JAVA ABS
   Marsic I, 2001, PROC INT CONF SOFTW, P475, DOI 10.1109/ICSE.2001.919120
   Medvidovic N, 2017, TECHNICAL REPORT
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nosál' M, 2016, COMPUT SCI INF SYST, V13, P707, DOI 10.2298/CSIS160114024N
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Paniza J, 2011, LEARN OPENXAVA EXAMP
   Rademacher F., 2017, LNCS, P230
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sulír M, 2016, COMPUT LANG SYST STR, V46, P44, DOI 10.1016/j.cl.2016.07.003
   Uzunov AV, 2013, IEEE AUS SOFT ENGR, P30, DOI 10.1109/ASWEC.2013.14
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vernon V., 2013, Implementing Domain-Driven Design
   Wada H, 2005, LECT NOTES COMPUT SC, V3713, P584, DOI 10.1007/11557432_44
   Warmer J., 2006, 6 OOPSLA WORKSH DOM
   Warmer J, 2007, LECT NOTES COMPUT SC, V4530, P194
NR 45
TC 3
Z9 3
U1 2
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106239
DI 10.1016/j.infsof.2019.106239
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM6FK
UT WOS:000514233800001
DA 2024-07-18
ER

PT J
AU Perkusich, M
   Silva, LCE
   Costa, A
   Ramos, F
   Saraiva, R
   Freire, A
   Dilorenzo, E
   Dantas, E
   Santos, D
   Gorgônio, K
   Almeida, H
   Perkusich, A
AF Perkusich, Mirko
   Chaves e Silva, Lenardo
   Costa, Alexandre
   Ramos, Felipe
   Saraiva, Renata
   Freire, Arthur
   Dilorenzo, Ednaldo
   Dantas, Emanuel
   Santos, Danilo
   Gorgonio, Kyller
   Almeida, Hyggo
   Perkusich, Angelo
TI Intelligent software engineering in the context of agile software
   development: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Intelligent software engineering; Agile software development;
   Search-based software engineering; Machine learning; Bayesian networks;
   Artificial intelligence
ID OF-THE-ART; ARTIFICIAL-INTELLIGENCE; EMPIRICAL VALIDATION; REQUIREMENTS;
   FRAMEWORK; MODEL
AB CONTEXT: Intelligent Software Engineering (ISE) refers to the application of intelligent techniques to software engineering. We define an "intelligent technique" as a technique that explores data (from digital artifacts or domain experts) for knowledge discovery, reasoning, learning, planning, natural language processing, perception or supporting decision-making.
   OBJECTIVE: The purpose of this study is to synthesize and analyze the state of the art of the field of applying intelligent techniques to Agile Software Development (ASD). Furthermore, we assess its maturity and identify adoption risks.
   METHOD: Using a systematic literature review, we identified 104 primary studies, resulting in 93 unique studies.
   RESULTS: We identified that there is a positive trend in the number of studies applying intelligent techniques to ASD. Also, we determined that reasoning under uncertainty (mainly, Bayesian network), search-based solutions, and machine learning are the most popular intelligent techniques in the context of ASD. In terms of purposes, the most popular ones are effort estimation, requirements prioritization, resource allocation, requirements selection, and requirements management. Furthermore, we discovered that the primary goal of applying intelligent techniques is to support decision making. As a consequence, the adoption risks in terms of the safety of the current solutions are low. Finally, we highlight the trend of using explainable intelligent techniques.
   CONCLUSION: Overall, although the topic area is up-and-coming, for many areas of application, it is still in its infancy. So, this means that there is a need for more empirical studies, and there are a plethora of new opportunities for researchers.
C1 [Perkusich, Mirko; Chaves e Silva, Lenardo; Costa, Alexandre; Ramos, Felipe; Saraiva, Renata; Freire, Arthur; Dilorenzo, Ednaldo; Dantas, Emanuel; Santos, Danilo; Gorgonio, Kyller; Almeida, Hyggo; Perkusich, Angelo] Univ Fed Campina Grande, Campina Grande, PB, Brazil.
C3 Universidade Federal de Campina Grande
RP Perkusich, M (corresponding author), Univ Fed Campina Grande, Campina Grande, PB, Brazil.
EM mirko@embedded.ufcg.edu.br; lenardo.silva@embedded.ufcg.edu.br;
   alexandre.costa@embedded.ufcg.edu.br; felipe.ramos@embedded.ufcg.edu.br;
   renata.saraiva@embedded.ufcg.edu.br; arthur.freire@embedded.ufcg.edu.br;
   ednaldo.dilorenzo@virtus.ufcg.edu.br;
   emanuel.dantas@embedded.ufcg.edu.br; danilo.santos@embedded.ufcg.edu.br;
   kyller@embedded.ufcg.edu.br; hyggo@embedded.ufcg.edu.br;
   perkusic@virtus.ufcg.edu.br
RI Santos, Danilo F S/X-1391-2019; Perkusich, Mirko/HKN-2606-2023; de
   Almeida, Hyggo Oliveira/H-8167-2013; Silva, Lenardo/JHT-2922-2023;
   Costa, Alexandre Augusto da/HCJ-0140-2022; Gorgônio,
   Kyller/GLN-3049-2022; Ramos, Felipe/HNI-3691-2023; Perkusich,
   Angelo/I-2447-2013; Perkusich, Angelo/O-1203-2018; Silva, Lenardo Chaves
   e/H-6720-2017
OI Santos, Danilo F S/0000-0002-8162-715X; Costa, Alexandre Augusto
   da/0000-0001-7558-5435; Gorgônio, Kyller/0000-0001-9796-1382; Perkusich,
   Angelo/0000-0002-7377-1258; Silva, Lenardo Chaves e/0000-0002-4509-8270;
   Perkusich, Mirko/0000-0002-9433-4962; Almeida, Hyggo/0000-0002-2808-8169
CR Abouelela M., 2010, INT J SOFTWARE ENG A, V1, P1
   Abrahamsson Pekka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P344
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alshareet, 2015, INDIAN J SCI TECHNOL, V8
   Ammar H. H., 2012, P 1 TAIB U INT C COM
   Ancveire I., 2015, INFORM TECHNOLOGY MA, V18, P62, DOI [10.1515/itms-2015-0010, DOI 10.1515/ITMS-2015-0010]
   Anita, 2014, IEEE INT ADV COMPUT, P1454, DOI 10.1109/IAdCC.2014.6779540
   Ankori R, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/SWSTE.2005.8
   [Anonymous], 2009, ARTIF INTELL
   [Anonymous], READINGS ARTIFICIAL
   Peixoto CSA, 2009, 2009 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL 1, PROCEEDINGS, P156, DOI 10.1109/IITA.2009.393
   Bansal SK, 2014, 2014 5TH INTERNATIONAL CONFERENCE CONFLUENCE THE NEXT GENERATION INFORMATION TECHNOLOGY SUMMIT (CONFLUENCE), P767, DOI 10.1109/CONFLUENCE.2014.6949242
   Batarseh FA, 2018, SOFTWARE QUAL J, V26, P49, DOI 10.1007/s11219-015-9285-3
   Belsis P, 2014, REQUIR ENG, V19, P213, DOI 10.1007/s00766-013-0172-9
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Birkhölzer T, 2011, EUROMICRO CONF PROC, P294, DOI 10.1109/SEAA.2011.52
   Boehm Barry., 2003, ACM SIGSOFT Software Engineering Notes, V28, P4, DOI DOI 10.1145/638750.638776
   Boschetti MA, 2014, COMPUT OPER RES, V43, P116, DOI 10.1016/j.cor.2013.09.007
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Bowerman C., 1995, Proceedings of the 1995 International Symposium and Workshop on Systems Engineering of Computer Based Systems (Cat. No.95TH8053), P429, DOI 10.1109/ECBS.1995.523972
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Britto R, 2012, IEEE C EVOL COMPUTAT
   Cao LB, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3076253
   Celar S, 2014, 2014 22ND TELECOMMUNICATIONS FORUM TELFOR (TELFOR), P1134, DOI 10.1109/TELFOR.2014.7034607
   Chaves-González JM, 2015, KNOWL-BASED SYST, V83, P105, DOI 10.1016/j.knosys.2015.03.012
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Colombo E, 2004, REQUIR ENG, V9, P186, DOI 10.1007/s00766-003-0184-y
   Colomo-Palacios R, 2012, INT J AP MAT COM-POL, V22, P801, DOI 10.2478/v10006-012-0059-9
   Constantinou A, 2017, KNOWL-BASED SYST, V124, P93, DOI 10.1016/j.knosys.2017.03.005
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dantas E, 2018, INT J SOFTW ENG KNOW, V28, P1811, DOI 10.1142/S0218194018400302
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   del Sagrado J, 2015, EMPIR SOFTW ENG, V20, P577, DOI 10.1007/s10664-013-9287-3
   Dong X, 2011, ASIA PAC SOFWR ENG, P397, DOI 10.1109/APSEC.2011.11
   Dong YP, 2017, PROC CVPR IEEE, P975, DOI 10.1109/CVPR.2017.110
   Dragicevic S, 2017, J SYST SOFTWARE, V127, P109, DOI 10.1016/j.jss.2017.01.027
   Dwivedi R., 2014, P P INT C ADV COMM N
   Dwivedi R., 2015, INT J STW ENG APPL, V9, P29, DOI DOI 10.14257/IJSEIA.2015.9.3.04
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   El-Said SM, 2009, 2009 IEEE INTERNATIONAL ADVANCE COMPUTING CONFERENCE, VOLS 1-3, P1658
   Feldt R., 2018, 2018 IEEEACM 40 INT, P16
   Fernández-Sánchez C, 2014, P ANN HICSS, P4807, DOI 10.1109/HICSS.2014.590
   Ford L., 1987, Artificial Intelligence Review, V1, P255, DOI 10.1007/BF00142926
   Freire AS, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P191, DOI 10.1109/SBES.2015.29
   Fronza I., 2011, P INT C ENT INF SYST, P1
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Gerogiannis V.C., 2007, ICSOFT 2007
   Ghane K, 2014, IEEE INT TECHNOL MAN
   Gilpin LH, 2018, PR INT CONF DATA SC, P80, DOI 10.1109/DSAA.2018.00018
   Goebel R, 2018, LECT NOTES COMPUT SC, V11015, P295, DOI 10.1007/978-3-319-99740-7_21
   Golfarelli Matteo, 2012, Data Warehousing and Knowledge Discovery. Proceedings of the 14th International Conference, DaWaK 2012, P30, DOI 10.1007/978-3-642-32584-7_3
   Gul E, 2011, ADV INTEL SOFT COMPU, V101, P111
   Gunning D., 2017, Explainable artificial intelligence (xai)
   Hanakawa N, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P316, DOI 10.1109/APSEC.2004.8
   Hannan MA, 2012, ZOOKEYS, P1, DOI 10.3897/zookeys.201.3246
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Heckerman D, 2008, STUD COMPUT INTELL, V156, P33
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jain P., 2011, International Journal on Computer Science Engineering, V3, P3774
   Jansi S., 2015, INT J TRENDS ENG TEC, V3, P18
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Korb K.B., 2010, Bayesian artificial intelligence, V2nd, DOI DOI 10.1201/B10391
   Kumar A, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER NETWORKS (ISCON), P118, DOI 10.1109/ICISCON.2014.6965230
   Kumar C.S., 2014, INT J ENG TECHNOL, V6, P1994
   Lamy JB, 2019, ARTIF INTELL MED, V94, P42, DOI 10.1016/j.artmed.2019.01.001
   Larson E.W., 2015, GUID PROJ MAN BOD KN
   Li C, 2010, REQUIR ENG, V15, P375, DOI 10.1007/s00766-010-0104-x
   Li L., 2013, P 15 INT C ENT INF S
   Lin Y, 2015, INTEGR COMPUT-AID E, V22, P281, DOI 10.3233/ICA-150491
   Liu S., 1995, INF INT J, V1, P83
   Logue K, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P437, DOI 10.1109/ECBS.2008.58
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Mafakheri F, 2008, PROD PLAN CONTROL, V19, P567, DOI 10.1080/09537280802360884
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   McCarey F, 2005, LECT NOTES COMPUT SC, V3556, P162
   Menachem S, 2009, ICED 09 - THE 17TH INTERNATIONAL CONFERENCE ON ENGINEERING DESIGN, VOL 1: DESIGN PROCESSES, P311
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Minku LL, 2016, PROG ARTIF INTELL, V5, P307, DOI 10.1007/s13748-016-0092-2
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   MOSTOW J, 1985, IEEE T SOFTWARE ENG, V11, P1253, DOI 10.1109/TSE.1985.231876
   Nagy A., 2010, Proceedings 2010 2nd International Conference on Intelligent Networking and Collaborative Systems (INCoS 2010), P192, DOI 10.1109/INCOS.2010.99
   Nepomuceno VS, 2013, IEEE SYS MAN CYBERN, P964, DOI 10.1109/SMC.2013.170
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Panda A., 2015, P INT C ADV COMP CON, P26, DOI DOI 10.15224/978-1-63248-038-5-06
   Panda A, 2015, PROCEDIA COMPUT SCI, V57, P772, DOI 10.1016/j.procs.2015.07.474
   PARTRIDGE D, 1988, INFORM SOFTWARE TECH, V30, P146, DOI 10.1016/0950-5849(88)90061-4
   Partridge D., 1986, ARTIFICIAL INTELLIGE
   Pedrycz W, 2006, J SYST ARCHITECT, V52, P700, DOI 10.1016/j.sysarc.2006.06.014
   Perkusich M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1498, DOI 10.1145/2695664.2695749
   Perkusich M, 2015, EXPERT SYST APPL, V42, P437, DOI 10.1016/j.eswa.2014.08.015
   Perkusich Mirko., 2013, SAC'13: Proceedings of the 28th Annual ACM Symposium on Applied Computing, page, P1037
   Poonacha K. M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5329, DOI 10.1109/HICSS.2012.599
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Raza F.N., 2009, P INT MULT ENG COMP, V1
   Satapathy S.M., 2014, STORY POINT APPROACH, P304
   Sedehi H, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P99, DOI 10.1109/IWSM-MENSURA.2012.22
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Settas D, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P117, DOI 10.1109/SERA.2006.68
   Shankari K.H., 2014, IJERA, P2248
   Shankarmani R., 2010, 2010 IEEE International Conference on Software Engineering and Service Sciences (ICSESS 2010), P442, DOI 10.1109/ICSESS.2010.5552340
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sobiech F, 2014, APPL COMPUT REV, V14, P19, DOI 10.1145/2663761.2664198
   Sobiech Fabian, 2015, SIGAPP Appl. Comput. Rev., V14, P19, DOI [10.1145/2724928.2724930, DOI 10.1145/2724928.2724930]
   Sorte B.W., 2015, INT J ADV ENG GLOBAL, P398
   Stamelos I, 2010, J SYST SOFTWARE, V83, P52, DOI 10.1016/j.jss.2009.09.016
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Staron Miroslaw, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P325, DOI 10.1109/SEAA.2013.9
   Stolc M, 2010, 2010 IEEE 8TH INTERNATIONAL SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS, P77
   Sungkur Roopesh Kevin, 2014, VINE, V44, P394, DOI 10.1108/VINE-12-2013-0068
   SzOke A., AGILE RELEASE PLANNI, P149
   Szoke A., OPTIMIZED FEATURE DI, P62, DOI [10.1007/978-3-642- 13792-1_7, DOI 10.1007/978-3-642-13792-1_7]
   Szoke A., DECISION SUPPORT ITE, P156, DOI [10.1007/978-3-642-02152- 7_13, DOI 10.1007/978-3-642-02152-7_13]
   Szoke A, 2010, LECT NOTES COMPUT SC, V6156, P62, DOI 10.1007/978-3-642-13792-1_7
   Szoke A, 2011, INFORM SOFTWARE TECH, V53, P574, DOI 10.1016/j.infsof.2011.01.008
   Taylor P.S., 2006, 18 INT C SOFTWARE EN, P138
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   van Valkenhoef G, 2011, INFORM SOFTWARE TECH, V53, P1227, DOI 10.1016/j.infsof.2011.05.007
   Verbert K, 2017, ENG APPL ARTIF INTEL, V60, P136, DOI 10.1016/j.engappai.2017.01.011
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Willamy R., 2016, P INT C SOFTW ENG KN, P81, DOI DOI 10.18293/SEKE2016-213
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xie T., 2018, INT S DEP SOFTW ENG, P3
   Xie T, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172891
   Yasin A., 2012, P KNOWL MAN INT C KM
   Yet B, 2014, J BIOMED INFORM, V48, P28, DOI 10.1016/j.jbi.2013.10.012
   Yong Hu, 2012, Journal of Software, V7, P440, DOI 10.4304/jsw.7.2.440-449
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
   Zhou Y, 2016, EXPERT SYST APPL, V55, P361, DOI 10.1016/j.eswa.2016.02.011
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 140
TC 29
Z9 31
U1 14
U2 71
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106241
DI 10.1016/j.infsof.2019.106241
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100008
DA 2024-07-18
ER

PT J
AU Rodrigues, A
   Rodrigues, GN
   Knauss, A
   Ali, R
   Andrade, H
AF Rodrigues, Arthur
   Rodrigues, Genaina Nunes
   Knauss, Alessia
   Ali, Raian
   Andrade, Hugo
TI Enhancing context specifications for dependable adaptive systems: A data
   mining approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-adaptive system; Context uncertainty; Data mining; Design time;
   Goal modelling; Dependability
ID REQUIREMENTS; FRAMEWORK
AB Context: Adaptive systems are expected to cater for various operational contexts by having multiple strategies in achieving their objectives and the logic for matching strategies to an actual context. The prediction of relevant contexts at design time is paramount for dependability. With the current trend on using data mining to support the requirements engineering process, this task of understanding context for adaptive system at design time can benefit from such techniques as well.
   Objective: The objective is to provide a method to refine the specification of contextual variables and their relation to strategies for dependability. This refinement shall detect dependencies between such variables, priorities in monitoring them, and decide on their relevance in choosing the right strategy in a decision tree.
   Method: Our requirements-driven approach adopts the contextual goal modelling structure in addition to the operationalization values of sensed information to map contexts to the system's behaviour. We propose a design time analysis process using a subset of data mining algorithms to extract a list of relevant contexts and their related variables, tasks, and/or goals.
   Results: We experimentally evaluated our proposal on a Body Sensor Network system (BSN), simulating 12 resources that could lead to a variability space of 4096 possible context conditions. Our approach was able to elicit subtle contexts that would significantly affect the service provided to assisted patients and relations between contexts, assisting the decision on their need, and priority in monitoring.
   Conclusion: The use of some data mining techniques can mitigate the lack of precise definition of contexts and their relation to system strategies for dependability. Our method is practical and supportive to traditional requirements specification methods, which typically require intense human intervention.
C1 [Rodrigues, Arthur; Rodrigues, Genaina Nunes] Univ Brasilia, Brasilia, DF, Brazil.
   [Knauss, Alessia; Andrade, Hugo] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Ali, Raian] Bournemouth Univ, Poole, Dorset, England.
C3 Universidade de Brasilia; Chalmers University of Technology; Bournemouth
   University
RP Rodrigues, A (corresponding author), Univ Brasilia, Brasilia, DF, Brazil.
EM arthy.rf@gmail.com; genaina@cic.unb.br; alessia.knauss@chalmers.se;
   rali@bournemouth.ac.uk; sica@chalmers.se
RI Ali, Raian/AAM-9992-2021; Ali, Raian/HZI-8249-2023; Rodrigues, Genaina
   Nunes/N-4215-2019
OI Ali, Raian/0000-0002-5285-7829; Rodrigues, Genaina
   Nunes/0000-0003-1661-8131; Andrade, Hugo/0000-0002-8389-7217; Jose
   Rodrigues Farias, Arthur/0000-0003-2045-9014
FU CAPES-Brasil [001]; CNPq [306017/2018-0]
FX Arthur would like to thank CAPES-Brasil for the financial support
   finance code 001. Genaina thanks CNPq for the partial support under
   grant number 306017/2018-0. Furthermore, a great appreciation to the
   Dependability Group from UnB's Software Engineering Lab (LADECIC) as
   well as to the anonymous reviewers for their invaluable feedback.
CR Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 1995, P ICML 95
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Casella G., 2002, STAT INFERENCE
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cohene T, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P95, DOI 10.1109/RE.2005.20
   de Lemos R., 2017, SOFTWARE ENG SELF AD, V9640
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Esfahani N., 2010, SOFTWARE ENG SELF AD, P214
   Esfahani N, 2013, IEEE T SOFTWARE ENG, V39, P1467, DOI 10.1109/TSE.2013.37
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Finkelstein A., 2001, P 1 INT WORKSH SOFTW, P200, DOI DOI 10.11648/J.AJSEA.20150406.11
   Frank E, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1305, DOI 10.1007/0-387-25465-X_62
   Goldberger AL, 2000, CIRCULATION, V101, pE215, DOI 10.1161/01.CIR.101.23.e215
   Gómez M, 2017, IEEE SOFTWARE, V34, P81, DOI 10.1109/MS.2017.46
   Grassi V, 2009, LECT NOTES COMPUT SC, V5525, P201, DOI 10.1007/978-3-642-02161-9_11
   Guimaraes FP, 2017, DATA KNOWL ENG, V109, P25, DOI 10.1016/j.datak.2017.03.003
   Harman M., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P1, DOI 10.1109/RAISE.2012.6227961
   Hassan S, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P134, DOI 10.1109/SEAMS.2015.13
   Hastie T., 2009, ELEMENTS STAT LEARNI, Vsecond, P241
   Hong D, 2005, SEVENTH INTERNATIONAL CONFERENCE ON ELECTRONIC COMMERCE, VOLS 1 AND 2, SELECTED PROCEEDINGS, P590
   Horkoff J, 2014, INT REQUIR ENG CONF, P33, DOI 10.1109/RE.2014.6912245
   Jureta IJ, 2008, INT REQUIR ENG CONF, P71, DOI 10.1109/RE.2008.13
   Keller T., 2011, SEM REQ ENG
   Knauss A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P345, DOI 10.1109/RE.2012.6345835
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Knauss A, 2014, IEEE INT WORKS EMPIR, P56, DOI 10.1109/EmpiRE.2014.6890117
   Kotsiantis SB, 2007, FRONT ARTIF INTEL AP, V160, P3
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mendonça DF, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P55, DOI 10.1145/2593929.2593947
   Mendonça DF, 2016, INFORM SOFTWARE TECH, V80, P245, DOI 10.1016/j.infsof.2016.09.005
   Munoz-Fernandez J. C., 2017, JOINT P REFSQ 2017 W
   Nunes V., 2013, INT WORKSH ARCH DEP
   Pessoa L, 2017, INFORM SOFTWARE TECH, V86, P54, DOI 10.1016/j.infsof.2017.02.002
   Quinlan JR, 1999, INT J HUM-COMPUT ST, V51, P497, DOI 10.1006/ijhc.1987.0321
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Ricardo GacituaMark Rouncefield Peter Sawyer Leonid Kof L. Ma P. PiwekGervasi., 2013, Managing Requirements Knowledge, P23, DOI DOI 10.1007/978-3-642-34419-0_2
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Sutcliffe A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P19, DOI 10.1109/RE.2005.51
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Villegas N. M., 2010, SOFTW ENG SELF AD SY, P265
   Welsh K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P560, DOI 10.1109/ASE.2011.6100125
   Weyns D, 2017, Handbook of Software Engineering
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Yang G.-Z., INTRODUCTION, P1
   Zhuoqun Yang, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P55, DOI 10.1007/978-3-319-05843-6_5
NR 50
TC 5
Z9 7
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 115
EP 131
DI 10.1016/j.infsof.2019.04.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Almeida, RB
   Junes, VRC
   Machado, RD
   da Rosa, DYL
   Donato, LM
   Yamin, AC
   Pernas, AM
AF Almeida, Ricardo Borges
   Covalski Junes, Victor Renan
   Machado, Roger da Silva
   Leal da Rosa, Diorgenes Yuri
   Donato, Lucas Medeiros
   Yamin, Adenauer Correa
   Pernas, Ana Marilza
TI A distributed event-driven architectural model based on situational
   awareness applied on internet of things
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Distributed architectural model; Situational awareness; Internet of
   things; Event processing; Information security
ID MIDDLEWARE
AB Context The IoT network is comprised of numerous and heterogeneous devices that are capable of generating large amounts of events. To enable the IoT paradigm, it is necessary to integrate, process, and react to events on the fly.
   Objective: The goal of this paper is to support the increased demands of scalability, flexibility, autonomy, and heterogeneity for IoT event processing. A distributed architectural model based on Situational Awareness, named EXEHDA-SA, was designed to provide event collection, hybrid processing, and customizable and dynamic reaction features.
   Method The conception of the model was based on a middleware for ubiquitous computing called EXEHDA, thus benefiting from its already defined strategies. The proposal follows a multi-level strategy and consists of three hierarchically interconnected modular components.
   Results: Our main contribution is the conception and validation of a model for event collection, processing and reaction for modern distributed environments. The contribution is evidenced through experiments performed on a prototype implemented on consolidated free and open source technologies. The experiments are made up of five case studies where each one evaluates a scenario for IoT demands.
   Conclusion: Through these case studies which were proposed in information security area, we demonstrated the feasibility of this proposal for deployment in IoT production environments. Furthermore, EXEHDA-SA is able to operate on different scenarios due to each component modularity and its consequent extensibility.
C1 [Almeida, Ricardo Borges; Covalski Junes, Victor Renan; Machado, Roger da Silva; Leal da Rosa, Diorgenes Yuri; Yamin, Adenauer Correa; Pernas, Ana Marilza] Univ Fed Pelotas, Pelotas, RS, Brazil.
   [Donato, Lucas Medeiros] De Montfort Univ, Leicester, Leics, England.
C3 Universidade Federal de Pelotas; De Montfort University
RP Almeida, RB (corresponding author), Univ Fed Pelotas, Pelotas, RS, Brazil.
EM rbalmeida@inf.ufpel.edu.br; vrcjunes@inf.ufpel.edu.br;
   rdsmachado@inf.ufpel.edu.br; diorgenes@inf.ufpel.edu.br;
   lucas.donato@my365.dmu.ac.uk; adenauer@inf.ufpel.edu.br;
   marilza@inf.ufpel.edu.br
OI Pernas, Ana Marilza/0000-0001-8142-817X; Correa Yamin,
   Adenauer/0000-0002-7333-244X; Machado, Roger/0000-0001-6354-3481
FU Coordenacao de Aperfeic oamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]; Fundacao de Amparo a Pesquisa do Rio Grande do SUL
   (FAPERGS) [17/2551-0001 - PqG]
FX This study was financed in part by the Coordenacao de Aperfeic oamento
   de Pessoal de Nivel Superior -Brasil (CAPES) - Finance Code 001 and
   Fundacao de Amparo a Pesquisa do Rio Grande do SUL (FAPERGS) Funding No.
   17/2551-0001 - PqG.
CR Abughofa T, 2017, IEEE INT CONF BIG DA, P2787, DOI 10.1109/BigData.2017.8258245
   Alienvault, 2015, TECHNICAL REPORT
   Anastasov I., 2014, Computer Applications and Information Systems, (WCCAIS), 2014 World Congress, P1, DOI [10.1109/WCCAIS.2014.6916651, DOI 10.1109/WCCAIS.2014.6916651]
   [Anonymous], 2013, P 9 ADV INT C TELECO
   [Anonymous], 2017, 2017 INT C CYB SIT A
   [Anonymous], SITUATIONAL AWARENES
   Ching Yu Chen, 2014, 2014 IEEE International Conference on Automation Science and Engineering (CASE), P1144, DOI 10.1109/CoASE.2014.6899470
   Chintapalli S, 2016, IEEE SYM PARA DISTR, P1789, DOI 10.1109/IPDPSW.2016.138
   Chuvakin A., 2012, Logging and log management: the authoritative guide to dealing with syslog, audit logs, events, alerts and other it 'noise'
   Dayarathna M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3170432
   de Prado A. G., 2017, EXPERT SYST APPL, V85, P231, DOI [10.1016/j.eswa.2017.05.034, DOI 10.1016/J.ESWA.2017.05.034]
   Detken  K.-O., 2015, P 8 INT C INT DAT AC, DOI [10.1109/IDAACS.2015.7340752, DOI 10.1109/IDAACS.2015.7340752]
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Endsley M. R., 2011, DESIGNING SITUATION, V2nd
   Endsley M. R., 1988, P HUM FACT SOC ANN M, V32, P97, DOI DOI 10.1177/154193128803200221
   EsperTech, 2016, ESP REF MAN CHAPT 21
   Etzion O., 2010, Event Processing in Action, Vfirst
   Franke U, 2014, COMPUT SECUR, V46, P18, DOI 10.1016/j.cose.2014.06.008
   Giandomenico  A., 2017, NEED SITUATIONAL AWA
   Giusto D., 2010, INTERNET THINGS, V1, DOI [10.1007/978-1-4419-1674-7, DOI 10.1007/978-1-4419-1674-7]
   Gjorgjeski  N., 2016, THESIS
   Heine  F., 2015, DACH SECURITY 2015 B
   HP, 2015, TECHNICAL REPORT
   Klender Nikolay, 2016, ANOMALY DETECTION ES
   Knappmeyer M, 2013, IEEE COMMUN SURV TUT, V15, P1492, DOI 10.1109/SURV.2013.010413.00207
   Lopes J, 2014, J UNIVERS COMPUT SCI, V20, P1327
   Machado R, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1451, DOI 10.1145/3167132.3167405
   Machado RD, 2017, FUTURE GENER COMP SY, V73, P1, DOI 10.1016/j.future.2017.03.005
   Marie P, 2015, SENSORS-BASEL, V15, P14180, DOI 10.3390/s150614180
   Mendez D. M., 2017, INTERNET THINGS SURV, DOI [10.1080/19393555.2018.1458258, DOI 10.1080/19393555.2018.1458258]
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Gomes BDP, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17122853
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Razzaque MA, 2016, IEEE INTERNET THINGS, V3, P70, DOI 10.1109/JIOT.2015.2498900
   Sapegin A, 2017, COMPUT SECUR, V67, P16, DOI 10.1016/j.cose.2017.02.001
   Sehic S., 2011, P 2 WORKSH SOFTW ENG, P1, DOI DOI 10.1145/1988051.1988053
   SIMU, 2015, SIMU PROJECT
   Tianfield Huaglory, 2016, 2016 IEEE International Conference on Internet of Things (iThings), IEEE Green Computing and Communications (GreenCom), IEEE Cyber-, Physical and Social Computing (CPSCom), and IEEE Smart Data (SmartData). Proceedings, P782, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.165
   *VER, 2012, DAT BREACH INV REP
   Yang YC, 2017, IEEE INTERNET THINGS, V4, P1250, DOI 10.1109/JIOT.2017.2694844
   Zámecníková E, 2015, 2015 IEEE 13th International Scientific Conference on Informatics, P296, DOI 10.1109/Informatics.2015.7377850
   Zarzosa S. G., 2017, DISIEM DELIVERABLE D
NR 42
TC 12
Z9 13
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 144
EP 158
DI 10.1016/j.infsof.2019.04.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600011
DA 2024-07-18
ER

PT J
AU Lavazza, L
   Morasca, S
AF Lavazza, Luigi
   Morasca, Sandro
TI Empirical evaluation and proposals for bands-based COSMIC early
   estimation methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; COSMIC measurement method; Size estimation;
   Early approximate methods; Equal size bands
ID FUNCTIONAL SIZE
AB Background. In the early phases of software development projects, thorough application of the COSMIC functional size measurement method may require more time and effort than available. Thus, early approximate methods have been proposed for estimating the COSMIC functional size of an application, instead of measuring it.
   Objective. The goal of this paper is to empirically evaluate the accuracy of the COSMIC early size estimation methods that are based on evaluations at the functional process level, for which historical data are available. The goal is to provide practitioners with empirical evidence on the accuracy of these methods.
   Method. We evaluated the Average Functional Process and the Equal Size Bands methods. We also proposed and evaluated two new approaches for defining bands in the Fixed Size Classification method. The estimation was performed by applying these methods to a set of software applications for which the data necessary to perform estimations were available, having been previously measured according to the standard COSMIC method.
   Results. Our analyses show that the Average Functional Process method generally provides estimates that are reasonable for early and quick sizing, but in some cases its estimation errors are too large to be acceptable. On the contrary, the methods using bands can provide quite accurate estimates. We determine the level of accuracy that can be obtained based on the type of method used, the number of bands used, and the quantitative characterization of the ability to classify each functional process in the correct band.
   Conclusions. The Average Functional Process method may be unreliable, as it occasionally yields quite large errors. Organizations using bands-based methods cannot just follow the prescribed estimation process: they need to properly train people in charge of classifying functional processes in the correct size band.
C1 [Lavazza, Luigi; Morasca, Sandro] Univ Insubria, Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Varese, Italy.
EM luigi.lavazza@cefrial.it
RI Lavazza, Luigi/AAF-5323-2020
OI Lavazza, Luigi/0000-0002-5226-4337; Morasca, Sandro/0000-0003-4598-7024
FU "Fondo di Ricerca d'Ateneo" of the Universita degli Studi dell'Insubria
FX Parts of this work have been supported by the "Fondo di Ricerca
   d'Ateneo" of the Universita degli Studi dell'Insubria.
CR [Anonymous], 2003, P 13 INT WORKSH SOFT
   [Anonymous], 2017, PROC 21 INT C EVAL A
   Cohen J., 1988, STAT POWER ANAL BEHA
   Common Software Measurement International Consortium (COSMIC), 2017, 197612017 COSMIC ISO
   Conte  M., 2004, SOFTWARE MEASUREMENT, P1
   De Marco Lucia, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P349, DOI 10.1109/SEAA.2013.41
   del Bianco Vieri, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P59, DOI 10.1007/978-3-642-31063-8_6
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Fetcke Thomas., 1999, The Warehouse Software Portfolio, A Case Study in Functional Size Measurement
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Haoues M., 2017, P 27 INT WORKSHOP SO, P129, DOI 10.1145/3143434.3143436
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lavazza  L., 2009, P 5 INT C PRED MOD S, P9
   Lavazza L, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P65, DOI [10.1109/IWSM-Mensura.2016.12, 10.1109/IWSM-Mensura.2016.020]
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Lavazza L, 2009, LECT NOTES COMPUT SC, V5891, P101, DOI 10.1007/978-3-642-05415-0_8
   Ochodek M, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P201, DOI [10.1109/IWSM-Mensura.2016.8, 10.1109/IWSM-Mensura.2016.039]
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Symons  C., 2013, REFSQ C ESS GERM
   Ungan  E., 2018, INT WORKSH SOFTW MEA
   Vogelezang  F., 2005, RABOBANK DATASET 200
   Vogelezang  F., 2007, APPROXIMATE SIZE MEA
   Vogelezang  F., 2015, GUIDELINE EARLY RAPI
   Vogelezang Frank., 2005, Software Measurement European Forum - SMEF, P227
   Zhang C, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P112, DOI 10.1145/2993717.2993733
NR 29
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 108
EP 125
DI 10.1016/j.infsof.2019.02.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400009
DA 2024-07-18
ER

PT J
AU Panichella, A
   Kifetew, FM
   Tonella, P
AF Panichella, Annibale
   Kifetew, Fitsum Meshesha
   Tonella, Paolo
TI A large scale empirical comparison of state-of-the-art search-based test
   case generators
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case generation; Search-based testing; Large-scale evaluation
AB Context Replication studies and experiments form an important foundation in advancing scientific research. While their prevalence in Software Engineering is increasing, there is still more to be done.
   Objective: This article aims to extend our previous replication study on search-based test generation techniques by performing a large-scale empirical comparison with further techniques from the state of the art.
   Method: We designed a comprehensive experimental study involving six techniques, a benchmark composed of 180 non-trivial Java classes, and a total of 21,600 independent executions. Metrics regarding effectiveness and efficiency of the techniques were collected and analyzed by means of statistical methods.
   Results: Our empirical study shows that single target approaches are generally outperformed by multi-target approaches, while within the multi-target approaches, DynaMOSA/MOSA, which are based on many-objective optimization, outperform the others, in particular for complex classes.
   Conclusion: The results obtained from our large-scale empirical investigation confirm what has been reported in previous studies, while also highlighting striking differences and novel observations. Future studies, on different benchmarks and considering additional techniques, could further reinforce and extend our findings.
C1 [Panichella, Annibale] Delft Univ Technol, Delft, Netherlands.
   [Kifetew, Fitsum Meshesha] Fdn Bruno Kessler, Trento, Italy.
   [Tonella, Paolo] USI, Lugano, Switzerland.
C3 Delft University of Technology; Fondazione Bruno Kessler
RP Kifetew, FM (corresponding author), Fdn Bruno Kessler, Trento, Italy.
EM a.panichella@tudelft.nl; kifetew@fbk.eu; paolo.tonella@usi.ch
RI Tonella, Paolo/C-1702-2015; Kifetew, Fitsum Meshesha/AFM-7847-2022;
   Panichella, Annibale/AAJ-8443-2020
OI Kifetew, Fitsum Meshesha/0000-0003-1860-8666; Panichella,
   Annibale/0000-0002-7395-3588
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], 2013, P INT S SOFTWARE TES
   [Anonymous], MULTIOBJECTIVE APPRO
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], MANY INDEPENDENT OBJ
   [Anonymous], AUT SOFTW ENG 1998 P
   [Anonymous], INF SOFTWARE TECHNOL
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri A, 2016, LECT NOTES COMPUT SC, V9962, P3, DOI 10.1007/978-3-319-47106-8_1
   Arcuri A, 2014, LECT NOTES COMPUT SC, V8636, P1
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baker R.D., 1995, Randomization Tests
   Campos Jose, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P228, DOI 10.1007/978-3-319-22183-0_16
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Deb Kalyanmoy, 2014, International Journal of Artificial Intelligence and Soft Computing, V4, P1, DOI 10.1504/IJAISC.2014.059280
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Galeotti JP, 2013, PROC INT SYMP SOFTW, P360, DOI 10.1109/ISSRE.2013.6698889
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Gay G, 2017, LECT NOTES COMPUT SC, V10452, P65, DOI 10.1007/978-3-319-66299-2_5
   Grano G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P19, DOI 10.1109/MALTESQUE.2018.8368454
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Panichella A., 2017, IEEE T SOFTWARE ENG, P1, DOI [10.1109/TSE.2017.2663435.PP, DOI 10.1109/TSE.2017.2663435.PP]
   Panichella A, 2017, LECT NOTES COMPUT SC, V10452, P83, DOI 10.1007/978-3-319-66299-2_6
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Pinto G. H. L., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P129, DOI 10.1109/ICTAI.2010.26
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Molina UR, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P22, DOI 10.1145/3194718.3194728
   Rueda U, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI [10.1145/2897010.2897018, 10.1109/SBST.2016.012]
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
NR 46
TC 42
Z9 42
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 236
EP 256
DI 10.1016/j.infsof.2018.08.009
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900016
DA 2024-07-18
ER

PT J
AU Khatibsyarbini, M
   Isa, MA
   Jawawi, DNA
   Tumeng, R
AF Khatibsyarbini, Muhammad
   Isa, Mohd Adham
   Jawawi, Dayang N. A.
   Tumeng, Rooster
TI Test case prioritization approaches in regression testing: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Test case prioritization; Regression testing; Software testing;
   Systematic literature review
ID TEST SUITE PRIORITIZATION; FAULT; CRITERIA
AB Context: Software quality can be assured by going through software testing process. However, software testing phase is an expensive process as it consumes a longer time. By scheduling test cases execution order through a prioritization approach, software testing efficiency can be improved especially during regression testing.
   Objective: It is a notable step to be taken in constructing important software testing environment so that a system's commercial value can increase. The main idea of this review is to examine and classify the current test case prioritization approaches based on the articulated research questions.
   Method: Set of search keywords with appropriate repositories were utilized to extract most important studies that fulfill all the criteria defined and classified under journal, conference paper, symposiums and workshops categories. 69 primary studies were nominated from the review strategy.
   Results: There were 40 journal articles, 21 conference papers, three workshop articles, and five symposium articles collected from the primary studies. As for the result, it can be said that TCP approaches are still broadly open for improvements. Each approach in TCP has specified potential values, advantages, and limitation. Additionally, we found that variations in the starting point of TCP process among the approaches provide a different timeline and benefit to project manager to choose which approaches suite with the project schedule and available resources.
   Conclusion: Test case prioritization has already been considerably discussed in the software testing domain. However, it is commonly learned that there are quite a number of existing prioritization techniques that can still be improved especially in data used and execution process for each approach. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Khatibsyarbini, Muhammad; Isa, Mohd Adham; Jawawi, Dayang N. A.; Tumeng, Rooster] Univ Teknol Malaysia, Fac Comp, Dept Software Engn, Johor Baharu 81310, Johor, Malaysia.
C3 Universiti Teknologi Malaysia
RP Khatibsyarbini, M (corresponding author), Univ Teknol Malaysia, Fac Comp, Dept Software Engn, Johor Baharu 81310, Johor, Malaysia.
EM kmuhammad4@live.utm.my
RI Jawawi, Dayang N. A./A-7251-2013; Isa, Mohd Adham/L-1690-2013; Isa, Mohd
   Adham/M-6026-2019
OI Isa, Mohd Adham/0000-0002-0049-8510; Isa, Mohd
   Adham/0000-0002-0049-8510; Khatibsyarbini, Muhammad/0000-0001-6839-1755
FU Fundamental Research Grant Scheme [4F836]; Research University Grant
   Scheme under the Ministry of Education Malaysia - KPM [11H86]
FX The work is fully funded by Fundamental Research Grant Scheme, vote
   number 4F836 and Research University Grant Scheme, vote number 11H86
   under the Ministry of Education Malaysia - KPM. We would also like to
   thank the members of Embedded & Real- Time Software Engineering
   Laboratory (EReTSEL) and Software Engineering Research Group (SERG),
   Faculty of Computing, UTM for their feedback and continuous support.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alves ELG, 2016, SOFTW TEST VERIF REL, V26, P402, DOI 10.1002/stvr.1603
   [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 1925, STAT METHODS RES WOR
   [Anonymous], 2011, INTERNATIONAL
   [Anonymous], 2014, ACM T SOFTWARE ENG M
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Badwal J., 2013, 2013 IEEE 6 INT C, P488
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Catal C., 2012, P 2 INT WORKSH
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Nardo D, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P302, DOI 10.1109/ICST.2013.27
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Eghbali S, 2016, IEEE T SOFTWARE ENG, V42, P1178, DOI 10.1109/TSE.2016.2550441
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2000, PRIORITIZING TEST CA
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Fu WH, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P60, DOI 10.1109/SATE.2016.17
   Gao D., 2015, SOFTWARE ENG SERVICE
   Haidry SEZ, 2013, IEEE T SOFTWARE ENG, V39, P258, DOI 10.1109/TSE.2012.26
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Hettiarachchi C., 2016, INF SOFTW TECHNOL
   Hettiarachchi C, 2014, INT CONF SOFTW SECUR, P157, DOI 10.1109/SERE.2014.29
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jiang B., 2015, J SYST SOFTW
   Jiang B, 2015, J SYST SOFTWARE, V105, P91, DOI 10.1016/j.jss.2015.03.066
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jones J., 2003, TEST, V3, P101
   Jun W., 2011, TEST CASE PRIORITIZA
   Kapfhammer G., 2007, P 1 ACM INT
   Khalilian A., 2012, SCI COMPUTER
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kiran R. S., 2015, GLOBAL J RES ENG
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Kumar A., 2014, COMPUSOFT, V3, P793
   Laali M., 2016, TEST CASE PRIORITIZA, P78
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li S., 2010, SIMULATION STUDY SOM
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin CT, 2013, IEEE INT C ENG COMP, P171, DOI 10.1109/ICECCS.2013.33
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Ma TT, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P419, DOI 10.1109/SNPD.2016.7515934
   Maheswari R., 2015, INDIAN J SCI TECHNOL
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Marijan D., 2013, SOFTWARE MAINTENANCE
   Mei LJ, 2015, IEEE T SERV COMPUT, V8, P740, DOI 10.1109/TSC.2014.2322621
   Mei LJ, 2015, IEEE T SERV COMPUT, V8, P658, DOI 10.1109/TSC.2014.2331683
   Miranda B., 2016, JSS 16, P1
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   Muthusamy T., 2014, International Journal of Applied Information Systems (IJAIS), V6, P21, DOI [10.5120/ijais14-451081, DOI 10.5120/IJAIS14-451081]
   Myers G J., 2004, The Art of Software Testing, V1
   Nardo D., 2015, SOFTWARE TESTING
   Noguchi T., 2015, HIST BASED TEST CASE
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sabharwal S., 2010, 2010 International Conference on Computer and Communication Technology (ICCCT 2010), P481, DOI 10.1109/ICCCT.2010.5640479
   Sampath S, 2013, IEEE T SOFTWARE ENG, V39, P1326, DOI 10.1109/TSE.2013.16
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Schwartz A, 2016, J SYST SOFTWARE, V115, P61, DOI 10.1016/j.jss.2016.01.018
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Solanki K., 2016, TEST CASE PRIORITIZA
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Srikanth H, 2016, J SYST SOFTWARE, V119, P122, DOI 10.1016/j.jss.2016.06.017
   Srikanth H, 2016, INFORM SOFTWARE TECH, V69, P71, DOI 10.1016/j.infsof.2015.09.002
   Tahvili S., 2016, INF TECHNOL
   Thomas S., 2014, STATIC TEST CASE PRI
   Ufuktepe E., 2016, COMPUTER SOFTWARE AP
   Wang Y., 2015, SOFTW ENG SERV
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Yadav DK, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1033
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, SOFTW TEST VERIF REL, V22, P1, DOI DOI 10.1002/000.PUBLISHED
   Yoon H, 2011, INT J SOFTW ENG KNOW, V21, P191, DOI 10.1142/S0218194011005220
   Yoon M., 2012, J SOFTWARE ENG APPL, V5, P823
   Yu YT, 2012, INFORM SOFTWARE TECH, V54, P179, DOI 10.1016/j.infsof.2011.09.005
   Yuan F., 2015, INT S SEARCH BAS
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang XY, 2016, CHIN CONT DECIS CONF, P3354, DOI 10.1109/CCDC.2016.7531562
   Zhao X., 2015, IEEE 39 ANN COMP SOF
NR 97
TC 120
Z9 126
U1 2
U2 46
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 74
EP 93
DI 10.1016/j.infsof.2017.08.014
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200006
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, L
   Bissyandé, TF
   Papadakis, M
   Rasthofer, S
   Bartel, A
   Octeau, D
   Klein, J
   Traon, L
AF Li, Li
   Bissyande, Tegawende F.
   Papadakis, Mike
   Rasthofer, Siegfried
   Bartel, Alexandre
   Octeau, Damien
   Klein, Jacques
   Traon, Le
TI Static analysis of android apps: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
ID CODE ANALYSIS; SECURITY; PROGRAMS; FLOW
AB Context: Static analysis exploits techniques that parse program source code or bytecode, often traversing program paths to check some program properties. Static analysis approaches have been proposed for different tasks, including for assessing the security of Android apps, detecting app clones, automating test cases generation, or for uncovering non-functional issues related to performance or energy. The literature thus has proposed a large body of works, each of which attempts to tackle one or more of the several challenges that program analyzers face when dealing with Android apps.
   Objective: We aim to provide a clear view of the state-of-the-art works that statically analyze Android apps, from which we highlight the trends of static analysis approaches, pinpoint where the focus has been put, and enumerate the key aspects where future researches are still needed.
   Method: We have performed a systematic literature review (SLR) which involves studying 124 research papers published in software engineering, programming languages and security venues in the last 5 years (January 2011-December 2015). This review is performed mainly in five dimensions: problems targeted by the approach, fundamental techniques used by authors, static analysis sensitivities considered, android characteristics taken into account and the scale of evaluation performed.
   Results: Our in-depth examination has led to several key findings: 1) Static analysis is largely performed to uncover security and privacy issues; 2) The Soot framework and the Jimple intermediate representation are the most adopted basic support tool and format, respectively; 3) Taint analysis remains the most applied technique in research approaches; 4) Most approaches support several analysis sensitivities, but very few approaches consider path-sensitivity; 5) There is no single work that has been proposed to tackle all challenges of static analysis that are related to Android programming; and 6) Only a small portion of state-of-the-art works have made their artifacts publicly available.
   Conclusion: The research community is still facing a number of challenges for building approaches that are aware altogether of implicit-Flows, dynamic code loading features, reflective calls, native code and multi-threading, in order to implement sound and highly precise static analyzers. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Li, Li; Bissyande, Tegawende F.; Papadakis, Mike; Bartel, Alexandre; Klein, Jacques; Traon, Le] Univ Luxembourg, Interdisciplinary Ctr Secur, Reliabil & Trust SnT, Luxembourg, Luxembourg.
   [Rasthofer, Siegfried] Fraunhofer SIT, Darmstadt, Germany.
   [Octeau, Damien] Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
   [Bartel, Alexandre] Tech Univ Darmstadt, Darmstadt, Germany.
C3 University of Luxembourg; Fraunhofer Gesellschaft; Fraunhofer Institute
   Center Schloss Birlinghoven; University of Wisconsin System; University
   of Wisconsin Madison; Technical University of Darmstadt
RP Li, L (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur, Reliabil & Trust SnT, Luxembourg, Luxembourg.
EM li.li@uni.lu
RI Li, Li/AAR-3316-2020; Bartel, Alexandre/JDW-0992-2023
OI Bartel, Alexandre/0000-0003-1383-0372; Klein,
   Jacques/0000-0003-4052-475X; Papadakis, Mike/0000-0003-1852-2547
FU Fonds National de la Recherche (FNR), Luxembourg [C13/IS/5921289,
   C15/IS/10449467]
FX The authors would like to thank the anonymous reviewers for their
   helpful comments and suggestions, as well as all the authors of static
   Android analysis who have provided useful feedback to the initial draft
   of this SLR, during the self-checking process. This work was supported
   by the Fonds National de la Recherche (FNR), Luxembourg, under projects
   AndroMap C13/IS/5921289 and Recommend C15/IS/10449467.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Andronio Nicolo, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P382, DOI 10.1007/978-3-319-26362-5_18
   [Anonymous], 2014, NDSS
   [Anonymous], 2012, INT C DETECTION INTR
   [Anonymous], S US PRIV SEC SOUPS
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], P ACM SIGSOFT 20 INT
   [Anonymous], 2015, P ISOC NETW DISTR SY
   [Anonymous], P 20 ANN NETW DISTR
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], 2012, MOST 2012 MOB SEC TE
   [Anonymous], 2012, P 27 ANN ACM S APPL
   [Anonymous], P INT C SOFTW ENG IC
   [Anonymous], 2015, P 37 INT C SOFTW ENG
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], 2013, 1 INT WORKSH CLOUD C
   Arzt S., 2014, P 35 ANN ACM SIGPLAN
   Arzt S, 2013, LECT NOTES COMPUT SC, V8174, P364, DOI 10.1007/978-3-642-40787-1_26
   Arzt Steven., 2015, Proceedings of the 4th ACM SIGPLAN International Workshop on State of the Art in Program Analysis, P1, DOI [10.1145/2771284.2771285, DOI 10.1145/2771284.2771285]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bartel A, 2012, ACM SIGPL INT WORKSH
   Bartel A., 2014, THESIS
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Bartsch Steffen, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P291, DOI 10.1109/ARES.2013.39
   Bastani O, 2015, ACM SIGPLAN NOTICES, V50, P299, DOI [10.1145/2858965.2814274, 10.1145/2814270.2814274]
   Batyuk L., 2011, 2011 6th International Conference on Malicious and Unwanted Software, P66, DOI 10.1109/MALWARE.2011.6112328
   Berard B., 2013, SCHNOEBELEN SYSTEMS
   Bhoraskar R., 2014, 23 USENIX SEC S USEN
   Blackshear S, 2015, ACM SIGPLAN NOTICES, V50, P163, DOI [10.1145/2814270.2814293, 10.1145/2858965.2814293]
   Blackshear S, 2013, ACM SIGPLAN NOTICES, V48, P275, DOI 10.1145/2499370.2462186
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bruneton Eric, 2002, ADAPTABLE EXTENSIBLE, V30
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Chan P.P.F., 2012, P 5 ACM C SEC PRIV W, P125
   Chen C, 2014, ADV INTEL SYS RES, V101, P1, DOI 10.1109/TSA.2014.10
   Chen K. Z., 2013, CONTEXTUAL POLICY EN
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen XH, 2015, P INT COMP SOFTW APP, P5, DOI 10.1109/COMPSAC.2015.114
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Choi K, 2014, INFORM PROCESS LETT, V114, P620, DOI 10.1016/j.ipl.2014.05.011
   Chon Ju Kim, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P395, DOI 10.1109/WCRE.2012.49
   Chun BG, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P301
   Cortesi A, 2015, LECT NOTES COMPUT SC, V8931, P61
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Cui X., 2015, P 8 ACM C SEC PRIV W, P25
   Davis B., 2012, MOBILE SECUR TECHNOL
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Desnos A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5394, DOI 10.1109/HICSS.2012.114
   Desnos A., 2011, Black Hat, 2011, Abu Dhabi, BlackHat'11, P77
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Elish KarimO., 2015, On the Need of Precise Inter-App ICC Classification for Detecting Android Malware Collusions
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Faruki P, 2015, IEEE COMMUN SURV TUT, V17, P998, DOI 10.1109/COMST.2014.2386139
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Fink S., 2012, WALATHE TJ WATSON LI
   Fuchs A.P., 2009, SCANDROID AUTOMATED
   Gallingani D., 2015, Static detection and automatic exploitation of intent message vulnerabilities in android applications
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Geneiatakis D, 2015, COMPUT SECUR, V49, P192, DOI 10.1016/j.cose.2014.10.005
   Gibler Clint., 2012, Androidleaks: automatically detecting potential privacy leaks in android applications on a large scale
   Gordon M. I., 2015, P NETW DISTR SYST SE
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Graa M., 2012, P INT C CYBERSPACE S, P33
   Graa M, 2014, 2014 IEEE EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C 2014), P149, DOI 10.1109/SERE-C.2014.33
   Grace M, 2012, SYSTEMATIC DETECTION
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Han ZH, 2014, IEEE INT CONF TRUST, P432, DOI 10.1109/TrustCom.2014.56
   Hao S., 2013, PROCEEDING 11 ANN IN, P167, DOI DOI 10.1145/2462456.2465430
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Harts M., 2014, ARXIV14104978
   Hassanshahi B, 2015, LECT NOTES COMPUT SC, V9327, P577, DOI 10.1007/978-3-319-24177-7_29
   Hendren L., 2011, SOOT FRAMEWORK JAVA
   Hoffmann J., 2013, P 28 ANN ACM S APPL, P1844
   Hu W., 2014, 23 INT C COMPUTER CO, P1, DOI DOI 10.1109/ICCCN.2014.6911805
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Jabbarvand R, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P8, DOI 10.1109/GREENS.2015.9
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   JEON J, 2012, P 2 ACM WORKSH SEC P, DOI 10.1145/2381934.2381938
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Kuleshov Eugene., 2007, Aspect-Oriented Software Development 2007
   La Polla M, 2013, IEEE COMMUN SURV TUT, V15, P446, DOI 10.1109/SURV.2012.013012.00028
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P661, DOI 10.1145/2786805.2786879
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li L, 2016, 31 IEEE ACM INT C AU
   Li L., 2014, P 13 INT C TRUST SEC
   Li L., 2016, P 2016 INT S SOFTW T
   Li L., 2014, ARXIV14047431
   Li Li, 2016, 23 IEEE INT C SOFTW
   Li Li, 2015, P 37 INT C SOFTW ENG
   Li Li, 2015, P 30 IFIP INT C ICT
   Liang CJM, 2014, PROCEEDINGS OF THE 20TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING (MOBICOM '14), P519, DOI 10.1145/2639108.2639131
   Liang S., 2013, Proceedings of the Third ACM workshop on Security and privacy in smartphones mobile devices, P21, DOI DOI 10.1145/2516760.2516769
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Lindorfer M, 2014, LECT NOTES COMPUT SC, V8550, P51
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Livshits V. B., 2003, Software Engineering Notes, V28, P317, DOI 10.1145/949952.940114
   Livshits V. B., 2005, FINDING SECURITY VUL
   LORTZ S., 2014, P 4 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2666620.2666631
   Lu Kangjie., 2015, CHECKING MORE ALERTI
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Lu Z, 2012, P INT COMP SOFTW APP, P322, DOI 10.1109/COMPSAC.2012.43
   Ma SY, 2013, IEEE GLOB COMM CONF, P826, DOI 10.1109/GLOCOM.2013.6831175
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Martin W., 2016, RN, V16, P02
   Micinski K, 2015, LECT NOTES COMPUT SC, V9327, P520, DOI 10.1007/978-3-319-24177-7_26
   Mirzaei N, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P461, DOI 10.1109/ISSRE.2015.7381839
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Moran K., 2016, ICST 16
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Naik M, 2005, LECT NOTES COMPUT SC, V3444, P374
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Octeau D, 2013, SECURITY USENIX
   Octeau D, 2010, NASTR01402010 PENNS
   Octeau Damien., 2012, FSE 12 P ACM SIGSOFT, p6:1
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Payet É, 2012, INFORM SOFTWARE TECH, V54, P1192, DOI 10.1016/j.infsof.2012.05.003
   Rashidi B., 2015, J WIRELESS MOBILE NE, V6
   Rasthofer Siegfried, 2014, 2014 Ninth International Conference on Availability, Reliability and Security (ARES). Proceedings, P40, DOI 10.1109/ARES.2014.13
   Rasthofer S., 2014, P ISOC NETW DISTR SY
   Rastogi V., 2015, Security and Privacy in Communication Networks-11th International Conference, SecureComm 2015, Dallas, TX, USA, October 26-29, 2015, Revised Selected Papers, volume 164 of SecureComm' 15, P256
   Ravitch Tristan, 2014, P 4 PROGRAM PROTECTI, P4
   Rocha BPS, 2013, IEEE T INF FOREN SEC, V8, P1294, DOI 10.1109/TIFS.2013.2267798
   Rountev Atanas, 2014, P ANN IEEEACM INT S, P143
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sadeghi A., 2016, TAXONOMY QUALITATIVE
   Safi G., 2015, P 10 JOINT M EUR SOF
   Sbîelea D, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2284403
   Schuette J, 2014, IEEE INT CONF TRUST, P370, DOI 10.1109/TrustCom.2014.48
   Shao S, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P75, DOI 10.1109/DASC.2014.22
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Sounthiraraj D., 2014, P 19 NETW DISTR SYST
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Suarez-Tangil G, 2014, IEEE COMMUN SURV TUT, V16, P961, DOI 10.1109/SURV.2013.101613.00077
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Sufatrio T.-W., 2015, COMPUTER SECURITY ES, P355
   Sun X, 2014, IFIP ADV INF COMM TE, V428, P142
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Titze D., 2015, P 29 INT C ADV INF N
   Turner M., 2008, P INT C EV ASS SOFTW
   Vekris Panagiotis., 2012, P 2012 USENIX C POWE, P3
   Vidas T., 2014, P 4 ACM WORKSHOP SEC, P39, DOI DOI 10.1145/2666620.2666630
   Vidas Timothy, 2014, P 9 ACM S INF COMP C, P447, DOI [DOI 10.1145/2590296.2590325, 10.1145/2590296.2590325]
   Wang J, 2012, P 4 AS PAC S INT, P22
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Wognsen ER, 2014, SCI COMPUT PROGRAM, V92, P25, DOI 10.1016/j.scico.2013.11.037
   Wu J., 2015, SECUR COMMUN NETW
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xia MY, 2015, P IEEE S SECUR PRIV, P899, DOI 10.1109/SP.2015.60
   Xu JL, 2013, TSINGHUA SCI TECHNOL, V18, P418, DOI 10.1109/TST.2013.6574680
   Yajin Z., 2013, P 20 NETW DISTR SYST
   Yang S., 2015, INT C SOFTW ENG ICSE
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yang Zhemin., 2013, P 20 ACM C COMPUTER, P1043, DOI [DOI 10.1145/2508859.2516676, 10.1145/2508859.2516676]
   Yu L., 2015, P 5 ANN ACM CCS WORK, P39, DOI DOI 10.1145/2808117.2808125
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zhang M., 2014, Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '14, (New York, NY, USA), P259
   Zhang M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P518, DOI 10.1145/2810103.2813669
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang X., 2016, NDSS 16
   Zhang Y, 2012, ACM SIGPLAN NOTICES, V47, P233, DOI 10.1145/2398857.2384634
   ZHAO ZB, 2012, MAL UNW SOFTW MALWAR, P135
   Zhauniarovich Y., 2015, P 5 ACM C DATA APPL, P37, DOI DOI 10.1145/2699026.2699105
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
   Zhongyang Y., 2013, 8th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '13, Hangzhou, China-May 08-10, 2013, ASIACCS'13, P353, DOI 10.1145/2484313.2484359
   Zhou Y, 2015, P 8 ACM C SEC PRIV W, P23
   Zhou Yajin., 2013, Proceedings of the 20th Annual Network Distributed System Security Symposium, NDSS'13, Reston, VA, USA
   ZUO C., 2015, Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '15, Singapore, April 14-17, 2015, ASIACCS'15, P591
NR 185
TC 167
Z9 194
U1 2
U2 62
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 67
EP 95
DI 10.1016/j.infsof.2017.04.001
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mandic, V
   Gvozdenovic, N
AF Mandic, Vladimir
   Gvozdenovic, Nebojsa
TI An extension of the GQM<SUP>+</SUP>Strategies approach with formal
   causal reasoning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software metrics and measurement; Goal-driven approaches; Causal
   analysis; GQM; GQM(+)Strategies; Alignment
ID STRATEGIES; LINKING
AB Context: Successful organizations need to manage and synchronize their strategic objectives with daily operations and activities. In general, achieving that requires a continuous process of organizational alignment. GQM(+)Strategies is an approach that helps software organizations with documenting and aligning organizational goals and strategies, and developing measurement programs. Objective: In this paper, the GQM(+)Strategies approach is further evolved and extended to include capabilities to evaluate the relationships of organizational goals and strategies through causal analysis. Method: We used an analytical paradigm to develop a formal causal model over the GQM(+)Strategies structure. In addition, an empirical pre-experimental study was designed to test practitioners' abilities to provide necessary input for the formal causal model. Results: A developed formal causal model over the GQM(+)Strategies structure allows the use of causal reasoning for the purpose of analyzing dependencies among chosen sets of goals. We illustrate this by showing how to analyze the impact of risky goals on other goals in the grid. The results of the empirical study showed that the practitioners had no difficulties providing their predictions, i.e. inputs into the causal model. Conclusion: The proposed solution extends the existing GQM(+)Strategies knowledge base by further elaborating and clarifying the process of creating grids by introducing causality theory. The use of causality theory allows experts to quantify their knowledge and beliefs regarding the effectiveness of organizational strategies. As a part of future work, formal causal models and causal reasoning can be implemented as a supporting software tool for the GQM(+)Strategies approach. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Mandic, Vladimir] Univ Novi Sad, Fac Tech Sci, Novi Sad, Serbia.
   [Gvozdenovic, Nebojsa] Univ Novi Sad, Fac Econ, Subotica, Serbia.
C3 University of Novi Sad; University of Novi Sad
RP Mandic, V (corresponding author), Univ Novi Sad, Fac Tech Sci, Novi Sad, Serbia.
EM vladman@uns.ac.rs; nebojsa.gvozdenovic@gmail.com
RI Mandic, Vladimir/I-6306-2019
OI Mandic, Vladimir/0000-0001-6996-2222
CR Aversano L, 2016, INFORM SOFTWARE TECH, V72, P171, DOI 10.1016/j.infsof.2015.12.009
   BABAR ABDUL, 2011, P 5 INT C RES CHALL, P1, DOI DOI 10.1109/RCIS.2011.6006838
   Basili Victor, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P488
   Basili V., 2007, 28 INT C INF SYST MO, P1
   Basili V, 2013, LECT NOTES COMPUT SC, V7983, P184, DOI 10.1007/978-3-642-39259-7_16
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 2014, Aligning Organizations Through Measurement-the GQM+Strategies Approach
   Beach L R., 2005, Great minds in management: the process of theory development, P36
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Boehm B., 2010, P WORKSH FUT SOFTW E, P39
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P3, DOI 10.1007/3-540-29263-2_1
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Damiani E, 2008, LECT NOTES BUS INF P, V7, P213
   Gerow JE, 2015, EUR J INFORM SYST, V24, P465, DOI 10.1057/ejis.2014.6
   Hannay J., 2010, MAKING SOFTWARE WHAT, P79
   Henderson J., 1990, TECHNICAL REPORT
   Henderson JC, 1999, IBM SYST J, V38, P472, DOI 10.1147/SJ.1999.5387096
   Jurgelenaite R, 2005, KNOWL-BASED SYST, V18, P153, DOI 10.1016/j.knosys.2004.10.009
   Kaneko T., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P221, DOI 10.1109/IWSM-MENSURA.2011.22
   Kaplan R., 2006, ALIGNMENT
   Kaplan R.S., 2004, STRATEGY LEADERSHIP, V32, P10, DOI [DOI 10.1108/10878570410699825, https://doi.org/10.1108/10878570410699825]
   Kaplan RS, 1996, CALIF MANAGE REV, V39, P53, DOI 10.2307/41165876
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kettunen P, 2015, LECT NOTES BUS INF P, V212, P205, DOI 10.1007/978-3-319-18612-2_18
   Kläs M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P119, DOI 10.1109/ICSE.2015.141
   Kobori T., 2014, CCIS, P77
   Kobori T, 2014, LECT NOTES COMPUT SC, V8892, P78, DOI 10.1007/978-3-319-13835-0_6
   Luftman J., 2000, COMMUNICATIONS ASS I, V4, P2
   Luftman J, 2010, MIS Q EXEC, V9, P263
   Mandic V, 2010, P 4 INT S EMP SOFTW, P1
   Mandic V, 2010, LECT NOTES BUS INF P, V65, P72, DOI 10.1007/978-3-642-16416-3_12
   Mandic V, 2010, LECT NOTES COMPUT SC, V6195, P14, DOI 10.1007/978-3-642-14347-2_3
   Mandic V, 2010, LECT NOTES COMPUT SC, V6156, P291, DOI 10.1007/978-3-642-13792-1_23
   Matulevicius R, 2007, LECT NOTES COMPUT SC, V4542, P18
   Munch Jurgen, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P70, DOI 10.1109/SEAA.2013.62
   Munch J., 2013, ABS13116221 CORR, P1
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   PEARL JUDEA, 2000, CAUSALITY MODELS REA
   Petersen K, 2015, EMPIR SOFTW ENG, V20, P968, DOI 10.1007/s10664-014-9306-z
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Simon H., 1970, SCI ARTIFFICIAL
   Simons R., 1994, Levers of control: How managers use innovative control systems to drive strategic renewal
   Sloman Steven., 2009, Causal Models: How People Think about the World and its Alternatives
   Tallgren T., 2011, THESIS
   Thorp J., 2003, The information paradox: Realizing the business benefits of information technology
   Trendowicz A., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P142, DOI 10.1109/IWSM-MENSURA.2011.20
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zhang Q, 2014, IEEE T NEUR NET LEAR, V25, P645, DOI 10.1109/TNNLS.2013.2279320
NR 49
TC 5
Z9 5
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 127
EP 147
DI 10.1016/j.infsof.2017.04.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500008
DA 2024-07-18
ER

PT J
AU Petrusel, R
   Mendling, J
   Reijers, HA
AF Petrusel, Razvan
   Mendling, Jan
   Reijers, Hajo A.
TI Task-specific visual cues for improving process model understanding
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process model understanding; Visual cues; Scoping task specific
   model elements; Process model relevant region; Color process model
   elements
ID BUSINESS PROCESS MODELS; EYE-MOVEMENTS; COMPLEXITY; FRAMEWORK; TRACKING
AB Context: Business process models support various stakeholders in managing business processes and designing process-aware information systems. In order to make effective use of these models, they have to be readily understandable.
   Objective: Prior research has emphasized the potential of visual cues to highlight relevant matters in models such that stakeholders can use them more efficiently. What prior research does not explain is in how far visual cues can be customized to specific understanding tasks and how this influences cognition.
   Method: In this paper, we address these questions with an experimental research design, in which we use eye-tracking equipment to capture how process experts use models to answer comprehension questions. As a treatment, we designed two manipulations of the secondary notation, namely coloring and layout, to direct attention to the elements relevant for the specific tasks.
   Results: Our results indicate that both manipulations improve both eye-tracking-based measures and performance measures such as duration and efficiency, with color having the stronger effect.
   Conclusions: Our findings lay the foundation for novel features of process modeling tools that provide modifications of secondary notation in response to specific user queries. More generally, our research emphasizes the importance of the relevant region associated with a particular model understanding task. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Petrusel, Razvan] Univ Babes Bolyai, Fac Econ & Business Adm, Teodor Mihali Str 58-60, Cluj Napoca 400591, Romania.
   [Mendling, Jan] Vienna Univ Econ & Business Adm, Inst Informat Business, Welthandelspl 1, A-1020 Vienna, Austria.
   [Reijers, Hajo A.] Vrije Univ Amsterdam, Dept Comp Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
C3 Babes Bolyai University from Cluj; Vienna University of Economics &
   Business; Vrije Universiteit Amsterdam
RP Petrusel, R (corresponding author), Univ Babes Bolyai, Fac Econ & Business Adm, Teodor Mihali Str 58-60, Cluj Napoca 400591, Romania.
EM razvan.petrusel@econ.ubbcluj.ro; jan.mendling@wu.ac.at;
   h.a.reijers@vu.nl
OI Petrusel, Razvan/0000-0002-6496-6811
CR Allen G, 2010, INFORM SYST RES, V21, P56, DOI 10.1287/isre.1080.0189
   Anderson JR, 2004, PSYCHOL SCI, V15, P225, DOI 10.1111/j.0956-7976.2004.00656.x
   [Anonymous], 2007, WORKING MEMORY THOUG
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2007, EYE TRACKING METHODO
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   Antwarg L, 2013, BEHAV INFORM TECHNOL, V32, P761, DOI 10.1080/0144929X.2011.650710
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Boucheix JM, 2010, LEARN INSTR, V20, P123, DOI 10.1016/j.learninstruc.2009.02.015
   CARDOSO J, 2005, WORKFLOW HDB 2005, P284
   Çöltekin A, 2010, INT J GEOGR INF SCI, V24, P1559, DOI 10.1080/13658816.2010.511718
   Conati C, 2007, KNOWL-BASED SYST, V20, P557, DOI 10.1016/j.knosys.2007.04.010
   Cooper K.D., 2001, Software Practice Experience, V4, P1
   Decker G, 2009, DATA KNOWL ENG, V68, P777, DOI 10.1016/j.datak.2009.02.013
   Dumas Marlon, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P31, DOI 10.1007/978-3-642-31095-9_3
   Dumas M., 2011, BUSINESS PROCESS MOD, P1
   EGAN DE, 1979, MEM COGNITION, V7, P149, DOI 10.3758/BF03197595
   Field A., 2002, How to design and report experiments
   Figl Kathrin, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P452, DOI 10.1007/978-3-642-21640-4_34
   Figl K., 2012, J ASSOC INF SYST
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Gruhn V, 2009, PROCEEDINGS OF THE 8TH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P339, DOI 10.1109/COGINF.2009.5250717
   Gschwind T, 2014, J VISUAL LANG COMPUT, V25, P117, DOI 10.1016/j.jvlc.2013.11.002
   Hogrebe F., 2011, P 4 INT WORKSHOP ENT, P183
   Jacob RJK, 2003, MIND'S EYE: COGNITIVE AND APPLIED ASPECTS OF EYE MOVEMENT RESEARCH, P573, DOI 10.1016/B978-044451020-4/50031-1
   Juristo N., 2010, BASICS SOFTWARE ENG
   JUST MA, 1976, COGNITIVE PSYCHOL, V8, P441, DOI 10.1016/0010-0285(76)90015-3
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kriglstein Simone, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P219, DOI 10.1007/978-3-642-40176-3_18
   Kunze M, 2015, SOFTW SYST MODEL, V14, P1105, DOI 10.1007/s10270-013-0389-6
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   Laue R, 2010, INF SYST E-BUS MANAG, V8, P287, DOI 10.1007/s10257-009-0120-x
   Melcher J, 2010, LECT NOTES BUS INF P, V43, P465
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2008, LECT NOTES BUS INF P, V7, P142
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Moody D.L., 2003, P CONC MOD ER 02, P380
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Muketha G. M., 2010, Information Technology Journal, V9, P1336, DOI 10.3923/itj.2010.1336.1344
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Pinggera J, 2013, LECT NOTES BUS INF P, V132, P438
   Polyvyanyy A., 2015, BPM DEMOS, V1418, P105
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Recker J., 2007, P 18 AUSTR C INF SYS
   Recker J, 2009, COMMUN ASSOC INF SYS, V25, P379
   Recker J, 2014, COMMUN ASSOC INF SYS, V34, P199
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   Rolón E, 2009, LECT NOTES BUS INF P, V29, P58
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Sanchez-Gonzalez L., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1445, DOI [DOI 10.1145/1982185.1982496, 10.1145/1982185.1982496]
   Sánchez-González L, 2012, INFORM SOFTWARE TECH, V54, P1159, DOI 10.1016/j.infsof.2012.05.001
   SCHREPFER M, 2009, THE PRACTICE OF ENTE, P161
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharma B., 2010, P 26 IEEE INT C SOFT, P1, DOI DOI 10.1109/ICSM.2010.5609582
   Shen J., 2006, 2006 International Conference on Intelligent User Interfaces, P86, DOI 10.1145/1111449.1111473
   Sweller J, 2011, EXPLOR LEARN SCI, P3, DOI 10.1007/978-1-4419-8126-4
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   Wan Someren M., 1994, THINK ALOUD METHOD P, V2
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Weidlich M, 2011, FUND INFORM, V113, P399, DOI 10.3233/FI-2011-614
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Yan ZQ, 2012, INFORM SOFTWARE TECH, V54, P380, DOI 10.1016/j.infsof.2011.11.005
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zugal S., 2012, P 2 ED INT WORKSH EX, P6
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 72
TC 31
Z9 31
U1 4
U2 33
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 63
EP 78
DI 10.1016/j.infsof.2016.07.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DW0AE
UT WOS:000383302500005
DA 2024-07-18
ER

PT J
AU Xuan, JF
   Cornu, B
   Martinez, M
   Baudry, B
   Seinturier, L
   Monperrus, M
AF Xuan, Jifeng
   Cornu, Benoit
   Martinez, Matias
   Baudry, Benoit
   Seinturier, Lionel
   Monperrus, Martin
TI B-Refactoring: Automatic test code refactoring to improve dynamic
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SUPPORT
AB Context: Developers design test suites to verify that software meets its expected behaviors. Many dynamic analysis techniques are performed on the exploitation of execution traces from test cases. In practice, one test case may imply various behaviors. However, the execution of a test case only yields one trace, which can hide the others.
   Objective: In this article, we propose a new technique of test code refactoring, called B-Refactoring. The idea behind B-Refactoring is to split a test case into small test fragments, which cover a simpler part of the control flow to provide better support for dynamic analysis.
   Method: For a given dynamic analysis technique, B-Refactoring monitors the execution of test cases and constructs small test cases without loss of the testability. We apply B-Refactoring to assist two existing analysis tasks: automatic repair of if-condition bugs and automatic analysis of exception contracts.
   Results: Experimental results show that B-Refactoring can effectively improve the execution traces of the test suite. Real-world bugs that could not be previously fixed with the original test suites are fixed after applying B-Refactoring; meanwhile, exception contracts are better verified via applying B-Refactoring to original test suites.
   Conclusions: We conclude that applying B-Refactoring improves the execution traces of test cases for dynamic analysis. This improvement can enhance existing dynamic analysis tasks. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Xuan, Jifeng] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [Cornu, Benoit; Martinez, Matias; Seinturier, Lionel; Monperrus, Martin] Univ Lille, Villeneuve Dascq, France.
   [Cornu, Benoit; Martinez, Matias; Baudry, Benoit; Seinturier, Lionel; Monperrus, Martin] INRIA, Le Chesnay, France.
C3 Wuhan University; Universite de Lille; Inria
RP Xuan, JF (corresponding author), Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
EM jxuan@whu.edu.cn
RI Seinturier, Lionel/ABG-2829-2020; Monperrus, Martin/I-3640-2012;
   Martinez, Matias/ABA-8871-2021; Xuan, Jifeng/F-2177-2016
OI Seinturier, Lionel/0000-0003-0006-6088; Monperrus,
   Martin/0000-0003-3505-3383; Martinez, Matias/0000-0002-2945-866X; Xuan,
   Jifeng/0000-0002-2968-3496
FU National Natural Science Foundation of China [61502345]
FX This work is partly supported by the National Natural Science Foundation
   of China (under grant 61502345).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Alves ELG, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P93, DOI 10.1109/IWAST.2013.6595798
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 1992, 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, DOI DOI 10.1145/143165.143169
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Baudry B, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P253
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bond MD, 2007, ACM SIGPLAN NOTICES, V42, P405, DOI 10.1145/1297105.1297057
   Chu PH, 2012, SOFTWARE QUAL J, V20, P43, DOI 10.1007/s11219-011-9143-x
   Cornu B, 2015, INFORM SOFTWARE TECH, V57, P66, DOI 10.1016/j.infsof.2014.08.004
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Gligoric M, 2013, LECT NOTES COMPUT SC, V7920, P629, DOI 10.1007/978-3-642-39038-8_26
   Guerra EM., 2007, P INT C SOFTW ENG AD, P44, DOI [DOI 10.1109/ICSEA.2007.57, 10.1109/ICSEA.2007.57]
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kim D, 2013, P 2013 INT C SOFTW E
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Martinez M., 2015, ARXIV150507002
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S., 2015, P 37 INT C SOFTW ENG
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mercadal J, 2010, ACM SIGPLAN NOTICES, V45, P47, DOI 10.1145/1932682.1869465
   Mirzaaghaei M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P231, DOI 10.1109/ICST.2012.103
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Overbey J.L., 2014, AUTOMAT SOFTW ENG, P1
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pipka J.U., 2002, P 3 INT C EXTREME PR
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P277
   Schafer M., 2009, P 23 EUROPEAN C ECOO, P369, DOI [10.1007/978-3-642-03013-0_17, DOI 10.1007/978-3-642-03013-0_17]
   Sinha S, 2004, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE.2004.1317456
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Van Deursen A., 2002, PROC 3 INT C EXTREME, P71
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
   Zhong H., 2015, P 37 INT C SOFTW ENG
NR 57
TC 18
Z9 20
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 65
EP 80
DI 10.1016/j.infsof.2016.04.016
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Torrecilla-Salinas, CJ
   Sedeño, J
   Escalona, MJ
   Mejías, M
AF Torrecilla-Salinas, C. J.
   Sedeno, J.
   Escalona, M. J.
   Mejias, M.
TI Agile, Web Engineering and Capability Maturity Model Integration: A
   systematic literature review.
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; Scrum; Web Engineering; CMMI; Software Engineering
ID SOFTWARE-DEVELOPMENT
AB Context: Agile approaches are an alternative for organizations developing software, particularly for those who develop Web applications. Besides, CMMI (Capability Maturity Model Integration) models are well-established approaches focused on assessing the maturity of an organization that develops software. Web Engineering is the field of Software Engineering responsible for analyzing and studying the specific characteristics of the Web. The suitability of an Agile approach to help organizations reach a certain CMMI maturity level in Web environments will be very interesting, as they will be able to keep the ability to quickly react and adapt to changes as long as their development processes get mature.
   Objective: This paper responds to whether it is feasible or not, for an organization developing Web systems, to achieve a certain maturity level of the CMMI-DEV model using Agile methods.
   Method: The proposal is analyzed by means of a systematic literature review of the relevant approaches in the field, defining a characterization schema in order to compare them to introduce the current state-of-the-art.
   Results: The results achieved after the systematic literature review are presented, analyzed and compared against the defined schema, extracting relevant conclusions for the different dimensions of the problem: compatibility, compliance, experience, maturity and Web.
   Conclusion: It is concluded that although the definition of an Agile approach to meet the different CMMI maturity levels goals could be possible for an organization developing Web systems, there is still a lack of detailed studies and analysis on the field. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Torrecilla-Salinas, C. J.; Sedeno, J.; Escalona, M. J.; Mejias, M.] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Sedeno, J.] Agencia Andaluza Inst Culturales, Junta De Andalucia, Spain.
C3 University of Sevilla
RP Torrecilla-Salinas, CJ (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM carlos.torrecilla@iwt2.org; jorge.sedeno@iwt2.org; mjescalona@us.es;
   risoto@us.es
RI Escalona, María José/G-3900-2010; Mejias-Risoto, Manuel/N-8708-2014;
   Salinas, Carlos Torrecilla/G-3981-2015; Sedeno, Jorge/J-4277-2013
OI Escalona, María José/0000-0002-6435-1497; Mejias-Risoto,
   Manuel/0000-0002-0353-6391; Salinas, Carlos
   Torrecilla/0000-0001-7867-2075; Sedeno, Jorge/0000-0002-5368-5547
FU MeGUS project of the Ministerio de Ciencia e Innovacion, Spain
   [TIN2013-46928-C3-3-R]
FX This research has been supported by the MeGUS project
   (TIN2013-46928-C3-3-R) of the Ministerio de Ciencia e Innovacion, Spain.
   We would also like to thank Dr. Jorg Thomaschewski for his useful and
   helpful comments.
CR Aggarwal SK, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P226, DOI 10.1109/ICACCI.2014.6968220
   Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   [Anonymous], 2005, WEB ENG PRINCIPLES T
   [Anonymous], 2004, XP Ser
   [Anonymous], 2011, SCRUM GUIDE DEFINITI
   [Anonymous], WORKSH HYP DEV PROC
   [Anonymous], P 1 INT S EMP SOFTW
   [Anonymous], 2010, TECHNICAL REPORT
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   Beck K., 2011, MANIFESTO AGILE SOFT
   Boehm B., 2003, BALANCING AGILITY DI
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Chagas L., 2014, SOFTWARE PROCESS IMP, V477, P177
   Chrissis M.B., 2003, INTRO TO CMMI
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   DeMarco T, 2002, COMPUTER, V35, P90, DOI 10.1109/MC.2002.1009175
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Escalona M.J., 2004, J WEB ENG, V2, P193
   Escalona M.J., METHODOLOGIES DEV WE
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Escalona MJ, 2004, Proceedings of the Thirteenth International Conference on Information Systems Development: Advances in Theory, Practice and Education, P149
   Glazer Hillel., 2008, Cmmi or agile: Why not embrace both!
   Heeager LT., 2013, INF SYST DEV, P35
   Herbleb J., 1994, BENEFITS CMM BASED S
   Hinojo F.J. L. -L., 2014, SIGSOFT Software Engineering Notes, V39, P1, DOI DOI 10.1145/2579281.2579299
   Joshi JBD, 2001, COMMUN ACM, V44, P38, DOI 10.1145/359205.359224
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koch N., 2008, Web Engineering: Modelling and Implementing Web Applications, P157, DOI 10.1007/978-1-84628-923-1_7
   Lukasiewicz K, 2012, IET SOFTW, V6, P416, DOI 10.1049/iet-sen.2011.0193
   Murugesan S., 2001, Web engineerng. Managing diversity and complexity of web application development, P3, DOI 10.1007/3-540-45144-7_2
   Osorio Z.B. Martinez, 2011, 6 IB C INF SYST TECH, P1
   Paulk MC, 2001, IEEE SOFTWARE, V18, P19, DOI 10.1109/52.965798
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Pressman RS, 2000, IEEE SOFTWARE, V17, P18, DOI 10.1109/52.819962
   Ran H., 2008, P 4 INT C WIR COMM N
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Schweigert T., 2013, CCIS, P214, DOI DOI 10.1007/978-3-642-39179-8
   Schweigert T, 2014, J SOFTW-EVOL PROC, V26, P513, DOI 10.1002/smr.1617
   Shrum S., 1999, CONTINUOUS STAGED CH
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Smite D, 2009, LECT NOTES BUS INF P, V32, P87
   Torrecilla Salinas C.J., 2014, INFORM SYSTEMS DEV
   Torrecilla Salinas C.J., 2012, P INT C INF INT WEB, P12
   Tuan N.N., 2013, P 4 S INFORM COMMUNI, DOI [10.1145/2542050.2542072, DOI 10.1145/2542050.2542072]
   [No title captured]
NR 49
TC 23
Z9 27
U1 3
U2 86
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 92
EP 107
DI 10.1016/j.infsof.2015.11.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB0RW
UT WOS:000368216200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alves, NSR
   Mendes, TS
   de Mendonça, MG
   Spínola, RO
   Shull, F
   Seaman, C
AF Alves, Nicolli S. R.
   Mendes, Thiago S.
   de Mendonca, Manoel G.
   Spinola, Rodrigo O.
   Shull, Forrest
   Seaman, Carolyn
TI Identification and management of technical debt: A systematic mapping
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Software maintenance; Software engineering; Systematic
   mapping
AB Context: The technical debt metaphor describes the effect of immature artifacts on software maintenance that bring a short-term benefit to the project in terms of increased productivity and lower cost, but that may have to be paid off with interest later. Much research has been performed to propose mechanisms to identify debt and decide the most appropriate moment to pay it off. It is important to investigate the current state of the art in order to provide both researchers and practitioners with information that enables further research activities as well as technical debt management in practice.
   Objective: This paper has the following goals: to characterize the types of technical debt, identify indicators that can be used to find technical debt, identify management strategies, understand the maturity level of each proposal, and identify what visualization techniques have been proposed to support technical debt identification and management activities.
   Method: A systematic mapping study was performed based on a set of three research questions. In total, 100 studies, dated from 2010 to 2014, were evaluated.
   Results: We proposed an initial taxonomy of technical debt types, created a list of indicators that have been proposed to identify technical debt, identified the existing management strategies, and analyzed the current state of art on technical debt, identifying topics where new research efforts can be invested.
   Conclusion: The results of this mapping study can help to identify points that still require further investigation in technical debt research. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Mendes, Thiago S.; de Mendonca, Manoel G.; Spinola, Rodrigo O.] Fed Univ Bahia UFBA, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [Alves, Nicolli S. R.; Spinola, Rodrigo O.] Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [Seaman, Carolyn] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21228 USA.
   [Mendes, Thiago S.] Fed Inst Bahia IFBA, Dept Informat Technol, Santo Amaro, BA, Brazil.
   [Shull, Forrest] Carnegie Mellon Univ, Inst Software Engn, Arlington, VA USA.
C3 Universidade Federal da Bahia; Universidad de El Salvador; Universidade
   Salvador (UNIFACS); University System of Maryland; University of
   Maryland Baltimore County; Instituto Federal da Bahia (IFBA); Carnegie
   Mellon University
RP Spínola, RO (corresponding author), Alvador Univ, Grad Program Syst & Comp, Salvador, BA, Brazil.
EM nicollirioss@gmail.com; thiagomendes@dcc.ufba.br;
   manoel.mendonca@ufba.br; rodrigo.spinola@fbc.ufba.br;
   fjshull@sei.cmu.edu; cseaman@umbc.edu
RI Shull, Forrest/GZK-6750-2022; Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665; MENDES, THIAGO/0000-0003-1919-5349
FU CAPES; CNPq [458261/2014-9]; Department of Defense [FA8721-05-C-0003];
   Carnegie Mellon University
FX The authors would like to thank CAPES for the financial support to this
   work. This work was also partially supported by CNPq Universal 2014
   grant 458261/2014-9. Dr. Shull's contribution to this material is based
   upon work funded and supported by the Department of Defense under
   contract no. FA8721-05-C-0003 with Carnegie Mellon University for the
   operation of the Software Engineering Institute, a federally funded
   research and development center. This material has been approved for
   public release and unlimited distribution DM-0002227.
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   Basili V.R., 1999, IEEE T SOFTW ENG, V25
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Cai Y., 2013, P IEEE 26 C SOFTW EN, P19
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Kitchenham B., 2004, P 26 ICSE SCOTL UK
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Matalonga S., 2013, AN CIBSE13 C IB AM E, P33
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Pfleeger ShariLawrence., 2005, Software engineering: theory and practice ", V3rd
   Seaman C., 2013, 17 BRAZ S SOFTW QUAL
   Tomas P, 2013, COMPUT STAND INTER, V36, P244, DOI 10.1016/j.csi.2013.08.006
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 20
TC 168
Z9 178
U1 4
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 100
EP 121
DI 10.1016/j.infsof.2015.10.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600008
OA Bronze
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Ampatzoglou, A
   Chatzigeorgiou, A
   Avgeriou, P
AF Ampatzoglou, Areti
   Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Avgeriou, Paris
TI The financial aspect of managing technical debt: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Financial debt; Financial terms; Systematic literature
   review
AB Context: Technical debt is a software engineering metaphor, referring to the eventual financial consequences of trade-offs between shrinking product time to market and poorly specifying, or implementing a software product, throughout all development phases. Based on its inter-disciplinary nature, i.e. software engineering and economics, research on managing technical debt should be balanced between software engineering and economic theories.
   Objective: The aim of this study is to analyze research efforts on technical debt, by focusing on their financial aspect. Specifically, the analysis is carried out with respect to: (a) how financial aspects are defined in the context of technical debt and (b) how they relate to the underlying software engineering concepts.
   Method: In order to achieve the abovementioned goals, we employed a standard method for SLRs and applied it on studies retrieved from seven general-scope digital libraries. In total we selected 69 studies relevant to the financial aspect of technical debt.
   Results: The most common financial terms that are used in technical debt research are principal and interest, whereas the financial approaches that have been more frequently applied for managing technical debt are real options, portfolio management, cost/benefit analysis and value-based analysis. However, the application of such approaches lacks consistency, i.e., the same approach is differently applied in different studies, and in some cases lacks a clear mapping between financial and software engineering concepts.
   Conclusion: The results are expected to prove beneficial for the communication between technical managers and project managers, in the sense that they will provide a common vocabulary, and will help in setting up quality-related goals, during software development. To achieve this we introduce: (a) a glossary of terms and (b) a classification scheme for financial approaches used for managing technical debt. Based on these, we have been able to underline interesting implications for researchers and practitioners. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ampatzoglou, Areti; Ampatzoglou, Apostolos; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9700 AB Groningen, Netherlands.
   [Ampatzoglou, Areti; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Groningen; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Groningen, Dept Math & Comp Sci, NL-9700 AB Groningen, Netherlands.
EM areti.ampatzoglou@rug.nl; a.ampatzoglou@rug.nl; achat@uom.gr;
   paris@cs.rug.nl
RI Ampatzoglou, Apostolos/AAC-3632-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754
CR Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], [No title captured]
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   [Anonymous], 147642006 ISOIECIEEE
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Benaroch M, 2002, J MANAGE INFORM SYST, V19, P43
   Boehm B.W., 2000, International Conference on Software Engineering. Proceedings of the Conference on The Future of Software Engineering, P319
   Borison A, 2005, J APPL CORP FINANC, V17, P17, DOI 10.1111/j.1745-6622.2005.00029.x
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Darrell D, 2003, PRINC SER FINANC, P1
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Farris P.W., 2010, Marketing Metrics: The Definitive Guide to Measuring Marketing Performance
   Grubb P., 2003, Software Maintenance: Concepts and Practice, V2.
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kellison Stephen., 2008, Theory of Interest, V3rd
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Mavridis A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P272, DOI 10.1109/QUATIC.2012.53
   Mishkin F.S.S.G. Eakins., 2012, FINANCIAL MARKETS I, V7th
   Nickerson R., 2009, 17th European Conference in Information Systems (ECIS '09), Italy, P1138
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Reilly F. K., 2012, Investment analysis portfolio management
   Sommerville I., 2010, SOFTWARE ENG
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang H, 2010, 2011 INTERNATIONAL CONFERENCE ON COMPUTERS, COMMUNICATIONS, CONTROL AND AUTOMATION (CCCA 2011), VOL I, P1
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 39
TC 117
Z9 124
U1 3
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 52
EP 73
DI 10.1016/j.infsof.2015.04.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100004
OA Green Published
DA 2024-07-18
ER

PT J
AU de Magalhaes, CVC
   da Silva, FQB
   Santos, RES
   Suassuna, M
AF de Magalhaes, Cleyton V. C.
   da Silva, Fabio Q. B.
   Santos, Ronnie E. S.
   Suassuna, Marcos
TI Investigations about replication of empirical studies in software
   engineering: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Replications; Experiments; Empirical studies; Mapping study; Systematic
   literature review; Software engineering
AB Context: Two recent mapping studies which were intended to verify the current state of replication of empirical studies in Software Engineering (SE) identified two sets of studies: empirical studies actually reporting replications (published between 1994 and 2012) and a second group of studies that are concerned with definitions, classifications, processes, guidelines, and other research topics or themes about replication work in empirical software engineering research (published between 1996 and 2012).
   Objective: In this current article, our goal is to analyze and discuss the contents of the second set of studies about replications to increase our understanding of the current state of the work on replication in empirical software engineering research.
   Method: We applied the systematic literature review method to build a systematic mapping study, in which the primary studies were collected by two previous mapping studies covering the period 1996-2012 complemented by manual and automatic search procedures that collected articles published in 2013.
   Results: We analyzed 37 papers reporting studies about replication published in the last 17 years. These papers explore different topics related to concepts and classifications, presented guidelines, and discuss theoretical issues that are relevant for our understanding of replication in our field. We also investigated how these 37 papers have been cited in the 135 replication papers published between 1994 and 2012.
   Conclusions: Replication in SE still lacks a set of standardized concepts and terminology, which has a negative impact on the replication work in our field. To improve this situation, it is important that the SE research community engage on an effort to create and evaluate taxonomy, frameworks, guidelines, and methodologies to fully support the development of replications. (C) 2015 Elsevier B.V. All rights reserved.
C1 [de Magalhaes, Cleyton V. C.; da Silva, Fabio Q. B.; Santos, Ronnie E. S.; Suassuna, Marcos] Univ Fed Pernambuco, Ctr Informat, BR-5074056 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP de Magalhaes, CVC (corresponding author), Univ Fed Pernambuco, Ctr Informat, BR-5074056 Recife, PE, Brazil.
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X
FU Brazilian National Research Council (CNPq) [314523/2009-0]; CAPES
   [IBPG-0651-1.03/12]; FACEPE [IBPG-0651-1.03/12]
FX Professor Fabio Q. B. da Silva holds a research grant from the Brazilian
   National Research Council (CNPq), process #314523/2009-0. Cleyton V. C.
   de Magalhaes and Ronnie E. S. Santos are both master students at the
   Center of Informatics of UFPE where they receive a scholarship from
   CAPES and FACEPE (process #IBPG-0651-1.03/12), respectively. We would
   like to thank the anonymous reviewers of this article for their comments
   and constructive criticisms that lead to important improvements in the
   content and structure of this version of the paper.
CR [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   Baldassarre M. T., 2014, P 18 INT C EV ASS SO, P18
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bezerra R., 2014, THESIS FEDERAL U PER
   CARTWRIGHT N, 1991, HIST POLIT ECON, V23, P143, DOI 10.1215/00182702-23-1-143
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   DALY J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P50, DOI 10.1109/ICSM.1994.336790
   De Magalhaes C. V., 2014, P 18 INT C EV ASS SO, P37
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gould J., 1964, DICT SOCIAL SCI
   Hendrick C., 1991, Replication research in the social sciences, P41
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Judd C.M., 1991, Research methods in social relations, V6th
   Knutson C.D., 2010, SIGSOFT Software Engineering Notes, V35, P42
   Krein J.L., 2014, SIGSOFT Software Engineering Notes, V39, P31
   Krein J.L., 2012, SIGSOFT Software Engineering Notes, V37, P27
   LASORTE MA, 1972, SOCIOL QUART, V13, P218, DOI 10.1111/j.1533-8525.1972.tb00805.x
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   Schmidt S, 2009, REV GEN PSYCHOL, V13, P90, DOI 10.1037/a0015108
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
NR 24
TC 20
Z9 20
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 76
EP 101
DI 10.1016/j.infsof.2015.02.001
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100006
DA 2024-07-18
ER

PT J
AU Morris, KA
   Allison, M
   Costa, FM
   Wei, J
   Clarke, PJ
AF Morris, Karl A.
   Allison, Mark
   Costa, Fabio M.
   Wei, Jinpeng
   Clarke, Peter J.
TI An adaptive middleware design to support the dynamic interpretation of
   domain-specific models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Models at runtime; Adaptable middleware; Domain independence; Domain
   specific classifier
ID PERFORMANCE; SYSTEMS
AB Context: As the use of Domain-Specific Modeling Languages (DSMLs) continues to gain popularity, we have developed new ways to execute DSML models. The most popular approach is to execute code resulting from a model-to-code transformation. An alternative approach is to directly execute these models using a semantic-rich execution engine - Domain-Specific Virtual Machine (DSVM). The DSVM includes a middleware layer responsible for the delivery of services in a given domain.
   Objective: We will investigate an approach that performs the dynamic combination of constructs in the middleware layer of DSVMs to support the delivery of domain-specific services. This middleware should provide: (a) a model of execution (MoE) that dynamically integrates decoupled domain-specific knowledge (DSK) for service delivery, (b) runtime adaptability based on context and available resources, and (c) the same level of operational assurance as any DSVM middleware. Method: Our approach will involve (1) defining a framework that supports the dynamic combination of MoE and DSK and (2) demonstrating the applicability of our framework in the DSVM middleware for user-centric communication. We will measure the overhead of our approach and provide a cost-benefit analysis factoring in its runtime adaptability using appropriate experimentation.
   Results: Our experiments show that combining the DSK and MoE for a DSVM middleware allow us to realize efficient specialization while maintaining the required operability. We also show that the overhead introduced by adaptation is not necessarily deleterious to overall performance in a domain as it may result in more efficient operation selection.
   Conclusion: The approach defined for the DSVM middleware allows for greater flexibility in service delivery while reducing the complexity of application development for the user. These benefits are achieved at the expense of increased execution times, however this increase may be negligible depending on the domain. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Morris, Karl A.] Temple Univ, Dept Comp & Informat Sci, Philadelphia, PA 19122 USA.
   [Allison, Mark] Univ Michigan Flint, Sch Comp Sci Engn & Phys, Flint, MI 48502 USA.
   [Costa, Fabio M.] Univ Fed Goias, Inst Informat, BR-74690815 Goiania, Go, Brazil.
   [Wei, Jinpeng; Clarke, Peter J.] Florida Int Univ, Sch Comp & Informat Sci, Miami, FL 33199 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); Temple
   University; University of Michigan System; University of Michigan Flint;
   Universidade Federal de Goias; State University System of Florida;
   Florida International University
RP Morris, KA (corresponding author), Temple Univ, Dept Comp & Informat Sci, Philadelphia, PA 19122 USA.
EM karl.morris@temple.edu; markalli@umflint.edu; fmc@inf.ufg.br;
   weijp@cis.fiu.edu; clarkep@cis.fiu.edu
RI Clarke, Peter/AAF-8511-2021; Costa, Fabio/O-3199-2015
OI Morris, Karl/0000-0001-8049-2268; Allison, Mark/0000-0003-2060-4816;
   Clarke, Peter/0000-0003-0892-1907; Costa, Fabio/0000-0003-1038-8873
FU GAANN Fellowship from the US Department of Education [P200A090061];
   CAPES, Brazil [BEX 0759/11-2]
FX This work was supported in part by a GAANN Fellowship from the US
   Department of Education under P200A090061. Fabio M. Costa would like to
   thank CAPES, Brazil, Proc. No. BEX 0759/11-2, for the support received
   during his sabbatical at FIU.
CR Allison M., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P185, DOI 10.1109/HASE.2012.37
   Allison Maggie, 2011, P 23 INT C SOFTW ENG, P59
   Allison M, 2014, J SYST SOFTWARE, V96, P172, DOI 10.1016/j.jss.2014.06.006
   [Anonymous], 2013, COMPUTER ORG DESIGN
   [Anonymous], IEEE DISTRIB SYST ON
   [Anonymous], MSUCSE0335
   Bandyopadhyay S, 2011, COMM COM INF SC, V162, P288
   Bellur U., 2006, Communication System Software and Middleware, P1
   Bernstein PA, 1996, COMMUN ACM, V39, P86, DOI 10.1145/230798.230809
   Boettner P., 2009, P 47 ANN SE REG C
   Chen K, 2005, LECT NOTES COMPUT SC, V3748, P115
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Clarke PJ, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P242, DOI 10.4018/978-1-4666-2092-6.ch009
   Coulson G, 2004, IEEE IPCCC, P763
   Coulson G., 2004, P IASTED SOFTW ENG A, P205
   Deng Y, 2008, J SYST SOFTWARE, V81, P1640, DOI 10.1016/j.jss.2008.02.020
   Doslic T, 2005, J INTEGER SEQ, V8
   Eclipse Team, 2013, ECL HEL
   Eliassen F., 1999, Proceedings 7th IEEE Workshop on Future Trends of Distributed Computing Systems, P60, DOI 10.1109/FTDCS.1999.818785
   Fowler M., 2010, Domain-specific languages
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gabor MU, 2006, REAL-TIME SYST, V33, P77, DOI 10.1007/s11241-006-6883-y
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Ghosh A, 2010, IEEE MILIT COMMUN C, P178, DOI 10.1109/MILCOM.2010.5679518
   Grace P, 2003, LECT NOTES COMPUT SC, V2888, P1170
   Hieu VH, 2006, 2006 FIRST INTERNATIONAL CONFERENCE ON COMMUNICATIONS AND ELECTRONICS, P141, DOI 10.1109/CCE.2006.350837
   Kang Kyo C, 1990, Technical Report
   Kelly S., 2008, Domain-Specific Modeling
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   McKinley PK, 2006, DASC 2006: 2ND IEEE INTERNATIONAL SYMPOSIUM ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P341
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Morris K., 2014, THESIS FLORIDA INT U
   Morris K. A., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P82, DOI 10.1109/HASE.2012.25
   Niaz I.A., 2005, International Journal of Computer Information Science, V6, P315
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Preshing J., 2012, BLOG PRESHING PR FEB
   Ramanathan S., 2011, New Technologies of Distributed Systems (NOTERE), 2011 11th Annual International Conference on, P1
   Raychoudhury V, 2013, PERVASIVE MOB COMPUT, V9, P177, DOI 10.1016/j.pmcj.2012.08.006
   Schmidt DC, 2003, PROC INT CONF SOFTW, P694, DOI 10.1109/ICSE.2003.1201256
   Smith JE, 2005, COMPUTER, V38, P32, DOI 10.1109/MC.2005.173
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Suthon SW, 2002, 10TH IEEE INTERNATIONAL CONFERENCE ON NETWORKS (ICON 2002), PROCEEDINGS, P106, DOI 10.1109/ICON.2002.1033296
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Tigli JY, 2009, ANN TELECOMMUN, V64, P197, DOI 10.1007/s12243-008-0081-y
   Tsutsui A, 2004, CCNC 2004: 1ST IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE, PROCEEDINGS, P406, DOI 10.1109/CCNC.2004.1286896
   VERISSIMO P, 2002, P EUR WIR 2002 FLOR, P595
   Vinoski S, 2004, LECT NOTES COMPUT SC, V3063, P35
   Wang XR, 2008, IEEE T PARALL DISTR, V19, P779, DOI 10.1109/TPDS.2008.41
   Wu Y., 2008, SOFTW ENG APPL
   Wu YL, 2012, SOFTWARE PRACT EXPER, V42, P357, DOI 10.1002/spe.1081
   Zachariadis S, 2006, IEEE T SOFTWARE ENG, V32, P910, DOI 10.1109/TSE.2006.115
   Zhang C, 2005, FIUSCIS20051101
NR 54
TC 7
Z9 7
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 21
EP 41
DI 10.1016/j.infsof.2015.02.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000002
DA 2024-07-18
ER

PT J
AU Zafar, S
   Farooq-Khan, N
   Ahmed, M
AF Zafar, Saad
   Farooq-Khan, Naurin
   Ahmed, Musharif
TI Requirements simulation for early validation using Behavior Trees and
   Datalog
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal methods; Behavior Trees; Datalog; Formal analysis; Simulation;
   Requirements engineering
ID FAILURE MODE
AB Context: The role of formal specification in requirements validation and analysis is generally considered to be limited because considerable expertise is required in developing and understanding the mathematical proofs. However, formal semantics of a language can provide a basis for step-by-step execution of requirements specification by building an easy to use simulator to assist in requirements elicitation, validation and analysis.
   Objective: The objective of this paper is to illustrate the usefulness of a simulator that executes requirements and captures system states as rules and facts in a database. The database can then be queried to carry out analysis after all the requirements have been executed a given number of times
   Method: Behavior Trees (BTs)(1) are automatically translated into Datalog facts and rules through a simulator called SimTree. The translation process involves model-to-model (M2M) transformation and model-to-text (M2T) transformation which automatically generates the code for a simulator called SimTree. SimTree on execution produces Datalog code. The effectiveness of the simulator is evaluated using the specifications of a published case study - Ambulatory Infusion Pump (AIP)(2).
   Results: The BT specification of the AIP was transformed into SimTree code for execution. The simulator produced a complete state-space for a predetermined number of runs in the form of Datalog facts and rules, which were then analyzed for various properties of interest like safety and liveness.
   Conclusion: Queries of the resultant Datalog code were found to be helpful in identifying defects in the specification. However, probability values had to be manually assigned to all the events to ensure reachability to all leaf nodes of the tree and timely completion of all the runs. We identify optimization of execution paths to reduce execution time as our future work. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Zafar, Saad; Farooq-Khan, Naurin; Ahmed, Musharif] Riphah Int Univ, Fac Comp, Islamabad, Pakistan.
RP Farooq-Khan, N (corresponding author), Riphah Int Univ, Fac Comp, I-14, Islamabad, Pakistan.
EM saad.zafar@riphah.edu.pk; naurin.zamir@riphah.edu.pk;
   musharif.ahmed@riphah.edu.pk
OI , Saad Zafar/0000-0002-0527-5914
CR Allilaire F., 2006, P ECL TECHN EXCHANGE, V66
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 2003, TECHNOMETRICS
   Auguston M., 2010, SYSTEM ARCHITECTURE
   Barnat Jiri, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P245, DOI 10.1109/TASE.2012.42
   Bensalem Saddek, 2000, P 5 NASA LANGL FORM
   Besson F., 2003, STATIC ANAL, P1075
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Christie A., 1999, CROSSTALK J DEF SOFT, V12, P25
   Clarke EM, 1999, MODEL CHECKING, P1
   Colvin R, 2008, J SYST SOFTWARE, V81, P2163, DOI 10.1016/j.jss.2008.04.035
   Colvin RJ, 2011, SCI COMPUT PROGRAM, V76, P891, DOI 10.1016/j.scico.2010.11.007
   Cousot P, 2001, LECT NOTES COMPUTER, V2211, P97
   Douence R., 2006, SOFTWARE ENG PROPERT
   DROMEY RG, 2004, 3 INT WORKSH SCEN ST
   Geo Dromey R., 2003, STRAW 03 PROC 2 INT, P77
   Grunske L, 2005, LECT NOTES COMPUT SC, V3771, P129
   Grunske L, 2008, J VISUAL LANG COMPUT, V19, P343, DOI 10.1016/j.jvlc.2007.11.003
   Grunske L, 2007, INT CONF QUANT EVAL, P119, DOI 10.1109/QEST.2007.18
   Hajiyev E., 2005, OOPSLA 05, P102
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   Harel D, 2007, LECT NOTES COMPUT SC, V4424, P485
   Hasan O, 2010, IEEE T COMPUT, V59, P579, DOI 10.1109/TC.2009.165
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hinz Y.K., 2002, 690 INSS U MAR
   Hoffmann V, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P63
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kim SK, 2012, J SYST SOFTWARE, V85, P2652, DOI 10.1016/j.jss.2012.06.013
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Milicevic A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/1985793.1985863
   Myers T., 2011, P 3 IMPR SYST SOFTW
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   POWELL D, 2007, AUSTR SOFTW ENG C AS
   Rushby J.M., 1995, POSITION PAP PANEL M
   Saenz-Perez F, 2012, ELECTRON NOTES THEOR, V282, P73, DOI 10.1016/j.entcs.2011.12.007
   Shimizu K, 2002, DES AUT CON, P801, DOI 10.1109/DAC.2002.1012732
   Smith C, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P398, DOI 10.1109/ASE.2004.1342775
   Wen L, 2007, LECT NOTES COMPUT SC, V4674, P122
   Winter K, 2004, LECT NOTES COMPUT SC, V2999, P148
   Yatapanage N, 2010, IFIP ADV INF COMM TE, V323, P125
   Zafar S., 2005, SYST ENG TEST EV C S
   Zafar S., 2008, INTEGRATION ACCESS C
   Zafar S, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P430, DOI 10.1109/ASPEC.2007.20
   Zafar S, 2009, ASIA PAC SOFWR ENG, P257, DOI 10.1109/APSEC.2009.41
NR 44
TC 7
Z9 8
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 52
EP 70
DI 10.1016/j.infsof.2015.01.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400004
DA 2024-07-18
ER

PT J
AU Delahaye, M
   Botella, B
   Gotlieb, A
AF Delahaye, Mickael
   Botella, Bernard
   Gotlieb, Arnaud
TI Infeasible path generalization in dynamic symbolic execution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic symbolic execution; Explanation; Test input generation
ID GENERATION
AB Context: Automatic code-based test input generation aims at generating a test suite ensuring good code coverage. Dynamic Symbolic Execution (DSE) recently emerged as a strong code-based testing technique to increase coverage by solving path conditions with a combination of symbolic constraint solving and concrete executions.
   Objective: When selecting paths in DSE for generating test inputs, some paths are actually detected as being infeasible, meaning that no input can be found to exercize them. But, showing path infeasibility instead of generating test inputs is costly and most effort could be saved in DSE by reusing path infeasibility information.
   Method: In this paper, we propose a method that takes opportunity of the detection of a single infeasible path to generalize to a possibly infinite family of infeasible paths. The method first extracts an explanation of path condition, that is, the reason of the path infeasibility. Then, it determines conditions, using data dependency information, that paths must respect to exhibit the same infeasibility. Finally, it constructs an automaton matching the generalized infeasible paths.
   Results: We implemented our method in a prototype tool called IPEG (Infeasible Path Explanation and Generalization), for DSE of C programs. First experimental results obtained with IPEG show that our approach can save considerable effort in DSE, when generating test inputs for increasing code coverage.
   Conclusion: Infeasible path generalization allows test generation to know of numerous infeasible paths ahead of time, and consequently to save the time needed to show their infeasibility. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Delahaye, Mickael; Botella, Bernard] CEA LIST, Software Safety Lab, F-91191 Gif Sur Yvette, France.
   [Gotlieb, Arnaud] Certus Software V&V Ctr, SIMULA Res Lab, Lysaker, Norway.
C3 CEA
RP Gotlieb, A (corresponding author), Certus Software V&V Ctr, SIMULA Res Lab, Lysaker, Norway.
EM mickael.delahaye@cea.fr; bernard.botella@cea.fr; arnaud@simula.fr
CR [Anonymous], NDSS 08
   [Anonymous], 2006, YICES SMT SOLVER
   Bardin Sebastien, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P22, DOI 10.1109/ICST.2008.8
   Binkley D, 2006, THEOR COMPUT SCI, V360, P23, DOI 10.1016/j.tcs.2006.01.012
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Canet G, 2009, IEEE INT WORK C SO, P123, DOI 10.1109/SCAM.2009.22
   Cimatti A, 2007, LECT NOTES COMPUT SC, V4501, P334
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delahaye Mickael, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P215, DOI 10.1109/ICST.2010.13
   Dershowitz N, 2006, LECT NOTES COMPUT SC, V4121, P36
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Jaffar J., 2013, P 2013 9 JOINT M FDN, P48
   Jhala R, 2005, ACM SIGPLAN NOTICES, V40, P38, DOI 10.1145/1064978.1065016
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Jussien N., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P249
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   Marre B., 2000, ASE 00
   Ngo M.N., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P215
   Ngo MN, 2008, INFORM SOFTWARE TECH, V50, P641, DOI 10.1016/j.infsof.2007.06.006
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Papadakis M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P435, DOI 10.1109/ICSEA.2010.74
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Visser W., 2012, ACM SIGSOFT 20 INT S
   WEYUKER EJ, 1979, INT J COMPUT INF SCI, V8, P387, DOI 10.1007/BF00995175
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Yates D., 1989, P ACM SIGSOFT 89 3 S, P48
   ZHANG L, 2003, SAT 03
NR 34
TC 12
Z9 15
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 403
EP 418
DI 10.1016/j.infsof.2014.07.012
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800024
DA 2024-07-18
ER

PT J
AU Dimitrijevic, S
   Jovanovic, J
   Devedzic, V
AF Dimitrijevic, Sonja
   Jovanovic, Jelena
   Devedzic, Vladan
TI A comparative study of software tools for user story management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Agile practices; User story management;
   Software support
ID REQUIREMENTS ENGINEERING PRACTICES
AB Context: User stories have become widely accepted in agile software development. Consequently, a great number of software tools that provide, inter alia, support for practices based on user stories have emerged in recent years. These tools may have different features and focus in terms of support for agile requirements engineering (RE) concepts and practices.
   Objective: The present study aims to provide a deep insight into the current capabilities and future trends of software support for agile RE practices based on user stories.
   Method: A comparative qualitative study of a set of agile software tools has been conducted according to the following criteria: coverage of the key functional requirements, support for basic agile RE concepts and practices, and user satisfaction with the tool. The criteria for tool selection were: diversity of software tools, high rating on the user-stories community Web site (http://www.userstories.com), and availability for review.
   Results: The results show a generally good coverage of key functional requirements related to management of user stories and epics, high-level release planning and low-level iteration planning. On the other hand, user-role modeling and persona support have not been addressed at all, and it has been found that requirements for acceptance testing support were completely covered by only one tool. More importantly, the study has revealed significant differences in the way different tools support agile RE concepts and practices (if at all). Finally, qualitative analysis of user reviews has demonstrated that practitioners prefer tools that are easy to set up, easy to learn, easy to use, and easy to customize, over more sophisticated but simultaneously more demanding tools.
   Conclusion: Although the progress that has been made since the inception of these tools is quite clear, there is still room for improvements in terms of support for various agile RE practices within a specific agile process. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Dimitrijevic, Sonja] Mihailo Pupin Inst, Belgrade 11060, Serbia.
   [Jovanovic, Jelena; Devedzic, Vladan] Univ Belgrade, Sch Business Adm, FON, Belgrade, Serbia.
C3 University of Belgrade; University of Belgrade
RP Dimitrijevic, S (corresponding author), Mihailo Pupin Inst, Volgina 15, Belgrade 11060, Serbia.
EM sonja.dimitrijevic@pupin.rs; jeljov@fon.rs; devedzic@fon.rs
RI Dimitrijevic, Sonja/ABF-5948-2021; Devedzic, Vladan/AAM-3208-2020;
   Jovanovic, Jelena/AAL-1835-2021
OI Devedzic, Vladan/0000-0002-5790-0240; Dimitrijevic,
   Sonja/0000-0002-9981-077X
CR Angioni M, 2006, J SYST ARCHITECT, V52, P619, DOI 10.1016/j.sysarc.2006.06.006
   [Anonymous], 2000, Planning Extreme Programming
   Ansari A.A., 2012, INT J COMPUT SCI, V9, P272
   Azizyan G., 2011, Proceedings of the 2011 Agile Conference, P29, DOI 10.1109/AGILE.2011.30
   Azizyan G., 2012, 7 INT C SOFTW ENG AD, P605
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Behrens P., 2006, AGILE PROJECT MANAGE, V10
   Boehm B., 2001, IEEE COMPUT, V33, P99
   Boehm BW., 1981, Software Engineering Economics
   Calefato Fabioe., 2011, Em 6th International Conference on Software Engineering Advances (ICSEA 2011), P14
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Cohn M., 2005, Agile Estimating and Planning
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Constatine L., USERS ROLES PERSONAS
   Dubakov M., 2009, AGILE TOOLS GOOD BAD
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   FIT, 2007, FIT FRAM INT TEST DO
   Grenning J., 2002, PLANNING POKER AVOID
   Jeffries R., 2000, EXTREME PROGRAMMING
   JEFFRIES R, 2001, XP MAGAZINE
   Kääriäinen J, 2004, EUROMICRO CONF PROC, P342, DOI 10.1109/EURMIC.2004.1333389
   Kaariainen J., 2003, 16 INT C SOFTW SYST
   Liu B., 2005, Proceedings of 14th International Conference of World Wide Web, P342
   Liu L, 2005, AGILE 2005, Proceedings, P80, DOI 10.1109/ADC.2005.12
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Maurer F., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P13
   Maurer F., 2013, SOFTWARE ENG, V7171, P185
   Maurer F., 2002, WORKSH GLOB SOFTW DE
   Morgan R, 2008, LECT NOTES BUS INF P, V9, P53
   Morgan R, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ICGSE.2006.261226
   Paul S.A., 2012, C COLL INT
   Pinna S, 2003, LECT NOTES COMPUT SC, V2753, P151
   Pinna S., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P104
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rees MJ, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P22, DOI 10.1109/APSEC.2002.1182972
   Sillitti A., 2005, P 11 IEEE INT SOFTWA, P17, DOI DOI 10.1109/METRICS.2005.29
   Sillitti A., ENG MANAGING SOFTW 2, P309
   Stapleton Jennifer., 2003, DSDM: Business focused development
   VersionOne Inc, 2012, 7 ANN STAT AG DEV SU
   VersionOne Inc, VERSIONONE FITN INT
   Wang X, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P183, DOI 10.1007/978-3-642-12442-6_13
NR 42
TC 30
Z9 33
U1 4
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 352
EP 368
DI 10.1016/j.infsof.2014.05.012
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500020
DA 2024-07-18
ER

PT J
AU Gonzalez-Huerta, J
   Insfran, E
   Abrahao, S
   Scanniello, G
AF Gonzalez-Huerta, Javier
   Insfran, Emilio
   Abrahao, Silvia
   Scanniello, Giuseppe
TI Validating a model-driven software architecture evaluation and
   improvement method: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architectures; Software architecture evaluation methods;
   Quality attributes; ATAM; Family of experiments; Meta-analysis
ID PERCEIVED EASE; ACCEPTANCE; REQUIREMENTS; TECHNOLOGY; KNOWLEDGE;
   QUALITY; ISSUES
AB Context: Software architectures should be evaluated during the early stages of software development in order to verify whether the non-functional requirements (NFRs) of the product can be fulfilled. This activity is even more crucial in software product line (SPL) development, since it is also necessary to identify whether the NFRs of a particular product can be achieved by exercising the variation mechanisms provided by the product line architecture or whether additional transformations are required. These issues have motivated us to propose QuaDAI, a method for the derivation, evaluation and improvement of software architectures in model-driven SPL development.
   Objective: We present in this paper the results of a family of four experiments carried out to empirically validate the evaluation and improvement strategy of QuaDAI.
   Method: The family of experiments was carried out by 92 participants: Computer Science Master's and undergraduate students from Spain and Italy. The goal was to compare the effectiveness, efficiency, perceived ease of use, perceived usefulness and intention to use with regard to participants using the evaluation and improvement strategy of QuaDAI as opposed to the Architecture Tradeoff Analysis Method (ATAM).
   Results: The main result was that the participants produced their best results when applying QuaDAI, signifying that the participants obtained architectures with better values for the NFRs faster, and that they found the method easier to use, more useful and more likely to be used. The results of the meta-analysis carried out to aggregate the results obtained in the individual experiments also confirmed these results.
   Conclusions: The results support the hypothesis that QuaDAI would achieve better results than ATAM in the experiments and that QuaDAI can be considered as a promising approach with which to perform architectural evaluations that occur after the product architecture derivation in model-driven SPL development processes when carried out by novice software evaluators. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gonzalez-Huerta, Javier; Insfran, Emilio; Abrahao, Silvia] Univ Politecn Valencia, Dept Informat Syst & Computat, E-46071 Valencia, Spain.
   [Scanniello, Giuseppe] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
C3 Universitat Politecnica de Valencia; University of Basilicata
RP Gonzalez-Huerta, J (corresponding author), Univ Politecn Valencia, Dept Informat Syst & Computat, E-46071 Valencia, Spain.
EM jagonzalez@dsic.upv.es
RI Abrahão, Silvia/AAK-6976-2020; Gonzalez-Huerta, Javier/V-4258-2019;
   Insfran, Emilio/O-6934-2015
OI Abrahão, Silvia/0000-0003-3580-2014; Gonzalez-Huerta,
   Javier/0000-0003-1350-7030; Insfran, Emilio/0000-0003-0855-5564;
   Scanniello, Giuseppe/0000-0003-0024-7508
FU MULTIPLE Project (MICINN) [TIN2009-13838]; ValI+D Program
   [ACIF/2011/235]
FX The authors would like to thank all the participants in the experiments
   for their selfless involvement in this research. This research is
   supported by the MULTIPLE Project (MICINN TIN2009-13838) and the ValI+D
   Program (ACIF/2011/235).
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Ali-Babar M., 2004, 15 AUSTR SOFTW ENG C, P13
   Ali-Babar M., 2007, EMPIR SOFTW ENG, V13, P39
   ALIBABAR M, 2008, 12 INT C EV ASS SOFT
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 3 INT WORKSH SHAR RE
   [Anonymous], 2005, 250002005 ISO IEC
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], 2011, Documenting Software Architectures: Views and Beyond
   Babanin A.V., 2007, 11 INT C EV ASS SOFT, P12
   Babar Muhamad Ali, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P430
   Babar MA, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P600, DOI 10.1109/APSEC.2004.38
   Babar MA, 2011, EMPIR SOFTW ENG, V16, P539, DOI 10.1007/s10664-011-9168-6
   BARBACCI M, 2003, CMUSEI2003TN012
   Barkmeyer E.J., 2003, 6928 NISTIR US DEP C
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Botterweck Goetz., 2007, P 22 IEEEACM INT C A, P469, DOI DOI 10.1145/1321631.1321711
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Carifio J., 2007, J SOCIAL SCI, V3, P106, DOI [DOI 10.3844/JSSP.2007.106.116, 10.3844/jssp.2007.106.116]
   Ciolkowski M, 2002, P 6 INT C EMP ASS SO, P48
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Clements P., 2007, Software Product Lines: Practices and Patterns
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Datorro J., 2005, Convex Optimization Euclidean Distance Geometry
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Douglass B.P., 2002, REAL TIME DESIGN PAT
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Etxeberria L, 2005, LECT NOTES COMPUT SC, V3714, P174
   Falessi D, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P189, DOI 10.1109/WICSA.2008.8
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Feiler P.H., 2006, The Architecture Analysis Design Language (AADL): An Introduction
   Flinn J, 2002, INT CON DISTR COMP S, P217, DOI 10.1109/ICDCS.2002.1022259
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Glass G.V., 1981, MetaAnalysis in Social Research
   Golden E, 2005, PROC INT CONF SOFTW, P460
   Gonzalez-Huerta J, 2013, 18 NAT C SOFTW ENG D, P427
   Gonzalez-Huerta J., 2013, 22 INT C INF SYST DE
   Gonzalez-Huerta J., 2012, 4 INT WORKSH NONFUNC, P63
   Gonzalez-Huerta J., 2014, THESIS U POLITECNICA
   GONZALEZHUERTA J, 2013, 16 INT C MOD DRIV EN, V8107, P388
   Graham T. C, 2008, 2008545 QUEENS U
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hu PJ, 1999, J MANAGE INFORM SYST, V16, P91, DOI 10.1080/07421222.1999.11518247
   Hunter J.E., 1982, Meta-analysis: Cumulating research findings across studies
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   Martensson F., 2006, THESIS BLEKINGE I TE
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   McGregor JD, 2010, LECT NOTES COMPUT SC, V6153, P104
   Microsoft MSDN, 2003, PERF REL PATT VERS 1
   MULLEN B, 1985, BASIC METAANALYSIS P
   Niemelä E, 2007, INFORM SOFTWARE TECH, V49, P1107, DOI 10.1016/j.infsof.2006.11.003
   Object Management Group, 2012, COMM VAR LANG CVL
   PEROVICH D, 2009, IEEE IFIP EUR C SOFT, P201
   Qureshi N, 2013, P 17 INT C EV ASS SO, P97, DOI DOI 10.1145/2460999.2461014
   Reijonen V, 2010, LECT NOTES COMPUT SC, V6285, P214, DOI 10.1007/978-3-642-15114-9_17
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Ryu Duksan, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P559, DOI 10.1109/ICIS.2012.43
   SCHWARZER R, 1987, METAANALYSIS PROGRAM
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Svahnberg M, 2007, J SYST SOFTWARE, V80, P1893, DOI 10.1016/j.jss.2007.01.050
   Taher L., 2005, P 2 INT C INN INF TE, P1
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Venkatesh V, 2000, INFORM SYST RES, V11, P342, DOI 10.1287/isre.11.4.342.11872
   von Rhein A., 2013, 7 INT WORKSH VAR MOD
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 76
TC 15
Z9 17
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 405
EP 429
DI 10.1016/j.infsof.2014.05.018
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500024
OA Green Published
DA 2024-07-18
ER

PT J
AU Petersen, K
   Khurum, M
   Angelis, L
AF Petersen, Kai
   Khurum, Mahvish
   Angelis, Lefteris
TI Reasons for bottlenecks in very large-scale system of systems
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System of systems development; Bottlenecks; Case study
ID SOFTWARE-DEVELOPMENT; REQUIREMENTS; PRIORITIZATION; DRIVEN
AB Context: System of systems (SOS) is a set or arrangement of systems that results when independent and useful systems are to be incorporated into a larger system that delivers unique capabilities. Our investigation showed that the development life cycle (i.e. the activities transforming requirements into design, code, test cases, and releases) in SoS is more prone to bottlenecks in comparison to single systems.
   Objective: The objective of the research is to identify reasons for bottlenecks in SoS, prioritize their significance according to their effect on bottlenecks, and compare them with respect to different roles and different perspectives, i.e. SoS view (concerned with integration of systems), and systems view (concerned with system development and delivery).
   Method: The research method used is a case study at Ericsson AB.
   Results: Results show that the most significant reasons for bottlenecks are related to requirements engineering. All the different roles agree on the significance of requirements related factors. However, there are also disagreements between the roles, in particular with respect to quality related reasons. Quality related hinders are primarily observed and highly prioritized by quality assurance responsibles. Furthermore, SoS view and system view perceive different hinders, and prioritize them differently.
   Conclusion: We conclude that solutions for requirements engineering in SoS context are needed, quality awareness in the organization has to be achieved end to end, and views between SoS and system view need to be aligned to avoid sub optimization in improvements. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Petersen, Kai; Khurum, Mahvish] Blekinge Inst Technol, Sch Comp, SE-37179 Karlskrona, Sweden.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Blekinge Institute Technology; Aristotle University of Thessaloniki
RP Petersen, K (corresponding author), Blekinge Inst Technol, Sch Comp, SE-37179 Karlskrona, Sweden.
EM kai.petersen@bth.se; mahvish.khurum@bth.se; lef@csd.auth.gr
OI Petersen, Kai/0000-0002-1532-8223
FU ELLIIT; Linkoping-Lund Initiative on IT and Mobile Communication;
   Knowledge Foundation (Sweden) [20100311]
FX We would like to thank all the participants in the study who provided
   valuable input. Thanks also to Ronald Jabangwe for proof-reading the
   paper. This work has been partially funded by ELLIIT, The Linkoping-Lund
   Initiative on IT and Mobile Communication, www.elliit.liu.se, and the
   BESQ + research project funded by the Knowledge Foundation (Sweden)
   (Grant: 20100311).
CR Aitchison A., 2003, STAT ANAL COMPOSITIO
   Anderson D., 2003, AGILE MANAGEMENT SOF
   [Anonymous], 2008, P 2 ANN IEEE SYST C
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2004, Agile and Iterative Development
   Barney S, 2009, LECT NOTES COMPUT SC, V5543, P256, DOI 10.1007/978-3-642-01680-6_24
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Biffl S., 2005, Value-Based Software Engineering
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Chatzipetrou P, 2010, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2010.35
   Colombi J., 2008, CROSSTALK The Journal of Defense Software Engineering, V21, P10
   Cumbo D, 2006, FOREST PROD J, V56, P25
   Dahmann J., 2011, Proceedings of the 2011 6th International Conference on System of Systems Engineering (SoSE), P131, DOI 10.1109/SYSOSE.2011.5966586
   DeLaurentis DA, 2005, IEEE SYS MAN CYBERN, P86
   DoD, 2008, SYST SOFTW ENG SYST
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Farenhorst R, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P21, DOI 10.1007/978-3-642-02374-3_2
   Herbsleb J.D., 2001, IEEE SOFTW, V18
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   Hybertson D, 2006, Proceedings of the 2006 IEEE/SMC International Conference on System of Systems Engineering, P35
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kuzniarz L, 2011, INFORM SOFTWARE TECH, V53, P214, DOI 10.1016/j.infsof.2010.10.004
   Lane J.A., 2006, USCCSE2006606 U SO C
   Lane JA, 2007, SYST ENG, V10, P297, DOI 10.1002/sys.20078
   Lewis GA, 2009, 2009 IEEE INTERNATIONAL SYSTEMS CONFERENCE, PROCEEDINGS, P247, DOI 10.1109/SYSTEMS.2009.4815806
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Malone ThomasW., 1990, CSCW 90, P357, DOI DOI 10.1145/99332.99367
   Martín-Fernández JA, 2000, ST CLASS DAT ANAL, P155
   Middleton P, 2001, SOFTWARE QUAL J, V9, P241, DOI 10.1023/A:1013754402981
   Morgan T., 1998, THESIS MASSACHUSETTS
   Ncube C., 2011, 2011 Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES^4), P70, DOI 10.1109/RESS.2011.6043923
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, LECT NOTES BUS INF, V32, P386
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Reinertsen D.G., 1997, MANAGING DESIGN FACT
   Rendon RG, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, VOLS 1 AND 2, P187
   Robson C., 2002, Real World Research, V2nd
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sangal N., 2005, COMP 20 ANN ACM SIGP, P164
   Savio D., 2011, 2011 Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES^4), P74, DOI 10.1109/RESS.2011.6043922
   Sjoberg DIK, 2012, IEEE SOFTWARE, V29, P47, DOI 10.1109/MS.2012.110
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Wickramasinghe N., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P962, DOI 10.1109/HICSS.2012.582
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
NR 49
TC 9
Z9 12
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1403
EP 1420
DI 10.1016/j.infsof.2014.05.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700015
DA 2024-07-18
ER

PT J
AU Pagán, JE
   Molina, JG
AF Espinazo Pagan, Javier
   Garcia Molina, Jesus
TI Querying large models efficiently
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-Driven Engineering; Model persistence; Model repositories; Eclipse
   Modeling Framework; Model querying; Efficiency
ID SQL
AB Context: The paradigm of Model-Driven Engineering (MDE) has emerged as a new area of software engineering that uses models to improve the productivity and reusability of software in order to achieve industrial standards. As models grow in size and complexity, the need of model persistence and model querying solutions arises to efficiently store large models and obtain information from them in an efficient, usable and safe way. Morsa is a model repository that uses a No-SQL database backend; it has been recently presented [1] and achieves scalable access to models and transparent integration with tools.
   Objective: Our goal was to develop a query language for Morsa, as the existing model querying approaches cannot take advantage of the design of the our repository.
   Method: The method followed in this paper comprises the following steps: (i) analyze the problem of model querying and identify a set of dimensions that can be used to characterize querying approaches; (ii) study and evaluate a representative set of model querying approaches and (iii) use the experience gained to design, develop and evaluate a dedicated model querying approach for Morsa that performs better than the studied ones (plain EMF, EMF Query, MDT OCL, IncQuery and CDO OCL). A test case has been defined to evaluate and compare the different approaches.
   Results: The contributions of this work are: first, an efficient, usable querying approach called Morsa Query Language (MorsaQL) that extends Morsa with querying capabilities, as the existing querying approaches cannot take advantage of our repository, and second, a comparative study of the current model persistence and querying approaches.
   Conclusion: The experience of analyzing and evaluating the different querying approaches has been very useful, as it has helped us developing our own one, which has been proven to be the best choice for Morsa. Moreover, the results of this paper can guide the MDE developers on which querying approach to use, depending on their needs. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Espinazo Pagan, Javier; Garcia Molina, Jesus] Univ Murcia, Fac Comp Sci, E-30001 Murcia, Spain.
C3 University of Murcia
RP Pagán, JE (corresponding author), Univ Murcia, Fac Comp Sci, E-30001 Murcia, Spain.
EM jespinazo@um.es; jmolina@um.es
RI GARCIA-MOLINA, JESUS J/X-7078-2019
FU Spanish Ministry of Science [TIN 200911555]; Fundacion Seneca
   [14954/BPS/10]
FX This work is funded by the Spanish Ministry of Science (Project TIN
   200911555) and Fundacion Seneca (Grant 14954/BPS/10).
CR ADM, 2007, ARCHITECTURE DRIVEN
   [Anonymous], 2004, Programming language design concepts
   Banker K., 2011, MONGODB ACTION MANNI
   Barmpis K., 2012, PROC 2012 EXTREME MO, P33, DOI [10.1145/2467307.2467314, DOI 10.1145/2467307.2467314]
   Bergmann G, 2012, LECT NOTES COMPUT SC, V7304, P1, DOI 10.1007/978-3-642-30561-0_1
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bonifati A, 2000, SIGMOD RECORD, V29, P68, DOI 10.1145/344788.344822
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Cattell R, 2010, SIGMOD REC, V39, P12, DOI 10.1145/1978915.1978919
   Caue C., CLOUD MDE WORKSH ECM
   Chang F., P 7 C USENIX S OP SY
   Chomicki J., 1994, Temporal Logic. First International Conference, ICTL '94 Proceedings, P506, DOI 10.1007/BFb0014006
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Espinazo-Pagan J., 2013, SOFTW SYST MODEL, V12
   Espinazo-Pagan J., 2011, P 14 INT MOD DRIV EN
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Fowler M., 2010, Domain-specific languages
   France R., 2012, LECT NOTES COMPUTER, V7590
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Grey J., 2004, P 3 INT C GEN PROGR, P361
   Haase P, 2004, LECT NOTES COMPUT SC, V3298, P502
   JARKE M, 1985, COMPUT SURV, V17, P313, DOI 10.1145/5505.5506
   Jouault F., 2009, 5 INT WORKSH GRAPH B
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kelly S., 2008, Domain-Specific Modeling
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kolovos D., 2008, P WORKSH CHALL MDE M, P35
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MOF The Meta-Object Facility, 2006, MOF METAOBJECT FACIL
   OCL, 2006, OCL OBJECT CONSTRAIN
   Ruscio D.D., 2013, BIGMDE 13
   Sadalage PJ, 2012, NOSQL DISTILLED BRIE
   Cuadrado JS, 2009, IEEE T SOFTWARE ENG, V35, P825, DOI 10.1109/TSE.2009.14
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Selic B, 2008, AUTOMAT SOFTW ENG, V15, P379, DOI 10.1007/s10515-008-0035-7
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stonebraker M., 1995, OBJECT RELATIONSL DB
   Stonebraker M, 2010, COMMUN ACM, V53, P10, DOI 10.1145/1721654.1721659
   Strauch C., 2011, THESIS STUTTGART MED
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   XMI, 2011, XMI XML METADATA INT
   XPath, 1999, XPATH XML PATH LANGU
   XQuery, 2011, XQUERY XQUERY LANGUA
NR 50
TC 15
Z9 16
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 586
EP 622
DI 10.1016/j.infsof.2014.01.005
PG 37
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300004
DA 2024-07-18
ER

PT J
AU Lehtinen, TOA
   Mäntylä, MV
   Vanhanen, J
   Itkonen, J
   Lassenius, C
AF Lehtinen, Timo O. A.
   Mantyla, Mika V.
   Vanhanen, Jari
   Itkonen, Juha
   Lassenius, Casper
TI Perceived causes of software project failures - An analysis of their
   relationships
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Root cause analysis; Cause and effect relationships; Software project
   failure; Multiple case study
ID ROOT CAUSE ANALYSIS; PROCESS IMPROVEMENT
AB Context: Software project failures are common. Even though the reasons for failures have been widely studied, the analysis of their causal relationships is lacking. This creates an illusion that the causes of project failures are unrelated.
   Objective: The aim of this study is to conduct in-depth analysis of software project failures in four software product companies in order to understand the causes of failures and their relationships. For each failure, we want to understand which causes, so called bridge causes, interconnect different process areas, and which causes were perceived as the most promising targets for process improvement.
   Method: The causes of failures were detected by conducting root cause analysis. For each cause, we classified its type, process area, and interconnectedness to other causes. We quantitatively analyzed which type, process area, and interconnectedness categories (bridge, local) were common among the causes selected as the most feasible targets for process improvement activities. Finally, we qualitatively analyzed the bridge causes in order to find common denominators for the causal relationships interconnecting the process areas.
   Results: For each failure, our method identified causal relationships diagrams including 130-185 causes each. All four cases were unique, albeit some similarities occurred. On average, 50% of the causes were bridge causes. Lack of cooperation, weak task backlog, and lack of software testing resources were common bridge causes. Bridge causes, and causes related to tasks, people, and methods were common among the causes perceived as the most feasible targets for process improvement. The causes related to the project environment were frequent, but seldom perceived as feasible targets for process improvement.
   Conclusion: Prevention of a software project failure requires a case-specific analysis and controlling causes outside the process area where the failure surfaces. This calls for collaboration between the individuals and managers responsible for different process areas. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lehtinen, Timo O. A.; Mantyla, Mika V.; Vanhanen, Jari; Itkonen, Juha; Lassenius, Casper] Aalto Univ, Sch Sci, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
C3 Aalto University
RP Lehtinen, TOA (corresponding author), Aalto Univ, Sch Sci, Dept Comp Sci & Engn, POB 19210, FI-00076 Aalto, Finland.
EM timo.o.lehtinen@aalto.fi; mika.mantyla@aalto.fi; jari.vanhanen@aalto.fi;
   juha.itkonen@aalto.fi; casper.lassenius@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012; Lassenius,
   Casper/A-4339-2013
OI Mantyla, Mika/0000-0002-2841-5879; Itkonen, Juha/0000-0001-9084-495X;
   Lassenius, Casper/0000-0003-4192-7024
CR Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   Al-Ahmad W., 2009, INT MANAGEMENT REV, V5, P93
   Al-Mamory SO, 2009, COMPUT COMMUN, V32, P419, DOI 10.1016/j.comcom.2008.11.012
   Alaeddini A, 2011, EXPERT SYST APPL, V38, P11230, DOI 10.1016/j.eswa.2011.02.171
   Alvarez M.P., 2009, International Journal of Psychology and Psychological Therapy, V9, P45
   [Anonymous], 1896, TREATISE HUMAN NATUR
   [Anonymous], 2006, CMMI DEV VERS 1 2
   Arshad N.H., 2007, P 6 WSEAS INT C SOFT, P51
   Ayad A, 2010, J MANAG DEV, V29, P556, DOI 10.1108/02621711011046521
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Burr A., 1996, STAT METHODS SOFTWAR
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   CARD DN, 1993, IEEE SOFTWARE, V10, P98, DOI 10.1109/52.219639
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Cheng J, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P101
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Conroy P, 2012, IEEE SOFTWARE, V29, P88, DOI 10.1109/MS.2012.166
   Cooke D.L., 2003, 21 SYSTEM DYNAMICS C, V3, P1
   Daniel RM, 2012, STAT METHODS MED RES, V21, P243, DOI 10.1177/0962280210394469
   DeMarco T, 2011, IEEE SOFTWARE, V28, P104, DOI 10.1109/MS.2011.134
   Demir K. A., 2009, P 2009 INT C SOFTW E, P13
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Dye J, 2002, RELIAB ENG SYST SAFE, V75, P303, DOI 10.1016/S0951-8320(01)00118-1
   Eden C, 2004, EUR J OPER RES, V159, P673, DOI 10.1016/s0377-2217(03)00431-4
   Egorova E, 2010, J SYST SOFTWARE, V83, P1907, DOI 10.1016/j.jss.2010.05.077
   El Emam K., 1998, ISSRE 98 P 9 INT S S
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Foddy W., 1994, CONSTRUCTING QUESTIO, DOI DOI 10.1016/S0031-9406(10)61110-8
   Galles D, 1997, ARTIF INTELL, V97, P9, DOI 10.1016/S0004-3702(97)00047-7
   Glass RL, 1999, COMMUN ACM, V42, P17, DOI 10.1145/299157.299161
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   GRANGER CWJ, 1988, J ECONOMETRICS, V39, P199, DOI 10.1016/0304-4076(88)90045-0
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   Ishikawa Kaoru., 1990, INTRO QUALITY CONTRO
   Jacobs J, 2005, INFORM SOFTWARE TECH, V47, P399, DOI 10.1016/j.infsof.2004.09.006
   Jacobson I., 1998, UNIFIED SOFTWARE DEV
   Jalote P., 2005, Proceedings of the Information Science and Communications Technology (ICICT 2005), P701
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Jin ZX, 2007, LECT NOTES ARTIF INT, V4562, P79
   Jones C., 2006, Crosstalk - The Journal of Defense Software Engineering, V19, P4
   Jones C., 2008, CROSSTALK J DEFENSE, V21
   Kalinowski M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P199, DOI 10.1109/SEAA.2008.47
   Kappelman LA, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46352.23.4.20060901/95110.4
   Kaur R, 2011, INT J SCI ENG RES, V2, P2
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Latino R.J., 2006, ROOT CAUSE ANAL IMPR
   Lehtinen TOA, 2011, INT SYMP EMP SOFTWAR, P388, DOI 10.1109/ESEM.2011.55
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lyytinen K, 1999, INFORM SYST J, V9, P85, DOI 10.1046/j.1365-2575.1999.00051.x
   Mahaney R.C., 2006, PROJ MANAG J, V37, P42
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   May L.J., 1998, CrossTalk: The Journal of Defense Software Engineering, V11, P9
   MAYS RG, 1990, IEEE J SEL AREA COMM, V8, P164, DOI 10.1109/49.46867
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Molokken-Ostvold K., 2003, P 2003 ACM IEEE INT, P220, DOI DOI 10.1109/ISESE.2003.1237981
   Molokken-Ostvold K., IEEE T SOFTW ENG, V31
   Monteiro P, 2010, LECT NOTES COMPUT SC, V6156, P263, DOI 10.1007/978-3-642-13792-1_21
   Nakashima T, 1999, INFORM SOFTWARE TECH, V41, P1059, DOI 10.1016/S0950-5849(99)00049-X
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Naur P., 1969, SOFTW ENG C SPONS NA
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Reyes F, 2011, J SYST SOFTWARE, V84, P775, DOI 10.1016/j.jss.2010.12.036
   Rooney J.J., 2004, QUAL PROG, V37, P45
   Royce W.W., 1970, IEEE WESCON
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salinger S., 2007, A coding scheme development methodolgy using grounded theory for qualitative analysis of pair programming
   Siekkinen M, 2008, COMPUT NETW, V52, P1846, DOI 10.1016/j.comnet.2008.03.005
   Stålhane T, 2004, LECT NOTES COMPUT SC, V3281, P150
   Steck H., 1999, P 2 WORKSH DAT MIN D
   Takagi Y, 2005, EMPIR SOFTW ENG, V10, P495, DOI 10.1007/s10664-005-3864-z
   Tarawneh Moh'd, 2008, 2008 First International Conference on the Applications of Digital Information and Web Technologies, P246, DOI 10.1109/ICADIWT.2008.4664353
   Traeger A, 2008, PERF E R SI, V36, P277, DOI 10.1145/1384529.1375489
   Verner JM, 2012, INFORM SOFTWARE TECH, V54, P866, DOI 10.1016/j.infsof.2011.11.001
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Wang Y., 2000, SOFTWARE ENG PROCESS
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Xiangnan Lu, 2010, 2010 2nd IEEE International Conference on Information Management and Engineering (ICIME 2010), P676, DOI 10.1109/ICIME.2010.5478254
NR 83
TC 74
Z9 107
U1 2
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 623
EP 643
DI 10.1016/j.infsof.2014.01.015
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300005
DA 2024-07-18
ER

PT J
AU Seo, YS
   Bae, DH
   Jeffery, R
AF Seo, Yeong-Seok
   Bae, Doo-Hwan
   Jeffery, Ross
TI AREION: Software effort estimation based on multiple regressions with
   adaptive recursive data partitioning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software project management; Software cost estimation; Software effort
   estimation; Data distribution; Least squares regression; Adaptive
   recursive data partitioning
ID EFFORT PREDICTION; VALIDITY INDEX; MODELS; ACCURACY; COMPANY; NUMBER
AB Context: Along with expert judgment, analogy-based estimation, and algorithmic methods (such as Function point analysis and COCOMO), Least Squares Regression (LSR) has been one of the most commonly studied software effort estimation methods. However, an effort estimation model using LSR, a single LSR model, is highly affected by the data distribution. Specifically, if the data set is scattered and the data do not sit closely on the single LSR model line (do not closely map to a linear structure) then the model usually shows poor performance. In order to overcome this drawback of the LSR model, a data partitioning-based approach can be considered as one of the solutions to alleviate the effect of data distribution. Even though clustering-based approaches have been introduced, they still have potential problems to provide accurate and stable effort estimates.
   Objective: In this paper, we propose a new data partitioning-based approach to achieve more accurate and stable effort estimates via LSR. This approach also provides an effort prediction interval that is useful to describe the uncertainty of the estimates.
   Method: Empirical experiments are performed to evaluate the performance of the proposed approach by comparing with the basic LSR approach and clustering-based approaches, based on industrial data sets (two subsets of the ISBSG (Release 9) data set and one industrial data set collected from a banking institution).
   Results: The experimental results show that the proposed approach not only improves the accuracy of effort estimation more significantly than that of other approaches, but it also achieves robust and stable results according to the degree of data partitioning.
   Conclusion: Compared with the other considered approaches, the proposed approach shows a superior performance by alleviating the effect of data distribution that is a major practical issue in software effort estimation. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Seo, Yeong-Seok; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
   [Jeffery, Ross] NICTA, Alexandria, NSW 1435, Australia.
C3 Korea Advanced Institute of Science & Technology (KAIST); Australian
   National University
RP Seo, YS (corresponding author), Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Dept Comp Sci, 291 Daehak Ro, Taejon 305701, South Korea.
EM ysseo@se.kaist.ac.kr; bae@se.kaist.ac.kr; Ross.jeffely@nicta.com.au
RI Seo, Yeong-Seok/AAF-2849-2019; Bae, Doo-Hwan/C-1538-2011
OI Seo, Yeong-Seok/0000-0002-5319-7674; 
FU Defense Acquisition Program Administration; Agency for Defense
   Development
FX The authors thank the anonymous reviewers for their valuable comments
   and suggestions to improve the quality of the paper. This work was
   partially supported by Defense Acquisition Program Administration and
   Agency for Defense Development under the contract.
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1994, FUNCT POINT COUNT PR
   [Anonymous], MULTIVARIATE DATA AN
   Aroba J, 2008, J SYST SOFTWARE, V81, P1944, DOI 10.1016/j.jss.2008.01.016
   Bartlett J E, 2001, INFORM TECHNOLOGY LE, V19, P1, DOI DOI 10.1109/LPT.2009.2020494
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   CARPENTER GA, 1988, COMPUTER, V21, P77, DOI 10.1109/2.33
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Chan VKY, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1484, DOI 10.1145/1244002.1244319
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Gallego JJC, 2007, J COMPUT SCI TECH-CH, V22, P371, DOI 10.1007/s11390-007-9043-5
   Cuadrado-Gallego JJ, 2006, J SYST SOFTWARE, V79, P353, DOI 10.1016/j.jss.2005.04.040
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Freitas A.A., 2002, NAT COMP SER
   Garre M, 2006, LECT NOTES COMPUT SC, V4224, P849
   Gencel C, 2009, LECT NOTES COMPUT SC, V5891, P144, DOI 10.1007/978-3-642-05415-0_11
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Hamilton LawrenceC., 1992, REGRESSION GRAPHICS
   Hyafil L., 1976, Information Processing Letters, V5, P15, DOI 10.1016/0020-0190(76)90095-8
   *ISO IEC, 2004, 141435 ISOIEC TR
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Mendes M., 2003, Pakistan Journal of Information and Technology, V2, P135
   MILLIGAN GW, 1985, PSYCHOMETRIKA, V50, P159, DOI 10.1007/BF02294245
   Mittas N, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P70
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Murthy SK, 1998, DATA MIN KNOWL DISC, V2, P345, DOI 10.1023/A:1009744630224
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Pakhira MK, 2004, PATTERN RECOGN, V37, P487, DOI 10.1016/j.patcog.2003.06.005
   Rana S., 2011, INT J COMPUT INF SCI, V3, P43
   Rousseeuw PJ, 2006, DATA MIN KNOWL DISC, V12, P29, DOI 10.1007/s10618-005-0024-4
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   Salvador S, 2004, PROC INT C TOOLS ART, P576
   Seo YS, 2009, ASIA PAC SOFWR ENG, P3, DOI 10.1109/APSEC.2009.57
   Seo Yeong-Seok., 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P25
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Yoon KA, 2010, INFORM SOFTWARE TECH, V52, P137, DOI 10.1016/j.infsof.2009.08.005
   Zhang YJ, 2008, INFORM SCIENCES, V178, P1205, DOI 10.1016/j.ins.2007.10.004
NR 56
TC 20
Z9 20
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1710
EP 1725
DI 10.1016/j.infsof.2013.03.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000003
DA 2024-07-18
ER

PT J
AU Kwon, YW
   Tilevich, E
AF Kwon, Young-Woo
   Tilevich, Eli
TI The impact of distributed programming abstractions on application energy
   consumption
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Energy-efficiency; Programming abstraction; Distributed system;
   Measurement; Software design pattern
AB With battery capacities remaining a key physical constraint for mobile devices, energy efficiency has become an important software design consideration. Distributed programming abstractions (e.g., sockets, RPC, messages, etc.) are an essential component of modern software, but their energy consumption characteristics are poorly understood. The programmer has few practical guidelines to choose the right abstraction for energy-constrained scenarios. In this article, we report on the findings of a systematic study we conducted to compare and contrast major distributed programming abstractions in terms of their energy consumption patterns. By varying the abstractions with the rest of the functionality fixed, we measure and analyze the impact of distributed programming abstractions on application energy consumption. Based on our findings, we present a set of practical guidelines for the programmer to select an abstraction that satisfies the energy consumption constraints in place. Our other guidelines can steer future efforts in creating energy efficient distributed programming abstractions. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Kwon, Young-Woo; Tilevich, Eli] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
C3 Virginia Polytechnic Institute & State University
RP Kwon, YW (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
EM ywkwon@cs.vt.edu; tilevich@cs.vt.edu
RI Kwon, Young-Woo/HGE-6607-2022
OI Kwon, Young-Woo/0000-0003-0625-8232; Tilevich, Eli/0000-0003-2415-6926
FU National Science Foundation [CCF-1116565]; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1116565] Funding Source: National Science Foundation
FX This research is supported by the National Science Foundation through
   the Grant CCF-1116565.
CR [Anonymous], P ACM IFIP USENIX 8
   [Anonymous], 23 EUR C OBJ OR PROG
   [Anonymous], P 27 IEEE ACM INT C
   [Anonymous], 2012, CISC SERV PROV WI FI
   *AP SOFT FDN, 2010, AP CXF DISTR OSGI
   Balasubramanian Niranjan, 2009, P 9 ACM SIGCOMM C IN
   COHEN M, 2012, P 2012 ACM INT C OBJ
   Colbert Stephen, 2006, COMMUNICATION
   Do Thanh, 2009, P 2 WORKSH POW AW CO
   Gartner Inc, 2010, GARTN HIGHL KEY PRED
   Gass R., 2010, P 11 INT C PASS ACT
   Ge R, 2010, IEEE T PARALL DISTR, V21, P658, DOI 10.1109/TPDS.2009.76
   Gibbons J, 2006, IEEE INTERNET COMPUT, V10, P66, DOI 10.1109/MIC.2006.60
   GOKHALE A, 1996, P APPL TECHN ARCH PR
   Gupta A., 2007, P 4 ANN IEEE COMM SO
   Haumacher B., 2007, JAVAPARTY PROJECT
   Huang Y., 2005, P INT C INF TECHN CO, V02
   Kansal Aman, 2008, Performance Evaluation Review, V36, P26, DOI 10.1145/1453175.1453180
   Kwon Y.-W., 2012, P 32 INT C DISTR COM
   Kwon YW, 2011, SERV ORIENTED COMPUT, V5, P61, DOI 10.1007/s11761-011-0082-y
   *MICR RES, 2010, NETW EM WIND TOOLK N
   Mohapatra S, 2007, IEEE J SEL AREA COMM, V25, P722, DOI 10.1109/JSAC.2007.070509
   Monson-Haefel R., 2000, Java Message Service
   Noureddine A., 2012, P 1 INT WORKSH GREEN
   OSGi Alliance, 2011, OSGI SERV PLATF REL
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P495, DOI 10.1002/1096-9128(200005)12:7<495::AID-CPE496>3.0.CO;2-W
   Sachs K, 2009, PERFORM EVALUATION, V66, P410, DOI 10.1016/j.peva.2009.01.003
   SEO C, 2007, P 22 IEEE ACM INT C
   STAMOS JW, 1990, ACM T PROGR LANG SYS, V12, P537, DOI 10.1145/88616.88631
   SULLIVAN M, 2012, PVWORLD 3G 4G WIRELE
   Tran P., 2002, P 22 INT C DISTR COM
   Xiao Y, 2008, INT CONF NEXT GEN, P61, DOI 10.1109/NGMAST.2008.26
NR 32
TC 12
Z9 14
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1602
EP 1613
DI 10.1016/j.infsof.2013.02.014
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Radjenovic, D
   Hericko, M
   Torkar, R
   Zivkovic, A
AF Radjenovic, Danijel
   Hericko, Marjan
   Torkar, Richard
   Zivkovic, Ales
TI Software fault prediction metrics: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software metric; Software fault prediction; Systematic literature review
ID OBJECT-ORIENTED METRICS; ERROR-PRONE CLASSES; RUN-TIME FAILURES;
   EMPIRICAL VALIDATION; DESIGN METRICS; QUANTITATIVE-ANALYSIS; COMPLEXITY
   METRICS; DEFECT PREDICTION; CODE CHURN; QUALITY
AB Context: Software metrics may be used in fault prediction models to improve software quality by predicting fault location.
   Objective: This paper aims to identify software metrics and to assess their applicability in software fault prediction. We investigated the influence of context on metrics' selection and performance.
   Method: This systematic literature review includes 106 papers published between 1991 and 2011. The selected papers are classified according to metrics and context properties.
   Results: Object-oriented metrics (49%) were used nearly twice as often compared to traditional source code metrics (27%) or process metrics (24%). Chidamber and Kemerer's (CK) object-oriented metrics were most frequently used. According to the selected studies there are significant differences between the metrics used in fault prediction performance. Object-oriented and process metrics have been reported to be more successful in finding faults compared to traditional size and complexity metrics. Process metrics seem to be better at predicting post-release faults compared to any static code metrics.
   Conclusion: More studies should be performed on large industrial software systems to find metrics more relevant for the industry and to answer the question as to which metrics should be used in a given context. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Radjenovic, Danijel] Probit Programska Oprema Doo, SI-3210 Slovenske Konjice, Slovenia.
   [Radjenovic, Danijel; Hericko, Marjan; Zivkovic, Ales] Univ Maribor, Fac Elect Engn & Comp Sci, SI-2000 Maribor, Slovenia.
   [Torkar, Richard] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
   [Torkar, Richard] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
   [Torkar, Richard] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
C3 University of Maribor; Blekinge Institute Technology; Chalmers
   University of Technology; University of Gothenburg
RP Radjenovic, D (corresponding author), Probit Programska Oprema Doo, Stari Trg 15, SI-3210 Slovenske Konjice, Slovenia.
EM danijel.radjenovic@pro-bit.si; marjan.hericko@uni-mb.si;
   richard.torkar@bth.se; ales.zivkovic@uni-mb.si
FU European Union's European Social Fund
FX We would like to thank the anonymous reviewers for their constructive
   comments and suggestions. This study was partly financed by the European
   Union's European Social Fund.
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Abubakar A, 2006, I C COMP SYST APPLIC, P889
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 11 IEEE INT S SOFTW
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 1994, P 4 INT C SOFTWARE Q
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Avizienis A, 2004, INT FED INFO PROC, V156, P91
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Binkley AB, 1998, SOFTWARE QUAL J, V7, P141, DOI 10.1023/A:1008860726607
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L., 1999, INT C SOFTW ENG
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P334, DOI 10.1109/ISSRE.1998.730898
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   Burrows R., 2010, Proceedings of the 2010 ICSE Workshop on Emerging Trends in Software Metrics, P53
   Çaglayan B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P31, DOI 10.1109/FLOSS.2009.5071357
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Counsell S, 2000, J SYST SOFTWARE, V53, P15, DOI 10.1016/S0164-1212(00)00004-2
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   D'Ambros Marco., 2011, Empirical Software Engineering, P1
   Denaro G., 2003, 5 CABERNET PLEN WORK
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Elish MO, 2011, ADV ENG SOFTW, V42, P852, DOI 10.1016/j.advengsoft.2011.06.001
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   English M., 2009, P 5 INT C PRED MOD S
   Etzkorn L, 1999, J OBJECT-ORIENT PROG, V12, P35
   Fenton N., 1997, SOFTWARE METRICS RIG, V5
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Ferzund J, 2009, LECT NOTES COMPUT SC, V5891, P242, DOI 10.1007/978-3-642-05415-0_18
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Goel B, 2008, STUD COMPUT INTELL, V131, P255
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   Hall T., 2011, IEEE T SOFTWARE ENG, P1
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P150, DOI 10.1109/METRIC.1998.731240
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Henderson-Sellers B., 1996, Software Metrics
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   ISO/IEC, 2008, 12207 ISOIEC
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Juran J.M., 1988, Juran's Quality Control Handbook, V4th
   Kamiya T, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P253, DOI 10.1109/ISORC.1999.776386
   Kamiya T, 1999, INFORM SOFTWARE TECH, V41, P297, DOI 10.1016/S0950-5849(99)00005-1
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kaur Arashdeep, 2010, 2010 5th International Conference on Industrial and Information Systems (ICIIS 2010), P261, DOI 10.1109/ICIINFS.2010.5578698
   Khoshgoftaar T.M., 2000, P 5 IEEE INT S HIGH
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2001, SOFTWARE QUAL J, V9, P99, DOI 10.1023/A:1016622818771
   Kim HK, 2005, LECT NOTES COMPUT SC, V3481, P62
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Kpodjedo S, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/SSBSE.2009.24
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Layman L, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P206
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Menzies T, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/HASE.2004.1281737
   Menzies T., 2003, P 27 ANN NAS GODD IE
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P309
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N., 2005, Proceedings of the third workshop on Software quality, P1
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nikora AP, 2006, SOFTWARE PRACT EXPER, V36, P949, DOI 10.1002/spe.737
   Nugroho Ariadi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P21, DOI 10.1109/MSR.2010.5463285
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Olague HM, 2008, J SOFTW MAINT EVOL-R, V20, P171, DOI 10.1002/smr.366
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Quah TS, 2009, INFORM SCIENCES, V179, P430, DOI 10.1016/j.ins.2008.10.005
   Rana Z.A., 2009, P 2009 WRI WORLD C S, V4
   Ratzinger J, 2007, LECT NOTES COMPUT SC, V4422, P12
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   TEGARDEN DP, 1995, DECIS SUPPORT SYST, V13, P241, DOI 10.1016/0167-9236(93)E0045-F
   Thongmak M., 2003, SERP 03, V1 and 2
   Tomaszewski P., 2005, 5 C SOFTW ENG RES PR, P0
   Tosun A., 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540446
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Unterkalmsteiner M., 2011, IEEE T SOFTWARE ENG, VX, P1
   Wahyudin D., 2008, P 34 EUR SOFTW ENG A
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Yuan XH, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P85, DOI 10.1109/ASSET.2000.888052
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhao M, 1998, INFORM SOFTWARE TECH, V40, P801, DOI 10.1016/S0950-5849(98)00098-6
   Zhihong Xu, 2007, Journal of Digital Information Management, V5, P99
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 156
TC 306
Z9 333
U1 3
U2 72
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1397
EP 1418
DI 10.1016/j.infsof.2013.02.009
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200003
DA 2024-07-18
ER

PT J
AU Endo, AT
   Simao, A
AF Endo, Andre Takeshi
   Simao, Adenilso
TI Evaluating test suite characteristics, cost, and effectiveness of
   FSM-based testing methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model based testing; Test automation; Experiments; Test case generation
   method; Mutation testing; Conformance testing
ID MUTATION
AB Context: Testing from finite state machines has been investigated due to its well-founded and sound theory as well as its practical application. There has been a recurrent interest in developing methods capable of generating test suites that detect all faults in a given fault domain. However, the proposal of new methods motivates the comparison with traditional methods.
   Objective: We compare the methods that generate complete test suites from finite states machines. The test suites produced by the W, HSI, H, SPY, and P methods are analyzed in different configurations.
   Method: Complete and partial machines were randomly generated varying numbers of states, inputs, outputs, and transitions. These different configurations were used to compare test suite characteristics (number of resets, test case length) and the test suite length (i.e., the sum of the length of its test cases). The fault detection ratio was evaluated using mutation testing to produce faulty implementations with an extra state.
   Results: On average, the recent methods (H, SPY, and P) produced longer test cases but smaller test suites than the traditional methods (W, HSI). The recent methods generated test suites of similar length, though P produced slightly smaller test suites. The SPY and P methods had the highest fault detection ratios and HSI had the lowest. For all methods, there was a positive correlation between the number of resets and the test suite length and between the test case length and the fault detection ratio.
   Conclusion: The recent methods rely on fewer and longer test cases to reduce the overall test suite length, while the traditional methods produce more and shorter test cases. Longer test cases are correlated to fault detection ratio which favored SPY, though all methods have a ratio of over 92%. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Endo, Andre Takeshi; Simao, Adenilso] Univ Sao Paulo, Inst Ciencias Matemat & Comp, BR-13560970 Sao Carlos, SP, Brazil.
C3 Universidade de Sao Paulo
RP Endo, AT (corresponding author), Univ Sao Paulo, Inst Ciencias Matemat & Comp, POB 668, BR-13560970 Sao Carlos, SP, Brazil.
EM aendo@icmc.usp.br; adenilso@icmc.usp.br
RI Simao, Adenilso S/E-9620-2011; Endo, Andre Takeshi/I-1861-2012
OI Endo, Andre Takeshi/0000-0002-8737-1749; Simao,
   Adenilso/0000-0002-1454-2607
FU FAPESP/Brazil [2009/01486-9, 2012/02232-3]; CAPES/Brazil [0332-11-9];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [09/01486-9] Funding Source: FAPESP
FX Andre Takeshi Endo is financially supported by FAPESP/Brazil (Grant
   2009/01486-9) and CAPES/Brazil (Grant 0332-11-9). Adenilso Simao is
   partially financially supported by FAPESP/Brazil (Grant 2012/02232-3).
   We would like to thank to Nina Yevtushenko and Rita Dorofeeva for the
   implementation of the H method and Jorge Cutigi for the implementation
   of the HSI method. Special thanks to Elizabeth M. Hashimoto for
   reviewing the statistical aspects of this paper. The authors are
   grateful to the anonymous reviewers for their useful comments and
   suggestions.
CR Allauzen C., 2003, Journal of Automata, Languages and Combinatorics, V8, P117
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], R PROJ STAT COMP
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P469, DOI 10.1109/ICST.2010.16
   Broy M., 2005, Springer LNCS
   Pedrosa LLC, 2013, SOFTW TEST VERIF REL, V23, P585, DOI 10.1002/stvr.1474
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Dorofeeva R, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P23, DOI 10.1109/SEFM.2005.17
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   El-Far L. K., 2001, ENCY SOFTWARE ENG, P825
   Endo A., 2012, EXPERIMENTS WITH FSM
   Endo A. T., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P549, DOI 10.1109/ICST.2012.140
   Endo A. T., 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P432, DOI 10.1109/SCC.2011.77
   Fraser G, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P18, DOI 10.1109/IWAST.2009.5069037
   Gill A., 1962, INTRODUCTION TO THE
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hierons RM, 2010, AUTOMAT SOFTW ENG, V17, P217, DOI 10.1007/s10515-009-0061-0
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Luo G., 1995, Protocol Test Systems. 7th Workshop. 7th IFIP WG 6.1 International Workshop on Protocol Test Systems, P95
   Moore E.F., 1956, Automata studies, P129
   Mosterman P, 2011, Model-based testing for embedded systems
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Simao A, 2009, IET SOFTW, V3, P91, DOI 10.1049/iet-sen.2008.0018
   Simao A, 2010, COMPUT J, V53, P1508, DOI 10.1093/comjnl/bxp073
   Simao A, 2010, IEEE T COMPUT, V59, P1023, DOI 10.1109/TC.2010.17
   Simao A, 2009, LECT NOTES COMPUT SC, V5826, P129, DOI 10.1007/978-3-642-05031-2_9
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   Utting M., 2006, Practical Model-Based Testing
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
NR 40
TC 24
Z9 26
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1045
EP 1062
DI 10.1016/j.infsof.2013.01.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800008
DA 2024-07-18
ER

PT J
AU Beydoun, G
   Low, G
   Bogg, P
AF Beydoun, Ghassan
   Low, Graham
   Bogg, Paul
TI Suitability assessment framework of agent-based software architectures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modelling; Distributed intelligent systems; Agent; Multi Agent Systems;
   Software development
ID MULTIAGENT SYSTEMS; TROPOS; METAMODEL
AB Context: A common distributed intelligent system architecture is Multi Agent Systems (MASs). Creating systems with this architecture has been recently supported by Agent Oriented Software Engineering (AOSE) methodologies. But two questions remain: how do we determine the suitability of a MAS implementation for a particular problem? And can this be determined without AOSE expertise?
   Objective: Given the relatively small number of software engineers that are AOSE experts, many problems that could be better solved with a MAS system are solved using more commonly known but not necessarily as suitable development approaches (e.g. object-oriented). The paper aims to empower software engineers, who are not necessarily AOSE experts, in deciding whether or not they should advocate the use of an MAS technology for a given project.
   Method: The paper will construct a systematic framework to identify key criteria in a problem requirement definition to assess the suitability of a MAS solution. The criteria are first identified using an iterative process. The features are initially identified from MAS implementations, and then validated against related work. This is followed by a statistical analysis of 25 problems that characterise agent-oriented solutions previously developed to group features into key criteria.
   Results: Key criteria were sufficiently prominent using factor analysis to construct a framework which provides a process that identifies within the requirements the criteria discovered. This framework is then evaluated for assessing suitability of a MAS architecture, by non-AOSE experts, on two real world problems: an electricity market simulation and a financial accounting system.
   Conclusion: Substituting a software engineer's personal inclination to (or not to) use a MAS, our framework provides an objective mechanism. It can supplant current practices where the decision to use a MAS architecture for a given problem remains an informal process. It was successfully illustrated on two real world problems to assess the suitability of a MAS implementation. This paper will potentially facilitate the take up of MAS technology. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Beydoun, Ghassan] Univ Wollongong, Wollongong, NSW, Australia.
   [Low, Graham; Bogg, Paul] Univ New S Wales, Sydney, NSW, Australia.
C3 University of Wollongong; University of New South Wales Sydney
RP Beydoun, G (corresponding author), Univ Wollongong, Wollongong, NSW, Australia.
EM beydoun@uow.edu.au; G.Low@unsw.edu.au; paulb@unsw.edu.au
RI Beydoun, Ghassan/L-5554-2017
OI Beydoun, Ghassan/0000-0001-8087-5445
FU Australian Research Council [DP0878172]; Australian Research Council
   [DP0878172] Funding Source: Australian Research Council
FX This work was supported in part by the Australian Research Council under
   Grant No. DP0878172.
CR Ahmad R., 2009, International Journal of Agent-Oriented Software Engineering, V3, P252, DOI 10.1504/IJAOSE.2009.023639
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Argente E, 2011, LECT NOTES COMPUT SC, V6038, P157
   Asaka M., 1999, 9 ANN C INT SOC, P98
   Ashamalla A., 2009, P 18 INT C INF SYST, P345
   Benfield SS, 2006, P 5 INT JOINT C AUT
   Bernon C., 2003, ENG SOC AGENTS WORLD, VIII, P70
   Bernon C., 2011, ENG SELF ORGANISING, P283, DOI DOI 10.1007/978-3-642-17348-6_12
   Beydoun G, 2009, INFORM SOFTWARE TECH, V51, P832, DOI 10.1016/j.infsof.2008.05.003
   Beydoun G, 2006, LECT NOTES COMPUT SC, V3914, P126
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Black W., 1998, Multivariate data analysis: With readings
   Bogg P, 2008, LECT NOTES ARTIF INT, V5357, P98, DOI 10.1007/978-3-540-89674-6_13
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Cattoni R., 1999, 1 AS PAC C INT AG TE
   Cernuzzi L., 2002, P OOPSLA WORKSH AG O
   Chandarasupsang T, 2004, 2004 INTERNATIONAL CONFERENCE ON PROBABILISTIC METHODS APPLIED TO POWER SYSTEMS, P349
   Chen L., 1998, P 2 INT C AUT AG MUL
   CHU PC, 1992, ACCOUNTING MANAGEMEN, V2, P39
   Cossentino M., 2005, AGENT ORIENTED METHO, P79
   Cossentino M, 2010, AUTON AGENT MULTI-AG, V20, P260, DOI 10.1007/s10458-009-9099-4
   Cuni G., 2004, P 16 EUR C ART INT
   Dam KH, 2003, LECT NOTES COMPUT SC, V3030, P78
   De Wolf T., 2005, 4 INT WORKSH AG OR M
   Decker K., 1997, P 1 INT C AUT AG MAR
   DELOACH SA, 2005, AGENT ORIENTED METHO, P236
   Do T.T., 2004, ADV SOFTWARE ENG KNO, P151
   EURESCOM, 2001, FIN GUID ID REL PROB
   Garijo F J., 2005, Agent-Oriented Methodologies, IDEA Group Publishing, V8, P203, DOI DOI 10.4018/978-1-59140-581-8.CH008
   Georgeff M., 1987, P AAAI87
   Giesecke S., 2006, P 2006 C PATT LANG P
   Grozev G., 2005, SIMTECT 2005 C P SYD
   Grozev G., 2007, 8 AS PAC COMPL SYST
   Guessoum Z., 2004, AAMAS04 NEW YORK
   Hayzelden ALG, 1999, KNOWL ENG REV, V14, P341, DOI 10.1017/S0269888999003057
   Horlait E., 2003, INNOVATIVE TECHNOLOG
   Jennings NR, 2000, APPL ARTIF INTELL, V14, P421, DOI 10.1080/088395100403379
   Kida K., 1999, 1 AS PAC C INT AG TE
   Lamparter S., 2010, AUT AG MULT SYST C A
   Lenox T., 2000, P 2000 IEEE INT C SY
   Lesser V.R., 1988, DISTRIBUTED ARTIFICI
   Liu Y., 1999, 1 AS PAC C INT AG TE
   Ljungberg M., 1992, P 2 PAC RIM INT C AR
   Maston E., 2003, INTEGRATION KNOWLEDG
   Mayoh B., 1999, 1 AS PAC C INT AG TE
   Medvidovic N., 1999, P TC2 1 WORK IFIP C
   Nodine M, 2000, INT J COOP INF SYST, V9, P3, DOI 10.1142/S021884300000003X
   Nourbakhsh I., 2005, IEEE PERVASIVE COMPU
   O'Malley S. A., 2002, Agent-Oriented Software Engineering II. Second International Workshop, AOSE 2001. Revised Papers and Invited Contributions (Lecture Notes in Computer Science Vol.2222), P188
   Padgham Lin., 2005, AGENT ORIENTED METHO, P107, DOI DOI 10.4018/978-1-59140-581-8.CH005
   Pavón J, 2003, LECT NOTES ARTIF INT, V2691, P394
   Pechoucek M., 2005, AAMAS IND APPL, P100
   Pechoucek M, 2008, AUTON AGENT MULTI-AG, V17, P397, DOI 10.1007/s10458-008-9050-0
   Reed C, 2005, LECT NOTES ARTIF INT, V3581, P375
   Rodriguez J.A., 2003, DESIGN CONSTRUCTION
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Sabas A, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL I, PROCEEDINGS, P211
   Schwartz R., 1997, 14 NAT C ART INT PRO, P29
   Serugendo GD, 2005, KNOWL ENG REV, V20, P165, DOI [10.1017/S0269888905000494, 10.1017/.S0269888905000494]
   Shehory O., 2001, P 5 INT C AUT AG MON
   Stanton C.J., 2003, ROBOCUP 2003 ROBOT S
   Sturm A, 2003, LECT NOTES COMPUT SC, V3030, P94
   Sudeikat J., 2004, Agentoriented software engineering, VV, P126, DOI DOI 10.1007/978-3-540-30578-1_9
   Sun H., 2010, P 9 INT C AUT AG MUL, P325
   Tambe M., 1995, AI MAGAZINE
   Tran Q.N., 2005, AGENT ORIENTEDMETHOD, P341
   Tran QNN, 2008, INFORM SOFTWARE TECH, V50, P697, DOI 10.1016/j.infsof.2007.07.005
   Walton D., 1998, THE NEW DIALECTIC
   Weidlich A, 2008, ENERG ECON, V30, P1728, DOI 10.1016/j.eneco.2008.01.003
   Weyns D., 2004, P OOPSLA WORKSH AG O, P101
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zambonelli F, 2004, AUTON AGENT MULTI-AG, V9, P253, DOI 10.1023/B:AGNT.0000038028.66672.1e
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
   Zambonelli F., 2005, Agent-Oriented Methodologies, V6, P136, DOI DOI 10.4018/978-1-59140-581-8.CH006
NR 77
TC 2
Z9 6
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 673
EP 689
DI 10.1016/j.infsof.2012.10.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 111NE
UT WOS:000316527200003
OA Green Published
DA 2024-07-18
ER

PT J
AU Tseng, WH
   Fan, CF
AF Tseng, Wan-Hui
   Fan, Chin-Feng
TI Systematic scenario test case generation for nuclear safety systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Scenario testing; Sequence diagram; Ontology; Preliminary Safety
   Analysis Report (PSAR)
ID DESIGN
AB Context: The current validation tests for nuclear software are routinely performed by random testing, which leads to uncertain test coverage. Moreover, validation tests should directly verify the system's compliance with the original user's needs. Unlike current model-based testing methods, which are generally based on requirements or design models, the proposed model is derived from the original user's needs in text through domain-specific ontology, and then used to generate validation tests systematically.
   Objective: Our first goal is to develop an objective, repeatable, and efficient systematic validation test scheme that is effective for large systems, with analyzable test coverage. Our second goal is to provide a new model-based validation testing method that reflects the user's original safety needs.
   Method: A model-based scenario test case generation for nuclear digital safety systems was designed. This was achieved by converting the scenarios described in natural language in a Safety Analysis Report (SAR) prepared by the power company for licensing review, to Unified Modeling Language (UML) sequence diagrams based on a proposed ontology of a related regulatory standard. Next, we extracted the initial environmental parameters and the described operational sequences. We then performed variations on these data to systematically generate a sufficient number of scenario test cases.
   Results: Test coverage criteria, which are the equivalence partition coverage of initial environment, the condition coverage, the action coverage and the scenario coverage, were met using our method.
   Conclusion: The proposed model-based scenario testing can provide improved testing coverage than random testing. A test suite based on user needs can be provided. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Tseng, Wan-Hui; Fan, Chin-Feng] Yuan Ze Univ, Dept Comp Sci & Engn, Chungli, Taiwan.
C3 Yuan Ze University
RP Fan, CF (corresponding author), 135 Far E Rd, Chungli 320, Taiwan.
EM csfanc@saturn.yzu.edu.tw
FU National Science Council [NSC 100-2221-E-155-059]
FX This research has been partially supported by National Science Council
   under the Grant NSC 100-2221-E-155-059.
CR Al Balushi T.H., 2006, P 18 INT C SOFTW ENG, P343
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], 2003, 74322003 IEEE
   [Anonymous], 1978, REG GUID 1 7
   [Anonymous], 2011, Extensible Markup Language (XML)
   [Anonymous], 2004, 1012TM2004 IEEE
   [Anonymous], 1997, 6150831997 IEC
   [Anonymous], 2011, Unified modeling language (UML) infrastructure specification
   [Anonymous], 2011, STANDARD REV PLAN RE
   [Anonymous], 1994, Encyclopedia of software Engineering
   [Anonymous], 1999, TRS384 IAEA
   Briand L.C., 2001, P 4 INT C UNIFIED MO, P194, DOI DOI 10.5555/647245.719446
   Devedzic V., 2004, INT J ARTIFICIAL INT, V14, P39
   Fraikin F, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P261, DOI 10.1109/ASE.2002.1115026
   Fukumoto A, 1998, NUCL ENG DES, V183, P117, DOI 10.1016/S0029-5493(98)00186-1
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Huo QN, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P210
   Hylands C., 2003, M0325 UCBERL
   IAEA, 1988, IAEA SAF SER
   International Atomic Energy Agency (IAEA), 2000, IAEA SAF SER
   Janhunen T, 2011, LECT NOTES ARTIF INT, V6645, P242
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Kuball S, 2004, SAFETY SCI, V42, P369, DOI 10.1016/j.ssci.2003.09.006
   Moser T, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P478
   MST Company, 2007, PCTRAN PC BAS NUCL P
   Nasser V.H., 2009, THESIS U NEW BRUNSWI
   Nasser VH, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P192
   Nguyen C.D., 2008, P 7 INT C AUTONOMOUS, V3, P1315
   Richardson D. J., 1992, International Conference on Software Engineering, P105, DOI 10.1145/143062.143100
   Samuel P, 2005, INDICON 2005 Proceedings, P176
   Samuel P, 2008, E-INFORMATICA, V2, P61
   Sarma M, 2007, ADCOM 2007: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTING AND COMMUNICATIONS, P60, DOI 10.1109/ADCOM.2007.68
   Sommerville I., 2011, Software engineering
   Villela K., 2005, Journal of Brazilian Computer Science, V11, P45
   Vrba P, 2003, ETFA 2003: IEEE CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION, VOL 1, PROCEEDINGS, P282
   Vudatha C.P., 2011, ELECT COMPUTER TECHN, V5, P216
   Wang Y, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/ISADS.2007.54
   Wongthongtham P, 2007, INT J COMPUT SCI NET, V7, P15
   Wongthongtham P, 2007, INT J COMPUT SCI NET, V7, P27
   Xiaoying Bai, 2008, 2008 IEEE International Conference on Web Services (ICWS), P465, DOI 10.1109/ICWS.2008.111
   Zhang Z., 2011, ELECTR POW SYST RES, V99, P191
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zibran M.F., 201201 U SASK DEP CO
NR 43
TC 9
Z9 11
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 344
EP 356
DI 10.1016/j.infsof.2012.08.016
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500011
DA 2024-07-18
ER

PT J
AU Tonella, P
   Susi, A
   Palma, F
AF Tonella, Paolo
   Susi, Angelo
   Palma, Francis
TI Interactive requirements prioritization using a genetic algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 2nd International Symposium on Search Based Software Engineering
CY 2010
CL Benevento, ITALY
DE Requirements prioritization; Interactive genetic algorithms; Search
   based software engineering
AB Context: The order in which requirements are implemented affects the delivery of value to the end-user, but it also depends on technical constraints and resource availability. The outcome of requirements prioritization is a total ordering of requirements that best accommodates the various kinds of constraints and priorities. During requirements prioritization, some decisions on the relative importance of requirements or the feasibility of a given implementation order must necessarily resort to a human (e.g., the requirements analyst), possessing the involved knowledge.
   Objective: In this paper, we propose an Interactive Genetic Algorithm (IGA) that includes incremental knowledge acquisition and combines it with the existing constraints, such as dependencies and priorities. We also assess the performance of the proposed algorithm.
   Method: The validation of IGA was conducted on a real case study, by comparing the proposed algorithm with the state of the art, interactive prioritization technique Incomplete Analytic Hierarchy Process (IAHP).
   Results: The proposed method outperforms IAHP in terms of effectiveness, efficiency and robustness to decision maker errors.
   Conclusion: IGA produces a good approximation of the reference requirements ranking, requiring an acceptable manual effort and tolerating a reasonable human error rate. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Tonella, Paolo; Susi, Angelo; Palma, Francis] Fdn Bruno Kessler, Software Engn Res Unit, I-38123 Trento Pavo, Italy.
C3 Fondazione Bruno Kessler
RP Susi, A (corresponding author), Fdn Bruno Kessler, Software Engn Res Unit, Via Sommarive 18, I-38123 Trento Pavo, Italy.
EM tonella@fbk.eu; susi@fbk.eu; fpalma@fbk.eu
RI Palma, Francis/R-3651-2019; Palma, Francis/HPC-9574-2023; Tonella,
   Paolo/C-1702-2015
OI Tonella, Paolo/0000-0003-3088-0339
CR Allport D.A., 1980, COGNITIVE PSYCHOL NE
   Andrich R., 2010, TECHNICAL REPORT
   [Anonymous], 2011, AUTONOMOUS SEARCH
   Avesani P., RE 2005, P297
   Cockburn A., 2002, AGILE SOFTWARE DEV
   DANEVA M, 2008, EUROMICRO SEAA, P240, DOI DOI 10.1109/SEAA.2008.46
   de Souza JT, 2011, LECT NOTES COMPUT SC, V6956, P142, DOI 10.1007/978-3-642-23716-4_15
   del Sagrado J., 2 INT S SEARCH BAS S, P67
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   HARKER PT, 1987, MATH MODELLING, V9, P837, DOI 10.1016/0270-0255(87)90503-3
   Herrmann A, 2008, INT REQUIR ENG CONF, P125, DOI 10.1109/RE.2008.48
   In HP, 2002, P INT COMP SOFTW APP, P887, DOI 10.1109/CMPSAC.2002.1045118
   Jia Y., 2010, IEEE T SOFTWARE ENG, P1
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J., P 2 INT C REQ ENG IC, P110
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Moisiadis F., SERP 2002
   Ngo-The A., P 15 INT C SOFTW ENG, P586
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Quiroz J., IEEE C EV COMP, P1366
   Saaty TL, 2000, MODELS METHODS CONCE
   Sivzittian S., REFSQ 2001
   Tonella P., 2 INT S SEARCH BAS S, P57
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Zhang Y., 2 INT S SEARCH BAS S, P47
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 29
TC 67
Z9 73
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 173
EP 187
DI 10.1016/j.infsof.2012.07.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 036GA
UT WOS:000311013200010
DA 2024-07-18
ER

PT J
AU Richardson, I
   Casey, V
   McCaffery, F
   Burton, J
   Beecham, S
AF Richardson, Ita
   Casey, Valentine
   McCaffery, Fergal
   Burton, John
   Beecham, Sarah
TI A Process Framework for Global Software Engineering Teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global Software Engineering; Global Teams; Global Teaming Process Area;
   Project Management; Software Process
ID MANAGEMENT
AB Context: Global Software Engineering (GSE) continues to experience substantial growth and is fundamentally different to collocated development. As a result, software managers have a pressing need for support in how to successfully manage teams in a global environment. Unfortunately, de facto process frameworks such as the Capability Maturity Model Integration (CMMI (R)) do not explicitly cater for the complex and changing needs of global software management.
   Objective: To develop a Global Teaming (GT) process area to address specific problems relating to temporal, cultural, geographic and linguistic distance which will meet the complex and changing needs of global software management.
   Method: We carried out three in-depth case studies of GSE within industry from 1999 to 2007. To supplement these studies we conducted three literature reviews. This allowed us to identify factors which are important to GSE. Based on a gap analysis between these GSE factors and the CMMI (R), we developed the GT process area. Finally, the literature and our empirical data were used to identify threats to software projects if these processes are not implemented.
   Results: Our new GT process area brings together practices drawn from the GSE literature and our previous empirical work, including many socio-technical factors important to global software development. The GT process area presented in this paper encompasses recommended practices that can be used independently or with existing models. We found that if managers are not proactive in implementing new GT practices they are putting their projects under threat of failure. We therefore include a list of threats that if ignored could have an adverse effect on an organization's competitive advantage, employee satisfaction, timescales, and software quality.
   Conclusion: The GT process area and associated threats presented in this paper provides both a guide and motivation for software managers to better understand how to manage technical talent across the globe. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Richardson, Ita; Beecham, Sarah] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [Casey, Valentine; McCaffery, Fergal] Dundalk Inst Technol, Dept Comp & Math, Dundalk, Ireland.
   [Burton, John] Vitalograph Ireland Ltd, Ennis, Co Clare, Ireland.
C3 University of Limerick; Dundalk Institute of Technology
RP Beecham, S (corresponding author), Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
EM Ita.Richardson@lero.ie; Val.Casey@dkit.ie; Fergal.McCaffery@dkit.ie;
   John.Burton@vitalograph.ie; Sarah.Beecham@lero.ie
RI Beecham, Simon C/M-1544-2016; casey, val/AAQ-1523-2021
OI Richardson, Ita/0000-0002-5493-2837; Mc Caffery,
   Fergal/0000-0002-0839-8362
FU Science Foundation Ireland (SFI) through the GSD for SMEs cluster
   project [03/IN3/1408C]; Science Foundation Ireland CSET Grant
   [03/CE2/I303.1, 10/CE/I1855]; Lero - the Irish Software Engineering
   Research Centre; SFI Stokes Lectureship Programme [07/SK/I1299]; SFI
   Principal Investigator Programme [08/IN.1/I2030]
FX The research presented in this paper has been supported, in part, by
   Science Foundation Ireland (SFI) through the GSD for SMEs cluster
   project, Grant No. 03/IN3/1408C and the Science Foundation Ireland CSET
   Grant Nos. 03/CE2/I303.1 and 10/CE/I1855, Lero - the Irish Software
   Engineering Research Centre, by the SFI Stokes Lectureship Programme,
   Grant No. 07/SK/I1299 and the SFI Principal Investigator Programme,
   Grant No. 08/IN.1/I2030.
CR Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   Ali N., 2010, KNOWLEDGE ENGINEERIN
   [Anonymous], 1995, SOFTWARE QUALITY ASS
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2010, P INT C SOFTW PROC I
   [Anonymous], IEEE INT C GLOB SOFT
   [Anonymous], P 36 ANN HAW INT C S
   Avritzer A, 2010, J SYST SOFTWARE, V83, P1881, DOI 10.1016/j.jss.2010.05.070
   Bannerman P.L., 2008, 19 AUSTR C SOFTW ENG
   Bass M., 2009, 4 IEEE INT C GLOB SO
   Beecham S, 2005, SOFTWARE QUAL J, V13, P247, DOI 10.1007/s11219-005-1752-9
   Beecham S., 2011, METHODS TOOLS PROJEC
   Beecham S., 2010, IEEE INT C GLOB SOFT
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bergman B., 1994, QUALITY CUSTOMER NEE
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Brodman J.G., 1997, 19 INT C SOFTW ENG B
   Burton J., 2009, RISK MANAGEMENT CAPA
   Buyens K., 2007, 2 INT C AV REL SEC A
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 2005, OFFSH INF TECHN SOUR
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Casey, 2008, P EUR SYST SOFTW PRO
   Casey V., 2004, Software Process Improvement and Practice, V9, P123, DOI 10.1002/spip.201
   Casey Valentine, 2010, J. theor. appl. electron. commer. res., V5, P41, DOI 10.4067/S0718-18762010000200004
   Casey V., 2011, DISPATCHES VIRTUAL S
   Casey V., 2008, INT C GLOB SOFTW ENG
   Casey V., 2009, 4 IEEE INT C GLOB SO
   Casey V., 2011, ACM INROADS, V1, P51, DOI [10.1145/1835428.1835443, DOI 10.1145/1835428.1835443]
   Casey V., 2008, 2 INF SYST WORKSH GL
   Casey V., 2010, Journal of the Brazilian Computer Society, V16, P83, DOI DOI 10.1007/S13173-010-0013-3
   Casey V., 2009, SOFTWARE TESTING GLO, P220
   Casey V., 2007, THESIS U LIMERICK LE
   Casey V., 2005, 3 WORLD C SOFTW QUAL
   Casey V., 2010, ENCY SOFTWARE ENG
   Casey V., 2006, INT C GLOB SOFTW ENG
   Casey V., 2004, EUR SOFTW PROC IMPR
   CASEY V, 2006, 1 INT WORKSH GLOB SO
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Crow G., 2003, COMMUNICATIONS INT I, V3
   CURTIS B, 2000, 22 INT C SOFTW ENG I
   DAMIAN DE, 2003, P 36 INT C SYST SCI
   Davidow W.H., 1992, VIRTUAL CORPORATION
   Deming WE, 1982, Out of the crisis
   DeSanctis G, 1999, TR ORG BEHAV, V6, P81
   Deshpande S., 2010, IEEE INT C GLOB SOFT
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Fitzgerald B, 1999, IEEE SOFTWARE, V16, P37, DOI 10.1109/52.765785
   Galin D, 2006, IEEE SOFTWARE, V23, P81, DOI 10.1109/MS.2006.149
   Herbsleb J.D., 2007, GLOB SOFTW ENG FUT S
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hofstede G., 1980, Culture's consequences: International differences in work-related values
   Humphrey W.S., 1998, CROSSTALK J DEFENSE
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Jablokow K., 2010, 5 IEEE INT C GLOB SO
   Jarvenpaa S. L., 1994, Journal of Management Information Systems, V10, P25
   Jones C., 1996, Patterns of software system failure and success
   Karolak D., 1999, Global Software Development: Managing Virtual Teams and Environments
   Kolind J.P., 1997, IFIP TC8 WG8 6 INT W, P305
   Kotlarsky J, 2007, J INF TECHNOL-UK, V22, P161, DOI 10.1057/palgrave.jit.2000084
   Kotlarsky J, 2008, J INF TECHNOL-UK, V23, P228, DOI 10.1057/jit.2008.17
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Lipnack J., 1997, Virtual teams: Reaching across space, time, and organizations with technology
   MOCKUS A, 2001, P 7 INT SOFTW METR S
   Mohrman SA, 1999, TR ORG BEHAV, V6, P63
   Nidiffer KE, 2005, IEEE SOFTWARE, V22, P63, DOI 10.1109/MS.2005.120
   Noll J., 2010, ACM SIGCSE B
   Nurmi N., 2009, P 2009 INT WORKSH IN
   O'Brien J.A., 2002, MANAGEMENT INFORM SY, V5th
   Oshri I, 2007, J STRATEGIC INF SYST, V16, P25, DOI 10.1016/j.jsis.2007.01.001
   Pare G., 1999, 20 INT C INF SYST AS
   Paulish D.J., 2006, INT C GLOB SOFTW ENG
   Paulk M.C., 1993, SEI93TR24
   PAULK MC, 1995, IEEE SOFTWARE, V12, P74, DOI 10.1109/52.363163
   PAULK MC, 1994, CMUSEI94TR12
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Powell A., 2004, Data Base for Advances in Information Systems, V35, P6, DOI 10.1145/968464.968467
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Prikladnicki R, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.48
   Ramasubbu N, 2005, IEEE SOFTWARE, V22, P80, DOI 10.1109/MS.2005.69
   Richardson I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P35, DOI 10.1007/978-3-642-10294-3_2
   Rottman JW, 2006, MIT SLOAN MANAGE REV, V47, P56
   Rutkowski AF, 2002, IEEE T PROF COMMUN, V45, P219, DOI 10.1109/TPC.2002.805147
   Schneider S., 2002, Managing across cultures, V2nd
   Shewhart WA, 1930, BELL SYST TECH J, V9, P364, DOI 10.1002/j.1538-7305.1930.tb00373.x
   Smite D., 2009, INFONOMICS DISTRIBUT
   SMITE D, 2007, THESIS U LATVIA
   Software Engineering Institute, 2007, CMUSEI2007TN006 DEF
   Strader L.B., 1995, SOFTWARE PROCESS IMP, V1, P107
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Toaff S., 2002, Cutter IT Journal, V15, P23
   Yin R.K., 1994, Case study research: Design and Methods, P5
NR 92
TC 61
Z9 71
U1 2
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1175
EP 1191
DI 10.1016/j.infsof.2012.05.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Elberzhager, F
   Münch, J
   Vi, TNN
AF Elberzhager, Frank
   Munch, Jurgen
   Vi Tran Ngoc Nha
TI A systematic mapping study on the combination of static and dynamic
   quality assurance techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Combination; Dynamic quality assurance; Inspection; Static quality
   assurance; Systematic mapping study; Testing
ID EMPIRICAL-EVALUATION; INSPECTIONS
AB Context: A lot of different quality assurance techniques exist to ensure high quality products. However, most often they are applied in isolation. A systematic combination of different static and dynamic quality assurance techniques promises to exploit synergy effects, such as higher defect detection rates or reduced quality assurance costs. However, a systematic overview of such combinations and reported evidence about achieving synergy effects with such kinds of combinations is missing.
   Objective: The main goal of this article is the classification and thematic analysis of existing approaches that combine different static and dynamic quality assurance technique, including reported effects, characteristics, and constraints. The result is an overview of existing approaches and a suitable basis for identifying future research directions.
   Method: A systematic mapping study was performed by two researchers, focusing on four databases with an initial result set of 2498 articles, covering articles published between 1985 and 2010.
   Results: In total, 51 articles were selected and classified according to multiple criteria. The two main dimensions of a combination are integration (i.e., the output of one quality assurance technique is used for the second one) and compilation (i.e., different quality assurance techniques are applied to ensure a common goal, but in isolation). The combination of static and dynamic analyses is one of the most common approaches and usually conducted in an integrated manner. With respect to the combination of inspection and testing techniques, this is done more often in a compiled way than in an integrated way.
   Conclusion: The results show an increased interest in this topic in recent years, especially with respect to the integration of static and dynamic analyses. Inspection and testing techniques are currently mostly performed in an isolated manner. The integration of inspection and testing techniques is a promising research direction for the exploitation of additional synergy effects. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Elberzhager, Frank; Munch, Jurgen] Fraunhofer Inst Expt Software Engn IESE, D-67663 Kaiserslautern, Germany.
   [Munch, Jurgen] Univ Helsinki, FIN-00014 Helsinki, Finland.
   [Vi Tran Ngoc Nha] Univ Kaiserslautern, D-67663 Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft; University of Helsinki; University of
   Kaiserslautern
RP Elberzhager, F (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM frank.elberzhager@iese.fraunhofer.de
RI Münch, Jürgen/ABC-2316-2020
OI Münch, Jürgen/0000-0003-0327-8094
FU Stiftung Rheinland-Pfalz fur Innovation [925]
FX Parts of this work have been funded by the Stiftung Rheinland-Pfalz fur
   Innovation project "Qualitats-KIT" (Grant: 925). We would like to thank
   Sonnhild Namingha for proofreading.
CR Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Andersson C., 2003, Proceedings 2003 International Symposium on Empirical Software Engineering. ISESE 2003, P174
   ANGER FD, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P89, DOI 10.1109/ICSM.1994.336786
   [Anonymous], 1990, IEEE STANDARD 610 12
   [Anonymous], 21 INT S SOFTW REL E
   [Anonymous], P 23 ANN COMP SEC AP
   [Anonymous], 2010, P 2010 ICSE WORKSH S
   [Anonymous], 24 NASA SOFTW ENG WO
   [Anonymous], P 2008 INT C BIOMEDI
   [Anonymous], P 6 JOINT M EUR SOFT
   [Anonymous], HLTH SOC EC RES EC I
   [Anonymous], P CONF INT C COOPI 2
   [Anonymous], SOFTWARE INSPECTIONS
   [Anonymous], 6 EUR SOFTW ENG C
   [Anonymous], P 23 ACM SIGPLAN C O
   [Anonymous], P 2009 ACM S APPL CO
   [Anonymous], 2008, CrossTalk: The Journal of Defense Software Engineering
   [Anonymous], WORKING PAPERS U JYV
   [Anonymous], P 12 INT C ENG COMPL
   [Anonymous], P 7 IEEE INT S WEB S
   [Anonymous], J DEFENSE SOFTWARE E
   [Anonymous], 5 EUR SOFTW ENG C
   [Anonymous], 36 EUR SOFTW ENG ADV
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], P 9 INT C FORM METH
   [Anonymous], INT C SOFTW SYST PRO
   [Anonymous], P AER SOFTW ENG ADV
   [Anonymous], P 1 INT S EMP SOFTW
   [Anonymous], INT C SOFTW ENG FUT
   Artho C, 2005, ELECTRON NOTES THEOR, V131, P3, DOI 10.1016/j.entcs.2005.01.018
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Berling T, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P226, DOI 10.1109/METRIC.2003.1232470
   Burnstein I., 2002, Practical Software Testing
   Chang TF, 1997, P ANN HICSS, P273, DOI 10.1109/HICSS.1997.663184
   Charters S., 2007, GUIDELINES PERFORMIN
   Chebaro O, 2010, LECT NOTES COMPUT SC, V6143, P94, DOI 10.1007/978-3-642-13977-2_9
   Chen J, 2008, LECT NOTES COMPUT SC, V5018, P1, DOI 10.1007/978-3-540-79723-4_1
   Chen QC, 2009, P INT COMP SOFTW APP, P142, DOI 10.1109/COMPSAC.2009.28
   Chen QC, 2009, LECT NOTES COMPUT SC, V5503, P425
   Chen T. Y., 2006, Information Systems Control Journal, V6, P50
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   DUKE EL, 1989, IEEE SOFTWARE, V6, P39, DOI 10.1109/52.28122
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   FRANZ LA, 1994, HEWLETT-PACKARD J, V45, P60
   Godefroid P, 2008, IEEE SOFTWARE, V25, P30, DOI 10.1109/MS.2008.109
   Iturbe F., 1999, Proceedings. SEKE'99. Eleventh International Conference on Software Engineering and Knowledge Engineering, P295
   Jalote P., 2006, P WODA ACM, P11
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Kumar PranithD., 2009, Proceed- ings of the 2Nd India Software Engineering Conference, ISEC '09, P141
   Laitenberger O, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.1998.730887
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanubile Filippo., 2007, Proceedings of the 8th International Conference on Agile Processes in Software Engineering and Extreme Programming. XP'07, P115
   Massicotte P, 2006, LECT NOTES COMPUT SC, V3943, P158
   Nori AV, 2009, LECT NOTES COMPUT SC, V5505, P178, DOI 10.1007/978-3-642-00768-2_17
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2003.1251026
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wiegers K., 2002, PEER REV SOFTWARE
   Winkler D, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P222
   Winkler D, 2010, LECT NOTES COMPUT SC, V6156, P17, DOI 10.1007/978-3-642-13792-1_4
   Wu ZJ, 2008, PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DESIGN, VOL 1, P274, DOI 10.1109/ISCID.2008.89
   Zhang S., 2008, Proceedings of the 8th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering, P77, DOI [10.1145/1512475.1512492, DOI 10.1145/1512475.1512492]
   Zimmerman DM, 2009, INT CONF QUAL SOFTW, P76, DOI 10.1109/QSIC.2009.18
NR 72
TC 53
Z9 60
U1 1
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 1
EP 15
DI 10.1016/j.infsof.2011.06.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500001
DA 2024-07-18
ER

PT J
AU Mammar, A
   Mallouli, W
   Cavalli, A
AF Mammar, Amel
   Mallouli, Wissam
   Cavalli, Ana
TI A systematic approach to integrate common timed security rules within a
   TEFSM-based system specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal methods; Timed extended finite state machines; Nomad language;
   Test generation
AB Context: Formal methods are very useful in the software industry and are becoming of paramount importance in practical engineering techniques. They involve the design and modeling of various system aspects expressed usually through different paradigms. These different formalisms make the verification of global developed systems more difficult.
   Objective: In this paper, we propose to combine two modeling formalisms, in order to express both functional and security timed requirements of a system to obtain all the requirements expressed in a unique formalism.
   Method: First, the system behavior is specified according to its functional requirements using Timed Extended Finite State Machine (TEFSM) formalism. Second, this model is augmented by applying a set of dedicated algorithms to integrate timed security requirements specified in Nomad language. This language is adapted to express security properties such as permissions, prohibitions and obligations with time considerations.
   Results: The proposed algorithms produce a global TEFSM specification of the system that includes both its functional and security timed requirements.
   Conclusion: It is concluded that it is possible to merge several requirement aspects described with different formalisms into a global specification that can be used for several purposes such as code generation, specification correctness proof, model checking or automatic test generation. In this paper, we applied our approach to a France Telecom Travel service to demonstrate its scalability and feasibility. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Mammar, Amel; Cavalli, Ana] Inst Telecom SudParis, CNRS SAMOVAR, Paris, France.
   [Mallouli, Wissam] Montimage EURL, F-75013 Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom SudParis
RP Mammar, A (corresponding author), Inst Telecom SudParis, CNRS SAMOVAR, Paris, France.
EM amel.mammar@it-sudparis.eu; wissam.mallou-li@montimage.com;
   ana.cavalli@it-sudparis.eu
OI cavalli, ana rosa/0000-0003-2586-9071
FU European Community [215995]
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Program (FP 7/2007-203) under the
   Grant agreement number 215995 (http://www.shields-project.eu/).
CR [Anonymous], COMPUTER NETWORKS
   [Anonymous], 2003, Policies for Distributed Systems and Networks, DOI DOI 10.1109/POLICY.2003.1206966
   Barkley J, 1999, FOURTH ACM WORKSHOP ON ROLE-BASED ACCESS CONTROL, PROCEEDINGS, P55, DOI 10.1145/319171.319177
   Benaïssa N, 2007, LECT NOTES COMPUT SC, V4355, P232
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   Bozga M, 2004, LECT NOTES COMPUT SC, V2989, P306
   BOZGA M, 1999, P SDL FOR ELS
   CAVALLI A, 1999, IFIP C P, V156, P41
   Cavalli AR, 2008, IEEE ACM DIS SIM, P315, DOI 10.1109/DS-RT.2008.43
   Cholvy L, 1997, P IEEE S SECUR PRIV, P103, DOI 10.1109/SECPRI.1997.601324
   Cuppens F, 2005, 18th IEEE Computer Security Foundations Workshop, Proceedings, P186, DOI 10.1109/CSFW.2005.20
   DAMIANOU N, 2000, 10 WORKSH PH D STUD
   FERRINI R, SUPPORTING RBAC XACM
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li KQ, 2007, P INT COMP SOFTW APP, P255
   Lobo J, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P291
   MALLOULI W, 2007, 10 IEEE INT S HIGH A, P149, DOI DOI 10.1109/HASE.2007.41
   MALLOULI W, 2008, TIPU08868 TEL SUDPAR
   MALLOULI W, 2008, THESIS TELECOM MANAG
   Mallouli W., 2008, GLOB COMM C GLOBECOM, P2078
   Mallouli W, 2009, ASIA PAC SOFWR ENG, P489, DOI 10.1109/APSEC.2009.52
   Mallouli W, 2007, SACMAT'07: PROCEEDINGS OF THE 12TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P127
   Mallouli W, 2008, IEEE ACM DIS SIM, P173, DOI 10.1109/DS-RT.2008.22
NR 23
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 87
EP 98
DI 10.1016/j.infsof.2011.07.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500006
DA 2024-07-18
ER

PT J
AU Robles, K
   Fraga, A
   Morato, J
   Llorens, J
AF Robles, Karina
   Fraga, Anabel
   Morato, Jorge
   Llorens, Juan
TI Towards an ontology-based retrieval of UML Class Diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information retrieval; Ontologies; Software Reuse; Software Engineering;
   UML Class Diagrams
ID REUSE
AB Context: Software Reuse has always been an important area amongst software companies in order to increase their productivity and the quality of their products, but code reuse is not the only answer for this. Nowadays, reuse techniques proposals include software designs or even software specifications. Therefore, this research focuses on software design, specifically on UML Class Diagrams. A semantic technology has been applied to facilitate the retrieval process for an effective reuse.
   Objective: This research proposes an ontology-based retrieval technique by semantic similarity in order to support effective retrieval process for UML Class Diagrams. Since UML Class Diagrams are a de facto standard in the design stages of a Software Development Process, a good technique is needed to reuse them, i.e. reusing during the design stage instead of just the coding stages.
   Method: An application ontology modeled using UML specifications was designed to compare UML Class Diagram element types. To measure their similarity, a survey was conducted amongst UML experts. Query expansion was improved by a domain ontology supporting the retrieval phase. The calculus of minimal distances in ontologies was solved using a shortest path algorithm.
   Results: The case study shows the domain ontology importance in the UML Class Diagram retrieval process as well as the importance of an element type expansion method, such as an application ontology. A correlation between the query complexity and retrieved elements has been identified, by analyzing results. Finally, a positive Return of Investment (ROI) was estimated using Poulin's Model.
   Conclusion: Because Software Reuse has not to be limited to the coding stage, approaches to reuse design stage must be developed, i.e. UML Class Diagrams reuse. This approach proposes a technique for UML Class Diagrams retrieval, which is one important step towards reuse. Semantic technology combined with information retrieval improves the retrieval results. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Robles, Karina; Fraga, Anabel; Morato, Jorge; Llorens, Juan] Univ Carlos III Madrid, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Fraga, A (corresponding author), Univ Carlos III Madrid, Av Univ 30, Madrid 28911, Spain.
EM afraga@inf.uc3m.es
RI Morato, Jorge/A-5456-2011
OI Morato, Jorge/0000-0002-7530-9753; FRAGA, ANABEL/0000-0001-5837-920X;
   LLORENS, JUAN/0000-0001-7951-6357
CR Ali FM, 2004, INFORM SOFTWARE TECH, V46, P499, DOI 10.1016/S0950-5849(03)00089-2
   [Anonymous], 2005, Ontological foundations for structural conceptual models
   Arango G., 1993, Proceedings Advances in Software Reuse. Selected Papers from the Second International Workshop on Software Reusability (Cat. No.93TH0495-2), P9, DOI 10.1109/ASR.1993.291722
   Bhogal J, 2007, INFORM PROCESS MANAG, V43, P866, DOI 10.1016/j.ipm.2006.09.003
   BRACHMAN RJ, 1983, COMPUTER, V16, P30, DOI 10.1109/MC.1983.1654194
   Bunse C, 1999, LECT NOTES COMPUT SC, V1723, P675
   BUTLER G, 1999, REUSABLE OBJECT ORIE, P19
   CHEN Y, 2004, ISESE 04, P199
   Chung YM, 2004, INFORM PROCESS MANAG, V40, P891, DOI 10.1016/j.ipm.2003.11.003
   Cordi V, 2005, P WOA, P6
   CRANEFIELD S, 1999, IJCAI WORKSH
   DEVANBU P, 1999, P 12 INT C SOFTW ENG, P110
   Djuric D, 2005, J OBJECT TECHNOL, V4, P109, DOI 10.5381/jot.2005.4.1.a3
   DREJEWICZ S, 2007, REQUIREMENTS DRIVEN
   Fraga A., 2010, METHODOLOGY REUSING
   FRAKES W, 1998, P 17 INT C CHIL COMP, V5, P73
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   GOMES P, 2006, LECT NOTES ARTIF INT, P381
   GOMES P, 2002, EUR C ART INT ECAI02
   GOMES P, 2002, AI COMMUN, V17, P13
   GUIZZARDI G, 2004, FDN UML ONTOLOGY REP, P47
   HAPPEL HJ, 2006, P INT WORKSH SEM WEB, P1
   Harrison W, 2000, ACM SIGPLAN NOTICES, V35, P178, DOI 10.1145/354222.353184
   Imran Hazra, 2009, International Journal of Computer Science & Information Technology, V1, P89
   Lassila O., 2001, ROLE FRAME BASED REP
   LESTER NG, 2004, LECT NOTES COMPUTER, V1618, P393
   LIM WC, 2004, MANAGING SOFTWARE RE, P156
   LLORENS J, 2006, ICSR06 INT C SOFTW R
   LU XA, 1995, P 3 TEXT RETR C TREC, P1
   Manning C., 2008, Dans Introduction to information retrieval chapitre 6, P117
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mili A, 1999, IEEE SOFTWARE, V16, P22, DOI 10.1109/52.795098
   MILI H, 1995, IEEE T SOFTWARE ENG, V22
   *MODELDRIVEN, ARCH ECOS SIG
   *MODELDRIVEN, ARCHITECTUREONTOLOGY
   *OBJ MAN GROUP, 2005, UML SUP SPEC V2 0, P137
   Object Management Group, 2005, UN MOD LANG SUP V2 0
   Ockerman JJ, 1999, INT J HUM-COMPUT ST, V51, P865, DOI 10.1006/ijhc.1999.0253
   POOLE JD, 2001, WORKSH MET AD OBJ MO, P1
   Poulin J. S., 1996, Measuring Software Reuse-Principles, Practices and Economic Models
   POULIN JS, J POULIN ROI CALCULA
   Prieto-Diaz R, 1993, AM PROGRAM, V6, P10
   PRIETODIAZ R, 1993, IEEE SOFTWARE, V10, P61, DOI 10.1109/52.210605
   PRIETODIAZ R, 1999, COMMUN ACM, V24, P88
   RADA R, 1989, IEEE T SYSTEMS MAN C, V19
   Ranwez S, 2006, LECT NOTES COMPUT SC, V4278, P1050
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   Shin K, 2004, LECT NOTES COMPUT SC, V3287, P425
   Smialek M, 2010, LECT NOTES COMPUT SC, V5901, P697
   SOLDERITSCH J, 1992, SYST SOFTW ENG S, P1
   TAUTZ C, 1997, ICCBR97 INT C CAS BA
   *W3C, OWL WEB ONT LANG
   WANG S, 2006, ONTOLOGY DEFINITION, P6
   Wielinga B. J., 2001, Proceedings of the First International Conference on Knowledge Capture, P194, DOI 10.1145/500737.500767
   Xu X, 2006, IEEE SYS MAN CYBERN, P3441, DOI 10.1109/ICSMC.2006.384651
   ZHU W, 2006, IEEE INT C IN PRESS, V12
   2009, KREUSE WORKSH KNOWL
NR 57
TC 34
Z9 41
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 72
EP 86
DI 10.1016/j.infsof.2011.07.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500005
DA 2024-07-18
ER

PT J
AU Clear, T
   MacDonell, SG
AF Clear, Tony
   MacDonell, Stephen G.
TI Understanding technology use in global virtual teams: Research
   methodologies and methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Global virtual teams; Research methodology;
   Research method; Interpretive field studies; Technology-use mediation
ID INFORMATION-TECHNOLOGY; EMPIRICAL-RESEARCH; SPECIAL-ISSUE
AB Context: The globalisation of activities associated with software development and use has introduced many challenges in practice, and also (therefore) many for research. While the predominant approach to research in software engineering has followed a positivist science model, this approach may be suboptimal when addressing problems with a dominant social or cultural dimension, such as those frequently encountered when studying work practices in a globally distributed team setting.
   The investigation of such a team reported in this paper provides one example of an alternative approach to research in a global context, through a longitudinal interpretive field study seeking to understand how global virtual teams mediated the use of technology. The study involved a large collective of faculty and support staff plus student members based in the geographically and temporally distant locations of New Zealand, the United States of America and Sweden.
   Objective: Our focus in this paper is on the conduct of research in the context of global software activities, and in particular, as applied to the actions and interactions of global virtual teams. We consider the appropriateness of various methodologies and methods in enabling such issues to be addressed.
   Method: We describe how we undertook a substantial field study of global virtual teams, and highlight how the adopted structuration theory, action research and grounded theory methodologies applied to the analysis of email data, enabled us to deliver effectively against our goals.
   Results: We believe that the approach taken suited a research context in which situated practices were occurring over time in a highly complex domain, ensuring that our results were both strongly grounded and relevant to practice. It has resulted in the generation of substantive theory and techniques that have been adapted and applied on a pilot basis in further field settings.
   Conclusion: We conclude that globally distributed teamwork presents a complex context which demands new research approaches, beyond the limited set customarily applied by software engineering researchers. We advocate experimenting with different research methodologies and methods so that we have a more rounded repertoire to address the most important and relevant issues in global software development research, with the forms of rigour that suit the chosen approach. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Clear, Tony; MacDonell, Stephen G.] AUT Univ, Sch Comp & Math Sci, SERL, Auckland 1142, New Zealand.
C3 Auckland University of Technology
RP MacDonell, SG (corresponding author), AUT Univ, Sch Comp & Math Sci, SERL, Private Bag 92006, Auckland 1142, New Zealand.
EM tony.clear@aut.ac.nz; stephen.macdonell@aut.ac.nz
RI Clear, Tony/F-4003-2011; MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941; NGUYEN,
   BINH/0000-0002-0452-2047; Clear, Tony/0000-0001-6985-5064
CR Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   [Anonymous], 1992, EMERGENCE VS FORCING
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Baskerville R, 2004, MIS QUART, V28, P329
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   BEGEL A, 2008, 3 INT C GLOB SOFTW E, P195
   Bjorn P, 2009, INFORM SYST J, V19, P227, DOI 10.1111/j.1365-2575.2007.00281.x
   CAJANDER A, 2009, 39 ASEE IEEE FRONT E
   Carr W., 1983, BECOMING CRITICAL KN
   Clear T, 2004, COMPUTER SCIENCE EDUCATION RESEARCH, P101
   CLEAR T, 2008, COMPUTING MATH SCI, P1
   CLEAR T, 1999, ED MEDIA 99, P1759
   Clear T, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P63, DOI 10.1145/1352322.1352159
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   DESANCTIS G, 1994, ORGAN SCI, V5, P121, DOI 10.1287/orsc.5.2.121
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fulk J., 1990, ORG COMMUNICATION TE, DOI [10.4135/9781483325385.n6, DOI 10.4135/9781483325385.N6]
   GAMMA E, 1995, DESIGN PATTERNS
   Giddens A., 1976, NEW RULES SOCIOLOGIC
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Gregor S, 2006, MIS QUART, V30, P611
   Gupta A, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1275505.1275507
   Gupta A, 2009, COMMUN ACM, V52, P122, DOI 10.1145/1516046.1516078
   Habermas J., 1972, KNOWLEDGE HUMAN INTE
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kaptelinin V., 2003, P SIGCHI C HUM FACT
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Kock N., 1997, J SYSTEMS INFORM TEC, V7, P1, DOI [10.1108/13287269780000732, DOI 10.1108/13287269780000732]
   MCGRATH J, 1985, VALIDITY RES PROCESS
   McKay J, 2001, INFORMATION TECHNOLOGY EVALUATION METHODS AND MANAGEMENT, P44
   Melrose M.J., 2001, FIELD METHOD, V13, P160
   NEWMAN M, 1992, MIS QUART, V16, P249, DOI 10.2307/249578
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P143, DOI 10.1287/isre.2.2.143
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   ORLIKOWSKI WJ, 1995, ORGAN SCI, V6, P423, DOI 10.1287/orsc.6.4.423
   Orlikowski WJ, 1996, INFORM SYST RES, V7, P63, DOI 10.1287/isre.7.1.63
   PENTLAND B, 1999, 32 ANN HAW INT C SYS
   Poole M.S., 2004, Handbook of information systems research, P206
   POOLE MS, 2008, COMMUNICATION   0325
   SEGAL J, 2005, 2005 WORKSH REAL EV
   Seshasai S, 2007, INF RESOUR MANAG J, V20, P105, DOI 10.4018/irmj.2007100107
   Stubbe M, 2003, DISCOURSE STUD, V5, P351, DOI 10.1177/14614456030053004
   Thomas DM, 2007, COMMUN ACM, V50, P85, DOI 10.1145/1297797.1297802
   Treinen JJ, 2006, IBM SYST J, V45, P773, DOI 10.1147/sj.454.0773
   Wainer J, 2009, INFORM SOFTWARE TECH, V51, P1081, DOI 10.1016/j.infsof.2009.01.002
   Winograd T., 1997, UNDERSTANDING COMPUT
   WIRFSBROCK R, 1993, 3 SMALLT
NR 52
TC 17
Z9 34
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 994
EP 1011
DI 10.1016/j.infsof.2011.01.011
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 795DC
UT WOS:000292950700009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dorofeeva, R
   El-Fakih, K
   Maag, S
   Cavalli, AR
   Yevtushenko, N
AF Dorofeeva, Rita
   El-Fakih, Khaled
   Maag, Stephane
   Cavalli, Ana R.
   Yevtushenko, Nina
TI FSM-based conformance testing methods: A survey annotated with
   experimental evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conformance testing; Protocol testing; Model based testing; Finite state
   machines
ID FINITE-STATE MACHINES; DESIGN
AB The development of test cases is an important issue for testing software, communication protocols and other reactive systems. A number of methods are known for the development of a test suite based on a formal specification given in the form of a finite state machine. In this paper, we overview and experiment with these methods to assess their complexity, applicability, completeness, fault detection capability, length and derivation time of their test suites. The experiments are conducted on randomly generated specifications and on two realistic protocols called the Simple Connection Protocol and the ITU-T V.76 Recommendation. (C) 2010 Elsevier B.V. All rights reserved.
C1 [El-Fakih, Khaled] Amer Univ Sharjah, Coll Engn, Sharjah, U Arab Emirates.
   [Dorofeeva, Rita; Yevtushenko, Nina] Tomsk State Univ, Tomsk 634050, Russia.
   [Maag, Stephane; Cavalli, Ana R.] TELECOM SudParis, CNRS UMR 5157, F-91011 Evry, France.
C3 American University of Sharjah; Tomsk State University; IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom SudParis; Centre
   National de la Recherche Scientifique (CNRS)
RP El-Fakih, K (corresponding author), Amer Univ Sharjah, Coll Engn, POB 2666, Sharjah, U Arab Emirates.
EM drf@kitidis.tsu.ru; kelfakih@aus.edu; Stephane.Maag@it-sudparis.eu;
   Ana.Cavalli@it-sudparis.eu; ninayevtushenko@yahoo.com
RI Yevtushenko, Nina V./R-6494-2016
CR Aho A.V., 1988, P IEEE 8 INT S PROT, P75
   Burdonov I, 1999, LECT NOTES COMPUT SC, V1708, P608
   CHANSON ST, 1993, COMPUT NETWORKS ISDN, V25, P723, DOI 10.1016/0169-7552(93)90045-6
   CHEN WH, 2001, P FORM DESCR TECHN D, P285
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DAHBURA AT, 1988, P IEEE INFOCOM, P71
   Dorofeeva R, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P23, DOI 10.1109/SEFM.2005.17
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   HSIEH EP, 1971, IEEE T COMPUT, VC 20, P1152, DOI 10.1109/T-C.1971.223100
   *ITU T, 1996, ITU T REC V 76 GEN 5
   *ITU T, 2002, AAP290302 ITU T
   *ITU T, 1995, ITU T REC Z 120 ANN
   *ITU T, 1992, ITU T REC Z 100 SPEC
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   KOUFAREVA I, 2002, SER COMPUT SCI, V18, P69
   Lai R, 2002, J SYST SOFTWARE, V62, P21, DOI 10.1016/S0164-1212(01)00132-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LIU F, 1993, THESIS U MONTREAL
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Naik K, 1997, IEEE ACM T NETWORK, V5, P585, DOI 10.1109/90.649519
   Naik K., 2008, SOFTWARE TESTING QUA
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   PETRENKO A, 1991, P 4 INT WORKSH PROT, P83
   Petrenko A, 1993, P IFIP 6 IWPTS FRANC, P363
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SHERIF MH, 1990, AT&T TECH J, V69, P60, DOI 10.1002/j.1538-7305.1990.tb00103.x
   SHEVELKOV V, 1991, THESIS RIGA
   SIDHU DP, 1986, IEEE T COMMUN, V34, P781, DOI 10.1109/TCOM.1986.1096629
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   SIDHU DP, 1988, P SIGCOM, P257
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   VASILEVSKII MP, 1973, FAILURE DIAGNOSIS AU, V4, P98
   VONBOCHMANN G, 1994, P INT S SOFTW TEST A, P109
   Vuong SonT., 1989, PROC 2 IFIP INT WORK, P161
   YANNAKAKIS M, 1995, J COMPUT SYST SCI, V50, P209, DOI 10.1006/jcss.1995.1019
   YAO M, 1994, P INFOCOM
   YEVTUSHENKO N, 1990, AUTOMATIC CONTROL CO, V5
NR 42
TC 98
Z9 114
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1286
EP 1297
DI 10.1016/j.infsof.2010.07.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200003
DA 2024-07-18
ER

PT J
AU Malta, MN
   Valente, MTD
AF Malta, Marcelo Nassau
   de Oliveira Valente, Marco Tullo
TI Object-oriented transformations for extracting aspects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented programming; Refactoring; Software evolution; Program
   transformation
ID PROGRAM TRANSFORMATION; STRATEGIES; CODE
AB In the migration of object-oriented systems towards the aspect technology, after locating fragments of code presenting a crosscutting behavior and before extracting such code to aspects, transformations may be needed in the base program. Such transformations aim to associate crosscutting code to points of the base program that can be captured using the pointcut descriptor model of aspect-oriented languages. In this paper, we present a catalog of object-oriented transformations and demonstrate the importance of such transformations by reporting on a case study involving four systems that have been aspectized using AspectJ. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Malta, Marcelo Nassau; de Oliveira Valente, Marco Tullo] Pontificia Univ Catolica Minas Gerais, Inst Informat, Belo Horizonte, MG, Brazil.
C3 Pontificia Universidade Catolica de Minas Gerais
RP Valente, MTD (corresponding author), Pontificia Univ Catolica Minas Gerais, Inst Informat, Belo Horizonte, MG, Brazil.
EM nassau@pucminas.br; mtov@pucminas.br
OI Valente, Marco Tulio/0000-0002-8180-7548
FU State of Minas Gerais Research Support Foundation (FAPE-MIG)
FX This research was supported by a grant from The State of Minas Gerais
   Research Support Foundation (FAPE-MIG). We thank the anonymous referees
   for making several suggestions that improved the paper. We also thank
   Tarik Melo for reimplementing the logging concern of the Tomcat system
   using aspects.
CR ANBALAGAN P, 2007, 29 INT C SOFTW ENG I
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   BRACHA G, 1990, C OBJ OR PROGR SYST, P303
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   CASTOR F, 2006, 14 INT S FDN SOFTW E, P152
   Ceccato M, 2005, PROG COMPREHEN, P13, DOI 10.1109/WPC.2005.2
   Chung W, 2005, PROC INT CONF SOFTW, P666
   Cole L., 2005, 4 INT C ASP OR SOFTW, P123, DOI DOI 10.1145/1052898.1052909
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GODIL I, 2005, 15 C CTR ADV STUD CO, P83
   Hannemann Jan., 2005, AOSD 05, P135
   HARMAN M, 2004, J AUTOMATED SOFTWARE, V11, P27
   KELLENS A, 2007, T ASPECT ORIENTED SO, V4, P145
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Laddad Ramnivas., 2003, ASPECT ORIENTED REFA
   LIU J, 2006, 28 INT C SOFTW ENG, P112
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro MP, 2006, LECT NOTES COMPUT SC, V3880, P214
   MONTEIRO MP, 2003, 8 JORN ING SOFTW BAS
   MURPHY GC, 2000, 23 INT C SOFTW ENG I, P275
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   ROBILLARD MP, 2005, ECL TECHN EXCH WORKS
   Verbaere M., 2006, 28th International Conference on Software Engineering Proceedings, P172, DOI 10.1145/1134285.1134311
   Visser E, 2005, J SYMB COMPUT, V40, P831, DOI 10.1016/j.jsc.2004.12.011
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   Yuen Isaac, 2007, AOSD WORKSH LINK ASP
   ZHANG C, 2007, 6 INT C ASP OR SOFTW, P226
   ZHANG C, 2004, 19 ACM SIGPLAN C OBJ, P188
NR 31
TC 6
Z9 7
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 138
EP 149
DI 10.1016/j.infsof.2008.02.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500013
OA Green Published
DA 2024-07-18
ER

PT J
AU Bjornson, FO
   Dingsoyr, T
AF Bjornson, Finn Olav
   Dingsoyr, Torgeir
TI Knowledge management in software engineering: A systematic review of
   studied concepts, findings and research methods used
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE software engineering; knowledge management; learning software
   organization; software process improvement; systematic review
ID EXPERIENCE; CREATION; IMPACT; TOOL
AB Software engineering is knowledge-intensive work, and how to manage software engineering knowledge has received much attention. This systematic review identifies empirical studies of knowledge management initiatives in software engineering, and discusses the concepts studied, the major findings, and the research methods used. Seven hundred and sixty-two articles were identified, of which 68 were studies in an industry context. Of these, 29 were empirical studies and 39 reports of lessons learned. More than half of the empirical studies were case studies. The majority of empirical studies relate to technocratic and behavioural aspects of knowledge management, while there are few studies relating to economic, spatial and cartographic approaches. A finding reported across multiple papers was the need to not focus exclusively on explicit knowledge, but also consider tacit knowledge. We also describe implications for research and for practice. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Bjornson, Finn Olav; Dingsoyr, Torgeir] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
   [Dingsoyr, Torgeir] SINTEF Informat & Commun Technol, N-7465 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU); SINTEF
RP Bjornson, FO (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Sem Saelandsvei 7-9, N-7491 Trondheim, Norway.
EM bjornson@idi.ntnu.no; torgeir.dingsoyr@sintef.no
RI Dingsøyr, Torgeir/AAJ-7360-2020; Dingsøyr, Torgeir/J-5862-2012
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X
FU Research Council of Norway [181685/130]
FX We are grateful to Reidar Conradi at the Department of computer and
   Information Science, Norwegian University of Science and Technology, and
   Tore Dyba at SINTEF ICT for comments oil ail earlier version of this
   article. We also thank Chris Wright for proofreading and Useful
   comments. This work was partially funded by the Research Council of
   Norway through the project Evidence-Based Software Engineering
   (181685/130).
CR Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P320, DOI 10.1109/IRI.2004.1431481
   Al-Shehab AJ, 2005, LECT NOTES ARTIF INT, V3782, P145
   Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   ANGKASAPUTRA N, 2002, P 4 INT WORKSH LEARN, P13
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], P ACM SIGSOFT S FDN
   [Anonymous], ORG DEV SERIES
   [Anonymous], WORKING KNOWLEDGE OR
   ARENT J, 2000, P HAW INT C SYST SCI, P105
   ARENT J, 2000, P 2 WORKSH LEARN SOF, P81
   Argote L, 2003, MANAGE SCI, V49, P571, DOI 10.1287/mnsc.49.4.571.14424
   Argyris C., 1990, Overcoming organizational defenses: Facilitating organizational learning
   Aurum A., 2003, Managing Software Engineering Knowledge
   Barros MD, 2004, J SYST SOFTWARE, V70, P21, DOI 10.1016/S0164-1212(02)00155-3
   BASILI V, 1992, P 14 INT C SOFTW ENG, P370
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BASKERVILLE R, 1999, KNOWLEDGE CAPABILITY
   Birk A, 2000, THESIS U KAISERSLAUT
   Bjornson FO, 2005, LECT NOTES ARTIF INT, V3782, P86
   Bjornson FO, 2005, LECT NOTES COMPUT SC, V3547, P245
   BJORNSON FO, 2007, THESIS NORWEGIAN U S
   Brossler P, 1999, P WORKSH LEARN SOFTW, P77
   Buono A., 2005, Challenges and issues in knowledge management
   Chatters B., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P146, DOI 10.1109/ICSM.1999.792598
   Chewar C.M., 2005, P HAW INT C SYST SCI, P256
   Choo C.W., 1998, KNOWING ORG ORG USE
   CHRISTENSEN PH, 2005, CHALLENGES ISSUES KN, P337
   DEALMEIDA R, 2004, P 4 INT C QUAL SOFTW, P162
   Desouza K. C., 2005, Software Process Improvement and Practice, V10, P203, DOI 10.1002/spip.224
   Desouza KC, 2006, J AM SOC INF SCI TEC, V57, P36, DOI 10.1002/asi.20250
   Desouza KC, 2003, COMMUN ACM, V46, P85, DOI 10.1145/777313.777317
   Dierkes M., 2001, HDB ORG LEARNING KNO
   Dingsoyr T, 2005, COMMUN ACM, V48, P96, DOI 10.1145/1101779.1101783
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   Dingsoyr T, 2003, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.2003.1201190
   DINGSOYR T, 2002, THESIS NORWEGIAN U S
   DINGSOYR T, 2002, P 4 INT WORKSH LEARN, P4
   Dingsoyr T, 2008, IEEE T SOFTWARE ENG, V34, P212, DOI 10.1109/TSE.2007.70767
   DORAN HD, 2004, P 6 INT WORKSH LEARN, P137
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   DYBA T, 2001, THESIS NORWEGIAN U S
   DYBA T, 2007, P ESEM MADR SPAIN
   Earl M, 2001, J MANAGE INFORM SYST, V18, P215
   Ebert C, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P339
   Edwards JS, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P5
   Elkjaer B., 2003, BLACKWELL HDB ORG LE
   Fajtak FF, 2005, LECT NOTES ARTIF INT, V3782, P76
   Feher P., 2006, Software Process Improvement and Practice, V11, P251, DOI 10.1002/spip.269
   Feldmann R., 2001, Proceedings of the Third International Workshop on Advances in Learning Software Organizations, P2, DOI [10.1007/3-540-44814-4_1, DOI 10.1007/3-540-44814-4_1]
   FOLKESTAD H, 2004, P 6 INT WORKSH LEARN, P153
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Grabher G, 2006, J ECON GEOGR, V6, P251, DOI 10.1093/jeg/lbi014
   Hansen BH, 2004, LECT NOTES COMPUT SC, V3281, P126
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Hislop D, 2002, J INF TECHNOL-UK, V17, P165, DOI 10.1080/02683960210161230
   Houdek F, 1998, PROC INT CONF SOFTW, P443, DOI 10.1109/ICSE.1998.671602
   HOUDEK F, 1999, P SEKE WORKSH LEARN, P59
   Jalote P, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P361
   JOHANSSON C, 1999, P WORKSH LEARN SOFTW, P69
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Kankanhalli A, 2005, MIS QUART, V29, P113, DOI 10.2307/25148670
   Kautz K., 2001, Journal of Knowledge Management, V5, P349, DOI 10.1108/EUM0000000006532
   Kess P, 2002, INT J PROD ECON, V80, P49, DOI 10.1016/S0925-5273(02)00242-6
   Kettunen P., 2003, IEE Proceedings-Software, V150, P359, DOI 10.1049/ip-sen:20031173
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Koenig S, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P133, DOI 10.1109/SWSTE.2003.1245433
   KOENNECKER A, 1999, P 24 ANN NASA SOFTW
   Kolb D.A., 2000, EXPERIENTIAL LEARNIN
   Kolb D.A., 1996, How organizations learn, P270
   Kurniawati F, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P128, DOI 10.1109/ASWEC.2004.1290465
   KURT JPV, 2003, EXPERIENCE REPORTS P
   Landes D, 1999, INT J HUM-COMPUT ST, V51, P643, DOI 10.1006/ijhc.1999.0280
   Liao SH, 2003, EXPERT SYST APPL, V25, P155, DOI 10.1016/S0957-4174(03)00043-5
   Liebowitz J, 2002, IEEE SOFTWARE, V19, P40, DOI 10.1109/MS.2002.1003451
   Lindvall M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P73
   LINDVALL M, 2001, SOFTWARE TOOLS KNOWL
   LINDVALL M, 2003, P 5 INT WORKSH LEARN, P59
   LINDVALL M, 2001, P 3 INT WORKSH ADV L, P106
   Lyytinen K, 1999, INFORM SYST J, V9, P85, DOI 10.1046/j.1365-2575.1999.00051.x
   Markkula M., 1999, Proceedings. SEKE'99. Eleventh International Conference on Software Engineering and Knowledge Engineering, P20
   MARTINVIVALDI N, 2000, P 2 WORKSH LEARN SOF, P103
   Mathiassen L., 2005, P 38 ANN HAW INT C S, P256
   McDermott R, 1999, CALIF MANAGE REV, V41, P103, DOI 10.2307/41166012
   Melnik G, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P21
   Mohan K., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P1309, DOI 10.1109/HICSS.2002.993995
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Niemelä E, 2005, IEEE T SOFTWARE ENG, V31, P361, DOI 10.1109/TSE.2005.60
   Nonaka I, 1995, KNOWLEDGE CREATING C
   NORBJERG J, 2006, P 8 INT WORKSH LEARN, P9
   OSTRAND TJ, 2000, P 2 WORKSH LEARN SOF, P47
   Polanyi Michael., 1967, The Tacit Dimension, Anchor book
   Ramasubramanian S, 2002, IEEE SOFTWARE, V19, P53, DOI 10.1109/MS.2002.1003455
   Ras E, 2005, J UNIVERS COMPUT SCI, V11, P394
   Ravichandran T, 2003, IEEE T ENG MANAGE, V50, P270, DOI 10.1109/TEM.2003.817278
   Rodriguez OM, 2004, PROCEEDINGS OF THE FIFTH MEXICAN INTERNATIONAL CONFERENCE IN COMPUTER SCIENCE (ENC 2004), P72, DOI 10.1109/ENC.2004.1342591
   ROTHBERGHOFER TR, 2004, P 6 INT WORKSH LEARN, P88
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Rus I., 2001, Knowledge Management in Software Engineering A State-of-the-Art-Report, Data
   Salo O, 2005, LECT NOTES ARTIF INT, V3782, P106
   Scarborough H., 1999, Proceedings of the Seventh European Conference on Information Systems, P668
   Schneider K, 2002, IEEE SOFTWARE, V19, P46, DOI 10.1109/MS.2002.1003453
   Schneider K, 2002, J UNIVERS COMPUT SCI, V8, P570
   Schultze U, 2002, MIS QUART, V26, P213, DOI 10.2307/4132331
   Schwartz D.G., 2006, Encyclopedia of knowledge management
   Scott L., 2003, P 5 INT WORKSH LEARN, P79
   SEGAL J, 2001, P 3 INT WORKSH LEARN, P68
   Senge P. M., 1990, 5 DISCIPLINE ART PRA
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   SKUCE D, 1995, SOFTWARE ENG J, V10, P183, DOI 10.1049/sej.1995.0024
   Stata R., 1996, ORG LEARN, P316
   Sveiby K.E., 1997, The new organisational wealth: Managing measuring knowledge-based assets
   TORRES AH, 2006, P 8 INT WORKSH LEARN, P19
   TRITTMANN R, 2001, P 3 INT WORKSH LEARN, P22
   VANAALST JW, 2001, KNOWLEDGE MANAGEMENT
   Wang KL, 2006, AM J KIDNEY DIS, V48, P990, DOI 10.1053/j.ajkd.2006.08.020
   Ward J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P137, DOI 10.1109/ASWEC.2004.1290466
   Wenger E., 2009, COMMUNITIES PRACTICE
   Yglesias KP, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P156, DOI 10.1109/ICSR.1998.685740
NR 119
TC 177
Z9 199
U1 1
U2 60
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1055
EP 1068
DI 10.1016/j.infsof.2008.03.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 355LA
UT WOS:000259709200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gorschek, T
   Davis, AM
AF Gorschek, Tony
   Davis, Alan M.
TI Requirements engineering: In search of the dependent variables
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Requirements Engineering Conference/12th
   International Workshop on Requirements Engineering - Foundation for
   Software Quality
CY 2006
CL Luxembourg, LUXEMBOURG
SP IEEE
DE requirements engineering; project focus; product focus; dependent
   variables; requirements process; product management; project management;
   process improvement; organizational perspective
AB When software development teams modify their requirements engineering process as an independent variable, they often examine the implications of these process changes by assessing the quality of the products of the requirements engineering process, e.g., a software requirements specification (SRS). Using the quality of the SRS as the dependent variable is flawed. As an alternative, this paper presents a framework of dependent variables that serves as a full range for requirements engineering quality assessment. In this framework, the quality of the SRS itself is just the first level. Other higher, and more significant levels, include whether the project was successful and whether the resulting product was successful. And still higher levels include whether or not the company was successful and whether there was a positive or negative impact on society as a whole. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Gorschek, Tony] Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, SE-37225 Ronneby, Sweden.
   [Davis, Alan M.] Univ Colorado, Coll Business, Colorado Springs, CO 80933 USA.
C3 Blekinge Institute Technology; University of Colorado System; University
   of Colorado at Colorado Springs
RP Gorschek, T (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, SE-37225 Ronneby, Sweden.
EM tony.gorschek@bth.se; adavis@uccs.edu
RI Gorschek, Tony/E-3445-2013
CR AGUSA K, 1979, P 12 HAW INT C SYST
   Ahern D.M., 2003, CMMI DISTILLED PRACT
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   ALFORD M, 1976, P S COMP SOFTW ENG N, P97
   [Anonymous], TR1519 U MAR
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], PRODUCT MANAGEMENT
   [Anonymous], P 8 INT WORKSH REQ E
   [Anonymous], 2001, PORTFOLIO MANAGEMENT
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   [Anonymous], 2001, CMUSEI2001HB001, P245
   Basili V., 1981, P 5 INT C SOFTWARE E, P314
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BLEISTEIN S, 2004, LECT NOTES COMPUTER, P617
   Bleistein SJ, 2006, J SYST SOFTWARE, V79, P362, DOI 10.1016/j.jss.2005.04.033
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   *CMMI PDT, 2002, CMMI SYST ENG SOFTW
   Damian D, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P40, DOI 10.1109/ISESE.2003.1237963
   Davies TF, 2001, THYROID, V11, P1, DOI 10.1089/10507250150500595
   Davis A., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P141, DOI 10.1109/METRIC.1993.263792
   DAVIS A, 1998, IEEE T SOFTWARE ENG, V14, P1453
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   DAVIS AM, 1988, IEEE T SOFTWARE ENG, V14, P1453, DOI 10.1109/32.6190
   ElEmam K, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P214, DOI 10.1109/ICSM.1997.624248
   ELEMAM K, 1998, THEORY PRACTICE SOFT
   ELEMAM KE, 1999, ELEMENTS SOFTWARE PR
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   FORSBERG K, 1997, SOFTWARE REQUIREMENT, P44
   Gervasi, 2002, P INT WORKSH REQ ENG, P155
   Gorchels L., 2000, The product manager's handbook, the complete product management resource, V2nd
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2003, P 9 INT WORKSH REQ E, P101
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Hill N., 1999, How to measure customer satisfaction
   HOH I, 2001, P 5 IEEE INT S REQ E, P312
   Hunter A, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P78, DOI 10.1109/ISRE.1997.566844
   IEEE, 1984, 8301984 IEEE
   Jirotka M., 1994, Requirements Engineering: Social and Technical Issues
   Jones C., 1997, APPL SOFTWARE MEASUR
   KARLSSON L, 2004, P 8 INT C EMP ASS SO, P145
   KARLSSON L, 2003, P 9 INT WORKSH REQ E, P47
   Kautz K., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P626, DOI 10.1109/ICSE.2000.870456
   Kotler P., 2002, PRINCIPLES MARKETING, V3rd
   Kotler P.Armstrong G., 2001, PRINCIPLES MARKETING
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kovitz B, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P213
   Laitenberger O, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P97, DOI 10.1023/A:1020519222014
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   LAM W, 1999, P 5 INT WORKSH REQ E, P19
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Mintzberg H., 2009, STRATEGY SAFARI GUID, V2nd
   Perloff J., 2004, MICROECONOMICS
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Rakitin StevenR., 2001, ART H COMP SCI LIBR, V2nd
   REDLING TJ, 2003, P 22 DIG AV SYST C I
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   ROSENBERG N, 1982, BLACK BOX TECHNOLOGY
   Ross S.A., 2001, Essentials of corporate finance, V3rd
   Saaty T., 2001, METHODS CONCEPTS APP
   Sasaki T, 2001, TECHNOLOGY MANAGEMENT IN THE KNOWLEDGE ERA, P481, DOI 10.1109/PICMET.2001.952195
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Scott L, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P182, DOI 10.1109/ASWEC.2001.948512
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Simmons E, 2004, IEEE SOFTWARE, V21, P86, DOI 10.1109/MS.2004.25
   Sommerville I., 1999, REQUIREMENTS ENG GOO
   Standish_Group, 1995, CHAOS REP
   STERN CW, 1998, BOSTON CONSULTING GR
   TEECE TJ, 2000, MANAGING INTELLECTUA
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Wieringa R, 2004, IEEE SOFTWARE, V21, P16, DOI 10.1109/MS.2004.1270756
   YUE K, 1987, P 4 INT WORKSH SOFTW
   Zairi M., 1999, Best Practice. Process Innovation Management
   ZAVE P, 1981, P 5 IEEE INT C SOFTW, P295
NR 76
TC 40
Z9 45
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 67
EP 75
DI 10.1016/j.infsof.2007.10.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 248ZT
UT WOS:000252196700009
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Kampenes, VB
   Dybå, T
   Hannay, JE
   Sjoberg, DIK
AF Kampenes, Vigdis By
   Dyba, Tore
   Hannay, Jo E.
   Sjoberg, Dag I. K.
TI A systematic review of effect size in software engineering experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE empirical software engineering; controlled experiments; effect size;
   statistical significance; practical importance
ID METAANALYSIS; GUIDELINES
AB An effect size quantifies the effects of an experimental treatment. Conclusions drawn from hypothesis testing results might be erroneous if effect sizes are not judged in addition to statistical significance. This paper reports a systematic review of 92 controlled experiments published in 12 major software engineering journals and conference proceedings in the decade 1993-2002. The review investigates the practice of effect size reporting, summarizes standardized effect sizes detected in the experiments, discusses the results and gives advice for improvements. Standardized and/or unstandardized effect sizes were reported in 29% of the experiments. Interpretations of the effect sizes in terms of practical importance were not discussed beyond references to standard conventions. The standardized effect sizes computed from the reviewed experiments were equal to observations in psychology studies and slightly larger than standard conventions in behavioral science. (C) 2007 Elsevier B.V. All rights reserved.
C1 Dept Software Engn, Simula Res Lab, NO-1325 Lysaker, Norway.
   Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   SINTEF ICT, NO-7465 Trondheim, Norway.
C3 University of Oslo; SINTEF
RP Kampenes, VB (corresponding author), Dept Software Engn, Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM vigdis@simula.no; tore.dyba@sintef.no; johannay@simula.no;
   dagsj@simula.no
CR Altman DG, 2001, ANN INTERN MED, V134, P663, DOI 10.7326/0003-4819-134-8-200104170-00012
   [Anonymous], ES COMPUTER PROGRAM
   [Anonymous], 2005, EFFECT SIZE RES BROA
   [Anonymous], 1990, Design sensitivity: Statistical power for experimental research
   Breaugh JA, 2003, J MANAGE, V29, P79, DOI 10.1016/S0149-2063(02)00221-0
   Cochran W. G., 1937, J. Roy. Statist. Soc. 1937., (Suppl.), V4, P102
   COHEN J, 1990, AM PSYCHOL, V45, P1304, DOI 10.1037/0003-066X.45.12.1304
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   COHEN J, 1965, HDB CLIN PSYCH
   Cohen J., 1988, STAT POWER ANAL BEHA
   COOPER HM, 1981, J PERS SOC PSYCHOL, V41, P1013, DOI 10.1037/0022-3514.41.5.1013
   CORDRAY DS, 1983, EVALUATION STUDIES R, V8, P91
   Cortina J.M., 2000, EFFECT SIZE ANOVA DE
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Fidler F, 2005, J CONSULT CLIN PSYCH, V73, P136, DOI 10.1037/0022-006X.73.1.136
   HASSELBLAD V, 1995, PSYCHOL BULL, V117, P167, DOI 10.1037/0033-2909.117.1.167
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   HEDGES LV, 1984, PSYCHOL BULL, V96, P573, DOI 10.1037/0033-2909.96.3.573
   HILL CR, 2004, HIGHER ED HDB THEORY, P175
   Keselman HJ, 1998, REV EDUC RES, V68, P350, DOI 10.2307/1170601
   Kirk RE, 1996, EDUC PSYCHOL MEAS, V56, P746, DOI 10.1177/0013164496056005002
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kline RexB., 2004, SIGNIFICANCE TESTING
   KRAEMER HC, 1982, PSYCHOL BULL, V91, P404, DOI 10.1037/0033-2909.91.2.404
   KRAUTH J, 1983, PSYCHOL BULL, V94, P190, DOI 10.1037/0033-2909.94.1.190
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   NOURI H, 1995, J MANAGE, V21, P801, DOI 10.1177/014920639502100411
   Olejnik S, 2000, CONTEMP EDUC PSYCHOL, V25, P241, DOI 10.1006/ceps.2000.1040
   Olejnik S, 2003, PSYCHOL METHODS, V8, P434, DOI 10.1037/1082-989X.8.4.434
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Rosenthal R., 2000, Contrasts and effect sizes in behavioral research: A correlational approach
   Rosenthal R, 2000, VALIDITY SOCIAL EXPT, P121
   Schmidt F. L., 2004, Methods of metaanalysis: Correcting error and bias in research findings, V2nd
   SECHREST L, 1981, REANALYZING PROGRAM
   SHADISH WR, 1999, MANUAL ES COMPUTER P
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smith M.L., 1980, BENEFITS PSYCHOTHERA
   Thompson B, 2002, J COUNS DEV, V80, P64, DOI 10.1002/j.1556-6678.2002.tb00167.x
   Trusty J, 2004, J COUNS DEV, V82, P107, DOI 10.1002/j.1556-6678.2004.tb00291.x
   Vacha-Haase T, 2000, THEOR PSYCHOL, V10, P413, DOI 10.1177/0959354300103006
   Vacha-Haase T, 2004, J COUNS PSYCHOL, V51, P473, DOI 10.1037/0022-0167.51.4.473
   Wilkinson L, 1999, AM PSYCHOL, V54, P594, DOI 10.1037/0003-066X.54.8.594
NR 45
TC 224
Z9 235
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1073
EP 1086
DI 10.1016/j.infsof.2007.02.015
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100001
DA 2024-07-18
ER

PT J
AU Serrano, M
   Trujillo, J
   Calero, C
   Piattini, M
AF Serrano, Manuel
   Trujillo, Juan
   Calero, Coral
   Piattini, Mario
TI Metrics for data warehouse conceptual models understandability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data warehouse quality; data warehouse metrics; metric validation; data
   warehouse conceptual modelling
AB Due to the principal role of Data warehouses (DW) in making strategy decisions, data warehouse quality is crucial for organizations. Therefore, we should use methods, models, techniques and tools to help us in designing and maintaining high quality DWs. In the last years, there have been several approaches to design DWs from the conceptual, logical and physical perspectives. However, from our point of view. none of them provides a set of empirically validated metrics (objective indicators) to help the designer in accomplishing an outstanding model that guarantees the quality of the DW. In this paper, we firstly summarise the set of metrics we have defined to measure the understandability (a quality subcharacteristic) of conceptual models for DWs, and present their theoretical validation to assure their correct definition. Then, we focus on deeply describing the empirical validation process we have carried out through a family of experiments performed by students, professionals and experts in DWs. This family of experiments is a very important aspect in the process of validating metrics as it is widely accepted that only after performing I family of experiments, it is possible to build up the cumulative knowledge to extract useful measurement conclusions to be applied in practice. Our whole empirical process showed us that several of the proposed metrics seems to be practical indicators of the understandability of conceptual models for DWs. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   Univ Alicante, Dept Lenguajes & Sistemas Informat, E-03080 Alicante, Spain.
C3 Universidad de Castilla-La Mancha; Universitat d'Alacant
RP Serrano, M (corresponding author), Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM Manuel.Serrano@uclm.es; jtrujillo@dlsi.ua.es; Coral.Calero@uclm.es;
   Mario.Piattini@uclm.es
RI Serrano, Manuel/N-8266-2013; Piattini, Mario/F-6271-2013; Trujillo,
   Juan/L-7079-2014; Calero, Coral/D-4319-2011
OI Serrano, Manuel/0000-0003-0962-5659; Piattini,
   Mario/0000-0002-7212-8279; Trujillo, Juan/0000-0003-0139-6724; Calero,
   Coral/0000-0003-0728-4176
CR Abelló A, 2002, IDEAS 2002: INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P172, DOI 10.1109/IDEAS.2002.1029670
   ABELLO A, 2001, 12 INT C DAT EXP SYS
   ABREU FBE, 1994, 4 INT C SOFTW QUAL M
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], OMG UN MOD LANG SPEC
   [Anonymous], 2003, BUILDING DATA WAREHO
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 1998, 10611998 IEEE
   [Anonymous], 1995, ISERN9503
   [Anonymous], CAP MAT MOD INT CMMI
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Blaschka M, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P198, DOI 10.1109/DEXA.1998.707403
   BRIAND L, 1998, COMPREHENSIVE INVEST
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   CALERO C, 2001, 3 INT C ENT INF SYST, P779
   CALERO C, 2001, DEFINITION SET METRI
   Cantone G, 2000, INT J SOFTW ENG KNOW, V10, P605, DOI 10.1142/S0218194000000328
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   EICK CF, 1991, PROC INT CONF VERY L, P25
   ENGLISH L, 1996, INFORMATION QUALITY
   Flood R.L., 1993, DEALING COMPLEXITY I
   Genero M., 2002, Defining and Validating Metrics for Conceptual Models
   GENERO M, 2001, 13 INT C ADV INF SYS, P388
   Golfarelli M, 1998, INT J COOP INF SYST, V7, P215, DOI 10.1142/S0218843098000118
   GOLFARELLI M, 1998, 1 ACM INT WORKSH DAT, P3
   GRAY R, 1991, BT TECHNOLOGY, V9
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   HUSEMANN B., 2000, Workshop on Design and Management of Data Warehouses, P3
   *ISO IEC, 2002, 15939 ISOIEC
   *ISO IEC, 2004, 90003 ISOIEC
   *ISO IEC, 1998, 15504TR2 ISOIEC 2
   Jarke M., 2002, Fundamentals of Data Warehouses
   JEUSFELD M, 1998, 17 INT C CONC MOD ER
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kesh S, 1995, INFORM SOFTWARE TECH, V37, P681, DOI 10.1016/0950-5849(96)81745-9
   Kimbal Ralph e., 2002, The Data Warehouse Toolkit: The Complete Guide to Dimesional Modeling
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klir G.J., 2003, ARCHITECTURE SYSTEMS, V2nd
   Lechtenbörger J, 2003, INFORM SYST, V28, P415, DOI 10.1016/S0306-4379(02)00024-8
   Lehner W, 1998, TENTH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT - PROCEEDINGS, P63, DOI 10.1109/SSDM.1998.688112
   Lujan-Mora S., 2002, PROC 5 INT C UNIFIED, P290, DOI [10.1007/3-540-45800-X_23, DOI 10.1007/3-540-45800-X_23]
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGarry John., 2002, Practical Software Measurement: Objective Information for Decision Makers
   MOODY D, 1998, 17 INT C CONC MOD ER, P213
   Pfleeger S.L., 2001, SIGSOFT Softw. Eng. Notes., V26, P16, DOI [10.1145/505532.505535, DOI 10.1145/505532.505535]
   Poels G., 1999, DTEW9937 KATH U LEUV, P46
   Sapia Carsten., 1999, P INT WORKSHOP DESIG, P1
   Serrano M., 2002, IEE Proceedings-Software, V149, P161, DOI 10.1049/ip-sen:20020697
   Serrano M, 2004, DEFINITION SET METRI
   SERRANO M, 2004, 4 ASERC WORKSH QUANT
   SERRANO M, 2004, 16 INT C ADV INF SYS, P506
   SISAID S, 2003, ER 2003 WORKSH, P140
   Suppes P., 1989, Foundations of measurement, VII.
   Trujillo J, 2001, COMPUTER, V34, P66, DOI 10.1109/2.970579
   Tryfona N., 1999, Proceeding of the Second International Workshop on Data Warehousing and OLAP (DOLAP99), P3
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Vassiliadis P, 2000, DATA WAREHOUSE MODEL
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   WHITEMIRE S, 1997, OBJECT ORIENTED DESI
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zuse Horst., 1998, A framework of software measurement
NR 65
TC 53
Z9 55
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 851
EP 870
DI 10.1016/j.infsof.2006.09.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300004
DA 2024-07-18
ER

PT J
AU Olumofin, FG
   Misic, VB
AF Olumofin, Femi G.
   Misic, Vojislav B.
TI A holistic architecture assessment method for software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 5th Working IEEE/IFIP Conference on Software Architecture (WISCA 2005)
CY NOV 06-10, 2005
CL Pittsburgh, PA
SP IEEE Comp Soc TCSE, IEEE Comp Soc, IFIP WG 2 10 Software Architecture, Reengn Forum, Bosch, Nokia, Philips Med Syst, Carnegie Mellon Univ, Software Engn Inst, Siemens
DE software product line architectures; software architecture assessment;
   Architecture Tradeoff Analysis Method (ATAM)
AB The success of architecture-centric development of software product lines is critically dependent upon the availability of suitable architecture assessment methods. While a number of architecture assessment methods are available and some of them have been widely used in the process of evaluating single product architectures, none of them is equipped to deal with the main challenges of product line development. In this paper we present an adaptation of the Architecture Tradeoff Analysis Method (ATAM) for the task of assessing product line architectures. The new method, labeled Holistic Product Line Architecture Assessment (HoPLAA), uses a holistic approach that focuses on risks and quality attribute tradeoffs - not only for the common product line architecture, but for the individual product architectures as well. In addition, it prescribes a qualitative analytical treatment of variation points using scenarios. The use of the new method is illustrated through a case study. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 University of Manitoba
RP Misic, VB (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
EM femigolu@cs.umanitoba.ca; vmisic@ca.umanitoba.ca
CR [Anonymous], SOFTWARE ARCHITECTUR
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   AUERSWALD M, 2002, 4 INT WORKSH SOFTW P, P83
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   BARBACCI M, 2003, CMUSEI2003TN012
   BARBAR MA, 2004, P 11 AS PAC SOFTW EN, P600
   BAYER J, 2000, 03800E IESE
   Boehm BW., 1981, Software Engineering Economics
   BOUCKE N, 2005, 431 CW U LEUV DEPT C
   Clements P., 2002, Software product lines
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   DeBaud J.-M., 1998, Work. Softw. Archit, P25
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DOBRICA L, 2000, VTTPUBS427 VTT EL
   DOLAN TJ, 2002, THESIS EINDHOVEN U T
   Etxeberria L, 2005, LECT NOTES COMPUT SC, V3714, P174
   FERBER S, 2002, 4 INT WORKSH SOFTW P, P364
   Gannod G. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P548, DOI 10.1109/ICSE.2000.870447
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Graaf B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P354, DOI 10.1109/CSMR.2005.28
   HALLSTEINSEN S, 2000, 2000 INT WORKSH COMP
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Jones L., 2001, CMUSEI2001TN022
   Kazman R, 2005, SOFTWARE QUAL J, V13, P329, DOI 10.1007/s11219-005-4250-1
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kazman Rick., 2002, Making Architecture Design Decisions: An Economic Approach
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   Niemelä E, 2004, LECT NOTES COMPUT SC, V3154, P130
   Nord R., 2003, Integrating the architecture tradeoff analaysis method (ATAM) with the cost benefit analysis method (CBAM), V1st
   OLUMOFIN FG, 2005, P 1 INT WORKSH REENG
   OLUMOFIN FG, 2005, P 5 WORK IEEE IFIP C, P45
   PACCARI A, 2002, P 24 INT C SOFTW ENG, P285
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Riva C, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P161, DOI 10.1109/IWPSE.2003.1231223
   Smith D, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P85, DOI 10.1109/WSE.2003.1234012
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   Thompson JM, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P56
   *THOUGHTWORKS, CAS STUD FIN SERV AT
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
NR 41
TC 16
Z9 18
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 309
EP 323
DI 10.1016/j.infsof.2006.05.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 149TB
UT WOS:000245168500001
DA 2024-07-18
ER

PT J
AU Tuya, J
   Suarez-Cabal, MJ
   de la Riva, C
AF Tuya, Javier
   Suarez-Cabal, Ma Jose
   de la Riva, Claudio
TI Mutating database queries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software testing; database testing; SQL testing; fault-based testing;
   mutation testing; test adequacy criteria
ID FAULT CLASSES; PERFORMANCE; INFORMATION; COMPLEXITY
AB A set of mutation operators for SQL queries that retrieve information from a database is developed and tested against a set of queries drawn from the NIST SQL Conformance Test Suite. The mutation operators cover a wide spectrum of SQL features, including the handling of null values. Additional experiments are performed to explore whether the cost of executing mutants can be reduced using selective mutation or the test suite size can be reduced by using an appropriate ordering of the mutants. The SQL mutation approach can be helpful in assessing the adequacy of database test cases and their development, and as a tool for systematically injecting faults in order to compare different database testing techniques. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Oviedo, Dept Comp Sci, Gijon 33204, Spain.
C3 University of Oviedo
RP Tuya, J (corresponding author), Univ Oviedo, Dept Comp Sci, Campus Viesques S-N, Gijon 33204, Spain.
EM tuya@uniovi.es
RI Suarez-Cabal, Maria Jose/E-8453-2016; Tuya, Javier/L-6850-2014; Riva
   Alvarez, Claudio de la/L-5014-2014
OI Suarez-Cabal, Maria Jose/0000-0001-8262-2871; Tuya,
   Javier/0000-0002-1091-934X; Riva Alvarez, Claudio de
   la/0000-0001-5592-9683
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 1979, 1979 ACM SIGMOD INT, DOI DOI 10.1145/582095.582123
   Borthick A. F., 2001, International Journal of Accounting Information Systems, V2, P195, DOI 10.1016/S1467-0895(01)00023-9
   Borthick AF, 2001, DECIS SUPPORT SYST, V32, P3, DOI 10.1016/S0167-9236(01)00097-5
   Bowen P. L, 2002, INT J ACCOUNTING INF, V3, P255, DOI DOI 10.1016/S1467-0895(02)00070-2
   Brass S, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P197
   Brass S, 2006, J SYST SOFTWARE, V79, P630, DOI 10.1016/j.jss.2005.06.028
   CHAN HC, 1993, MIS QUART, V17, P441, DOI 10.2307/249587
   CHAN HC, 2003, P 2 ANN WORKSH HCI R, P12
   Chan M.Y., 1999, Proceedings of the 2nd International Symposium on Cooperative Database Systems for Advanced Applications, P363
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P187
   Chays D, 2004, SOFTW TEST VERIF REL, V14, P17, DOI 10.1002/stvr.286
   DAVIES RA, 2000, P 1 INT WORKSH AUT P, P15
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DENG Y, 2004, ANAL VERIFICATION WE, P1
   Deng YT, 2005, PROC INT CONF SOFTW, P78, DOI 10.1145/1062455.1062486
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Haraty R. A., 2002, Journal of Database Management, V13, P31, DOI 10.4018/jdm.2002040103
   IMIELINSKI T, 1984, J ACM, V31, P761, DOI 10.1145/1634.1886
   *INT STAND ORG, 90751992 ISO IEC
   KAPFHAMMER GM, 2003, P 9 EUR SOFTW ENG C, P98
   KINGWELL R, 1999, AUSTR AGRIBUSINESS R, V7, P1
   KLEIN HJ, 1994, ACM SIGMOD RECORD, V23, P14
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Liao CC, 2000, INT J HUM-COMPUT ST, V52, P831, DOI 10.1006/ijhc.1999.0358
   LU H, 1993, ACM SIGMOD RECORD, V22, P60
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mannila Heikki, 1986, P 5 ACM SIGACTSIGMOD, P217
   Mansour N, 2006, INFORM SOFTWARE TECH, V48, P31, DOI 10.1016/j.infsof.2005.02.007
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   *NAT I STAND TECHN, CONF TEST SUIT SOFTW
   OFFUT AJ, 2004, WORKSH TEST AN VER W, P1
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 2000, MUTATION 2000 MUTATI, P45
   Okun V, 2004, INFORM SOFTWARE TECH, V46, P525, DOI 10.1016/j.infsof.2003.10.003
   PONIGHAUS R, 1995, P 6 INT C INF SYST M, V1006, P75
   REISNER P, 1977, IEEE T SOFTWARE ENG, V3, P218, DOI 10.1109/TSE.1977.231131
   Robbert M. A., 1991, Proceedings of the 1991 ACM SIGSMALL/PC Symposium on Small Systems, P100, DOI 10.1145/111048.111061
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 2003, IEEE SOFTWARE, V20, P74, DOI 10.1109/MS.2003.1231157
   Siau KL, 2004, IEEE T SYST MAN CY A, V34, P276, DOI 10.1109/TSMCA.2003.820581
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   SUAREZCABAL MJ, 2004, P 12 ACM SIGSOFT INT, P253
   Sullivan J, 1997, COMPUTER, V30, P103, DOI 10.1109/2.587557
   TSAI WT, 1990, IEEE T SOFTWARE ENG, V16, P316, DOI 10.1109/32.48939
   WILLMOR D, 2005, P IEEE INT C SOFTW M
   Willmor D., 2005, P 3 UK SOFTW TEST RE
   Willmor David, 2006, P 28 INT C SOFTW ENG
   WOODWARD M, 2001, SOFTWARE FOCUS, V2, P93
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Wu X., 2003, Proceedings of the ACM Workshop on Privacy in Electronic Society, P118
   Zhang B, 2001, P INT COMP SOFTW APP, P161, DOI 10.1109/CMPSAC.2001.960612
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 59
TC 62
Z9 75
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 398
EP 417
DI 10.1016/j.infsof.2006.06.009
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Han, JY
   Liang, ZP
   Qian, G
AF Han, Jing Yu
   Liang, Zuo Peng
   Qian, Gang
TI A multiple-depth structural index for branching query
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; structural index; query optimization; marginal gain
AB XML structural index, which acts as a schema, plays an important role in XML query optimization and formulation. To provide a reasonable structural index for branching path query under space constraint, we propose an adaptive index of multiple local branching depths and multiple local bisimilarities, which is constructed by maximizing marginal gain for given query load. It cannot only give good support to branching path queries but also have much smaller size compared with that of same sort of index. Detailed experiments have shown that the index is effective and efficient for XML branching path query. (c) 2006 Elsevier B.V. All rights reserved.
C1 Southeast Univ, Dept Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
C3 Southeast University - China
RP Han, JY (corresponding author), Southeast Univ, Dept Comp Sci & Engn, Si Pai Lou 2, Nanjing, Jiangsu, Peoples R China.
EM hjy3789759@163.com
CR Bruno N., 2002, P 2002 ACM SIGMOD IN, P310, DOI DOI 10.1145/564691.564727
   Buneman P., 2003, P 29 INT C VER LARG, P141
   Cooper B. F., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P341
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   He H, 2004, PROC INT CONF DATA, P683, DOI 10.1109/ICDE.2004.1320037
   Kaushik R, 2002, PROC INT CONF DATA, P129, DOI 10.1109/ICDE.2002.994703
   KAUSHIK R, 2002, P 2002 ACM SIGMOD IN, P133
   LI Q, 2001, P 27 INT C VER LARG, P361
   Liefke Hartmut., 2000, P 2000 ACM SIGMOD IN, P153
   MILO T, 1999, P 7 INT C DAT THEOR, P277
   Nestorov S, 1997, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.1997.581741
   Peng P, 2003, SICE 2003 ANNUAL CONFERENCE, VOLS 1-3, P134
   RAMANAN P, 2003, P 29 INT C VER LARG, P165
   ZHANG C, 2001, P ACM SIGMOD INT C M, P425, DOI DOI 10.1145/375663.375722
NR 14
TC 3
Z9 4
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 928
EP 936
DI 10.1016/j.infsof.2005.12.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500014
DA 2024-07-18
ER

PT J
AU Kitchenham, BA
   Pickard, L
   Linkman, S
   Jones, P
AF Kitchenham, BA
   Pickard, L
   Linkman, S
   Jones, P
TI A framework for evaluating a software bidding model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE evaluation framework; evaluation criteria; software bidding model;
   influence diagrams; evaluation process
AB This paper discusses the issues involved in evaluating a software bidding model. We found it difficult to assess the appropriateness of any model evaluation activities without a baseline or standard against which to assess them. This paper describes our attempt to construct such a baseline. We reviewed evaluation criteria used to assess cost models and an evaluation framework that was intended to assess the quality of requirements models. We developed an extended evaluation framework and an associated evaluation process that will be used to evaluate our bidding model. Furthermore, we suggest the evaluation framework might be suitable for evaluating other models derived from expert-opinion based influence diagrams. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Keele, Dept Comp Sci, Software Engn Grp, Stoke On Trent ST5 5BG, Staffs, England.
C3 Keele University
RP Univ Keele, Dept Comp Sci, Software Engn Grp, Keele Village, Stoke On Trent ST5 5BG, Staffs, England.
EM barbara@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   BERRY M, 2001, IEEE 7 INT SOFTW MET, P222
   BERRY M, 2001, EV ASS SOFTW ENG EAS
   Boehm BW., 1981, Software Engineering Economics
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Jeffery R., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P28, DOI 10.1109/METRIC.1993.263803
   KITCHENHAM B, 2001, TR0103 KEEL U
   KITCHENHAM B, 2003, IEEE T SOFTWARE ENG, V29, P1
   KOLLER G, 2000, RISK MODELLING DETER
   KROGSTIE J, 2000, INFORMATION SYSTEMS
   KROSTIE J, 1998, ACM SIGSOFT NOTES, V23, P86
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   PICKARD L, 2000, TRSE0003 KEEL U DEP
NR 14
TC 14
Z9 17
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2005
VL 47
IS 11
BP 747
EP 760
DI 10.1016/j.infsof.2004.05.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 954ZR
UT WOS:000231194700004
OA hybrid
DA 2024-07-18
ER

PT J
AU Hassan, AE
   Holt, RC
AF Hassan, AE
   Holt, RC
TI A lightweight approach for migrating web frameworks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE framework; Amazon; water transformations
AB Web application development frameworks, like the Java Server Pages framework (JSP), provide web applications with essential functions such as maintaining state information across the application and access control. In the fast paced world of web applications, new frameworks are introduced and old ones are updated frequently. A framework is chosen during the initial phases of the project. Hence, changing it to match the new requirements and demands is a cumbersome task.
   We propose an approach (based on Water Transformations) to migrate web applications between various web development frameworks. This migration process preserves the structure of the code and the location of comments to facilitate future manual maintenance of the migrated code. Consequently, developers can move their applications to the framework that meets their current needs instead of being locked into their initial development framework. We give an example of using our approach to migrate a web application written using the Active Server Pages (ASP) framework to the Netscape Server Pages (NSP) framework. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ Waterloo, Dept Comp Sci, SWAG, Waterloo, ON, Canada.
C3 University of Waterloo
RP Univ Waterloo, Dept Comp Sci, SWAG, Waterloo, ON, Canada.
EM aeehassa@plg.uwaterloo.ca; holt@plg.uwaterloo.ca
CR *ASP2JSP, ASP JSP CONV
   Cimitile A, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P59, DOI 10.1109/WCRE.1998.723176
   Conallen J., 1999, BUILDING WEB APPL UM
   CORDY J, 2002, J INFORMATION SOFTWA
   Cordy JR, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P168, DOI 10.1109/SCAM.2001.972678
   CORP O, 2001, IN2J AUTOMATED TOOL
   DEAN T, 2001, IEEE INT C SOFTW MAI
   *ECMA, STAND INF COMM SYST
   ECMA, ECMA262
   HASSAN AE, 2003, P COMPSAC 2003 INT C
   HASSAN AE, 2002, IEEE 24 INT C SOFTW
   HASSAN AE, 2003, ANN SOFTWARE ENG SPE, P16
   HASSAN AE, 2001, THESIS U WATERLOO
   *INET, WRIT ONC NET RUN AN
   JACOBSON I, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P340
   *JSP, 2003, ASP NET MIGR GUID
   KONTOGIANNIS K, 1998, IBM CTR ADV STUD C C, P1
   LAU TC, 2001, IBM CTR ADV STUD C C
   MECCA PMG, 1999, AWR199 U ROM TRE
   Moonen L, 2002, PROG COMPREHEN, P219, DOI 10.1109/WPC.2002.1021343
   MOONEN L, 2002, THESIS U AMSTERDAM M
   MOONEN L, 2001, WORK C REV ENG STUTT
   NEWCOMB P, 1995, 3 WORK C REV ENG WCR
   PATTI P, 1999, IBM CTR ADV STUD C C, P68
   RESEARCH T, MOVING IBM WEBSPERE
   *S IPL, 2000, MIGR GUID IPL APPL S
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P169, DOI 10.1109/WCRE.1996.558901
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P104, DOI 10.1109/WCRE.1996.558885
   YEH AS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/WCRE.1995.514711
   1999, E BUSINESS IMPLEMENT
   2001, TXL TRANSFORMATION S
NR 31
TC 11
Z9 13
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 521
EP 532
DI 10.1016/j.infsof.2004.10.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700002
DA 2024-07-18
ER

PT J
AU Kazman, R
   In, HP
   Chen, HM
AF Kazman, R
   In, HP
   Chen, HM
TI From requirements negotiation to software architecture decisions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements negotiation; architecture analysis; conflict resolution;
   WinWin; CBAM; ATAM
AB Architecture design and requirements negotiations are conceptually tightly related but often performed separately in real-world software development projects. As our prior case studies have revealed, this separation causes uncertainty in requirements negotiation that hinders progress, limits the success of architecture design, and often leads to wasted effort and substantial re-work later in the development life-cycle. Explicit requirements elicitation and negotiation is needed to be able to appropriately consider and evaluate architecture alternatives and the architecture alternatives need be understood during requirements negotiation. This paper propose the WinCBAM framework, extending an architecture design method, called cost benefit analysis method (CBAM) framework to include an explicit requirements negotiation component based on the WinWin methodology. We then provide a retrospective case study that demonstrates the use of the WinCBAM. We show that the integrated method is substantially more powerful than the WinWin and CBAM methods performed separately. The integrated method can assist stakeholders to elicit, explore, evaluate, negotiate, and agree upon software architecture alternatives based on each of their requirement Win conditions. By understanding the architectural implication of requirements they can be negotiated more successfully: potential requirements conflicts can be discovered or alleviated relatively early in the development life-cycle. (c) 2004 Elsevier B.V. All rights reserved.
C1 Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
   Korea Univ, Dept Comp Sci & Engn, Seoul 136701, South Korea.
   Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96825 USA.
C3 Carnegie Mellon University; Software Engineering Institute; Korea
   University; University of Hawaii System
RP Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
EM kazman@sei.cmu.edu; hoh_in@korea.ac.kr; hmchen@hawaii.edu
CR Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Baskerville R, 2004, MIS QUART, V28, P329
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BOEHM B, 1995, PROC INT CONF SOFTW, P243, DOI 10.1145/225014.225037
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   BOEHM B, 1994, P 1 INT C REQ ENG CO
   BOEHM B, 1998, IEEE COMPUTER    JUL, P33
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Buschmann F., 1996, SYSTEM PATTERNS PATT
   Clements P., 2001, EVALUATING SOFTWARE
   DEBRUIN H, 2001, LNCS, V2186, P128
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRUENBACHER P, 2001, P 34 HAW INT C SYST
   In H, 2001, PROC INT CONF SOFTW, P555
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Klein MH, 1999, INT FED INFO PROC, V12, P225
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   LASSING N, 2001, J SYSTEMS SOFTWARE
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Solingen R. V., 1999, GOAL QUESTION METRIC
NR 21
TC 13
Z9 17
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 511
EP 520
DI 10.1016/j.infsof.2004.10.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700001
DA 2024-07-18
ER

PT J
AU Sinha, P
   Hanumantharya, A
AF Sinha, P
   Hanumantharya, A
TI A novel approach for component-based fault-tolerant software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fault-tolerant software; component-based design; compositional
   verification; category theory
AB With the recent advancements in component-based software engineering, there is an increasing trend in developing applications for highly reliable and critical systems using pre-validated and reusable software components. As these applications are inherently complex and component-interactions are not straightforward, there is an immediate need for a methodology that could aid in composition of these reusable components ensuring the correctness of the composed software system. In this paper, we illustrate how the concepts of category theory can be utilized to develop component-based fault-tolerant software systems that encompass software components capable of tolerating particular types of faults. Our proposed framework for the development of a composite fault-tolerant program and verification of its overall correctness has been realized through a mechanized formal tool. (c) 2004 Elsevier B.V. All rights reserved.
C1 Indian Inst Informat Technol, Bangalore 560100, Karnataka, India.
   Sasken Technol Ltd, Kanata, ON, Canada.
RP Sinha, P (corresponding author), Indian Inst Informat Technol, 26-C Elect City,Hosur Rd, Bangalore 560100, Karnataka, India.
EM psinha@iiitb.ac.in; anilh@sasken.com
CR [Anonymous], 1991, Basic Category Theory for Computer Scientists
   Arora A, 1998, IEEE T SOFTWARE ENG, V24, P435, DOI 10.1109/32.689401
   Arora A, 1998, IEEE T SOFTWARE ENG, V24, P63, DOI 10.1109/32.663998
   Barr M., 1990, Category Theory for Computing Science
   Brown AW, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.714622
   EHRIG H, 1990, SPEC 2 MODULE SPEC C
   HAINES C, COMPONENT BASED SOFT
   HANUMANTHARAYA A, 2002, P INT C INF TECH DEC, P9
   Kulkarni SS, 2000, LECT NOTES COMPUT SC, V1926, P82
   LIU Z, 1992, FORM ASP COMPUT, V4, P442
   LIU Z, 1996, FTCS26, P220
   Pullum L.L., 2001, ART H COMP SCI LIBR
   RAYMOND K, 1989, ACM T COMPUT SYST, V7, P61, DOI 10.1145/58564.59295
   SCHNEIDER FB, 1990, COMPUT SURV, V22, P299, DOI 10.1145/98163.98167
   Srinivas Y. V, 1995, P C MATH PROGR CONST
   VANDESNEPSCHEUT JLA, 1987, DISTRIB COMPUT, V2, P113, DOI 10.1007/BF01667083
   Voas JM, 1998, COMPUTER, V31, P53, DOI 10.1109/2.683008
NR 17
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2005
VL 47
IS 6
BP 365
EP 382
DI 10.1016/j.infsof.2004.09.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 916VO
UT WOS:000228414700001
DA 2024-07-18
ER

PT J
AU Otero, MC
   Dolado, JJ
AF Otero, MC
   Dolado, JJ
TI Evaluation of the comprehension of the dynamic modeling in UML
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Unified Modeling Language; dynamic modeling; semantic comprehension;
   split-plot factorial design
ID READING TECHNIQUES
AB There is a certain degree of difficulty in developing and understanding the diagrams used for representing the dynamic behavior of a software application, specified in the Unified Modeling Language (UML). In this paper we evaluate the comprehension of the dynamic modeling in UML designs by using two split-plot factorial experiments. The metrics used for assessing the results are the time spent and the scores obtained in answering a questionnaire. In the first study three factors were controlled: the diagram type (sequence, collaboration and state), the application domain of the UML designs and the order of presentation of the documents. We observe that state diagrams provide higher semantic comprehension of dynamic modeling in UML when the domain is real-time and sequence diagrams are better in the case of a management information application. In the second study two factors were controlled: the paired combination of dynamic diagrams and the application domain. The main conclusion of the second study is that regardless of the domain, a higher semantic comprehension of the UML designs is achieved when the dynamic behavior is modeled by using the pair Sequence-State. Combining the results of both experiments we obtain the conditions which must concur to get an effective comprehension of the UML dynamic models: (a) if it is a management information application, the diagrams are sequence or the composition Sequence-State or Collaboration-State; (b) for a real-time non-reactive system the diagrams are collaboration or the pair Collaboration-State or Sequence-State; and (c) finally, when it is the design of the real-time reactive system, the best diagram is the State. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Basque Country, Fac Informat, Donostia San Sebastian 20009, Spain.
C3 University of Basque Country
RP Univ Basque Country, Fac Informat, Apdo 649, Donostia San Sebastian 20009, Spain.
EM jipotvim@vc.ehu.es; dolado@si.ehu.es
RI Dolado, José Javier/I-5402-2015
OI Dolado, José Javier/0000-0002-3301-5650; Otero Vidal, Mari
   Carmen/0000-0002-5321-9271
CR [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2000, JMP: Statistics and Graphics Guide
   Basili V., 1999, IEEE T SOFTWARE ENG, V25
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Cohen J., 1988, STAT POWER ANAL BEHA
   Eriksson Hans-Erik., 1998, UML TOOLKIT
   FOSTER BM, 1994, AM PSYCH ASS LOS ANG
   FOWLER M, 2000, UML DISTILLED BRIEF
   Hahn J., 1999, ACM Transactions on Computer-Human Interaction, V6, P181, DOI 10.1145/329693.329694
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   LAGUNA MA, 2000, SISTEMA SEGUROS
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   MARTIN RC, 1998, UML SEQUENCE DIAGRAM
   *OMG, 2000, UML NOT GUID UML 1 3
   *OMG, 2001, UML NOT GUID UML 1 4
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   *PASS 2002, POW AN SAMPL SIZ SOF
   PORRES I, 1999, 234 TUCS TURK CTR CO
   PURCHASE HC, 2001, LNCS, V1984, P5
   Rosenberg D., 1999, AW OBJ TECHNOL S
   SIMONS A, 1999, BEHAV SPECIFICATIONS
   *SPSS INC, 1997, SPSS ADV STAT 7 5
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   TRAVASSOS GH, 1999, MODELS MEASURES PR 2
   TRAVASSOS GH, 2000, REQUIREMENTS DOCUMEN
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zendler A, 2001, J SYST SOFTWARE, V57, P21, DOI 10.1016/S0164-1212(00)00114-X
NR 30
TC 28
Z9 30
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2004
VL 46
IS 1
BP 35
EP 53
DI 10.1016/S0950-5849(03)00108-3
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762HG
UT WOS:000187965600003
DA 2024-07-18
ER

PT J
AU Cavalli, A
   Gervy, C
   Prokopenko, S
AF Cavalli, A
   Gervy, C
   Prokopenko, S
TI New approaches for passive testing using an Extended Finite State
   Machine specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE simple connection protocol; passive testing; Extended Finite State
   Machine
AB This paper presents two new approaches for passive testing using an Extended Finite State Machine (EFSM) specification. The state of the art of passive testing shows us that all the methods for detection of errors based on EFSMs try to match the trace to the specification. Indeed, one searches a state succession in the specification machine that is able to generate the trace observed on the implementation. Using this approach, processing is performed on the specification and the trace remains in the background since no operation is applied to it. This made us realise that focusing our efforts on the trace could be beneficial and has given as result two approaches presented in this paper that extract information from the specification and then work on the trace. Thus, they take a different direction than the previous methods. We first present an approach to test traces by using invariants resulting from the specification. We formally define these invariants and we see how to extract them. We also discuss their ability to detect errors appearing in the implementation. This approach is able to test the data flow, but not in a very satisfactory way. This is the reason for a second approach seeking to apply a set of constraints to the trace. We develop in detail its principles. Both approaches are applied to a Simple Connection Protocol (SCP) and the results of preliminary experiments are presented. (C) 2003 Elsevier B.V. All rights reserved.
C1 Inst Natl Telecommun, F-91011 Evry, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   SudParis
RP Inst Natl Telecommun, 9 Rue Charles Fourier, F-91011 Evry, France.
EM ana.cavalli@int-evry.fr
CR BOURHFIR C, 1998, IWTCS 98 INT WORKSH
   CHEN WH, 2003, IN PRESS FORTE PSTV
   HUANG CM, 1995, IWPTS 95 INT WORKSH
   LEE D, 1997, ICNP 97 INT C NETW P
   Miller RE, 2001, PROC ANNU SIMUL SYMP, P277, DOI 10.1109/SIMSYM.2001.922142
   Miller RE, 1997, IEEE IPCCC, P111
   MILLER RE, 1999, 4044 U MAR DEP COMP
   RAMALINGOM T, 1995, IWPTS 95 INT WORKSH
   SARIKAYA B, 1987, IEEE T SOFTWARE ENG, V13, P518, DOI 10.1109/TSE.1987.233197
   Tabourier M, 1999, INFORM SOFTWARE TECH, V41, P813, DOI 10.1016/S0950-5849(99)00039-7
   URAL H, 1991, IEEE T COMMUNICATION, V39
NR 11
TC 49
Z9 56
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 837
EP 852
DI 10.1016/S0950-5849(03)00063-6
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100005
DA 2024-07-18
ER

PT J
AU Sinha, P
   Ren, DQ
AF Sinha, P
   Ren, DQ
TI Formal verification of dependable distributed protocols
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE formal specification and verification; dependable distributed protocols;
   checkpointing
ID MODEL CHECKING
AB Dependable distributed systems often employ a hierarchy of protocols to provide timely and reliable services. Such protocols have both dependability and real-time attributes, and the verification of such composite services is a problem of growing complexity even when using formal approaches. Our intention in this paper is to exploit the modular design aspects appearing in most dependable distributed protocols to provide formal level of assurance for their correctness. We highlight the capability of our approach through a case study in formal modular specification and tool-assisted verification of a timestamp-based checkpointing protocol. Furthermore, during the process of verification, insights gained in such a stack of protocols have assisted in validating some additional properties those dealing with failure recovery. (C) 2003 Elsevier B.V. All rights reserved.
C1 Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Concordia Univ, Dept Elect & Comp Engn, 1455 de Maisonneuve Blvd W, Montreal, PQ H3G 1M8, Canada.
EM sinha@ece.concordia.ca; dq_ren@ece.concordia.ca
CR Alur R, 2001, PROC INT CONF SOFTW, P835, DOI 10.1109/ICSE.2001.919196
   [Anonymous], 1994, Fault Tolerance in Distributed Systems
   [Anonymous], VERIFICATION SEQUENT
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   CRISTIAN F, 1991, TENTH SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, P12, DOI 10.1109/RELDIS.1991.145399
   CRISTIAN F, 1991, COMMUN ACM, V34, P56, DOI 10.1145/102792.102801
   ELNOZAHY EN, 1999, CMUCS99148
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   GUREVICH Y, 1995, SPECIFICATION VALIDA, P295
   HOOMAN J, 1997, P AMAST C, P261
   JAGGI N, 2001, P FST TCS BANG IND
   Kupferman O, 1998, LECT NOTES COMPUT SC, V1536, P381, DOI 10.1007/3-540-49213-5_14
   Namjosi K., 2000, Proc. Int. Conf. on Computer Aided Verification, V1855, P139, DOI [10.1007/10722167, DOI 10.1007/10722167]
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   Rushby J, 1999, IEEE T SOFTWARE ENG, V25, P651, DOI 10.1109/32.815324
   Singhal M., 1994, Advanced Concepts in Operating Systems
   Sinha P, 2001, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, P173, DOI 10.1109/HASE.2001.966818
   Sinha P, 2001, INT CON DISTR COMP S, P255
   *SRI FORM METH GRO, FORM COMP TECHN TIM
   Srinivas Y. V, 1995, P C MATH PROGR CONST
   SRINIVAS YV, 1995, KESU945 KESTR I
   Walter CJ, 1997, IEEE T SOFTWARE ENG, V23, P684, DOI 10.1109/32.637385
   ZHOU P, 1995, REAL-TIME SYST, V9, P119, DOI 10.1007/BF01088854
NR 24
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 873
EP 888
DI 10.1016/S0950-5849(03)00066-1
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100008
DA 2024-07-18
ER

PT J
AU Post, G
   Kagan, A
AF Post, G
   Kagan, A
TI Computer security and operating system updates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE security; upgrade; patch; information security management
AB Application and operating system errors are a continuing source of problems in computer security. As businesses increase the number of servers through distributed computing and server farms, it becomes more difficult to keep the systems up to date. A survey of security professionals reveals that most find it difficult to keep up to date with security patches. Consequently, developing more automated management tools is an important step in improving enterprise security. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Arizona State Univ, MSABR, Tempe, AZ 85287 USA.
   Univ Pacific, Eberhardt Sch Business, Stockton, CA 95211 USA.
C3 Arizona State University; Arizona State University-Tempe; University of
   the Pacific
RP Kagan, A (corresponding author), Arizona State Univ, MSABR, Box 870180, Tempe, AZ 85287 USA.
CR ADEE S, 2000, INFORMATION SYSTEMS, V2, P25
   [Anonymous], 1967, PSYCHOMETRIC METHODS
   ARMSTRONG L, 1995, COMPUT SECUR, V14, P38
   ATRE S, 1995, DBMS, V8, P64
   ATRE S, 1995, DBMS, V8, P66
   ATRE S, 1995, DBMS, V8, P60
   Chernei G. A., 1997, Automatic Documentation and Mathematical Linguistics, V31, P54
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   GENGLER B, 2000, COMPUTER FRAUD SECUR, P4
   HOOPER P, 1996, NATL PUBLIC ACCOUNTA, V41, P39
   HOOPER P, 1996, NATL PUBLIC ACCOUNTA, V41, P13
   HOWELL D, 2001, INVESTORTS BUSIN JUL, pA4
   LOMAS M, 1995, COMPUTER, V28, P50, DOI 10.1109/2.362630
   LOUNSBURY A, 1998, DATA COMMUNICATI JUN, P115
   Marro P. E., 1995, IS Audit & Control Journal, V5, P20
   MUCKLEY D, 1997, USA TODAY, V126, P50
   Muthen B.O., 2001, MPLUS STAT ANAL LATE
NR 17
TC 3
Z9 3
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 461
EP 467
DI 10.1016/S0950-5849(03)00016-8
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686WL
UT WOS:000183343900001
DA 2024-07-18
ER

PT J
AU MacDonell, SG
AF MacDonell, SG
TI Software source code sizing using fuzzy logic modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software size; SLOC; prediction; fuzzy logic
ID DEVELOPMENT EFFORT PREDICTION; SIZE ESTIMATION; NEURAL-NETWORK; DATA
   SETS; REGRESSION; SYSTEMS; METRICS; LINES
AB Knowing the likely size of a software product before it has been constructed is potentially beneficial in project management: for instance, size can be an important factor in determining an appropriate development/integration schedule, and it can be a significant input in terms of the allocation of personnel and other resources. In this study we consider the applicability of fuzzy logic modeling methods to the task of software source code sizing, using a previously published data set. Our results suggest that, particularly with refinement using data and knowledge. fuzzy predictive models can outperform their traditional regression-based counterparts. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Auckland Univ Technol, Sch Informat Technol, Auckland, New Zealand.
C3 Auckland University of Technology
RP Auckland Univ Technol, Sch Informat Technol, Private Bag 92006, Auckland, New Zealand.
EM stephen.macdonell@aut.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941
CR ABDELHAMID TK, 1993, IEEE T SOFTWARE ENG, V19, P603, DOI 10.1109/32.232025
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   ALBRECHT AJ, 1979, IBM GUID SHARE APPL
   ALONSO EB, 1997, P SCI97 ISAS 97 CAR
   [Anonymous], 6 MCSEAI 2000 MAGHR
   [Anonymous], 7 INT C FUZZ THEOR T
   Banker R., 1992, J MANAGE INFORM SYST, V8, P127
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASTANI FB, 1993, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.1993.346063
   Bezdek J. C., 1981, Pattern recognition with fuzzy objective function algorithms
   Billaudel P, 1999, INT J APPROX REASON, V20, P1
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Boehm BW., 1981, Software Engineering Economics
   BOURQUE P, 1991, J SYST SOFTWARE, V15, P159, DOI 10.1016/0164-1212(91)90053-9
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHRYSLER E, 1978, P NATIONAL COMPUTER, P581
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cockcroft S, 1996, INFORM SOFTWARE TECH, V38, P391, DOI 10.1016/0950-5849(95)01065-3
   DeMarco T., 1984, Performance Evaluation Review, V12, P13, DOI 10.1145/1041823.1041825
   DEMARCO T, 1989, P 5 INT COCOMO US GR
   Dolado JJ, 1997, J SYST SOFTWARE, V37, P161, DOI 10.1016/S0164-1212(96)00111-2
   EBERT C, 1997, 6 EUR SOFTW ENG C ES, P278
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   FERENS DV, 1999, NAT ESTIMATOR    WIN, P43
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Gray A, 1997, 1997 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P394, DOI 10.1109/NAFIPS.1997.624073
   Griech B., 1994, Journal of Systems Integration, V4, P171, DOI 10.1007/BF01975435
   Hakuta M, 1997, J SYST SOFTWARE, V37, P253, DOI 10.1016/S0164-1212(96)00020-9
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   IDRI A, 2001, P 7 INT S SOFTW METR
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kosko B., 1997, FUZZY ENG
   Kulkarni A., 1988, Proceedings COMPSAC 88: The Twelfth International Computer Software and Applications Conference (Cat. No.88CH2611-2), P155, DOI 10.1109/CMPSAC.1988.17166
   KUMAR S, 1994, APPL INTELL, V4, P31, DOI 10.1007/BF00872054
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   Lee A, 1998, INFORM MANAGE-AMSTER, V34, P1, DOI 10.1016/S0378-7206(98)00041-X
   LEE H, 1993, J SYST SOFTWARE, V21, P179, DOI 10.1016/0164-1212(93)90040-5
   Lehman MM, 1998, IEEE SOFTWARE, V15, P40, DOI 10.1109/MS.1998.646878
   LEHMAN MM, 1991, SOFTWARE ENG J, V6, P243, DOI 10.1049/sej.1991.0028
   Lind MR, 1998, EUR J INFORM SYST, V7, P261, DOI 10.1057/palgrave.ejis.3000308
   Lo B. W. N., 1997, Australian Journal of Information Systems, V5, P30
   MACDONELL SG, 1994, SOFTWARE ENG J, V9, P107, DOI 10.1049/sej.1994.0014
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   MacDonell SG, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P99, DOI 10.1109/METRIC.1997.637170
   MacDonell SG, 1999, 18TH INTERNATIONAL CONFERENCE OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P263, DOI 10.1109/NAFIPS.1999.781695
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Murali CS, 1997, INFORM SOFTWARE TECH, V39, P399, DOI 10.1016/S0950-5849(96)00004-3
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   PADBERG F, 1999, P 7 EUR SOFT ENG C E, P109
   Pawlak Z., 1991, ROUGH SETS THEORETIC
   Piattini M, 2001, INT J SOFTW ENG KNOW, V11, P703, DOI 10.1142/S0218194001000736
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Pickard L., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P130, DOI 10.1109/METRIC.1999.809734
   Pillai K, 1997, INFORM SOFTWARE TECH, V39, P363, DOI 10.1016/S0950-5849(96)00002-X
   PUTNAM D, 1987, 3 COCOMO US GROUP M
   ROSENBERG J, 1998, IEEE SOFTWARE    JAN, P75
   Sauter VL, 1999, COMMUN ACM, V42, P109, DOI 10.1145/303849.303869
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M., 2001, IEEE T SOFTWARE ENG, V27, P1014
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Tate G., 1990, Journal of Information Technology, V5, P12, DOI 10.1057/jit.1990.4
   TATE G, 1991, INFORM SOFTWARE TECH, V33, P622, DOI 10.1016/0950-5849(91)90034-9
   Turski WM, 1996, IEEE T SOFTWARE ENG, V22, P599, DOI 10.1109/32.536959
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
   VERNER J, 1988, IEEE SOFTWARE, V5, P15, DOI 10.1109/52.17798
   VERNER JM, 1987, J SYST SOFTWARE, V7, P173, DOI 10.1016/0164-1212(87)90021-5
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   WRIGLEY CD, 1991, MIS Q            JUN, P245
   Yau C, 1998, INFORM SOFTWARE TECH, V40, P59, DOI 10.1016/S0950-5849(98)00032-9
NR 82
TC 19
Z9 21
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 389
EP 404
DI 10.1016/S0950-5849(03)00011-9
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Guber, J
   Reinhartz-Berger, I
AF Guber, Jenny
   Reinhartz-Berger, Iris
TI Privacy-Compliant Software Reuse in Early Development Phases: A
   Systematic Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software development; Software reuse; Security and privacy; Privacy
   compliance; GDPR; Systematic literature review
ID SECURITY; PATTERNS
AB Context: Privacy-compliant software development has received substantial attention in recent years, especially with the growth of digital services and the emergence of privacy regulations and standards. The increasing popularity of open-source software repositories and reuse practices challenges privacy-compliant software development.Objective: This paper aims to present the state-of-the-art in privacy-compliant software reuse, focusing on early development phases of requirements engineering, domain analysis and software design, as well as to discuss the current challenges that identify directions for future research.Method: We conducted a Systematic Literature Reviews (SLR) and analyzed 61 papers published in the last two decades, in terms of their business and technological domains, followed reuse approaches, applied privacy strategies, and utilized evaluation approaches. Results: The reviewed studies vary in terms of business domains (e.g., healthcare, smart objects and finance) and technological domains (e.g., IoT, mobile, cloud and microservices). Most of the studies do not refer to a specific regulation and if so - to GDPR. Their common purpose is to support benign reuse, most notably through patterns, components & libraries and model-driven engineering, but malicious reuse is also researched to a lesser extent. A strong emphasis is put on integrating privacy strategies whose goal is building trust and transparency (in particular, inform and demonstrate), while other strategies are studied to a limited extent in software reuse context. Evaluation is commonly performed through analytical, observational and experimental approaches.Conclusions: The operationalization of privacy compliance practices for existing software artifacts is still challenging. The challenges encompass improving trustworthiness of reused artifacts, ensuring privacy compliance in distributed architectures, bridging the gap between legal regulations and software requirements, enhancing privacy analysis and vulnerability detection, supporting late application of privacy strategies, and developing objective assessments for privacy-compliant software reuse.
C1 [Guber, Jenny; Reinhartz-Berger, Iris] Univ Haifa, Haifa, Israel.
C3 University of Haifa
RP Guber, J (corresponding author), Univ Haifa, Haifa, Israel.
EM jguber@campus.haifa.ac.il
CR Abidi S, 2019, PROCEDIA COMPUT SCI, V159, P372, DOI 10.1016/j.procs.2019.09.192
   Ahmadian AS, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1492, DOI 10.1145/3297280.3297431
   Ahmadian AS, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1467, DOI 10.1145/3167132.3167288
   Al-Momani A, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1236, DOI 10.1145/3477314.3507107
   Alkubaisy D, 2021, ENASE: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P80, DOI 10.5220/0010406100800091
   Alreshidi A, 2020, INT J ADV APPL SCI, V7, P131, DOI 10.21833/ijaas.2020.10.015
   [Anonymous], 2015, Privacy and Data Protection by Design-from policy to engineering, DOI DOI 10.2824/38623
   [Anonymous], 1996, HIPAA
   [Anonymous], 2016, EU Regulation. 2016/679 of the European Parliament and of the council of 27 april 2016 on the General Data Protection Regulation
   [Anonymous], 1995, Directive 95/46/EC of the European parliament and of the council: On the protection of individuals with regard to the processing of personal data and on the free movement of such data, DOI [10.3233/978-1-60750-871-7-83, DOI 10.3233/978-1-60750-871-7-83]
   Bagade P, 2015, SMART SENSOR MEAS IN, V15, P135, DOI 10.1007/978-3-319-18191-2_6
   Baldassarre MT, 2020, SOFTWARE QUAL J, V28, P987, DOI 10.1007/s11219-020-09501-6
   Barros-Justo JL, 2018, INFORM SOFTWARE TECH, V103, P1, DOI 10.1016/j.infsof.2018.06.003
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   BORKING J., 2001, J INFORM LAW TECHNOL
   Breaux TD, 2015, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2015.7320419
   Bugeja J, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21196399
   Capilla R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2217
   Cavoukian A., 2011, A white paper for regulators, decision-makers and policy-makers
   Chang J, 2011, P 5 INT WORKSH WEB A, DOI [10.1145/2076006.2076012, DOI 10.1145/2076006.2076012]
   Chia SY, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1390, DOI 10.1145/3412841.3442014
   Chia SY, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P60, DOI 10.1109/ICSA-C54293.2022.00056
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Collen A, 2022, INFORMATION, V13, DOI 10.3390/info13070340
   Das Tathagata., 2010, P 8 INT C MOBILE SYS, P63
   De Ryck P, 2011, LECT NOTES COMPUT SC, V6542, P114, DOI 10.1007/978-3-642-19125-1_9
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Detweiler C., 2012, 2012 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P908, DOI 10.1109/PerComW.2012.6197643
   Dewitte P, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1512, DOI 10.1145/3297280.3297595
   Diamantopoulou V, 2017, IFIP ADV INF COMM TE, V502, P491, DOI 10.1007/978-3-319-58469-0_33
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   Fernandes Avelet Maria, 2018, 2018 Second International Conference on Electronics, Communication and Aerospace Technology (ICECA), P1236, DOI 10.1109/ICECA.2018.8474668
   Fernandes M., 2018, Specification of personal data protection requirements: Analysis of legal requirements from the GDPR regulation, V2, P398, DOI [10.5220/0006810603980405, DOI 10.5220/0006810603980405]
   Gharib M, 2020, J DATA SEMANT, V9, P123, DOI 10.1007/s13740-020-00116-5
   Gharib M, 2017, LECT NOTES COMPUT SC, V10650, P193, DOI 10.1007/978-3-319-69904-2_16
   Gonçalves L, 2018, CONF BUS INFORM, P52, DOI 10.1109/CBI.2018.10046
   Hadiprakoso Raden Budiarto, 2020, 2020 3rd International Conference on Information and Communications Technology (ICOIACT), P252, DOI 10.1109/ICOIACT50329.2020.9332066
   Hatzivasilis G, 2016, IEEE SOFTWARE, V33, P46, DOI 10.1109/MS.2016.61
   He Y, 2018, L N INST COMP SCI SO, V238, P291, DOI 10.1007/978-3-319-78813-5_15
   He YZ, 2019, J INF SECUR APPL, V46, P259, DOI 10.1016/j.jisa.2019.03.014
   Heurix J, 2015, COMPUT SECUR, V53, P1, DOI 10.1016/j.cose.2015.05.002
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoepman JH, 2014, IFIP ADV INF COMM TE, V428, P446
   Huang H, 2016, INT J IND ENG-THEORY, V23, P216
   Irshad M, 2018, INFORM SOFTWARE TECH, V93, P223, DOI 10.1016/j.infsof.2017.09.009
   Jin HJ, 2020, UBICOMP/ISWC '20 ADJUNCT: PROCEEDINGS OF THE 2020 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING AND PROCEEDINGS OF THE 2020 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, P212, DOI 10.1145/3410530.3414328
   Kim Sangsig., 2011, SEKE, P666
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knote R., 2016, P 21 EUR C PATT LANG, DOI [10.1145/3011784.3011812, DOI 10.1145/3011784.3011812]
   Kostova B., 2020, On the Challenges of Engineering Privacy ByDesign, DOI 10.48550/arXiv.2007.08613
   Kunz F, 2019, IEEE INT CONF CLOUD, P251, DOI 10.1109/CLOUD.2019.00051
   Lence R., 2011, P 5 EUR C SOFTW ARCH, DOI [10.1145/2031759.2031768, DOI 10.1145/2031759.2031768]
   Liu Y., 2017, P 14 INT C MAN LANG, P60, DOI [10.1145/3132190.3132206, DOI 10.1145/3132190.3132206]
   Fernández-Alemán JL, 2013, J BIOMED INFORM, V46, P541, DOI 10.1016/j.jbi.2012.12.003
   Lyu F, 2017, MOB INF SYST, V2017, DOI 10.1155/2017/6958698
   Manos P., 2021, IEEE Internet Things Mag
   Marko N., 2020, SECREDAS Approach 12235 LNCS, DOI [10.1007/978-3-030-55583-2_3, DOI 10.1007/978-3-030-55583-2_3]
   Marko N, 2021, LECT NOTES COMPUT SC, V12853, P39, DOI 10.1007/978-3-030-83906-2_3
   Martín YS, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2018), P108, DOI 10.1109/EuroSPW.2018.00021
   Microsoft, 2010, The STRIDE%0AThreat Model
   Mohammed NM, 2017, COMPUT STAND INTER, V50, P107, DOI 10.1016/j.csi.2016.10.001
   Morales -Trujillo M.E., 2018, Av. en Ing. Softw. a Niv. Iberoam. CIbSE, V22, P107
   Nacer AA, 2015, IEEE INT CONF SERV, P193, DOI 10.1109/SOCA.2015.37
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   OECD, 2013, OECD guidelines on measuring subjective well-being, DOI [DOI 10.1787/9789264203709-EN, DOI 10.1787/20745761, 10.1787/9789264191655-en, DOI 10.1787/9789264191655-EN, 10.1787/20745761]
   Office of Parliamentary Counsel, 2022, Privacy Act 1988, Federal Register of Legislation
   Omitola Tope, 2022, UMAP '22 Adjunct: Adjunct Proceedings of the 30th ACM Conference on User Modeling, Adaptation and Personalization, P109, DOI 10.1145/3511047.3537683
   Page MJ, 2021, BMJ-BRIT MED J, V372, DOI [10.1136/bmj.n71, 10.1016/j.ijsu.2021.105906, 10.1136/bmj.n160]
   Perera C., 2016, Proceedings of the 6th International Conference on the Internet of Things, Germany, P83
   Pöhls HC, 2014, IEEE WIREL COMMUNN, P122, DOI 10.1109/WCNCW.2014.6934872
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Proton Technologies AG, 2020, Co-funded by Project REP-791727-1 of the Horizon 2020 Framework Programme of the European Union
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Rajani Devi T., 2020, Int. J. Electr. Comput. Eng., V10, P333, DOI [10.11591/ijece.v10i1, DOI 10.11591/IJECE.V10I1]
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Reinhartz-Berger I, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P448, DOI 10.5220/0007566204480453
   Riva G.M., 2020, 15 INT C AV REL SEC
   Romansky RP, 2020, MATH BIOSCI ENG, V17, P5288, DOI 10.3934/mbe.2020286
   Rowan M., 2014, P 2014 WORKSH ECL TE, P9, DOI [DOI 10.1145/2688130.2688134, 10.1145/2688130.2688134]
   Sandra DR, 2018, LECT NOTES COMPUT SC, V11230, P258, DOI 10.1007/978-3-030-02671-4_15
   Sangaroonsilp P, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107162
   Schindler C., 2022, P 2022 7 INT C MOB S
   Shashwat A, 2018, 2018 4TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE & COMMUNICATION TECHNOLOGY (CICT)
   Sion L, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1425, DOI 10.1145/3167132.3167285
   Sommerville Ian, 2016, Software engineering 8
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Sousa J.P., 2008, Advances in Ubiquitous Computing: Future Paradigms and Directions, P280, DOI [10.4018/978-1-59904-840-6.ch011, DOI 10.4018/978-1-59904-840-6.CH011]
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Suphakul T, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P369, DOI 10.1109/SNPD.2017.8022748
   Tomashchuk Oleksandr, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P120, DOI 10.1145/3382026.3431250
   Torre D, 2021, SOFTW SYST MODEL, V20, P2071, DOI 10.1007/s10270-021-00935-5
   Tremper G, 2021, METHOD INFORM MED, V60, P21, DOI 10.1055/s-0041-1731387
   Tuma K, 2018, J SYST SOFTWARE, V144, P275, DOI 10.1016/j.jss.2018.06.073
   van der Walt P, 2017, SOFTWARE PRACT EXPER, V47, P741, DOI 10.1002/spe.2417
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wuyts Kim, 2019, 2019 IEEE Security and Privacy Workshops (SPW). Proceedings, P80, DOI 10.1109/SPW.2019.00025
   Wuyts K, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1175, DOI 10.1145/3167132.3167414
   Zemni M.A., 2013, P INT C INFORM INTEG, P654, DOI [10.1145/2539150.2539258, DOI 10.1145/2539150.2539258]
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 100
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107351
DI 10.1016/j.infsof.2023.107351
EA DEC 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EH7R8
UT WOS:001138102200001
DA 2024-07-18
ER

PT J
AU Meher, JP
   Biswas, S
   Mall, R
AF Meher, Jyoti Prakash
   Biswas, Sourav
   Mall, Rajib
TI Deep learning-based software bug classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automatic classification; Bug analysis; Self attention; Transfer
   learning
ID ISSUE REPORTS
AB Context: Accurate classification of bugs can help accelerate the bug triage process, code inspection, and repair activities. In this context, many machine learning techniques have been proposed to classify bugs. The expressive power of deep learning could be used to further improve classification.Objective: We propose a novel deep learning-based bug classification approach.Methods: We first build a bug taxonomy with eight bug classes, each characterized by a set of keywords. Subsequently, we heuristically annotate a moderately large set (similar to 1.36M) of software bug resolution reports using an earth-mover distance technique based on the keywords. Finally, we use four attention-based classification techniques to classify these curated bugs.Results: Our experiments on a carefully collected dataset indicate that our proposed technique achieved a mean F1-Score of 84.78% and a mean macro-average ROC of 98.25%.Conclusion: Our proposed approach was observed to outperform the existing techniques by 16.88% on an average in terms of F1-Score for the considered dataset.
C1 [Meher, Jyoti Prakash; Biswas, Sourav; Mall, Rajib] Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Meher, JP (corresponding author), Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM jpmeher.iitkgp@gmail.com; bsws.sourav@gmail.com; rajib@cse.iitkgp.ac.in
OI Meher, Jyoti Prakash/0000-0003-4692-9766
CR Alazzam I, 2020, IEEE T COMPUT SOC SY, V7, P1288, DOI 10.1109/TCSS.2020.3017501
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arslan Y, 2021, WEB CONFERENCE 2021: COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2021), P260, DOI 10.1145/3442442.3451375
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chawla I, 2018, J COMPUT METHODS SCI, V18, P177, DOI 10.3233/JCM-180779
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Koksal Omer, 2022, 2022 International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT), P635, DOI 10.1109/ISMSIT56059.2022.9932822
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Mall R., 2018, Fundamentals of Software Engineering
   Meher JP, 2023, IEEE INT CONF ADV LE, P318, DOI 10.1109/ICALT58122.2023.00099
   Meng FQ, 2022, LECT NOTES COMPUT SC, V13299, P131, DOI 10.1007/978-3-031-10363-6_9
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mohurle S., 2017, International journal of advanced research in computer science, V8, P1938
   Otoom AF, 2019, PROCEEDINGS OF 9TH INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND MANAGEMENT (ICICM 2019), P17, DOI 10.1145/3357419.3357424
   Pandey N, 2018, ADV INTELL SYST, V518, P422, DOI 10.1007/978-981-10-3373-5_42
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Plisson Jol., 2004, Proceedings of IS, Vvolume 3, P83
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   Sanh V, 2020, Arxiv, DOI arXiv:1910.01108
   Sokolova M, 2006, LECT NOTES COMPUT SC, V4304, P1015
   Sundar Koushicaa., 2016, J INFORM SECURITY, V7, P225, DOI DOI 10.4236/JIS.2016
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tang Yang, 2022, 2022 2nd International Conference on Computer Science, Electronic Information Engineering and Intelligent Control Technology (CEI), P491, DOI 10.1109/CEI57409.2022.9950207
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Ting-Yan Yu, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P161, DOI 10.1109/DSA52907.2021.00025
   Vaswani A, 2017, ADV NEUR IN, V30
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Ye X, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1438, DOI 10.1109/ICMLA.2018.00234
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zheng W, 2019, J SYST SOFTWARE, V151, P210, DOI 10.1016/j.jss.2019.02.025
   Zhou C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10010-8
   Zhu XX, 2016, INT J COMPUT VISION, V119, P76, DOI 10.1007/s11263-015-0812-2
   Zhuang FZ, 2021, P IEEE, V109, P43, DOI 10.1109/JPROC.2020.3004555
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zolkeply MS, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1860, DOI 10.1145/3297280.3297608
NR 46
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107350
DI 10.1016/j.infsof.2023.107350
EA OCT 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9DR6
UT WOS:001101380500001
DA 2024-07-18
ER

PT J
AU Wu, Z
   Wang, Z
   Chen, JJ
   You, HM
   Yan, M
   Wang, LJ
AF Wu, Zhuo
   Wang, Zan
   Chen, Junjie
   You, Hanmo
   Yan, Ming
   Wang, Lanjun
TI Stratified random sampling for neural network test input selection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep neural network testing; Test input selection; Test optimization
AB Context: Testing techniques to ensure the quality of deep neural networks (DNNs) are essential and crucial. However, the testing process can be inefficient due to a large number of test cases and the manual effort of labeling them. Recent work tackles the above challenge by selecting a small but representative subset of the tests. Such an approach allows us to quickly estimate the accuracy of a DNN with reduced effort, because only a small set of tests are to be manually labeled. However, existing approaches cannot guarantee unbiased results or provide an accurate estimation.Objectives: In this work, we leverage a statistical perspective on providing an unbiased estimation of the model accuracy with the smallest estimation variance, named Stratified random Sampling with Optimum Allocation (SSOA).Methods: Our approach first divides the unlabeled test set into strata based on predictive confidences. Then, we design two stratum accuracy variance estimation methods to allocate the given budget assigned to each stratum based on the optimum allocation strategy. Finally, we conduct multiple experiments to evaluate the effectiveness and stability of SSOA by comparing it with baseline methods.Results: The results show that SSOA significantly outperforms all compared approaches with average improvements over 26.14% in terms of Mean Squared Errors (MSE) of estimated accuracy. In addition, the MSE shows a steady downward trend as the budget grows.Conclusion: SSOA can assist testers in estimating the accuracy of DNNs, lowering labeling costs, and enhancing the efficiency of DNN testing.
C1 [Wu, Zhuo; Wang, Zan; Wang, Lanjun] Tianjin Univ, Sch New Media & Commun, Tianjin, Peoples R China.
   [Wang, Zan; Chen, Junjie; You, Hanmo; Yan, Ming] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
C3 Tianjin University; Tianjin University
RP Wang, LJ (corresponding author), Tianjin Univ, Sch New Media & Commun, Tianjin, Peoples R China.
EM wuzhuo@tju.edu.cn; wangzan@tju.edu.cn; junjiechen@tju.edu.cn;
   youhanmo@tju.edu.cn; yanming@tju.edu.cn; wangzan@tju.edu.cn
RI Wang, Lanjun/AAM-7339-2020
OI Wang, Lanjun/0000-0002-7696-5330; Yan, Ming/0000-0001-9757-7794
FU National Natural Science Foundation of China [62202329]
FX This work is supported by the National Natural Science Foundation of
   China (62202329) .
CR Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen JJ, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3394112
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   CIFAR, 2022, about us
   Deng WJ, 2021, PROC CVPR IEEE, P15064, DOI [10.1109/TPAMI.2021.3136244, 10.1109/CVPR46437.2021.01482]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fredrikson M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1322, DOI 10.1145/2810103.2813677
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   GitHub, 2022, About us
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Guerriero A, 2021, PROC INT CONF SOFTW, P348, DOI 10.1109/ICSE43902.2021.00042
   Hansen MH, 1943, ANN MATH STAT, V14, P333, DOI 10.1214/aoms/1177731356
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Homepage, 2022, about us
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   ImageNet, 2022, US
   K-Means, 2022, about us
   Keras, 2022, About us
   Kim B, 2016, ADV NEUR IN, V29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kodinariya T.M., 2013, International Journal of Advance Research in Computer Science and Management Studies, V1, P90, DOI DOI 10.18576/AMIS/100428
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kurakin Alexey, 2017, INT C LEARN REPR
   Li Y, 2021, ADV NEUR IN
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Liu ZX, 2022, PROC INT CONF SOFTW, P598, DOI 10.1145/3510003.3510231
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   McInnes L, 2017, INT CONF DAT MIN WOR, P33, DOI 10.1109/ICDMW.2017.12
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pietrantuono R, 2016, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2016.50
   Salvador S, 2004, PROC INT C TOOLS ART, P576
   Shen EJ, 2020, IEEE INT CONF AUTOM, P410, DOI 10.1145/3324884.3416621
   Thompson S., 2012, Sampling
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   wikipedia.org, 2022, Independent and identically distributed random variables
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xiong W, 2017, Arxiv, DOI arXiv:1610.05256
   Yan M, 2023, Arxiv, DOI arXiv:2010.04946
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhao CY, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106982
   Zhou JY, 2020, PROC INT SYMP SOFTW, P289, DOI 10.1109/ISSRE5003.2020.00035
NR 47
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107331
DI 10.1016/j.infsof.2023.107331
EA SEP 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6RW4
UT WOS:001086066700001
DA 2024-07-18
ER

PT J
AU Salman, HE
AF Salman, Hamzeh Eyal
TI Leveraging a combination of machine learning and formal concept analysis
   to locate the implementation of features in software variants
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE K-Means clustering; Source code; Software product line engineering;
   Software variants; Feature location; Formal concept analysis
ID PRODUCT LINES; CODE; IDENTIFICATION; RECOVERY
AB Context: Recently, software variants are adopted to build software product lines in the industry. In this adoption, the available assets (features, source code, design documents, etc.) are reused to build a software product line rather than building it from scratch. The feature location is the first step in this adoption process. In the literature, numerous approaches were proposed to locate the implementations of features in the source code. Objective: However, these approaches are guided using feature-specific information, which is not always available, especially in legacy applications. In this study, a feature location approach is proposed without predefined feature-specific information. Method: The proposed approach incorporates a mathematical research technique called formal concept analysis with other proposed algorithms. This combination is empirically evaluated using a benchmark case study. Results: The obtained results demonstrate that this combination achieves promising results in terms of well-known used metrics in this area: Recall, Precision, and F-measure.Conclusion: Also, the results show that the approach effectively finds features implementation across software variants.
C1 [Salman, Hamzeh Eyal] Mutah Univ, IT Fac, Software Engn Dept, Mutah 61710, Jordan.
C3 Mutah University
RP Salman, HE (corresponding author), Mutah Univ, IT Fac, Software Engn Dept, Mutah 61710, Jordan.
EM hamzehmu@mutah.edu.jo
RI Eyal Salman, Hamzeh/HKF-2536-2023
OI Eyal Salman, Hamzeh/0000-0003-3258-7304
CR Abu Alfeilat HA, 2019, BIG DATA, V7, P221, DOI 10.1089/big.2018.0175
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Ballarín M, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106430
   Binkley D, 2014, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSME.2014.70
   Carbonnel J, 2020, DISCRETE APPL MATH, V273, P43, DOI 10.1016/j.dam.2019.06.008
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dufour Bruno, 2007, ACM SIGSOFT Int. Symp. Software Testing and Analysis, DOI [10.1145/1273463.1273480, DOI 10.1145/1273463.1273480]
   Duley A., 2010, INT C AUTOMATED SOFT, P477
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Salman HE, 2022, INFORMATION, V13, DOI 10.3390/info13020073
   Eyal-Salman Hamzeh, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P209, DOI 10.1109/IRI.2013.6642474
   Eyal-Salman Hamzeh, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P57, DOI 10.1109/SEAA.2013.65
   Ganter B. B., 1999, FORMAL CONCEPT ANAL
   John I., 2009, P 13 INT SOFTW PROD, P31
   Kang Kyo C, 1990, Technical Report
   Krüger J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P251, DOI 10.1145/3233027.3236403
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P257, DOI 10.1145/3233027.3236402
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pandey P., 2016, IJCA, V146, P39, DOI [10.5120/ijca2016910868, DOI 10.5120/IJCA2016910868]
   Rubin J, 2012, IEEE INT CONF AUTOM, P242, DOI 10.1145/2351676.2351712
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Salman HE, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106679
   Salman HE, 2017, J SYST SOFTWARE, V130, P42, DOI 10.1016/j.jss.2017.05.039
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Shepherd D., 2006, Proc. of the International Conference on Aspect-Oriented Software Development (AOSD'06), P3
   Vale T, 2019, EMPIR SOFTW ENG, V24, P1328, DOI 10.1007/s10664-018-9652-3
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Yinxing Xue, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P109, DOI 10.1109/WCRE.2010.20
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 43
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107320
DI 10.1016/j.infsof.2023.107320
EA SEP 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S5BV8
UT WOS:001071328000001
DA 2024-07-18
ER

PT J
AU Dang, DH
   Le, DM
   Le, VV
AF Dang, Duc-Hanh
   Le, Duc Minh
   Le, Van-Vinh
TI AGL: Incorporating behavioral aspects into domain-driven design
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain-driven design (DDD); Module-based architecture; Domain-specific
   language (DSL); UML/OCL-based domain modeling; Attribute-oriented
   programming (AtOP)
AB Context: Domain-driven design (DDD) aims to iteratively develop software around a realistic domain model. Recent research in DDD has been focusing on using annotation-based domain-specific languages (aDSLs) to build the domain model. However, within current approaches behavioral aspects, that are often represented using UML Activity and State machine diagrams, are not explicitly captured in the domain model.Objective: The focus of this paper is to introduce a new approach for incorporating behavioral aspects into domain models within the Domain-Driven Design (DDD) approach. The proposed approach involves using a new activity graph language (AGL) as an aDSL for representing behavioral aspects within a unified domain model. This integration of AGL and the previously developed aDSL (DCSL to represent domain models) aims to achieve three important features of DDD: feasibility, productivity, and understandability.Method: Our approach involves building a unified class model in DCSL within a domain-driven architecture, which uses the annotation attachment feature of the host programming language (such as Java) to attach AGL activity graphs directly to the activity class of the unified class model, resulting in a unified domain model. In this work, we define the abstract and concrete syntax of AGL. To demonstrate our method, we use a Java framework called JDOMaiNAPP and evaluate AGL through a case study to show that it is expressive and practical for real-world software.Results: This paper presents two contributions. Firstly, it proposes a mechanism to include behavioral aspects in a unified domain model by introducing a new aDSL called AGL to represent domain behaviors. Secondly, it presents a unified modeling method for domain-driven software development.Conclusion: Our method significantly extends the state-of-the-art in DDD in two important fronts: constructing a unified domain model for both structural and behavioral aspects of domain models and bridging the gaps between model and code.
C1 [Dang, Duc-Hanh; Le, Van-Vinh] Vietnam Natl Univ, VNU Univ Engn & Technol, 144 Xuan Thuy, Hanoi, Vietnam.
   [Le, Duc Minh] FPT Univ, Dept Informat Technol, Swinburne Vietnam, Hanoi, Vietnam.
   [Le, Duc Minh] Hanoi Univ, Fac Informat Technol, Hanoi, Vietnam.
   [Le, Van-Vinh] Vinh Univ Technol Educ, Dept Informat Technol, Nghean, Vietnam.
C3 Vietnam National University Hanoi; FPT University; University of Hanoi
RP Dang, DH (corresponding author), Vietnam Natl Univ, VNU Univ Engn & Technol, 144 Xuan Thuy, Hanoi, Vietnam.
EM hanhdd@vnu.edu.vn; duclm20@fe.edu.vn; 21028005@vnu.edu.vn
RI Dang, Duc-Hanh/IUN-4196-2023
OI Dang, Duc-Hanh/0000-0003-4564-4080
FU Vietnam Ministry of Education and Training;  [B2022-NHF-01]
FX <B>Acknowledgments</B> This work is funded by the Vietnam Ministry of
   Education and Training under grant number B2022-NHF-01. We also thank
   anony-mous reviewers for their comments on the earlier version of this
   paper.
CR Ajanovski V., 2013, INT J DATABASE MANAG, V5, P85
   [Anonymous], 2006, PROC 6 INT WORKSHOP
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Apache Causeway, 2023, US
   Balz M., 2012, THESIS U DUISBURG ES
   Barais O, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P189, DOI 10.1109/ICSAW.2017.61
   Beck K., 2017, MANIFESTO AGILE SOFT
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   BOOCH G, 1986, IEEE T SOFTWARE ENG, V12, P211, DOI 10.1109/TSE.1986.6312937
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Calvary G., 1997, Proceedings of the SIGCHI conference on Human factors in computing Systems, CHI'97, P242
   Cepa V., 2005, PROC 7 INT WORKSHOP
   Coutaz J., 1987, Human-Computer Interaction - INTERACT '87. Proceedings of the Second IFIP Conference, P431
   Dang D.-H., 2023, DSL UNIFIED DOMAIN M
   Le DM, 2019, SOICT 2019: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY, P399, DOI 10.1145/3368926.3369657
   Le DM, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106239
   Le DM, 2018, COMPUT LANG SYST STR, V54, P199, DOI 10.1016/j.cl.2018.05.001
   Le DM, 2015, 2015 Seventh International Conference on Knowledge and Systems Engineering (KSE), P19, DOI 10.1109/KSE.2015.26
   Evans E., 2003, Domain-Driven Design
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Fowler M., 2010, Domain-specific languages
   Fuggetta A., 2014, Proceedings of the on Future of Software Engineering, P1, DOI [10.1145/2593882.2593883, DOI 10.1145/2593882.2593883]
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Haywood D., 2013, METHODS TOOLS PRACTI, V21, P40
   Hejlsberg Anders., 2010, C# Programming Language
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kohler H. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P241, DOI 10.1109/ICSE.2000.870415
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Newman S., 2015, BUILDING MICROSERVIC
   Niaz Iftikhar Azim, 2005, International Journal of Computer & Information Science, V6, P83
   Nosál' M, 2016, COMPUT SCI INF SYST, V13, P707, DOI 10.2298/CSIS160114024N
   O'Mahony MP, 2007, RECSYS 07: PROCEEDINGS OF THE 2007 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P133
   Object Management Group (OMG), 2021, Semantics of a Foundational Subset for Executable UML Models
   OMG, 2014, OMG document formal/2014-02-03
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   OpenXava, 2022, US
   Paniza J, 2011, LEARN OPENXAVA EXAMP
   Riehle D., 1996, Theory and Practice of Object Systems, V2, P3, DOI 10.1002/(SICI)1096-9942(1996)2:1<3::AID-TAPO1>3.0.CO;2-#
   Rumpe B., 2021, MontiCore Language Workbench and Library Handbook: Edition 2021
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   Sulír M, 2016, COMPUT LANG SYST STR, V46, P44, DOI 10.1016/j.cl.2016.07.003
   Thakur R.N., 2019, NEPAL J MULTIDISCIP, P1
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vernon V., 2013, Implementing Domain-Driven Design
   Wada H, 2005, LECT NOTES COMPUT SC, V3713, P584, DOI 10.1007/11557432_44
   Warmer J, 2007, LECT NOTES COMPUT SC, V4530, P194
NR 50
TC 0
Z9 0
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107284
DI 10.1016/j.infsof.2023.107284
EA JUN 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q2PC6
UT WOS:001055977200001
DA 2024-07-18
ER

PT J
AU Karolita, D
   McIntosh, J
   Kanij, T
   Grundy, J
   Obie, HO
AF Karolita, Devi
   McIntosh, Jennifer
   Kanij, Tanjila
   Grundy, John
   Obie, Humphrey O.
TI Use of personas in Requirements Engineering: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Personas; Requirements Engineering
ID SUPPORT
AB Context: Requirements Engineering (RE) is one of the crucial activities in software development that requires a high involvement of humans (i.e., stakeholders). The aim of RE-related tasks is to develop the scope of the target software products to ensure they will fulfil its stakeholder needs. In RE, the requirements engineers have to deeply understand the software stakeholders including their needs, motivations, and goals. Attaining this information directly from stakeholders requires regular interaction which needs considerable effort. The persona, as a user representation, is a useful tool that can reduce effort amount by modelling the software users and being the primary source of information. Objective: The aim of this work is to systematically review relevant studies that have investigated the use of personas in RE, the benefits of personas, and challenges during the implementation of personas in RE. Method: We conduct a systematic mapping study (SMS) using a formal protocol based on an established guideline. The systematic search result in a total of 904 publications from six databases. After filtering, we select 78 relevant studies for critical appraisal, analysis, synthesis, and reporting. Results: We identify methods to create and validate personas (mostly qualitative), map the benefits of using personas in RE (to ensure stakeholders' satisfaction, support a human-centric RE, and support requirements engineers' tasks and roles in RE), identify methods used with personas, discover challenges during persona incorporation in RE and their respective mitigation strategies, and recommend potential strategies for unaddressed challenges. We also make recommendations for future research directions. Conclusion: The findings of this SMS will help RE researchers and practitioners better understand the use of personas in RE and highlights key research gaps for future research.
C1 [Karolita, Devi; McIntosh, Jennifer; Kanij, Tanjila; Grundy, John; Obie, Humphrey O.] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Melbourne, Australia.
   [Karolita, Devi] Palangka Raya Univ, Fac Engn, Dept Informat Engn, Palangka Raya, Indonesia.
   [McIntosh, Jennifer] Univ Melbourne, Fac Med Dent & Hlth Sci, Melbourne, Australia.
C3 Monash University; Universitas Palangka Raya (UPR); University of
   Melbourne
RP Karolita, D (corresponding author), Palangka Raya Univ, Fac Engn, Dept Informat Engn, Palangka Raya, Indonesia.
EM devi.karolita@monash.edu; jennifer.mcintosh@unimelb.edu.au;
   tanjila.kanij@monash.edu; john.grundy@monash.edu;
   humphrey.obie@monash.edu
RI Karolita, Devi/KRQ-4704-2024; Grundy, John/AAF-1716-2019
OI Karolita, Devi/0000-0001-6908-9785; Grundy, John/0000-0003-4928-7076
FU Australia Awards Scholarship; Monash Departmental Top-Up Scholarship;
   Australian Research Council (ARC) [FL190100035]; National Health and
   Medical Research Council (NHMRC), Australia [APP2010268]; NHMRC
   Participation in Cancer Screening Programs, Australia [APP2014703]
FX Karolita is supported by Australia Awards Scholarship and Monash
   Departmental Top-Up Scholarship for her Ph.D. study at Monash
   University, Australia.Grundy, Kanij and McIntosh are supported by the
   Australian Research Council (ARC) Laureate Fellowship project
   FL190100035. McIntosh is also funded by a National Health and Medical
   Research Council (NHMRC), Australia Synergy Grant (APP2010268) and NHMRC
   Participation in Cancer Screening Programs, Australia Grant
   (APP2014703).
CR Adagha O, 2015, J DECIS SYST, V24, P178, DOI 10.1080/12460125.2015.1046703
   Almaliki M, 2015, INT CONF RES CHAL, P100, DOI 10.1109/RCIS.2015.7128868
   Alvertis I, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P851, DOI 10.1109/ARES.2016.71
   [Anonymous], 1999, INMATES ARE RUNNING
   Antle Alissa N., 2008, Cognition, Technology & Work, V10, P155, DOI 10.1007/s10111-007-0071-2
   Aoyama M, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/RE.2005.50
   Aoyama M, 2007, INT REQUIR ENG CONF, P185, DOI 10.1109/RE.2007.50
   Binti Abdullah Nik Nailah, 2020, 2020 IEEE First International Workshop on Requirements Engineering for Well-Being, Aging, and Health (REWBAH), P1, DOI 10.1109/REWBAH51211.2020.00007
   Björndal P, 2011, LECT NOTES COMPUT SC, V6769, P378, DOI 10.1007/978-3-642-21675-6_44
   Caraban A, 2020, PROCEEDINGS OF THE 2020 ACM DESIGNING INTERACTIVE SYSTEMS CONFERENCE (DIS 2020), P395, DOI 10.1145/3357236.3395485
   Castro John W., 2012, Communicability, Computer Graphics and Innovative Design for Interactive Systems. First International Symposium, CCGIDIS 2011. Revised Selected Papers, P94, DOI 10.1007/978-3-642-33760-4_8
   Castro JW, 2008, MEX INT CONF ARTIF I, P104, DOI 10.1109/ENC.2008.40
   Cleland-Huang Jane, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P18, DOI 10.1007/978-3-642-37422-7_2
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cooper A., 2007, FACE 3 ESSENTIALS IN
   de Araujo CF, 2014, LECT NOTES COMPUT SC, V8510, P3, DOI 10.1007/978-3-319-07233-3_1
   Dirks Susanne, 2020, HCI International 2020 - Late Breaking Papers. Universal Access and Inclusive Design. 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12426), P52, DOI 10.1007/978-3-030-60149-2_5
   Dittmar A, 2019, LECT NOTES COMPUT SC, V11746, P666, DOI 10.1007/978-3-030-29381-9_40
   Faily S., 2014, ENGAGING STAKEHOLDER, P21
   Faily S, 2021, INF COMPUT SECUR, V29, P787, DOI 10.1108/ICS-03-2021-0035
   Faily S, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P76, DOI 10.1109/REW.2017.23
   Faily S, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2267
   Faily S, 2010, LECT NOTES COMPUT SC, V6409, P111, DOI 10.1007/978-3-642-16488-0_9
   Ferreira B, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P64, DOI 10.5220/0006311600640075
   Ferreira B, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P80, DOI 10.1109/SBES.2015.14
   Ferreira D., 2019, INT C WIRELESS MOBIL, P112, DOI [10.1007/978-3-030-49289-2_9, DOI 10.1007/978-3-030-49289-2_9]
   Forbrig P., 2019, P 11 INT C SUBJECT O, P1, DOI [10.1145/3329007.3329010, DOI 10.1145/3329007.3329010]
   Groen E.C., 2017, REFSQ WORKSHOPS
   Halvorsrud R, 2016, J SERV THEOR PRACT, V26, P840, DOI 10.1108/JSTP-05-2015-0111
   Hien Minh Thi Tran, 2018, Context-Aware Systems and Applications, and Nature of Computation and Communication. 6th International Conference, ICCASA 2017, and 3rd International Conference, ICTCC 2017. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 217), P184, DOI 10.1007/978-3-319-77818-1_18
   Ho S.-H., 2019, INT COGNITIVE CITIES, P563
   Hofstede G., 2007, Reviews in Anthropology, V36, P43
   Jansen BJ, 2022, PAC ASIA J ASSOC INF, V14, P1, DOI 10.17705/1pais.14301
   Jansen J., 2021, STRENGTHS WEAKNESSES, DOI [10.24251/HICSS.2021.604, DOI 10.24251/HICSS.2021.604]
   Khanh N.T., 2017, P 6 INT C SOFTW COMP, P15
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kolski C, 2018, LECT NOTES COMPUT SC, V10924, P136, DOI 10.1007/978-3-319-91743-6_10
   Lachner F, 2015, LECT NOTES COMPUT SC, V9180, P58, DOI 10.1007/978-3-319-20907-4_6
   LeRouge Cynthia., 2010, P 43 ANN HAWAII INT, P1, DOI DOI 10.1109/HICSS.2010.426
   Li CL, 2021, P INT COMP SOFTW APP, P514, DOI 10.1109/COMPSAC51774.2021.00076
   Lopez-Lorca A.A., 2014, P 6 INT WORKSHOP SOC, P25, DOI DOI 10.1145/2661685.2661691
   Losana P, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21186298
   LUCE RD, 1964, J MATH PSYCHOL, V1, P1, DOI 10.1016/0022-2496(64)90015-X
   Malik S.A., 2010, CHI 2010: Work-in-Progress, P3835, DOI DOI 10.1145/1753846.1754065
   Malik SA, 2013, INT CONF RES INNOV, P97, DOI 10.1109/ICRIIS.2013.6716692
   McIntosh J, 2021, 2021 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2021), P31, DOI 10.1109/CHASE52884.2021.00012
   Moser C., 2012, CHI 12 EXTENDED ABST, P453, DOI [10.1145/2212776.2212822, DOI 10.1145/2212776.2212822]
   Moser C, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENTERTAINMENT TECHNOLOGY (ACE 2011)
   Nan Tu, 2010, Proceedings 2010 3rd International Conference on Information Management, Innovation Management and Industrial Engineering (ICIII 2010), P597, DOI 10.1109/ICIII.2010.463
   Nielsen L., 2018, PERS STUD, V4, P1, DOI [10.21153/psj2018vol4no2art799, DOI 10.21153/PSJ2018VOL4NO2ART799]
   Nielsen L, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P1665, DOI 10.1145/2556288.2557080
   Nielsen L, 2013, LECT NOTES COMPUT SC, V8120, P350
   Nunes F, 2010, P 3 INT C PERVASIVE, P1, DOI [10.1145/1839294.1839353, DOI 10.1145/1839294.1839353]
   Price M, 2016, BMC HEALTH SERV RES, V16, DOI 10.1186/s12913-016-1806-7
   Queirós A, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON TECHNOLOGY AND INNOVATION IN SPORTS, HEALTH AND WELLBEING (TISHW)
   Riegelsberger J, 2005, INT J HUM-COMPUT ST, V62, P381, DOI 10.1016/j.ijhcs.2005.01.001
   Rivero Luis, 2021, Human Interface and the Management of Information Information Presentation and Visualization. Thematic Area, HIMI 2021. Held as Part of the 23rd HCI International Conference, HCII 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12765), P227, DOI 10.1007/978-3-030-78321-1_18
   Rodrigues GN, 2018, LECT NOTES COMPUT SC, V10753, P352, DOI 10.1007/978-3-319-77243-1_23
   Salminen J, 2021, INT J HUM-COMPUT INT, V37, P1685, DOI 10.1080/10447318.2021.1908670
   Salminen J, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI [10.1145/3313831.3376502, 10.1145/3334480.3382791]
   Schäfer K, 2019, INT J MED INFORM, V132, DOI 10.1016/j.ijmedinf.2019.07.003
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Sim WW, 2015, PROCEDIA COMPUT SCI, V44, P275, DOI 10.1016/j.procs.2015.03.060
   Sim WW, 2014, PROCEDIA COMPUT SCI, V28, P237, DOI 10.1016/j.procs.2014.03.030
   Sim WW, 2014, PROCEDIA COMPUT SCI, V36, P314, DOI 10.1016/j.procs.2014.09.099
   Sommerville I., 2016, SOFTWARE ENG GLOBAL
   Teixeira A, 2017, UNIVERSAL ACCESS INF, V16, P545, DOI 10.1007/s10209-016-0487-7
   Teka D, 2017, AFRICON, P911, DOI 10.1109/AFRCON.2017.8095603
   Toulmin S., 2003, The uses of argument, DOI DOI 10.1017/CBO9780511840005
   Yussof R.L., 2014, P INT C SCI TECHNOLO, P739
NR 70
TC 3
Z9 3
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107264
DI 10.1016/j.infsof.2023.107264
EA JUN 2023
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2LD5
UT WOS:001035380800001
DA 2024-07-18
ER

PT J
AU Qi, Q
   Cao, J
AF Qi, Qing
   Cao, Jian
TI METHODS: A meta-path-based method for heterogeneous community detection
   in the open source software ecosystem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE OSS ecosystem; Complex network; Heterogeneous information network;
   Meta-path; Community detection
ID SEARCH
AB Detecting communities in the open source software (OSS) ecosystem can help understand the collaborations in the open source software ecosystem and promote an understanding of the dynamics of the ecosystem. However, most existing community detection methods are designed for homogeneous networks, whereas the OSS ecosystem is a heterogeneous network. Therefore, we propose a meta-path-based method for heterogeneous community detection in the OSS ecosystem (METHODS). METHODS comprises four steps. Firstly, a heterogeneous information network is constructed based on meta-paths. Secondly, the Canopy algorithm is used to obtain the number of initial communities. Thirdly, the skip-gram model is used to identify seed nodes for community detection. Finally, METHODS detects heterogeneous communities around the seed nodes. By defining a series of evaluation metrics and verifying these on GitHub datasets, METHODS achieves the best performance of all the other methods. Moreover, the case studies on GitHub also shows METHODS can discover latent communities whose members are potentially relevant.
C1 [Qi, Qing; Cao, Jian] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 201100, Peoples R China.
C3 Shanghai Jiao Tong University
RP Cao, J (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 201100, Peoples R China.
EM qi_ng616@sjtu.edu.cn; cao-jian@sjtu.edu.cn
FU China National Science Foundation [62072301]; Program of Technology
   Innovation of the Science and Technology Com-mission of Shanghai
   Municipality [21511104700]
FX Acknowledgments This work is supported by China National Science
   Foundation (Granted Number 62072301) . This work is also supported by
   the Program of Technology Innovation of the Science and Technology
   Com-mission of Shanghai Municipality (Granted Number 21511104700) .
CR Acharya D. B., 2020, SN Computer Science, V1, P1, DOI DOI 10.1007/S42979-020-00264-2
   Bai ST, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106961
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Bruna J., 2017, Stat, V1050, P27
   Chen ZF, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106849
   Dong YX, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P135, DOI 10.1145/3097983.3098036
   Fan SH, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2478, DOI 10.1145/3292500.3330673
   Fan ZJ, 2021, INT C COMP SUPP COOP, P1141, DOI 10.1109/CSCWD49262.2021.9437851
   Fang YX, 2020, PROC VLDB ENDOW, V13, P854, DOI 10.14778/3380750.3380756
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Guimerà R, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.025101
   Hou TT, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106451
   Hu BB, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1531, DOI 10.1145/3219819.3219965
   Hu JF, 2019, PROC INT CONF DATA, P746, DOI 10.1109/ICDE.2019.00072
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jia CY, 2017, SCI REP-UK, V7, DOI 10.1038/s41598-017-02751-8
   Jia SW, 2015, NEW J PHYS, V17, DOI 10.1088/1367-2630/17/1/013044
   Jian X, 2020, PROC VLDB ENDOW, V13, P1723, DOI 10.14778/3401960.3401969
   Jiang YQ, 2022, PROC VLDB ENDOW, V15, P2307, DOI 10.14778/3551793.3551795
   Jin D., 2021, CORR
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Lancichinetti A, 2009, PHYS REV E, V80, DOI 10.1103/PhysRevE.80.056117
   Li YX, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P658, DOI 10.1145/2736277.2741676
   Li ZT, 2018, IEEE T CYBERNETICS, V48, P1963, DOI 10.1109/TCYB.2017.2720180
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McCallum A., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P169, DOI 10.1145/347090.347123
   Montandon JE, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106485
   Moradi-Jamei B., 2022, P 2021 IEEE ACM INT, P244, DOI [10.1145/3487351.3488278, DOI 10.1145/3487351.3488278]
   Oliveira GP, 2023, SOFTWARE QUAL J, V31, P211, DOI 10.1007/s11219-022-09598-x
   Petrulio F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10039-9
   Pizzuti C, 2020, IEEE T CYBERNETICS, V50, P4997, DOI 10.1109/TCYB.2018.2889413
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Shang JB, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P3191, DOI 10.1145/3292500.3332275
   Shen HW, 2009, PHYSICA A, V388, P1706, DOI 10.1016/j.physa.2008.12.021
   Shen X, 2022, KNOWL-BASED SYST, V252, DOI 10.1016/j.knosys.2022.109404
   Sun Y., 2009, ACM INT C P SERIES, P565, DOI DOI 10.1145/1516360.1516426
   Sun YZ, 2013, TSINGHUA SCI TECHNOL, V18, P329, DOI 10.1109/TST.2013.6574671
   Sun YZ, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P797
   Sun Yizhou, 2012, Synthesis Lectures on Data Mining and Knowledge Discovery, V3, P1
   Tan J, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2319
   Wang D, 2019, ASIA PAC SOFWR ENG, P490, DOI 10.1109/APSEC48747.2019.00072
   White S, 2005, SIAM PROC S, P274
   Wu YL, 2023, INFORM SCIENCES, V621, P652, DOI 10.1016/j.ins.2022.10.126
   Yang C, 2019, FRONT INFORM TECH EL, V20, P222, DOI 10.1631/FITEE.1700196
   Yang JY, 2017, SCI REP-UK, V7, DOI [10.1038/s41598-017-09018-2, 10.1038/srep39903]
   Yang L., 2016, P 25 INT JOINT C ART, V16, P2252, DOI DOI 10.5555/3060832.3060936
   Zhou S, 2020, KNOWL-BASED SYST, V194, DOI 10.1016/j.knosys.2019.105458
NR 47
TC 0
Z9 0
U1 7
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107271
DI 10.1016/j.infsof.2023.107271
EA JUN 2023
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K7II0
UT WOS:001018135000001
DA 2024-07-18
ER

PT J
AU Nordli, ET
   Haugeland, SG
   Nguyen, PH
   Song, H
   Chauvel, F
AF Nordli, Espen Tonnessen
   Haugeland, Sindre Gronstol
   Nguyen, Phu H.
   Song, Hui
   Chauvel, Franck
TI Migrating monoliths to cloud-native microservices for customizable SaaS
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; Architecture; Cloud native; Migration; Multi-tenancy;
   Event-based; Customization
AB Context: It was common that software vendors sell licenses to their clients to use software products, such as Enterprise Resource Planning, which are deployed as a monolithic entity on clients' premises. Moreover, many clients, especially big organizations, often require software products to be customized for their specific needs before deployment on premises.
   Objective: However, as software vendors are migrating their monolithic software products to Cloud-native Software-as-a-Service (SaaS), they face two big challenges that this paper aims at addressing: (1) How to migrate their exclusive monoliths to multi-tenant Cloud-native SaaS; and (2) How to enable tenant-specific customizations for multi-tenant Cloud-native SaaS.
   Method: This paper suggests an approach for migrating monoliths to microservice-based Cloud-native SaaS, providing customers with a flexible customization opportunity, while taking advantage of the economies of scale that the Cloud and multi-tenancy provide. We develop two proofs-of-concept to demonstrate our approach on migrating a reference application of Microsoft called SportStore to a customizable SaaS as well as customizing another Microsoft's microservices reference application called eShopOnContainers.
   Results: We have shown not only the migration to microservices but also how to introduce the necessary infrastructure to support the new services and enable tenant-specific customization.
   Conclusions: Our customization-driven migration approach can guide a monolith to become SaaS having (synchronous and asynchronous) customization power for multi-tenant SaaS. Furthermore, our event-based customization approach can reduce the number of API calls to the main product while enabling different tenant-specific customization services for real-world scenarios.
C1 [Nordli, Espen Tonnessen; Haugeland, Sindre Gronstol] TietoEvry, Molde, Norway.
   [Nguyen, Phu H.; Song, Hui] SINTEF, Trondheim, Norway.
   [Chauvel, Franck] Axbit AS, Molde, Norway.
C3 SINTEF
RP Nguyen, PH (corresponding author), SINTEF, Trondheim, Norway.
EM espen.nordli@tietoevry.com; sindre.haugeland@tietoevry.com;
   phu.nguyen@sintef.no; hui.song@sintef.no; franck.chauvel@axbit.com
FU European Union [958363]; Research Council of Norway [309700]
FX ? The research leading to these results has partially received funding
   from the European Union's Horizon 2020 Research and Innovation programme
   under Grant Agreement No. 958363 (DAT4.Zero) , and from the Research
   Council of Norway under the grant agreement number 309700 (FLEET) .
CR Auer F, 2021, Arxiv, DOI arXiv:1909.08933
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bezemer CP, 2010, PROC IEEE INT CONF S
   Christoforou A, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P134, DOI 10.5220/0007732101340146
   De Toledo SS, 2022, IEEE ACCESS, V10, P37422, DOI 10.1109/ACCESS.2022.3158648
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Evans E., 2003, Domain-Driven Design
   Fowler Martin, 2004, Strangler Fig Application
   Freeman A., 2016, PRO ASP NET CORE MVC, DOI [10.1007/978-1-4842-0397-2, DOI 10.1007/978-1-4842-0397-2]
   Furda A, 2017, SOFTWARE ARCHITECTURE FOR BIG DATA AND THE CLOUD, P227, DOI 10.1016/B978-0-12-805467-3.00013-2
   Guo CJ, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P551, DOI 10.1109/CEC-EEE.2007.4
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Haugeland SG, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P170, DOI 10.1109/SEAA53835.2021.00030
   Henry A, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P45, DOI 10.1007/978-3-030-31646-4_3
   IDG, 2018, 2018 CLOUD COMP SURV
   Kabbedijk J, 2015, J SYST SOFTWARE, V100, P139, DOI 10.1016/j.jss.2014.10.034
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   Kwok T, 2008, P IEEE I C SERV COMP, P179, DOI 10.1109/SCC.2008.138
   Kwok T, 2008, LECT NOTES COMPUT SC, V5364, P633, DOI 10.1007/978-3-540-89652-4_57
   Lee J, 2010, IEEE SOFTWARE, V27, P35, DOI 10.1109/MS.2010.30
   Mazzara M, 2021, IEEE T SERV COMPUT, V14, P1464, DOI 10.1109/TSC.2018.2889087
   Mietzner R, 2008, P IEEE I C SERV COMP, P359, DOI 10.1109/SCC.2008.85
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen P.H., 2019, 2 INT C MICROSERVICE
   Nguyen PH, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P905, DOI 10.1145/3338906.3340452
   Nordli Espen Tonnessen, 2020, Coordination Models and Languages. 22nd IFIP WG 6.1 International Conference, COORDINATION 2020. Held as Part of the 15th International Federated Conference on Distributed Computing Techniques, DisCoTec 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12134), P171, DOI 10.1007/978-3-030-50029-0_11
   Oracle, 2019, OR APPL DEV SUITESCR
   Panichella S, 2021, Arxiv, DOI arXiv:2103.04674
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rothenberger MA, 2009, IEEE T ENG MANAGE, V56, P663, DOI 10.1109/TEM.2009.2028319
   Salesforce, 2019, AP DEV GUID
   Song H., 2020, OPENACCESS SERIES IN, V78, DOI [10.4230/OASIcs.Microservices.2017-2019, DOI 10.4230/OASICS.MICROSERVICES.2017-2019]
   Song H, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P299, DOI [10.1145/3386901.3388912, 10.1007/978-3-030-31646-4_12]
   Song H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P446, DOI 10.1109/ICWS.2019.00081
   Song H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P97, DOI 10.1145/3183399.3183407
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Tsai WT, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P1, DOI 10.1109/SOSE.2013.44
   Tuan Nguyen, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P138, DOI 10.1109/ICWS.2012.23
   Walraven S., 2011, P 12 INT MIDDL C INT, P360
   Walraven S, 2014, J SYST SOFTWARE, V91, P48, DOI 10.1016/j.jss.2014.01.021
   Wolff E., 2019, INT C MICR 2019
NR 43
TC 1
Z9 1
U1 7
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107230
DI 10.1016/j.infsof.2023.107230
EA MAY 2023
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I0GZ8
UT WOS:000999658800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI Characteristics and generative mechanisms of software development
   productivity distributions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Productivity; Distributions; Generative mechanisms
ID STAR PERFORMERS; IMPACT
AB Context: There is considerable variation in the productivity of software developers. Better knowledge about this variation may provide valuable inputs for the design of skill tests and recruitment processes.Objective: This paper aims to identify properties of software development productivity distributions and gain insight into mechanisms that potentially explain these productivity differences. Method: Four data sets that contain the results of software developers solving the same programming tasks were collected. The properties of the productivity distributions were analyzed, the fits of different types of distributions to the productivity data were compared, and potential generative mechanisms that would lead to the types of distributions with the best fit to the productivity data were evaluated.Results: The coefficient of variance of the productivity of the software developers was, on average, 0.55, with the top 50% of developers having average productivity that was 2.44 times higher than the bottom 50% of developers. All productivity samples were right-skewed, with an average skew of 1.79. About 30% of the observed productivity variance was explained by non-systematic, i.e., within-developer, variance. The distributions with the best fit to the empirical productivity data were the lognormal and power-law-with-an-exponential-cutoff distributions. The analysis of the mechanisms leading to productivity differences found no support for the "rich-getting-richer" explanation proposed for other disciplines. Instead, it suggests a constant productivity difference with increasing experience.Conclusion: The substantial difference in productivity among software developers solving programming tasks indicates that a thorough evaluation of skill in the recruitment process can be rewarding. In particular, the long tail towards higher productivity values demonstrates the large gains that can be achieved by detecting and recruiting developers with very high productivity. More research is needed to understand the mechanisms leading to the large productivity differences.
C1 [Jorgensen, Magne] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
RP Jorgensen, M (corresponding author), Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
EM magnej@simula.no
CR Aguinis H, 2018, J APPL PSYCHOL, V103, P1283, DOI 10.1037/apl0000331
   Aguinis H, 2016, PERS PSYCHOL, V69, P3, DOI 10.1111/peps.12095
   Aguinis H, 2014, PERS PSYCHOL, V67, P313, DOI 10.1111/peps.12054
   ALLISON PD, 1974, AM SOCIOL REV, V39, P596, DOI 10.2307/2094424
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   Andriani P, 2009, ORGAN SCI, V20, P1053, DOI 10.1287/orsc.1090.0481
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Berlingieri G, 2017, INT PRODUCT MONIT, V32, P97
   Bradley K.J., 2017, ABUNDANCE STAR TEAMS
   Bryan GE, 2012, AEROSP CONF PROC, DOI 10.1109/AERO.2012.6187328
   Budzier A., 2013, P IRNOP INT RES NETW, P11
   Buzacott JA, 2002, INT J PROD ECON, V78, P37, DOI 10.1016/S0925-5273(00)00086-4
   Campbell DT., 1999, PRIMER REGRESSION AR
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Duma L., 2021, J BEHAV DECIS MAKING, V29, P125
   Fletcher SR, 2008, INT J ADV MANUF TECH, V35, P1113, DOI 10.1007/s00170-006-0793-y
   Frank SA, 2009, J EVOLUTION BIOL, V22, P1563, DOI 10.1111/j.1420-9101.2009.01775.x
   GRANT EE, 1967, IEEE TRANS HUM FACT, VHFE8, P33, DOI 10.1109/THFE.1967.233303
   Guerrero FG, 2020, HELIYON, V6, DOI 10.1016/j.heliyon.2020.e04266
   Halffman W, 2010, MINERVA, V48, P55, DOI 10.1007/s11024-010-9141-3
   Halkjelsvik Torleif, 2018, TIME PREDICTIONS UND, DOI DOI 10.1007/978-3-319-74953-2
   Hergarten S, 1998, GEOPHYS RES LETT, V25, P801, DOI 10.1029/98GL50419
   Hesse J, 2014, FRONT SYST NEUROSCI, V8, DOI 10.3389/fnsys.2014.00166
   Huber JC, 2001, J AM SOC INF SCI TEC, V52, P1089, DOI 10.1002/asi.1173
   Jones HE, 2009, STAT MED, V28, P1645, DOI 10.1002/sim.3583
   Joo H, 2017, J APPL PSYCHOL, V102, P1022, DOI 10.1037/apl0000214
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M., 2020, IEEE T SOFTWARE ENG
   Jorgensen M, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106782
   Jorgensen M, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106559
   Jorgensen M, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.24
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Mitzenmacher M., 2004, Internet Math., V1, P226, DOI DOI 10.1080/15427951.2004.10129088
   Nichols WR, 2019, IEEE SOFTWARE, V36, P71, DOI 10.1109/MS.2019.2908576
   Norton M, 2021, ANN OPER RES, V299, P1281, DOI 10.1007/s10479-019-03373-1
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Pluchino A, 2018, ADV COMPLEX SYST, V21, DOI 10.1142/S0219525918500145
   Prechelt L., 1999, 28 1 GRANT SACKMAN L
   Ramos RT, 2011, NEW IDEAS PSYCHOL, V29, P38, DOI 10.1016/j.newideapsych.2009.12.001
   Ruocco G., 2017, PALGR COMMUN, V3, P1
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   SCHMIDT FL, 1979, J APPL PSYCHOL, V64, P609, DOI 10.1037/0021-9010.64.6.609
   SHOCKLEY W, 1957, P IRE, V45, P279, DOI 10.1109/JRPROC.1957.278364
   Symons Charles, 2019, Rethinking Productivity in Software Engineering, P191
   Van Iddekinge CH, 2018, J MANAGE, V44, P249, DOI 10.1177/0149206317702220
   Weedon MN, 2008, NAT GENET, V40, P575, DOI 10.1038/ng.121
NR 47
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107215
DI 10.1016/j.infsof.2023.107215
EA APR 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F4OY0
UT WOS:000982168800001
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI Improved measurement of software development effort estimation bias
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort estimation; Bias; Measurement
AB Context: While prior software development effort estimation research has examined the properties of estimation error measures, there has not been much research on the properties of measures of estimation bias.Objectives: Improved measurement of software development effort estimation bias.Methods: Analysis of the extent to which measures of estimation bias meet the criterion that perfect estimates should result in zero bias.Results: Recommendations for measurement of estimation bias for estimates of the mean, median, and mode software development effort. The results include the recommendation to avoid a commonly used measure of effort estimation bias.Conclusion: Proper evaluation of estimation bias requires knowledge about the type of estimates evaluated, together with the selection of a measure of estimation bias that gives zero bias for perfect estimates of that type.
C1 [Jorgensen, Magne] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
RP Jorgensen, M (corresponding author), Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
EM magnej@simula.no
CR Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gneiting T, 2017, STAT-US, V6, P204, DOI 10.1002/sta4.148
   Gneiting T, 2011, J AM STAT ASSOC, V106, P746, DOI 10.1198/jasa.2011.r10138
   GOLENKOGINZBURG D, 1988, J OPER RES SOC, V39, P767, DOI 10.1057/jors.1988.132
   Heinrich C, 2014, BIOMETRIKA, V101, P245, DOI 10.1093/biomet/ast048
   Jorgensen M., 2014, P 18 INT C EV ASS SO, P1
   Jorgensen M., 2021, IN PRESS, V2021
   Jorgensen M, 2019, INFORM SOFTWARE TECH, V115, P93, DOI 10.1016/j.infsof.2019.08.006
   Samset K.F., 2016, EXANTEAKADEMISK FORL
   Stuart A., 1994, KENDALLS ADV THEORY
NR 10
TC 0
Z9 0
U1 8
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107157
DI 10.1016/j.infsof.2023.107157
EA JAN 2023
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I5TA8
UT WOS:001003392200001
DA 2024-07-18
ER

PT J
AU Choi, YH
   Nam, J
AF Choi, Yoon-ho
   Nam, Jaechang
TI WINE: Warning miner for improving bug finders
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static bug finder; False positive; Validating warnings
ID STATIC ANALYSIS TOOLS; DIAGNOSIS; VERIFICATION
AB Context: Bug finders have been actively used to efficiently detect bugs. However, developers and researchers found that the bug finders show high false positive rate. The false positives can be caused by two major reasons: (1) users rejecting warnings and (2) false-positive inducing issues (FPI), i.e., incorrect or incomplete rule implementations.Objective: The objective of this study is to reduce warning validation costs for developers of bug finders when they validate the implementation of bug finders to reduce false positives caused by FPI.Methods: To achieve the objective, we propose a novel approach, WINE. The key idea of WINE is to extract representative warnings that are structurally equal to other warnings, or structurally contain other warnings from numerous warnings. The rationale behind the approach is that the warnings detected based on structural information and tokens might be equal to each other, or contain other warnings structurally.Results: We evaluated our approach with PMD, an open source bug finder, and 1,008 Java open source projects maintained by Apache Software Foundation. As a result, WINE extracted just about 2% of all warnings. Among the 2% of warnings, we could find the 28 FPIs of PMD. Among them, ten FPIs were already fixed among them. In addition, we simulated our approach in regression testing of PMD with twelve versions changes of PMD (6.25.0 to 6.37.0). As a result, we observed that WINE can effectively reduce the inspection costs by removing about 95% changed warnings.Conclusion: Based on the results, we suggest that WINE could be adopted to improve the bug finders in terms of reducing false positives cause by FPI. In addition, WINE is helpful in the development processes of bug finders to identify false positives and false negatives, especially in regression testing of bug finders.
C1 [Choi, Yoon-ho; Nam, Jaechang] Handong Global Univ, Pohang, Gyeongsangbuk D, South Korea.
C3 Handong Global University
RP Nam, J (corresponding author), Handong Global Univ, Pohang, Gyeongsangbuk D, South Korea.
EM yhchoi@handong.ac.kr; jcnam@handong.edu
RI Choi, Yoon Ho/JXM-6303-2024
OI Choi, Yoonho/0000-0001-9180-7544
FU National Research Foundation of Korea (NRF) - Korea government (MSIT); 
   [2018R1C1B6001919];  [2021R1F1A1063049]
FX Acknowledgments This work was supported by the National Research
   Foundation of Korea (NRF) grant funded by the Korea government (MSIT)
   (no. 2018R1C1B6001919 and no. 2021R1F1A1063049) . We thank to Hahyun
   Baek, Junhyeok Choi, JunHyun Kim, and Juyoung Park, who helped review
   our experimental data.
CR Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Alikhashashneh EA, 2018, I C COMP SYST APPLIC
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Blackshear S, 2013, ACM SIGPLAN NOTICES, V48, P209, DOI 10.1145/2499370.2462188
   Boogerd C, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P149
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   checkstyle, 2021, CHECKST 8 45 1
   Cheirdari F, 2018, IEEE INT CONF BIG DA, P4782, DOI 10.1109/BigData.2018.8622456
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Chimdyalwar B, 2015, LECT NOTES COMPUT SC, V9109, P573, DOI 10.1007/978-3-319-19249-9_35
   Das A, 2015, LECT NOTES COMPUT SC, V9206, P324, DOI 10.1007/978-3-319-21690-4_19
   Dillig I, 2012, ACM SIGPLAN NOTICES, V47, P181, DOI [10.1145/2345156.2254087, 10.1145/2345156.1993565]
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Fry ZP, 2013, WORK CONF REVERSE EN, P282, DOI 10.1109/WCRE.2013.6671303
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Ilene B., 2006, PRACTICAL SOFTWARE T, P623
   Imtiaz Nasif, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P245, DOI 10.1109/MSR.2019.00049
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Khan A.A., 2016, Int. J. Comput. Netw. Technol., V4
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kim Y, 2010, INFORM SOFTWARE TECH, V52, P210, DOI 10.1016/j.infsof.2009.10.004
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Lee S, 2019, IEEE INT CONF SOFTW, P391, DOI 10.1109/ICST.2019.00048
   Lee W, 2012, LECT NOTES COMPUT SC, V7148, P299, DOI 10.1007/978-3-642-27940-9_20
   Liang GT, 2012, P INT COMP SOFTW APP, P119, DOI 10.1109/COMPSAC.2012.22
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Logozzo F, 2014, ACM SIGPLAN NOTICES, V49, P294, DOI [10.1145/2594291.2594326, 10.1145/2666356.2594326]
   Mangal R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P462, DOI 10.1145/2786805.2786851
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Muske T, 2014, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME.2014.97
   Muske TB, 2013, IEEE INT WORK C SO, P106, DOI 10.1109/SCAM.2013.6648191
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2019, INFORM SOFTWARE TECH, V112, P164, DOI 10.1016/j.infsof.2019.04.014
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Novak J., 2010, 2010 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO), P418
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Perforce, 2021, STAT COD AN C C C JA
   PMD, 2021, ERR PRON
   PMD, 2021, PMD
   Podelski A, 2016, LECT NOTES COMPUT SC, V9762, P151, DOI 10.1007/978-3-319-41135-4_9
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P188, DOI 10.1109/ASE.2008.29
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Reynolds ZP, 2017, 2017 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2017), P55, DOI 10.1109/SER-IP.2017..20
   Rival X, 2005, LECT NOTES COMPUT SC, V3672, P303
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Schnappinger M, 2019, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2019.00043
   Simulink M., 2021, POLYSPACE CODE PROVE
   Synopsys, 2021, COV SAST SOFTW
   Toman J., 2017, 2nd Summit on Advances in Programming Languages (SNAPL 2017), V71, p18:1, DOI [DOI 10.4230/LIPICS.SNAPL.2017.18, 10.4230/LIPIcs, DOI 10.4230/LIPICS]
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Venkatasubramanyam RD, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P472, DOI 10.1145/2591062.2591123
   Vetro' Antonio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P110, DOI 10.1109/MSR.2010.5463283
   Yan M, 2017, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2017.201
   Yang XQ, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114134
   Yu S., 2010, 2010 2 IEEE INT C IN, P352, DOI [10.1109/ICIME.2010.5477581, DOI 10.1109/ICIME.2010.5477581]
   Zhang DL, 2013, ASIA PAC SOFWR ENG, P172, DOI 10.1109/APSEC.2013.33
   Zhang DF, 2014, ACM SIGPLAN NOTICES, V49, P569, DOI 10.1145/2535838.2535870
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 73
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107109
DI 10.1016/j.infsof.2022.107109
EA NOV 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200014
DA 2024-07-18
ER

PT J
AU Dreef, K
   Palepu, VK
   Jones, JA
AF Dreef, Kaj
   Palepu, Vijay Krishna
   Jones, James A.
TI Exploring granular test coverage and its evolution with matrix
   visualizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Visualization; Software comprehension; Software test
   comprehension
ID UNIT TEST
AB Context: Current software-development tools that are used in practice make understanding the test execution of software difficult, for both granular tasks (e.g., answering questions such as, "which test cases execute this method?") and global tasks (e.g., answering questions such as, "what is the proportion of unit tests to system tests?"). Current tools typically support local, file-based views of a project's test suite and its execution data, and rarely offer a global overview. Even more rarely, do they provide access to historical information of this nature. Such global overviews can provide a larger context for a method's execution by test cases; help identify other similar, or related methods; and even reveal similarity between individual tests. Objective: This work approaches such challenges with a novel, interactive, matrix-based visual interface that provides a global overview of a software project's test suite, specifically in the context of the methods available in the project's codebase. Through a series of interactive functions to sort, filter, query, and explore a testmatrix visualization, we evaluate how developers can effectively answer questions about their project's test suite, and the code executed by such tests.Method: We built a dynamic test-suite analysis and software-visualization tool that implements our designed interface to address the challenges of understanding the testing of software systems. With this implementation, we conducted a user study of 20 software developers to assess their ability to understand and report test execution information and measured accuracy and time. Additionally, we present a series of case studies to demonstrate a number of insights that our tool reveals.Results: Our evaluations, performed on 26 real-world software systems, show that the interactive visualization assisted developers to answer questions about software tests and the code they execute. Further, the visualization consistently outperforms traditional development tools, both in accuracy and time taken to complete software-engineering tasks.Conclusion: Global-overview test matrices offer novel perspectives on test-suite composition, which can guide software development and testing practices.
C1 [Dreef, Kaj; Jones, James A.] Univ Calif Irvine, Irvine, CA 92697 USA.
   [Palepu, Vijay Krishna] Microsoft, Redmond, WA USA.
C3 University of California System; University of California Irvine;
   Microsoft
RP Jones, JA (corresponding author), Univ Calif Irvine, Irvine, CA 92697 USA.
EM kdreef@uci.edu; Vijay.Palepu@microsoft.com; jajones@uci.edu
OI Jones, James/0000-0002-5359-7934
CR Abello J, 2004, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2004, PROCEEDINGS, P183, DOI 10.1109/INFVIS.2004.46
   Abuthawabeh A., 2013, Working Conference on Software Visualization (VISSOFT), P1, DOI DOI 10.1109/VISSOFT.2013.6650549
   Aljawabrah Nadera., 2019, P 2 INT C DATA SCI E, P1
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bostock M, 2011, IEEE T VIS COMPUT GR, V17, P2301, DOI 10.1109/TVCG.2011.185
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Deng F., 2011, Visualizing Software for Understanding and Analysis (VISSOFT), 2011 6th IEEE International Workshop on, P1
   Dietrich J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P91
   Elmqvist N, 2008, IEEE PACIFIC VISUALISATION SYMPOSIUM 2008, PROCEEDINGS, P215
   Ens B, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P117, DOI 10.1109/VISSOFT.2014.28
   Feng Y, 2018, INT C PROGRAM COMPRE, P86, DOI 10.1145/3196321.3196343
   Fernandez NF, 2017, SCI DATA, V4, DOI 10.1038/sdata.2017.151
   Ghoniem M., 2005, Information Visualization, V4, P114, DOI 10.1057/palgrave.ivs.9500092
   Ghoniem M, 2004, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2004, PROCEEDINGS, P17, DOI 10.1109/INFVIS.2004.1
   Hammad M., 2020, INT J COMPUT DIGITAL, V9
   Henry N, 2007, LECT NOTES COMPUT SC, V4663, P288
   Henry N, 2007, IEEE T VIS COMPUT GR, V13, P1302, DOI 10.1109/TVCG.2007.70582
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   jacoco, JaCoCo Java code coverage library
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kim J., 2015, TACOCO INTEGRATED SO
   Koochakzadeh N, 2010, LECT NOTES COMPUT SC, V6303, P129, DOI 10.1007/978-3-642-15585-7_12
   Kuhn A, 2010, J SOFTW MAINT EVOL-R, V22, P191, DOI 10.1002/smr.414
   Morpheus, 2020, US
   Nasehi SeyedMehdi., 2010, ICSM, P1
   Okoe M, 2019, IEEE T VIS COMPUT GR, V25, P2940, DOI 10.1109/TVCG.2018.2865940
   Otoom A.F., 2016, P 17 INT ARAB C INF
   Palepu VK, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P86, DOI 10.1109/VISSOFT.2015.7332418
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rodrigues A, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P61, DOI [10.1109/QUATIC.2016.019, 10.1109/QUATIC.2016.17]
   Tahir A, 2015, INT WORKS EMERG TREN, P21, DOI 10.1109/WETSoM.2015.12
   Tamisier Thomas, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P227, DOI 10.1007/978-3-642-40840-3_33
   Tilstra A.H., 2010, DSM 2010 P 12 INT DS
   Torkar R, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/SWSTE.2003.1245437
   Van Rompaey Bart, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P11, DOI 10.1109/ASEW.2008.4686316
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vasanthapriyan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P472, DOI 10.1109/QRS-C.2017.82
   Wang SN, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P272, DOI 10.1109/SANER50967.2021.00033
   Yi JS, 2010, INT J HUM-COMPUT INT, V26, P1031, DOI 10.1080/10447318.2010.516722
   Yu CS, 2019, PROC IEEE INT CONF S, P501, DOI 10.1109/ICSME.2019.00084
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhao LY, 2003, J SYST SOFTWARE, V66, P65, DOI 10.1016/S0164-1212(02)00064-X
NR 44
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107085
DI 10.1016/j.infsof.2022.107085
EA NOV 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200006
DA 2024-07-18
ER

PT J
AU Zhang, JZ
   Hua, JP
   Niu, N
   Chen, SS
   Savolainen, J
   Liu, C
AF Zhang, Jianzhang
   Hua, Jinping
   Niu, Nan
   Chen, Sisi
   Savolainen, Juha
   Liu, Chuang
TI Exploring privacy requirements gap between developers and end users
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Privacy policy; Privacy reviews; Privacy requirements; Requirements gap;
   Requirements engineering
AB Context: Privacy policies document the privacy requirements guiding developers. Though privacy policies analysis has drawn increasing attention recently, how end users perceive privacy requirements has been less explored.Objective: We empirically explore the privacy requirements gap between developers and end users to derive beneficial insights into users' privacy concerns to support maintenance.Method: We present a semi-automatic privacy requirements gap analysis framework based on text mining including information retrieval, topic modeling, and computational linguistic techniques. Results: The preliminary results of applying our framework to Facebook show that: (1) topic comparison reveals that both privacy related reviews and policy statements involve privacy requirements types of collection, usage, and disclosure as well as account security. The retention requirements are almost not mentioned in reviews as they are hard to be directly perceived; (2) content comparisons reveal that though overlapping with the privacy policy statements, reviews are more general, informal, and negative in wording.Conclusion: The illustrative example with Facebook demonstrates the potential usage of our framework in informing software maintenance, e.g., privacy relevant testing and privacy policy refinement.
C1 [Zhang, Jianzhang; Hua, Jinping; Chen, Sisi; Liu, Chuang] Hangzhou Normal Univ, Alibaba Business Sch, Hangzhou, Zhejiang, Peoples R China.
   [Niu, Nan] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH 45221 USA.
   [Savolainen, Juha] Danfoss Drives AS, Grasten, Sonderborg, Denmark.
C3 Hangzhou Normal University; University System of Ohio; University of
   Cincinnati
RP Liu, C (corresponding author), Hangzhou Normal Univ, Alibaba Business Sch, Hangzhou, Zhejiang, Peoples R China.
EM jianzhang.zhang2017@gmail.com; huajinping@stu.hznu.edu.cn;
   nan.niu@uc.edu; chensisi1@stu.hznu.edu.cn; juha.savolainen@danfoss.com;
   liuchuang2022@sina.com
FU Hangzhou Normal University Scientific Research Staring Foundation; Open
   Project of Zhejiang Key Laboratory of Film and Television Media
   Technology Research; National Natural Science Foundation of China; 
   [4135C50220204073];  [CM2021003];  [61873080]
FX We would like to thank anonymous reviewers for their insight- ful and
   constructive comments. This project was partially funded by Hangzhou
   Normal University Scientific Research Staring Foundation (Grant No.
   4135C50220204073) , the Open Project of Zhejiang Key Laboratory of Film
   and Television Media Technology Research (Grant No. CM2021003) , and the
   National Natural Science Foundation of China (Grant No. 61873080) .
CR Caramujo J, 2019, REQUIR ENG, V24, P1, DOI 10.1007/s00766-018-0305-2
   Del Alamo JM, 2022, COMPUTING, V104, P2053, DOI 10.1007/s00607-022-01076-3
   Nguyen DC, 2019, P IEEE S SECUR PRIV, P555, DOI 10.1109/SP.2019.00012
   Hatamian M, 2019, COMPUT SECUR, V83, P332, DOI 10.1016/j.cose.2019.02.010
   Liao S, 2020, ANN COMPUT SECURITY, P856, DOI 10.1145/3427228.3427250
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
NR 10
TC 0
Z9 0
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107090
DI 10.1016/j.infsof.2022.107090
EA OCT 2022
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6D6JH
UT WOS:000882793900003
DA 2024-07-18
ER

PT J
AU Mateus, BG
   Martinez, M
   Kolski, C
AF Mateus, Bruno Gois
   Martinez, Matias
   Kolski, Christophe
TI Learning migration models for supporting incremental language migrations
   of software applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution and maintenance; Software migration; Software
   modernization; Android; Java; Kotlin; Machine learning; Supervised
   learning; Learn -to -rank; Ranking model
ID PREDICTION; SYSTEMS
AB Context: A Legacy system can be defined as a system that significantly resists modification and evolution. According to the literature, there are two main strategies to migrate a legacy system: (a) to replace the legacy system by a new one, (b) to incrementally migrate parts from the legacy system to the new one. Incremental migration allows developers to better control the risks that may occur during the migration process. However, this strategy is more complex because it requires decomposition of the legacy system into different parts, e.g. a set of files, and to define the order of migration of them along the migration process. To our knowledge, there is no approach to support developers on those activities.Objective: This paper presents an approach, named MigrationExp, to support incremental language migrations of applications from one source language to another target language. MigrationExp recommends the files that should be migrated first in a particular migration iteration. As a novelty, our approach relies on a ranking model learned, using a learning-to-rank algorithm, from migrations made by developers.Method: We validate our approach in the context of the migrations of Android apps, from Java to Kotlin, a new official language for Android. We train our model using migrations of Java code to Kotlin written by developers on open-source applications.Results: The results show that, on the task of proposing files to migrate, our approach outperforms a previous migration strategy proposed by Google, in terms of its ability to accurately predict empirically observed migration orders.Conclusion: Since most Android applications are written in Java, we conclude that approaches to support developers such as MigrationExp may significantly impact the development of Android applications.
C1 [Mateus, Bruno Gois; Martinez, Matias; Kolski, Christophe] Univ Polytech Hauts Defrance, Valenciennes, France.
   [Mateus, Bruno Gois; Martinez, Matias; Kolski, Christophe] LAMIH, UMR, CNRS 8201, Famars, France.
RP Martinez, M (corresponding author), Univ Polytech Hauts Defrance, Valenciennes, France.
EM matias.martinez@uphf.fr
RI Martinez, Matias/ABA-8871-2021
OI Martinez, Matias/0000-0002-2945-866X
CR A. Developers, 2020, AD KOTL LARG TEAMS
   A. Developers, 2020, ANDR KOTL 1 APPR
   A. Developers, 2020, BUILD BETT APPS ANDR
   Abdelaziz M, 2020, MIGRATING JAVA ENTER
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Alrubaye H, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106140
   Aniche M., 2015, Tech. Rep.
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Ardito L, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106374
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Bateman A., 1994, CA2894 DUBL CIT U SC
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Bisbal J., 1997, A survey of research into legacy system migration. Technique report
   Brodie M., 1995, DARWIN INCREMENTAL M
   Brodie M.L., 1995, LEGACY INFORM SYSTEM
   Bruno Gois Mateus, 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410676, DOI 10.1145/3382494.3410676]
   Burges Christopher J. C., 2010, Learning, V11, P81
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Cao ZR, 2018, AUTOMAT SOFTW ENG, V25, P501, DOI 10.1007/s10515-018-0231-z
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Chaidarun A., 2020, MIGRATING DUOLINGOS
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Coppola R, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P8, DOI 10.1145/3340496.3342759
   Du MN, 2020, COMMUN ACM, V63, P68, DOI 10.1145/3359786
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Flauzino M, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P23, DOI 10.1145/3267183.3267186
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Ganjisaffar Y, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P85
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gu XD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3675
   Hall MA, 1998, AUST COMP S, V20, P181
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hoffa Felipe, 2016, Github on bigquery: Analyze all the open source code.
   Hussain S, 2019, SOFT COMPUT, V23, P13433, DOI 10.1007/s00500-019-03882-y
   Iannone E, 2020, INT C PROGRAM COMPRE, P451, DOI 10.1145/3387904.3389298
   Jackson P., 1986, Introduction to Expert Systems
   Kaur I., 2012, P 2 INT C COMPUTATIO, P694, DOI DOI 10.1145/2393216.2393332
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li H, 2011, IEICE T INF SYST, VE94D, P1854, DOI 10.1587/transinf.E94.D.1854
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Lundberg SM, 2017, ADV NEUR IN, V30
   Martin J, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P143, DOI 10.1109/CSMR.2002.995799
   Martinez M, 2022, IEEE T SOFTWARE ENG, V48, P4521, DOI 10.1109/TSE.2021.3120367
   Mateus B.G., 2018, FAMAZOA F DROID ANDR
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   Mossienko M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P40, DOI 10.1109/CSMR.2003.1192409
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Nizet J.-B, 2018, STORY JAVA KOTLIN MI
   Oliveira V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P206, DOI [10.1109/saner48275.2020.9054859, 10.1109/SANER48275.2020.9054859]
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Peters M, 2021, IEEE INT WORK C SO, P36, DOI 10.1109/SCAM52516.2021.00014
   Press duolingo, 2020, OUR MISSION
   Scalabrino S., 2017, J SOFTW EVOL PROCESS, V26, P1, DOI [10.1002/smr, DOI 10.1002/SMR]
   Shatnawi R, 2014, IET SOFTW, V8, P113, DOI 10.1049/iet-sen.2013.0008
   Singh Gagandeep, 2013, Software Engineering Notes, V38, DOI 10.1145/2507288.2507311
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Trudel M., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P19, DOI 10.1109/WCRE.2012.12
   Wang F, 2018, ASIA PAC SOFWR ENG, P335, DOI 10.1109/APSEC.2018.00048
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wegner P, 1996, ACM COMPUT SURV, V28, P285, DOI 10.1145/234313.234424
   Winer D, 2019, ANDROID DEV BLOG AND
   Wu B, 1997, THIRD IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS, PROCEEDINGS, P200, DOI 10.1109/ICECCS.1997.622311
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhao F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P298, DOI 10.1109/QRS.2015.49
   Zhuang HL, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P499, DOI 10.1145/3437963.3441796
NR 80
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107082
DI 10.1016/j.infsof.2022.107082
EA OCT 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400005
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Cheng, WY
   Hu, P
   Wei, SZ
   Mo, R
AF Cheng, Wuyan
   Hu, Po
   Wei, Shaozhi
   Mo, Ran
TI Keyword-guided abstractive code summarization via incorporating
   structural and contextual information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Source code summarization; Encoder-decoder; Information incorporation;
   Dynamic vocabulary; Deep learning
AB Context: Source code summarization is a crucial yet far from settled task for describing structured code snippets in natural language. High-quality code summaries could effectively facilitate program comprehension and software maintenance. A good code summary is supposed to have the following characteristics: complete information, correct meaning, and consistent description. In recent years, numerous approaches have been proposed for code summarization, but it is still very challenging for developers to automatically learn the complex semantics from the source code and generate complete, correct and consistent code summaries.
   Objective: In this paper, we propose KGCodeSum, a novel keyword-guided abstractive code summarization approach that incorporates structural and contextual information.
   Methods: To improve summaries' quality, we leverage both the structural information embedded in code itself and the contextual information from related code snippets. Meanwhile, we make use of keywords to guide summaries' generation to guarantee the code summaries contain key information. Finally, we propose a new dynamic vocabulary strategy which can effectively resolve the UNK problems in code summaries.
   Results: Through our evaluation on the large-scale benchmark datasets with 2.1 million java method-comment pairs and 1.1 million C/C++ function-summary pairs, We have observed that our approach could generate better code summaries than existing state-of-the-art approaches in terms of completeness, correctness and consistency. In addition, we also find that incorporating the dynamic vocabulary strategy into our approach could significantly save time and space in the model training process.
   Conclusion: Our KGCodeSum approach could effectively generate code summaries.
C1 [Hu, Po; Mo, Ran] Cent China Normal Univ, Hubei Prov Key Lab Artificial Intelligence & Smar, Wuhan, Hubei, Peoples R China.
   [Cheng, Wuyan; Hu, Po; Wei, Shaozhi; Mo, Ran] Cent China Normal Univ, Sch Comp, Wuhan, Hubei, Peoples R China.
   [Hu, Po] Cent China Normal Univ, Natl Language Resources Monitoring & Res Ctr Netw, Wuhan, Hubei, Peoples R China.
C3 Central China Normal University; Central China Normal University;
   Central China Normal University
RP Hu, P; Mo, R (corresponding author), Cent China Normal Univ, Hubei Prov Key Lab Artificial Intelligence & Smar, Wuhan, Hubei, Peoples R China.
EM wuyanc@mails.ccnu.edu.cn; phu@mail.ccnu.edu.cn; wsz@mails.ccnu.edu.cn;
   moran@mail.ccnu.edu.cn
OI Mo, Ran/0000-0001-7556-153X; Hu, Po/0000-0002-7968-2838
FU Thirteen Five-year Research Planning Project of National Language
   Committee [YB135-149]; National Natural Science Foundation of China
   [62002129]; Self-determined Research Funds of CCNU from the Colleges'
   Basic Research and Operation of MOE [CCNU20ZT012, CCNU20TD001]
FX This work was supported by the Thirteen Five-year Research Planning
   Project of National Language Committee (No. YB135-149), the National
   Natural Science Foundation of China (No. 62002129), and the
   Self-determined Research Funds of CCNU from the Colleges' Basic Research
   and Operation of MOE (No. CCNU20ZT012, CCNU20TD001).
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M., 2018, INT C LEARN REPR ICL
   [Anonymous], 2015, Advances in neural information processing systems
   Bansal A, 2021, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC52881.2021.00032
   Bengio Y., 2014, TECHNICAL REPORT
   Chen HD, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1936, DOI 10.18653/v1/P17-1177
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Feng Z., 2020, EMNLP
   Fernandes P, 2019, 7 INT C LEARNING REP
   Gu JT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1631
   Guo D., 2021, ICLR
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haque S., 2020, MSR 20 17 INT C MIN, P300, DOI DOI 10.1145/3379597.3387449
   Haque S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P330, DOI 10.1109/SANER50967.2021.00038
   Hellendoorn V.J., 2019, INT C LEARN REPR
   HOPFIELD JJ, 1982, P NATL ACAD SCI-BIOL, V79, P2554, DOI 10.1073/pnas.79.8.2554
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kingma D, 2014, C LEARNING REPRESENT, P12
   Kipf TN, 2016, ARXIV
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li W, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4078
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Lientz B.P., 1980, IEEE PROC COMPUT DIG, V127
   Lin C, 2021, INT C PROGRAM COMPRE, P184, DOI 10.1109/ICPC52881.2021.00026
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Lopes C, 2010, UCI source code data sets
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Lu Yangyang, 2019, Software Engineering and Methodology for Emerging Domains, P3, DOI DOI 10.1007/978-981-15-0310-8_1
   McBurney P.W., 2016, Improving program comprehension via automatic documentation generation
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Nallapati R., 2016, Sequence-to-sequence rnns for text summarization
   Nguyen X., 2020, INT C LEARNING REPRE
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Sutskever I, 2014, ADV NEUR IN, V27
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wu HQ, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P1078
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xu Kun, 2018, ARXIV180400823
   Yu XH, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P3938
NR 54
TC 4
Z9 4
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106987
DI 10.1016/j.infsof.2022.106987
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700002
DA 2024-07-18
ER

PT J
AU Shi, CC
   Xiang, Y
   Yu, JS
   Sood, K
   Gao, LX
AF Shi, Chaochen
   Xiang, Yong
   Yu, Jiangshan
   Sood, Keshav
   Gao, Longxiang
TI Machine translation-based fine-grained comments generation for solidity
   smart contracts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Solidity; Smart contract; Reinforcement learning; Machine translation;
   Automatic comments generation
AB Context. As self-executing programs on blockchain platforms, smart contracts can build a trusted environment between multi-parties. However, participants who lack programming knowledge usually have difficulties understanding smart contracts by reading the source code. It brings them difficulties and risks when interacting with decentralized applications. Objective. We aim to translate the smart contract source code into natural language descriptions as fine-grained in-line comments to help people better understand, learn and operate smart contracts. Method. We propose an automated translation approach for smart contracts written in Solidity, termed SolcTrans, based on an Syntax Tree (AST) and formal grammar. We have investigated representative Solidity smart contracts, identified the AST parsing paths and core attributes used for translation, and proposed corresponding translation templates for special statements. Then, we leveraged reinforcement learning to train a Probabilistic Context-Free Grammar-based syntax synthesizer used to generate comprehensible English sentences as comments. Result. The experimental results show that SolcTrans outperforms four state-of-the-art neural machine trans-lation models under currently available training data and is less affected by lengths of code snippets and translation outputs. We also conducted a human evaluation among 20 volunteers and asked them to score the generated comments. The results demonstrate that SolcTrans performs well on three metrics: Accuracy, Readability, and Instructiveness. Conclusion. Our approach produces high-quality fine-grained comments for smart contract source code under the small training dataset, which creates a paradigm for future studies.
C1 [Shi, Chaochen; Xiang, Yong; Sood, Keshav] Deakin Univ, Sch Informat Technol, Geelong, Australia.
   [Yu, Jiangshan] Monash Univ, Fac Informat Technol, Subang Jaya, Australia.
   [Gao, Longxiang] Qilu Univ Technol, Jinan, Peoples R China.
C3 Deakin University; Monash University; Qilu University of Technology
RP Shi, CC (corresponding author), Deakin Univ, Sch Informat Technol, Geelong, Australia.
EM shicha@deakin.edu.au; yong.xiang@deakin.edu.au; jiangshan.yu@monash.edu;
   keshav.sood@deakin.edu.au
RI Xiang, Yong/ABB-3302-2022; Gao, Longxiang/AAR-8605-2020; Yu,
   Jiangshan/AAC-9520-2019
OI Xiang, Yong/0000-0003-3545-7863; Gao, Longxiang/0000-0002-3026-7537; Yu,
   Jiangshan/0000-0001-8006-7392; Shi, Chaochen/0000-0002-5543-1655; SOOD,
   Keshav/0000-0002-2127-1438
FU Australian Research Council [DP220100983]
FX This work was supported in part by the Australian Research Council(Grant
   No. DP220100983).
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2007, Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics
   [Anonymous], 2021, SOLIDITY 0 8 4 DOCUM
   Banerjee S, 2005, ACL WORKSHOP INTRINS, P65
   Ben-Nun T., 2018, Advances in Neural Information Processing Systems, P3589
   Canfora Gerardo, 2021, 2021 IEEE International Conference on Software Maintenance and Evolution (ICSME), P579, DOI 10.1109/ICSME52107.2021.00060
   ChainAlysis, 2022, CRYPT CRIM TRENDS 20
   Chen JY, 2021, ENVIRON HEALTH PREV, V26, DOI 10.1186/s12199-020-00925-x
   DefiLlama, ABOUT US
   Duneanalytics.Com, US
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X., 2021, 2021 36 IEEE ACM INT
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Lange M., 2009, Informatica Didactica, V8
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Lin C.-Y., 2004, COLING 2004 P 20 INT, P501, DOI DOI 10.3115/1220355.1220427
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Nguyen T.P., 2008, P 12 C COMPUTATIONAL, P143
   Shen LB, 2010, COMPUT LINGUIST, V36, P649, DOI 10.1162/coli_a_00015
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Sutton RS, 2000, ADV NEUR IN, V12, P1057
   Taylor A, 2003, Treebanks: Building and using parsed corpora, P5, DOI [DOI 10.1007/978-94-010-0201-1_1, 10.1007/978-94-010-0201-11]
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Vaswani A, 2017, ADV NEUR IN, V30
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Zarir AA, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3431726
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 36
TC 2
Z9 2
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107065
DI 10.1016/j.infsof.2022.107065
EA SEP 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400002
OA Bronze
DA 2024-07-18
ER

PT J
AU Theunissen, T
   van Heesch, U
   Avgeriou, P
AF Theunissen, Theo
   van Heesch, Uwe
   Avgeriou, Paris
TI A mapping study on documentation in Continuous Software Development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping studies; Systematic reviews; Continuous Software
   Development; Lean; Agile; DevOps; Documentation
ID SYSTEMATIC LITERATURE-REVIEWS; AGILE REQUIREMENTS; CONTINUOUS
   DEPLOYMENT; GOOGLE-SCHOLAR; ARCHITECTURE; QUALITY; IMPACT; TOOL;
   FRAMEWORK; DECISIONS
AB Context: With an increase in Agile, Lean, and DevOps software methodologies over the last years (collectively referred to as Continuous Software Development (CSD)), we have observed that documentation is often poor. Objective: This work aims at collecting studies on documentation challenges, documentation practices, and tools that can support documentation in CSD. Method: A systematic mapping study was conducted to identify and analyze research on documentation in CSD, covering publications between 2001 and 2019. Results: A total of 63 studies were selected. We found 40 studies related to documentation practices and challenges, and 23 studies related to tools used in CSD. The challenges include: informal documentation is hard to understand, documentation is considered as waste, productivity is measured by working software only, documentation is out-of-sync with the software and there is a short-term focus. The practices include: non-written and informal communication, the usage of development artifacts for documentation, and the use of architecture frameworks. We also made an inventory of numerous tools that can be used for documentation purposes in CSD. Overall, we recommend the usage of executable documentation, modern tools and technologies to retrieve information and transform it into documentation, and the practice of minimal documentation upfront combined with detailed design for knowledge transfer afterwards. Conclusion: It is of paramount importance to increase the quantity and quality of documentation in CSD. While this remains challenging, practitioners will benefit from applying the identified practices and tools in order to mitigate the stated challenges.
C1 [Theunissen, Theo; van Heesch, Uwe] HAN Univ Appl Sci, Arnhem, Netherlands.
   [van Heesch, Uwe; Avgeriou, Paris] Univ Groningen, Groningen, Netherlands.
C3 University of Groningen
RP Theunissen, T (corresponding author), HAN Univ Appl Sci, Arnhem, Netherlands.
EM theo.theunissen@gmail.com
OI Avgeriou, Paris/0000-0002-7101-0754
CR Abdullah N., 2011, ... on Agile Requirements, P1, DOI DOI 10.1145/2068783.2068784
   Abrahamsson P., 2002, Agile software development methods: Review and analysis, P478, DOI DOI 10.1076/CSED.12.3.167.8613
   Abrahamsson P, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P31, DOI 10.1007/978-3-642-12575-1_3
   Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Adzic G, 2011, BOOK YOUR TRAINING D, P20
   Agile, 2019, AGILE 2008 TORONTO A
   Agrawal A, 2016, PROCEDIA COMPUT SCI, V78, P291, DOI 10.1016/j.procs.2016.02.056
   Ahmad MO, 2018, J SYST SOFTWARE, V137, P96, DOI 10.1016/j.jss.2017.11.045
   Ajmeri N., 2010, 2010 Third International Workshop on Managing Requirements Knowledge (MARK 2010), P32, DOI 10.1109/MARK.2010.5623810
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Ambler Scott, 2002, AGILE MODELING EFFEC, P400, DOI [10.1017/CBO9780511817533.018, DOI 10.1017/CBO9780511817533.018]
   Ambler SW, 2016, LECT NOTES BUS INF P, V238, P3, DOI 10.1007/978-3-319-27033-3_1
   Ambler Scott W, 2012, AGILE LEAN DOCUMENTA
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Andreas Jedlitschka, 2014, LECT NOTES COMPUTER, V8892, P27, DOI [10.1007/978- 3- 319-13835-0, DOI 10.1007/978-3-319-13835-0]
   Anita, 2014, IEEE INT ADV COMPUT, P1454, DOI 10.1109/IAdCC.2014.6779540
   [Anonymous], 2017, IEEE Std 2755-2017, DOI [DOI 10.1109/IEEESTD.2017.8070671, https://doi.org/10.1109/IEEESTD.2017.8070671]
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2011, 420102010 ISOIECIEEE
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   [Anonymous], 2020, SOA REFERENCE ARCHIT
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Arvanitou EM, 2017, J SYST SOFTWARE, V127, P52, DOI 10.1016/j.jss.2017.01.026
   Auer M, 2003, EUROMICRO CONF PROC, P267
   Bachmann FH, 2013, IEEE SOFTWARE, V30, P9, DOI 10.1109/MS.2013.77
   Balalaie A, 2016, COMM COM INF SC, V567, P201, DOI 10.1007/978-3-319-33313-7_15
   Baldan P, 2005, LECT NOTES COMPUT SC, V3267, P18
   Bang S.K., 2013, P 2 ANN C RES INF TE, P61, DOI DOI 10.1145/2512209.2512229
   Barbara A., 2004, P 26 INT C SOFTW ENG, P786
   Barros-Justo JL, 2018, IEEE LAT AM T, V16, P1539, DOI 10.1109/TLA.2018.8408452
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Baumeister H, 2004, LECT NOTES COMPUT SC, V3134, P1
   Bazaz A, 2006, DASC 2006: 2ND IEEE INTERNATIONAL SYMPOSIUM ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P95
   Beck K., 2004, Extreme Programming Explained: Embrace Change, V2nd, P224
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Beck Kent, 2007, DR DOBBS J, V21
   Beck Kent., 2014, EXTREME PROGRAMMING, V28, P1997
   Bellomo S, 2014, PROC IEEE INT CONF S, P545, DOI 10.1109/ICSME.2014.91
   Bellomo S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P982, DOI 10.1109/ICSE.2013.6606648
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V77, P61, DOI 10.1016/j.infsof.2016.03.008
   Blair S, 2010, IEEE SOFTWARE, V27, P26, DOI 10.1109/MS.2010.52
   Borrego G, 2019, INFORM SOFTWARE TECH, V112, P68, DOI 10.1016/j.infsof.2019.04.008
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Bostrom G., 2006, P 2006 INT WORKSH SO, P11
   Bouabid H, 2011, SCIENTOMETRICS, V88, P199, DOI 10.1007/s11192-011-0370-5
   Boukhelfa K., 2010, ACS IEEE INT C COMP, P1, DOI [10.1109/AICCSA.2010.5586987, DOI 10.1109/AICCSA.2010.5586987]
   Bowman James., 2017, CONTINUOUS DELIVERY
   Braude E, 2017, 2017 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P27, DOI 10.1109/RCoSE.2017.1
   Braun S, 2017, PROCEDIA COMPUT SCI, V110, P117, DOI 10.1016/j.procs.2017.06.129
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brown N, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P103, DOI 10.1109/WICSA.2011.22
   Brown Nanette, 2010, ENABLING AGILITY ARC
   Brown Simon., 2014, SOFTWARE ARCHITECTUR, V7
   Camm E. H., 2009, 2009 IEEE POW EN SOC, P1, DOI [10.1109/pes.2009.5275322, 10.1109/PES.2009.5275322, DOI 10.1109/PES.2009.5275322]
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Cavnar W.B., 1994, Proceedings of SDAIR-94, 3rd Annual Symposium on Document Analysis and Information Retrieval, V48113, P161
   Chandigarh Heena., 2011, Proceedings of the International Conference on Advances in Computing and Artificial Intelligence, ACAI'11, P1
   Charalampidou S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2294
   Chen L., 2010, EASE 10 P 14 INT C E, P135
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Clarkson Kenneth Lee., 1985, THESIS STANFORD U ST
   Cleland-Huang J, 2017, IEEE SOFTWARE, V34, P16, DOI 10.1109/MS.2017.108
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Cohen MA, 1996, MANAGE SCI, V42, P173, DOI 10.1287/mnsc.42.2.173
   Cohn Mike., 2004, USER STORIES APPL AG, P230
   Coplien J. O., 2010, LEAN SOFTWARE ARCHIT, P376
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Datta S., 2014, P 15 INT C AG PROC S, P242
   Díaz J, 2013, P ANN HICSS, P4780, DOI 10.1109/HICSS.2013.127
   Diebold P., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601254
   Dodig-Crnkovic G., 2002, Proceedings of the Conference for the Promotion of Research in IT at New Universities and at University Colleges in Sweden. Skovde, P126
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2017, IEEE SOFTWARE, V34, P98, DOI 10.1109/MS.2017.4121226
   Edgewall-Software, 2012, TRAC
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Erdogmus H, 2009, IEEE SOFTWARE, V26, P2
   Ernst M., 2006, Choosing a venue: Conference or journal?
   Ernst NA, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE), P51, DOI 10.1109/AIRE.2014.6894856
   Faber R, 2010, IEEE SOFTWARE, V27, P33, DOI 10.1109/MS.2010.37
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   Falessi D, 2010, IEEE SOFTWARE, V27, P23, DOI 10.1109/MS.2010.49
   Farid WM, 2012, IEEE SOUTHEASTCON, DOI 10.1109/SECon.2012.6196988
   Farid WM, 2012, ASIA PAC SOFWR ENG, P322, DOI 10.1109/APSEC.2012.23
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   First Public Draft, 2003, PRISM, V2, P1
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fowler Frederik M., 2018, NAVIGATING HYBRID SC, P59, DOI [10.1007/978-1-4842-4164-6_9, DOI 10.1007/978-1-4842-4164-6_9]
   Fowler Martin., 2020, SPECIFICATIONBYEXAMP
   Gagliardi Mike, 2013, UNCOVERING ARCHITECT
   García J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3106237.3117772
   Gaucher Fabien, 2016, ACM SIGAda Ada Letters, V36, P58, DOI 10.1145/3092893.3092904
   Goldman Ron., 2005, INNOVATION HAPPENS E, P427
   Habli Ibrahim, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.6
   Haddaway NR, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0138237
   Hakim J., 2003, P 2003 C DES US EXP, P1, DOI [10.1145/997078.997111, DOI 10.1145/997078.997111]
   Hallberg N, 2010, SYSTEMS ENG, V13, P175, DOI 10.1002/sys.20141
   Hamdan S, 2015, PROCEDIA MANUF, V3, P2019, DOI 10.1016/j.promfg.2015.07.249
   Harman M, 2010, IEEE INT WORK C SO, P7, DOI 10.1109/SCAM.2010.28
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Herring SusanC., 2004, NEW RES NEW MEDIA IN, P47
   Hilliard R., 2019, 42010 ISOIECIEEE
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hoffman D, 2003, J SYST SOFTWARE, V66, P143, DOI 10.1016/S0164-1212(02)00055-9
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hoorn JF, 2011, J SYST SOFTWARE, V84, P1424, DOI 10.1016/j.jss.2010.11.909
   Huang S., 2003, P 21 ANN INT C DOCUM, P93
   Humble Jezz, 2015, CONTINUOUS DELIVERY, P497, DOI [10.1007/s13398-014-0173-7.2, DOI 10.1007/S13398-014-0173-7.2]
   Huttermann M., 2012, DevOps for Developers
   Hutton D.M, 2009, CLEAN CODE HDB AGILE, V27, P1035, DOI [10.1108/03684920910973252, DOI 10.1108/03684920910973252]
   Ian G., 2016, DEEP LEARNING
   Iso, 2011, SYST SOFTW ENG SYST
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jacsó P, 2005, ONLINE INFORM REV, V29, P208, DOI 10.1108/14684520510598066
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jeffries R., 2001, EXTREME PROGRAMMING
   Jeffries Ron, 2001, XP MAG, V30
   Jensen RN, 2008, COMM COM INF SC, V22, P172
   Kajko-Mattsson M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P111
   Kamal AW, 2008, LECT NOTES COMPUT SC, V5292, P164, DOI 10.1007/978-3-540-88030-1_13
   Keeling M, 2015, IEEE SOFTWARE, V32, P35, DOI 10.1109/MS.2015.59
   Kelly S, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P349
   Keuler T., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P229, DOI 10.1109/WICSA-ECSA.212.35
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2009, EASE, V9, P167
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Knauss E, 2008, 2008 THIRD INTERNATIONAL WORKSHOP ON MULTIMEDIA AND ENJOYABLE REQUIREMENTS ENGINEERING - BEYOND MERE DESCRIPTIONS AND WITH MORE FUN AND GAMES, P22, DOI 10.1109/MERE.2008.1
   KNUTH D. E., 1981, Addison-Wesley Series in Computer Science and Information Processing, V2
   Koontz Ronald J., 2012, ARCHITECTING SUSTAIN
   Kosower DA, 2014, IEEE INT WORK C SO, P59, DOI 10.1109/SCAM.2014.35
   Král J, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P401, DOI 10.1109/SERA.2007.107
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Kruchten Philippe., 2004, P 2 GRON WORKSH SOFT, P1
   Kumar M., 2010, P 2 INT WORKSHOP REC, P16, DOI [10.1145/1808920.1808924, DOI 10.1145/1808920.1808924]
   Lago P, 2005, PROC INT CONF SOFTW, P206
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   LaToza T.D., 2006, P INTERNATION C SOFT, P492, DOI [10.1145/1134285.1134355, DOI 10.1145/1134285.1134355]
   Le Goues Claire, 2014, C P SSBSE, P164
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Liskin O., 2014, P 7 INT WORKSH COOP, P56, DOI DOI 10.1145/2593702.2593707
   Liu Jun, 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P207, DOI 10.1109/WCSE.2010.105
   Herrera GYL, 2015, SIST TELEMAT, V13, P53, DOI 10.18046/syt.v13i35.2152
   López-Nores M, 2006, INT J SOFTW ENG KNOW, V16, P951, DOI 10.1142/S0218194006003075
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Maiden N, 2010, IEEE SOFTWARE, V27, P87, DOI 10.1109/MS.2010.67
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Marbach Phyllis, 2015, INCOSE INT S, V25, P524, DOI [10.1002/j.2334-5837.2015.00079.x, DOI 10.1002/J.2334-5837.2015.00079.X]
   Miles MB, 1994, QUALITATIVE DATA ANA, P338
   Mohamed AH, 2008, REC ADV COMPUT ENG, P132
   Muthuvana Diljith, 2015, AGILITY SYSTEMS ENG, DOI [10.4271/2015-01-0144, DOI 10.4271/2015-01-0144]
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Nierstrasz O, 2015, SCI COMPUT PROGRAM, V97, P150, DOI 10.1016/j.scico.2013.11.011
   Niu N, 2017, INT REQUIR ENG CONF, P568, DOI 10.1109/RE.2017.89
   Nixon J.B., 2002, ANAL RELATIONSHIP PR, P1, DOI DOI 10.1007/978-1-4302-0810-5
   Nord Robert., 2010, Combining architecture-centric engineering with the team software process
   Nord RL, 2013, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSM.2013.57
   Nord Robert L, 2011, P 6 INT WORKSH SHARI, P9
   Novak Dave, 2003, ACM SIGGRAPH 2003 VI, V145, P4, DOI 99.9999/woot07-S422
   Ochsner A., 2013, INTRO SCI PUBLISHING
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Omg, 2013, SEMANTICS BUSINESS V, V1, P422
   Orr K, 2004, IEEE SOFTWARE, V21, P71, DOI 10.1109/MS.2004.1293075
   Ozkaya Ipek, 2013, ARCHITECTING LARGE S
   Ozkaya Stephany Bellomo, 2013, SCRUM XP AGILE ARCHI, P6
   Padget J, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE), P35, DOI 10.1109/AIRE.2014.6894854
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Paulk M., 2002, Encyclopedia of Software Engineering, DOI DOI 10.1002/0471028959.SOF589
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petersen Kai, 2008, SYSTEMATIC MAPPING S, V17, P10, DOI [10.1142/S0218194007003112, DOI 10.1142/S0218194007003112]
   Petrie Charles J., 1986, THESIS U TEXAS AUSTI
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Poppendieck Mary, 2003, COMPUTER, V36, P89, DOI [10.1109/MC.2003.1220585, DOI 10.1109/MC.2003.1220585]
   Poth A, 2018, COMM COM INF SC, V896, P401, DOI 10.1007/978-3-319-97925-0_33
   Prause Christian R., 2011, P 19 ACM SIGSOFT S 1, P380, DOI [10.1145/2025113.2025166.23, DOI 10.1145/2025113.2025166.23]
   Read K, 2003, LECT NOTES COMPUT SC, V2753, P142
   Rees MJ, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P22, DOI 10.1109/APSEC.2002.1182972
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rogowitz E. E., 1996, Computers in Physics, V10, P268
   Ros Rasmus, 2017, P 21 INT C EV ASS SO, P118, DOI [10.1145/3084226.3084243, DOI 10.1145/3084226.3084243]
   Rouhani BD, 2008, PROCEEDINGS OF THE 2008 1ST INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, P467
   Rudall B.H, 1978, LECT NOTES COMPUTER, V9, P242, DOI [10.1016/0020-7101(78)90038-7, DOI 10.1016/0020-7101(78)90038-7]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Venegas-Barrera CS, 2011, REV MEX BIODIVERS, V82, P179
   Saher N, 2017, INT CONF ELECT ENG
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Salama M, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P249, DOI 10.1016/B978-0-12-802855-1.00011-3
   Satria D, 2017, INT C INF TECH SYST, P94, DOI 10.1109/ICITSI.2017.8267925
   Schermann Gerald, 2018, WERE DOING IT LIVE M, DOI [10.1016/j.infsof.2018.02.010, DOI 10.1016/J.INFSOF.2018.02.010]
   Schneider K, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P31, DOI 10.1109/REV.2008.1
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Selic B, 2009, IEEE SOFTWARE, V26, P11, DOI 10.1109/MS.2009.167
   Shafiee S, 2017, ADV ENG INFORM, V32, P163, DOI 10.1016/j.aei.2017.02.004
   Shafiq M, 2018, 2018 IEEE 21ST INTERNATIONAL MULTI-TOPIC CONFERENCE (INMIC)
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shmueli O, 2017, INT J PROJ MANAG, V35, P13, DOI 10.1016/j.ijproman.2016.10.002
   Sillitti A, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P143
   Smialek M, 2005, LECT NOTES COMPUT SC, V3713, P414, DOI 10.1007/11557432_31
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P1
   Software Engineering and Standards Committee, 1998, IEEE RECOMMENDED PRA, V1998, P37
   Software & Systems Engineering Standards Committee, 1998, 10611998 SOFTW SYST
   Sonnenburg S., 2004, CREAT INNOV MANAG, V13, P254
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Soundararajan S, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P187, DOI 10.1109/ECBS.2009.21
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stöcker K, 2017, IEEE ICST WORKSHOP, P304, DOI 10.1109/ICSTW.2017.56
   Streb C.K., 2009, ENCY CASE STUDY RES, P373, DOI DOI 10.4135/9781412957397
   Tang A, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P640, DOI 10.1109/APSEC.2004.2
   Tang A, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P252, DOI 10.1109/WICSA.2011.40
   Tenso T, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P268, DOI 10.1109/REW.2017.24
   Theunissen T, 2021, ICEIS: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P153, DOI 10.5220/0010367901530164
   Theunissen T, 2016, LECT NOTES COMPUT SC, V9839, P265, DOI 10.1007/978-3-319-48992-6_20
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Tsai WL, 2018, ASIA PAC MANAG REV, V23, P12, DOI 10.1016/j.apmrv.2017.01.002
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   Usmanov Timur R., 2017, MAN INDIA, V97, P275, DOI [10.1145/2361999.2362023, DOI 10.1145/2361999.2362023]
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   Van Der Knijff JM, 2010, INT J GEOGR INF SCI, V24, P189, DOI 10.1080/13658810802549154
   van Heesch U, 2013, J SYST SOFTWARE, V86, P1545, DOI 10.1016/j.jss.2013.01.057
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Vernon V., 2013, Implementing Domain-Driven Design
   Wahid Hairunnizam, 2017, PRESTASI KECEKAPAN P, V51, P39, DOI [10.1017/CBO9781107415324004, DOI 10.1017/CBO9781107415324004]
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Wojcik Rob, 2013, ARCHITECTING COMPLEX
   Working together, 2013, WORKING TOGETHER TEA
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yin Robert K., 2002, APPL SOCIAL RES METH, V5
   Zdun U, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.97
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 255
TC 7
Z9 8
U1 4
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106733
DI 10.1016/j.infsof.2021.106733
EA OCT 2021
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ghaemmaghami, SSS
   Emam, SS
   Miller, J
AF Ghaemmaghami, Saeedeh Sadat Sajjadi
   Emam, Seyedeh Sepideh
   Miller, James
TI Automatically inferring user behavior models in large-scale web
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model inference; User behavioral model; Reinforcement learning; Web
   application
ID PREDICTION
AB Context: Inferring a behavioral model from users' navigation patterns in a web application helps application providers to understand their users' interests. It is essential to automatically identify and generate such models as the volume of daily interactions with applications are enormous. Objective: The goal of this paper is to incrementally generate such an automated user behavior model with no instrumentation for understanding users' interests in large-scale mobile and desktop applications. Method: We propose an approach to fully automate the behavioral model generation for large-scale web applications. Our proposed solution infers a reward augmented behavioral model using a reinforcement learning method by 1) dynamically generating a set of probabilistic Markov models from the users' interactions, 2) augmenting the state of the model with reward values. Our analysis engine of the proposed solution evaluates the evolving properties of interaction patterns against the inferred behavioral models using probabilistic model checking. Results: We evaluate the utility of our approach by using it on a large-scale mobile and desktop application. In order to show that it is assigning meaningful reward values, we compare these values with results from Google Analytics (as a state-of-the-art approach). Empirical results indicate that our approach is not only compatible with the results from Google Analytics, but also can provide information in situations, where Google Analytics data is not available. Conclusion: In this paper, we present a novel stochastic approach to (1) generate user behavioral models for mobile and desktop web applications, (2) automatically calculate the states' rewards, (3) annotate and analyze the models to verify their quantitative properties, and (4) address many limitations found in existing approaches.
C1 [Ghaemmaghami, Saeedeh Sadat Sajjadi; Emam, Seyedeh Sepideh; Miller, James] Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton T6G IH9, AB, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton T6G IH9, AB, Canada.
EM sajjadig@ualberta.ca; emam@ualberta.ca; jimm@ualberta.ca
CR [Anonymous], 2012, P 21 INT C WORLD WID, DOI DOI 10.1145/2187836.2187919
   [Anonymous], 2010, 2010 INT C INF EM TE
   Bertero C, 2017, PROC INT SYMP SOFTW, P351, DOI 10.1109/ISSRE.2017.43
   Chu YH, 2019, I C DATA ENGIN WORKS, P185, DOI 10.1109/ICDEW.2019.00-13
   Dean J. A., 2010, RANKING DOCUMENTS BA
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Emam SS, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2789209
   Gan MX, 2019, IEEE ACCESS, V7, P111767, DOI 10.1109/ACCESS.2019.2927717
   Ghaemmaghami S. S, 2020, QUICK BACKGROUND
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Greco G, 2006, IEEE T KNOWL DATA EN, V18, P1010, DOI 10.1109/TKDE.2006.123
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Huang J, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P195, DOI 10.1145/2348283.2348313
   Jagli D., 2013, ARXIV PREPRINT ARXIV
   Kawazu H, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P2518, DOI 10.1109/BigData.2016.7840891
   Kim H.-J., 2015, MODIFYING SEARCH RES
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Langhnoja S.G., 2013, INT J DAT MIN TECH A, V2, P141
   Lim KW, 2016, COMPUT COMMUN, V95, P82, DOI 10.1016/j.comcom.2016.04.026
   LIN LJ, 1992, MACH LEARN, V8, P293, DOI 10.1007/BF00992699
   Liu Y, 2015, AAAI CONF ARTIF INTE, P2418
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Lu EHC, 2018, GEOINFORMATICA, V22, P693, DOI 10.1007/s10707-018-0322-9
   Manavoglu E, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P203
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Nguyen MT, 2018, LECT NOTES COMPUT SC, V11251, P349, DOI 10.1007/978-3-030-03192-3_27
   Omar Rosli, 2014, 2014 5th International Conference on Information and Communication Technology for the Muslim World (ICT4M), DOI 10.1109/ICT4M.2014.7020638
   Paul T., 2015, ABS150504943
   Prakash P.O., 2016, International Journal of Applied Engineering Research, V11, P6278
   Salton G., 1986, INTRO MODERN INFORM, P400
   Samarasinghe K. T. C. S., 2019, 2019 International Research Conference on Smart Computing and Systems Engineering (SCSE). Proceedings, P17, DOI 10.23919/SCSE.2019.8842682
   Sarukkai RR, 2000, COMPUT NETW, V33, P377, DOI 10.1016/S1389-1286(00)00044-X
   Schechter S, 1998, COMPUT NETWORKS ISDN, V30, P457, DOI 10.1016/S0169-7552(98)00106-8
   Silva FA, 2018, ACM T KNOWL DISCOV D, V12, DOI 10.1145/3209669
   Srivastava J., 2000, SIGKDD EXPLORATIONS, V1, P12, DOI DOI 10.1145/846183.846188
   Suneetha KR, 2009, INT J COMPUT SCI NET, V9, P327
   Vassio L, 2018, ACM T WEB, V12, DOI 10.1145/3231466
   Vassio L, 2017, IEEE INT CONF BIG DA, P4016, DOI 10.1109/BigData.2017.8258416
   Wang G, 2017, ACM T WEB, V11, DOI 10.1145/3068332
   Wang Kuansan., 2010, Proceedings of WSDM, P211
   Watkin C.J, 1989, LEARNING DELAYED REW
   Xipei Luo, 2017, 2017 27th International Telecommunication Networks and Applications Conference (ITNAC), P1, DOI 10.1109/ATNAC.2017.8215435
   Xu Q., 2011, P 2011 ACM SIGCOMM C, P329, DOI [10.1145/2068816.2068847, DOI 10.1145/2068816.2068847]
   Xu Z., 2015, NEW WEBPAGE CLASSIFI, P225
   Xuezhi Lei, 2018, 2018 International Conference on Engineering Simulation and Intelligent Control (ESAIC), P192, DOI 10.1109/ESAIC.2018.00052
   Yang Q, 2003, IEEE T KNOWL DATA EN, V15, P1050, DOI 10.1109/TKDE.2003.1209022
   Yao XF, 2017, 2017 INTERNATIONAL CONFERENCE ON SMART GRID AND ELECTRICAL AUTOMATION (ICSGEA), P580, DOI 10.1109/ICSGEA.2017.60
   Yue Y., 2010, P 19 INT C WORLD WID, P1011, DOI DOI 10.1145/1772690.1772793
   Zhen Tu, 2018, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V2, DOI 10.1145/3264948
   Zhou L., 2007, Data Mining Workshops, P373
   Zhu KL, 2017, MOB INF SYST, V2017, DOI 10.1155/2017/4542326
   Zhu TS, 2003, LECT NOTES ARTIF INT, V2702, P65
NR 54
TC 0
Z9 0
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106704
DI 10.1016/j.infsof.2021.106704
EA AUG 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700009
DA 2024-07-18
ER

PT J
AU Alazba, A
   Aljamaan, H
AF Alazba, Amal
   Aljamaan, Hamoud
TI Code smell detection using feature selection and stacking ensemble: An
   empirical investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smell detection; Classification; Ensemble learning; Stacking;
   Feature selection
ID MISSING VALUES; CLASSIFIERS; MAINTAINABILITY; COMPLEXITY; PROJECT
AB Context: Code smell detection is the process of identifying code pieces that are poorly designed and implemented. Recently more research has been directed towards machine learning-based approaches for code smells detection. Many classifiers have been explored in the literature, yet, finding an effective model to detect different code smells types has not yet been achieved. Objective: The main objective of this paper is to empirically investigate the capabilities of stacking heterogeneous ensemble model in code smell detection. Methods: Gain feature selection technique was applied to select relevant features in code smell detection. Detection performance of 14 individual classifiers was investigated in the context of two class-level and four method-level code smells. Then, three stacking ensembles were built using all individual classifiers as base classifiers, and three different meta-classifiers (LR, SVM and DT). Results: GP, MLP, DT and SVM(Lin) classifiers were among the best performing classifiers in detecting most of the code smells. On the other hand, SVM(Sig), NB(B), NB(M), and SGD were among the least accurate classifiers for most smell types. The stacking ensemble with LR and SVM meta-classifiers achieved a consistent high detection performance in class-level and method-level code smells compared to all individual models. Conclusion: This paper concludes that the detection performance of the majority of individual classifiers varied from one code smell type to another. However, the detection performance of the stacking ensemble with LR and SVM meta-classifiers was consistently superior over all individual classifiers in detecting different code smell types.
C1 [Alazba, Amal; Aljamaan, Hamoud] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Alazba, Amal] King Saud Univ, Dept Informat Syst, Riyadh, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Saud University
RP Aljamaan, H (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
EM aalazba@ksu.edu.sa; hjamaan@kfupm.edu.sa
RI Aljamaan, Hamoud/N-9756-2019
OI Aljamaan, Hamoud/0000-0002-2146-9348; Alazba, Amal/0000-0002-9353-7872
FU King Fahd University of Petroleum and Minerals (KFUPM), Saudi Arabia
FX The authors would like to acknowledge the support of King Fahd
   University of Petroleum and Minerals (KFUPM), Saudi Arabia in the
   development of this work.
CR Acuña E, 2004, ST CLASS DAT ANAL, P639
   Aggarwal C.C., 2015, Data Classification: Algorithms and Applications
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Aldehim G, 2017, INT J MACH LEARN CYB, V8, P915, DOI 10.1007/s13042-015-0469-8
   Aljamaan HI, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P187, DOI 10.1109/CIDM.2009.4938648
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Barbez A, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110486
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Charalampidou S, 2015, P 11 INT C PRED MOD, P1, DOI [10.1145/2810146.2810155, DOI 10.1145/2810146.2810155]
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Dawson CW, 2001, PROG PHYS GEOG, V25, P80, DOI 10.1177/030913330102500104
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Nucci D, 2018, INT WORK REAL ARTIF, P48, DOI 10.1145/3194104.3194112
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Domingos P., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P105
   Dzeroski S, 2004, MACH LEARN, V54, P255, DOI 10.1023/B.MAC.0000015881.36452.6e
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fukunaga K., 1990, Introduction to StatisticalPattern Recognition
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hollander M., 2000, Nonparametric statistical methods
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Kaur A, 2017, 2017 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND DATA SCIENCE (MLDS 2017), P9, DOI 10.1109/MLDS.2017.8
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K, 2017, INT J ELECT COMPUT E, V7, pPP3613, DOI [10.11591/ijece.v7i6, DOI 10.11591/IJECE.V7I6]
   Kim Miryung, 2012, P 20 INT S FDN SOFTW, DOI [10.1145/'2393596.2393655, DOI 10.1145/2393596.2393655]
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Lim TS, 2000, MACH LEARN, V40, P203, DOI 10.1023/A:1007608224229
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mundfrom D.J., 1998, Imputing Missing Values: The Effect on the Accuracy of Classification
   Myung IJ, 2000, J MATH PSYCHOL, V44, P190, DOI 10.1006/jmps.1999.1283
   Sesmero MP, 2015, WIRES DATA MIN KNOWL, V5, P21, DOI 10.1002/widm.1143
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pérez J, 2013, PROC IEEE INT CONF S, P572, DOI 10.1109/ICSM.2013.98
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rasmussen CE, 2004, LECT NOTES ARTIF INT, V3176, P63, DOI 10.1007/978-3-540-28650-9_4
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   SIMES RJ, 1986, BIOMETRIKA, V73, P751, DOI 10.2307/2336545
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Wang X, 2012, CHIN CONT DECIS CONF, P170, DOI 10.1109/CCDC.2012.6242928
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Witten IH, 2011, MOR KAUF D, P1
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Young W, 2011, THEOR ISS ERGON SCI, V12, P15, DOI 10.1080/14639220903470205
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zullighoven H, 2005, OBJECT ORIENTED CONS, P393, DOI [10.1016/B978-155860687-6/50012-8, DOI 10.1016/B978-155860687-6/50012-8]
NR 65
TC 23
Z9 25
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106648
DI 10.1016/j.infsof.2021.106648
EA JUN 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500007
DA 2024-07-18
ER

PT J
AU Xu, Z
   Zhang, T
   Keung, J
   Yan, M
   Luo, XP
   Zhang, XH
   Xu, L
   Tang, YT
AF Xu, Zhou
   Zhang, Tao
   Keung, Jacky
   Yan, Meng
   Luo, Xiapu
   Zhang, Xiaohong
   Xu, Ling
   Tang, Yutian
TI Feature selection and embedding based cross project framework for
   identifying crashing fault residence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crashing fault; Stack trace; Feature selection; Feature embedding; Cross
   project framework
AB Context: The automatically produced crash reports are able to analyze the root of fault causing the crash (crashing fault for short) which is a critical activity for software quality assurance. Objective: Correctly predicting the existence of crashing fault residence in stack traces of crash report can speed up program debugging process and optimize debugging efforts. Existing work focused on the collected label information from bug-fixing logs, and the extracted features of crash instances from stack traces and source code for Identification of Crashing Fault Residence (ICFR) of newly-submitted crashes. This work develops a novel cross project ICFR framework to address the data scarcity problem by using labeled crash data of other project for the ICFR task of the project at hand. This framework removes irrelevant features, reduces distribution differences, and eases the class imbalance issue of cross project data since these factors may negatively impact the ICFR performance. Method: The proposed framework, called FSE, combines Feature Selection and feature Embedding techniques. The FSE framework first uses an information gain ratio based feature ranking method to select a relevant feature subset for cross project data, and then employs a state-of-the-art Weighted Balanced Distribution Adaptation (WBDA) method to map features of cross project data into a common space. WBDA considers both marginal and conditional distributions as well as their weights to reduce data distribution discrepancies. Besides, WBDA balances the class proportion of each project data to alleviate the class imbalance issue. Results: We conduct experiments on 7 projects to evaluate the performance of our FSE framework. The results show that FSE outperforms 25 methods under comparison. Conclusion: This work proposes a cross project learning framework for ICFR, which uses feature selection and embedding to remove irrelevant features and reduce distribution differences, respectively. The results illustrate the performance superiority of our FSE framework.
C1 [Xu, Zhou; Yan, Meng; Zhang, Xiaohong; Xu, Ling] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Xu, Zhou; Yan, Meng; Zhang, Xiaohong; Xu, Ling] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Fac Informat Technol, Macau, Peoples R China.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Tang, Yutian] Shanghai Tech Univ, Sch Informat & Technol, Shanghai, Peoples R China.
C3 Chongqing University; Chongqing University; Macau University of Science
   & Technology; City University of Hong Kong; Hong Kong Polytechnic
   University; ShanghaiTech University
RP Yan, M (corresponding author), Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.; Yan, M (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.; Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM mengy@cqu.edu.cn; csxluo@comp.polyu.edu.hk
RI Zhang, Xiaohong/A-3060-2015; Zhang, Tao/E-5634-2012; Tang,
   Yutian/L-8327-2019
OI Zhang, Tao/0000-0002-6272-4069; Tang, Yutian/0000-0001-5677-4564; Yan,
   Meng/0000-0002-9538-9121; Keung, Jacky/0000-0002-3803-9600
FU National Key Research and Development Project [2018YFB2101200]; National
   Natural Science Foundation of China [62002034]; China Postdoctoral
   Science Foundation [2020M673137, 2017M621247]; Natural Science
   Foundation of Chongqing in China [cstc2020jcyj-bshX0114]; Science and
   Technology Development Fund of Macau [0047/2020/A1]; Faculty Research
   Grant Projects of MUST [FRG-20-008-FI]; Hong Kong Research Grant Council
   Project [152239/18E]; General Research Fund of the Research Grant
   Council of Hong Kong [11208017]; Fundamental Research Funds for the
   Central Universities [2020CDJQY-A021, 2019CDYGYB014]
FX This work is supported by the National Key Research and Development
   Project (No. 2018YFB2101200), the National Natural Science Foundation of
   China (No. 62002034), China Postdoctoral Science Foundation (No.
   2020M673137, No. 2017M621247), the Natural Science Foundation of
   Chongqing in China (No. cstc2020jcyj-bshX0114), the Science and
   Technology Development Fund of Macau (No. 0047/2020/A1), Faculty
   Research Grant Projects of MUST (No. FRG-20-008-FI), Hong Kong Research
   Grant Council Project (No. 152239/18E), the General Research Fund of the
   Research Grant Council of Hong Kong (No. 11208017), the Fundamental
   Research Funds for the Central Universities (No. 2020CDJQY-A021, No.
   2019CDYGYB014).
CR Ali S, 2009, IEEE INT CONF AUTOM, P76, DOI 10.1109/ASE.2009.89
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   Bansal A, 2019, INT J APPL METAHEURI, V10, P43, DOI 10.4018/IJAMC.2019010103
   Bilgic M., 2012, SIAM International Conference on Data Mining, SDM '12, P696
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Di Nucci D, 2018, INT WORK REAL ARTIF, P48, DOI 10.1145/3194104.3194112
   Ge YX, 2018, LECT NOTES COMPUT SC, V11266, P287, DOI 10.1007/978-3-030-02698-1_25
   Gu YF, 2019, J SYST SOFTWARE, V148, P88, DOI 10.1016/j.jss.2018.11.004
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   He P., 2014, ARXIV14114228
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Lal S., 2017, J KING SAUD U COMPUT, P1
   Lal S., 2017, E INF SOFTW ENG J, V11
   Liang J, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P562, DOI 10.1109/SANER.2018.8330260
   Lin, 2010, ARXIV10095055
   Liu C., 2018, INF SOFTW TECHNOL IS, P125
   Liu C, 2018, P INT COMP SOFTW APP, P64, DOI 10.1109/COMPSAC.2018.00017
   Long MS, 2013, IEEE I CONF COMP VIS, P2200, DOI 10.1109/ICCV.2013.274
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Michal Z, 2016, AM FUZZY LOP
   Mingyi Zhao, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P173, DOI 10.1007/978-3-319-30806-7_11
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Namin A.S., 2011, Proc. of the 2011 Int. Symposium on Soft. Testing and Analysis (ISSTA '11), P342, DOI DOI 10.1145/2001420.2001461
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Nayrolles M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P101, DOI 10.1109/SANER.2015.7081820
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Petrovic JE, 2017, POLICY FUTURES EDUC, V15, P817, DOI 10.1177/1478210316681204
   Pudas M, 2017, IMPROVING CRASH UNIQ
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shahriar H, 2014, IEEE HI ASS SYS ENGR, P176, DOI 10.1109/HASE.2014.32
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Song LY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P468, DOI 10.1145/3236024.3236052
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang JD, 2017, IEEE DATA MINING, P1129, DOI 10.1109/ICDM.2017.150
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z., 2019, P 30 INT S SOFTW REL
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Xu Z, 2018, IEEE ACCESS, V6, P57597, DOI 10.1109/ACCESS.2018.2873755
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yu X, 2017, P 29 INT C SOFTW ENG, P392, DOI DOI 10.18293/SEKE2017-043
   Zhang B, 2018, IET SOFTW, V12, P507, DOI 10.1049/iet-sen.2017.0200
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 71
TC 7
Z9 7
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106452
DI 10.1016/j.infsof.2020.106452
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000009
DA 2024-07-18
ER

PT J
AU Andrade, RMC
   Aragao, BR
   Oliveira, PAM
   Maia, MEF
   Viana, W
   Nogueira, TP
AF Andrade, Rossana M. C.
   Aragao, Belmondo R.
   Oliveira, Pedro Almir M.
   Maia, Marcio E. F.
   Viana, Windson
   Nogueira, Tales P.
TI Multifaceted infrastructure for self-adaptive IoT systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Internet of Things; Contextual discovery; Context-aware systems;
   Self-adaptation for IoT
ID INTERNET; CHALLENGES; MANAGEMENT; MIDDLEWARE; DISCOVERY; VISION; SMART;
   MODEL
AB Background: Internet of Things (IoT) enables the interaction among objects to provide services to their users. Areas such as eHealth, smart energy, and smart buildings have been benefiting from the IoT potential. However, the development of IoT systems is still complex because it deals with a highly dynamic, volatile, and heterogeneous environment. These characteristics require discovering devices, managing these devices' context, and self-adapt their behavior.
   Goal : In this work, we propose a self-adaptive IoT infrastructure to support multiple facets, i.e., the contextual discovery of smart objects, the context management, and the self-adaptation process of the development of these systems.
   Methods : We evaluated the proposed infrastructure by developing a smart building application with and without it. The evaluation focused on four issues: the feasibility of integrating the context management through middleware platforms with adaptation based on workflows in a request/response communication model, the impact of our infrastructure on the development of self-adaptive IoT systems considering cyclomatic complexity and coupling code metrics; the impact of using contextual filters on the orchestrator of self-adaptation; and the impact on the quality of the self-adaptation.
   Results : The results suggest that: (i) it is feasible to use the proposed infrastructure in the development of selfadaptive IoT systems; (ii) there is a reduction in the cyclomatic complexity and the coupling with our approach, (iii) there is a considerable decrease in the number of rules evaluated at runtime, (iv) our infrastructure reduces the execution time of the adaptations when using contextual filters, and (v) the self-adaptation process was effective when using the orchestrator of self-adaptations. Conclusion : With these results, we observed that the proposed multifaceted infrastructure could reduce the complexity related to the development of IoT systems, in addition to optimizing their self-adaptation process.
C1 [Andrade, Rossana M. C.; Aragao, Belmondo R.; Oliveira, Pedro Almir M.; Maia, Marcio E. F.; Viana, Windson; Nogueira, Tales P.] Fed Univ Ceara UFC, Grp Comp Networks Software Engn & Syst GREat, Fortaleza, Ceara, Brazil.
   [Viana, Windson] Fed Univ Ceara UFC, UFC Virtual Inst, Fortaleza, Ceara, Brazil.
   [Maia, Marcio E. F.] Fed Univ Ceara UFC, Quixada, Brazil.
   [Nogueira, Tales P.] Univ Int Integrat Afro Brazilian Lusophony Unilab, Redencao, Brazil.
C3 Universidade Federal do Ceara; Universidade Federal do Ceara;
   Universidade Federal do Ceara; Universidade da Integracao Internacional
   da Lusofonia Afro-Brasileira (UNILAB)
RP Aragao, BR (corresponding author), Fed Univ Ceara UFC, Grp Comp Networks Software Engn & Syst GREat, Fortaleza, Ceara, Brazil.
EM rossana@great.ufc.br; belmondorodrigues@great.ufc.br;
   pedromartins@great.ufc.br; marcio@great.ufc.br; windson@great.ufc.br;
   tales@great.ufc.br
RI Andrade, Rossana M C/K-1790-2015; DE CARVALHO, WINDSON
   VIANA/E-8998-2015; Nogueira, Tales/AAW-9470-2021; Martins de Oliveira,
   Pedro Almir/P-1884-2018; Paiva Nogueira, Tales/N-5838-2015
OI DE CARVALHO, WINDSON VIANA/0000-0002-8627-0823; Martins de Oliveira,
   Pedro Almir/0000-0002-3067-3076; Paiva Nogueira,
   Tales/0000-0002-3266-4632; Rodrigues Aragao Junior,
   Belmondo/0000-0001-9818-2815
FU CNPq, Brazil [315543/2018-3]; FUNCAP, Brazil
FX The authors would like to thank CNPq, Brazil for the Productivity
   Scholarship of Rossana Maria de Castro Andrade DT-2 (No. 315543/2018-3),
   and FUNCAP, Brazil-CE that provided to Belmondo R. Aragao Junior a Ph.D.
   scholarship.
CR Akono C, 2014, INT WORKSH ADVANCES
   Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   Andrade RMC, 2017, LECT NOTES COMPUT SC, V10291, P3, DOI 10.1007/978-3-319-58697-7_1
   [Anonymous], 2013, P 28 ANN ACM S APPL
   [Anonymous], 2019, GARTNER SAYS 5800000
   [Anonymous], 2021, INFORM SOFTWARE TECH, V132
   [Anonymous], 1995, ISERN9503
   Aragao BR, 2018, P INT COMP SOFTW APP, P738, DOI 10.1109/COMPSAC.2018.10329
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Barreto F.M, 2017, COAP CTX EXTENSO SEN
   Barreto FM, 2017, P INT COMP SOFTW APP, P575, DOI 10.1109/COMPSAC.2017.87
   Becker C, 2019, CCF T PERVAS COMPUT, V1, P10, DOI 10.1007/s42486-019-00005-2
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Buckman AH, 2014, SMART SUSTAIN BUILT, V3, P92, DOI 10.1108/SASBE-01-2014-0003
   Bures Tomas, 2017, ACM SIGSOFT Software Engineering Notes, V42, P19, DOI 10.1145/3089649.3089656
   Chen BH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P676, DOI 10.1145/2568225.2568310
   Chen YY, 2016, TELECOMMUN SYST, V62, P77, DOI 10.1007/s11235-015-9984-x
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chhillar R.S., 2011, J MANAGE COMPUT SCI, V1, P42
   Cirani S, 2014, IEEE INTERNET THINGS, V1, P508, DOI 10.1109/JIOT.2014.2358296
   da Cruz MAA, 2018, IEEE INTERNET THINGS, V5, P871, DOI 10.1109/JIOT.2018.2796561
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Duarte PAD, 2015, P INT COMP SOFTW APP, P159, DOI 10.1109/COMPSAC.2015.91
   dos Santos EB, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P377, DOI 10.1145/3350768.3351798
   DosSantos G.B, 2018, PERFORMANCE ENERGY C
   Endler M, 2018, Open Journal of Internet Of Things (OJIOT), V4, P7
   Endler M., 2011, P WORKSH POST DEM TR, DOI [10.1145/2088960.2088962, DOI 10.1145/2088960.2088962]
   FIWARE, FIW WEBS 2020
   Floarea A.-D., 2016, P ECAI 2016, P1, DOI DOI 10.1109/ECAI.2016.7861170
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Grigoras D, 2006, PAR ELEC 2006: INTERNATIONAL SYMPOSIUM ON PARALLEL COMPUTING IN ELECTRICAL ENGINEERING, PROCEEDINGS, P14
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinard D, 2010, IEEE T SERV COMPUT, V3, P223, DOI 10.1109/TSC.2010.3
   Hollingsworth David, 1995, TC00-1003
   Hughes D., 2018, P 13 INT S SOFTW ENG, P28, DOI [10.1145/3194133.3194158, DOI 10.1145/3194133.3194158]
   IBM, 2005, ARCH BLUEPR AUT COMP
   Jara AJ, 2013, 2013 IEEE 27TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P1325, DOI 10.1109/WAINA.2013.261
   Kaddoum E., 2010, P 2010 ICSE WORKSHOP, P29, DOI [10.1145/1808984.1808988, DOI 10.1145/1808984.1808988]
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khan R, 2012, 10TH INTERNATIONAL CONFERENCE ON FRONTIERS OF INFORMATION TECHNOLOGY (FIT 2012), P257, DOI 10.1109/FIT.2012.53
   Kim J, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P89, DOI 10.1109/WF-IoT.2014.6803126
   Kortuem G, 2010, IEEE INTERNET COMPUT, V14, P44, DOI 10.1109/MIC.2009.143
   Lima F.F.d.P, 2011, SYSSU UM SISTEMA SUP
   Liu MR, 2013, IEEE INT CONF MOB, P411, DOI 10.1109/MASS.2013.46
   Lu M, 2013, ACM T INTERACT INTEL, V3, P1
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Neely S, 2006, ANN TELECOMMUN, V61, P1099, DOI 10.1007/BF03219883
   Neto B.J.d.A, 2013, SYSSU DTS SISTEMA SU
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Razzaque MA, 2016, IEEE INTERNET THINGS, V3, P70, DOI 10.1109/JIOT.2015.2498900
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Salhofer P, 2018, P 51 HAW INT C SYST
   Taivalsaari A, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.26
   Tiwari Umesh, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2557853
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Udoh IS, 2018, IET CYBER PHYS SYST, V3, P65, DOI 10.1049/iet-cps.2017.0068
   VanSyckel S, 2013, INT CONF SELF SELF, P131, DOI 10.1109/SASO.2013.28
   Viana W, 2011, MULTIMED TOOLS APPL, V53, P391, DOI 10.1007/s11042-010-0502-6
   Yigitcanlar T, 2019, SUSTAIN CITIES SOC, V45, P348, DOI 10.1016/j.scs.2018.11.033
NR 62
TC 7
Z9 7
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106505
DI 10.1016/j.infsof.2020.106505
EA JAN 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900009
DA 2024-07-18
ER

PT J
AU Aghamohammadi, A
   Mirian-Hosseinabadi, SH
   Jalali, S
AF Aghamohammadi, Alireza
   Mirian-Hosseinabadi, Seyed-Hassan
   Jalali, Sajad
TI Statement frequency coverage: A code coverage criterion for assessing
   test suite effectiveness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Code coverage; Test suite effectiveness; Mutation
   testing
ID EDGE-PAIR; MUTATION
AB Context: Software testing is a pivotal activity in the development of high-quality software. As software is evolving through its life cycle, the need for a fault-revealing criterion assessing the effectiveness of the test suite grows. Over the years, researchers have proposed coverage-based criteria, including statement and branch coverage, to solve this issue. In literature, the effectiveness of such criteria is attested in terms of their correlations with the mutation score.
   Objective: In this paper, we aim at proposing a coverage-based criterion named statement frequency coverage, which outperforms statement and branch coverage in terms of correlation with mutation score.
   Method: To this end, we incorporated the frequency of executed statements into statement coverage and created a coverage-based criterion for assessing test suite effectiveness. Statement frequency coverage assigns a continuous value to a statement whose value is proportional to the number of times executed during test execution. We evaluated our approach on 22 real-world Python projects with more than 118 000 source lines of code (without blank lines, comments, and test cases) and 21 000 test cases through measuring the correlation between statement frequency coverage and corresponding mutation score.
   Results: The results show that statement frequency coverage outperforms statement and branch coverage criteria. The correlation between it and the corresponding mutation score is higher than the correlation of statement and branch coverage with their mutation score. The results also show that unlike statement and branch coverage, there is no statistical difference between statement frequency coverage and mutation score.
   Conclusion: Statement frequency coverage is a better choice compared to statement and branch coverage in assessing test suite effectiveness in the real-world setting. Furthermore, we demonstrate that although statement frequency coverage subsumes statement coverage, it is incomparable to branch coverage under the adequate test suite condition.
C1 [Aghamohammadi, Alireza; Mirian-Hosseinabadi, Seyed-Hassan; Jalali, Sajad] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
EM aaghamohammadi@ce.sharif.edu; hmirian@sharif.edu; sajalali@ce.sharif.edu
RI Mirian-Hosseinabadi, Seyed-Hassan/AAE-9963-2021
OI Aghamohammadi, Alireza/0000-0003-0615-3182
CR Ahmed I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/2950290.2950324
   Allen F.E., 1970, ACM Sigplan Not, V5, P1, DOI [DOI 10.1145/800028.808479, 10.1145/390013.808479, DOI 10.1145/390013.808479]
   Ammann P., 2016, Introduction to software testing, DOI DOI 10.1017/9781316771273
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2020, DEV SURV RESULTS 201
   [Anonymous], 2020, PYTHON MUTATION TEST
   [Anonymous], 2020, MEASURING CODE COVER
   Antinyan V, 2018, IEEE SOFTWARE, V35, P73, DOI 10.1109/MS.2017.3281318
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Cormen T.H., 2009, INTRO ALGORITHMS
   COSTNER HL, 1965, AM SOCIOL REV, V30, P341, DOI 10.2307/2090715
   DelFrate F, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1995.497650
   Delgado-Pérez P, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106317
   Durelli VHS, 2018, SCI COMPUT PROGRAM, V152, P99, DOI 10.1016/j.scico.2017.10.003
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Frankl P. G., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/291252.288298
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P758, DOI 10.1109/TSE.2019.2903057
   Guyon I, 2002, MACH LEARN, V46, P389, DOI 10.1023/A:1012487302797
   Hassan MM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P172, DOI 10.1109/ICSE.2013.6606563
   Hemmati H, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P151, DOI 10.1109/QRS.2015.30
   Herbold S., 2020, Journal of Open Source Software, V5, P2173, DOI DOI 10.21105/JOSS.02173
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jalbert K., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P42, DOI 10.1109/RAISE.2012.6227969
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kendall MG, 1945, BIOMETRIKA, V33, P239, DOI 10.2307/2332303
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kochhar Pavneet Singh, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P215, DOI 10.1109/APSEC.2014.42
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Koster K., 2007, P 6 JOINT M EUR SOFT, P541, DOI 10.1145/1287624.1287705
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Mandieh M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106269
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Moksony F., 1990, Small is beautiful. The use and interpretation of R2 in social research. Szociolgiai Szemle, P130
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Niedermayr R, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P189, DOI 10.1145/3319008.3319021
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P531, DOI 10.1002/stvr.1497
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schwartz A, 2018, J SYST SOFTWARE, V144, P106, DOI 10.1016/j.jss.2018.06.024
   Schwartz A, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P29, DOI [10.1145/2896921.2896926, 10.1109/AST.2016.013]
   Someoliayi KE, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P584, DOI [10.1109/saner.2019.8667968, 10.1109/SANER.2019.8667968]
   Spivey JM, 1989, Prentice Hall International Series in Computer Science
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Vanoverberghe D, 2012, LECT NOTES COMPUT SC, V7147, P542
   Wedyan F, 2012, INFORM SOFTWARE TECH, V54, P900, DOI 10.1016/j.infsof.2011.12.001
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 67
TC 7
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106426
DI 10.1016/j.infsof.2020.106426
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200006
DA 2024-07-18
ER

PT J
AU Colanzi, TE
   Assunçao , WKG
   Vergilio, SR
   Farah, PR
   Guizzo, G
AF Colanzi, Thelma Elita
   Assuncao, Wesley K. G.
   Vergilio, Silvia R.
   Farah, Paulo Roberto
   Guizzo, Giovani
TI The Symposium on Search-Based Software Eengineering: Past, Present and
   Future
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping; Search-based software engineering; Bibliometric
   analysis
ID OPTIMIZATION
AB Context: Search-Based Software Engineering (SBSE) is the research field where Software Engineering (SE) problems are modelled as search problems to be solved by search-based techniques. The Symposium on Search Based Software Engineering (SSBSE) is the premier event on SBSE, which had its 11th edition in 2019.
   Objective: In order to better understand the characteristics and evolution of papers published at SSBSE, this work reports results from a mapping study targeting the proceedings of all SSBSE editions. Despite the existing mapping studies on SBSE, our contribution in this work is to provide information to researchers and practitioners willing to enter the SBSE field, being a source of information to strengthen the symposium, guide new studies, and motivate new collaboration among research groups.
   Method: A systematic mapping study was conducted with a set of four research questions, in which 134 studies published in all editions of SSBSE, dated from 2009 to 2019, were evaluated. In a fifth question, 32 papers published in the challenge track were summarised.
   Results: Throughout the years, 290 authors from 25 countries have contributed to the main track of the symposium, with the collaboration of at least two institutions in 46.3% of the papers. SSBSE papers have got substantial external visibility, as most citations are from different venues. The SE tasks addressed by SSBSE are mostly related to software testing, software debugging, software design, and maintenance. Evolutionary algorithms are present in 75% of the papers, being the most common search technique. The evaluation of the SBSE approaches usually includes industrial systems.
   Conclusions: SSBSE has helped increase the popularly of SBSE in the SE research community and has played an important role on making SBSE mature. There are still problems and challenges to be addressed in the SBSE field, which can be tackled by SSBSE authors in further studies.
C1 [Colanzi, Thelma Elita] DIN State Univ Maringa UEM, Maringa, Parana, Brazil.
   [Assuncao, Wesley K. G.] Fed Univ Technol Parana UTFPR, COTSI, Toledo, Brazil.
   [Vergilio, Silvia R.; Farah, Paulo Roberto] Fed Univ Parana UFPR, DINF, Curitiba, Parana, Brazil.
   [Farah, Paulo Roberto] Santa Catarina State Univ UDESC, DESO, Ibirama, Brazil.
   [Guizzo, Giovani] Univ Coll London UCL, CREST Ctr, Dept Comp Sci, London, England.
C3 Universidade Tecnologica Federal do Parana; Universidade Federal do
   Parana; Universidade do Estado de Santa Catarina; University of London;
   University College London
RP Colanzi, TE (corresponding author), DIN State Univ Maringa UEM, Maringa, Parana, Brazil.
EM thelma@din.uem.br; wesleyk@utfpr.edu.br; silvia@inf.ufpr.br;
   paulo.farah@udesc.br; g.guizzo@ucl.ac.uk
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091
FU Brazilian National Council for Scientific and Technological Development
   (CNPq) [305968/2018-1, 428994/2018-0, 408356/2018-9]; European Research
   Council (ERC) [741278]
FX This work was funded by Brazilian National Council for Scientific and
   Technological Development (CNPq) grants 305968/2018-1, 428994/2018-0,
   and 408356/2018-9, and by the European Research Council (ERC) advanced
   fellowship grant 741278: Evolutionary Program Improvement Collaborators
   (EPIC).
CR Abdelmaboud Abdelzahir, 2015, Journal of Theoretical and Applied Information Technology, V79, P395
   Agarwal S., 2016, Acm Sigcas Comput. Soc., V46, P7
   [Anonymous], 2009, TECHNICAL REPORT
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Balera JM, 2019, INFORM SOFTWARE TECH, V114, P176, DOI 10.1016/j.infsof.2019.06.012
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Bowers KM, 2018, LECT NOTES COMPUT SC, V11036, P182, DOI 10.1007/978-3-319-99241-9_9
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   de Souza J. T., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P143, DOI 10.1109/SSBSE.2010.25
   Di Penta Massimiliano, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P27, DOI 10.1007/978-3-642-33119-0_2
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Freitas F.G., 2011, SEARCH BASED SOFTWAR, P18
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Ghezzi C., 2009, 31 INT C SOFTW ENG
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harman M, 2007, INT C PROGRAM COMPRE, P3
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Khari M, 2019, SOFT COMPUT, V23, P1933, DOI 10.1007/s00500-017-2906-y
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Lopez-Herrejon RE, 2016, STUD COMPUT INTELL, V617, P59, DOI 10.1007/978-3-319-25964-2_4
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Manotas I, 2018, LECT NOTES COMPUT SC, V11036, P278, DOI 10.1007/978-3-319-99241-9_15
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Nair V, 2018, IEEE WORK CONF MIN S, P341, DOI 10.1145/3196398.3196442
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Pietrantuono R, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P6, DOI 10.1145/3194718.3194721
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Pitangueira AM, 2015, J SYST SOFTWARE, V103, P267, DOI 10.1016/j.jss.2014.09.038
   Qasim SZ, 2017, 2017 INT C INN EL EN, P1
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Rezende AV, 2019, J SYST SOFTWARE, V155, P43, DOI 10.1016/j.jss.2019.05.024
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Sharma D., 2016, INT C SOFT COMP PATT, P535
   Singh V, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P2764
   Sodagari E, 2017, 2017 IEEE 4TH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P481, DOI 10.1109/KBEI.2017.8325025
   Wasserstein RL, 2019, AM STAT, V73, P1, DOI 10.1080/00031305.2019.1583913
   Zeller A., 2019, The fuzzing book
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
NR 49
TC 17
Z9 17
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106372
DI 10.1016/j.infsof.2020.106372
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Phannachitta, P
AF Phannachitta, Passakorn
TI On an optimal analogy-based software effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Analogy; Effort adaptation; Hyperparameter
   optimization; Ensemble; Empirical experiments
ID COST ESTIMATION; ADAPTATION TECHNIQUES; PREDICTION; REGRESSION;
   OPTIMIZATION; VALIDATION; SYSTEMS
AB Context: An analogy-based software effort estimation technique estimates the required effort for a new software project based on the total effort used in completing past similar projects. In practice, offering high accuracy can be difficult for the technique when the new software project is not similar to any completed projects. In this case, the accuracy will rely heavily on a process called effort adaptation, where the level of difference between the new project and its most similar past projects is quantified and transformed to the difference in the effort. In the past, attempts to adapt to the effort used machine learning algorithms; however, no algorithm was able to offer a significantly higher performance. On the contrary, only a simple heuristic such as scaling the effort by consulting the difference in software size was adopted.
   Objective: More recently, million-dollar prize data-science competitions have fostered the rapid development of more powerful machine learning algorithms, such as the Gradient boosting machine and Deep learning algorithm. Therefore, this study revisits the comparison of software effort adaptors that are based on heuristics and machine learning algorithms.
   Method: A systematic comparison of software effort estimators, which they all were fully optimized by Bayesian optimization technique, was carried out on 13 standard benchmark datasets. The comparison was supported by robust performance metrics and robust statistical test methods.
   Conclusion: The results suggest a novel strategy to construct a more accurate analogy-based estimator by adopting a combined effort adaptor. In particular, the analogy-based model that adapts to the effort by integrating the Gradient boosting machine algorithm and a traditional adaptation technique based on productivity adjustment has performed the best in the study. Particularly, this model significantly outperformed various state-of-the-art effort estimation techniques, including a current standard benchmark algorithmic-based technique, analogy-based techniques, and machine learning-based techniques.
C1 [Phannachitta, Passakorn] Chiang Mai Univ, Coll Arts Media & Technol, 239 Suthep, Chiang Mai 50200, Thailand.
C3 Chiang Mai University
RP Phannachitta, P (corresponding author), Chiang Mai Univ, Coll Arts Media & Technol, 239 Suthep, Chiang Mai 50200, Thailand.
EM passakorn.p@cmu.ac.th
OI Phannachitta, Passakorn/0000-0003-3931-9097
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], SCIKIT LEARN MACHINE
   [Anonymous], 2010, P 2010 IEEE INT C DA, DOI 10.1109/ICDMW.2010.56
   [Anonymous], NIPS
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], KAGGL YOUR HOM DAT S
   [Anonymous], P 33 IEEE ACM INT C
   [Anonymous], 2019, Keras: The Python Deep Learning library
   [Anonymous], HYP DISTR HYP OPT
   [Anonymous], 2019, P BOOK
   Azzeh M., 2011, Proceedings of the 2011 IEEE 11th International Conference on Computer and Information Technology (CIT 2011), P328, DOI 10.1109/CIT.2011.48
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Bergstra J., 2013, ICML, pI
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Mach. Learn., V45, P5
   Brown G., 2005, Information Fusion, V6, P5, DOI 10.1016/j.inffus.2004.04.004
   Brown G, 2010, LECT NOTES COMPUT SC, V5997, P124, DOI 10.1007/978-3-642-12127-2_13
   Brunner E, 2002, J STAT PLAN INFER, V108, P37, DOI 10.1016/S0378-3758(02)00269-0
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chollet F., 2017, DEEP LEARNING PYTHON, DOI DOI 10.1007/978-1-4842-2766-4
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   De Abril IM, 2013, IEICE T INF SYST, VE96D, P742, DOI 10.1587/transinf.E96.D.742
   Drucker H, 1997, ADV NEUR IN, V9, P155
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Ganesh MKS, 2015, INT J INNOV COMPUT I, V11, P587
   Phan P, 2017, SPRINGER THESES-RECO, P1, DOI 10.1007/978-3-319-55544-7_1
   Jain AK, 1996, COMPUTER, V29, P31, DOI 10.1109/2.485891
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung J, 2009, IEEE AUS SOFT ENGR, P327, DOI 10.1109/ASWEC.2009.32
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kim Y, 2015, STUD HEALTH TECHNOL, V216, P599, DOI 10.3233/978-1-61499-564-7-599
   Kirsopp C, 2003, LECT NOTES ARTIF INT, V2689, P231
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Menzies T, 2005, PROC INT CONF SOFTW, P587
   Menzies T., 2015, The promise repository of empirical software engineering data
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Phannachitta P, 2019, INT J INNOV COMPUT I, V15, P569, DOI 10.24507/ijicic.15.02.569
   Phannachitta P, 2017, EMPIR SOFTW ENG, V22, P474, DOI 10.1007/s10664-016-9434-8
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sarro F, 2019, LECT NOTES COMPUT SC, V11664, P3, DOI 10.1007/978-3-030-27455-9_1
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shahriari B, 2016, P IEEE, V104, P148, DOI 10.1109/JPROC.2015.2494218
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P348
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tkaczyk D, 2018, ACM-IEEE J CONF DIG, P99, DOI 10.1145/3197026.3197048
   Vo V, 2013, INT J INNOV COMPUT I, V9, P3965
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wei J.S., 2015, J SOFTW ENG, V9, P96, DOI [10.3923/jse.2015.96.104, DOI 10.3923/JSE.2015.96.104]
   Wilcox R., 2011, Modern statistics for the social and behavioral sciences: A practical introduction
   Xia YF, 2017, EXPERT SYST APPL, V78, P225, DOI 10.1016/j.eswa.2017.02.017
NR 71
TC 18
Z9 18
U1 2
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106330
DI 10.1016/j.infsof.2020.106330
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100005
DA 2024-07-18
ER

PT J
AU Arora, V
   Singh, M
   Bhatia, R
AF Arora, Vinay
   Singh, Maninder
   Bhatia, Rajesh
TI Orientation-based Ant colony algorithm for synthesizing the test
   scenarios in UML activity diagram
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Soft computing; Ant colony; UML activity diagram; Concurrency;
   Computational Intelligence; Test Scenario
ID PROBABILISTIC BEHAVIOR; OPTIMIZATION; EVOLUTIONARY; CONCURRENT; SOFTWARE
AB Context: The model-based analysis is preferred over the code-based analysis as it speeds up the development process and directs the guiding effort. In the software industry, the Unified Modeling Language (UML) is a set standard followed by the developers as well as system analysts to extract all attainable paths of controls, usually known as scenarios under an activity diagram.
   Objective: In this manuscript, a bio-inspired methodology has been applied on concurrent sub-part of a UML activity diagram to fetch various feasible test scenarios.
   Method: The food search pattern of an ant has been taken as a base heuristic. An orientation factor has been introduced in the existing ant colony optimization algorithm. Experiments have been performed using three student projects, five synthetic models and an openly available model repository named LINDHOLMEN data-set at Github.
   Results: The statistical analysis has validated the results obtained through various existing approaches and the proposed approach. Experimentation shows that the orientation-based ant colony algorithm has produced better results as compared to the existing Genetic Algorithm (GA) and Ant Colony Optimization (ACO) on the basis of feasible test scenarios generated.
C1 [Arora, Vinay; Singh, Maninder] Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
   [Bhatia, Rajesh] PEC, Comp Sci & Engn Dept, Chandigarh, India.
C3 Thapar Institute of Engineering & Technology; Punjab Engineering College
   (Deemed University)
RP Arora, V (corresponding author), Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
EM vinay.arora@thapar.edu
RI Singh, Maninder/B-7553-2009; singh, maninder/IQS-3568-2023; Bhatia, Dr
   Rajesh/JUU-9542-2023
OI Singh, Maninder/0000-0001-8489-8759; 
CR Amarjeet, 2017, COMPUT LANG SYST STR, V47, P153, DOI 10.1016/j.cl.2016.09.003
   [Anonymous], 1991, 91016 DIP EL POL MIL
   [Anonymous], P IEEE INT C REC ADV
   [Anonymous], 2004, ANT COLONY OPTIMIZAT
   [Anonymous], 2012, P 5 INDIA SOFTWARE E
   [Anonymous], TELKOMNIKA
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arora V, 2017, COMPUT LANG SYST STR, V50, P1, DOI [10.1016/j.cl.2017.05.002, 10.1016/j.c1.2017.05.002]
   Arora V, 2016, CONCURR COMP-PRACT E, V28, P1572, DOI 10.1002/cpe.3711
   Asadollah SA, 2017, SOFTWARE QUAL J, V25, P49, DOI 10.1007/s11219-015-9301-7
   Bhattacharjee Gargi, 2018, International Journal of Knowledge-Based Organizations, V8, P83, DOI 10.4018/IJKBO.2018010106
   Branke J., 2004, Journal of Mathematical Modelling and Algorithms, V3, P403, DOI [DOI 10.1023/B:JMMA.0000049380.86987.D4, 10.1023/B:JMMA.0000049380.86987.d4]
   Christodoulou SM, 2010, J COMPUT CIVIL ENG, V24, P45, DOI 10.1061/(ASCE)0887-3801(2010)24:1(45)
   Crepinsek M, 2014, APPL SOFT COMPUT, V19, P161, DOI 10.1016/j.asoc.2014.02.009
   DENEUBOURG JL, 1983, J THEOR BIOL, V105, P259, DOI 10.1016/S0022-5193(83)80007-1
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Farooq U, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P441, DOI 10.1109/ASWEC.2008.64
   Garg H, 2016, APPL MATH COMPUT, V274, P292, DOI 10.1016/j.amc.2015.11.001
   Garnier S, 2009, BEHAV ECOL SOCIOBIOL, V63, P1167, DOI 10.1007/s00265-009-0741-6
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Jyoti A., 2014, THESIS
   Karimpour R, 2017, COMPUT LANG SYST STR, V47, P189, DOI 10.1016/j.cl.2016.07.007
   Kundu D, 2015, J SYST SOFTWARE, V107, P71, DOI 10.1016/j.jss.2015.05.007
   Kundu D, 2009, J OBJECT TECHNOL, V8, P65, DOI 10.5381/jot.2009.8.3.a1
   Kyaw AA, 2016, ADV INTELL SYST, V387, P455, DOI 10.1007/978-3-319-23204-1_46
   Lam C.P., 2010, ARTIFICIAL INTELLIGE
   Li HZ, 2005, LECT NOTES COMPUT SC, V3502, P69
   Mernik M, 2015, INFORM SCIENCES, V291, P115, DOI 10.1016/j.ins.2014.08.040
   Mishra A., 2014, GENERATION PRIORITIZ
   Nayak A, 2011, SOFTW SYST MODEL, V10, P63, DOI 10.1007/s10270-009-0133-4
   panthi Vikas, 2018, J. appl. res. technol, V16, P466
   Panthi V, 2016, PROCEEDINGS OF THE 2016 IEEE REGION 10 CONFERENCE (TENCON), P237, DOI 10.1109/TENCON.2016.7847997
   Prakasam A, 2016, ARTIF INTELL REV, V45, P97, DOI 10.1007/s10462-015-9441-y
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Sayyari F, 2015, SECOND INTERNATIONAL CONGRESS ON TECHNOLOGY, COMMUNICATION AND KNOWLEDGE (ICTCK 2015), P435, DOI 10.1109/ICTCK.2015.7582709
   Shirole M., 2013, SIGSOFT SOFTW ENG NO, V38, P1, DOI DOI 10.1145/2492248.2492274
   Srivastava P.R., 2009, P IEEE REG 10 ANN IN, DOI [10.1109/TENCON.2009.5396088, DOI 10.1109/TENCON.2009.5396088]
   Stoutzle Thomas., 2012, Autonomous Search, P191, DOI DOI 10.1007/978-3-642-21434-9_8
   Sundareswaran K, 2007, IEEE T IND ELECTRON, V54, P2558, DOI 10.1109/TIE.2007.899846
   Talbi E.-G, 2009, METAHEURISTICS DESIG, V74, DOI DOI 10.1002/9780470496916
   Toksari MD, 2016, INT J ELEC POWER, V78, P776, DOI 10.1016/j.ijepes.2015.12.032
   Vecek N, 2016, INFORM SCIENCES, V372, P446, DOI 10.1016/j.ins.2016.08.066
   Verma V., 2014, THESIS
   Wang H, 2009, J NETW COMPUT APPL, V32, P258, DOI 10.1016/j.jnca.2008.03.002
   Yang XS, 2014, NATURE-INSPIRED OPTIMIZATION ALGORITHMS, P1
   Zhang C, 2010, CHIN CONT DECIS CONF, P3790, DOI 10.1109/CCDC.2010.5498477
NR 46
TC 8
Z9 8
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106292
DI 10.1016/j.infsof.2020.106292
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200012
DA 2024-07-18
ER

PT J
AU El-Masri, D
   Petrillo, F
   Guéhéneuc, YG
   Hamou-Lhadj, A
   Bouziane, A
AF El-Masri, Diana
   Petrillo, Fabio
   Gueheneuc, Yann-Gael
   Hamou-Lhadj, Abdelwahab
   Bouziane, Anas
TI A systematic literature review on automated log abstraction techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Log Abstraction Techniques; Log Analysis; Log Mining; Log Parsing;
   Software Analysis; Software Log; Systematic literature review;
   Systematic survey; AIOps; Data mining; Log Management; Quality Model
ID CHARACTERIZING LOGGING PRACTICES; SOFTWARE; DIAGNOSIS
AB Context: Logs are often the first and only information available to software engineers to understand and debug their systems. Automated log-analysis techniques help software engineers gain insights into large log data. These techniques have several steps, among which log abstraction is the most important because it transforms raw log-data into high-level information. Thus, log abstraction allows software engineers to perform further analyses. Existing log-abstraction techniques vary significantly in their designs and performances. To the best of our knowledge, there is no study that examines the performances of these techniques with respect to the following seven quality aspects concurrently: mode, coverage, delimiter independence, efficiency,scalability, system knowledge independence, and parameter tuning effort.
   Objectives: We want (1) to build a quality model for evaluating automated log-abstraction techniques and (2) to evaluate and recommend existing automated log-abstraction techniques using this quality model.
   Method: We perform a systematic literature review (SLR) of automated log-abstraction techniques. We review 89 research papers out of 2,864 initial papers.
   Results: Through this SLR, we (1) identify 17 automated log-abstraction techniques, (2) build a quality model composed of seven desirable aspects: mode, coverage, delimiter independence, efficiency, scalability, system knowledge independence, and parameter tuning effort, and (3) make recommendations for researchers on future research directions.
   Conclusion: Our quality model and recommendations help researchers learn about the state-of-the-art automated log-abstraction techniques, identify research gaps to enhance existing techniques, and develop new ones. We also support software engineers in understanding the advantages and limitations of existing techniques and in choosing the suitable technique to their unique use cases.
C1 [El-Masri, Diana; Bouziane, Anas] Polytech Montreal, Dept Genie Informat & Genie Logiciel, Montreal, PQ, Canada.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Dept Informat & Math, Chicoutimi, PQ, Canada.
   [Gueheneuc, Yann-Gael; Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Quebec;
   University of Quebec Chicoutimi; Concordia University - Canada
RP Petrillo, F (corresponding author), Univ Quebec Chicoutimi, Dept Informat & Math, Chicoutimi, PQ, Canada.
EM diana.el-masri@polymtl.ca; fabio@petrillo.com;
   yann-gael.gueheneuc@concordia.ca; wahab.hamou-lhadj@concordia.ca;
   anas.bouziane@polymtl.ca
OI Petrillo, Fabio/0000-0002-8355-1494; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2018-05084, 950232019]
FX This work has been supported by the Natural Sciences and Engineering
   Research Council of Canada Nos. RGPIN-2018-05084 (DG) and 950232019
   (CRC).
CR Ankerst M, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P49
   [Anonymous], SPRINGER J SOFTW SYS
   [Anonymous], 2011, INT ORG STANDARDIZAT, V34, P2910
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Bun M, 2017, ANN IEEE SYMP FOUND, P1, DOI 10.1109/FOCS.2017.10
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen H., 2014, SDM WORKSH HET LEARN, P1
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Deissenboeck F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P9, DOI 10.1109/WOSQ.2009.5071551
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.0103, 10.1109/ICDM.2016.160]
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Graves A, 2013, 2013 IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING (ASRU), P273, DOI 10.1109/ASRU.2013.6707742
   Hamooni H, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1573, DOI 10.1145/2983323.2983358
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   He P, 2018, ARXIV180604356
   He P., 2017, IEEE T DEPEND SECURE
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Hojaji F, 2020, SOFTW SYST MODEL, V19, P199, DOI 10.1007/s10270-019-00737-w
   Huang L., 2010, CASCON 10 PROC C CTR, P313
   Islam MS, 2018, IEEE T RELIAB, V67, P212, DOI 10.1109/TR.2017.2787138
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Khreich W, 2017, INFORM SOFTWARE TECH, V91, P186, DOI 10.1016/j.infsof.2017.07.009
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kobayashi H, 2014, P IEEE INT FREQ CONT, P112
   Kobayashi Satoru, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P45, DOI 10.23919/INM.2017.7987263
   Lafferty John, 2001, INT C MACH LEARN ICM
   Li Lu., 2017, Proceedings of the International Conference on Human Centered Computing, P76
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Mi HB, 2013, IEEE T PARALL DISTR, V24, P1245, DOI 10.1109/TPDS.2013.21
   Miranskyy A, 2016, IEEE SOFTWARE, V33, P52, DOI 10.1109/MS.2016.33
   Mizutani Masayoshi, 2013, 2013 IEEE International Conference on Services Computing (SCC), P595, DOI 10.1109/SCC.2013.73
   Nagappan Meiyappan, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P114, DOI 10.1109/MSR.2010.5463281
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Salfner F., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Salfner F, 2007, SYM REL DIST SYST, P161, DOI 10.1109/SRDS.2007.35
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sneath P., 1973, Numerical Taxonomy, P230, DOI DOI 10.1111/J.1523-1739.2007.00775.X
   Tang L, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107533
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Vaarandi R, 2008, IEEE IFIP NETW OPER, P1071, DOI 10.1109/NOMS.2008.4575281
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   Xu Wei., 2010, Proceedings of the Workshop on Managing Systems via Log Analysis and Machine Learning Techniques, SLAML '10, P5
   Xu XW, 2014, I C DEPEND SYS NETWO, P252, DOI 10.1109/DSN.2014.94
   Yu X, 2016, ACM SIGPLAN NOTICES, V51, P489, DOI 10.1145/2954679.2872407
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 53
TC 33
Z9 35
U1 1
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106276
DI 10.1016/j.infsof.2020.106276
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dias, K
   Borba, P
   Barreto, M
AF Dias, Klissiomara
   Borba, Paulo
   Barreto, Marcos
TI Understanding predictive factors for merge conflicts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE code integration; merge conflict; modularity; collaborative development;
   empirical study
ID SOFTWARE-DEVELOPMENT; IMPACT; LIFE
AB Context Merge conflicts often occur when developers change the same code artifacts. Such conflicts might be frequent in practice, and resolving them might be costly and is an error-prone activity.
   Objective: To minimize these problems by reducing merge conflicts, it is important to better understand how conflict occurrence is affected by technical and organizational factors.
   Method: With that aim, we investigate seven factors related to modularity, size, and timing of developers contributions. To do so, we reproduce and analyze 73504 merge scenarios in GitHub repositories of Ruby and Python MVC projects.
   Results: We find evidence that the likelihood of merge conflict occurrence significantly increases when contributions to be merged are not modular in the sense that they involve files from the same MVC slice (related model, view, and controller files). We also find bigger contributions involving more developers, commits, and changed files are more likely associated with merge conflicts. Regarding the timing factors, we observe contributions developed over longer periods of time are more likely associated with conflicts. No evaluated factor shows predictive power concerning both the number of merge conflicts and the number of files with conflicts.
   Conclusion. Our results could be used to derive recommendations for development teams and merge conflict prediction models. Project management and assistive tools could benefit from these models.
C1 [Dias, Klissiomara; Borba, Paulo; Barreto, Marcos] Univ Fed Pernambuco, Informat Ctr, Av Jornalista Anibal Fernandes S-N, BR-50740560 Recife, PE, Brazil.
   [Dias, Klissiomara] Fed Rural Univ Amazonia, Cyberspatial Inst, Av Presidente Tancredo Neves 2501, BR-66077830 Belem, PA, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal Rural da
   Amazonia (UFRA)
RP Dias, K (corresponding author), Informat Ctr, Av Jornalista Anibal Fernandes S-N, BR-50740560 Recife, PE, Brazil.
EM kld2@cin.ufpe.br; phmb@cin.ufpe.br; msb5@cin.ufpe.br
RI Borba, Paulo/C-5617-2013
OI Borba, Paulo/0000-0002-0381-2843
FU INES 2.0; FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17]; CAPES
   [88887.136410/2017-00]; CNPq [309172/2017-9, 408516/2018-6,
   465614/2014-0]
FX We thank the anonymous reviewers and members of the Software
   Productivity Group for the quite pertinent suggestions that contributed
   to improve this work. This research was partially funded by INES 2.0,
   FACEPE grants PRONEX APQ 0388-1.03/14 and APQ-0399-1.03/17, CAPES grant
   88887.136410/2017-00, and CNPq grant 465614/2014-0. It was also
   supported by CNPq projects 309172/2017-9 and 408516/2018-6.
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Anderson T.W., 1996, NEW STAT ANAL DATA
   [Anonymous], 2018, IEEE T SOFTWARE ENG
   [Anonymous], 2014, PROGIT APRESS
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Bass L., 2016, DevOps: A Software Architect's Perspective
   Bird C., 2012, P ACM SIGSOFT 20 INT, P1, DOI [10.1145/2393596.2393648, DOI 10.1145/2393596.2393648]
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Crawley M., 2014, STAT INTRO USING R, V2nd ed.
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   de Souza LBL, 2013, IEEE WORK CONF MIN S, P217, DOI 10.1109/MSR.2013.6624030
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Griffiths A, 2007, TRADING PLACES - SMES IN THE GLOBAL ECONOMY: A CRITICAL RESEARCH HANDBOOK, P11
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Herbsleb J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P2, DOI 10.1145/2950290.2994160
   Hodgson P, FEATURE BRANCHING VS
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kutner M., 2004, HLTH ENV RES ONLINE, Vfourth
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 44
TC 15
Z9 15
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106256
DI 10.1016/j.infsof.2020.106256
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200004
DA 2024-07-18
ER

PT J
AU Banias, O
AF Banias, Ovidiu
TI Test case selection-prioritization approach based on memoization dynamic
   programming algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Test case selection; Test case prioritization; Dynamic
   programming; Algorithms
AB Context: In the software industry, selection and prioritization techniques become a necessity in the regression and validation testing phases because a lot of test cases are available for reuse, yet time and project specific constraints must be respected.
   Objective: In this paper we propose a dynamic programming approach in solving test case selection-prioritization problems. We focus on low memory consumption in pseudo-polynomial time complexity applicable in both selection and selection-prioritization problems over sets of test cases or test suites. In dynamic programming optimization solutions, huge amounts of memory are required and unfortunately the memory is limited. Therefore, lower memory consumption leads to a higher number of test cases to be involved in the selection process.
   Method: Our approach is suited for medium to large projects where the required memory space is not higher than the order of tens of GBytes. We employed both objective methods as the dynamic programming algorithm and subjective and empiric human decision as defining the prioritization criteria. Furthermore, we propose a method of employing multiple project specific criteria in evaluating the importance of a test case in the project context.
   Results: To evaluate the proposed solution relative to the classical dynamic programming knapsack solution, we developed a suite of comparative case studies based on 1000 generated scenarios as close as possible to real project scenarios. The results of the comparative study reported the proposed algorithm requires up to 400 times less memory in the best-case scenarios and about 40 times less memory in average.
   Conclusion: The solution delivers optimal results in pseudo-polynomial time complexity, is effective for amounts of test cases up to the order of millions and compared with the classical dynamic programming methods leads to higher number of test cases to be involved in the selection process due to reduced memory consumption.
C1 [Banias, Ovidiu] Politehn Univ Timisoara, Fac Automat & Comp Sci, Automat & Appl Informat Dept, Parvan 2, Timisoara 300223, Romania.
C3 Universitatea Politehnica Timisoara
RP Banias, O (corresponding author), Politehn Univ Timisoara, Fac Automat & Comp Sci, Automat & Appl Informat Dept, Parvan 2, Timisoara 300223, Romania.
EM ovidiu.banias@aut.upt.ro
CR Banias O., 2018, 2018 INT S EL TEL IS, DOI [10.1109/isetc.2018.8583984, DOI 10.1109/ISETC.2018.8583984]
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Byun T, 2017, PROC INT SYMP SOFTW, P328, DOI 10.1109/ISSRE.2017.33
   Cormen T.H., 2009, INTRO ALGORITHMS
   Dreyfus S, 2002, OPER RES, V50, P48, DOI 10.1287/opre.50.1.48.17791
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fowler M., 2001, Software Development, V9, P28
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Kapfhammer G. M., 2007, P 1 ACM INT WORKSH E
   Kasurinen J., 2010, P 2010 ACM IEEE INT
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Lander E, 2007, INT J PROD RES, V45, P3681, DOI 10.1080/00207540701223519
   Lawler E. L., 1990, Annals of Operations Research, V26, P125, DOI 10.1007/BF02248588
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Measey P., 2014, AGILE FDN PRINCIPLES
   Narciso EN, 2014, INT J SOFTW ENG KNOW, V24, P653, DOI 10.1142/S0218194014500259
   Ney  H., 1990, READINGS SPEECH RECO, P188
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Pisinger D., 1998, HDB COMBINATORIAL OP, V1-3, P299, DOI DOI 10.1007/978-1-4613-0303-9_5
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Wang S., 2014, P 18 INT SOFTW PROD
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 25
TC 13
Z9 13
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 119
EP 130
DI 10.1016/j.infsof.2019.06.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700010
DA 2024-07-18
ER

PT J
AU Yadav, A
   Singh, SK
   Suri, JS
AF Yadav, Asmita
   Singh, Sandeep Kumar
   Suri, Jasjit S.
TI Ranking of software developers based on expertise score for bug triaging
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug repository; Bug triaging; Developer expertise; Bug assignment; Bug
   reports; Bug tossing; Developer contribution assessment; Open source
   software (OSS); Software process; Software metrics
AB Context: Existing bug triage approaches for developer recommendation systems are mainly based on machine learning (ML) techniques. These approaches have shown low prediction accuracy and high bug tossing length (BTL).
   Objective: The objective of this paper is to develop a robust algorithm for reducing BTL based on the concept of developer expertise score (DES).
   Method: None of the existing approaches to the best of our knowledge have utilized metrics to build developer expertise score. The novel strategy of DES is consisted of two stages: Stage-I consisted of an offline process for detecting the developers based on DES which computes the score using priority, versatility and average fix-time for his individual contributions. The online system process consisted of finding the capable developers using three kinds of similarity measures (feature-based, cosine-similarity and Jaccard). Stage-II of the online process consisted of simply ranking the developers. Hit-ratio and reassignment accuracy were used for performance evaluation. We compared our system against the ML-based bug triaging approaches using three types of classifiers: Navies Bayes, Support Vector Machine and C4.5 paradigms.
   Results: By adapting the five open source databases, namely: Mozilla, Eclipse, Netbeans, Firefox, and Freedesktop, covering 41,622 bug reports, our novel DES system yielded a mean accuracy, precision, recall rate and F-score of 89.49%, 89.53%, 89.42% and 89.49%, respectively, reduced BTLs of up to 88.55%. This demonstrates an improvement of up to 20% over existing strategies.
   Conclusion: This work presented a novel developer recommendation algorithm to rank the developers based on a metric-based integrated score for bug triaging. This integrated score was based on the developer's expertise with an objective to improve (i) bug assignment and (ii) reduce the bug tossing length. Such architecture has an application in software bug triaging frameworks.
C1 [Yadav, Asmita; Singh, Sandeep Kumar] JIIT Noida, Dept Comp Sci & Engn, Noida, India.
   [Suri, Jasjit S.] Global Biomed Technol Inc, Adv Knowledge Engn Ctr, Roseville, CA 95661 USA.
C3 Jaypee Institute of Information Technology (JIIT)
RP Suri, JS (corresponding author), Global Biomed Technol Inc, Adv Knowledge Engn Ctr, Roseville, CA 95661 USA.
EM asmita.yadav85@gmail.com; sandeepk.singh@jiit.ac.in; jsuri@comcast.net
RI SINGH, SANDEEP/ABI-3719-2020
OI SINGH, SANDEEP KUMAR/0000-0002-2781-8684; yadav,
   asmita/0000-0003-0485-5607
CR Akila V., 2014, International Journal of Collaborative Enterprise, V4, P299, DOI 10.1504/IJCENT.2014.067002
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Borghetti M., 2014, IEEE 11 INT MULTICON, P1
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P334, DOI 10.1007/s10664-017-9520-6
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Hassan A.E, 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering Research, P161
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Jung W, 2012, IEICE T INF SYST, VE95D, P1384, DOI 10.1587/transinf.E95.D.1384
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Liguo Chen, 2011, Journal of Software, V6, P421, DOI 10.4304/jsw.6.3.421-427
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Rastogi A., 2013, P 6 IND SOFTW ENG C, P13, DOI [10.1145/2442754.2442757, DOI 10.1145/2442754.2442757]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tao Zhang, 2012, Intelligent Computing Technology. Proceedings 8th International Conference, ICIC 2012, P505, DOI 10.1007/978-3-642-31588-6_65
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tung Thanh Nguyen, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2560585
   [王思霖 Wang Silin], 2014, [高分子通报, Polymer Bulletin], P25
   Whitehead J, 2012, EMPIR SOFTW ENG, V17, P500, DOI 10.1007/s10664-012-9206-z
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Zhang T., 2013, Proceedings of the 28th annual acm symposium on applied computing, P1088, DOI DOI 10.1145/2480362.2480568
   Zhang W, 2016, INFORM SOFTWARE TECH, V70, P68, DOI 10.1016/j.infsof.2015.10.004
NR 29
TC 24
Z9 26
U1 1
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 1
EP 17
DI 10.1016/j.infsof.2019.03.014
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100001
DA 2024-07-18
ER

PT J
AU Zhou, PY
   Liu, J
   Liu, X
   Yang, ZJ
   Grundy, J
AF Zhou, Pingyi
   Liu, Jin
   Liu, Xiao
   Yang, Zijiang
   Grundy, John
TI Is deep learning better than traditional approaches in tag
   recommendation for software information sites?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Data analysis; Tag recommendation; Software information
   site; Software object
AB Context: Inspired by the success of deep learning in other domains, this new technique been gaining widespread recent interest in being applied to diverse data analysis problems in software engineering. Many deep learning models, such as CNN, DBN, RNN, LSTM and GAN, have been proposed and recently applied to software engineering tasks including effort estimation, vulnerability analysis, code clone detection, test case selection, requirements analysis and many others. However, there is a perception that applying deep learning is a "silver bullet" if it can be applied to a software engineering data analysis problem.
   Object: This motivated us to ask the question as to whether deep learning is better than traditional approaches in tag recommendation task for software information sites.
   Method: In this paper we test this question by applying both the latest deep learning approaches and some traditional approaches on tag recommendation task for software information sites. This is a typical Software Engineering automation problem where intensive data processing is required to link disparate information to assist developers. Four different deep learning approaches - TagCNN, TagRNN, TagHAN and TagRCNN - are implemented and compared with three advanced traditional approaches - EnTagRec, TagMulRec, and FastTagRec.
   Results: Our comprehensive experimental results show that the performance of these different deep learning approaches varies significantly. The performance of TagRNN and TagHAN approaches are worse than traditional approaches in tag recommendation tasks. The performance of TagCNN and TagRCNN approaches are better than traditional approaches in tag recommendation tasks.
   Conclusion: Therefore, using appropriate deep learning approaches can indeed achieve better performance than traditional approaches in tag recommendation tasks for software information sites.
C1 [Zhou, Pingyi; Liu, Jin] Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.
   [Liu, Jin] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
   [Liu, Xiao] Deakin Univ, Sch Informat Technol, Geelong, Vic, Australia.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
C3 Wuhan University; Chinese Academy of Sciences; Institute of Information
   Engineering, CAS; Deakin University; Western Michigan University; Monash
   University
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.; Liu, J (corresponding author), Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
EM zhou_pinyi@whu.edu.cn; jinliu@whu.edu.cn; xiao.liu@deakin.edu.au;
   zijiang.yang@wmich.edu; john.grundy@monash.edu
RI Liu, Xiao/AAG-1593-2020; Grundy, John/I-6681-2012
OI Liu, Xiao/0000-0001-8400-5754; Grundy, John/0000-0003-4928-7076
FU National Key RAMP;D Program of China [2018YFC1604000]; National Natural
   Science Foundation of China [61572374, U163620068, U1135005, 61572371,
   61772525]; Open Fund of Key Laboratory of Network Assessment Technology
   from CAS, Guangxi Key Laboratory of Trusted Software [kx201607];
   Academic Team Building Plan for Young Scholars from Wuhan University
   [WHU2016012]
FX This work is supported in part by the National Key R&D Program of China
   (No. 2018YFC1604000), the grands of the National Natural Science
   Foundation of China (61572374, U163620068, U1135005, 61572371,
   61772525), the Open Fund of Key Laboratory of Network Assessment
   Technology from CAS, Guangxi Key Laboratory of Trusted Software (No.
   kx201607), the Academic Team Building Plan for Young Scholars from Wuhan
   University (WHU2016012).
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Begel A., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P33, DOI DOI 10.1145/1882362.1882370
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cai  X., 2018, AAAI
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cheng H., 2016, P 1 WORKSH DEEP LEAR, P7, DOI [DOI 10.1145/2988450.2988454, 10.1145/2988450.2988454]
   Chung Junyoung, 2014, ARXIV14123555
   Costarelli D, 2013, NEURAL NETWORKS, V44, P101, DOI 10.1016/j.neunet.2013.03.015
   Covington P, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P191, DOI 10.1145/2959100.2959190
   Dahl GE, 2013, INT CONF ACOUST SPEE, P8609, DOI 10.1109/ICASSP.2013.6639346
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   He XN, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2227
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Dam HK, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/2950290.2983985
   Jäschke R, 2007, LECT NOTES ARTIF INT, V4702, P506
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kalchbrenner N, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P655, DOI 10.3115/v1/p14-1062
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Liu  P., 2016, ARXIV 1605 05101
   Martins EF, 2016, J ASSOC INF SCI TECH, V67, P83, DOI 10.1002/asi.23353
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mohamed AR, 2012, IEEE T AUDIO SPEECH, V20, P14, DOI 10.1109/TASL.2011.2109382
   Mondal M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P484, DOI 10.1109/SANER.2015.7081861
   Mou  L., 2014, CONVOLUTIONAL NEURAL, P1287
   Munemasa Isshu, 2018, 2018 International Conference on Information and Communications Technology (ICOIACT), P226, DOI 10.1109/ICOIACT.2018.8350761
   Nielsen M. A., 2015, NEURAL NETWORKS DEEP, DOI DOI 10.1145/2939672.2945397
   Okura S, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1933, DOI 10.1145/3097983.3098108
   Peng M, 2018, WORLD WIDE WEB, V21, P89, DOI 10.1007/s11280-017-0456-y
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Radford A., 2015, ARXIV
   Rendle Steffen, 2010, P 3 ACM INT C WEB SE, P81, DOI DOI 10.1145/1718487.1718498
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sainath TN, 2015, INT CONF ACOUST SPEE, P4580, DOI 10.1109/ICASSP.2015.7178838
   Salakhutdinov R., 2007, P 24 INT C MACH LEAR, P791, DOI DOI 10.1145/1273496.1273596
   Sigurbjornsson B., 2008, Proceeding of the 17th International Conference on World Wide Web
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Sun Y, 2017, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2017.8115627
   Treude C, 2012, IEEE T SOFTWARE ENG, V38, P19, DOI 10.1109/TSE.2010.91
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Wang H., 2013, P 23 INT JOINT C ART, P2719
   Wang QF, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1789, DOI 10.1145/2505515.2505649
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu CY, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P495, DOI 10.1145/3018661.3018689
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Yang D, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P407, DOI 10.1145/2567948.2577285
   Yang DQ, 2015, LECT NOTES COMPUT SC, V9049, P353, DOI 10.1007/978-3-319-18120-2_21
   Yang  X., 2017, INF SOFTW TECHNOL, P206
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Yin D., 2010, Proceedings of the 16th ACM SIGKDD international conference on Knowledge discovery and data mining, P959
   Ying HC, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3926
   Zangerle E, 2011, LECT NOTES COMPUT SC, V6984, P113, DOI 10.1007/978-3-642-24704-0_16
   Zhang Y, 2015, ARXIV PREPRINT ARXIV
   Zhou P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING, COMMUNICATIONS AND COMPUTING (ICSPCC)
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 68
TC 28
Z9 31
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 1
EP 13
DI 10.1016/j.infsof.2019.01.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400001
DA 2024-07-18
ER

PT J
AU Garousi, V
   Felderer, M
   Mäntylä, MV
AF Garousi, Vahid
   Felderer, Michael
   Mantyla, Mika V.
TI Guidelines for including grey literature and conducting multivocal
   literature reviews in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Multivocal literature review; Grey literature; Guidelines; Systematic
   literature review; Systematic mapping study; Literature study;
   Evidence-based software engineering
ID SYSTEMATIC LITERATURE-REVIEWS; DECISION-SUPPORT; HEALTH-SCIENCES;
   TEST-CODE; RIGOR; CHALLENGES; VOICE; INDUSTRIAL; PROGRAMS; AUTOMATE
AB Context A Multivocal Literature Review (MLR) is a form of a Systematic Literature Review (SLR) which includes the grey literature (e.g., blog posts, videos and white papers) in addition to the published (formal) literature (e.g., journal and conference papers). MLRs are useful for both researchers and practitioners since they provide summaries both the state-of-the art and practice in a given area. MLRs are popular in other fields and have recently started to appear in software engineering (SE). As more MLR studies are conducted and reported, it is important to have a set of guidelines to ensure high quality of MLR processes and their results.
   Objective: There are several guidelines to conduct SLR studies in SE. However, several phases of MLRs differ from those of traditional SLRs, for instance with respect to the search process and source quality assessment. Therefore, SLR guidelines are only partially useful for conducting MLR studies. Our goal in this paper is to present guidelines on how to conduct MLR studies in SE.
   Method: To develop the MLR guidelines, we benefit from several inputs: (1) existing SLR guidelines in SE, (2), a literature survey of MLR guidelines and experience papers in other fields, and (3) our own experiences in conducting several MLRs in SE. We took the popular SLR guidelines of Kitchenham and Charters as the baseline and extended/adopted them to conduct MLR studies in SE. All derived guidelines are discussed in the context of an already-published MLR in SE as the running example.
   Results: The resulting guidelines cover all phases of conducting and reporting MLRs in SE from the planning phase, over conducting the review to the final reporting of the review. In particular, we believe that incorporating and adopting a vast set of experience-based recommendations from MLR guidelines and experience papers in other fields have enabled us to propose a set of guidelines with solid foundations.
   Conclusion: Having been developed on the basis of several types of experience and evidence, the provided MLR guidelines will support researchers to effectively and efficiently conduct new MLRs in any area of SE. The authors recommend the researchers to utilize these guidelines in their MLR studies and then share their lessons learned and experiences.
C1 [Garousi, Vahid] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
   [Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
   [Mantyla, Mika V.] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
C3 Wageningen University & Research; University of Innsbruck; Blekinge
   Institute Technology; University of Oulu
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM vahid.garousi@wur.nl; michael.felderer@uibk.ac.at; mika.mantyla@oulu.fi
RI Mäntylä, Mika V/E-7644-2012; Felderer, Michael/AAF-4909-2020
OI Garousi, Vahid/0000-0001-6590-7576
FU Academy of Finland [298020]; TEKES [3192/31/2017 (ITEA3: 16032
   TESTOMAT)]
FX The third author has been partially supported by the Academy of Finland
   Grant no 298020 (Auto-Time) and by TEKES Grant no 3192/31/2017 (ITEA3:
   16032 TESTOMAT project).
CR Adams R.J., 2016, International Journal of Management Reviews, V00, P1
   ALBERANI V, 1990, B MED LIBR ASSOC, V78, P358
   Amannejad Y, 2014, IEEE ICST WORKSHOP, P302, DOI 10.1109/ICSTW.2014.34
   [Anonymous], 2010, SURGERY, DOI DOI 10.1016/J.SURG.2009.06.030
   Bajwa SS, 2016, LECT NOTES BUS INF P, V240, P169, DOI 10.1007/978-3-319-40515-5_14
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Banks M.A., 2010, Grey literature in library and information studies
   Bashi V. R., 1992, TECHNICAL REPORT
   Bellefontaine SP, 2014, J CHILD FAM STUD, V23, P1378, DOI 10.1007/s10826-013-9795-1
   Benzies KM, 2006, WORLDV EVID-BASED NU, V3, P55, DOI 10.1111/j.1741-6787.2006.00051.x
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Calderón A, 2018, COMPUT STAND INTER, V57, P36, DOI 10.1016/j.csi.2017.11.003
   Capgemini Corp, 2017, WORLD QUAL REP 2016
   Conn VS, 2003, NURS RES, V52, P256, DOI 10.1097/00006199-200307000-00008
   Costa S, 2016, SYST REV, V5, DOI 10.1186/s13643-016-0312-7
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Daigneault PM, 2014, INT J SOC RES METHOD, V17, P267, DOI 10.1080/13645579.2012.730704
   Dingsayr T, 2009, IEEE SOFTWARE, V26, P100, DOI 10.1109/MS.2009.82
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   ELMORE RF, 1991, REV EDUC RES, V61, P293
   Escoffery C, 2014, BMC CANCER, V14, DOI 10.1186/1471-2407-14-454
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Favin M, 2012, INT HEALTH, V4, P229, DOI 10.1016/j.inhe.2012.07.004
   Gargani J., 2011, Advancing validity in outcome evaluation: Theory and practice. New Directions for Evaluation, V130, P17, DOI DOI 10.1002/EV.362
   Garousi V., 2017, What We Know about Testing Embedded Software
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V., 2013, PROGR INNOVATIONS MO
   Garousi V., 2016, P INT C EV ASS SOFTW, P171
   Garousi V., 2017, MINI SLR MLR EXPERIE
   Garousi V., 2011, J SOFTW SYST MODELIN
   Garousi V, 2018, IEEE ICST WORKSHOP, P138, DOI 10.1109/ICSTW.2018.00042
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2018, IEEE SOFTWARE, V35, P84, DOI 10.1109/MS.2017.4541043
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Garousi V, 2017, SCIENTOMETRICS, V112, P963, DOI 10.1007/s11192-017-2419-6
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.30
   Garousi V, 2016, J SOFTW-EVOL PROC, V28, P272, DOI 10.1002/smr.1758
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Giustini D., 2017, FINDING HARD FINDS S
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Gopalakrishnan S, 2013, J Family Med Prim Care, V2, P9, DOI 10.4103/2249-4863.109934
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Hannan M., 2017, SEARCH BASED SOFTWAR
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P737, DOI 10.1109/TSE.2010.106
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hopewell S, 2007, COCHRANE DB SYST REV, DOI 10.1002/14651858.MR000001.pub2
   Hopewell S, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P49, DOI 10.1002/0470870168.ch4
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Kennell J, 2009, CULT TRENDS, V18, P83, DOI 10.1080/09548960802651294
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kulesovs I., 2015, IOS APPL TESTING, V3, P138
   Langville A. N., GOOGLES PAGERANK SCI
   Lawrence A., 2014, Where Is the Evidence? Realising the Value of Grey Literature for Public Policy and Practice: A Discussion Paper
   Libraries Penn, 2017, GREY LIT HLTH SCI EV
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Mäntylä MV, 2016, LECT NOTES COMPUT SC, V10027, P611, DOI 10.1007/978-3-319-49094-6_46
   Mathers BM, 2008, LANCET, V372, P1733, DOI 10.1016/S0140-6736(08)61311-2
   McAuley L, 2000, LANCET, V356, P1228, DOI 10.1016/S0140-6736(00)02786-0
   McGrath, 2006, REV GREY LIT DRUG PR
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   OGAWA RT, 1991, REV EDUC RES, V61, P307, DOI 10.3102/00346543061003307
   Olsson C, 2014, NURSE EDUC PRACT, V14, P102, DOI 10.1016/j.nepr.2014.01.005
   PATTON MQ, 1991, REV EDUC RES, V61, P287, DOI 10.3102/00346543061003287
   Petersen K., 2008, INT C EV ASS SOFTW E
   Petersen K., 2009, P 2009 3 INT S EMP S
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Rainer A, 2017, INFORM SOFTWARE TECH, V87, P62, DOI 10.1016/j.infsof.2017.01.011
   Raulamo-Jurvanen P., 2017, P 21 INT C EV ASS SO, P21, DOI DOI 10.1145/3084226.3084252
   Raulamo-Jurvanen P, 2016, LECT NOTES COMPUT SC, V10027, P285, DOI 10.1007/978-3-319-49094-6_18
   Sahaf Z., 2014, PROC INT C SOFTW SYS, P149, DOI [10.1145/2600821.2600832, DOI 10.1145/2600821.2600832]
   Saleh AA, 2014, EVID BASED LIB INF P, V9, P28, DOI 10.18438/B8DW3K
   Santos J.A.M., 2015, 12 WORKSHOP EXPT SOF, P488
   Sauerwein C., 2017, P 13 INT C WIRTSCHAF
   Schlosser R. W., 2006, FOCUS, V15
   Schopfel J., 2010, ENCY LIB INFORM SCI, VThird, P2029, DOI DOI 10.1081/E-ELIS3-120043732
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Toffel MW, 2016, PROD OPER MANAG, V25, P1493, DOI 10.1111/poms.12558
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tomka G, 2013, CULT TRENDS, V22, P259, DOI 10.1080/09548963.2013.819657
   Tyndall J., 2017, ARCH FLINDERS ACAD C
   Walton D, 2008, ARGUMENTATION SCHEMES, P1, DOI 10.1017/CBO9780511802034
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yasin A., 2012, THESIS
   YIN RK, 1991, REV EDUC RES, V61, P299, DOI 10.3102/00346543061003299
   Yusifoglu V. G., 2014, J INFORM SOFTWARE TE
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi J., 2014, J SYST SOFTW
   [No title captured]
NR 111
TC 303
Z9 319
U1 17
U2 69
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 101
EP 121
DI 10.1016/j.infsof.2018.09.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HF6XJ
UT WOS:000454381300006
OA Green Submitted, Green Accepted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Rainer, A
   Williams, A
AF Rainer, Austen
   Williams, Ashley
TI Heuristics for improving the rigour and relevance of grey literature
   searches for software engineering research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Grey literature review; Search engines; Reasoning; Quality criteria
AB Background: Software engineering research has a growing interest in grey literature (GL). Aim: To improve the identification of relevant and rigorous GL. Method: We develop and demonstrate heuristics to find more relevant and rigorous GL. The heuristics generate stratified samples of search and post search datasets using a formally structured set of search keywords. Conclusion: The heuristics require further evaluation. We are developing a tool to implement the heuristics.
C1 [Rainer, Austen; Williams, Ashley] Univ Canterbury, Dept Comp Sci & Software Engn, Ilam Campus, Canterbury 8041, New Zealand.
C3 University of Canterbury
RP Rainer, A (corresponding author), Univ Canterbury, Dept Comp Sci & Software Engn, Ilam Campus, Canterbury 8041, New Zealand.
EM austen.rainer@canterbury.ac.nz; ashley.williams@pg.canterbury.ac.nz
OI Rainer, Austen/0000-0001-8868-263X; Williams, Ashley/0000-0002-6888-0521
CR Cartaxo B, 2018, INFORM SOFTWARE TECH, V97, P80, DOI 10.1016/j.infsof.2018.01.001
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Garousi V., 2017, ARXIV170702553
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Inui Kentaro, 2008, Wl 2008. 2008 IEEE/WIC/ACM International Conference on Web Intelligence. IAT 2008. 2008 IEEE/WIC/ACM International Conference on Intelligent Agent Technology. Wl-IAT Workshop 2008 2008 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology Workshops, P314, DOI 10.1109/WIIAT.2008.373
   Jijkoun V., 2010, P NAACL HLT 2010 WOR, P17
   Rainer A., 2018, TECHNICAL REPORT SOF
   Tyndall J, 2010, AACODS (Authority, Accuracy, Coverage, Objectivity, Date, Significance) Checklist
   Williams A., 2018, P 22 INT C EV ASS SO, P46, DOI [10.1145/3210459.3210464, DOI 10.1145/3210459.3210464]
   Williams Ashley, 2018, Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering, P151, DOI DOI 10.1145/3210459
NR 12
TC 10
Z9 11
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 231
EP 233
DI 10.1016/j.infsof.2018.10.007
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Arcuri, A
AF Arcuri, Andrea
TI Test suite generation with the Many Independent Objective (MIO)
   algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test generation; SBSE; SBST; Multi-objective optimization; System
   testing
AB Context: Automatically generating test suites is intrinsically a multi-objective problem, as any of the testing targets (e.g., statements to execute or mutants to kill) is an objective on its own. Test suite generation has peculiarities that are quite different from other more regular optimization problems. For example, given an existing test suite, one can add more tests to cover the remaining objectives. One would like the smallest number of small tests to cover as many objectives as possible, but that is a secondary goal compared to covering those targets in the first place. Furthermore, the amount of objectives in software testing can quickly become unmanageable, in the order of (tens/hundreds of) thousands, especially for system testing of industrial size systems.
   Objective: To overcome these issues, different techniques have been proposed, like for example the Whole Test Suite (WTS) approach and the Many-Objective Sorting Algorithm (MOSA). However, those techniques might not scale well to very large numbers of objectives and limited search budgets (a typical case in system testing). In this paper, we propose a novel algorithm, called Many Independent Objective (MIO) algorithm. This algorithm is designed and tailored based on the specific properties of test suite generation.
   Method: An empirical study was carried out for test suite generation on a series of artificial examples and seven RESTful API web services. The EVOMASTER system test generation tool was used, where MIO, MOSA, WTS and random search were compared.
   Results: The presented MIO algorithm resulted having the best overall performance, but was not the best on all problems.
   Conclusion: The novel presented MIO algorithm is a step forward in the automation of test suite generation for system testing. However, there are still properties of system testing that can be exploited to achieve even better results.
C1 [Arcuri, Andrea] Westerdals Oslo ACT, Fac Technol, Oslo, Norway.
   [Arcuri, Andrea] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SNT, Luxembourg, Luxembourg.
C3 Westerdals Oslo School of Arts Communication & Technology; University of
   Luxembourg
RP Arcuri, A (corresponding author), Westerdals Oslo ACT, Fac Technol, Oslo, Norway.
EM arcand@westerdals.no
FU Research Council of Norway [274385]; National Research Fund, Luxembourg
   [FNR/P10/03]
FX We would like to thank Annibale Panichella for his help with the
   implementation of the MOSA algorithm. This work is supported by the
   Research Council of Norway (project on Evolutionary Enterprise Testing,
   274385), and by the National Research Fund, Luxembourg (FNR/P10/03).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   Arcuri A, 2017, LECT NOTES COMPUT SC, V10452, P3, DOI 10.1007/978-3-319-66299-2_1
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri Andrea., 2011, ISSTA
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Harman M., 2010, IEEE T SOFTW ENG TSE, V36
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
NR 21
TC 41
Z9 42
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 195
EP 206
DI 10.1016/j.infsof.2018.05.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900014
DA 2024-07-18
ER

PT J
AU Chen, ZY
   Guo, HF
   Song, M
AF Chen, Zhiyuan
   Guo, Hai-Feng
   Song, Myoungkyu
TI Improving regression test efficiency with an awareness of refactoring
   changes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Fault localization; Change impact analysis; Test
   selection; Refactorings
ID CHANGE IMPACT ANALYSIS; JAVA; PROGRAMS; GRAPH
AB Context. Developers often improve software quality through refactorings the practice of behavior-preserving changes to existing code. Recent studies showed that, despite their awareness of tool support for automated refactorings, developers prefer manual refactorings. This practice can be often error-prone and increase testing cost.
   Objective. To address the problem, we present the Refactorings Investigation and Testing technique, called RIT. RIT improves the testing efficiency for validating refactoring changes and providing confidence that changed parts behave as intended. As testing is expensive for developers of high-assurance software, RIT reduces a considerable amount of its costs by only identifying dependent statements on a failure in each test and by detecting specific refactoring edits responsible for testing failures.
   Method. Our approach identifies refactorings by analyzing original and edited versions of a program. It then uses the semantic impact of a set of identified refactoring changes to detect tests whose behavior may have been affected and modified by refactoring edits. Given each failed asserts after running regression test suites, RIT helps developers focus their attention on logically related program statements by applying program slicing for minimizing each test. For debugging purposes, RIT determines specific failure-inducing refactoring edits, separating from other changes that only affect other asserts or tests.
   Results. We evaluated RIT on three open source projects, and found that RIT detected tests affected by refactorings with 80.9% accuracy on average. Furthermore, it identified and formed partitions relating program statements only dependent on failed asserts with 97.2% accuracy on average.
   Conclusion. RIT, which combines a refactoring reconstruction technique with change impact analysis to localize failure-inducing program edits, helps developers localize fault causes by focusing on refactoring changes as opposed to all the code fragments in the new version.
C1 [Chen, Zhiyuan; Song, Myoungkyu] Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
   [Guo, Hai-Feng] Amazon Com Inc, Seattle, WA USA.
C3 University of Nebraska System; Amazon.com
RP Song, M (corresponding author), Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
EM zhiyuanchen@unomaha.edu; guohaife@amazon.com; myoungkyu@unomaha.edu
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], THESIS
   Arnold Robert S., 1996, Software Change Impact Analysis
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Chen Z., 2017, COMP SOFTW APPL C CO, P101
   Cornélio M, 2010, SCI COMPUT PROGRAM, V75, P106, DOI 10.1016/j.scico.2009.10.001
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Gligoric M, 2013, LECT NOTES COMPUT SC, V7920, P629, DOI 10.1007/978-3-642-39038-8_26
   Hao D, 2009, J COMPUT SCI TECH-CH, V24, P962, DOI 10.1007/s11390-009-9270-z
   Holmes R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P371, DOI 10.1145/1985793.1985844
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kiczales G., P ECOOP 97
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim Miryung, 2011, ICSE 11 P 2011 ACM I
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Opdyke W. F., P SOOPPA 90
   Opdyke William F., 1992, THESIS
   Overbey J.L., 2010, ACM SIGPLAN Fortran Forum, V29, P11
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Rachatasumrit N, 2012, ICSM 12 28 IEEE INT, P10
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Ryder BG, 2001, ACM SIGPLAN NOTICES, P46
   Soares G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P521, DOI 10.1145/1810295.1810461
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Sridharan M, 2007, ACM SIGPLAN NOTICES, V42, P112, DOI 10.1145/1273442.1250748
   Tao Y., 2012, P FSE
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Vakilian M., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P31
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Yu Y., 2008, SOFTW ENG 2008 ICSE, P201
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang WL, 2007, J SOFTW MAINT EVOL-R, V19, P231, DOI 10.1002/smr.351
NR 54
TC 5
Z9 6
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 174
EP 187
DI 10.1016/j.infsof.2018.07.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000013
DA 2024-07-18
ER

PT J
AU Boucher, A
   Badri, M
AF Boucher, Alexandre
   Badri, Mourad
TI Software metrics thresholds calculation techniques to predict
   fault-proneness: An empirical comparison
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metrics thresholds; Class-level metrics; Object-oriented metrics;
   Faults; Fault-proneness prediction; Machine learning; Clustering;
   Cross-validation; Code quality; Object-oriented programming
ID OBJECT-ORIENTED DESIGN; ROC CURVES; VALIDATION; QUALITY
AB Context: Nowadays, fault-proneness prediction is an important field of software engineering. It can be used by developers and testers to prioritize tests. This would allow a better allocation of resources, reducing testing time and costs, and improving the effectiveness of software testing. Non-supervised fault-proneness prediction models, especially thresholds-based models, can easily be automated and give valuable insights to developers and testers on the classification performed.
   Objective: In this paper, we investigated three thresholds calculation techniques that can be used for fault proneness prediction: ROC Curves, VARL (Value of an Acceptable Risk Level) and Alves rankings. We compared the performance of these techniques with the performance of four machine learning and two clustering based models.
   Method: Threshold values were calculated on a total of twelve different public datasets: eleven from the PROMISE Repository and another based on the Eclipse project. Thresholds-based models were then constructed using each thresholds calculation technique investigated. For comparison, results were also computed for supervised machine learning and clustering based models. Inter-dataset experimentation between different systems and versions of a same system was performed.
   Results: Results show that ROC Curves is the best performing method among the three thresholds calculation methods investigated, closely followed by Alves Rankings. VARL method didn't give valuable results for most of the datasets investigated and was easily outperformed by the two other methods. Results also show that thresholds-based models using ROC Curves outperformed machine learning and clustering based models.
   Conclusion: The best of the three thresholds calculation techniques for fault-proneness prediction is ROC Curves, but Alves Rankings is a good choice too. In fact, the advantage of Alves Rankings over ROC Curves technique is that it is completely unsupervised and can therefore give pertinent threshold values when fault data is not available.
C1 [Boucher, Alexandre; Badri, Mourad] Univ Quebec Trois Rivieres, Dept Math & Comp Sci, Software Engn Lab, Trois Rivieres, PQ, Canada.
C3 University of Quebec; University of Quebec Trois Rivieres
RP Badri, M (corresponding author), Univ Quebec Trois Rivieres, Dept Math & Comp Sci, Software Engn Lab, Trois Rivieres, PQ, Canada.
EM alexandre.boucher2@uqtr.ca; mourad.badri@uqtr.ca
RI Boucher, Alexandre/A-6849-2009
FU NSERC (Natural Sciences and Engineering Research Council of Canada)
FX This work was partially supported by NSERC (Natural Sciences and
   Engineering Research Council of Canada) grant.
CR Abaei G, 2015, KNOWL-BASED SYST, V74, P28, DOI 10.1016/j.knosys.2014.10.017
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], SOFTW TECHN C
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   Arar ÖF, 2016, EXPERT SYST APPL, V61, P106, DOI 10.1016/j.eswa.2016.05.018
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Catal C, 2009, P WORLD C ENG, P1, DOI 10.1109/ITNG.2009.12
   Catal C, 2011, INFORM SCIENCES, V181, P4867, DOI 10.1016/j.ins.2011.06.017
   Catal C, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P199, DOI 10.1109/ITNG.2009.12
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Etzkorn L, 1999, J OBJECT-ORIENT PROG, V12, P35
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Isong B, 2013, INT J SOFTW ENG KNOW, V23, P1513, DOI 10.1142/S0218194013500484
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2011, APPL SCI, V1, P86, DOI DOI 10.3390/APP9132764
   Kaur A, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P219, DOI 10.1109/ICACCI.2014.6968438
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Malhotra R, 2015, EXPERT SYST, V32, P203, DOI 10.1111/exsy.12078
   Malhotra R, 2012, J INF PROCESS SYST, V8, P241, DOI 10.3745/JIPS.2012.8.2.241
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Moeyersoms J, 2015, J SYST SOFTWARE, V100, P80, DOI 10.1016/j.jss.2014.10.032
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Shatnawi R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P54, DOI 10.1109/INNOVATIONS.2012.6207774
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Singh S., 2014, CSIT, V2, P191, DOI DOI 10.1007/S40012-014-0057-1
   The Apache Software Foundation, 2016, AP TOMC
   The Apache Software Foundation, 2016, AP LUC
   The Apache Software Foundation, 2016, AP POI JAV API MICR
   The Eclipse foundation, 2016, JDT COR COMP
   Yo Liguo., 2012, I.J. Information Technology and Computer Science, V8, P63
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 43
TC 31
Z9 33
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 38
EP 67
DI 10.1016/j.infsof.2017.11.005
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200004
DA 2024-07-18
ER

PT J
AU Ramler, R
   Buchgeher, G
   Klammer, C
AF Ramler, Rudolf
   Buchgeher, Georg
   Klammer, Claus
TI Adapting automated test generation to GUI testing of industry
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID C++
AB Context: Automated test generation promises to improve the effectiveness of software testing and to reduce the involved manual effort. While automated test generation has been successfully applied for code-level API testing, it has not found widespread adoption in practice for testing of graphical user interfaces. Tools for test generation do not support GUI testing out-of-the-box but require dedicated extensions.
   Objective: This paper explores the applicability of automated test generation for testing GUIs of industry applications. We propose a test adapter approach to bridge the gap between automated test generation tools and industry applications.
   Method: A multiple case study was conducted in which automated test generation with test adapters has been applied at the unit, integration, and system test level in three industry projects from two different companies. Results: Automated test generation via test adapters could be applied at all test levels. It has led to an increase of coverage as well as the detection of new defects that were not found by preceding testing activities in the projects. While test adapters can easily be implemented at the unit test level, their complexity and the corresponding effort for providing adapter implementations rises at higher test levels.
   Conclusion: Test adapters can be used for applying automated test generation for testing GUIs of industry applications. They bridge the gap between automated test generation tools and industry applications. The development of test adapters requires no tool-specific knowledge and can be performed by members of the development team. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Ramler, Rudolf; Buchgeher, Georg; Klammer, Claus] Software Competence Ctr Hagenberg GmbH, Softwarepk 21, A-4232 Hagenberg, Austria.
C3 Softwarepark Hagenberg
RP Ramler, R (corresponding author), Software Competence Ctr Hagenberg GmbH, Softwarepk 21, A-4232 Hagenberg, Austria.
EM rudolf.ramler@scch.at
OI Ramler, Rudolf/0000-0001-9903-6107; Buchgeher,
   Georg/0000-0002-8565-6257; Klammer, Claus/0000-0002-7777-1343
FU Austrian Research Promotion Agency [FFG 844597]; Austrian Ministry for
   Transport, Innovation and Technology; Federal Ministry of Science,
   Research and Economy; Province of Upper Austria
FX The research reported in this paper has been supported by the Austrian
   Research Promotion Agency [grant number FFG 844597], the Austrian
   Ministry for Transport, Innovation and Technology, the Federal Ministry
   of Science, Research and Economy, and the Province of Upper Austria in
   the frame of the COMET center SCCH.
CR Albert E, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P25, DOI 10.1145/1706356.1706363
   Amalfitano D, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P650, DOI 10.1109/ICSM.2012.6405345
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   [Anonymous], 2010, 247652010E ISOIECIEE
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Boshernitsan M., 2006, ISSTA, P169
   Braione P., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P50, DOI 10.1109/IWAST.2012.6228990
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Edwards SH, 2004, IEEE T SOFTWARE ENG, V30, P794, DOI 10.1109/TSE.2004.80
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Galeotti JP, 2013, PROC INT SYMP SOFTW, P360, DOI 10.1109/ISSRE.2013.6698889
   Galler SJ, 2014, INT J SOFTW TOOLS TE, V16, P727, DOI 10.1007/s10009-013-0272-3
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Graham D., 2012, EXPERIENCES TEST AUT, P447
   Karimi Z, 2016, J SYST SOFTWARE, V111, P228, DOI 10.1016/j.jss.2015.09.011
   Klammer C, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P227, DOI 10.1109/SEAA.2016.60
   Ma L, 2015, IEEE INT CONF AUTOM, P842, DOI 10.1109/ASE.2015.102
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Nyman, 2000, SOFTWARE TESTING QUA
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Prasetya ISWB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P950, DOI 10.1145/2786805.2803182
   Ramler R, 2012, EUROMICRO CONF PROC, P286, DOI 10.1109/SEAA.2012.42
   Robinson Brian, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P23, DOI 10.1109/ASE.2011.6100059
   Schulze C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P135, DOI 10.1145/2591062.2591180
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Tanja EJ, 2015, INT J INF SYST MODEL, V6, P46, DOI 10.4018/IJISMD.2015070103
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Utting M., 2010, Practical model-based testing: a tools approach
   VasSreanu C. S., 2013, AUTOMAT SOFTW ENG, V20, P391
   Vlissides R. Helm, 1995, DESIGN PATTERNS ELEM
   Wang S, 2009, IEEE ICST WORKSHOP, P210, DOI 10.1109/ICSTW.2009.36
   Wetzlmaier T, 2016, IEEE INT CONF SOFTW, P416, DOI 10.1109/ICST.2016.51
   Winterer M., 2015, P 8 INT C SOFTW TEST, P1
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
NR 43
TC 14
Z9 14
U1 1
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 248
EP 263
DI 10.1016/j.infsof.2017.07.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200016
DA 2024-07-18
ER

PT J
AU Öztürk, MM
AF Ozturk, Muhammed Maruf
TI Which type of metrics are useful to deal with class imbalance in
   software defect prediction?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static code metrics; Process metrics; Class imbalance; Defect prediction
ID SUITE
AB Context: There are various ways to cope with class imbalance problem which is one of the main issues of software defect prediction. Sampling algorithms are implemented on both industrial and open-source software defect prediction data sets by practitioners to wipe out imbalanced data points. Sampling algorithms, up-to-date, have been employed either static or process code metrics.
   Objective: In this study, sampling algorithms including Virtual, SMOTE, and HSDD (hybrid sampling for defect data sets) are explored using static code and quality metrics together. Our goal is not only to lead practitioners to decide the type of the metrics in defect prediction but also provide useful information for developers to design less defective software projects.
   Method: We ran sampling experiments with three sampling algorithms on ten data sets (from GitHub). Feature selection is applied on large features of the data sets. Using five classifiers, the performance of the data sets after sampling is compared with initial data sets. Regression analyzes are implemented on quality metrics to find the most influential metrics for detecting defect proneness.
   Results: Regardless of the type of the sampling, prediction performances are similar. Quality metrics surpassed static code metrics with respect to training times and prediction accuracies.
   Conclusion: Using quality metrics yields better prediction results rather than static code metrics in imbalanced data sets. As the count of project cloning increases, the number of defects decreases. Thus, approaches, related to the class imbalance, should be evaluated not only in terms of static code metrics but also for quality metrics. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Ozturk, Muhammed Maruf] Suleyman Demirel Univ, Fac Engn, Dept Comp Engn, Isparta, Turkey.
C3 Suleyman Demirel University
RP Öztürk, MM (corresponding author), Suleyman Demirel Univ, Fac Engn, Dept Comp Engn, Isparta, Turkey.
EM muhammedorturk@sdu.edu.tr
RI ozturk, mmaruf/GWC-7727-2022
OI ozturk, mmaruf/0000-0001-6446-9754
CR Afzal W, 2012, INT J SOFTW ENG KNOW, V22, P203, DOI 10.1142/S0218194012400037
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Attenberg J, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P101
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Blagus R, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P89, DOI 10.1109/ICMLA.2012.183
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cao Z., 2007, P 24 INT C MACHINE L, P129, DOI DOI 10.1145/1273496.1273513
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Feldman D, 2013, PROCEEDINGS OF THE TWENTY-FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS (SODA 2013), P1434
   Foucault M, 2015, INFORM SOFTWARE TECH, V64, P102, DOI 10.1016/j.infsof.2015.01.013
   Freund Y., 1996, INT C MACHINE LEARNI, P148
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hardle W.K., 2012, APPL MULTIVARIATE ST, P269
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   Jian CX, 2016, NEUROCOMPUTING, V193, P115, DOI 10.1016/j.neucom.2016.02.006
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kaur Arvinder, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359220
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar TM, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.27
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   LINDLEY DV, 1958, J ROY STAT SOC B, V20, P102
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mahmoodzadeh Zahra, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286219
   Malhi A, 2004, IEEE T INSTRUM MEAS, V53, P1517, DOI 10.1109/TIM.2004.834070
   Maurice H. H, 1977, ELEMENTS SOFTWARE SC
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Opitz D., 1999, J ARTIF INTELL RES, V11, P169, DOI DOI 10.1613/JAIR.614
   Ozturk MM, 2016, APPL SOFT COMPUT, V49, P1051, DOI 10.1016/j.asoc.2016.08.002
   Paikari E, 2012, INT J SOFTW ENG KNOW, V22, P747, DOI 10.1142/S0218194012400116
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Polat K, 2009, EXPERT SYST APPL, V36, P1587, DOI 10.1016/j.eswa.2007.11.051
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rätsch G, 2001, MACH LEARN, V42, P287, DOI 10.1023/A:1007618119488
   Rodriguez D, 2014, P 18 INT C EV ASS SO, P1
   Rodriguez D, 2013, INFORM SOFTWARE TECH, V55, P1810, DOI 10.1016/j.infsof.2013.05.002
   Siers MJ, 2015, INFORM SYST, V51, P62, DOI 10.1016/j.is.2015.02.006
   Singh P, 2017, IEEE T SYST MAN CY-S, V47, P826, DOI 10.1109/TSMC.2016.2521840
   Software B.D., 2016, OP HUB
   Sun ZB, 2015, PATTERN RECOGN, V48, P1623, DOI 10.1016/j.patcog.2014.11.014
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tarhan A, 2006, LECT NOTES COMPUT SC, V4257, P88
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Turhan B, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P191, DOI 10.1109/SEAA.2008.52
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang S, 2013, INT J COMPUT INTELL, V12, DOI 10.1142/S1469026813400014
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Weyuker E.J., 2007, P 3 INT WORKSH PRED, DOI DOI 10.1109/PROMISE.2007.14.8
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xu Q, 2015, PATTERN RECOGN LETT, V54, P50, DOI 10.1016/j.patrec.2014.11.017
   Xu RZ, 2006, FIRST INTERNATIONAL MULTI-SYMPOSIUMS ON COMPUTER AND COMPUTATIONAL SCIENCES (IMSCCS 2006), PROCEEDINGS, VOL 2, P391, DOI 10.1109/IMSCCS.2006.260
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Zengin A, 2012, SIMUL MODEL PRACT TH, V29, P193, DOI 10.1016/j.simpat.2012.05.013
   Zhang XY, 2015, APPL INTELL, V42, P544, DOI 10.1007/s10489-014-0610-5
NR 70
TC 24
Z9 28
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 17
EP 29
DI 10.1016/j.infsof.2017.07.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200002
DA 2024-07-18
ER

PT J
AU Tiwari, S
   Gupta, A
AF Tiwari, Saurabh
   Gupta, Atul
TI Investigating comprehension and learnability aspects of use cases for
   software specification problems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use cases; Use case templates; Usability aspects; Comprehension;
   Learnability; Software specification problem; Experimental study
ID EMPIRICAL-ASSESSMENT; QUALITY; USABILITY; DIAGRAMS; STEREOTYPES; MODELS
AB Context: Availability of multiple use case templates to document software requirements inevitably requires their characterization in terms of their relevance, usefulness, and the degree of the formality of the expressions.
   Objective: This paper reports two experimental studies that separately investigate two usability aspects, namely the comprehension and the learnability of use case templates for software specification problems.
   Method: We judged the comprehension aspect by evaluating the subjects' understanding of the requirements, specified in eight different use case templates, and the ease with which the changes were made by them in the requirement specifications. The learnability aspect was judged by assessing the completeness, the correctness, and the redundancy of the use case specifications developed by the subjects using these eight use case templates for three software specification problems.
   Results: Our results suggested that the Kettenis's use case template was found to be significantly more understandable, and the templates by Tiwari, Yue and Some were found to be significantly more flexible to adapt to the changes. On the learnability aspect, the way we formulated it, we found different templates to be more complete (Kettenis), correct (Some), and non-redundant (Tiwari).
   Conclusion: The specifications documented using a more detailed use case template with an intermediate degree of formality can be more comprehensible and flexible to adapt to the required changes to be made in the specification. A more formal template seems to enhance the learnability as well. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Tiwari, Saurabh] DA IICT, Gandhinagar, India.
   [Gupta, Atul] Indian Inst Informat Technol Design & Mfg, Jabalpur, India.
C3 Dhirubhai Ambani Institute of Information & Communication Technology;
   Indian Institute of Information Technology Design & Manufacturing,
   Jabalpur
RP Tiwari, S (corresponding author), DA IICT, Gandhinagar, India.
EM saurabh_t@daiict.ac.in; atul@iiitdmj.ac.in
RI Gupta, Atul/ABB-8611-2020
OI Gupta, Atul/0000-0001-5051-5887; Tiwari, Saurabh/0000-0002-2741-3150
CR Achour CB, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/ISRE.1999.777983
   Alexander I. F., 2002, Writing Better Requirements
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   Anda B., 2002, SEKE 02, P127
   Anda B, 2009, INFORM SOFTWARE TECH, V51, P1699, DOI 10.1016/j.infsof.2009.04.005
   [Anonymous], 2007, GETTING STARTED USE
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 1993, Usability Engineering
   [Anonymous], 2012, OMG SPECIFICATIONS P
   [Anonymous], P 6 INT C EMP ASS SO
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Boloix G, 1998, IEEE T EDUC, V41, P185, DOI 10.1109/13.704544
   Brace W, 2014, REQUIR ENG, V19, P1, DOI 10.1007/s00766-012-0154-3
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Bruun A, 2015, J SYST SOFTWARE, V105, P40, DOI 10.1016/j.jss.2015.03.043
   BSI, 2016, SYST SOFTW QUAL REQ
   Carroll J.M., 1985, HUM-COMPUT INTERACT, V1, P283
   Cockburn A., 2001, Writing effective use cases, V1
   Conover W. J., 1971, PRACTICAL NONPARAMET, V1971
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   Cox K., 2001, 7th Int. Workshop on Requirements Engineering, P101
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Davis S, 1998, INTERACT COMPUT, V11, P147, DOI 10.1016/S0953-5438(98)00026-5
   El-Attar M, 2012, REQUIR ENG, V17, P187, DOI 10.1007/s00766-011-0135-y
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   El-Attar M, 2009, EMPIR SOFTW ENG, V14, P477, DOI 10.1007/s10664-008-9101-9
   Elliott GJ, 2002, INTERACT COMPUT, V14, P547, DOI 10.1016/S0953-5438(02)00021-8
   Felderer M, 2015, INFORM SOFTWARE TECH, V61, P1, DOI 10.1016/j.infsof.2014.12.005
   Fleisch W, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P75, DOI 10.1109/ISORC.1999.776354
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Genero M, 2008, LECT NOTES COMPUT SC, V5301, P280, DOI 10.1007/978-3-540-87875-9_20
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Gomaa H., 2000, DESIGNING CONCURRENT, V2000
   Grossman T, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P649
   Häser F, 2016, INFORM SOFTWARE TECH, V79, P52, DOI 10.1016/j.infsof.2016.07.001
   Howell D. C., 2011, CENGAGE LEARN
   IEEE guidelines, 1998, IEEE REC PRACT SOFTW
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B., 1996, IEEE SOFTW
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   Liu D, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P831
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Overgraad G., 2005, Use Cases Patterns and Blueprints
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P69, DOI 10.1007/s11219-006-9006-z
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P383, DOI 10.1007/s11219-007-9023-6
   Purchase HelenC., 2001, APVIS 01, P113
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Sinha Avik, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P155, DOI 10.1109/ICST.2010.19
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Sun D, 2005, PROG COMPREHEN, P317
   Thakur JS, 2016, IEEE INT CONF AUTOM, P566, DOI 10.1145/2970276.2970323
   Thurimella AK, 2013, J SYST SOFTWARE, V86, P1831, DOI 10.1016/j.jss.2013.01.038
   Tiwari S, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590754
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Tiwari S, 2013, ASIA PAC SOFWR ENG, P207, DOI 10.1109/APSEC.2013.37
   Tiwari S, 2012, IEEE INT C ENG COMP, P29, DOI 10.1109/ICECCS.2012.10
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V2000
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
   Zowghi D., 2002, International Workshop on Requirements Engineering: Foundations for Software Quality, P155
NR 72
TC 8
Z9 8
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 22
EP 43
DI 10.1016/j.infsof.2017.06.003
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900002
DA 2024-07-18
ER

PT J
AU Garousi, V
   Petersen, K
   Ozkan, B
AF Garousi, Vahid
   Petersen, Kai
   Ozkan, Baris
TI Challenges and best practices in industry-academia collaborations in
   software engineering: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software engineering; Industry-academia collaborations; Industry;
   Universities; Challenges; Success patterns; Best practices; Systematic
   literature review
ID TECHNOLOGY-TRANSFER
AB Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two 'camps' show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.
   Objective: To identify (a) the challenges to avoid risks to the collaboration by being aware of the challenges, (b) the best practices to provide an inventory of practices (patterns) allowing for an informed choice of practices to use when planning and conducting collaborative projects.
   Method: A systematic review has been conducted. Synthesis has been done using grounded-theory based coding procedures.
   Results: Through thematic analysis we identified 10 challenge themes and 17 best practice themes. A key outcome was the inventory of best practices, the most common ones recommended in different contexts were to hold regular workshops and seminars with industry, assure continuous learning from industry and academic sides, ensure management engagement, the need for a champion, basing research on real world problems, showing explicit benefits to the industry partner, be agile during the collaboration, and the co-location of the researcher on the industry side.
   Conclusion: Given the importance of industry-academia collaboration to conduct research of high practical relevance we provide a synthesis of challenges and best practices, which can be used by researchers and practitioners to make informed decisions on how to structure their collaborations. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
   [Garousi, Vahid] Maral Software Engn Consulting Corp, Calgary, AB, Canada.
   [Petersen, Kai] Blekinge Inst Technol, Sch Engn, Dept Software Engn, Karlskrona, Sweden.
   [Ozkan, Baris] Atilim Univ, Dept Informat Syst Engn, Ankara, Turkey.
C3 Hacettepe University; Blekinge Institute Technology; Atilim University
RP Garousi, V (corresponding author), Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.; Garousi, V (corresponding author), Maral Software Engn Consulting Corp, Calgary, AB, Canada.
EM vahid.garousi@hacettepe.edu.tr; kai.petersen@bth.se;
   baris.ozkan@atilim.edu.tr
RI Ozkan, Baris/AGQ-5334-2022; Ozkan, Baris/HOH-5593-2023; Ozkan,
   Baris/AAZ-1810-2020
OI Ozkan, Baris/0000-0002-5489-6274; Ozkan, Baris/0000-0002-5489-6274;
   Petersen, Kai/0000-0002-1532-8223; Garousi, Vahid/0000-0001-6590-7576
CR Ankrah S, 2015, SCAND J MANAG, V31, P387, DOI 10.1016/j.scaman.2015.02.003
   [Anonymous], 2008, SAGE PUBLICATIONS
   [Anonymous], EXPERIMENTATION IN S
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 2013, ICSOFT 2013
   [Anonymous], 2014, P 2014 INT WORKSH LO, DOI DOI 10.1145/2647648.2647651
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Baldassarre M. T., 2013, P 17 INT C EV ASS SO, P144, DOI [10.1145/2460999.2461020, DOI 10.1145/2460999.2461020]
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Briand L. C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, DOI 10.1109/ICSM.2011.6080766
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Connor AM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P678, DOI 10.1109/ITNG.2009.134
   Corbin J., 1990, BASICS QUAL RES, V41
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cruzes Daniela S., 2010, P INT S EMP SOFTW EN, P1
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Damm L.-O., 2007, THESIS
   Davis A. M., 2002, Requirements Engineering, V7, P107, DOI 10.1007/s007660200007
   DIESTE O, 2013, P 1 INT WORKSH COND, P2
   Eldh S, 2013, IEEE-ACM INT WKSP CO, P69, DOI 10.1109/CESI.2013.6618476
   Enoiu E. P., 2014, P 2014 ACM INT WORKS, P49, DOI 10.1145/2647648.2647655
   Franch J. Gutierrez, BRIDGING GAP ACAD PR, P267
   Gallicano T., 2015, EXAMPLE PERFORM OPEN
   Garousi V., 2015, ONLINE SLR REPOSITOR
   Garousi V., 2010, Computer and Information Science, V3, P19, DOI DOI 10.1142/S0218194013500423
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INT J SOFTW ENG KNOW, V23, P1343, DOI 10.1142/S0218194013500423
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Glaser B. G., 1978, [No title captured]
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Glass R.L., 2006, SOFTWARE CONFLICT 2
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   GRUNBACHER P, 2013, P 1 INT WORKSH COND, P27
   Henderson-Sellers B., 2014, Situational Method Engineering
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jain S, 2013, IEEE-ACM INT WKSP CO, P9, DOI 10.1109/CESI.2013.6618463
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kanso A., 2014, Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering - WISE'14, P43, DOI DOI 10.1145/2647648
   Keele S, 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krishnan P, 2009, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2009.22
   Lamprecht S. J., 2012, Proceedings of the 2012 4th Software Engineering Colloquium (SE), P11, DOI 10.1109/SE.2012.6242350
   Malterud K, 2001, LANCET, V358, P483, DOI 10.1016/S0140-6736(01)05627-6
   Manisha, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P111, DOI 10.1109/CSEET.2011.5876077
   Martinez -Fernandez Silverio, 2014, Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry, P15, DOI [10.1115/2593690.2593696, DOI 10.1115/2593690.2593696]
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Morris P, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P130, DOI 10.1007/BF02919966
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Perkmann M, 2013, RES POLICY, V42, P423, DOI 10.1016/j.respol.2012.09.007
   Petersen K., 2014, P INT WORKSH LONG TE, P13
   Petersen K., 2014, P 2014 INT WORKSH LO, P55
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Raschke W., 2014, P INT WORKSHOP LONG, P3
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Rombach DH, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P29, DOI 10.1109/FOSE.2007.16
   Runeson P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P872, DOI 10.1109/ICST.2012.190
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2014, P 2014 INT WORKSH LO, P25, DOI [10.1145/2647648.2647652, DOI 10.1145/2647648.2647652]
   SALINGER S, 2008, HUM TECHNOL, V4, P9, DOI DOI 10.17011/HT/URN.200804151350
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Santos Paulo, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P414, DOI 10.1109/ESEM.2009.5316013
   Schon D.A., 1983, REFLECTIVE PRACTITIO, V5126
   Vahid Garousi Michael Felderer M.V.M., 2016, 20 INT C EV IN PRESS
   Wiederseiner C, 2010, LECT NOTES COMPUT SC, V6303, P118, DOI 10.1007/978-3-642-15585-7_11
   Wohlin C, 1999, J SYST SOFTWARE, V49, P125, DOI 10.1016/S0164-1212(99)00085-0
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 77
TC 123
Z9 131
U1 7
U2 76
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 106
EP 127
DI 10.1016/j.infsof.2016.07.006
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW0AE
UT WOS:000383302500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gregory, P
   Barroca, L
   Sharp, H
   Deshpande, A
   Taylor, K
AF Gregory, Peggy
   Barroca, Leonor
   Sharp, Helen
   Deshpande, Advait
   Taylor, Katie
TI The challenges that challenge: Engaging with agile practitioners'
   concerns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile methods; Agile software development; Challenges; Evidence-based
   software engineering; DSDM
ID SOFTWARE-DEVELOPMENT; EMPIRICAL-EVIDENCE; PEOPLE; SCRUM; STATE
AB Context: There continues to be concern that research is not addressing the challenges that practice faces. For the benefit of academia and industry, researchers need to be aware of practitioners' challenges and their context so that relevant and applicable research is undertaken.
   Objective: This paper investigates two research questions: what challenges do agile, practitioners face? and, how do practitioner challenges manifest themselves in an organisational setting? It aims to map the practitioner challenge landscape, explore challenge characteristics, compare findings with previous literature and identify implications for research that is relevant to practice.
   Method: A combination of methods was used: elicitation of practitioner challenges collected using a Challenge Wall at a series of practitioner events; organisational case study using interviews, document analysis and observation; and online survey. Findings were then compared to previous publications.
   Results: Challenges collected from the Challenge Wall were grouped under 27 subthemes and seven themes: claims and limitations, organisation, sustainability, culture, teams, scale, and value. Investigating one challenge in the case study uncovered a set of new challenges, which were inter-related. Over 50% of survey respondents experienced challenges highlighted in the case study.
   Conclusion: The landscape of agile practitioner challenges is complex and intertwined. Some challenges, such as doing agile in a non-agile environment, are multi-dimensional, affect many aspects of practice, and may be experienced simultaneously as business, organisational, social and adaptation problems. Some challenges, such as understanding cultural change or measuring agile value, persist and are hard to address, while others, such as adoption, change focus over time. Some challenges, such as governance and contracts, are under-researched, While others, such as business and IT transformation, have been researched but findings" have not had the expected impact. Researchers wishing to address practitioner challenges need to treat them in context rather than in isolation and improve knowledge transfer. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gregory, Peggy; Taylor, Katie] Univ Cent Lancashire, Preston PR1 2HE, Lancs, England.
   [Barroca, Leonor; Sharp, Helen; Deshpande, Advait] Open Univ, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
C3 University of Central Lancashire; Open University - UK
RP Gregory, P (corresponding author), Univ Cent Lancashire, Preston PR1 2HE, Lancs, England.
EM ajgregory@uclan.ac.uk; leonor.barroca@open.ac.uk;
   helen.sharp@open.ac.uk; advait.deshpande@open.ac.uk;
   kjtaylor@uclan.ac.uk
RI Harrison, Dylan/AFP-8142-2022
OI Sharp, Helen/0000-0003-4376-1734; Deshpande, Advait/0000-0003-0540-1949;
   Barroca, Leonor/0000-0002-6054-5366; Gregory, Peggy/0000-0001-7891-6666
FU Dynamic Systems Development Method (DSDM) Consortium; Open University;
   University of Central Lancashire
FX We would like to thank the conference attendees, survey respondents, our
   collaborators at BigBank, and our funders: the Dynamic Systems
   Development Method (DSDM) Consortium, the Open University and the
   University of Central Lancashire.
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   Alzoubi Y. I., 2014, PACIS14
   [Anonymous], 1999, SOFT SYSTEMS METHODO
   [Anonymous], 2005, Communications of the ACM
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Barroca L., 2015, INT J SYST ASSURANCE
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brousseau J., 2004, CUTTER IT J CUTTER C, P25
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   de O Luna Alexandre J. H., 2014, International Journal of Computer Science & Information Technology, V6, P121, DOI 10.5121/ijcsit.2014.6510
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2008, AGILE 2008, PROCEEDINGS, P83, DOI 10.1109/Agile.2008.50
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dwan K, 2008, PLOS ONE, V3, DOI 10.1371/journal.pone.0003081
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eckstein J., 2004, Agile Software Development in Large . Diving into the Deep
   Ferreira J., 2011, THESIS
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Gandomani Taghi Javdanm, 2013, Journal of Computer Science, V9, P620, DOI 10.3844/jcssp.2013.620.625
   Gregory P, 2015, LECT NOTES BUS INF P, V212, P64, DOI 10.1007/978-3-319-18612-2_6
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Holtzblatt K., 1997, CONTEXTUAL DESIGN DE
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Janes A. A., 2012, INT S NEW ID NEW PAR, P215
   KAST FE, 1972, ACAD MANAGE J, V15, P447, DOI 10.5465/255141
   Laanti M., 2013, Communications in Computer and Information Science, V364, P247, DOI DOI 10.1007/978-3-642-39179-8_22
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Lane DC, 1998, EUR J OPER RES, V107, P214, DOI 10.1016/S0377-2217(97)00205-1
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Lyytinen K, 2006, EUR J INFORM SYST, V15, P183, DOI 10.1057/palgrave.ejis.3000604
   McAvoy J., 2010, INFORM SYSTEMS DEV C
   Meso P, 2006, INFORM SYST MANAGE, V23, P19, DOI 10.1201/1078.10580530/46108.23.3.20060601/93704.3
   Moe N. B., 2008, 19 AUSTR C SOFTW ENG
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Papatheocharous E, 2014, J SOFTW-EVOL PROC, V26, P855, DOI 10.1002/smr.1664
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shenton K., 2004, Education for Information, V22, P63, DOI [DOI 10.3233/EFI2004-22201, DOI 10.3233/EFI-2004-22201]
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Svejvig P, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P171, DOI 10.1007/978-3-642-12442-6_12
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
NR 46
TC 63
Z9 78
U1 2
U2 94
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 92
EP 104
DI 10.1016/j.infsof.2016.04.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Parsons, D
   Susnjak, T
   Mathrani, A
AF Parsons, David
   Susnjak, Teo
   Mathrani, Anuradha
TI Design from detail: Analyzing data from a global day of coderetreat
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global day of coderetreat; Survey; Simple design; Test driven
   development; Legacy coderetreat
ID SOFTWARE DEVELOPERS; GAME
AB Context: Coderetreats are reflective communities of practice, where participants congregate informally to apply their coding abilities to a clearly defined problem setting with the aim of developing their software design skills. One of these events is the global day of coderetreat (GDCR) involving more than two thousand software developers worldwide.
   Objective: The GDCR provided an opportunity to explore the ways that the coderetreat activity is perceived by its participants as a medium for reflective practice, and to suggest ways that we can enhance the design of coderetreats for improving both the experience and learning outcomes.
   Method: We conducted both quantitative and qualitative surveys from a number of participants in the GDCR to understand how software developers hone their craft in the context of a coderetreat.
   Results: Our study indicates that future coderetreats, particularly those that are likely to attract less experienced developers, should consider providing more structural scaffolding to the initial processes of test driven development.
   Conclusion: We believe that all coderetreats should more explicitly encourage practice and reflection on the four elements of simple design. We suggest a more sustained approach throughout the coderetreat with provision of more structural scaffolding. Accordingly, we have derived a set of recommended practices to make the coderetreat more effective for less experienced developers. (C) 2016 Published by Elsevier B.V.
C1 [Parsons, David] Unitec, Mind Lab, 69 Carlton Gore Rd, Auckland 1023, New Zealand.
   [Susnjak, Teo; Mathrani, Anuradha] Massey Univ, Sch Engn & Adv Technol, North Shore Mail Ctr, Private Bag 102904, Auckland 0745, New Zealand.
C3 Unitec NZ; Massey University
RP Mathrani, A (corresponding author), Massey Univ, Sch Engn & Adv Technol, North Shore Mail Ctr, Private Bag 102904, Auckland 0745, New Zealand.
EM david@themindlab.com; T.Susnjak@massey.ac.nz; A.S.Mathrani@massey.ac.nz
RI Parsons, David/AAI-6071-2021; Mathrani, Anuradha/R-7903-2018
OI Parsons, David/0000-0002-9815-036X; Mathrani,
   Anuradha/0000-0002-9124-2536; Susnjak, Teo/0000-0001-9416-1435
CR Auerbach CF, 2003, Qualitative Data: An Introduction to Coding and Analysis
   Begel A., 2008, P 4 INT WORKSH COMP, P3
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Bolboaca A., 2014, LEGACY CODERETREAT
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Estácio BJD, 2015, INFORM SOFTWARE TECH, V63, P1, DOI 10.1016/j.infsof.2015.02.011
   Dybå T, 2014, IEEE SOFTWARE, V31, P32, DOI 10.1109/MS.2014.97
   Edwards R.L., 2010, ACM INROADS, V1, P48
   FALKNER K, 2013, P LEARN TEACH COMP E, P31, DOI DOI 10.1109/LATICE.2013.23
   Fisher J., 2003, EXPERIENCE LEVELS PR
   GARDNER M, 1970, SCI AM, V223, P120, DOI 10.1038/scientificamerican1070-120
   Garvin J., 2013, DR DOBBS J
   Graziotin D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P123, DOI 10.1109/CHASE.2015.23
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   GRISSOM RJ, 1994, J APPL PSYCHOL, V79, P314, DOI 10.1037/0021-9010.79.2.314
   Haines Corey, 2014, UNDERSTANDING 4 RULE
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lindell R, 2014, PERS UBIQUIT COMPUT, V18, P613, DOI 10.1007/s00779-013-0687-6
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McDowell C., 2002, SIGCSE Bulletin, V34, P38, DOI 10.1145/563517.563353
   McGregor J., 2006, J OBJ TECHNOL, V5, P22
   Parsons D, 2014, IEEE SOFTWARE, V31, P58, DOI 10.1109/MS.2014.25
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   Sonmez J., 2012, DZONE
   Taylor P. R., 2003, Australian Journal of Information Systems, P14
   Thomas D, 2010, J OBJECT TECHNOL, V9, P23, DOI 10.5381/jot.2010.9.2.c3
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
NR 30
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 39
EP 55
DI 10.1016/j.infsof.2016.03.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100004
DA 2024-07-18
ER

PT J
AU Barcelo-Valenzuela, M
   Carrillo-Villafaña, PS
   Perez-Soltero, A
   Sanchez-Schmitz, G
AF Barcelo-Valenzuela, Mario
   Shihemy Carrillo-Villafana, Patricia
   Perez-Soltero, Alonso
   Sanchez-Schmitz, Gerardo
TI A framework to acquire explicit knowledge stored on different versions
   of software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Explicit knowledge; Framework; Stored knowledge; SME; Knowledge transfer
ID TACIT KNOWLEDGE; CONCEPTUAL-FRAMEWORK; MANAGEMENT; PERFORMANCE;
   EVOLUTION; TRUST
AB Context: In organizations, especially small and medium ones (SME's), explicit knowledge is stored in different sources of hardware or software. These sources have become obsolete due to constant technological innovation and the growing obsolescence of hardware, and have made the knowledge they contain unreachable. These organizations are forced to seek alternatives that allow them to use the knowledge they already possess, but are unable to exploit.
   Objective: To present and execute a framework for the acquisition, classification and dissemination of explicit knowledge among the organization for those who may use that knowledge in their daily activities.
   Method: A framework is developed to acquire the explicit knowledge from different sources and versions of software. Its efficiency has been verified through its' application in a pharmaceutical company.
   Result: The knowledge has been transferred from an unreachable place so that it can be exploited by the organization. Access control has been added for increasing the level of security where the knowledge is stored. In the implementation, the framework was tested with a general application presenting very favorable results.
   Conclusions: In general, the effectiveness of the framework was tested, showing that knowledge recovery from different versions of software is possible. In that way, the problem observed on SME's can be solved in an efficient and replicable form. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Barcelo-Valenzuela, Mario; Shihemy Carrillo-Villafana, Patricia; Perez-Soltero, Alonso; Sanchez-Schmitz, Gerardo] Univ Sonora, Hermosillo 83000, Sonora, Mexico.
C3 Universidad de Sonora
RP Barcelo-Valenzuela, M (corresponding author), Univ Sonora, Blvd Luis Encinas & Rosales, Hermosillo 83000, Sonora, Mexico.
EM mbarcelo@industrial.uson.mx; shihemy@gmail.com;
   aperez@industrial.uson.mx; aperez@industrial.uson.mx
RI Perez-Soltero, Alonso/N-4654-2019; Perez-Soltero, Alonso/C-5572-2008;
   Barceló-Valenzuela, Mario/C-9689-2015; Barcelo-Valenzuela,
   Mario/ABA-5910-2020
OI Perez-Soltero, Alonso/0000-0002-3175-6703; Barcelo-Valenzuela,
   Mario/0000-0002-3560-087X; Sanchez-Schmitz, Gerardo/0000-0002-9681-9736
CR Al-Qdah MS, 2013, PROC TECH, V11, P1188, DOI 10.1016/j.protcy.2013.12.312
   Anand A., 2011, INT J ENG SCI TECHNO, V3, P926
   Anand G, 2010, J OPER MANAG, V28, P303, DOI 10.1016/j.jom.2009.10.003
   [Anonymous], SYSTEMICA
   [Anonymous], KEY ENABLERS IMPLEME
   [Anonymous], THESIS
   [Anonymous], J TECHNOL MANAG INNO
   [Anonymous], INT J INNOV MANAG TE
   [Anonymous], NEW KNOWLEDGE MANAGE
   Bagnoli C., 2012, J. Manag. Gov, V16, P1
   Beydoun G, 2013, INFORM SOFTWARE TECH, V55, P673, DOI 10.1016/j.infsof.2012.10.007
   Chow WS, 2008, INFORM MANAGE-AMSTER, V45, P458, DOI 10.1016/j.im.2008.06.007
   Dalkir K., 2011, KNOWLEDGE MANAGEMENT
   do Rosario CR, 2015, EXPERT SYST APPL, V42, P1613, DOI 10.1016/j.eswa.2014.09.023
   El-Diraby TE, 2006, AUTOMAT CONSTR, V15, P504, DOI 10.1016/j.autcon.2005.07.005
   Giuffrida R, 2015, INFORM SOFTWARE TECH, V63, P11, DOI 10.1016/j.infsof.2015.02.013
   Hola B, 2014, PROCEDIA ENGINEER, V85, P231, DOI 10.1016/j.proeng.2014.10.548
   Krishnaveni R.R., 2012, IUP Journal of Knowledge Management, V10, P26
   Larkin R., 2013, Employment Relations Record, V13, P32
   Lehman MM, 2003, INFORM PROCESS LETT, V88, P33, DOI 10.1016/S0020-0190(03)00382-X
   Liu NC, 2011, INT J HUM RESOUR MAN, V22, P981, DOI 10.1080/09585192.2011.555138
   Marsan J, 2012, INFORM SOFTWARE TECH, V54, P1308, DOI 10.1016/j.infsof.2012.07.001
   Martín-de-Castro G, 2013, UNIVERSIA BUS REV, P126
   Mens T, 2010, IEEE SOFTWARE, V27, P22, DOI 10.1109/MS.2010.100
   Mitri M, 2003, COMPUT EDUC, V41, P173, DOI 10.1016/S0360-1315(03)00034-4
   Olander H, 2011, INT J INNOV MANAG, V15, P593, DOI 10.1142/S1363919611003453
   Patil SK, 2014, EXPERT SYST APPL, V41, P679, DOI 10.1016/j.eswa.2013.07.093
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Renzl B, 2008, OMEGA-INT J MANAGE S, V36, P206, DOI 10.1016/j.omega.2006.06.005
   Rodrigues J, 2014, PROC TECH, V16, P206, DOI 10.1016/j.protcy.2014.10.085
   Rodríguez-Elias OM, 2008, INFORM SOFTWARE TECH, V50, P481, DOI 10.1016/j.infsof.2007.07.002
   Ryan S, 2013, INFORM SOFTWARE TECH, V55, P1614, DOI 10.1016/j.infsof.2013.02.013
   Sainio H., 2007, A Dynamic Model for Knowledge Transfer and Alliance Learning in Cross-border Strategic Alliances of Software Companies
   Wang S, 2010, HUM RESOUR MANAGE R, V20, P115, DOI 10.1016/j.hrmr.2009.10.001
   Workman M, 2014, COMPUT HUM BEHAV, V31, P111, DOI 10.1016/j.chb.2013.10.008
   Xiao L, 2009, INFORM SOFTWARE TECH, V51, P109, DOI 10.1016/j.infsof.2008.02.002
   Yang CW, 2010, INT J INFORM MANAGE, V30, P231, DOI 10.1016/j.ijinfomgt.2009.08.005
   Yang SC, 2009, INT J INFORM MANAGE, V29, P210, DOI 10.1016/j.ijinfomgt.2008.09.002
   Yuan Y., 2012, International Journal of Business Information, V7, P205
   Zhao YS, 2012, INT J INNOV MANAG, V16, DOI 10.1142/S1363919612003782
NR 40
TC 6
Z9 8
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 40
EP 48
DI 10.1016/j.infsof.2015.09.007
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600004
DA 2024-07-18
ER

PT J
AU Bin Ali, N
   Petersen, K
   de França, BBN
AF Bin Ali, Nauman
   Petersen, Kai
   Nicolau de Franca, Breno Bernard
TI Evaluation of simulation-assisted value stream mapping for software
   product development: Two industrial cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study research; Value stream mapping; Lean software development;
   Software process simulation modeling; System dynamics
ID DESIGN; SYSTEM; UML; MAP
AB Context: Value stream mapping (VSM) as a tool for lean development has led to significant improvements in different industries. In a few studies, it has been successfully applied in a software engineering context. However, some shortcomings have been observed in particular failing to capture the dynamic nature of the software process to evaluate improvements i.e. such improvements and target values are based on idealistic situations.
   Objective: To overcome the shortcomings of VSM by combining it with software process simulation modeling, and to provide reflections on the process of conducting VSM with simulation.
   Method: Using case study research, VSM was used for two products at Ericsson AB, Sweden. Ten workshops were conducted in this regard. Simulation in this study was used as a tool to support discussions instead of as a prediction tool. The results have been evaluated from the perspective of the participating practitioners, an external observer, and reflections of the researchers conducting the simulation that was elicited by the external observer.
   Results: Significant constraints hindering the product development from reaching the stated improvement goals for shorter lead time were identified. The use of simulation was particularly helpful in having more insightful discussions and to challenge assumptions about the likely impact of improvements. However, simulation results alone were found insufficient to emphasize the importance of reducing waiting times and variations in the process.
   Conclusion: The framework to assist VSM with simulation presented in this study was successfully applied in two cases. The involvement of various stakeholders, consensus building steps, emphasis on flow (through waiting time and variance analysis) and the use of simulation proposed in the framework led to realistic improvements with a high likelihood of implementation. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Bin Ali, Nauman; Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Nicolau de Franca, Breno Bernard] Univ Fed Rio de Janeiro, ESE Grp, PESC COPPE, BR-68511 Rio De Janeiro, Brazil.
C3 Blekinge Institute Technology; Universidade Federal do Rio de Janeiro
RP Bin Ali, N (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM nauman.ali@bth.se; kai.petersen@bth.se; bfranca@cos.ufrj.br
RI Ali, Nauman bin/J-4293-2015; de França, Breno B N/D-8754-2017; de
   França, Breno Bernard Nicolau/AAB-4730-2019
OI Ali, Nauman bin/0000-0001-7266-5632; de França, Breno Bernard
   Nicolau/0000-0002-4531-1473; Petersen, Kai/0000-0002-1532-8223
FU ELLIIT, a Strategic Area within IT and Mobile Communications; Swedish
   Government
FX The authors would like to thank Kennet Kjellsson from Ericsson AB,
   Sweden who facilitated this work. We are also grateful to all the
   practitioners for their participation and feedback. We are also thankful
   to Claes Wohlin for his valuable feedback that has significantly
   improved the paper. This work has been supported by ELLIIT, a Strategic
   Area within IT and Mobile Communications, funded by the Swedish
   Government.
CR Abdulmalek FA, 2007, INT J PROD ECON, V107, P223, DOI 10.1016/j.ijpe.2006.09.009
   Agyapong-Kodua K, 2009, INT J COMPUT INTEG M, V22, P411, DOI 10.1080/09511920802527574
   Al-Emran A, 2010, INFORM SOFTWARE TECH, V52, P446, DOI 10.1016/j.infsof.2009.11.003
   Al-Khafaji Soroor K. H., 2012, Proceedings of the 3rd 2012 International Conference on Industrial Engineering and Operations Management, P271
   Ali N.B., 2014, SUPPORTING INFORM SI
   [Anonymous], 2005, Product Development Value Stream Mapping (PDVSM) Manual (Issue September)
   [Anonymous], 2010, SZCZUPLE ROZWIAZANIA
   Balci O, 2012, SIMUL-T SOC MOD SIM, V88, P870, DOI 10.1177/0037549712438469
   Bevilacqua M, 2008, PROJ MANAG J, V39, P110, DOI 10.1002/pmj.20069
   BHAGAT A, 2009, P SOC HLTH SYST C EX
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Bin Ali N, 2012, INT SYMP EMP SOFTWAR, P211, DOI 10.1145/2372251.2372290
   Bin Ali N, 2012, EUROMICRO CONF PROC, P327, DOI 10.1109/SEAA.2012.69
   Coppini NL, 2011, IN C IND ENG ENG MAN, P575, DOI 10.1109/IEEM.2011.6117982
   Dotoli M., 2012, 2012 IEEE International Conference on Automation Science and Engineering (CASE 2012), P668, DOI 10.1109/CoASE.2012.6386328
   Esfandyari Alireza, 2011, International Journal of Industrial and Systems Engineering, V8, P230, DOI 10.1504/IJISE.2011.041371
   Gahagan S.M., 2007, IIIE Annual Conference. Proceedings, P712
   Ghosh J, 2010, IEEE T ENG MANAGE, V57, P270, DOI 10.1109/TEM.2009.2023138
   Gillenson Mark L., 2011, Journal of Information Technology Management, V22, P8
   Gopakumar B, 2008, 2008 WINTER SIMULATION CONFERENCE, VOLS 1-5, P2750, DOI 10.1109/WSC.2008.4736393
   Gurumurthy A, 2011, J MANUF TECHNOL MANA, V22, P444, DOI 10.1108/17410381111126409
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Hamad W.A., 2012, P 1 INT WORKSH INN S, P149
   Harjumaa L, 2008, LECT NOTES COMPUT SC, V5089, P230, DOI 10.1007/978-3-540-69566-0_20
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Houston D., 2006, Software Process Improvement and Practice, V11, P361, DOI 10.1002/spip.283
   Hsueh NL, 2008, INFORM SOFTWARE TECH, V50, P897, DOI 10.1016/j.infsof.2007.10.015
   Ince O., 2008, P 38 INT C COMP IND, P791
   Jensen JB, 2013, INTERFACES, V43, P325, DOI 10.1287/inte.2013.0680
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Khurum M, 2014, J SOFTW-EVOL PROC, V26, P1074, DOI 10.1002/smr.1647
   Lian YH, 2007, INT J PROD RES, V45, P3037, DOI 10.1080/00207540600791590
   Lu JC, 2011, INT J COMPUT INTEG M, V24, P211, DOI 10.1080/0951192X.2010.551283
   Mahfouz A, 2013, WINT SIMUL C PROC, P3440, DOI 10.1109/WSC.2013.6721707
   McDonald T., 2002, INT J LOGIST-RES APP, V5, P213, DOI [https://doi.org/10.1080/13675560210148696, DOI 10.1080/13675560210148696]
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Nicolau de Franca Breno Bernard, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P156, DOI 10.1049/ic.2012.0019
   OLSEN NC, 1993, IEEE SOFTWARE, V10, P29, DOI 10.1109/52.232394
   Paikari E., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P13, DOI 10.1109/ICSSP.2012.6225958
   Paju M, 2010, WINT SIMUL C PROC, P3411, DOI 10.1109/WSC.2010.5679031
   Pepe C, 2011, INT CONF ENG DES, V1, P417
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2014, INFORM SOFTWARE TECH, V56, P1403, DOI 10.1016/j.infsof.2014.05.004
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petersen K, 2009, LECT NOTES BUS INF, V32, P386
   Petre M, 2014, SOFTW SYST MODEL, V13, P1225, DOI 10.1007/s10270-014-0430-4
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Rainer A., 2005, REBSE'05: Proceedings of the 2005 Workshop on Realising Evidence-Based Software Engineering, V30, P1, DOI [10.1145/1083174, DOI 10.1145/1083174]
   Ramakrishnan S., 2009, P 30 ANN NAT C AM SO, P539
   Robson C., 2002, Real word research
   Rohana A., 2013, Global Engineers and Technologists Review, V3, P1
   Rother M., 1999, Lean Enterprise Institute
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shararah M.A., 2013, Industrial Engineer, V45, P46
   Shararah MA, 2011, LECT NOTES ENG COMP, P755
   Sjoberg DIK, 2012, IEEE SOFTWARE, V29, P47, DOI 10.1109/MS.2012.110
   Solding P, 2009, WINT SIMUL C PROC, P2172
   Swank CK, 2003, HARVARD BUS REV, V81, P123
   Travassos G.H., 2013, CLEI ELECT J, V16, P8
   Vinodh S, 2013, J ENG DES TECHNOL, V11, P129, DOI 10.1108/JEDT-01-2010-0007
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Williford J, 1999, J SYST SOFTWARE, V46, P203, DOI 10.1016/S0164-1212(99)00013-8
   Xia W, 2013, J IND ENG MANAG-JIEM, V6, P456, DOI 10.3926/jiem.532
   Xie YK, 2012, BUS PROCESS MANAG J, V18, P585, DOI 10.1108/14637151211253747
   Yang Q, 2011, 2011 INTERNATIONAL CONFERENCE ON INSTRUMENTATION, MEASUREMENT, CIRCUITS AND SYSTEMS (ICIMCS 2011), VOL 3: COMPUTER-AIDED DESIGN, MANUFACTURING AND MANAGEMENT, P57
   Yang Qing, 2010, Industrial Engineering and Management, V15, P51
   [No title captured]
NR 71
TC 23
Z9 24
U1 1
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 45
EP 61
DI 10.1016/j.infsof.2015.08.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT8OP
UT WOS:000363076200004
DA 2024-07-18
ER

PT J
AU Galindo, JA
   Dhungana, D
   Rabiser, R
   Benavides, D
   Botterweck, G
   Grünbacher, P
AF Galindo, Jose A.
   Dhungana, Deepak
   Rabiser, Rick
   Benavides, David
   Botterweck, Goetz
   Grunbacher, Paul
TI Supporting distributed product configuration by integrating
   heterogeneous variability modeling approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Product configuration; Automated analysis
AB Context: In industrial settings products are developed by more than one organization. Software vendors and suppliers commonly typically maintain their own product lines, which contribute to a larger (multi) product line or software ecosystem. It is unrealistic to assume that the participating organizations will agree on using a specific variability modeling technique-they will rather use different approaches and tools to manage the variability of their systems.
   Objective: We aim to support product configuration in software ecosystems based on several variability models with different semantics that have been created using different notations.
   Method: We present an integrative approach that provides a unified perspective to users configuring products in multi product line environments, regardless of the different modeling methods and tools used internally. We also present a technical infrastructure and a prototype implementation based on web services.
   Results: We show the feasibility of the approach and its implementation by using it with the three most widespread types of variability modeling approaches in the product line community, i.e., feature-based, OVM-style, and decision-oriented modeling. To demonstrate the feasibility and flexibility of our approach, we present an example derived from industrial experience in enterprise resource planning. We further applied the approach to support the configuration of privacy settings in the Android ecosystem based on multiple variability models. We also evaluated the performance of different model enactment strategies used in our approach.
   Conclusions: Tools and techniques allowing stakeholders to handle variability in a uniform manner can considerably foster the initiation and growth of software ecosystems from the perspective of software reuse and configuration. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Galindo, Jose A.; Benavides, David] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Dhungana, Deepak] Siemens AG Osterreich, Corp Technol, Vienna, Austria.
   [Botterweck, Goetz] Univ Limerick, Lero The Irish Software Engn Res Ctr, Limerick, Ireland.
   [Rabiser, Rick; Grunbacher, Paul] Johannes Kepler Univ Linz, Christian Doppler Lab MEVSS, A-4040 Linz, Austria.
   [Galindo, Jose A.] INRIA Rennes, Diverse Team, Rennes, France.
C3 University of Sevilla; Siemens AG; University of Limerick; Johannes
   Kepler University Linz; Universite de Rennes
RP Galindo, JA (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM jagalindo@us.es; deepak.dhungana@siemens.com; rick.rabiser@jku.at;
   benavides@us.es; goetz.botterweck@lero.ie; paul.gruenbacher@jku.at
RI Benavides, David/K-2791-2014; Galindo, Jose A/F-7232-2010; Grunbacher,
   Paul/C-2970-2013; Rabiser, Rick/B-8673-2017
OI Benavides, David/0000-0002-8449-3273; Dhungana,
   Deepak/0000-0001-9327-9896; Botterweck, Goetz/0000-0002-5556-1660;
   Galindo, Jose A/0000-0001-9293-9784; Grunbacher,
   Paul/0000-0002-1951-5288; Rabiser, Rick/0000-0003-3862-1112
FU Science Foundation Ireland [03/CE2/I303_1, 10/CE/I1855]; Christian
   Doppler Forschungsgesellschaft (Austria); Siemens VAI Metals
   Technologies; Siemens Corporate Technology; European Commission (FEDER);
   Spanish government [TIN2012-32273]; Andalusian government under Talentia
   program; COPAS project [TIC-1867]
FX This work was supported, in part, by Science Foundation Ireland Grants
   03/CE2/I303_1 and 10/CE/I1855 to Lero; by the Christian Doppler
   Forschungsgesellschaft (Austria), Siemens VAI Metals Technologies, and
   Siemens Corporate Technology; by the European Commission (FEDER), by the
   Spanish government under TAPAS (TIN2012-32273) project and the
   Andalusian government under Talentia program and the COPAS (TIC-1867)
   project. Also, we would like to express special thanks to Dominik
   Seichter for his previous contributions to this research.
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   [Anonymous], P 5 INT WORKSH VAR M
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], 2009, P 42 IEEE ANN HAWAII
   [Anonymous], 2009, P 2009 17 IEEE INT R
   [Anonymous], 2009, P 42 HAW INT C SYST
   Benavides D., 2013, SYSTEMS SOFTWARE VAR, P163
   Benavides D., 2014, 8 INT WORKSH VAR MOD
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2013, 7 INT WORKSH VAR MOD
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Botterweck G., 2009, P 3 INT WORKSH VAR M, V29, P165
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Burns J., 2008, DEV SECURE MOBILE AP
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Clotet R., 2008, 2 INT WORKSH VAR MOD, P43
   Consortium S.P., 1991, SPC91122MC
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2006, COMMUN ACM, V49, P61
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Dhungana D., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P120, DOI 10.1109/SPLC.2011.22
   Dhungana D., 2013, 7 INT WORKSH VAR MOD
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Enck W, 2009, IEEE SECUR PRIV, V7, P50, DOI 10.1109/MSP.2009.26
   Galindo J.A., 2014, 01 ETSII
   Hartmann Herman., 2009, Proceedings of the 13th International Software Product Line Conference, P191
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hubaux A, 2010, LECT NOTES COMPUT SC, V6182, P106, DOI 10.1007/978-3-642-14192-8_12
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Kang Kyo C, 1990, Technical Report
   Lettner D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P52
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   MACKENZIE IS, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P488
   Mendonca M, 2010, SCI COMPUT PROGRAM, V75, P311, DOI 10.1016/j.scico.2009.12.004
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Moser T., 2010, P IEEE C EM TECHN FA, P1, DOI DOI 10.1109/ETFA.2010.5641343
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R., 2012, P 4 INT WORKSH NONF, P2
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Rabiser R, 2007, IEEE INTELL SYST, V22, P85
   Rabiser R, 2012, IEEE INT CONF AUTOM, P110, DOI 10.1145/2351676.2351693
   Rabiser R, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P508, DOI 10.1109/SEAA.2009.13
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Reiser MO, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P149
   Roos-Frantz F., 2011, SOFTW QUAL J, P1
   Roos-Frantz F., 2012, 16 INT SOFTW PROD LI, V2, P250
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schmid K, 2010, LECT NOTES COMPUT SC, V6287, P151, DOI 10.1007/978-3-642-15579-6_11
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Seibel A, 2010, SOFTW SYST MODEL, V9, P493, DOI 10.1007/s10270-009-0146-z
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Turner H., 2012, BUILDING CLOUD BASED
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   Vierhauser M., 2005, 36 INT C SOFTW ENG I, P125
   Wolfinger R, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P21, DOI 10.1109/ICCBSS.2008.30
NR 72
TC 24
Z9 25
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 78
EP 100
DI 10.1016/j.infsof.2015.02.002
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, W
   Yang, Y
   Wang, Q
AF Zhang, Wen
   Yang, Ye
   Wang, Qing
TI Using Bayesian regression and EM algorithm with missing handling for
   software effort prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bayesian regression; EM algorithm; Missing imputation; Software effort
   prediction
ID PROJECT DATA SETS; COST ESTIMATION; TEXT CLASSIFICATION;
   MAXIMUM-LIKELIHOOD; INCOMPLETE DATA; MACHINE; MODELS
AB Context: Although independent imputation techniques are comprehensively studied in software effort prediction, there are few studies on embedded methods in dealing with missing data in software effort prediction.
   Objective: We propose BREM (Bayesian Regression and Expectation Maximization) algorithm for software effort prediction and two embedded strategies to handle missing data.
   Method: The MDT (Missing Data Toleration) strategy ignores the missing data when using BREM for software effort prediction and the MDI (Missing Data Imputation) strategy uses observed data to impute missing data in an iterative manner while elaborating the predictive model.
   Results: Experiments on the ISBSG and CSBSG datasets demonstrate that when there are no missing values in historical dataset, BREM outperforms LR (Linear Regression), BR (Bayesian Regression), SVR (Support Vector Regression) and M5' regression tree in software effort prediction on the condition that the test set is not greater than 30% of the whole historical dataset for ISBSG dataset and 25% of the whole historical dataset for CSBSG dataset. When there are missing values in historical datasets, BREM with the MDT and MDI strategies significantly outperforms those independent imputation techniques, including MI, BMI, CMI, MINI and M5'. Moreover, the MDI strategy provides BREM with more accurate imputation for the missing values than those given by the independent missing imputation techniques on the condition that the level of missing data in training set is not larger than 10% for both ISBSG and CSBSG datasets.
   Conclusion: The experimental results suggest that BREM is promising in software effort prediction. When there are missing values, the MDI strategy is preferred to be embedded with BREM. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Zhang, Wen] Beijing Univ Chem Technol, Sch Econ & Management, Beijing 100029, Peoples R China.
   [Yang, Ye] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.
C3 Beijing University of Chemical Technology; Stevens Institute of
   Technology; Chinese Academy of Sciences; Institute of Software, CAS
RP Zhang, W (corresponding author), Beijing Univ Chem Technol, Sch Econ & Management, Beijing 100029, Peoples R China.
EM zhangwen@mail.buct.edu.cn; ye@itechs.iscas.ac.cn; wq@itechs.iscas.ac.cn
RI wang, qi/ITT-9652-2023; yang, yang/HGT-7999-2022; Yang,
   Ye/GZM-4812-2022; Lang, Ming/HIK-0758-2022
FU National Natural Science Foundation of China [71101138, 61379046,
   91218301, 91318301, 61432001]; Beijing Natural Science Fund [4122087]
FX This research was supported in part by National Natural Science
   Foundation of China under Grant Nos. 71101138, 61379046, 91218301,
   91318301 and 61432001; Beijing Natural Science Fund under Grant No.
   4122087. The authors of the paper would like to appreciate the anonymous
   reviewers for their valuable comments.
CR ANDERSON TW, 1957, J AM STAT ASSOC, V52, P200, DOI 10.2307/2280845
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], THESIS STANFORD U
   [Anonymous], 2007, DATA CLUSTERING THEO
   Arbucle J.L., 1996, ADV STRUCTURAL EQUAT
   Bayes T., 1763, PHILOS T ROY SOC LON, V53, P370
   Boehm BW., 1981, Software Engineering Economics
   Cozman F.G., 2003, P 20 INT C MACHINE L, P99
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Duda R. O., 2001, PATTERN CLASSIFICATI
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Friedman N., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P129
   He M, 2008, LECT NOTES COMPUT SC, V5007, P381
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Khoshgoftaar TM, 2008, SOFTWARE QUAL J, V16, P563, DOI 10.1007/s11219-008-9054-7
   Kocaguneli E., 2014, EMPIRIC SOF IN PRESS
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Lewis D.D., 1997, 3 ANN S DOC AN INF R, P39
   Little RJ, 1987, STAT ANAL MISSING DA
   Minka T., 1998, EXPECTATION MAXIMIZA
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J.R., 1992, P AI 92, P343, DOI DOI 10.1142/9789814536271
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   RUBIN DB, 1976, BIOMETRIKA, V63, P581, DOI 10.2307/2335739
   Rubin DB, 1987, Multiple imputation for survey nonresponse, DOI 10.1002/9780470316696
   Schafer J.L., 1997, ANAL INCOMPLETE MULT, DOI [DOI 10.1201/, DOI 10.1201/9781439821862]
   Schafer JL, 2002, PSYCHOL METHODS, V7, P147, DOI 10.1037//1082-989X.7.2.147
   Seo YS, 2013, INFORM SOFTWARE TECH, V55, P1710, DOI 10.1016/j.infsof.2013.03.007
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   Song QB, 2007, J SYST SOFTWARE, V80, P51, DOI 10.1016/j.jss.2006.05.003
   Song QB, 2008, J SYST SOFTWARE, V81, P2361, DOI 10.1016/j.jss.2008.05.008
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Twala B., 2006, 28th International Conference on Software Engineering Proceedings, P909, DOI 10.1145/1134285.1134449
   Yang Y, 2013, INFORM SOFTWARE TECH, V55, P1496, DOI 10.1016/j.infsof.2013.03.002
   Zhang W., 2011, P 7 INT C PRED MOD S
   Zhang W, 2012, INT J SOFTW ENG KNOW, V22, P185, DOI 10.1142/S0218194012400025
   Zhang W, 2008, KNOWL-BASED SYST, V21, P879, DOI 10.1016/j.knosys.2008.03.044
NR 44
TC 36
Z9 36
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 58
EP 70
DI 10.1016/j.infsof.2014.10.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800004
DA 2024-07-18
ER

PT J
AU Keramati, H
   Mirian-Hosseinabadi, SH
AF Keramati, Hossein
   Mirian-Hosseinabadi, Seyed-Hassan
TI Generating semantically valid test inputs using constrained input
   grammars
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Test input generation; Grammar-basqd software; Test
   coverage criteria
ID AUTOMATED GENERATION; COVERAGE
AB Context: Generating test cases based on software input interface is a black-box testing technique that can be made more effective by using structured input models such as input grammars. Automatically generating grammar-based test inputs may lead to structurally valid but semantically invalid inputs that may be rejected in early semantic error checking phases of a system under test.
   Objective: This paper aims to introduce a method for specifying a grammar-based input model with the model's semantic constraints to be used in the generation of positive test inputs. It is also important that the method can generate effective test suites based on appropriate grammar-based coverage criteria.
   Method: Formal specification of both input structure and input semantics provides the opportunity to use model instantiation techniques to create model instances that satisfy all specified constraints. The input interface of a subject system can be specified using a high-level specification scheme such as attribute grammars, and a transformation function from this scheme to an instantiable formal modeling language can generate the desired model instances.
   Results: We propose a declarative grammar-based input specification method that is based on a variation of attribute grammars and allows the user to specify input constraints in addition to input structure. The model can be instantiated automatically to generate structurally and semantically valid test inputs. The proposed method has the capability to specify test requirements and coverage criteria and use them to generate valid test suites that satisfy test coverage criteria requirements.
   Conclusion: The work presented in this paper provides a black-box test generation method for grammar-based software inputs that can automatically generate criteria-covering test suites. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Keramati, Hossein; Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
EM keramati@ce.sharif.edu; hmirian@sharif.edu
RI Mirian-Hosseinabadi, Seyed-Hassan/AAE-9963-2021
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Coppit D, 2005, IEEE T SOFTWARE ENG, V31, P328, DOI 10.1109/TSE.2005.52
   Coppit David., PROC 20 IEEEACM INT, DOI [10.1145/1101908.1101969, DOI 10.1145/1101908.1101969]
   Duncan A. G., 1981, 5th International Conference on Software Engineering, P170
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Ganov S., 2012, FORMAL METHODS SOFTW, P1
   Guilmette R.F., 1995, TECHNICAL REPORT
   Hai-Feng Guo, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P17, DOI 10.1007/978-3-642-41707-8_2
   Harm J., 2000, Informatica, V24, P355
   Hennessy M., 2006, THESIS NATL U IRELAN
   Hennessy M., 2005, NUIMCSTR200502
   Hennessy M, 2008, EMPIR SOFTW ENG, V13, P343, DOI 10.1007/s10664-008-9067-7
   Hua Qingyi, 1997, Journal of Computer Science and Technology (English Language Edition), V12, P65, DOI 10.1007/BF02943146
   Hughes G., 2008, TAV WEB, P40
   Hughes G, 2008, IEEE T SOFTWARE ENG, V34, P614, DOI 10.1109/TSE.2008.72
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kiezun A., 2009, PROC INT S SOFTWARE, P105
   Kossatchev AS, 2005, PROGRAM COMPUT SOFT+, V31, P10, DOI 10.1007/s11086-005-0002-z
   Kossatchev AS, 2004, PROGRAM COMPUT SOFT+, V30, P218, DOI 10.1023/B:PACS.0000036420.25147.da
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Li H., 2005, P 28 ANN INT COMP SO, P300
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Mernik M., 2004, Informatica, V28, P245
   Montaghami Vajih, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P122, DOI 10.1007/978-3-642-30885-7_9
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Torlak Emina., 2007, KODKOD RELATIONAL MO, P632
   Uzuncaova Engin, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P249, DOI 10.1109/ISSRE.2008.56
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Zelenov S, 2006, LECT NOTES COMPUT SC, V3997, P187
NR 37
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 204
EP 216
DI 10.1016/j.infsof.2014.09.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500013
DA 2024-07-18
ER

PT J
AU Gómez, OS
   Juristo, N
   Vegas, S
AF Gomez, Omar S.
   Juristo, Natalia
   Vegas, Sira
TI Understanding replication of experiments in software engineering: A
   classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Experimental software engineering;
   Experimentation; Replication
ID NEED
AB Context: Replication plays an important role in experimental disciplines. There are still many uncertainties about how to proceed with replications of SE experiments. Should replicators reuse the baseline experiment materials? How much liaison should there be among the original and replicating experimenters, if any? What elements of the experimental configuration can be changed for the experiment to be considered a replication rather than a new experiment?
   Objective: To improve our understanding of SE experiment replication, in this work we propose a classification which is intend to provide experimenters with guidance about what types of replication they can perform.
   Method: The research approach followed is structured according to the following activities: (1) a literature review of experiment replication in SE and in other disciplines, (2) identification of typical elements that compose an experimental configuration, (3) identification of different replications purposes and (4) development of a classification of experiment replications for SE.
   Results: We propose a classification of replications which provides experimenters in SE with guidance about what changes can they make in a replication and, based on these, what verification purposes such a replication can serve. The proposed classification helped to accommodate opposing views within a broader framework, it is capable of accounting for less similar replications to more similar ones regarding the baseline experiment.
   Conclusion: The aim of replication is to verify results, but different types of replication serve special verification purposes and afford different degrees of change. Each replication type helps to discover particular experimental conditions that might influence the results. The proposed classification can be used to identify changes in a replication and, based on these, understand the level of verification. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gomez, Omar S.] Univ Autonoma Yucatan, Fac Matemat, Merida 97119, Yucatan, Mexico.
   [Juristo, Natalia; Vegas, Sira] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
   [Juristo, Natalia] Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
C3 Universidad Autonoma de Yucatan; Universidad Politecnica de Madrid;
   University of Oulu
RP Gómez, OS (corresponding author), Tablaje Cat 13615,Room EA-7 Colonia Chubuma Inn, Merida, Yucatan, Mexico.
EM omar.gomez@uady.mx; natalia@fi.upm.es; svegas@fi.upm.es
RI Vegas, Sira/R-6742-2018; Gómez, Omar S./C-2143-2015
OI Gómez, Omar S./0000-0002-2951-3833
FU Spanish Ministry of Economy and Competitiveness [TIN2011-23216];
   Mexico's National Council of Science and Technology (CONACyT) [206747]
FX This work was supported by research grant TIN2011-23216 of the Spanish
   Ministry of Economy and Competitiveness, and research grant 206747 of
   the Mexico's National Council of Science and Technology (CONACyT).
CR Adams A.T., J APPL SOCIOL, V22
   Almqvist J.P.F., 2006, THESIS LUND U DEP CO
   [Anonymous], 2010, P 1 INT WORKSH REPL
   [Anonymous], 1982, Design and Analysis: A Researcher's Handbook
   [Anonymous], 1992, PSA P BIENN M PHIL S
   [Anonymous], 1976, The design and conduct of quasi-experiments and true experiments in field settings
   BAHR HM, 1983, ANNU REV SOCIOL, V9, P243, DOI 10.1146/annurev.so.09.080183.001331
   BARKER HR, 1972, PERCEPT MOTOR SKILL, V35, P807, DOI 10.2466/pms.1972.35.3.807
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck C T, 1994, Image J Nurs Sch, V26, P191, DOI 10.1111/j.1547-5069.1994.tb00312.x
   Beloff J., 1985, REPEATABILITY PROBLE
   Bissell M, 2013, NATURE, V503, P333, DOI 10.1038/503333a
   BLOMQUIST KB, 1986, RES NURS HEALTH, V9, P193, DOI 10.1002/nur.4770090302
   Brinberg David., 1985, VALIDITY RES PROCESS
   Brooks A., 1996, ISERN9610 U STRATHC
   Brown S.W., 1976, MARKETING 1776 1976
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Christensen L.B., 2001, Experimental Methodology, V8th
   Collins Harry M., 1985, Changing order: Replication and induction in scientific practice
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Finifter B.M., 1972, Sociological Methodology, V4, P112, DOI DOI 10.2307/270731
   FINIFTER BM, 1975, SOC SCI INFORM, V14, P119, DOI 10.1177/053901847501400205
   Fuess S.M., 1996, QUART J BUSINESS ECO
   G. de Investigacion en Ingenieria del Software Empirica (GrISE), 2013, DESCR REP TYP
   Gomez O.S., 2010, 4 INT S EMP SOFTW EN, P71
   HALAS ES, 1961, J COMP PHYSIOL PSYCH, V54, P302, DOI 10.1037/h0045739
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Hendrick C., 1990, REPLICATIONS STRICT
   HUNT K, 1975, PSYCHOL REP, V36, P587, DOI 10.2466/pr0.1975.36.2.587
   Hunter JE, 2001, J CONSUM RES, V28, P149, DOI 10.1086/321953
   Hyman H.H., 1967, USES SOCIOL, P769
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2013, INT S EMP SOFTW ENG
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Kelly C.W., 1979, HUM COMMUN RES, V5, P338, DOI [DOI 10.1111/J.1468-2958.1979.TB00646.X, 10. 1111/j. 1468-2958. 1979. tb00646. x]
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   LASORTE MA, 1972, SOCIOL QUART, V13, P218, DOI 10.1111/j.1533-8525.1972.tb00805.x
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lüdtke R, 2008, COMPLEMENT THER MED, V16, P181, DOI 10.1016/j.ctim.2008.06.003
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   LYKKEN DT, 1968, PSYCHOL BULL, V70, P151, DOI 10.1037/h0026141
   MCCONNELL JAMES V., 1967, P217
   MCCONNELL JV, 1961, WORM RUNNERS DIGEST, V3, P41
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   Mittelstaedt R., 1984, QUART J BUSINESS ECO, V23
   Moonesinghe R, 2007, PLOS MED, V4, P218, DOI 10.1371/journal.pmed.0040028
   Moyer M.W., 2012, SCI AM, V24
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   RAO KR, 1981, J PARAPSYCHOL, V45, P311
   Reid L.N., 1981, Journal of Advertising, V10, P3, DOI [DOI 10.1080/00913367.1981.10672750, 10.1080/00913367.1981, DOI 10.1080/00913367.1981, 10.1080/00913367.1981.10672750]
   ROSENTHAL R, 1990, J SOC BEHAV PERS, V5, P1
   Sargent C.L., 1981, European Journal of Parapsychology, V3, P423
   Schmidt S, 2009, REV GEN PSYCHOL, V13, P90, DOI 10.1037/a0015108
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sidman M., 1960, TACTICTS SCI RES
   Silva F., 2012, EMPIR SOFTW ENG, P1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   THOMPSON R, 1955, J COMP PHYSIOL PSYCH, V48, P65, DOI 10.1037/h0041147
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Tsang EWK, 1999, ACAD MANAGE REV, V24, P759, DOI 10.2307/259353
NR 68
TC 85
Z9 90
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 1033
EP 1048
DI 10.1016/j.infsof.2014.04.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Tessem, B
AF Tessem, Bjornar
TI Individual empowerment of agile and non-agile software developers in
   small teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Agile methods; Empowerment
ID DECISION-MAKING; PSYCHOLOGICAL EMPOWERMENT; SYSTEMS; MODEL;
   CONSEQUENCES; SATISFACTION; PERFORMANCE; ANTECEDENTS; MANAGEMENT
AB Context: Empowerment of employees at work has been known to have a positive impact on job motivation and satisfaction. Software development is a field of knowledge work wherein one should also expect to see these effects, and the idea of empowerment has become particularly visible in agile methodologies, in which proponents emphasise team empowerment and individual control of the work activities as a central concern.
   Objective: This research aims to get a better understanding of how empowerment is enabled in software development teams, both agile and non-agile, to identify differences in empowering practices and levels of individual empowerment.
   Method: Twenty-five interviews with agile and non-agile developers from Norway and Canada on decision making and empowerment are analysed. The analysis is conducted using a conceptual model with categories for involvement, structural empowerment and psychological empowerment.
   Results: Both kinds of development organisations are highly empowered and they are similar in most aspects relating to empowerment. However, there is a distinction in the sense that agile developers have more possibilities to select work tasks and influence the priorities in a development project due to team empowerment. Agile developers seem to put a higher emphasis on the value of information in decision making, and have more prescribed activities to enable low-cost information flow. More power is obtained through the achievement of managing roles for the non-agile developers who show interest and are rich in initiatives.
   Conclusion: Agile developers have a higher sense of being able to impact the organisation than non-agile developers and have information channels that is significantly differently from non-agile developers. For non-agile teams, higher empowerment can be obtained by systematically applying low-cost participative decision making practices in the manager-developer relation and among peer developers. For agile teams, it is essential to more rigorously follow the empowering practices already established. (C) 2014 Elsevier B.V. All rights reserved.
C1 Univ Bergen, Dept Informat Sci & Media Studies, N-5020 Bergen, Norway.
C3 University of Bergen
RP Tessem, B (corresponding author), Univ Bergen, Dept Informat Sci & Media Studies, POB 7802, N-5020 Bergen, Norway.
EM bjornar.tessem@uib.no
CR Alenljung B, 2008, REQUIR ENG, V13, P257, DOI 10.1007/s00766-008-0068-2
   [Anonymous], 2002, Agile software development
   [Anonymous], 2004, XP Ser
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Birks M., 2011, Grounded Theory: A Practical Guide
   BOWEN DE, 1995, SLOAN MANAGE REV, V36, P73
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Conradi R., 2006, SOFTWARE PROCESS IMP
   CORDERY JL, 1991, ACAD MANAGE J, V34, P464, DOI 10.5465/256452
   Cua KO, 2001, J OPER MANAG, V19, P675, DOI 10.1016/S0272-6963(01)00066-3
   Dewettinck K., 2003, PSYCHOL EMPOWERMENT, P26
   Dewettinck K, 2011, PERS REV, V40, P284, DOI 10.1108/00483481111118621
   Drury M., 2012, J SYST SOFTW
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Fernandez S, 2011, AM REV PUBLIC ADM, V41, P23, DOI 10.1177/0275074009355943
   Frese M, 1999, J ORGAN BEHAV, V20, P1139, DOI 10.1002/(SICI)1099-1379(199912)20:7<1139::AID-JOB946>3.0.CO;2-I
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hackman J.R., 1986, PRODUCTIVITY CHANGE
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Hutchins D., 1985, Quality circles handbook
   Kirkman BL, 1999, ACAD MANAGE J, V42, P58, DOI 10.5465/256874
   Larman Craig., 2003, AGILE ITERATIVE DEV
   Lawler E.E., 1986, High-involvement management
   Lee G, 2010, MIS QUART, V34, P87
   Lui KM, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P143, DOI 10.1007/978-3-642-12575-1_7
   MACDUFFIE JP, 1995, IND LABOR RELAT REV, V48, P197, DOI 10.2307/2524483
   Marsden D., 2010, The Oxford handbook of participation in organizations, P131
   Martin A, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P111, DOI 10.1007/978-3-642-12575-1_6
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   Mathieu JE, 2006, J APPL PSYCHOL, V91, P97, DOI 10.1037/0021-9010.91.1.97
   Maynard MT, 2012, J MANAGE, V38, P1231, DOI 10.1177/0149206312438773
   McAvoy J, 2009, EUR J INFORM SYST, V18, P372, DOI 10.1057/ejis.2009.22
   McHugh O., 2011, J INFORM SYST, V23, P59
   Melnik G, 2006, LECT NOTES COMPUT SC, V4044, P32
   Mills PK, 2003, ACAD MANAGE REV, V28, P143
   Mobley W.H., 1982, Employee turnover: Causes, consequences, and control
   Moe N. B., 2006, Software Process Improvement and Practice, V11, P21, DOI 10.1002/spip.250
   Moe N.B., 2008, SOFTW ENG ADV APPL S, P1089
   Moe N.B., 2011, IMPROVING PROCESSES
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Poppendieck Mary., 2003, LEAN SOFTWARE DEV
   Quinn RE, 1997, ORGAN DYN, V26, P37, DOI 10.1016/S0090-2616(97)90004-8
   Riordan CM, 2005, HUM RESOUR MANAGE-US, V44, P471, DOI 10.1002/hrm.20085
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seibert SE, 2011, J APPL PSYCHOL, V96, P981, DOI 10.1037/a0022676
   SHREDNICK HR, 1992, MIS QUART, V16, P491, DOI 10.2307/249733
   Spreitzer GM, 1997, J MANAGE, V23, P679, DOI 10.1177/014920639702300504
   SPREITZER GM, 1995, ACAD MANAGE J, V38, P1442, DOI 10.5465/256865
   Stolovitch H.D., 2000, PERFORMANCE IMPROVEM, V38, P7
   Tessem J, 2007, LECT NOTES COMPUT SC, V4536, P54
   Tessem B, 2011, LECT NOTES BUS INF P, V77, P253
   THOMAS KW, 1990, ACAD MANAGE REV, V15, P666, DOI 10.2307/258687
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   White Baker E, 2011, INFORM SYST J, V21, P155, DOI 10.1111/j.1365-2575.2010.00352.x
   Wiegers K.E., 2001, Peer Reviews in Software: A Practical Guide
   Wilkinson A., 2010, The Oxford Handbook of Participation in Organizations
   Wilkinson Adrian., 2010, OXFORD HDB PARTICIPA
   Williams Laurie A., 2003, Pair programming illuminated
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zimmerman MA, 1995, AM J COMMUN PSYCHOL, V23, P581, DOI 10.1007/BF02506983
NR 62
TC 35
Z9 43
U1 2
U2 88
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 873
EP 889
DI 10.1016/j.infsof.2014.02.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AI9OL
UT WOS:000337261800004
DA 2024-07-18
ER

PT J
AU Ding, W
   Liang, P
   Tang, A
   van Vliet, H
AF Ding, Wei
   Liang, Peng
   Tang, Antony
   van Vliet, Hans
TI Knowledge-based approaches in software documentation: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Knowledge-based approach; Software documentation; Systematic literature
   review; Knowledge activity; Software architecture design
ID ARCHITECTURE; MANAGEMENT
AB Context: Software documents are core artifacts produced and consumed in documentation activity in the software lifecycle. Meanwhile, knowledge-based approaches have been extensively used in software development for decades, however, the software engineering community lacks a comprehensive understanding on how knowledge-based approaches are used in software documentation, especially documentation of software architecture design.
   Objective: The objective of this work is to explore how knowledge-based approaches are employed in software documentation, their influences to the quality of software documentation, and the costs and benefits of using these approaches.
   Method: We use a systematic literature review method to identify the primary studies on knowledge-based approaches in software documentation, following a pre-defined review protocol.
   Results: Sixty studies are finally selected, in which twelve quality attributes of software documents, four cost categories, and nine benefit categories of using knowledge-based approaches in software documentation are identified. Architecture understanding is the top benefit of using knowledge-based approaches in software documentation. The cost of retrieving information from documents is the major concern when using knowledge-based approaches in software documentation.
   Conclusions: The findings of this review suggest several future research directions that are critical and promising but underexplored in current research and practice: (1) there is a need to use knowledge-based approaches to improve the quality attributes of software documents that receive less attention, especially credibility, conciseness, and unambiguity; (2) using knowledge-based approaches with the knowledge content in software documents which gets less attention in current applications of knowledge-based approaches in software documentation, to further improve the practice of software documentation activity; (3) putting more focus on the application of software documents using the knowledge-based approaches (knowledge reuse, retrieval, reasoning, and sharing) in order to make the most use of software documents; and (4) evaluating the costs and benefits of using knowledge-based approaches in software documentation qualitatively and quantitatively. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Ding, Wei; Liang, Peng] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Peoples R China.
   [Tang, Antony] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Liang, Peng; van Vliet, Hans] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
   [Ding, Wei] China Earthquake Adm, Inst Seismol, Key Lab Earthquake Geodesy, Chengdu, Peoples R China.
C3 Wuhan University; Swinburne University of Technology; Vrije Universiteit
   Amsterdam; China Earthquake Administration
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Peoples R China.
EM liangp@whu.edu.cn
RI peng, liang/HKE-0294-2023; Tang, Antony/C-2459-2009
OI Liang, Peng/0000-0002-2056-5346; Tang, Antony/0000-0002-3574-3977
FU Natural Science Foundation of China (NSFC) [61170025]; KeS-RAD:
   Knowledge-enabled Software Requirements to Architecture Documentation;
   Dutch "Regeling Kenniswerkers" [KWR09164]
FX This work has been partially sponsored by the Natural Science Foundation
   of China (NSFC) under the Grant No. 61170025, KeS-RAD: Knowledge-enabled
   Software Requirements to Architecture Documentation and the Dutch
   "Regeling Kenniswerkers" Project KWR09164, "Stephenson: Architecture
   knowledge sharing practices in software product lines for print
   systems".
CR Alagar VS, 2011, TEXTS COMPUT SCI, P23, DOI 10.1007/978-0-85729-277-3_2
   Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 1998, 8301998 IEEE
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2000, 14712000 IEEE
   [Anonymous], 2011, P 6 INT WORKSHOP SHA
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Barais O., 2008, Software Evolution, P233
   Barker T.T., 2003, WRITING SOFTWARE DOC, V2nd
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Biehl M., 2010, ISRNKTHMMKR1006SE
   BLAIR DC, 1985, COMMUN ACM, V28, P289, DOI 10.1145/3166.3197
   Briand L.C., 2002, P 14 INT C SOFTWARE, P3, DOI DOI 10.1145/568760.568762
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Davis A., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P141, DOI 10.1109/METRIC.1993.263792
   de Boer RC, 2007, LECT NOTES COMPUT SC, V4880, P197
   de Graaf K. A., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P121, DOI 10.1109/WICSA-ECSA.212.20
   DEVANBU P, 1991, COMMUN ACM, V34, P34, DOI 10.1145/103167.103172
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gómez-Pérez A, 2001, INT J INTELL SYST, V16, P391, DOI 10.1002/1098-111X(200103)16:3<391::AID-INT1014>3.0.CO;2-2
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Greenspan S.J., 1986, ACM SIGSOFT SOFTWARE, V11, P34
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   IEEE, 1984, 8301984 IEEE
   IEEE, 1998, 10161998 IEEE
   IEEE Computer Society, 2004, GUID SOFTW ENG BOD K
   ISO, 1991, 900031991 ISO
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Kitchenham B., 2007, EBSE200701 KEEL U U
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P39, DOI 10.1007/978-3-642-02374-3_3
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Liang P., 2009, RUGSEARCH09L02
   Lucki M., 2010, PROC INT C TRANSPARE, P1
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Maiden N, 2012, IEEE SOFTWARE, V29, P16, DOI 10.1109/MS.2012.152
   Mirakhorli M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1126, DOI 10.1145/1985793.1986014
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Nakagawa E. Y., 2010, P 2010 ICSE WORKSH S, P29
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Parnas DL, 2011, FUTURE OF SOFTWARE ENGINEERING, P125, DOI 10.1007/978-3-642-15187-3_8
   Parnas DL, 2009, KNOWL-BASED SYST, V22, P132, DOI 10.1016/j.knosys.2008.11.001
   Peng Liang, 2010, 2010 Third International Workshop on Managing Requirements Knowledge (MARK 2010), P16, DOI 10.1109/MARK.2010.5623812
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Reeve Lawrence., 2005, SAC 05, P1634, DOI DOI 10.1145/1066677.1067049
   Rubin E, 2011, REQUIR ENG, V16, P117, DOI 10.1007/s00766-010-0113-9
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Sommerville I., 2002, SOFTWARE ENG SUPPORT, V2, P171
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Su MT, 2009, IEEE INT CONF AUTOM, P657, DOI 10.1109/ASE.2009.26
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P89
   Tang A, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P252, DOI 10.1109/WICSA.2011.40
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tang A, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P253, DOI 10.1109/WICSA.2009.5290813
   van der Kamp JW, 2006, PROCEEDINGS OF THE 3RD INTERNATIONAL CONGRESS FLOUR - BREAD '05 AND 5TH CROATIAN CONGRESS OF CEREAL TECHNOLOGISTS, P1
   van Vliet Hans, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), DOI 10.1109/QSIC.2010.78
   van Vliet H, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P24, DOI 10.1109/ASWEC.2008.69
   Wohlin C., 2012, Experimentation in Software Engineering
NR 73
TC 63
Z9 71
U1 2
U2 48
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 545
EP 567
DI 10.1016/j.infsof.2014.01.008
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300002
DA 2024-07-18
ER

PT J
AU FanJiang, YY
   Syu, Y
AF FanJiang, Yong-Yi
   Syu, Yang
TI Semantic-based automatic service composition with functional and
   non-functional requirements in design time: A genetic algorithm approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service composition; Semantic web; Quality of service; Transaction;
   Genetic algorithm
ID WEB-SERVICES; SELECTION; MODEL
AB Context: in recent years, the composition of ready-made and loosely coupled services into desired systems is a common industrial approach and a widely followed research topic in academia. In the field, the current research trend is to automate this composition; however, each of the existing efforts automates only a component of the entire problem. Therefore, a real automation process that addresses all composition concerns is lacking.
   Objective: The objective is to first identify the present composition concerns and subsequently to devise a compositional approach that covers all concerns. Ultimately, we conduct a number of experiments to investigate the proposed approach.
   Method: We identify the current composition concerns by surveying and briefly describing the existing approaches. To include all of the identified concerns, the solution space that must be searched is highly dimensioned. Thus, we adopt a genetic algorithm (GA) due to its ability to solve problems with such characteristics. Proposed GA-based approach is designed with four unusual independent fitness functions. Additionally, experiments are carried out and discussions are presented for verification of the design, including the necessity for and correctness of the independence and priority of the four fitness functions.
   Results: The case studies demonstrate that our approach can automatically generate the required composite services and considers all identified concerns simultaneously. The results confirm the need for the independence of the fitness function and also identify a more efficient priority for these functions.
   Conclusions: In this study, we present an all-inclusive automatic composer that does not require human intervention and effort during the composition process and is designed for users who must address multiple composition concerns simultaneously, including requirements for overall functionality, internally workable dataflow, and non-functional transaction and quality-of-service considerations. Such multiple and complex composition requirements cannot be satisfied by any of the previous single-concern composition approaches. Crown Copyright (C) 2013 Published by Elsevier B.V. All rights reserved.
C1 [FanJiang, Yong-Yi] Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, New Taipei City 24205, Taiwan.
   [Syu, Yang] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
C3 Fu Jen Catholic University; National Taipei University of Technology
RP FanJiang, YY (corresponding author), Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, 510 Zhongzheng Rd, New Taipei City 24205, Taiwan.
EM yyfanj@csie.fju.edu.tw
FU National Science Council (Taiwan) [NSC99-2220-E-030-004,
   NSC101-2221-E-030-022]; Fu Jen Catholic University (Taiwan) [FJU
   409931044037]
FX This research is partially sponsored by National Science Council
   (Taiwan) under the Grant NSC99-2220-E-030-004, NSC101-2221-E-030-022,
   and by Fu Jen Catholic University (Taiwan) under the Grant FJU
   409931044037.
CR [Anonymous], 2008, P 7 INT WORKSH SOFTW, DOI DOI 10.1145/1383559.1383562
   [Anonymous], 2010, INT J ADV INTERNET T
   Aversano L, 2006, COMPUT SYST SCI ENG, V21, P247
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Bartalos P, 2011, COMPUT INFORM, V30, P793
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Bhiri S., 2006, P ADV INT C TEL INT, P145
   Bhiri S, 2005, P 14 INT C WORLD WID, P138
   Blake MB, 2007, P IEEE I C SERV COMP, P138
   BLAKE MB, 2010, 2010 IEEE INT C SERV, P1
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   ChengZhi Xu, 2010, IEEE International Conference on Sensor Networks, Ubiquitous and Trustworthy Computing (SUTC 2010), P413, DOI 10.1109/SUTC.2010.73
   Choi S, 2008, INFORM SOFTWARE TECH, V50, P684, DOI 10.1016/j.infsof.2007.07.001
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   El Haddad J, 2010, IEEE T SERV COMPUT, V3, P73, DOI 10.1109/TSC.2010.5
   Fujii K, 2006, INT J COOP INF SYST, V15, P293, DOI 10.1142/S0218843006001372
   Fujii K, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516536
   Gaaloul W, 2010, IEEE T SERV COMPUT, V3, P32, DOI 10.1109/TSC.2010.1
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Horn J, 1994, EVOL COMPUT, V2, P37, DOI 10.1162/evco.1994.2.1.37
   Jordan D., 2007, 11 OASIS
   Lecue F., 2006, P EUR C WEB SERV, P171
   Lécué F, 2011, IEEE T KNOWL DATA EN, V23, P942, DOI 10.1109/TKDE.2010.237
   Lecue F, 2006, FRONT ARTIF INTEL AP, V143, P37
   Lécué F, 2008, FRONT ARTIF INTEL AP, V178, P45, DOI 10.3233/978-1-58603-891-5-45
   Lécué F, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P469, DOI 10.1109/ICWS.2009.88
   Li L, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P631
   Li Q., 2009, P 3 INT C UBIQUITOUS, P80
   Lin CF, 2011, INFORM SOFTWARE TECH, V53, P1370, DOI 10.1016/j.infsof.2011.06.010
   Martin D., 2004, W3C RECOMMENDATION
   Menascé DA, 2010, PERFORM EVALUATION, V67, P659, DOI 10.1016/j.peva.2009.07.001
   Montagut F, 2008, INT J WEB SERV RES, V5, P24, DOI 10.4018/jwsr.2008010102
   OH SC, 2006, SIGECOM EXCH, V5, P1
   Portilla A, 2008, LECT NOTES BUS INF P, V8, P109
   Rambold M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P192, DOI 10.1109/SCC.2009.59
   Rodríguez-Mier P, 2010, EVOL INTELL, V3, P171, DOI 10.1007/s12065-010-0042-z
   Silva E., 2009, P INT WORKSH US GEN
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Strunk A., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P67, DOI 10.1109/ECOWS.2010.16
   Wang L, 2012, PROCEEDINGS OF 2012 IEEE 14TH INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY, P567, DOI 10.1109/ICCT.2012.6511421
   Yao Y., 2009, P 2 INT C INT SCI IN, P358
   Yao YJ, 2010, SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS: ICAS 2010, PROCEEDINGS, P150, DOI 10.1109/ICAS.2010.29
   Yong-Yi Fanjiang, 2010, 2010 International Conference on Machine Learning and Cybernetics (ICMLC 2010), P3246, DOI 10.1109/ICMLC.2010.5580691
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Yuan Cao, 2010, 2010 IEEE Fifth International Conference on Bio-Inspired Computing: Theories and Applications (BIC-TA), P464, DOI 10.1109/BICTA.2010.5645170
NR 47
TC 24
Z9 29
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 352
EP 373
DI 10.1016/j.infsof.2013.12.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA8NU
UT WOS:000331353000006
DA 2024-07-18
ER

PT J
AU Masri, W
   Abou Assi, R
   El-Ghali, M
AF Masri, Wes
   Abou Assi, Rawad
   El-Ghali, Marwa
TI Generating profile-based signatures for online intrusion and failure
   detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Application-based intrusion detection; Profile-based signatures;
   Vulnerability-based signatures; Online failure detection; Genetic
   algorithm; Combinations of program elements
ID FLOW; LOCALIZATION; ALGORITHMS; SUPPORT
AB Context: Program execution profiles have been extensively and successfully used in several dynamic analysis fields such as software testing and fault localization.
   Objective: This paper presents a pattern-matching approach implemented as an application-based intrusion (and failure) detection system that operates on signatures generated from execution profiles. Such signatures are not descriptions of exploits, i.e. they do not depend on the syntax or semantics of the exploits, but instead are descriptions of program events that correlate with the exploitation of program vulnerabilities.
   Method: A vulnerability exploit is generally correlated with the execution of a combination of program elements, such as statements, branches, and definition-use pairs. In this work we first analyze the execution profiles of a vulnerable application in order to identify such suspicious coinbinations, define signatures that describe them, and consequently deploy these signatures within an intrusion detection system that performs online signature matching.
   Results: To evaluate our approach, which is also applicable to online failure detection, we implemented it for the Java platform and applied it onto seven open-source applications containing 30 vulnerabilities/defects for the purpose of the online detection of attacks/failures. Our results showed that our approach worked very well for 26 vulnerabilities/defects (86.67%) and the overhead imposed by the system is somewhat acceptable as it varied from 46% to 102%. The exhibited average rates of false negatives and false positives were 0.43% and 1.03%, respectively.
   Conclusion: Using profile-based signatures for online intrusion and failure detection was shown to be effective. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Masri, Wes; Abou Assi, Rawad] Amer Univ Beirut, Dept Elect & Comp Engn, Lebanon, NH USA.
   [El-Ghali, Marwa] Amer Univ Beirut, Dept Comp Sci, Lebanon, NH USA.
C3 American University of Beirut; American University of Beirut
RP Masri, W (corresponding author), Amer Univ Beirut, Dept Elect & Comp Engn, Lebanon, NH USA.
EM wm13@aub.edu.lb; ria21@aub.edu.lb; mma73@aub.edu.lb
RI Masri, Wes/A-1786-2013
FU NSF [0819987]; Lebanese National Counsel for Scientific Research; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0819987] Funding Source: National Science
   Foundation
FX This material is based upon work supported by NSF Grant No. 0819987 and
   by the Lebanese National Counsel for Scientific Research.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 3 INT C SOFTW TEST V
   [Anonymous], 2001, ACM WORKSH DAT MIN A
   [Anonymous], 1 INT WORKSH TEST DE
   [Anonymous], INT WORKSH DEF LARG
   [Anonymous], 1996, Proceedings of the 1996 IEEE Symposium on Security and Privacy, SP '96, DOI DOI 10.1109/SECPRI.1996.502675
   [Anonymous], 1998, P 7 USENIX SEC S SAN
   [Anonymous], 7 INT WORKSH DYN AN
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Bodík P, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P89
   Brumley D., 2007, P 20 IEEE COMP SECUR
   Brumley D, 2006, P IEEE S SECUR PRIV, P2, DOI 10.1109/SP.2006.41
   Chaturvedi A., 2005, P IEEE S SEC PRIV
   Chen HF, 2007, IEEE T SYST MAN CY C, V37, P644, DOI 10.1109/TSMCC.2007.897496
   Cohen W.W., 1995, MACHINE LEARNING 12
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   El-Ghali M., 2009, 5 INT WORKSH SOFTW E
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Feng HHP, 2003, P IEEE S SECUR PRIV, P62, DOI 10.1109/SECPRI.2003.1199328
   Giffin JT, 2006, LECT NOTES COMPUT SC, V4219, P41
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Jackson Daniel., 1994, P 2 ACM SIGSOFT S FD
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kang D.-K., 2005, P 6 IEEE SYST MAN CY
   Kim HA, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P271
   Kruegel C, 2003, LECT NOTES COMPUT SC, V2808, P326
   Lee W, 1999, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1999.766909
   Leon D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P116, DOI 10.1109/ICSE.2000.870403
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   LIEPINS GE, 1989, P NAT COMP SEC CONV, P495
   Lippmann R, 2000, LECT NOTES COMPUT SC, V1907, P162
   LORENZOLI D, 2007, P 18 IEEE INT S SOFT
   MANNILA H, 1995, P 1 INT C KNOWL DISC
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   MASRI W, 2006, 4 INT WORKSH DYN AN
   Masri W., 2012, ENHANCING FAULT LOCA
   Masri W, 2008, COMPUT SECUR, V27, P176, DOI 10.1016/j.cose.2008.06.002
   Masri W, 2008, EMPIR SOFTW ENG, V13, P369, DOI 10.1007/s10664-008-9071-y
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   Masri W, 2011, J SYST SOFTWARE, V84, P1171, DOI 10.1016/j.jss.2011.02.007
   Masri W, 2010, SOFTW TEST VERIF REL, V20, P121, DOI 10.1002/stvr.409
   Masri W, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571631
   Masri W, 2009, INFORM SOFTWARE TECH, V51, P385, DOI 10.1016/j.infsof.2008.05.008
   McConnell Steve., 2004, Code Complete, V2nd ed
   Miller Frederic P., 2009, ABANDONWARE COMPUTER
   Mutz D., 2006, ACM Transactions on Information and Systems Security, V9, P61, DOI 10.1145/1127345.1127348
   Newsome J, 2006, P 13 S NETW DISTR SY P 13 S NETW DISTR SY
   Newsome J., 2005, Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software
   Nusayr Amjad, 2009, USING AOP DET RUNT M, P8
   Parnin C., 2011, P 2011 INT S SOFTW T, P199
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Sen K., 2005, 10 EUR SOFTW ENG C
   Shull Forrest, 2002, P 8 INT S SOFTW METR
   Singh A, 2006, J HEURISTICS, V12, P5, DOI 10.1007/s10732-006-3750-x
   Steven J., 2000, Software Engineering Notes, V25, P158, DOI 10.1145/347636.348993
   Wagner D, 2001, P IEEE S SECUR PRIV, P156, DOI 10.1109/SECPRI.2001.924296
   Wagner David, 2002, P 9 ACM C COMP COMM, P255, DOI DOI 10.1145/586110.586145
   Xu HZ, 2004, LECT NOTES COMPUT SC, V3224, P21
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
NR 60
TC 9
Z9 9
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 238
EP 251
DI 10.1016/j.infsof.2013.09.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000008
DA 2024-07-18
ER

PT J
AU Andrés, C
   Camacho, C
   Llana, L
AF Andres, Cesar
   Camacho, Carlos
   Llana, Luis
TI A formal framework for software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal methods; Software product lines; Feature models
AB Context: A Software Product Line is a set of software systems that are built from a common set of features. These systems are developed in a prescribed way and they can be adapted to fit the needs of customers. Feature models specify the properties of the systems that are meaningful to customers. A semantics that models the feature level has the potential to support the automatic analysis of entire software product lines.
   Objective: The objective of this paper is to define a formal framework for Software Product Lines. This framework needs to be general enough to provide a formal semantics for existing frameworks like FODA (Feature Oriented Domain Analysis), but also to be easily adaptable to new problems.
   Method: We define an algebraic language, called SPLA, to describe Software Product Lines. We provide the semantics for the algebra in three different ways. The approach followed to give the semantics is inspired by the semantics of process algebras. First we define an operational semantics, next a denotational semantics, and finally an axiomatic semantics. We also have defined a representation of the algebra into propositional logic.
   Results: We prove that the three semantics are equivalent. We also show how FODA diagrams can be automatically translated into SPLA. Furthermore, we have developed our tool, called AT, that implements the formal framework presented in this paper. This tool uses a SAT-solver to check the satisfiability of an SPL.
   Conclusion: This paper defines a general formal framework for software product lines. We have defined three different semantics that are equivalent; this means that depending on the context we can choose the most convenient approach: operational, denotational or axiomatic. The framework is flexible enough because it is closely related to process algebras. Process algebras are a well-known paradigm for which many extensions have been defined. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Andres, Cesar; Camacho, Carlos; Llana, Luis] Univ Complutense Madrid, Dept Sistemas Informat & Computac, Madrid, Spain.
C3 Complutense University of Madrid
RP Llana, L (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Computac, Madrid, Spain.
EM rasec.andres@gmail.com; carloscamachoucv@gmail.com; llana@ucm.es
OI Camacho Gonzalez, Carlos/0000-0003-2829-6387; LLANA DIAZ, LUIS
   FERNANDO/0000-0003-1962-1504
FU Spanish MEC [TIN2009-14312-C02-01, TIN2012-36812-C02-01]
FX Research partially supported by the Spanish MEC project
   TIN2009-14312-C02-01 and TIN2012-36812-C02-01.
CR [Anonymous], 1980, LNCS
   [Anonymous], P 2 INT WORKSH PROD
   Asirelli Patrizia, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P130, DOI 10.1109/SPLC.2011.34
   Asirelli P, 2010, LECT NOTES COMPUT SC, V6396, P43, DOI 10.1007/978-3-642-16265-7_5
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bontemps Yves., 2004, Proceedings SPLC 2004 Workshop on Software Variability Management for Product Derivation - Towards Tool Support, P48
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Eriksson M., 2006, 9 INT C SOFTW PROD L, P33
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   Fantechi A., 2007, ESEC FSE 07, P521
   Fischbein D., 2006, ROSATEA 06, P39
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Hennessy M., 1988, An algebraic theory of processes
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Hierons R., 2008, LNCS, V4949, DOI [http://dx.doi.org/10.1007/978-3-540-78917-8, DOI 10.1007/978-3-540-78917-8]
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hoare CAR., 1985, Communicating Sequential Processes
   Höfner P, 2006, LECT NOTES COMPUT SC, V4085, P300
   Höfner P, 2011, SOFTW SYST MODEL, V10, P161, DOI 10.1007/s10270-009-0127-2
   Kang Kyo C, 1990, Technical Report
   KOTHA S., 1996, EUROPEAN J MANAGEMEN, V14, P442, DOI [10.1016/0263-2373(96)00037-0, DOI 10.1016/0263-2373(96)00037-0]
   Larsen KG, 2007, LECT NOTES COMPUT SC, V4703, P105
   Liana L., 2006, LNCS, V4229, P467, DOI DOI 10.1007/11888116_33
   Liu Y, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P919
   Mannion M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P176
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Muschevici R, 2011, LECT NOTES COMPUT SC, V7041, P318, DOI 10.1007/978-3-642-24690-6_22
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Palikareva H., ECEASST
   Palikareva H, 2012, SCI COMPUT PROGRAM, V77, P1178, DOI 10.1016/j.scico.2011.07.008
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rodríguez I, 2009, LECT NOTES COMPUT SC, V5710, P572, DOI 10.1007/978-3-642-04081-8_38
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
NR 42
TC 7
Z9 8
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1925
EP 1947
DI 10.1016/j.infsof.2013.05.005
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500005
DA 2024-07-18
ER

PT J
AU Daneshgar, F
   Low, GC
   Worasinchai, L
AF Daneshgar, Farhad
   Low, Graham C.
   Worasinchai, Lugkana
TI An investigation of 'build vs. buy' decision for software acquisition by
   small to medium enterprises
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software acquisition; SME; Thailand; Buy vs. build; Software package;
   In-house development
ID FIRMS; RISK
AB Context: The prevalence of computing and communication technologies, combined with the availability of sophisticated and highly specialised software packages from software vendors has made package acquisition a viable option for many organisations. While some research has addressed the factors that influence the selection of the software acquisition method in large organisations, little is known about the factors affecting SMEs.
   Objective: To provide an understanding of factors that affect the decision process of software acquisition for SMEs. It is expected that results from this study: (i) will assist the SME decision process for software acquisition, and (ii) will assist policy makers in terms of developing appropriate guidelines for SME software acquisition.
   Method: A positivist research perspective has been adopted involving semi-structured interviews in eight SMEs in Thailand with the interviewees assigning to each of the potential factors.
   Results: The study found that the following factors affect both SMEs and large organisations: requirements fit, cost, scale and complexity, commoditization/flexibility, time, in-house experts, support structure, and operational factors. Factors mainly applying to large organisations were strategic role of the software, intellectual property concerns, and risk, Factors particularly relevant to SMEs (ubiquitous systems, availability of free download, and customizable to specific government/tax regulations).
   Conclusion: The results suggest that: (i) when deciding on their software acquisition method, SMEs are generally less likely to pursue a long-term vision compared with larger organisations, possibly because SMEs mainly serve their local markets; and (ii) contrary to the large organisations, the role that the IT plays in SMEs may not be as vital to the SMEs' core business processes, to their supply chains, and/or to the management of their customer relationship. Furthermore, neither the level of technological intensity nor size of the SME appears to affect the ranks given by the interviewees for the various factors. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Daneshgar, Farhad; Worasinchai, Lugkana] Bangkok Univ, Knowledge & Innovat Ctr, Bangkok, Thailand.
   [Daneshgar, Farhad; Low, Graham C.] Univ New S Wales, Australian Sch Business, Sydney, NSW 2052, Australia.
C3 Bangkok University; University of New South Wales Sydney
RP Daneshgar, F (corresponding author), 784-33 Hill Rd, Wentworth Point, NSW 2127, Australia.
EM f.daneshgar@unsw.edu.au
CR [Anonymous], 2012, SOCIAL SCI RES PRINC
   [Anonymous], 2010, SAGE HDB MIXED METHO, V2nd, DOI DOI 10.4135/9781506335193
   Anthes G.H., 2004, COMPUTERWORLD, V38, P29
   Aubert BA, 1998, P ANN HICSS, P685, DOI 10.1109/HICSS.1998.654830
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Brooks B., 1997, Wall Street & Technology, V15
   BUCHOWICZ BS, 1991, IEEE T ENG MANAGE, V38, P24, DOI 10.1109/17.65757
   Cánez LE, 2000, INT J OPER PROD MAN, V20, P1313, DOI 10.1108/01443570010348271
   Daneshgar F., 2007, P 18 AUSTR C INF SYS
   Daneshgar F., 2011, P 13 ANN SIBR C SOC
   Daneshgar F, 2011, INTELL DECIS TECHNOL, V5, P189, DOI 10.3233/IDT-2011-0106
   Davis G. B., 1988, ACCOUNT HORIZ, V2, P101
   Dawson R., 2000, DEV KNOWLEDGE BASED
   Fowler K, 2004, IEEE INSTRU MEAS MAG, V7, P67, DOI 10.1109/MIM.2004.1337916
   Hatzichronoglou T., 2012, REVISION HIGH TECHNO, DOI DOI 10.1787/134337307632
   Hofstede G., 1991, Cultures and organizations, DOI DOI 10.1016/S0005-7967(02)00184-5
   Hung P, 2007, J INF TECHNOL, P1
   Hussin H, 2002, EUR J INFORM SYST, V11, P108, DOI 10.1057/palgrave/ejis/3000422
   ISO, 2011, 29110412011 ISOIEC
   Kelley R., 1992, INSURANCE TECHNOLOGY, V17, P28
   Kitchenham B., 2004, 0400011T1 NICTA
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kurokawa S, 1997, IEEE T ENG MANAGE, V44, P124, DOI 10.1109/17.584921
   Lyons D., 1995, INFOWORLD, V17, P117
   MARTIN J, 1983, HARVARD BUS REV, V61, P32
   McIvor R.T., 1997, Management Decision, V35, P169, DOI DOI 10.1108/00251749710160331
   McManus D. J., 2003, INT J APPL MANAGEMEN, V1, P29
   McNally ReginaC., 2004, J SUPPLY CHAIN MANAG, V40, P4, DOI DOI 10.1111/J.1745-493X.2004.TB00252.X
   Nelson P, 1996, COMMUN ACM, V39, P29, DOI 10.1145/233977.233986
   Neuman W.L., 2011, Strategies of research design. Social research methods. Qualitative and quantitative approaches, VSeventh
   Nonaka I., 2000, IND CORPORATE CHANGE, V9, P1, DOI [https://doi.org/10.1093/icc/9.1.1, DOI 10.1093/ICC/9.1.1]
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Poppo L, 1998, STRATEGIC MANAGE J, V19, P853, DOI 10.1002/(SICI)1097-0266(199809)19:9<853::AID-SMJ977>3.0.CO;2-B
   Probert D.R., 1999, PICMET 99
   Rands T, 1993, EUR J INFORM SYST, V2, P273, DOI 10.1057/ejis.1993.38
   Rands T., 1992, Journal of Strategic Information Systems, V1, P215, DOI 10.1016/0963-8687(92)90037-W
   Rosen J, 2001, WALL STREET TECHNOLO, V19, P71
   Scholz P., 2010, ECIS 2010 P
   SEPMP (Software Engineering Process Management Program), 2010, CMUSEI2010TR032 SEPM
   Staron M, 2012, INFORM SOFTWARE TECH, V54, P887, DOI 10.1016/j.infsof.2012.02.003
   STECKLER A, 1992, HEALTH EDUC QUART, V19, P1, DOI 10.1177/109019819201900101
   Tan T. C. F., 2010, P 18 EUR C INF SYST
   Taylor H., 2001, P NACCQ 2001 NAP NZ, P397
   Terziovski M, 2010, STRATEGIC MANAGE J, V31, P892, DOI 10.1002/smj.841
   Turban E., 2011, DECISION SUPPORT BUS, P59
   Ulfeder S., 2003, COMPUTERWORLD, V37, P39
   Voutsakis N., 2004, OPTIMIZE         MAR, P19
   Whiting R., 2003, InformationWEEK, P34
NR 49
TC 32
Z9 36
U1 0
U2 52
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1741
EP 1750
DI 10.1016/j.infsof.2013.03.009
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 203MT
UT WOS:000323298000005
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Fault prediction and the discriminative powers of connectivity-based
   object-oriented class cohesion metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented software quality; Cohesive interactions; Connectivity
   pattern; Discriminative power; Object-oriented class cohesion; Fault
   prediction
ID PRACT.-EXPER. 2000; QUALITY; CHAE,HEUNG,SEOK; KWON,YONG,RAE; SUITE
AB Context: Several metrics have been proposed to measure the extent to which class members are related. Connectivity-based class cohesion metrics measure the degree of connectivity among the class members.
   Objective: We propose a new class cohesion metric that has higher discriminative power than any of the existing cohesion metrics. In addition, we empirically compare the connectivity and non-connectivity-based cohesion metrics.
   Method: The proposed class cohesion metric is based on counting the number of possible paths in a graph that represents the connectivity pattern of the class members. We theoretically and empirically validate this path connectivity class cohesion (PCCC) metric. The empirical validation compares seven connectivity-based metrics, including PCCC, and 11 non-connectivity-based metrics in terms of discriminative and fault detection powers. The discriminative-power study explores the probability that a cohesion metric will incorrectly determine classes to be cohesively equal when they have different connectivity patterns. The fault detection study investigates whether connectivity-based metrics, including PCCC, better explain the presence of faults from a statistical standpoint in comparison to other non-connectivity-based cohesion metrics, considered individually or in combination.
   Results: The theoretical validation demonstrates that PCCC satisfies the key cohesion properties. The results of the empirical studies indicate that, in contrast to other connectivity-based cohesion metrics, PCCC is much better than any comparable cohesion metric in terms of its discriminative power. In addition, the results also indicate that PCCC measures cohesion aspects that are not captured by other metrics, wherein it is considerably better than other connectivity-based metrics but slightly worse than some other non-connectivity-based cohesion metrics in terms of its ability to predict faulty classes.
   Conclusion: PCCC is more useful in practice for the applications in which practitioners need to distinguish between the quality of different classes or the quality of different implementations of the same class. (C) 2011 Elsevier B.V. All rights reserved.
C1 Kuwait Univ, Dept Informat Sci, Kuwait 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Kuwait 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI04/08]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant WI04/08. In addition, the author would like to
   thank Anas Abdin and Saqiba Sulman for assisting in collecting the
   cohesion and fault results.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   [Anonymous], ILLUSION
   [Anonymous], OPENBRAVO
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], EMPIRICAL STUDIES QU
   [Anonymous], 9 PANH C INF THESS G
   [Anonymous], JABREF
   [Anonymous], 2002, THESIS SE U
   [Anonymous], GANTTPROJECT
   [Anonymous], 769 SAG U
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Barnett V., 1984, OUTLIERS STAT DATA
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Fernandez L., 2006, INF THEOR APPL, V13, P82
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Jolliffe I. T., 1986, PINCIPAL COMPONENT A
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Snedecor GW, 1983, Statistical Methods, V6th
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Xu BW, 2003, SOFTWARE PRACT EXPER, V33, P583, DOI 10.1002/spe.505
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 55
TC 27
Z9 30
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 396
EP 416
DI 10.1016/j.infsof.2011.11.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100005
DA 2024-07-18
ER

PT J
AU Lin, CF
   Sheu, RK
   Chang, YS
   Yuan, SM
AF Lin, Chia-Feng
   Sheu, Ruey-Kai
   Chang, Yue-Shan
   Yuan, Shyan-Ming
TI A relaxable service selection algorithm for QoS-based web service
   composition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web service; Quality of service; Service composition; Service selection
AB Context: Web services are emerging technologies that enable application to application communication and reuse of autonomous services over Web. Composition of web services is a concept of integrating individual web services to conduct complex business transactions based on functionality and performance constraints
   Objective: To satisfy user requirements, technologies of Quality of service (QoS)-based web service composition (QWSC) are widely used to build complex applications by discovering the best-fit web services in term of QoS.
   Method: In this paper, a QoS-based service selection (RQSS) algorithm is proposed to help composite web application development by discovering feasible web services based on functionalities and QoS criteria of user requirements. The RQSS recommends prospective service candidates to users by relaxing QoS constraints if no suitable or available web service could exactly fulfill user requirements.
   Results: A generic framework is implemented to demonstrate the feasibility and performance of RQSS by adapting WS-BPEL standards, and can be reused for QoS-based web composition applications.
   Conclusion: The experimental results show that the RQSS algorithm indeed performs well and increases the system availability and reliability. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Sheu, Ruey-Kai] Tunghai Univ, Dept Comp Sci, Taichung 40704, Taiwan.
   [Lin, Chia-Feng; Yuan, Shyan-Ming] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
   [Chang, Yue-Shan] Natl Taipei Univ, Dept Comp Sci & Informat Engn, Taipei, Taiwan.
C3 Tunghai University; National Yang Ming Chiao Tung University; National
   Taipei University
RP Sheu, RK (corresponding author), Tunghai Univ, Dept Comp Sci, Taichung 40704, Taiwan.
EM cflin@cs.nctu.edu.tw; rickysheu@thu.edu.tw; ysc@mail.ntpu.edu.tw;
   smyuan@cs.nctu.edu.tw
RI Sheu, Ruey-Kai/AAT-5106-2021; chen, jenny/G-6723-2015; Sheu,
   Ruey-Kai/IWM-3927-2023; Yuan, Shyan-Ming/O-1809-2013
OI chen, jenny/0000-0003-3501-9046; Yuan, Shyan-Ming/0000-0002-3621-9528;
   Liu, HH/0000-0002-5661-2247
CR Aggarwal R, 2004, P IEEE I C SERV COMP, P23
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   ALRIFAI M, INT C WORLD WID WEB, P881
   Amaldi E, 2005, LECT NOTES COMPUT SC, V3509, P249
   AMALDI E, 1995, THEOR COMPUT SCI, V147, P181, DOI 10.1016/0304-3975(94)00254-G
   Amaldi E, 2008, COMPUT OPER RES, V35, P1465, DOI 10.1016/j.cor.2007.04.001
   [Anonymous], P INT WORKSH WEB SER
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Cao HF, 2007, IFIP INT C NETW PARA, P584, DOI 10.1109/NPC.2007.35
   Cardoso J, 2003, J INTELL INF SYST, V21, P191, DOI 10.1023/A:1025542915514
   CASATI F, 2001, P 13 INT C ADV INF S, P171
   CHERIAN R., 2010, INT J COMPUT APPL, V1, P79
   Chinneck JW, 2001, INFORMS J COMPUT, V13, P210, DOI 10.1287/ijoc.13.3.210.12632
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Ko JM, 2008, J SYST SOFTWARE, V81, P2079, DOI 10.1016/j.jss.2008.04.044
   Liu XZ, 2009, IEEE T SERV COMPUT, V2, P167, DOI 10.1109/TSC.2009.11
   LUO YS, 2008, P IEEE INT C HIGH PE, P360
   *OSAIS, WEB SERV BUS PROC EX
   Parra-Hernández R, 2005, IEEE T SYST MAN CY A, V35, P708, DOI 10.1109/TSMCA.2005.851140
   Pastrana JL, 2011, COMPUT LANG SYST STR, V37, P2, DOI 10.1016/j.cl.2010.07.001
   Plebani P, 2009, IEEE T KNOWL DATA EN, V21, P1629, DOI 10.1109/TKDE.2009.35
   Rao J., 2004, P 1 INT WORKSHOP SEM, P43, DOI DOI 10.1007/978-3-540-30581-1_5
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   ShaikhAli A, 2003, 2003 SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P85, DOI 10.1109/SAINTW.2003.1210132
   Sheng QZ, 2009, IEEE T SERV COMPUT, V2, P34, DOI 10.1109/TSC.2009.1
   STEFAN D, 2009, P INT C WEB SERV JUL, P327
   SURACI V, 2007, P 3 INT C SEM KNOWL, P499
   *W3C, SIMPL OBJ ACC PROT S
   *W3C, W3C WS POL FRAM VER
   W3C, WEB SERV DESCR LANG
   *WORKFL MAN COAL, 1995, TC001003 WORKFL MAN
   XU Z, 2007, P IEEE INT C WEB SER, P249
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   YUAN SM, 2009, P INT C NEW TRENDS I, P384
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng ZB, 2009, I C DEPEND SYS NETWO, P239, DOI 10.1109/DSN.2009.5270332
   ZHOU C, 2004, INT J WEB SERV RES, V1, P58, DOI DOI 10.4018/JWSR.2004040104
NR 38
TC 57
Z9 64
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1370
EP 1381
DI 10.1016/j.infsof.2011.06.010
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900006
DA 2024-07-18
ER

PT J
AU Gargantini, A
   Fraser, G
AF Gargantini, Angelo
   Fraser, Gordon
TI Generating minimal fault detecting test suites for general Boolean
   specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case generation; Boolean testing; Fault-based testing
AB Context: Boolean expressions are a central aspect of specifications and programs, but they also offer dangerously many ways to introduce faults. To counter this effect, various criteria to generate and evaluate tests have been proposed. These are traditionally based on the structure of the expressions, but are not directly related to the possible faults. Often, they also require expressions to be in particular formats such as disjunctive normal form (DNF), where a strict hierarchy of faults is available to prove fault detection capability.
   Objective: This paper describes a method that generates test cases directly from an expression's possible faults, guaranteeing that faults of any chosen class will be detected. in contrast to many previous criteria, this approach does not require the Boolean expressions to be in DNF, but allows expressions in any format, using any deliberate fault classes.
   Method: The presented approach is based on creating test objectives for individual faults, such that efficient, modern satisfiability solvers can be used to derive test cases that directly address the faults. Although the number of such test objectives can be high depending on the considered fault classes, a number of optimizations can be applied to reduce the test generation effort.
   Results: Evaluation on a set of commonly used benchmarks shows that despite guaranteeing fault coverage, the number of test cases can be reduced even further than that produced by other state of the art strategies. At the same time, the fault detection capability is not affected negatively, and clearly improves over state of the art criteria for general form Boolean expressions.
   Conclusion: The approach presented in this paper is shown to improve over the state of the art with respect to the types of expressions that can be handled, the fault classes that are guaranteed to be covered, and the sizes of test suites generated automatically. This has implications for several fields of software testing: A main application is specification based testing, but Boolean expressions also exist in normal source code and need to be tested there as well. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Gargantini, Angelo] Univ Bergamo, Dipartimento Ingn Informaz & Metodi Matemat, Dalmine, Italy.
   [Fraser, Gordon] Univ Saarland, Lehrstuhl Softwaretech, D-6600 Saarbrucken, Germany.
C3 University of Bergamo; Saarland University
RP Gargantini, A (corresponding author), Univ Bergamo, Dipartimento Ingn Informaz & Metodi Matemat, Dalmine, Italy.
EM angelo.gargantini@unibg.it; fraser@cs.uni-saarland.de
RI Gargantini, Angelo/E-6060-2012
OI Gargantini, Angelo/0000-0002-4035-0131
CR AKERS SB, 1959, J SOC IND APPL MATH, V7, P487
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2006, YICES SMT SOLVER
   [Anonymous], 2004, ICS
   [Anonymous], 2006, CIT
   Calvagna A, 2009, LECT NOTES COMPUT SC, V5668, P27
   Chen TY, 2009, SOFTWARE QUAL J, V17, P245, DOI 10.1007/s11219-008-9064-5
   Chen T. Y., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P606, DOI 10.1109/APSEC.1999.809656
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   Chen Z., 2010, ACM T SOFTWARE ENG M
   Chen ZY, 2007, P INT COMP SOFTW APP, P621
   Chilenski J., 1997, Definition for a masking form of modified condition decision coverage (MCDC)
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Czutro A, 2009, ASIAN TEST SYMPOSIUM, P187, DOI 10.1109/ATS.2009.31
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Foster K. A., 1984, SIGSOFT Software Engineering Notes, V9, P120, DOI 10.1145/1010925.1010935
   Fraser G., 2010, 6 WORKSH ADV MOD BAS
   Fraser G, 2009, J LOGIC ALGEBR PROGR, V78, P472, DOI 10.1016/j.jlap.2009.01.004
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gargantini A, 2007, LECT NOTES COMPUT SC, V4454, P189
   Hamzaoglu I, 1998, 1998 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P283, DOI 10.1109/ICCAD.1998.742885
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Kaminsk G., 2010, MINIMAL MUMCUT COVER
   Kaminski G, 2008, SOFTW TEST VERIF REL, V18, P149, DOI 10.1002/stvr.386
   Kaminski G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P356, DOI 10.1109/ICST.2009.14
   Kapoor K, 2005, SOFTW TEST VERIF REL, V15, P21, DOI 10.1002/stvr.306
   Kapoor K, 2007, ACM T SOFTW ENG METH, V16, pA1, DOI 10.1145/1243987.1243988
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kobayashi N, 2002, INFORM SOFTWARE TECH, V44, P113, DOI 10.1016/S0950-5849(01)00222-1
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   LARRABEE T, 1992, IEEE T COMPUT AID D, V11, P4, DOI 10.1109/43.108614
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Okun V, 2004, INFORM SOFTWARE TECH, V46, P525, DOI 10.1016/j.infsof.2003.10.003
   Stephan P, 1996, IEEE T COMPUT AID D, V15, P1167, DOI 10.1109/43.536723
   TAI KC, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P564, DOI 10.1109/CMPSAC.1990.139432
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Yan Jun, 2006, 17 IEEE INT S SOFTW
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
   Yu YT, 2006, J SYST SOFTWARE, V79, P820, DOI 10.1016/j.jss.2005.08.016
NR 44
TC 22
Z9 24
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1263
EP 1273
DI 10.1016/j.infsof.2011.06.008
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500009
DA 2024-07-18
ER

PT J
AU Offutt, J
AF Offutt, Jeff
TI A mutation carol: Past, present and future
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation analysis; Software testing; Prediction
AB Context: The field of mutation analysis has been growing, both in the number of published papers and the number of active researchers. This special issue provides a sampling of recent advances and ideas. But do all the new researchers know where we started?
   Objective: To imagine where we are going, we must first know where we are. To understand where we are, we must know where we have been. This paper reviews past mutation analysis research, considers the present, then imagines possible future directions.
   Method: A retrospective study of past trends lets us the ability to see the current state of mutation research in a clear context, allowing us to imagine and then create future vectors.
   Results: The value of mutation has greatly expanded since the early view of mutation as an expensive way to unit test subroutines. Our understanding of what mutation is and how it can help has become much deeper and broader.
   Conclusion: Mutation analysis has been around for 35 years, but we are just now beginning to see its full potential. The papers in this issue and future mutation workshops will eventually allow us to realize this potential. (C) 2011 Elsevier B.V. All rights reserved.
C1 George Mason Univ, Fairfax, VA 22030 USA.
C3 George Mason University
RP Offutt, J (corresponding author), George Mason Univ, Fairfax, VA 22030 USA.
EM offutt@gmu.edu
CR Acree A. T., 1979, GITICS7908 SCH INF C
   Acree A. T., 1980, On Mutation
   ACREE AT, 1979, GITICS7904
   AGRAWAL AH, 1989, MOTHRA INTERNAL DOCU
   AGRAWAL H, 1991, THESIS PURDUE U W LA
   Agrawal H., 1989, Design of mutant operators for the C programming language
   AMMANN P, 2001, P ICECCS 2001 7 IEEE
   AMMANN P, 1999, P 18 DIG AV SYST C D
   Ammann P. E., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P239, DOI 10.1109/HASE.1999.809499
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], 5 INT S SOFTW REL EN
   [Anonymous], GITSERC8802
   [Anonymous], 3 IEEE WORKSH MUT AN
   [Anonymous], 1991, P S TEST AN VER TAV
   [Anonymous], 1980, THESIS YALE U NEW HA
   [Anonymous], P 8 INT C FORM DESCR
   [Anonymous], WORKSH SOFTW TEST TE
   [Anonymous], P 2 INT WORKSH MOD B
   [Anonymous], GITICS7904
   [Anonymous], ACM T SOFTWARE ENG M
   Baldwin Douglas., 1979, HEURISTICS DETERMINI
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Bradbury J. S., 2006, 2 WORKSH MUT AN MUT
   Budd T., 1977, 114 YAL U DEP COMP S
   BUDD TA, 1980, EXPER IMPLEMENTORS G
   BUDD TA, 1978, P NAT COMP C, P623
   CARVER R, 1993, INTERNATIONAL TEST CONFERENCE 1993 PROCEEDINGS, P845, DOI 10.1109/TEST.1993.470617
   Chevalley P., 2001, P 8 AS PAC SOFTW ENG
   CHOI B, 1999, THESIS PURDUE U
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   Choi BJ., 1989, P 22 ANN HAW INT C S, V2, P275, DOI [10.1109/HICSS.1989.48002, DOI 10.1109/HICSS.1989.48002]
   CRAFT WM, 1989, THESIS CLEMSON U CLE, P91
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   DELAMARO M, 2000, P MUT 2000 MUT TEST
   Delamaro M.E., 1993, 7 BRAZ S SOFTW ENG R, P31
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DEMILLO R, 1992, SERCTR92P PURD U
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DEMILLO RA, 1988, P 6 ANN PAC NW SOFTW, P209
   DEMILLO RA, 1991, P 15 ANN COMP SOFTW
   ELLIMS M, 2007, 3 WORKSH MUT AN MUT, P185
   FLEYSHGAKKER VN, 1994, P INT S SOFTW TEST A, P185
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   GEIST R, 1992, IEEE T COMPUT, V41, P550, DOI 10.1109/12.142681
   Ghosh AK, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P104, DOI 10.1109/SECPRI.1998.674827
   GHOSH S, 2000, P MUT 2000 MUT TEST
   GHOSH S, 2001, SOFTWARE TESTING VER, V11
   GHOSH S, 2000, THESIS PURDUE U W LA
   Girgis M. R., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P313
   Goldberg A., 1994, P 1994 INT S SOFTW T, P80
   GREECE A, 1979, GITICS7904
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   HANKS JM, 1980, THESIS GEORGIA I TEC
   HANKS JM, 1980, GITICS8004, V2
   HANKS JM, 1980, GITICS8004, V1
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HORGAN JR, 1990, SERCTR83P PURD U
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jasper R., 1994, SIGSOFT Software Engineering Notes, P95
   JEFFERSON A, 1994, INTERNATIONAL TEST CONFERENCE 1994, PROCEEDINGS, P824, DOI 10.1109/TEST.1994.528535
   Jia Y., IEEE T SOFT IN PRESS
   Kim Sun-woo., 1999, 28 JAIIO: Symposium on Software Technology (SoST'99), P72
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Korel B., 1992, Software Testing, Verification and Reliability, V2, P203, DOI 10.1002/stvr.4370020405
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KRAUSER EW, 1991, THESIS PURDUE U W LA
   KRAUSER EW, 1986, P ISMM INT S MINI MI, P67
   LEE S, 1991, THESIS CLEMSON U CLE
   Li Nan, 2009, 5 WORKSH MUT AN MUT
   LIPTON R, 2007, COMMUNICATION    SEP
   Ma Y.-S., 2005, SOFTWARE TESTING VER, V15
   MARSHALL AC, 1990, INFORM SOFTWARE TECH, V32, P99, DOI 10.1016/0950-5849(90)90053-T
   MATEO PR, 2010, 6 WORKSH MUT AN MUT
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Offutt J., 1992, 1992 INT C PAR PROC
   OFFUTT J, 2004, ACM SIGSOFT SOFTWARE, V29, P1
   OFFUTT J, 1990, P 7 INT C TEST COMP, P65
   Offutt J., 2000, Proc. Mutat. 2000 Mutat. Test. Twent. Twenty First Centuries, P45
   OFFUTT J, 1988, GITICS8828
   OFFUTT J, 1990, P 1990 ANN C COMP AS
   OFFUTT J, 1991, J SYSTEMS INTEGRATIO, V1, P391
   Offutt J., 1996, ISSETR9609 G MAS U D
   OFFUTT J, 1990, P 1990 C SYST INT, P694
   OFFUTT J, 2006, 2 WORKSH MUT AN MUT, P93
   OFFUTT J, 1997, SOFTW TEST VERIF REL, V7, P165
   OFFUTT J, 1995, 12 INT C TEST COMP S, P111
   OFFUTT J, 1989, P 3 S SOFTW TEST AN, P131
   OFFUTT J, 1995, 12 INT C TEST COMP S, P99
   OFFUTT J, 1987, 1987 S INT INT TECHN, P177
   OFFUTT J, 1991, P 4 S SOFTW TEST AN, P200
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Pan J., 1994, Using constraints to detect equivalent mutants
   PRAPHAMONTRIPON.U, 2010, 6 WORKSH MUT AN MUT
   PRESSLEY DL, 1992, THESIS CLEMSON U CLE, P92
   PROBERT RL, 1991, PROTOCOL TEST SYSTEM, V3, P57
   SAHINOGLU M, 1990, P 28 ANN SPRING REL, P127
   SEAMAN EJ, 1989, THESIS CLEMSON U CLE
   SOUZA SDR, 1999, SOFTWARE QUALITY CON, V8, P285
   TANAKA A, 1981, THESIS SCH INFORM CO
   THEVENODFOSSE P, 1991, FAULT TOLERANT COMPU, P410
   UNTCH R, 1992, P 30 ACM SE REG C RA
   UNTCH R, 1995, THESIS CLEMSON U CLE, P95
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   Untch R.H., 1997, Proceedings of the 35th Annual Southeast Regional Conference, P174
   WAH KSH, 1995, SOFTW TEST VERIF REL, V5, P3
   Wah KSHT, 2000, SOFTW TEST VERIF REL, V10, P3, DOI 10.1002/(SICI)1099-1689(200003)10:1<3::AID-STVR196>3.0.CO;2-P
   Wang S., 2009, 5 WORKSH MUT AN MUT
   Wong W.E., 1994, P 8 BRAZ S SOFTW ENG, P439
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   WONG WE, 1993, THESIS PURDUE U W LA
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Yoon H, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/APSEC.1998.733717
   ZAPF CN, 1993, THESIS CLEMSON U CLE
NR 126
TC 52
Z9 55
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1098
EP 1107
DI 10.1016/j.infsof.2011.03.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, YY
   Harman, M
   Finkelstein, A
   Mansouri, SA
AF Zhang, Yuanyuan
   Harman, Mark
   Finkelstein, Anthony
   Mansouri, S. Afshin
TI Comparing the performance of metaheuristics for the analysis of
   multi-stakeholder tradeoffs in requirements optimisation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Pareto optimality; Multi-objective genetic algorithms; Requirements
   engineering
ID SOFTWARE; FRAMEWORK; SELECTION
AB Context: In requirements engineering, there will be many different stake holders. Often the requirements engineer has to find a set of requirements that reflect the needs of several different stake holders, while remaining within budget.
   Objective: This paper introduces an optimisation-based approach to the automated analysis of requirements assignments when multiple stake holders are to be satisfied by a single choice of requirements.
   Method: The paper reports on experiments using two different multi-objective evolutionary optimisation algorithms with real world data sets as well as synthetic data sets. This empirical validation includes a statistical analysis of the performance of the two algorithms.
   Results: The results reveal that the Two-Archive algorithm outperformed the others in convergence as the scale of problems increase. The paper also shows how both traditional and animated Kiviat diagrams can be used to visualise the tensions between the stake holders' competing requirements in the presence of increasing budgetary pressure.
   Conclusion: This paper presented the concept of internal tensioning among multi-stakeholder in requirements analysis and optimisation for the first time. This analysis may be useful in internal negotiations over budgetary allowance for the project. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Zhang, Yuanyuan; Harman, Mark; Finkelstein, Anthony] UCL, London WC1E 6BT, England.
   [Mansouri, S. Afshin] Brunel Univ, Uxbridge UB8 3PH, Middx, England.
C3 University of London; University College London; Brunel University
RP Zhang, YY (corresponding author), UCL, Malet Pl, London WC1E 6BT, England.
EM yuanyuan.zhang@cs.ucl.ac.uk; m.harman@cs.ucl.ac.uk;
   a.finkelstein@cs.ucl.ac.uk; afshin.mansouri@brunel.ac.uk
RI Mansouri, Afshin/B-5806-2013
OI Mansouri, Afshin/0000-0002-1488-7912; Harman, Mark/0000-0002-5864-4488
CR [Anonymous], 2010, 12 ANN C GEN EV COMP
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baker P, 2006, PROC IEEE INT CONF S, P176
   BOEHM B, 1995, PROC INT CONF SOFTW, P243, DOI 10.1145/225014.225037
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Cheng B.H.C., 2007, Future of Software Engineering. IEEE
   Corne D. W., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P839
   Corne DavidW., 2007, GECCO '07, P773
   de Souza J. T., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P143, DOI 10.1109/SSBSE.2010.25
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Deb K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P781
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   EASTERBROOK S, 1994, CONCURRENT ENG-RES A, V2, P209, DOI 10.1177/1063293X9400200307
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Horn J., 1993, IlliGAL report (93005), P1
   Karlsson J., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P146, DOI 10.1109/IWSSD.1996.501157
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON L, 2006, INT J SOFTW ENG KNOW, P16
   KELLERER H, 2004, KNAPSAC PROBLEMS
   Kolence K.W., 1973, ACM SIGMETRICS Perform. Eval. Rev, V2, P31, DOI [10.1145/1113644.1113647, DOI 10.1145/1113644.1113647]
   KOLENCE KW, 1973, ACM SIGMETRICS PERFO, V2, P2, DOI DOI 10.1145/1041613.1041614
   Li C, 2007, LECT NOTES COMPUT SC, V4542, P93
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   PARDEE W, 1996, SATISFY DELIGHT YOUR
   Praditwong K, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PTS 1 AND 2, PROCEEDINGS, P286, DOI 10.1109/ICCIAS.2006.294139
   ROBINSON W, 1999, 995 GSU CIS
   ROBINSON WN, 1994, P AAAI 94 WORKSH MOD, P90
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Ryan K, 1997, PROC INT CONF SOFTW, P564, DOI 10.1145/253228.253453
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   SALIU MO, 2005, ISSE, V1, P189
   SRINIVAS N, 1995, Evolutionary computation., V2, P221, DOI [DOI 10.1162/EVCO.1994.2.3.221, 10.1162/evco.1994.2.3.221]
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zitzler E., 2001, TIK-Rep. 103
NR 45
TC 23
Z9 27
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 761
EP 773
DI 10.1016/j.infsof.2011.02.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300006
DA 2024-07-18
ER

PT J
AU Chang, CH
   Lu, CW
   Hsiung, PA
AF Chang, Chih-Hung
   Lu, Chih-Wei
   Hsiung, Pao-Ann
TI Pattern-based framework for modularized software development and
   evolution robustness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 24th Annual ACM Symposium on Applied Computing
CY MAR 08-12, 2009
CL Honolulu, HI
SP ACM SIGSAC
DE Software standardization and integration; Evolution robustness; Design
   pattern; Framework
ID DESIGN PATTERNS; REUSE; QUALITY
AB Context: Software development is now facing much more challenges than ever before due to the intrinsic high complexity and the increasing demands of the quick-service-ready paradigm.
   Objective: As the developers are now called for more quality software systems from the industries, there is insufficient guidance from the methodologies and standards of software engineering that can provide assistance to the rapid development of qualified business software.
   Method: In this work, we discuss the advantages of the pattern-based software development. We verify the benefits using a pattern-based software framework called OS2F, and a corresponding system design architecture that is intended for the rapid development of web applications.
   Results: The objective of the framework/architecture is that, through software patterns, developers should be able to separate the work of system development from the business rules so as to reduce the problems caused by a developer's lack of business experiences.
   Conclusion: Through a suitable pattern-based software framework, the quality of the product can thus be enhanced, software development time and cost decreased, and software evolution robustness improved. Crown Copyright (C) 2010 Published by Elsevier B.V. All rights reserved.
C1 [Chang, Chih-Hung; Lu, Chih-Wei] Hsiuping Inst Technol, Dept Informat Management, Dali City, Taichung County, Taiwan.
   [Hsiung, Pao-Ann] Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Min Hsiung, Chia Yi, Taiwan.
C3 National Chung Cheng University
RP Chang, CH (corresponding author), Hsiuping Inst Technol, Dept Informat Management, 11 Gongye Rd, Dali City, Taichung County, Taiwan.
EM chchang@hit.edu.tw; cwlu@hit.edu.tw; pahsiung@cs.ccu.edu.tw
RI Lu, Chih-Wei/D-2386-2009
OI Chang, Chih-Hung/0000-0002-7910-4704
CR [Anonymous], Eclipse
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], Apache Tomcat
   [Anonymous], P TECHN OBJ OR LANG
   *AP SOFTW FDN, IBATIS
   *AP SOFTW FDN, AP STR
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BECK K, JUNIT 4 1
   BETLEM BHL, 1995, OBJECT ORIENTED FRAM
   Bray T., 2006, Extensible Markup Language (XML) 1.1 Specification, V2nd
   CHAUHAN H, HQL OBJECT ORIENTED
   CHEN DJ, 1994, J OBJECT-ORIENT PROG, V7, P56
   CHU CW, 2001, HDB SOFTWARE ENG KNO, V1, P767
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   Cooper JW, 1998, COMMUN ACM, V41, P65, DOI 10.1145/276609.276621
   DING J, 2001, HDB DISTRIBUTED MULT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glushko RJ, 1999, COMMUN ACM, V42, P106, DOI 10.1145/295685.295720
   Grand M., 2002, PATTERNS JAVA, V1
   Gulcu C., 2002, SHORT INTRO LOG4J
   Halpin T.A., 2009, OBJECT ROLE MODELING
   *HIB, RED HAT MIDDL
   Hsueh NL, 2008, J SYST SOFTWARE, V81, P1430, DOI 10.1016/j.jss.2007.11.724
   Jacobsen EE, 1997, P INT COMP SOFTW APP, P344, DOI 10.1109/CMPSAC.1997.624982
   JOHNSON R, 2002, EXPERT 1 1 J2EE DESI
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Johnson Rod., SPRING FRAMEWORK REF
   Johnson Rod., 2005, Introduction to the Spring Framework
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   LARMAN C, 1997, APPL UML PATTERNS IN
   MATTSSON M, 1996, THESIS LUND U
   MAYRHAUSER AV, 1995, ADV COMPUT, V40, P1
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   NGUYEN D, 1998, P 29 SIGCSE TECHN S, P336
   RAIBLE M, APPFUSE CONFLUENCE
   Riehle D., 1996, P 1996 UBILAB C, P137
   Rine DC, 1997, COMPUTER, V30, P43, DOI 10.1109/MC.1997.625303
   Sommerville I, 2001, Software Engineering
   Sparks S, 1996, COMPUTER, V29, P52, DOI 10.1109/2.536784
   *SUN MICR, JAV PERS API
   *SUN MICR, JAV DAT OBJ JDO
   *SUN MICR, SOURCE JAV DEV
   *W3C, EXT MARK LANG XML
   Winn T, 2002, IEEE SOFTWARE, V19, P59, DOI 10.1109/52.976942
   WIRFSBROCK RJ, 1990, COMMUN ACM, V33, P105
NR 45
TC 8
Z9 10
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 307
EP 316
DI 10.1016/j.infsof.2010.11.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 739QK
UT WOS:000288732700003
DA 2024-07-18
ER

PT J
AU Segura, S
   Hierons, RM
   Benavides, D
   Ruiz-Cortés, A
AF Segura, Sergio
   Hierons, Robert M.
   Benavides, David
   Ruiz-Cortes, Antonio
TI Automated metamorphic testing on the analyses of feature models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Test data generation; Mutation testing; Feature
   models; Automated analysis; Product lines
AB Context: A feature model (FM) represents the valid combinations of features in a domain. The automated extraction of information from FMs is a complex task that involves numerous analysis operations, techniques and tools. Current testing methods in this context are manual and rely on the ability of the tester to decide whether the output of an analysis is correct. However, this is acknowledged to be time-consuming, error-prone and in most cases infeasible due to the combinatorial complexity of the analyses, this is known as the oracle problem.
   Objective: In this paper, we propose using metamorphic testing to automate the generation of test data for feature model analysis tools overcoming the oracle problem. An automated test data generator is presented and evaluated to show the feasibility of our approach.
   Method: We present a set of relations (so-called metamorphic relations) between input FMs and the set of products they represent. Based on these relations and given a FM and its known set of products, a set of neighbouring FMs together with their corresponding set of products are automatically generated and used for testing multiple analyses. Complex FMs representing millions of products can be efficiently created by applying this process iteratively.
   Results: Our evaluation results using mutation testing and real faults reveal that most faults can be automatically detected within a few seconds. Two defects were found in FaMa and another two in SPLOT, two real tools for the automated analysis of feature models. Also, we show how our generator outperforms a related manual suite for the automated analysis of feature models and how this suite can be used to guide the automated generation of test cases obtaining important gains in efficiency.
   Conclusion: Our results show that the application of metamorphic testing in the domain of automated analysis of feature models is efficient and effective in detecting most faults in a few seconds without the need for a human oracle. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Segura, Sergio; Benavides, David; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, E-41012 Seville, Spain.
   [Hierons, Robert M.] Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB7 7NU, Middx, England.
C3 University of Sevilla; Brunel University
RP Segura, S (corresponding author), Univ Seville, Dept Comp Languages & Syst, Av Reina Mercedes S-N, E-41012 Seville, Spain.
EM sergiosegura@us.es; benavides@us.es
RI Segura, Sergio/A-9615-2011; Benavides, David/K-2791-2014; Cortés,
   Antonio Ruiz/B-9056-2008
OI Segura, Sergio/0000-0001-8816-6213; Benavides,
   David/0000-0002-8449-3273; Cortés, Antonio Ruiz/0000-0001-9827-1834;
   Hierons, Robert/0000-0002-4771-1446
FU European Commission; Spanish Government [TIN2009-07366]; Andalusian
   Government [TIC-2533]
FX This work has been partially supported by the European Commission
   (FEDER) and Spanish Government under CICYT Project SETI (TIN2009-07366)
   and the Andalusian Government Project ISA-BEL (TIC-2533).
CR [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], Choco
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beydeda S, 2006, P INT COMP SOFTW APP, P265
   *BIGL, 2010, BIGL SOFTW GEARS
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P470
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P241
   Chen T.Y., 2002, PROC INTERSYMPOSIUM, P191
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TS, 2004, 2004 IEEE INTERNATIONAL CONFERNECE ON E-TECHNOLOGY, E-COMMERE AND E-SERVICE, PROCEEDINGS, P567
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   CHEN TY, 2004, P 5 INT C SOFTW ENG
   CZARNECKI K, 2005, P INT WORKSH SOFTW F
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   FAN S, 2006, KNOWLEDGE BASED INTE
   Gheyi Rohit., 2006, 1st Alloy workshop, P71
   GOTLIEB A, 2003, COMPSAC 03, P34
   *IEEE, 2007, 8291998 IEEE
   Kang Kyo C, 1990, Technical Report
   MA YS, 2006, ICSE 06, P827
   Mannion M, 2004, LECT NOTES COMPUT SC, V3014, P211
   MENDONCA M, 2009, P SOFW PROD LIN C
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   MURPHY C, 2009, CUCS01209
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   *PUR SYST, PUR VAR
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura Sergio, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P35, DOI 10.1109/ICST.2010.20
   SEGURA S, 2010, ISA10TR02
   SEGURA S, 2001, ISA10TR01
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P1124, DOI 10.1016/j.infsof.2011.03.006
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   *SPLOT, SPLOT SOFTW PROD LIN
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   TRINIDAD P, 2009, 3 INT WORKSH VAR MOD, P145
   van der Storm T, 2007, LECT NOTES COMPUT SC, V4829, P66
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   VANDENBROEK P, 2009, 3 INT WORKSH VAR MOD, P29
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   XIE X, 2010, UTDCS710
   Zhang W, 2006, REQUIR ENG, V11, P205, DOI 10.1007/s00766-006-0033-x
   Zhou Z.Q., 2004, P 8 INT S FUT SOFTW, P346
   FEATURE MODEL PLUG I
   AHEAD TOOL SUITE
   FAMA FRAMEWORK
   MOSKITT FEATURE MODE
   [No title captured]
NR 58
TC 44
Z9 51
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 245
EP 258
DI 10.1016/j.infsof.2010.11.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huysmans, P
   Ven, K
   Verelst, J
AF Huysmans, Philip
   Ven, Kris
   Verelst, Jan
TI Using the DEMO methodology for modeling open source software development
   processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process modeling; Open source software; DEMO; Enterprise
   ontology
ID SELF-ORGANIZATION; QUALITY; VALIDATION
AB Context: Open source software development (OSSD) process modeling has received increasing interest in recent years. These efforts aim to identify common elements in the development process between multiple open source software (OSS) projects. However, the complexity inherent to OSSD process modeling puts significant demands on the modeling language.
   Objective: In this paper, we propose that the Design and Engineering Methodology for Organizations (DEMO) may provide an interesting alternative to develop OSSD process models. DEMO exhibits two unique features within the context of OSSD process modeling. First, DEMO analyzes processes at the ontological level and provides high-level process descriptions, instead of focusing on the implementation level. Second, DEMO studies the communication patterns between human actors, instead of the sequences in which activities are performed.
   Method: We investigate the feasibility of using DEMO to construct OSSD process models by means of a case study. DEMO models were constructed to describe the NetBeans Requirements and Release process. In addition, the quality of these DEMO models was evaluated using a quality framework for conceptual modeling.
   Results: Our results showed that our DEMO models exhibited a high level of abstraction, thereby reducing the complexity of the OSSD process models. In addition, the evaluation of the models developed in this paper by using the quality framework for conceptual modeling showed that the models were of high quality.
   Conclusions: We have shown that the DEMO methodology can be successfully used to model OSSD processes and to obtain abstract and high-quality OSSD process models. However, given some potential drawbacks with respect to understandability and implementability, we primarily propose the use of DEMO within OSSD process modeling as an analysis tool that should be complemented with other techniques and models for communication and reenactment purposes. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Huysmans, Philip; Ven, Kris; Verelst, Jan] Univ Antwerp, Dept Management Informat Syst, B-2000 Antwerp, Belgium.
C3 University of Antwerp
RP Ven, K (corresponding author), Univ Antwerp, Dept Management Informat Syst, Prinsstr 13, B-2000 Antwerp, Belgium.
EM philip.huysmans@ua.ac.be; kris.ven@ua.ac.be; jan.verelst@ua.ac.be
CR Atkinson DC, 2007, INFORM SOFTWARE TECH, V49, P493, DOI 10.1016/j.infsof.2006.07.006
   Barjis J, 2007, ENTERP INFORM SYST, V1, P365, DOI 10.1080/17517570701646590
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Carvalho L, 2005, INFORM SOFTWARE TECH, V47, P113, DOI 10.1016/j.infsof.2004.06.005
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   CROWSTON K, 2004, P 1 INT WORKSH COMP
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   DEJOODE RV, 2007, EMERGING FREE OPEN S, P96
   DERNIAME JC, 1999, LECT NOTES COMPUTER, V1500
   DIETZ J, 2005, P 10 INT C LANG ACT
   Dietz J.L. G., 2006, ENTERPRISE ONTOLOGY
   Dietz JLG, 2006, COMMUN ACM, V49, P59
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Feller J, 2006, INT FED INFO PROC, V208, P261
   Flores F., 1980, DECIS SUPPORT SYST, V11, P95
   FOX C, 1994, INFORM PROCESS MANAG, V30, P9, DOI 10.1016/0306-4573(94)90020-5
   Gallivan MJ, 2001, INFORM SYST J, V11, P277, DOI 10.1046/j.1365-2575.2001.00108.x
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Habermas Jurgen., 2002, On the Pragmatics of Social Interaction: Preliminary Studies in the Theory of Communicative Action
   HAMMER M, 1990, HARVARD BUS REV, V68, P104
   Jensen C., 2005, Software Process Improvement and Practice, V10, P255, DOI 10.1002/spip.228
   JENSEN C, 2005, P 38 HAW INT C SYST
   JENSEN C, 2004, P WORKSH MIN SOFTW R
   JENSEN C, 2004, 1 LOOK NETBEANS REQU
   JENSEN C, 2008, P 3 INT WORKSH PUBL
   JENSEN C, 2003, TAKING STOCK BAZAAR, P75
   Jensen C, 2007, INT FED INFO PROC, V234, P265
   JENSEN SC, 2006, LECT NOTES COMPUTER, V3840, P449
   Kesh S, 1995, INFORM SOFTWARE TECH, V37, P681, DOI 10.1016/0950-5849(96)81745-9
   Kettunen P, 2005, INFORM SOFTWARE TECH, V47, P587, DOI 10.1016/j.infsof.2004.11.001
   LAND MO, 2009, P 2009 ACM S APPL CO, P245
   LEVITIN A, 1995, INFORM PROCESS MANAG, V31, P81, DOI 10.1016/0306-4573(94)00030-7
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Lonchamp J, 2005, INT SER SOFTW ENG, V10, P29
   Mi PW, 1996, DECIS SUPPORT SYST, V17, P313, DOI 10.1016/0167-9236(96)00007-3
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moody DL, 2003, INFORM SYST, V28, P619, DOI 10.1016/S0306-4379(02)00043-1
   Moody DL, 1994, LECT NOTES COMPUT SC, V881, P94
   MULDER H, 2006, THESIS TU DELFT DELF
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SCACCHI W, 2002, ENCY SOFTWARE ENG, P993
   Scacchi W., 2007, PAPER PRESENTED EURO, P459, DOI [DOI 10.1145/1287624.1287689, 10.1145/1287624.1287689.]
   SCACCHI W, 2005, P 1 INT C OP SOURC S
   SCACCHI W, 2004, 5 INT WORKSH SOFTW P
   Scacchi W, 2006, INT J INF TECHNOL WE, V1, P49, DOI 10.4018/jitwe.2006070104
   Soffer P, 2007, J ASSOC INF SYST, V8, P175, DOI 10.17705/1jais.00119
   Stamper R, 2000, BEHAV INFORM TECHNOL, V19, P15, DOI 10.1080/014492900118768
   STRIJDHAFTIG D, 2008, THESIS DELFT U TECHN
   Van Nuffel D, 2009, LECT NOTES BUS INF P, V34, P115
   Yin R.K., 2011, Qualitative research from start to finish
   Yu LG, 2008, INFORM SOFTWARE TECH, V50, P361, DOI 10.1016/j.infsof.2007.02.018
NR 55
TC 7
Z9 8
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 656
EP 671
DI 10.1016/j.infsof.2010.02.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 602PE
UT WOS:000278150500006
DA 2024-07-18
ER

PT J
AU El Yamany, HF
   Capretz, MAM
   Allison, DS
AF El Yamany, Hany F.
   Capretz, Miriam A. M.
   Allison, David S.
TI Intelligent security and access control framework for service-oriented
   architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SOA; Web Services; Intelligent security; Web 2.0; Data mining
AB One of the most significant difficulties with developing Service-Oriented Architecture (SOA) involves meeting its security challenges, since the responsibilities of SOA security are based on both the service providers and the consumers. In recent years, many solutions to these challenges have been implemented, such as the Web Services Security Standards, including WS-Security and WS-Policy. However, those standards are insufficient for the new generation of Web technologies, including Web 2.0 applications. In this research, we propose an intelligent SOA security framework by introducing its two most promising services: the Authentication and Security Service (NSS), and the Authorization Service (AS). The suggested autonomic and reusable services are constructed as an extension of WS- security standards, with the addition of intelligent mining techniques, in order to improve performance and effectiveness. In this research, we apply three different mining techniques: the Association Rules, which helps to predict attacks, the Online Analytical Processing (OLAP) Cube, for authorization, and clustering mining algorithms, which facilitate access control rights representation and automation. Furthermore, a case study is explored to depict the behavior of the proposed services inside an SOA business environment. We believe that this work is a significant step towards achieving dynamic SOA security that automatically controls the access to new versions of Web applications, including analyzing and dropping suspicious SOAP messages and automatically managing authorization roles. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Capretz, Miriam A. M.; Allison, David S.] Univ Western Ontario, Fac Engn, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
   [El Yamany, Hany F.] Suez Canal Univ, Fac Comp & Informat, Dept Comp Sci, Ismailia, Egypt.
C3 Western University (University of Western Ontario); Egyptian Knowledge
   Bank (EKB); Suez Canal University
RP Capretz, MAM (corresponding author), Univ Western Ontario, Fac Engn, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
EM hyamany@eun.eg; mcapretz@uwo.ca; dallison@uwo.ca
RI ElYamany, Hany/AAW-3003-2020; Capretz, Miriam A. M./G-2362-2014
OI Capretz, Miriam A. M./0000-0002-1380-971X; ElYamany,
   Hany/0000-0003-2309-9560
CR *ACT COOP, 2004, WEB SERV SEC THREAT
   ALLISON DS, 2009, P 5 IEEE INT WORKSH
   [Anonymous], 2002, XML ENCRYPTION SYNTA
   [Anonymous], 2005, Enterprise SOA: service-oriented architecture best practices
   [Anonymous], Web Service Security Standards
   [Anonymous], 2007, Web Services Policy 1.5 - Framework
   [Anonymous], 2009, ADVENTUREWORKSDW DAT
   Bertino E, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P7, DOI 10.1109/ISADS.2007.7
   CHANLIAU M, ORACLE WEB SERVICES
   Chu K., 2006, Oracle  SOA Suite Developer ' s Guide
   D'Agostine D., 2006, INNOVATIONS MAGAZINE, P12
   Emig C., 2007, P IEEE INT C SOFTW E, P57
   Epstein J, 2006, IEEE SECUR PRIV, V4, P80, DOI 10.1109/MSP.2006.23
   Erl T, 2005, SERVICE ORIENTED ARC
   Geer D, 2003, COMPUTER, V36, P14, DOI 10.1109/MC.2003.1236464
   Graham S., 2005, BUILDING WEB SERVICE, V2nd
   HANY F, 2008, P 3 IEEE INT C DIG M, P75
   HANY F, 2008, P 3 IEEE INT C CONV, V1, P551
   *HEWL PACK DEV CO, 2007, SEC WEB 2 0 AR YOUR
   *IBM CORP, 2007, UND SOA SEC DES IMPL
   Kanneganti R., 2008, SOA SECURITY
   LIU M, 2005, P INT C MACH LEARN C, V2, P1302
   Loh YS, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PTS 1 AND 2, PROCEEDINGS, P1147, DOI 10.1109/ICCIAS.2006.295443
   MALEK M, 2004, P IEEE IFIP NETW OP, P175
   *OASIS, WEB SERV SEC 3 SOAP
   *OASIS, 2005, EXTENSIBLE ACC CONTR
   *OASIS STAND, 2005, SAML V2 0 EX OV
   Priebe Torsten, 2007, Journal of Software, V2, P27, DOI 10.4304/jsw.2.1.27-38
   Rahaman MA, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P471
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Seifert J.W., 2007, Data mining and homeland security: An overview
   Shen HB, 2006, SEVENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING, APPLICATIONS AND TECHNOLOGIES, PROCEEDINGS, P74
   Tang Z.H., 2005, DATA MINING SQL SERV
   Viega J, 2006, IEEE SECUR PRIV, V4, P25, DOI 10.1109/MSP.2006.110
   Zhang X., 2006, P 2006 INT C ARTIFIC, P44
   WS FEDERATION
   2002, OGSA SECURITY ROADMA
NR 37
TC 14
Z9 17
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 220
EP 236
DI 10.1016/j.infsof.2009.10.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400008
DA 2024-07-18
ER

PT J
AU Karhu, K
   Taipale, O
   Smolander, K
AF Karhu, Katja
   Taipale, Ossi
   Smolander, Kari
TI Investigating the relationship between schedules and knowledge transfer
   in software testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Schedule over-runs; Knowledge transfer; Survey; Case
   study
ID PRINCIPLES; MANAGEMENT; SYSTEMS
AB This empirical study investigates the relationship between schedules and knowledge transfer in software testing. In our exploratory Survey, statistical analysis indicated that increased knowledge transfer between testing and earlier phases of software development was associated with testing schedule over-runs. A qualitative case study was conducted to interpret this result. We found that this relationship can be explained with the size and complexity of software, knowledge management issues, and customer involvement. We also found that the primary strategies for avoiding testing schedule over-runs were reducing the scope of testing, leaving out features from the software, and allocating more resources to testing. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Karhu, Katja; Taipale, Ossi; Smolander, Kari] Lappeenranta Univ Technol, Dept Informat Technol, Lab Informat Proc, Lappeenranta 53851, Finland.
C3 Lappeenranta-Lahti University of Technology LUT
RP Smolander, K (corresponding author), Lappeenranta Univ Technol, Dept Informat Technol, Lab Informat Proc, POB 20, Lappeenranta 53851, Finland.
EM katja.karhu@lut.fi; ossi.taipale@lut.fl; kari.smolander@lut.fi
RI Smolander, Kari/B-4581-2015
OI Smolander, Kari/0000-0002-7043-0458
CR [Anonymous], 1994, CHAOS REP
   [Anonymous], 155041 ISOIEC
   [Anonymous], 6 INT SPICE C SOFTW
   [Anonymous], 1995, Software Engineering
   [Anonymous], P IFIP TC8 WG 8 2
   Argote L, 2000, ORGAN BEHAV HUM DEC, V82, P150, DOI 10.1006/obhd.2000.2893
   AUSTIN RD, 2001, INFORM SYST RES, V12, P197
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Baskerville R, 2001, INT FED INFO PROC, V66, P49
   Baskerville R, 2001, COMPUTER, V34, P51, DOI 10.1109/2.920612
   BECKER MC, 2003, DRUID SUMM C CREAT S
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Carter C., 2001, The Journal of Supply Chain Management, P12, DOI 10.1111/j.1745-493X.2001.tb00102.x
   COHEN CF, 2004, COMMUNICATIONS ACM, V47
   CONRADI R, 2001, 8 EUR SOFTW ENG C HE, P268
   Cowan R., 2000, Industrial and Corporate Change, V9, P211, DOI DOI 10.1093/ICC/9.2.211
   CRONBACH LJ, 1951, PSYCHOMETRIKA, V16, P297, DOI [10.1007/BF02310555, DOI 10.1007/BF02310555]
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Denzin N.K., 1978, RES ACT THEORETICAL
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   EMAM KE, 1998, SPICE THEORY PRACTIC
   Fink A., 1985, How to conduct surveys: A step-by-step guide
   Foray Dominique., 2004, The Economics of Knowledge
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Graham D, 2002, IEEE SOFTWARE, V19, P15, DOI 10.1109/MS.2002.1032845
   HAIKALA I, 2004, OHJELMISTOTUOTANTO T
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   *ISO IEC, 2004, 155045 ISOIEC
   KARHU K, 2007, 11 INT C EV ASS SOFT, P53
   KEIL M, 1998, COMMUNICATIONS ACM, V41
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Koomen T., 1999, TEST PROCESS IMPROVE
   Krovi R, 2003, COMMUN ACM, V46, P77, DOI 10.1145/606272.606277
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Ng SP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P116, DOI 10.1109/ASWEC.2004.1290464
   NONAKA I, 1994, ORG SCI, V5
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   PYHAJARVI M, 2003, 36 HAW INT C SYST SC
   Robson C., 2002, Real world research
   *SCI SOFTW, ATL TI KNOWL WORKB
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SIMON HA, 1954, J AM STAT ASSOC, V49, P467, DOI 10.2307/2281124
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   SMOLANDER K, 2005, 13 EUR C INF SYST IN, P26
   Spender JC, 1996, STRATEGIC MANAGE J, V17, P5, DOI 10.1002/smj.4250171103
   *SPSS, 2004, SPSS 12 0 WIND
   Strauss A., 1990, BASICS QUALITATIVE R
   Suchman L., 1989, Notes on Computer Support for Cooperative Work
   Szulanski G, 1996, STRATEGIC MANAGE J, V17, P27, DOI 10.1002/smj.4250171105
   Taipale O, 2005, LECT NOTES COMPUT SC, V3792, P39
   TAIPALE O, 2007, 1 INT S EMP SOFTW EN, P21
   TAIPALE O, 2006, TRIANGULATING TESTIN, P34
   TAIPALE O, 2006, ISESE 2006, P262
   TAIPALE O, 2006, SOFTWARE TESTING
   Taipale O, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P283
   Torkar R, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/SWSTE.2003.1245437
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Whittaker B., 1999, Information Management & Computer Security, V7, P23, DOI 10.1108/09685229910255160
NR 64
TC 8
Z9 10
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 663
EP 677
DI 10.1016/j.infsof.2008.09.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 400TM
UT WOS:000262891500010
DA 2024-07-18
ER

PT J
AU Kofron, J
   Plásil, F
   Sery, O
AF Kofron, Jan
   Plasil, Frantiek
   Sery, Ondrej
TI Modes in component behavior specification via EBP and their application
   in product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Behavior specification; Component modes; Software product lines
AB The concept of software product lines (SPL) is a modern approach to software development simplifying construction of related variants of a product thus lowering development costs and shortening time-to-market. In SPL, software components play an important role. In this paper, we show how the original idea of component mode can be captured and further developed in behavior specification via the formalism of extended behavior protocols (EBP). Moreover, we demonstrate how the modes in behavior specification can be used for modeling behavior of an entire product line. The main benefits include (i) the existence of a single behavior specification capturing the behavior of all product variants, and (ii) automatic verification of absence Of Communication errors among the cooperating components taking the variability into account. These benefits are demonstrated on a part of a non-trivial case study. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Kofron, Jan; Plasil, Frantiek; Sery, Ondrej] Charles Univ Prague, Prague 11800 1, Czech Republic.
   [Kofron, Jan; Plasil, Frantiek] Acad Sci Czech Republ, Inst Comp Sci, Prague 18207 8, Czech Republic.
C3 Charles University Prague; Czech Academy of Sciences; Institute of
   Computer Science of the Czech Academy of Sciences
RP Sery, O (corresponding author), Charles Univ Prague, Malostranske Namesti 25, Prague 11800 1, Czech Republic.
EM jan.kofron@dsrg.mff.cuni.cz; frantisek.plasil@dsrg.mff.cuni.cz;
   ondrej.seryo@dsrg.mff.cuni.cz
RI Kofroň, Jan/J-3593-2017; Plasil, Frantisek/A-3163-2009
OI Kofroň, Jan/0000-0003-0391-4812; 
FU Czech Academy of Sciences [IET400300504];  [201/08/0266]
FX This work was partially supported by the Czech Republic project
   201/08/0266 and the Czech Academy of Sciences project IET400300504.
CR ADAMEK J, 2004, J SOFTWARE MAINTENAN, V17
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 1988, MITLCSTM373
   [Anonymous], 1999, Concurrency-state models and Java programs
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Bernardo M, 2002, ACM T SOFTW ENG METH, V11, P386, DOI 10.1145/606612.606614
   BRATAAS G, 2007, P INT SPLC WORKSH DY, P10
   Brim L., 2006, SIGSOFT SOFTW ENG NO, V31, P4
   Bruneton E, 2004, LECT NOTES COMPUT SC, V3054, P7
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   DEALFARO L, 2001, P 9 ANN S FDN SOFTW, P109
   Garg A, 2003, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.2003.1235443
   GOMAA H, 2007, SEAMS 07, P7
   HAPPE J, 2006, ELECT NOTES COMPUTER, P41
   Hendrickson SA, 2007, PROC INT CONF SOFTW, P189
   Hirsch D, 2006, LECT NOTES COMPUT SC, V4344, P113
   Kim J.S., 2006, ROSATEA '06, P70
   KOFRON J, 2007, THESIS CHARLES U PRA
   MACH M, 2005, INT J COMPUT INF SCI, P22
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   PLASILM F, 2002, IEEE T SOFTWARE ENG, V28
   Rausch A., 2008, LNCS, V5153
   Riebisch M, 2003, LECT NOTES COMPUT SC, V3013, P165
   ROBERTO DB, 2006, MODELING FEATURES AS
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sinnema M., 2004, P 2 GRON WORKSH SOFT
   *SUN, SUN ENT JAV BEANS
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Thiel S., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P130
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
NR 32
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 31
EP 41
DI 10.1016/j.infsof.2008.09.011
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500005
DA 2024-07-18
ER

PT J
AU Beecham, S
   Baddoo, N
   Hall, T
   Robinson, H
   Sharp, H
AF Beecham, Sarah
   Baddoo, Nathan
   Hall, Tracy
   Robinson, Hugh
   Sharp, Helen
TI Motivation in Software Engineering: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE motivation; Software Engineering; Software Engineer; characteristics;
   personality; systematic literature review
ID JOB-SATISFACTION; PEOPLE DIFFERENT; PRACTITIONERS; PERCEPTIONS;
   DEVELOPERS
AB Objective: In this paper, we present a systematic literature review of motivation in Software Engineering. The objective of this review is to plot the landscape of current reported knowledge in terms of what motivates developers, what de-motivates them and how existing models address motivation.
   Methods: We perform a systematic literature review of peer reviewed published studies that focus on motivation in Software Engineering. Systematic reviews are well established in medical research and are used to systematically analyse the literature addressing specific research questions.
   Results: We found 92 papers related to motivation in Software Engineering. Fifty-six percent of the studies reported that Software Engineers are distinguishable from other occupational groups. Our findings suggest that Software Engineers are likely to be motivated according to three related factors: their 'characteristics' (for example, their need for variety); internal 'controls' (for example, their personality) and external 'moderators' (for example, their career stage). The literature indicates that de-motivated engineers may leave the organisation or take more sick-leave, while motivated engineers will increase their productivity and remain longer in the organisation. Aspects of the job that motivate Software Engineers include problem solving, working to benefit others and technical challenge. Our key finding is that the published models of motivation in Software Engineering are disparate and do not reflect the complex needs of Software Engineers in their career stages, cultural and environmental settings.
   Conclusions: The literature on motivation in Software Engineering presents a conflicting and partial picture of the area. It is clear that motivation is context dependent and varies from one engineer to another. The most commonly cited motivator is the job itself, yet we found very little work on what it is about that job that Software Engineers find motivating. Furthermore, surveys are often aimed at how Software Engineers feel about 'the organisation', rather than 'the profession'. Although models of motivation in Software Engineering are reported in the literature, they do not account for the changing roles and environment in which Software Engineers operate. Overall, our findings indicate that there is no clear understanding of the Software Engineers' job, what motivates Software Engineers, how they are motivated, or the outcome and benefits of motivating Software Engineers. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Beecham, Sarah; Baddoo, Nathan; Hall, Tracy] Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
   [Robinson, Hugh; Sharp, Helen] Open Univ, Dept Comp, Fac Math & Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 University of Hertfordshire; Open University - UK
RP Beecham, S (corresponding author), Univ Hertfordshire, Sch Comp Sci, Coll Lane Campus, Hatfield AL10 9AB, Herts, England.
EM S.Beecham@herts.ac.uk
RI Beecham, Simon C/M-1544-2016
OI Hall, Tracy/0000-0002-2728-9014; Sharp, Helen/0000-0003-4376-1734
CR Agarwal R., 1998, Proceedings of the 1998 ACM SIGCPR Conference, P292, DOI 10.1145/279179.279223
   Agarwal R., 2000, Proceedings of the 2000 ACM SIGCPR Conference, P158, DOI 10.1145/333334.333384
   Agarwal R, 2002, COMMUN ACM, V45, P73, DOI 10.1145/567498.567502
   Agarwal R, 2001, COMMUN ACM, V44, P58, DOI 10.1145/379300.379314
   Agarwal R., 2002, Proceedings from SIGMIS-CPR, 2002, Kristianland, Norway, P14
   AGARWAL R., 2002, Proceedings of the 2002 ACM SIGCPR conference on Computer personnel research, P126
   Almstrum VL, 2003, COMMUN ACM, V46, P51, DOI 10.1145/903893.903920
   ANDERSEN ES, 2002, P 2002 ACM SIGCPR C, P65, DOI DOI 10.1145/512374.512375
   [Anonymous], P 28 HAW INT C SYST
   [Anonymous], COMPUTER PERSONNEL
   [Anonymous], COMMUNICATIONS ACM
   Baddoo N., 2006, Software Process Improvement and Practice, V11, P219, DOI 10.1002/spip.265
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BAROUDI JJ, 1986, COMMUN ACM, V29, P546, DOI 10.1145/5948.5953
   Bartol KM, 1982, MIS QUART, V6, P49, DOI 10.2307/248991
   BEECHAM S, 2006, 452 U HERTF FAC ENG
   BOEHM BW, 1981, ENG EC
   Burn J. M., 1994, Proceedings of the 1994 ACM SIGCPR Conference, P231, DOI 10.1145/186281.186327
   BURN JM, 1992, INFORM MANAGE, V22, P269, DOI 10.1016/0378-7206(92)90074-P
   BURN JM, 1995, SIGCPR COMPUT PERS, V16, P11
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Carayon P., 2003, P SIGMIS C, P58, DOI DOI 10.1145/761849.761859
   CHECCHIO RA, 1990, P 3 IFAC IFIP WORKSH, P81
   CHELSON JV, 2005, MANAGEMENT ENG SCI T
   CHENEY PH, 1984, INFORM MANAGE, V7, P209, DOI 10.1016/0378-7206(84)90020-X
   COUGER D, 1980, MOTIVATING MANAGING
   COUGER DJ, 1987, J MANAGEMENT INFORM, V4, P82
   Couger J. D., 1992, International Information Systems, V1, P16
   COUGER JD, 1988, J SYST MANAGE, V39, P36
   COUGER JD, 1990, INFORM MANAGE, V18, P41, DOI 10.1016/0378-7206(90)90062-M
   COUGER JD, 1978, DATAMATION, V24, P116
   COUGER JD, 1987, P 20 HAW INT C SYST, V4, P370
   COUGER JD, 1989, P 22 ANN HAW INT C S, V4, P316
   Crepeau R. G., 1992, Journal of Management Information Systems, V9, P145
   CROOK CW, 1991, SIGCPR COMPUT PERS, V13, P2
   DARCY DP, 2005, HICSS 05
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   DITTRICH JE, 1985, INFORM MANAGE, V9, P67, DOI 10.1016/0378-7206(85)90028-X
   Ferrat T.W., 2004, P 2004 ACM SIGMIS C, P25
   Ferratt T. W., 1986, Management Information Systems Quarterly, V10, P377, DOI 10.2307/249193
   FERRATT TW, 1988, MIS QUART, V12, P427, DOI 10.2307/249210
   FERRATT TW, 2003, P ACM SIGMIS CPR C, P168
   Frangos SA, 1998, MICROPROCESS MICROSY, V21, P605, DOI 10.1016/S0141-9331(98)00062-3
   FUJIGAKI Y, 1990, P 3 INT S N HOLL, P255
   Gambill SE, 2000, INFORM MANAGE-AMSTER, V37, P217, DOI 10.1016/S0378-7206(99)00053-1
   Garden A.-M., 1988, Computer Personnel, V11, P6, DOI 10.1145/54127.54129
   Garden A.-M., 1988, Computer Personnel, V11, P10, DOI 10.1145/54127.54130
   GARZA AI, 2003, P ANN M DEC SCI I, P1067
   Glass R., 2003, FACTS FALLACIES SOFT
   GOLDSTEIN DK, 1984, MIS QUART, V8, P103, DOI 10.2307/249347
   GOLDSTEIN DK, 1988, P ACM SIGCPR C MAN I, P148, DOI DOI 10.1145/57216.57237
   Hackman J.R. e., 1976, Motivation Through the Design of Work: Test of a Theory, Organizational Behavior and Human Performance, n
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Herzberg F., 1959, MOTIVATION WORK
   Honda K., 1985, Proceedings of COMPSAC 85. The IEEE Computer Society's Ninth International Computer Software and Applications Conference (Cat. No.85CH2221-0), P241
   Hsu M.K., 2003, DATA BASE ADV INF SY, V34, P64, DOI DOI 10.1145/957758.957766
   Hsu MK, 2003, INFORM MANAGE-AMSTER, V40, P361, DOI 10.1016/S0378-7206(02)00018-6
   Igbaria M, 1995, J STRATEGIC INF SYST, V4, P319, DOI 10.1016/0963-8687(95)80002-8
   IM JH, 1990, MIS QUART, V14, P1, DOI 10.2307/249299
   ITUMA A, 2006, NIG P 2006 ACM SIGMI, P205
   Jordan E., 1994, Proceedings of the 1994 ACM SIGCPR Conference, P57, DOI 10.1145/186281.186295
   KANDEEL H, 2001, 2001 INF RES MAN ASS, P117
   KANDEEL H, 2001, INF RES MAN ASS INT, P117
   Khalil O. E. M., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P187, DOI 10.1145/268820.268884
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2006, EASE 2006 10 INT C E, P89
   Klenke K., 1992, Proceedings of the 1992 ACM SIGCPR Conference, P171, DOI 10.1145/144001.144056
   KYM H, 1992, P 1992 ACM SIGCPR C, P184
   LEDUC ALJ, 1980, SIGMIS DATABASE, V11, P4
   Lee JYB, 2002, IEEE T MULTIMEDIA, V4, P38, DOI 10.1109/6046.985552
   Lee P. C. B., 2002, P 2002 ACM SIGCPR C, P145, DOI DOI 10.1145/512360.512393
   Lending D., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P127, DOI 10.1145/268820.268877
   LI Y, 2006, P 2006 ACM SIGMIS CP, P34
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Mak BL, 2001, INFORM MANAGE-AMSTER, V38, P265, DOI 10.1016/S0378-7206(00)00055-0
   Mannaro K, 2004, LECT NOTES COMPUT SC, V3092, P166
   Maslow A. H., 1954, MOTIVATION PERSONALI
   MATATOLEDO RA, 1985, SIGCPR COMPUT PERS, V10, P1
   McClelland DavidC., 1975, POWER INNER EXPERIEN
   MCCONNELL S, 1998, IEEE SOFTWARE, V15, P126
   McLean ER, 1996, INFORM MANAGE-AMSTER, V30, P291, DOI 10.1016/S0378-7206(96)01059-2
   MILLER WC, 1993, HICSS 93, V4, P378
   *MOMSE CFS, 2005, EP50572721 MOMSE CFS
   MOORE JE, 1991, P 1991 C SIGCPR, P140
   Morales A. W., 2005, Software Development, V13, P32
   Myers M. E., 1992, Proceedings of the 1992 ACM SIGCPR Conference, P350, DOI 10.1145/144001.144103
   MYERS ME, 1991, SIGCPR COMPUT PERS, V13, P44
   NELSON AC, 2001, P 2001 ACM SIGCPR C, P74
   Niederman F., 2001, SIGCPR. 2001, P11, DOI [10.1145/371209.371210, DOI 10.1145/371209.371210]
   Niederman F., 2003, SIGMIS Conference ACM, P133
   Peters L, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P61, DOI 10.1109/IEMC.2003.1252232
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   *PROJ LINK, MOT HOUS
   RAMACHANDRAN S, 2006, P 2006 ACM SIGMIS CP, P198
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Reid M.F., 2006, P 2006 ACM SIGMIS CP, P321
   Richens E., 1998, Proceedings of the 1998 ACM SIGCPR Conference, P289, DOI 10.1145/279179.279222
   RIDINGS CM, 1999, SIGCPR COMPUT PERS, V20, P7
   ROBERTS J, 2004, UNDERSTANDING MOTIVA
   Rubin H.I., 1988, Proceedings of the ACM SIGCPR on Management of Information System Personnel, P62, DOI DOI 10.1145/57216.57225
   SANTANA M, 1995, SIGCPR COMPUT PERS, V16, P20
   Scherer PW, 1996, DR DOBBS J, V21, P80
   SMITH DC, 2006, P 2006 ACM SIGMIS CP, P123
   Smits S. J., 1992, Proceedings of the 1992 ACM SIGCPR Conference, P314, DOI 10.1145/144001.144093
   Smits S. J., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P36, DOI 10.1145/268820.268865
   Sumner M., 2005, P 2005 ACM SIGMIS CP, P75
   Tanner FR, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P214, DOI 10.1109/IEMC.2003.1252263
   Tanniru M. R., 1981, Proceedings of the Eighteenth Annual Computer Personnel Research Conference, P224, DOI 10.1145/800051.801854
   Thatcher J.B., 2002, Proceedings of the Association for Computer Machinery Special Interest Group on Computer Personnel Research, P25
   THOMAS SA, 1996, 1996 INT C SOFTW ENG, P474
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   Wynekoop JL, 1998, DATA BASE ADV INF SY, V29, P62
   YOURDON E, 2005, OUTSOURCE COMPETING
   Zawacki R. A., 1992, Information Systems Management, V9, P73, DOI 10.1080/10580539208906871
NR 114
TC 271
Z9 305
U1 4
U2 94
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 860
EP 878
DI 10.1016/j.infsof.2007.09.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, SJ
   Chiu, NH
   Liu, YJ
AF Huang, Sun-Jen
   Chiu, Nan-Hsing
   Liu, Yu-Jen
TI A comparative evaluation on the accuracies of software effort estimates
   from clustered data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software project management; software effort estimation; data
   clustering; effort driver
ID GENETIC ALGORITHM; COST ESTIMATION; REGRESSION; ANALOGY; MODELS
AB Precision in estimating the required software development effort plays a critical factor in the success of software project management. Most existing software effort estimation models only compare the accuracies of software effort estimates from the historical data without clustering. A potential factor that can affect the accuracies of the established effort estimation models is the homogeneity of the data. However, such investigation on the effects of the accuracies of the derived effort estimates is seldom explored in software effort estimation literature. Therefore, this paper aims to explore the effects of accuracies of the software effort estimation models established from the clustered data by using the International Software Benchmarking Standards Group (ISBSG) repository. The ordinary least square (OLS) regression method is adopted to establish a respective effort estimation model in each cluster of datasets. The empirical experiment results show that the estimation accuracies do not reveal significant differences within the respective dataset clustered by each software effort driver. It also demonstrates that software effort estimation models from the clustered data present almost similar accuracy results compared to models from the entire data without clustering. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Huang, Sun-Jen; Liu, Yu-Jen] Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei 106, Taiwan.
   [Chiu, Nan-Hsing] Ching Yun Univ, Dept Informat Management, Tao Yuan, Taiwan.
C3 National Taiwan University of Science & Technology; Chien Hsin
   University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43,Sec 4,Keelung Rd, Taipei 106, Taiwan.
EM huangsj@mail.ntust.edu.tw
CR [Anonymous], ICL TECHNICAL J
   [Anonymous], P 8 IEEE S SOFTW MET
   [Anonymous], SOFTWARE ENG MAT MOD
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], APPL INTELL IN PRESS
   [Anonymous], P EASE
   [Anonymous], P 7 INT S SOFTW METR
   [Anonymous], IEEE P INT TRANSP SY
   [Anonymous], 11 IEEE INT SOFTW ME
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], TR9905 KEEL U DEP CO
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Brown AM, 2005, COMPUT METH PROG BIO, V79, P89, DOI 10.1016/j.cmpb.2005.02.007
   Chen Z., 2005, P 2005 WORKSH PRED M
   Chiu CC, 2004, EXPERT SYST APPL, V26, P443, DOI 10.1016/j.eswa.2003.10.003
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Forgács E, 1999, CHEMOMETR INTELL LAB, V47, P157, DOI 10.1016/S0169-7439(98)00203-2
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JEFFERY R, 2000, P ESCOM SCOPE 2000 M, P239
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kaczmarek J, 2004, INFORM SOFTWARE TECH, V46, P589, DOI 10.1016/j.infsof.2003.11.001
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   KITCHENHAM BA, 1985, J SYST SOFTWARE, V5, P267, DOI 10.1016/0164-1212(85)90026-3
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Neto AM, 2007, IEEE INTL CONF CONTR, P793
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
NR 41
TC 9
Z9 12
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 879
EP 888
DI 10.1016/j.infsof.2008.02.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900003
DA 2024-07-18
ER

PT J
AU Hericko, M
   Zivkovic, A
AF Hericko, Marjan
   Zivkovic, Ales
TI The size and effort estimates in iterative development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE iterative development; Function Point Analysis method; object-oriented
   size estimation; effort estimates
AB The quick delivery of a functionally truncated product is one of the most common results in iterative development, and has become the predominant development approach. One of its drawbacks is the appearance of incomplete artifacts between iterations. Consequently, well-known size-estimation methods can not be used in iterative development. This paper addresses the problem of size estimation in iterative development. We present a novel approach that enables early size estimation using Unified Modeling Language (UML) artifacts. The approach incorporates self-improvement steps that increase the estimation accuracy in subsequent iterations. The demonstration of its applicability and research results are also presented. The results anticipate the possibility of a significant improvement in size and effort estimates by applying the approach presented here. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Hericko, Marjan; Zivkovic, Ales] Univ Maribor, Fac Elect Engn & Comp Sci, SI-2000 Maribor, Slovenia.
C3 University of Maribor
RP Hericko, M (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova 17, SI-2000 Maribor, Slovenia.
EM marjan.hericko@uni-mb.si
CR ALBRECHT, 1979, IBM APPL DEV S, P83
   [Anonymous], UN MOD LANG SPEC VER
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   ASSHMAN R, 2004, IT PROF, P40
   Beck K., 2001, Planning extreme programming
   Bielak J, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.895165
   *COSMIC, 197612003 ISOIEC COS
   Diab H, 2002, LECT NOTES COMPUT SC, V2495, P483
   Galorath D.D., 2006, SOFTWARE SIZING ESTI
   *IBM, 2006, RAT METH COMP RAT UN
   *IFPUG, 2004, FUNCT POINT COUNT PR
   *ISBSG, 2006, ISBSG EST BENCHM RES
   *ISBSG, 2001, PRACT PROJ EST TOOLK
   *ISO IEC, 2002, 141432 ISOIEC TR 2
   *ISO IEC, 1998, 141431 ISOIEC TR 1
   Ivar Jacobson G.B. J. R., 1999, The Unified Software Development Process
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Kaczmarek J, 2004, INFORM SOFTWARE TECH, V46, P589, DOI 10.1016/j.infsof.2003.11.001
   KARNER G, 1993, THESIS LINKOPING U S
   Laird L., 2006, Software Measurement and Estimation: A Practical Approach
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   MOSER S, 1997, P TECHN OBJ OR LANG, P340
   *OMG, 2006, UN MOD LANG SUP SPEC
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   *TOT METR, 2001, TOT METR LEV COUNT, P1
   TRENDOWICZ, 2006, ICSE 06 MAY 20 28 20, P331
   *UKSMA, 1998, UKSMA MK 2 FUNCT POI
   ZIVKOVIC, 2005, INFORMATICA LITHUANI, V16
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 30
TC 19
Z9 19
U1 2
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 772
EP 781
DI 10.1016/j.infsof.2007.08.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000012
DA 2024-07-18
ER

PT J
AU Min, JK
   Lee, CH
   Chung, CW
AF Min, Jun-Ki
   Lee, Chun-Hee
   Chung, Chin-Wan
TI XTRON: An XML data management system using relational databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; relational database; query
ID SILKROUTE
AB Recently, there has been plenty of interest in XML. Since the amount of data in XML format has rapidly increased, the need for effective storage and retrieval of XML data has arisen. Many database researchers and vendors have proposed various techniques and tools for XML data storage and retrieval in recent years. In this paper, we present an XML data management system using a relational database as a repository. Our XML management system stores XML data in a schema independent manner, and translates a comprehensive subset of XQuery expressions into a single SQL statement. Also, our system does not modify the relational engine. In this paper, we also present the experimental results in order to demonstrate the efficiency and scalability of our system compared with well-known XML processing systems. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Min, Jun-Ki] Korea Univ Technol & Educ, Sch Internet Media Engn, Cheonan 330708, Chungnam, South Korea.
   [Lee, Chun-Hee; Chung, Chin-Wan] Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea University of Technology & Education; Korea Advanced Institute of
   Science & Technology (KAIST)
RP Min, JK (corresponding author), Korea Univ Technol & Educ, Sch Internet Media Engn, Cheonan 330708, Chungnam, South Korea.
EM jkmin@kut.ac.kr; leechun@islab.kaist.ac.kr; chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR [Anonymous], 2002, P ACM SIGMOD INT C M
   BANERJEE J, 1988, IEEE T SOFTWARE ENG, V14, P1684, DOI 10.1109/32.9055
   BOAG S, 2003, XQUERY 1 0 XML QUERY
   BONCZ P, 2006, P 2006 ACM SIGMOD IN
   Bray Tim., 1998, EXTENSIBLE MARKUP LA
   CAREY MJ, 2000, P 3 INT WORKSH WEB D, P105
   CHEN Y, 2004, P 2004 ACM SIGMOD IN
   CLARKE C, 1995, COMPUTER J, V38
   COHEN E, 2002, P 21 ACM SIGMOD SIGA, P271
   COVER R, 2001, XML COVER PAGES
   DeHaan David., 2003, P 2003 ACM SIGMOD IN, P623, DOI DOI 10.1145/872757.872832
   Deutsch A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P431, DOI 10.1145/304181.304220
   FALLISIDE DC, 2001, XML SCHEMA W3C RECOM
   FANY W, 2005, P 31 INT C VER LARG
   Fernández M, 2002, ACM T DATABASE SYST, V27, P438, DOI 10.1145/582410.582413
   Fernández M, 2000, COMPUT NETW, V33, P723, DOI 10.1016/S1389-1286(00)00061-X
   Fernandez Mary., 1998, NETWORKING INFORM SY, V1, P115
   Florescu D., 1999, B TECHNICAL COMMITTE, V22, P27
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   Grust T, 2004, ACM T DATABASE SYST, V29, P91, DOI 10.1145/974750.974754
   HARDING PJ, 2003, P 29 INT C VER LARG, P1073
   Krishnamurthy R, 2004, PROC INT CONF DATA, P42, DOI 10.1109/ICDE.2004.1319983
   Li C., 2005, CIKM, P501
   LI Q, 2001, P 27 INT C VER LARG, P361
   Manolescu Ioana., 2001, VLDB 01, P241
   McHugh J., 1997, SIGMOD Record, V26, P54, DOI 10.1145/262762.262770
   Min J., 2003, P 2003 ACM SIGMOD IN, P122, DOI DOI 10.1145/872757.872775
   O'Neil P., 2004, SIGMOD, P903
   PAL S, 2005, P 31 INT C VER LARG
   SALMINEN A, 1992, ACTA LNGUISTICA HUNG, V41
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   SHANMUGASUNDARA.J, 2001, ACM RECORD, V30
   SHANMUGASUNDARA.J, 1999, P 25 INT C VER LARG
   Shanmugasundaram J, 2001, SIGMOD RECORD, V30, P20, DOI 10.1145/603867.603871
   Shanmugasundaram J, 2001, VLDB J, V10, P133, DOI 10.1007/s007780100052
   Shanmugasundaram Jayavel., 2000, P 26 INT C VERY LARG, P65
   Shimura T., 1999, Database and Expert Systems Applications. 10th International Conference, DEXA'99 (Lecture Notes in Computer Science Vol.1677), P206
   SRIVASTAVA D, 2002, P 18 INT C DAT ENG
   TATARINOV I, 2001, P 2001 ACM SIGMOD IN
   Yoshikawa Masatoshi., 2001, ACM T INTERNET TECHN, V1, P110, DOI DOI 10.1145/383034.383038
   ZHANG C, 2001, P 2001 ACM SIGMOD IN
NR 41
TC 8
Z9 9
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 462
EP 479
DI 10.1016/j.infsof.2007.05.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200008
DA 2024-07-18
ER

PT J
AU van der Aalst, WMP
   Lassen, KB
AF van der Aalst, Wil M. P.
   Lassen, Kristian Bisgaard
TI Translating unstructured workflow processes to readable BPEL: Theory and
   implementation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE BPEL4WS; Petri nets; workflow management; business process management
ID CONTROL-FLOW; NETS; VERIFICATION; INHERITANCE; MANAGEMENT; MODELS; TOOL
AB The Business Process Execution Language for Web Services (BPEL) has emerged as the de facto standard for implementing processes. Although intended as a language for connecting web services, its application is not limited to cross-organizational processes. It is expected that in the near future a wide variety of process-aware information systems will be realized using BPEL. While being a powerful language, BPEL is difficult to use. Its XML representation is very verbose and only readable for the trained eye. It offers many constructs and typically things can be implemented in many ways, e.g., using links and the flow construct or using sequences and switches. As a result only experienced users are able to select the right construct. Several vendors offer a graphical interface that generates BPEL code. However, the graphical representations are a direct reflection of the BPEL code and not easy to use by end-users. Therefore, we provide a mapping from Workflow Nets (WF-nets) to BPEL. This mapping builds on the rich theory of Petri nets and can also be used to map other languages (e.g., UML, EPC, BPMN, etc.) onto BPEL. In addition to this we have implemented the algorithm in a tool called WorkflowNet2BPEL4WS. (C) 2006 Elsevier B.V. All rights reserved.
C1 [van der Aalst, Wil M. P.] Eindhoven Univ Technol, Dept Comp Sci, NL-5600 MB Eindhoven, Netherlands.
   [van der Aalst, Wil M. P.; Lassen, Kristian Bisgaard] Univ Aarhus, Dept Comp Sci, DK-8200 Aarhus N, Denmark.
C3 Eindhoven University of Technology; Aarhus University
RP Lassen, KB (corresponding author), Eindhoven Univ Technol, Dept Comp Sci, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM w.m.p.v.d.aalst@tue.nl; k.b.lassen@daimi.au.dk
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940
CR Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2002, Workflow management: models, methods, and systems
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   Brandle M., 2003, THESIS HUMBOLDT U BE
   DEHNERT J, 2003, THESIS TU BERLIN BER
   Desel J., 1995, Cambridge Tracts in Theoret. Comput. Sci, V40
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2679, P296
   Fahland D., 2005, P 12 INT WORKSHOP AB, P131
   Farahbod R, 2004, LECT NOTES COMPUT SC, V3052, P78
   FARAHBOD R, 2004, SFUCMPTTR200403
   Ferrara A., 2004, Proceedings of the 2nd International Conference on Service-Oriented Computing, ICSOC '04, P242
   Fisteus JA, 2004, LECT NOTES COMPUT SC, V3182, P76
   Foster H, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P95, DOI 10.1145/1117696.1117716
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Fu X, 2004, LECT NOTES COMPUT SC, V3114, P510
   Fu X., 2004, P 13 INT C WORLD WID, P621
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   HINZ S, 2003, LECT NOTES COMPUTER, V2678, P220
   Jablonski S., 1996, WORKFLOW MANAGEMENT
   JENSEN K, 1997, EATCS MONOGRAPHS THE, V1
   Jungel M., 2000, WORKSHOP ALGORITHMEN, P47
   KELLER G, 1992, SEMANTISCHE PROCESSM
   Kiepuszewski B, 2003, ACTA INFORM, V39, P143, DOI 10.1007/s00236-002-0105-4
   Kiepuszewski B., 2003, THESIS QUEENSLAND U
   Kindler E, 2000, LECT NOTES COMPUT SC, V1806, P235
   Kindler E, 1999, INFORM PROCESS LETT, V70, P269, DOI 10.1016/S0020-0190(99)00074-5
   Koehler J, 2004, LECT NOTES COMPUT SC, V3290, P121
   KOSHKINA M, 2003, CS200311
   LEYMANN F., 2001, WEB SERVICES FLOW LA
   Leymann F., 1999, Production Workflow: Concepts and Techniques
   Lohmann N, 2006, LECT NOTES COMPUT SC, V4102, P17
   Martens A, 2005, LECT NOTES COMPUT SC, V3442, P19, DOI 10.1007/978-3-540-31984-9_3
   Martens A., 2003, PETRI NET NEWSLETTER, V65, P12
   *OBJ MAN GROUP, 2002, OMG UN MOD LANG 2 0
   Ouyang C, 2005, LECT NOTES COMPUT SC, V3826, P484
   OUYANG C, 2005, BPM0527
   OUYANG C, 2005, BPM0515
   Ouyang C, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P285
   Reisig W., 1998, Lecture Notes in Computer Science, V1491
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   STAHL C, 2005, 188 HUMB U
   STAHL C, 2004, THESIS HUMBOLDT U BE
   Thatte S., 2001, XLANG WEB SERVICES B
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst Wil, 2005, BETA WORKING PAPER S, V145
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P22
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3098, P1
   van der Aalst WMP, 2003, EUROMICRO CONF PROC, P298
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2002, SCI COMPUT PROGRAM, V42, P129, DOI 10.1016/S0167-6423(01)00005-3
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   van Glabbeek RJ, 2003, LECT NOTES COMPUT SC, V2678, P184
   van Hee K, 2003, LECT NOTES COMPUT SC, V2679, P337
   VANDERTOORN R, 2001, THESIS EINDHOVEN U T
   VERBEEK H., 2005, Proceedings of the Second International Workshop on Applications of Petri Nets to Coordination, Workow and Business Process Management, P59
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   WfMC, 2002, WFMCTC1025
   White S.A., 2004, Business Process Modeling Notation. BPMN 1.0. Business Process Modeling Initiative
   White Stephen., 2005, BPTrends, V3, P1
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   zur Muehlen Michael., 2004, WORKFLOW BASED PROCE
NR 65
TC 41
Z9 47
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 131
EP 159
DI 10.1016/j.infsof.2006.11.004
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100001
DA 2024-07-18
ER

PT J
AU Aburub, F
   Odeh, M
   Beeson, I
AF Aburub, Faisal
   Odeh, Mohammed
   Beeson, Ian
TI Modelling non-functional requirements of business processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE non-functional requirements; business process modelling; role activity
   diagramming; business process improvement
AB This paper presents an approach to the identification and inclusion of 'non-functional' aspects of a business process in modelling for business improvement. The notion of non-functional requirements (NFRs) is borrowed from software engineering, and a method developed in that field for linking NFRs to conceptual models is adapted and applied to business process modelling. Translated into this domain, NFRs are equated with the general or overall quality attributes of a business process, which, though essential aspects of any effective process, are not well captured in a functionally oriented process model. Using an example of a healthcare process (cancer registration in Jordan). We show how an analysis and evaluation of NFRs can be applied to a process model developed with role activity diagramming (RAD) to operationalise desirable quality features more explicitly in the model. This gives a useful extension to RAD and similar modelling methods, as well as providing a basis for business improvement. (C) 2007 Elsevier B.V. All rights reserved.
C1 Univ W England, Fac Comp Engn & Math Sci, Bristol BS16 1QY, Avon, England.
C3 University of West England
RP Aburub, F (corresponding author), Univ W England, Fac Comp Engn & Math Sci, Coldharbour Lane, Bristol BS16 1QY, Avon, England.
EM faburub@uop.edu.jo
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   [Anonymous], 1988, Principles of software engineering management
   [Anonymous], 2003, Tools for thinking: Modelling in management science
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   CHUNG L, 1993, THESIS U TORONTO
   Cysneiros L. M., 2001, Requirements Engineering, V6, P97, DOI 10.1007/s007660170008
   DAVENPORT TH, 1993, INNOVATION REENGINEE
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   Gunasekaran A, 2002, INT J PROD RES, V40, P2521, DOI 10.1080/00207540210132733
   Hammer M., 1994, REENGINEERING CORPOR
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lee KT, 2001, INT J OPER PROD MAN, V21, P687, DOI 10.1108/01443570110390408
   Lin F.-R., 2002, BUS PROCESS MANAG J, V8, P19, DOI DOI 10.1108/14637150210418610
   *NAT CANC REG, 1999, INC CANC JORD
   Ould M.A., 2005, Business Process Management: A Rigorous Approach
   Povey B., 1998, Benchmarking forQuality Management technology, V5, P27, DOI DOI 10.1108/14635779810206795
   Shin N., 2002, Business Process Management Journal, V8, P351, DOI DOI 10.1108/14637150210435008
   Skeet RG., 1991, Cancer registration. Principles and methods, P101
   TONU SA, 2005, P 1 INT WORKSH REV E, P13
NR 19
TC 27
Z9 31
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1162
EP 1171
DI 10.1016/j.infsof.2006.12.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100007
DA 2024-07-18
ER

PT J
AU Zannier, C
   Chiasson, M
   Maurer, F
AF Zannier, Carmen
   Chiasson, Mike
   Maurer, Frank
TI A model of design decision making based on empirical results of
   interviews with software designers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE design decision; rational decision making; naturalistic decision making;
   interviewing
AB Despite the impact of design decisions on software design, we have little understanding about how design decisions are made. This hinders our ability to provide design metrics, processes and training that support inherent design work. By interviewing 25 software designers and using content analysis and explanation building as our analysis technique, we provide qualitative and quantitative results that highlight aspects of rational and naturalistic decision making in software design. Our qualitative multi-case study results in a model of design decision making to answer the question: how do software designers make design decisions? We find the structure of the design problem determines the aspects of rational and naturalistic decision making used. The more structured the design decision, the less a designer considers options. (C) 2007 Elsevier B.V. All rights reserved.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   Univ Lancaster, Sch Management, Dept Management Sci, Lancaster, England.
C3 University of Calgary; Lancaster University
RP Zannier, C (corresponding author), Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
EM zannierc@cpsc.ucalgary.ca; m.chiasson@lancaster.ac.uk;
   maurer@cpsc.ucalgary.ca
OI Maurer, Frank/0000-0002-0240-715X
CR ADELSON B, 1985, IEEE T SOFTWARE ENG, V11
   Ahmed S, 2003, RES ENG DES, V14, P1, DOI 10.1007/s00163-002-0023-z
   [Anonymous], 1998, SOURCES POWER
   [Anonymous], AGILE MANIFESTO
   [Anonymous], COMMUNICATIONS ACM
   [Anonymous], PSYCHOL B
   BACH J, 1995, CHALLENGE GOOD ENOUG
   Beach L. R., 1993, DECISION MAKING ACTI
   Brehmer B., 1988, Human Judgment: The SJT View
   BRIAND LC, 1996, IEEE T SOFTWARE ENG, P22
   BRIAND LC, 2001, IEEE T SOFTWARE ENG, V27, P6
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   CLEGG C, 1994, BRIT J PSYCHOL, V85, P449, DOI 10.1111/j.2044-8295.1994.tb02535.x
   CONKLIN J, 1988, ACM T INFORM SYST, V6, P303, DOI 10.1145/58566.59297
   COOKSEY RW, 1995, JUDGMENT ANAL THEORY
   DeMarco T., 1999, PEOPLEWARE, V2nd
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Flyvberg B., 2001, Making Social Science Matter
   FOWLER M, 2001, AVOIDING REPETITION
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gasson Susan., 1998, Proceedings of ICIS '98, P224
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Guindon R., 1990, HUM-COMPUT INTERACT, V5, P305, DOI 10.1080/07370024.1990.9667157
   HERBSLEB J, 2003, EUR SOFT ENG C ACM S
   HIGHSMITH J, 2003, AGILE SOFTWARE DEV E
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   KAHNEMAN D, 1979, ECONOMETRICA, V47, P263, DOI 10.2307/1914185
   Kaner Sam., 1996, FACILITATORS GUIDE P
   Karsenty L., 1996, Proc. SIGCHI conference on humans factors in computing systems (Vancouver, P150
   KIM J, 1992, P CHI 92 C HUMAN FAC, P489
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P12
   Klein G.A., 1993, A recognition-primed decision (RPD) model of rapid decision making
   KLEIN M, 1993, IEEE COMPUT, V26, P47
   Kleinsorge I. K., 1989, International Journal of Physical Distribution & Materials Management, V19, P3, DOI 10.1108/EUM0000000000346
   KRIPPENDORFF, 1980, CONTENT ANAL V, V5
   LEE J, 1996, DESIGN RATIONALE CON
   Lipshitz R., 1993, DECISION MAKING ACTI
   LUCE, 1958, GAMES DECISIONS
   MACLEAN A, 1996, DESIGN RATIONALE CON
   MALHOTRA A, 1980, INT J MAN MACH STUD, V12, P119, DOI 10.1016/S0020-7373(80)80013-7
   MONTGOMERY H, 1993, DECISION MAKING ACTI
   Norman, 2014, THINGS MAKE US SMART
   Olson G., 1996, Design rationale: concepts, techniques, and use
   Orasanu J., 1993, DECISION MAKING ACTI
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Pennington N., 1993, DECISION MAKING ACTI
   PHILLIPS LD, 1984, ACTA PSYCHOL, V56, P29, DOI 10.1016/0001-6918(84)90005-2
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   RUGABER S, 1990, IEEE SOFTWARE
   SHUM SB, 1996, DESIGN RATIONALE CON
   SIDDAL JN, 1972, ANAL DECISION MAKING
   SIMON HA, 1973, ARTIF INTELL, V4, P181, DOI 10.1016/0004-3702(73)90011-8
   Simon HA, 1955, Q J ECON, V69, P99, DOI 10.2307/1884852
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   STIRLING WC, 2003, SATISFICING GAMES DE
   TVERSKY A, 1972, PSYCHOL REV, V79, P281, DOI 10.1037/h0032955
   Tversky Amos, 1982, JUDGMENT UNCERTAINTY
   VICENTE K, 2003, HUMAN FACTOR
   WALZ DB, 1993, COMMUNICATION ACM, V36
   Yin R.K., 2011, Qualitative research from start to finish
   ZANNIER C, 2005, WORKSH HUM SOC FACT
   TAYLORISM
   AG C
NR 65
TC 68
Z9 79
U1 0
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 637
EP 653
DI 10.1016/j.infsof.2007.02.010
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 169NU
UT WOS:000246599700009
DA 2024-07-18
ER

PT J
AU Miller, J
   Reformat, M
   Zhang, H
AF Miller, James
   Reformat, Marek
   Zhang, Howard
TI Automatic test data generation using genetic algorithm and program
   dependence graphs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software testing; automatic test case generation; genetic algorithm;
   path-oriented; program dependence graphs
ID SOFTWARE TEST DATA
AB The complexity of software systems has been increasing dramatically in the past decade, and software testing as a labor-intensive component is becoming more and more expensive. Testing costs often account for up to 50% of the total expense of software development; hence any techniques leading to the automatic generation of test data will have great potential to considerably reduce costs. Existing approaches of automatic test data generation have achieved some success by using evolutionary computation algorithms, but they are unable to deal with Boolean variables or enumerated types and they need to be improved in many other aspects. This paper presents a new approach utilizing program dependence analysis techniques and genetic algorithms (GAs) to generate test data. A set of experiments using the new approach is reported to show its effectiveness and efficiency based upon established criterion. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2G7, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2G7, Canada.
EM jm@ee.ualberta.ca; reformat@ee.ualberta.ca; hzhang@ee.ualberta.ca
OI Reformat, Marek Z./0000-0003-4783-0717
CR Back Thomas., 2000, Evolutionary computation 1: Basic algorithms and operators, V1
   BARESEL A, 2003, STRUCTURAL FUNCTIONA, P2428
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   GOLDBERG DE, 1968, GENETIC ALGORITHMS S
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HORWITZ S, 2002, P ESOP 2002 EUR S PR
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   JONES B, 1995, P 3 INT C SOFTW QUAL, V2, P435
   Korel B., 1996, SIGSOFT Software Engineering Notes, V21, P209, DOI [10.1145/229000.226319, 10.1145/226295.226319]
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P, 2003, STATE PROBLEM EVOLUT, P2488
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   MILLS HD, 1987, IEEE SOFTWARE, V4, P19, DOI 10.1109/MS.1987.231413
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   THEVENHODFOSSE P, 1998, P 1998 INT S SOFTW T
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   TRACY N, 1998, P 1998 INT S SOFTW T
   VOAS J, 1991, IEEE SOFTWARE, V8, P41, DOI 10.1109/52.73748
   WATKINS AL, 1995, PROCEEDINGS OF THE 4TH SOFTWARE QUALITY CONFERENCE, VOLS 1 AND 2, P300
   WEGENER J, 2002, AUTOMATIC TEST DATA, P1233
   WEGENER J, 2002, SUITABILITY EVOLUTIO, P287
NR 21
TC 44
Z9 54
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 586
EP 605
DI 10.1016/j.infsof.2005.06.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900013
DA 2024-07-18
ER

PT J
AU Somé, SS
AF Somé, SS
TI Supporting use case based requirements engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE use cases; domain modeling; UML; requirements engineering; prototyping
AB Use cases that describe possible interactions involving a system and its environment are increasingly being accepted as effective means for functional requirements elicitation and analysis. In the current practice, informal definitions of use cases are used and the analysis process is manual. In thus paper, we present an approach supported by a tool for use cases based requirements engineering. Our approach includes use cases formalization, a restricted form of natural language for use cases description, and the derivation of an executable specification as well as a simulation environment from use cases. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Ottawa, SITE, Ottawa, ON K1N 6N5, Canada.
C3 University of Ottawa
RP Univ Ottawa, SITE, 800 King Edward,POB 450,Stn A, Ottawa, ON K1N 6N5, Canada.
EM ssome@site.uottawa.ca
CR [Anonymous], 1998, Applying Use Cases: A Practical Guide
   [Anonymous], P SOFTW ENG RES PRAC
   BOTTGER K, 2001, INAP 2001, P186
   Cockburn A., 2001, Writing effective use cases
   Dssouli R, 1999, INFORM SOFTWARE TECH, V41, P697, DOI 10.1016/S0950-5849(99)00031-2
   FANTECHI A, 2002, RE 02
   GLINZ, 2000, P 2 WORLD C SOFTW QU, P55
   HAREL D, LECT NOTES COMPUT SC, V2088
   Harel David., 2003, COME LETS PLAY
   HEIMDAHL MPE, 1995, PROC INT CONF SOFTW, P3, DOI 10.1145/225014.225015
   HSIA P, 1994, IEEE SOFTWARE, V11, P33, DOI 10.1109/52.268953
   Jacobson I., 1998, UNIFIED SOFTWARE DEV
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   LEUE S, 1998, 13 IEEE C AUT SOFTW
   *OMG, 2001, OMG UN MOD LANG SPEC
   Plosch R., 2004, Contracts, Scenarios and Prototypes - An Integrated Approach to High Quality
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   RUMBAUGH JAMES., 1998, UNIFIED MODELING LAN
   SOME S, 1995, P 2 AS PAC SOFTW ENG
   SOME S, 2004, P INT C SOFTW EN RES, V1, P381
   SOME S, 1998, ELECT J NETW DISTRIB
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   WHITTLE J, 2000, INT C SOFTW ENG ICSE
   ZAVE P, 1993, COMPUTER, V26, P20, DOI 10.1109/2.223539
NR 24
TC 59
Z9 75
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2006
VL 48
IS 1
BP 43
EP 58
DI 10.1016/j.infsof.2005.02.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OB
UT WOS:000234397900004
DA 2024-07-18
ER

PT J
AU van Koten, C
   Gray, AR
AF van Koten, C
   Gray, AR
TI An application of Bayesian network for predicting object-oriented
   software maintainability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented systems; maintainability; Bayesian network; regression
   tree; regression
ID METRICS; MAINTENANCE; SIZE
AB As the number of object-oriented software systems increases, it becomes more important for organizations to maintain those systems effectively. However, currently only a small number of maintainability prediction models are available for object-oriented systems. This paper presents a Bayesian network maintainability prediction model for an object-oriented software system. The model is constructed using object-oriented metric data in Li and Henry's datasets, which were collected from two different object-oriented systems. Prediction accuracy of the model is evaluated and compared with commonly used regression-based models. The results suggest that the Bayesian network model can predict maintainability more accurately than the regression-based models for one system, and almost as accurately as the best regression-based model for the other system. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Otago, Dept Informat Sci, Dunedin 9001, New Zealand.
C3 University of Otago
RP Univ Otago, Dept Informat Sci, POB 56, Dunedin 9001, New Zealand.
EM ckoten@infoscience.otago.ac.nz
RI Gray, Andrew Robert/L-9161-2015
OI Gray, Andrew Robert/0000-0003-4299-2194
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2001, BAYESIAN STAT MODELL
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Boehm BW., 1981, Software Engineering Economics
   Breiman L., 1993, METRIKA
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand L. C, 2001, P 7 INT S SOFTW METR, P260
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Buntine W, 1996, IEEE T KNOWL DATA EN, V8, P195, DOI 10.1109/69.494161
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cowell R. G., 1999, Probabilistic Networks and Expert Systems, V543
   De Lucia A, 2005, INFORM SOFTWARE TECH, V47, P3, DOI 10.1016/j.infsof.2004.05.002
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   GRAY AR, 1999, P 6 INT C NEUR INF P, V2, P526
   HECKERMAN D, 1995, COMMUN ACM, V38, P27, DOI 10.1145/203330.203336
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jensen F. V., 2007, Bayesian networks and decision graphs
   Kaczmarek J, 2004, INFORM SOFTWARE TECH, V46, P589, DOI 10.1016/j.infsof.2003.11.001
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Pickard L., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P130, DOI 10.1109/METRIC.1999.809734
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Stensrud E, 2001, INFORM SOFTWARE TECH, V43, P413, DOI 10.1016/S0950-5849(01)00147-1
   Stewart B, 2002, J SOFTW MAINT EVOL-R, V14, P161, DOI 10.1002/smr.250
NR 34
TC 121
Z9 127
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2006
VL 48
IS 1
BP 59
EP 67
DI 10.1016/j.infsof.2005.03.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OB
UT WOS:000234397900005
DA 2024-07-18
ER

PT J
AU Snook, CF
   Harrison, R
AF Snook, CF
   Harrison, R
TI Experimental comparison of the comprehensibility of a Z specification
   and its implementation in Java
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE empirical assessment; formal specification; comprehension
ID FORMAL METHODS; MYTHS
AB Comprehensibility is often raised as a problem with formal notations, yet formal methods practitioners dispute this. In a survey, one interviewee said 'formal specifications are no more difficult to understand than code'. Measurement of comprehension is necessarily comparative and a useful comparison for a specification is against its implementation. Practitioners have an intuitive feel for the comprehension of code. A quantified comparison will transfer this feeling to formal specifications. We performed an experiment to compare the comprehension of a Z specification with that of its implementation in Java. The results indicate there is little difference in comprehensibility between the two. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Southampton, Dept Elect & Comp Engn, Southampton SO17 1BJ, Hants, England.
   Univ Reading, Sch Comp Sci Cybernet & Elect Engn, Reading RG6 6AY, Berks, England.
C3 University of Southampton; University of Reading
RP Snook, CF (corresponding author), Univ Southampton, Dept Elect & Comp Engn, Highfield, Southampton SO17 1BJ, Hants, England.
EM cfs@ecs.soton.ac.uk; rachel.harrison@reading.ac.uk
OI Snook, Colin/0000-0002-0210-0983
CR BAKAN D, 1966, PSYCHOL BULL, V66, P423, DOI 10.1037/h0020412
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   Chow S.L., 1996, STAT SIGNIFICANCE
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   FDA, 2012, GASTR REG ENDP ADV T
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Finney K, 1998, J SYST SOFTWARE, V42, P3, DOI 10.1016/S0164-1212(98)00003-X
   Finney K., 1999, IEE Proceedings-Software, V146, P193, DOI 10.1049/ip-sen:19990600
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   ROZEBOOM WW, 1960, PSYCHOL BULL, V57, P416, DOI 10.1037/h0042040
   Snook C, 2001, INFORM SOFTWARE TECH, V43, P275, DOI 10.1016/S0950-5849(00)00166-X
   SNOOK C, 2001, THESIS U SOUTHAMPTON
   VINTER R, 1998, THESIS U HERTFORDSHI
   WOHLIN C, 1999, EXPERIMENTATION SOFT
   Wonnacott RonaldJ., 1985, INTRO STAT
NR 17
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2004
VL 46
IS 14
BP 955
EP 971
DI 10.1016/j.infsof.2004.04.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 851NQ
UT WOS:000223692200003
DA 2024-07-18
ER

PT J
AU van Moll, J
   Jacobs, J
   Kusters, R
   Trienekens, J
AF van Moll, J
   Jacobs, J
   Kusters, R
   Trienekens, J
TI Defect detection oriented lifecycle modeling in complex product
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE lifecycle modeling; V-model; defect prevention; defect detection;
   distributed development
AB As the complexity of today's products increases, single projects, single departments or even single companies can no longer develop total products, resulting in concurrent and distributed development. To manage the resulting organizational complexity, projects need a lifecycle that explicitly reflects the concurrent and distributed nature of the project context. This paper addresses the essence of lifecycle modeling, with emphasis on defect detection. An adequately modeled lifecycle allows the localization and recognition of defect-sensitive areas in complex product development. A case study involving real-life development projects indicates that transitions between constituent subprojects are in particular defect-sensitive. A second case study shows that by a defect detection-driven construction of a project-specific lifecycle, fewer residual defects can be expected. (C) 2003 Elsevier B.V. All rights reserved.
C1 Philips Semicond, ReUse Technol Grp, NL-5656 AA Eindhoven, Netherlands.
   Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Philips; Philips Research; Eindhoven University of Technology
RP Philips Semicond, ReUse Technol Grp, Prof Holstlaan 4,Bldg WDA 3,03, NL-5656 AA Eindhoven, Netherlands.
EM jan.van.moll@philips.com; jef.jacobs@philips.com; r.j.kusters@tm.tue.nl;
   trienekens@tm.tue.nl
RI Kusters, Rob/B-3093-2010
OI Kusters, Rob/0000-0003-4069-5655
CR [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1995, 122071995 ISOIEC
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   BROHL A, 1995, VMODELL
   CARMEL E, 1998, GLOBAL SOFTWARE TEAM
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Ebert C, 2001, PROC INT CONF SOFTW, P545, DOI 10.1109/ICSE.2001.919129
   Freedman Daniel P., 1990, Handbook of walkthroughs, inspections, and technical reviews
   Gilb Tom, 1993, Software inspections
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   *INCOSE, 2000, SYST ENG HDB, P129
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   MCMAHON PE, 2001, CROSSTALK        NOV, P4
   OPPENHEIMER H, 2002, P INT WORKSH GLOB SO, P44
   Royce W.W., 1970, P WESCON
   Scacchi W., 2002, ENCY SOFTWARE ENG
   Wiegers K., 2002, PEER REV SOFTWARE
   1997, 10741997 IEEE
NR 19
TC 16
Z9 16
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2004
VL 46
IS 10
BP 665
EP 675
DI 10.1016/j.infsof.2003.12.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DF
UT WOS:000221589200003
DA 2024-07-18
ER

PT J
AU Ray, I
   France, R
   Li, N
   Georg, G
AF Ray, I
   France, R
   Li, N
   Georg, G
TI An aspect-based approach to modeling access control concerns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE access control policies; role-based access control; aspects; models
ID INFORMATION; DESIGN
AB Specifying, enforcing and evolving access control policies is essential to prevent security breaches and unavailability of resources. These access control design concerns impose requirements that allow only authorized users to access protected computer-based resources. Addressing these concerns in a design results in the spreading of access control functionality across several design modules. The pervasive nature of access control functionality makes it difficult to evolve, analyze, and enforce access control policies. To tackle this problem, we propose using an aspect-oriented modeling(AOM) approach for addressing access control concerns. In the AOM approach, functionality that addresses a pervasive access control concern is localized in an aspect. Other functional design concerns are addressed in a model of the application referred to as a primary model. Composing access control aspects with a primary model results in an application model that addresses access control concerns. We illustrate our approach using a form of Role-Based Access Control. (C) 2003 Elsevier B.V. All rights reserved.
C1 Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP France, R (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM iray@cs.colostate.edu; france@cs.colostate.edu; na@cs.colostate.edu;
   georg@cs.colostate.edu
CR Ahn GJ, 2001, PROCEEDINGS OF THE TENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P157, DOI 10.1109/ENABL.2001.953406
   ALI HA, 2002, INFORMATION MANAGEME, V9, P175
   Anderson RJ, 1996, P IEEE S SECUR PRIV, P30, DOI 10.1109/SECPRI.1996.502667
   [Anonymous], 1975, MTR2997 MITRE CORP
   [Anonymous], COMMUNICATIONS ACM
   [Anonymous], 2000, P INT SCH FDN SEC AN
   Barker S., 2000, P INT C ARTIFICIAL I, P143
   BARKER S, 2001, P 15 ANN IFIP WG 11
   Barkley J, 1999, FOURTH ACM WORKSHOP ON ROLE-BASED ACCESS CONTROL, PROCEEDINGS, P55, DOI 10.1145/319171.319177
   Bertino E, 1998, ACM T DATABASE SYST, V23, P231, DOI 10.1145/293910.293151
   Bertino E., 2000, P 5 ACM WORKSH ROL B, P21, DOI DOI 10.1145/344287.344298
   Chan M. T., 2001, Information Management & Computer Security, V9, P112, DOI 10.1108/09685220110394758
   Chandramouli R., 2000, P 5 ACM WORKSH ROL B
   CHEN F, 1995, P 1 ACM WORKSH ROL B
   Clark D., 1987, IEEE S SEC PRIV OAKL
   Clarke S., 1998, P INT C SOFTW ENG IC
   DAMIANOU N, 2002, THESIS U LONDON LOND
   DAMIANOU N, 2002, P IEEE IFIP NETW OP
   DAMIANOU N, 2001, P POL WORKSH BRIST U
   DEVANBU PT, 2000, P INT C SOFTW ENG FU
   Diamadi Z., 2001, Wuhan University Journal of Natural Sciences, V6, P72, DOI 10.1007/BF03160228
   Fiadeiro JL, 1999, LECT NOTES COMPUT SC, V1548, P293
   FRANCE R, 2002, 02102 COL STAT U COM
   FRANCE R, 2002, PRACTICAL FDN BUSINE
   FRANCE RB, 2002, 02101 COL STAT U COM
   GEORG G, 2002, P 5 IFIP TC 11 WG 11
   GEORG G, 2002, P WORKSH CRIT SYST D
   GEORG G, 2002, P INT C ENG COMPL CO
   Giuri L., 1996, Proceedings. 12th Annual Computer Security Applications Conference, P203, DOI 10.1109/CSAC.1996.569700
   GLIGOR V, 1995, P 1 ACM NIST ROL BAS
   GRAY J, 2002, COMMUN ACM, V44, P87
   Griffeth N. D., 1993, Proceedings of International Conference on Intelligent and Cooperative Information Systems (Cat. No.93TH0474-7), P197, DOI 10.1109/ICICIS.1993.291747
   GRIMM R, 1998, UWCSE9880202 U WASH
   Hayton RJ, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P3, DOI 10.1109/SECPRI.1998.674819
   HITCHENS M, 2001, P POL WORKSH BRIST U
   Ho WM, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - TOOLS 33, PROCEEDINGS, P324, DOI 10.1109/TOOLS.2000.848772
   HOAGLAND JA, 1998, CSE983 U CAL COMP SC
   HOLBEIN R, 1995, P 9 ANN IFIP WG 113, P267
   Jajodia S, 1997, P IEEE S SECUR PRIV, P31, DOI 10.1109/SECPRI.1997.601312
   Jürjens J, 2001, INT FED INFO PROC, V65, P93
   JURJENS J, 2001, LNCS, V2029, P187
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   KIEBERHERR K, 2001, COMMUN ACM, V44, P39
   Lupu E, 1997, INTEGRATED NETWORK MANAGEMENT V, P430
   MICHAEL J, 1993, THESIS G MASON U FAI
   Minsky NH, 1996, THIRD INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P89, DOI 10.1109/CDS.1996.509350
   MOFFETT JD, 1998, P 3 ACM NIST ROL BAS
   Nerurkar U, 2000, DR DOBBS J, V25, P50
   Netinant P, 2001, COMMUN ACM, V44, P83, DOI 10.1145/383845.384200
   *OBJ MAN GROUP, 2001, UN MOD LANG VERS 1 4
   ORTALO R, 1998, P 5 EUR S RES COMP S
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Pace JAD, 2001, COMMUN ACM, V44, P66
   Ribeiro C., 2001, P NETW DISTR SYST SE, P1
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sandhu R., 2000, Symposium on Access Control Models and Technologies: Proceedings of the fifth ACM workshop on Role-based access control, V26, P47, DOI 10.1145/344287.344301
   SIBLEY EH, 1992, DATABASE SECURITY, V5, P47
   SILVA AR, 1999, OOPSLA 99 1 WORKSH M
   SIRER EG, 1998, UWCSE980901
   STEEN MWA, 1999, P 3 INT ENT DISTR OB
   Sullivan GT, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383845.383865
   Trcek D, 2000, COMPUT COMMUN, V23, P1716, DOI 10.1016/S0140-3664(00)00257-7
   Whitmore JJ, 2001, IBM SYST J, V40, P747, DOI 10.1147/sj.403.0747
NR 63
TC 49
Z9 51
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2004
VL 46
IS 9
BP 575
EP 587
DI 10.1016/j.infsof.2003.10.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DD
UT WOS:000221589000002
DA 2024-07-18
ER

PT J
AU Erdogan, N
   Selcuk, YE
   Sahingoz, O
AF Erdogan, N
   Selcuk, YE
   Sahingoz, O
TI A distributed execution environment for shared Java objects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE replication; consistency management; concurrency control; distributed
   object system; Java
ID CONSISTENCY; COHERENCE
AB This paper discusses the implementation of a distributed execution environment, DJO, which supports the use of shared Java objects for parallel and distributed applications and provides the Java programmer with the illusion of a network-wide shared object space on loosely coupled distributed systems. DJO supports shared objects through an implementation of multiple reader/single writer write-invalidate DSM protocol in software, providing the shared memory abstraction at object granularity. Object distribution and sharing are implemented through the replication mechanism, transparently to application. The system enforces mutual consistency among replicas of an object. The main benefits of DJO are enhanced availability and performance due to the replicated object model and easier application design, as the underlying software takes care of distribution and memory consistency issues. (C) 2003 Elsevier B.V. All rights reserved.
C1 Tech Univ Istanbul, Elect Elect Engn Fac, Dept Comp Engn, TR-80686 Istanbul, Turkey.
C3 Istanbul Technical University
RP Tech Univ Istanbul, Elect Elect Engn Fac, Dept Comp Engn, TR-80686 Istanbul, Turkey.
EM erdogan@cs.itu.edu.tr; selcukyu@itu.edu.tr; o.sahingoz@hho.edu.tr
RI Sahingoz, Ozgur Koray/N-7734-2018; Erdogan, Nadia/ABB-2583-2020; SELÇUK,
   YUNUS EMRE/AAZ-7692-2020
OI Sahingoz, Ozgur Koray/0000-0002-1588-8220; Erdogan,
   Nadia/0000-0002-7719-1955; SELÇUK, YUNUS EMRE/0000-0001-8179-8955
CR Adve SV, 1996, COMPUTER, V29, P66, DOI 10.1109/2.546611
   Amza C, 1996, COMPUTER, V29, P18, DOI 10.1109/2.485843
   ATTIYA H, 1994, ACM T COMPUT SYST, V12, P91, DOI 10.1145/176575.176576
   BAL HE, 1992, IEEE T SOFTWARE ENG, V18, P190, DOI 10.1109/32.126768
   CASTRO M, 1996, P 1996 INT C PAR PRO, V1, P128
   Cox A. L., 1994, Proceedings the 21st Annual International Symposium on Computer Architecture (Cat. No.94CH3397-7), P106, DOI 10.1109/ISCA.1994.288157
   DWARKADAS S, 1993, P 20 ANN INT S COMP, P144
   JUDGE A, 1998, TCDCS199824
   KELEHER P, 1992, ACM COMP AR, V20, P13, DOI 10.1145/146628.139676
   KELEHER P, 1997, P 11 INT PAR PROC S
   Kindberg T, 1996, IEEE GLOBECOM 1996 - GLOBAL INTERNET'96, CONFERENCE RECORD, P67, DOI 10.1109/GLOCOM.1996.586124
   Kohli P, 1998, CONCURRENCY-PRACT EX, V10, P1, DOI 10.1002/(SICI)1096-9128(199801)10:1<1::AID-CPE285>3.0.CO;2-P
   LI K, 1989, ACM T COMPUT SYST, V7, P321, DOI 10.1145/75104.75105
   LI K, 1988, P 1988 INT C PAR PRO, P94
   NITZBERG B, 1991, COMPUTER, V24, P52, DOI 10.1109/2.84877
   SAHINGOZ OK, 1998, THESIS ISTANBUL TU
   SELCUK YE, 2000, THESIS ISTANBUL TU
   STENSTROM P, 1990, COMPUTER, V23, P12, DOI 10.1109/2.55497
   *SUN MICR, 1996, JAV REM METH INV SPE
   Sunderam V. S., 1990, Concurrency: Practice and Experience, V2, P315, DOI 10.1002/cpe.4330020404
   [No title captured]
   [No title captured]
NR 22
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 445
EP 455
DI 10.1016/j.infsof.2003.09.017
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600002
DA 2024-07-18
ER

PT J
AU Hierons, RM
   Ural, H
AF Hierons, RM
   Ural, H
TI UIO sequence based checking sequences for distributed test architectures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE distributed testing; controllability; observability; test coordination;
   UIO sequences; checking sequences
ID TEST-GENERATION; SYNCHRONIZATION
AB This study addresses the construction of a preset checking sequence that will not pose controllability (synchronization) and observability (undetectable output shift) problems when applied in distributed test architectures that utilize remote testers. The controllability problem manifests itself when a tester is required to send the current input and because it did not send the previous input nor did it receive the previous output it cannot determine when to send the input. The observability problem manifests itself when a tester is expecting an output in response to either the previous input or the current input and because it is not the one to send the current input, it cannot determine when to start and stop waiting for the output. Based on UIO sequences, a checking sequence construction method is proposed to yield a sequence that is free from controllability and observability problems. (C) 2003 Elsevier B.V. All rights reserved.
C1 Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
   Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1N 6N5, Canada.
C3 Brunel University; University of Ottawa
RP Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
EM rob.hierons@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
CR Aho A.V., 1988, P IEEE 8 INT S PROT, P75
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   BOYD S, 1991, INFORM PROCESS LETT, V40, P131, DOI 10.1016/0020-0190(91)90166-F
   Cacciari L, 1999, INFORM SOFTWARE TECH, V41, P767, DOI 10.1016/S0950-5849(99)00036-1
   CHAN WYL, 1989, COMP COMM R, V19, P283, DOI 10.1145/75247.75274
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   DAHBURA AT, 1990, P IEEE, V78, P1317, DOI 10.1109/5.58319
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GUYOT S, 1995, P IFIP IWPTS 95 EVR, P395
   Hierons RM, 1997, COMPUT J, V40, P220, DOI 10.1093/comjnl/40.4.220
   *ISO IEC, 1995, 96461 ISO EC
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LUO G, 1994, COMPUT STAND INTER, V16, P119, DOI 10.1016/0920-5489(94)90003-5
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   URAL H, 1993, COMPUT COMMUN, V16, P653, DOI 10.1016/0140-3664(93)90082-4
   Young YC, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P80, DOI 10.1109/ASSET.1998.688238
NR 18
TC 25
Z9 26
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 793
EP 803
DI 10.1016/S0950-5849(03)00060-0
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Uyar, MÜ
   Fecko, MA
   Duale, AY
   Amer, PD
   Sethi, AS
AF Uyar, MÜ
   Fecko, MA
   Duale, AY
   Amer, PD
   Sethi, AS
TI Experience in developing and testing network protocol software using
   FDTs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE conformance testing; Estelle; formal description technique; formal
   specification; MIL-STD 188-220; protocol specification; test case
   generation; PACS
ID CONFORMANCE TESTS; FORMAL METHODS; GENERATION; DERIVATION; SYSTEMS
AB This paper presents the research effort to formally specify, develop and test a complex real-life protocol for mobile network radios (MIL-STD 188-220). As a result, the team of researchers from the University of Delaware and the City College of the City University of New York, collaborating with scientists from CECOM (an R&D facility of the US Army) and the US Army Research Laboratory, have helped advance the state-of-the-art in the design, development, and testing of wireless communications protocols. Estelle is used both as the formal specification language for MIL-STD 188-220 and the source to automatically generate conformance test sequences. The formal test generation effort identified several theoretical problems for wireless communication protocols (possibly applicable to network protocols in general): (1) the timing constraint problem, (2) the controllability problem, (3) inconsistency detection and elimination problem and (4) the conflicting timers problem. Based on the collaborative research results, two software packages were written to generate conformance test sequences for MIL-STD 188-220. These packages helped generate tests for MIL-STD 188-220's Data Link Types 1 and 4 services that were realizable without timer interruptions while providing a 200% increase in test coverage. The test cases have been delivered and are being used by a CECOM conformance testing facility. (C) 2003 Elsevier B.V. All rights reserved.
C1 CUNY City Coll, Dept Elect Engn, New York, NY 10031 USA.
   Telcordia Technol Inc, Appl Res Area, Morristown, NJ USA.
   IBM Corp, Syst Architecture Compliance, Poughkeepsie, NY 12602 USA.
   Univ Delaware, Dept Comp & Informat Sci, Newark, DE 19716 USA.
C3 City University of New York (CUNY) System; City College of New York
   (CUNY); Ericsson; Telcordia Technologies; International Business
   Machines (IBM); University of Delaware
RP CUNY City Coll, Dept Elect Engn, 140th St & Convent Ave, New York, NY 10031 USA.
EM umit@eesls0.engr.ccny.cuny.edu
CR ADLER I, 1985, J ACM, V32, P871, DOI 10.1145/4221.4222
   AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   AMER PD, 2001, ATIRP 1996 2001
   AMER PD, 1996, P IEEE MILCOM
   [Anonymous], P 12 C IEEE COMP COM
   [Anonymous], P 1986 IEEE GLOB TEL
   [Anonymous], CHECKING EXPT SEQUEN
   BAUMGARTEN B, 1996, P IFIP INT WORKSH TE
   BI J, 1997, P IFIP INT WORKSH TE, P324
   BOSIK BS, 1991, COMPUT NETWORKS ISDN, V22, P7, DOI 10.1016/0169-7552(91)90079-R
   BREDEREKE J, 1985, P IFIP FORM DESCR TE, P376
   BRINKSMA E, 1988, P IFIP PROT SPEC TES
   BUDKOWSKI S, 1992, COMPUT NETWORKS ISDN, V25, P63, DOI 10.1016/0169-7552(92)90124-9
   BUDKOWSKI S, 1987, COMPUT NETWORKS ISDN, V14, P3, DOI 10.1016/0169-7552(87)90084-5
   BUDKOWSKI S, 1998, P INT WORKSH FDT EST
   BUDKOWSKI S, 1998, P IFIP JOINT INT C F
   BURCH R, 1995, P IEEE MILCOM SAN DI
   CATRINA O, 1998, ELECT J NETWORKS DIS, V7, P3
   Cerans Karlis., 1993, CAV 92, P302
   CHANSON S, 1993, P IEEE INFOCOM
   Cheng K., 1996, ACM Transactions on Design Automation of Electronic Systems, V1, P57
   CHEONG SK, 1996, P IFIP INT WORKSH TE, P83
   CHOI JY, 1996, P IFIP INT WORKSH TE, P316
   Cormen T.H., 1996, INTRO ALGORITHMS
   *DOD, 1998, 188220B DOD MILSTD
   Dssouli R, 1999, COMPUT NETW, V31, P1835, DOI 10.1016/S1389-1286(99)00063-8
   DUALE A, 2000, P IFIP INT C TEST CO, P91
   DUALE AY, 2000, THESIS CITY U NEW YO
   DZIK T, 1997, P IEEE MILCOM MONT C
   En-Nouaary A, 1998, REAL TIM SYST SYMP P, P220, DOI 10.1109/REAL.1998.739748
   Fecko MA, 2000, ANN TELECOMMUN, V55, P70
   FECKO MA, 1999, P IEEE MILCOM ATL CI
   FECKO MA, 2000, P IFIP INT C TEST CO
   FECKO MA, 1999, THESIS U DELAWARE
   FECKO MA, 1998, P IFIP JOINT INT C F, P111
   FECKO MA, 1997, P IEEE MILCOM MONT C
   GECSE R, 1998, P IFIP INT WORKSH TE, P35
   Higashino T, 1999, INT FED INFO PROC, V21, P197
   HIGASHINO T, 1994, IEEE T SOFTWARE ENG, V20, P29, DOI 10.1109/32.263753
   Hogrefe D, 1996, COMPUT NETWORKS ISDN, V28, P1659, DOI 10.1016/0169-7552(95)00124-7
   *ISO, 1989, 9074 ISO
   *ISO IEC, 1994, 88022 ISOIEC
   JIRACHIEFPATTANA A, 1995, COMP STAND INTER, V17, P559, DOI 10.1016/0920-5489(95)00028-S
   KANG S, 1999, P IFIP INT WORKSH TE
   KATO T, 1997, P IFIP JOINT INT C F, P449
   KHOUMSI A, 2000, P IFIP TESTC INT C T, P281
   KIM M, 1997, P IFIP INT WORKSH TE
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lee D, 1996, IEEE T COMMUN, V44, P631, DOI 10.1109/26.494307
   LEE D, 1992, P 24 ANN ACM VICT CA
   LEE DY, 1991, IEEE T COMPUT, V40, P526, DOI 10.1109/12.88471
   LEE DY, 1991, P IFIP PROT SPEC TES
   Lenstra J. K., 1976, Networks, V6, P273, DOI 10.1002/net.3230060305
   LI H, 1995, P IEEE MILCOM SAN DI
   Miller RE, 1993, IEEE ACM T NETWORK, V1, P116, DOI 10.1109/90.222912
   Milner R., 1989, Communication and concurrency
   NEGULESCU C, 1998, P INT WORKSH FDT EST, P75
   *OBJ MAN GROUP, 1997, OMG STAND UN MOD LAN
   PETRENKO A, 1998, P IFIP INT WORKSH TE
   PITT DH, 1990, IEEE T SOFTWARE ENG, V16, P1337, DOI 10.1109/32.62442
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   ROMIJN J, 1998, P IFIP JOINT INT C F, P337
   SABHANI KK, 1988, COMPUT NETWORKS ISDN, V15, P285
   SARIKAYA B, 1987, IEEE T SOFTWARE ENG, V13, P518, DOI 10.1109/TSE.1987.233197
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   TEMPLEMOREFINLA.J, 1998, GRAPHICAL REPRESENTA, P37
   TENNEY R, 1988, 881 U MASS
   THEES J, 1998, P INT WORKSH FDT EST, P187
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   TURNER K, 1989, FORMAL DESCRIPTION T
   URAL H, 1992, COMPUT COMMUN, V15, P311, DOI 10.1016/0140-3664(92)90092-S
   URAL H, 1991, IEEE T COMMUN, V39, P514, DOI 10.1109/26.81739
   URAL H, 1988, TR8818 U OTT
   Uyar MÜ, 1999, COMPUT NETW, V31, P1967, DOI 10.1016/S1389-1286(99)00007-9
   UYAR MU, 2000, P US ARM RES LAB ATI
   UYAR MU, 1990, AT T TECH J, V69
   UYAR MU, 1998, P US ARM RES LAB ATI
   UYAR MU, 1999, P IEEE MILCOM ATL CI, P513
   UYAR MU, 1998, P IEEE INT PERF COMP, P346
   UYAR MU, 1997, P IEEE MIL COMM C MI, P740
   UYAR MU, 1997, P IEEE MILCOM MONT C
   VAZQUEZ E, 1992, P IFIP PROT SPEC TES, P125
   VONBOCHMANN G, 1992, IFIP TRANS C, V3, P17
   WANG CJ, 1992, INT CON DISTR COMP S, P252, DOI 10.1109/ICDCS.1992.235085
   WEST C, 1986, P IFIP PROT SPEC TES
   WYTREBOWICZ J, 1998, ANAL TOOLS ESTELLE S, P141
   YOO S, 1996, P IFIP INT WORKSH TE, P237
   188220 MILSTD
NR 89
TC 8
Z9 8
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 815
EP 835
DI 10.1016/S0950-5849(03)00062-4
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alagar, VS
   Achuthan, R
   Haydar, M
   Muthiayen, D
   Ormandjieva, O
   Zheng, M
AF Alagar, VS
   Achuthan, R
   Haydar, M
   Muthiayen, D
   Ormandjieva, O
   Zheng, M
TI A rigorous approach for constructing self-evolving real-time reactive
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE self-evolving system; architecture model; reuse repository
AB Self-evolving systems adapt themselves automatically to changing external situations and internal conditions. This paper proposes an architecture with four components, that, respectively, provides the infrastructure for formal architectural modeling of the evolving system, reuse of design elements, predicting the reliability of evolution, and managing change. The tools in TROMLAB, a framework for developing real-time reactive systems support and sustain the evolution of system components. (C) 2003 Elsevier B.V. All rights reserved.
C1 Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Alagar, VS (corresponding author), Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
CR ACHUTHAN R, 1995, THESIS CONCORDIA U M
   ALAGAR VS, 2001, TROMLAB SOFTWARE DEV
   BIEMAN J, 1991, P BCS FACS WORKSH FO
   DELLAROCAS C, 1998, P 3 INT SOFTW ARCH W
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   KRAMER J, 1998, P 4 INT C CONF DISTR
   MUTHIAYEN D, 2000, THESIS CONCORDIA U M
   NAGARAJAN R, 1999, THESIS CONCORDIA U M
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   ORMANDJIEVA O, 2002, THESIS CONCORDIA U M
   POMPEO F, 1999, THESIS CONCORDIA U
   POPISTAS O, 1999, THESIS CONCORDIA U
   ZHENG M, 2002, THESIS CONCORDIA U M
NR 14
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 743
EP 761
DI 10.1016/S0950-5849(03)00070-3
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 720DG
UT WOS:000185245800005
DA 2024-07-18
ER

PT J
AU Salah, A
   Dssouli, R
   Lapalme, G
AF Salah, A
   Dssouli, R
   Lapalme, G
TI Implicit integration of scenarios into a reduced timed automaton
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE design and synthesis; scenarios; timed automata
AB We aim at synthesizing an executable specification for a real-time reactive system by integrating real-time scenarios into a reduced timed automaton (TA). A scenario is a part of the specification of a system behavior. The integration of scenarios into a single TA is based on its formal semantics. The TA, which results from the integration of a set of scenarios, is independent of the order in which the scenarios are added to. We also present an algorithm to reduce such resulting TA in order to prevent combinatorial explosion. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Quebec, Dept Informat, Montreal, PQ H3C 3P8, Canada.
   Concordia Univ, Montreal, PQ H3G 1M8, Canada.
   Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
C3 University of Quebec; University of Quebec Montreal; Concordia
   University - Canada; Universite de Montreal
RP Salah, A (corresponding author), Univ Quebec, Dept Informat, CP 8888,Succ Ctr Ville Montreal, Montreal, PQ H3C 3P8, Canada.
EM salah.aziz@uqam.ca
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   AMYOT D, 1997, CFIP 97 ING PROT, P159
   [Anonymous], 1980, CALCULUS COMMUNICATI, DOI DOI 10.1007/3-540-10235-3
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   BOUAJJANI A, 1992, SCI COMPUTER PROGRAM, V18
   Dano B., 1997, Requirements Engineering, V2, P79, DOI 10.1007/BF02813027
   Dssouli R, 1999, INFORM SOFTWARE TECH, V41, P697, DOI 10.1016/S0950-5849(99)00031-2
   FERNANDEZ JC, 1990, SCI COMPUT PROGRAM, V13, P219, DOI 10.1016/0167-6423(90)90071-K
   GLINZ M, 1995, LECT NOTES COMPUTER, V989, P254
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   HSIA P, 1994, IEEE SOFTWARE, V11, P33, DOI 10.1109/52.268953
   NICOLLIN X, 1992, IEEE T SOFTWARE ENG, V18, P794, DOI 10.1109/32.159837
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   Salah A, 2001, INT FED INFO PROC, V69, P135
   SALAH A, 2002, THESIS U MONTREAL
NR 15
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 715
EP 725
DI 10.1016/S0950-5849(03)00068-5
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 720DG
UT WOS:000185245800003
DA 2024-07-18
ER

PT J
AU Kim, J
   Kim, HJ
AF Kim, J
   Kim, HJ
TI Efficient processing of regular path joins using PID
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML query; multiple regular paths; path identifier
AB XML is data that has no fixed structure. So it is hard to design a schema for storing and querying an XML data. Instead of a fixed schema, graph-based data models are widely adopted for querying XML. Queries on XML are based on paths in a data graph.
   A meaningful query usually has several paths in it, but much of recent research is more concerned with optimizing a single path in a query. In this paper, we present an efficient technique for processing multiple path expressions in a query. We implemented our technique and present preliminary performance results. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Seoul Natl Univ, Sch Engn & Comp Sci, Seoul 151742, South Korea.
C3 Seoul National University (SNU)
RP Kim, J (corresponding author), Seoul Natl Univ, Sch Engn & Comp Sci, San 56-1, Seoul 151742, South Korea.
CR ABITEBOUL S, 1997, P INT C DAT THEOR
   ABITEBOUL S, 1996, INT J DIGITAL LIB
   ABITEBOUL S, 1997, P ACM S PRINC DAT SY
   [Anonymous], 1999, The W3C XML Path Language
   BAASE S, 1998, COMPUTER ALGORITHMS
   BRAY T, 1998, EXTENSIBLE MARKUP LA
   Buneman P., 1996, P ACM SIGMOD INT C M
   CALVANESE D, 1999, P ACM S PRINC DAT SY
   Chamberlin D., 2001, XQUERY QUERY LANGUAG
   COOPER B, 2001, P C VER LARG DAT BAS
   COVER R, XML COVER PAGES
   DEUTSCH A, 1999, P 8 INT WORLD WID WE
   FERNANDEZ M, 1998, IEEE INT C DAT ENG
   GOLDMAN R, 1997, P C VER LARG DAT BAS
   GRAHNE G, 2000, INT WORKSH WEB DAT
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   LI Q, 2001, P C VER LARG DAT BAS
   MCHUGH J, 1999, P WORKSH QUER PROC S
   MILO T, 1999, P INT C DAT THEOR
   NESTOROV S, 1997, IEEE INT C DAT ENG
   PAPAKONSTANTINO.Y, 1999, P ACM SIGMOD INT C M
   SUCIU D, 1997, P INT C DAT THEOR AT
   SUCIU D, 1998, P INT C FDN DAT ORG
NR 23
TC 3
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 1
PY 2003
VL 45
IS 5
BP 241
EP 251
AR PII S0950-5849(02)00208-2
DI 10.1016/S0950-5849(02)00208-2
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668KQ
UT WOS:000182290200002
DA 2024-07-18
ER

PT J
AU Fatima, R
   Yasin, A
   Liu, L
   Wang, JM
   Afzal, W
AF Fatima, Rubia
   Yasin, Affan
   Liu, Lin
   Wang, Jianmin
   Afzal, Wasif
TI Retrieving arXiv, SocArXiv, and SSRN metadata for initial review
   screening
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Information retrieval; Software engineering; Metadata; Initial
   screening; Bibliographic
AB Context: Researchers around the globe invest a lot of time searching the literature for performing reviews (Systematic Literature Review (SLR), Multivocal Literature Review (MLR)). The steps to performing the review includes inclusion of the grey literature, preprints, and quality assessed non-peer reviewed literature (the purpose is to minimize the publication bias). The initial screening of the papers takes time and bibliographic information is only available online for the researcher(s). Objective: Objective of our study is to propose, design, and develop a method that will help the research community to download the basic information of the papers (title, abstract, author) for the searched query from arxiv, SSRN, and SocArxiv (Social Science ArXiv). Method: We used Web scraping to extract data from the servers and save it in excel file. To retrieve the desired query from the databases, a Python code is used. Two methods have been discussed in the study to download the metadata of the searched query. Results: We have used different queries (such as "grey literature", "testing software", and "python" etc.) to see the results of our proposed method. Furthermore, we cross-verified the results with the online search results of the databases. Conclusion: Initial results from the preliminary pilot evaluations show that it is a viable method to search, download, and shortlist the research articles information (title, abstract etc.) from arXiv,1 SSRN,2 and SocArXiv.3 For external validity more evaluations are needed.
C1 [Fatima, Rubia; Yasin, Affan; Liu, Lin; Wang, Jianmin] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Afzal, Wasif] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
C3 Tsinghua University; Malardalen University
RP Liu, L (corresponding author), Tsinghua Univ, Sch Software, Beijing, Peoples R China.
EM rubiafatima91@hotmail.com; affan.yasin@tsinghua.edu.cn;
   linliu@tsinghua.edu.cn; jimwang@tsinghua.edu.cn; wasif.afzal@mdh.se
RI Zhang, Yun/JCN-7026-2023
OI Yasin, Affan/0000-0002-0166-2239
FU Beijing Key Lab of Industrial Big Data Systems and Applications,
   Tsinghua University, China Big Data Research Center, Science Fund for
   Creative Research Groups of the Natural Science Foundation of China
   [62021002]; Life Industrial Safety Big Data Research Center, Tsinghua
   University-China
FX & nbsp;Financial support from Beijing Key Lab of Industrial Big Data
   Systems and Applications, Tsinghua University, China Big Data Research
   Center, Science Fund for Creative Research Groups of the Natural Science
   Foundation of China Project no. 62021002, and Life Industrial Safety Big
   Data Research Center, Tsinghua University-China are greatly
   acknowledged.
CR Budgen D, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106840
   Fraser N, 2021, PLOS BIOL, V19, DOI 10.1371/journal.pbio.3000959
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P872, DOI 10.1109/TSE.2022.3165938
   Lin JL, 2020, SCIENTOMETRICS, V124, P555, DOI 10.1007/s11192-020-03430-8
   Paez Arsenio, 2017, J Evid Based Med, DOI [10.1111/jebm.12266, 10.1111/jebm.12265]
   Sutton C, 2017, Arxiv, DOI [arXiv:1710.05225, 10.48550/arXiv.1710.05225, DOI 10.48550/ARXIV.1710.05225]
   Yasin A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2464
NR 8
TC 1
Z9 1
U1 4
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107251
DI 10.1016/j.infsof.2023.107251
EA MAY 2023
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J9XK7
UT WOS:001013081000001
DA 2024-07-18
ER

PT J
AU Ji, SY
   Wu, J
   Qiu, JF
   Dong, J
AF Ji, Songyan
   Wu, Jin
   Qiu, Junfu
   Dong, Jian
TI <i>Effuzz:</i> Efficient fuzzing by directed search for smart contracts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Blockchain; Smart contracts; Greybox fuzzing; Vulnerability detection
AB Context: A large number of Ethereum smart contracts have been deployed on blockchain to manage assets. Un-fortunately, due to the immutable nature of blockchain, smart contracts cannot be modified after deployment, even if vulnerabilities have been exposed to attackers. Therefore, it is critical to efficiently and thoroughly test smart contracts. Greybox fuzzing is a prosperous technique for detecting smart contract vulnerabilities. However, most existing fuzzers have a common drawback in that they cannot efficiently satisfy hard-to-cover branch constraints.Objective: The goal of this paper is to solve the problem of how to efficiently satisfy hard-to-cover branch constraints. After solving this problem, fuzz testing can execute more code, and there is a higher probability of executing vulnerabilities.Method: We propose an approach for addressing this problem. Specifically, we design an input parameter analysis strategy to selectively mutate a subset of input parameters to reduce invalid mutations. Also, to accelerate the processing of satisfying branch constraints, we design an accelerated multi-objective search strategy to reduce the waste of resources. Result: We implemented this approach in a tool called Effuzz and applied it to real-world smart contracts. Experiments show that Effuzz finds more vulnerabilities and is more efficient than existing state-of-the-art fuzzers. Conclusion: In this paper, we present an approach to efficiently satisfy hard-to-cover branch constraints. Our approach addresses two main problems, i.e., how to select the subset of input parameters for mutation with considering the characteristic of Ethereum smart contracts, and how to accelerate the search to satisfy hard-to-cover branch constraints without generating excessive ineffective test cases that waste resources. The experimental results show that our approach is effective.
C1 [Ji, Songyan; Wu, Jin; Qiu, Junfu; Dong, Jian] Harbin Inst Technol, Harbin, Peoples R China.
C3 Harbin Institute of Technology
RP Dong, J (corresponding author), Harbin Inst Technol, Harbin, Peoples R China.
EM dan@hit.edu.cn
OI Wu, Jin/0009-0002-7674-421X
CR Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P678, DOI 10.1145/3368089.3409748
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Bueno PMS, 2014, INFORM SCIENCES, V259, P490, DOI 10.1016/j.ins.2011.01.025
   Chen JC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10018-0
   Chen P, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P499, DOI 10.1145/3319535.3363225
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chen T, 2013, FUTURE GENER COMP SY, V29, P1758, DOI 10.1016/j.future.2012.02.006
   Chien H Y., 2021, International Journal of Performability Engineering, V17, P589
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   coinmarketcap, 2013, WEBSITE CRYPTOCURREN
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Ethereum, 2022, ETHEREUM SECURE DECE
   ETHEREUM, 2013, ETHEREUM
   Etherscan, 2015, ETHERSCAN
   github, 2018, MYTHRIL
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kannengiesser N, 2022, IEEE T SOFTWARE ENG, V48, P4291, DOI 10.1109/TSE.2021.3116808
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Miller C., 2008, P CANSECWEST
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Qu Y., 2022, Int. J. Performability Eng., V18, P149, DOI [10.23940/ijpe.22.03.p1.149157, DOI 10.23940/IJPE.22.03.P1.149157]
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   solidity.readthedocs, 2014, WEBSITE SOLIDITY DOC
   Website, 2016, ANAL DAO EXPLOIT
   Website, 2017, WEBSITE AM FUZZY LOP
   Wüstholz V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1398, DOI 10.1145/3368089.3417064
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 40
TC 3
Z9 3
U1 3
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107213
DI 10.1016/j.infsof.2023.107213
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D2VR3
UT WOS:000967355900001
DA 2024-07-18
ER

PT J
AU Rabin, RI
   Hussain, A
   Alipour, MA
   Hellendoorn, VJ
AF Rabin, Rafiqul Islam
   Hussain, Aftab
   Alipour, Mohammad Amin
   Hellendoorn, Vincent J.
TI Memorization and generalization in neural code intelligence models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Machine learning; Software engineering; Memorization and generalization;
   Empirical results; Models of code
AB Context: Deep Neural Networks (DNNs) are increasingly being used in software engineering and code inte-lligence tasks. These are powerful tools that are capable of learning highly generalizable patterns from large datasets through millions of parameters. At the same time, their large capacity can render them prone to memorizing data points. Recent work suggests that the memorization risk manifests especially strongly when the training dataset is noisy, involving many ambiguous or questionable samples, and memorization is the only recourse. Objective: The goal of this paper is to evaluate and compare the extent of memorization and generalization in neural code intelligence models. It aims to provide insights on how memorization may impact the learning behavior of neural models in code intelligence systems. Method: To observe the extent of memorization in models, we add random noise to the original training dataset and use various metrics to quantify the impact of noise on various aspects of training and testing. We evaluate several state-of-the-art neural code intelligence models and benchmarks based on Java, Python, and Ruby codebases. Results: Our results highlight important risks: millions of trainable parameters allow the neural networks to memorize anything, including noisy data, and provide a false sense of generalization. We observed all models manifest some forms of memorization. This can be potentially troublesome in most code intelligence tasks where they rely on rather noise-prone and repetitive data sources, such as code from GitHub. Conclusion: To the best of our knowledge, we provide the first study to quantify memorization effects in the domain of software engineering and code intelligence systems. This work raises awareness and provides new insights into important issues of training neural models in code intelligence systems that are usually overlooked by software engineering researchers.
C1 [Rabin, Rafiqul Islam; Hussain, Aftab; Alipour, Mohammad Amin] Univ Houston, Houston, TX 77204 USA.
   [Hellendoorn, Vincent J.] Carnegie Mellon Univ, Pittsburgh, PA USA.
C3 University of Houston System; University of Houston; Carnegie Mellon
   University
RP Rabin, RI (corresponding author), Univ Houston, Houston, TX 77204 USA.
EM mrabin@uh.edu
RI Rabin, Md Rafiqul Islam/C-7862-2019; Hussain, Aftab/HLH-7828-2023
OI Rabin, Md Rafiqul Islam/0000-0001-5575-0528; Hussain,
   Aftab/0000-0002-1010-487X
CR AlexWang Amanpreet Singh, 2019, ICLR
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2019, INT C LEARN REPR
   [Anonymous], 2002, P 40 ANN M ASS COMP
   Arpit D, 2017, PR MACH LEARN RES, V70
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Bielik P, 2020, PR MACH LEARN RES, V119
   Carlini N, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P267
   Casalnuovo C, 2019, EMPIR SOFTW ENG, V24, P1823, DOI 10.1007/s10664-018-9669-7
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen PF, 2019, PR MACH LEARN RES, V97
   Compton R., 2020, P 17 INT C MIN SOFTW, P243, DOI 10.1145/3379597.3387445
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dinella E., 2020, INT C LEARN REPR ICL
   Elangovan A, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P1325
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Gibney E, 2016, NATURE, V529, P445, DOI 10.1038/529445a
   Gini C., 1936, COLORADO COLL PUBLIC, V208, P73
   Gu J, 2021, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME52107.2021.00049
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hacohen G., 2020, PR MACH LEARN RES
   He KM, 2016, LECT NOTES COMPUT SC, V9908, P630, DOI 10.1007/978-3-319-46493-0_38
   Hellendoorn V.J., 2019, INT C LEARN REPR
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Khandelwal U., 2020, ICLR
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Le THM, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3383458
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li JN, 2019, PROC CVPR IEEE, P5046, DOI 10.1109/CVPR.2019.00519
   Li Yujia, 2016, INT C LEARNING REPRE
   Lin C.-Y., 2004, COLING 2004 P 20 INT, P501, DOI DOI 10.3115/1220355.1220427
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Liu Y, 2020, INT C LEARNING REPRE
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Morcos AS, 2018, ADV NEUR IN, V31
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Northcutt Curtis G, 2021, PROC 35 C NEURAL INF
   Rabin Md Rafiqul Islam, 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P70, DOI 10.1145/3520312.3534869
   Rabin Md Rafiqul Islam, 2020, RL+SE&PL 2020: Proceedings of the 1st ACM SIGSOFT International Workshop on Representation Learning for Software Engineering and Program Languages, P29, DOI 10.1145/3416506.3423580
   Rabin M.R.I., 2021, GENERALIZABILITY NEU, DOI [10.1016/j.infsof.2021.106552, DOI 10.1016/J.INFSOF.2021.106552]
   Rabin M.R.I., 34 IEEEACM INT C AUT, DOI 10.48550/ArXiv.1908.10711
   Rabin MRI, 2021, Arxiv, DOI [arXiv:2111.01097, DOI 10.48550/ARXIV.2111.01097,ARXIV]
   Rabin MRI, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P441, DOI 10.1145/3468264.3468539
   Rabin MRI, 2021, Arxiv, DOI arXiv:2004.07313
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Recht B, 2019, PR MACH LEARN RES, V97
   Sharma T., 2021, arXiv
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Suneja S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P945, DOI 10.1145/3468264.3468545
   Tirumala K, 2022, Arxiv, DOI arXiv:2205.10770
   Vasic M., 2019, 7 INT C LEARNING REP
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang K, 2019, Arxiv, DOI [arXiv:1905.11445, DOI 10.48550/ARXIV.1905.11445]
   Wang Y, 2022, Arxiv, DOI arXiv:2102.04625
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yefet N, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428230
   Zhang C., 2020, INT C LEARNING REPRE
   Zhang CY, 2021, COMMUN ACM, V64, P107, DOI 10.1145/3446776
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
NR 78
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107066
DI 10.1016/j.infsof.2022.107066
EA SEP 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X6CZ
UT WOS:000860929000001
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Coppola, R
   Alégroth, E
AF Coppola, Riccardo
   Alegroth, Emil
TI A taxonomy of metrics for GUI-based testing research: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing; GUI -based testing; Coverage metrics; Taxonomies;
   Software verification and validation
ID COVERAGE; SEQUENCE; APPS
AB Context: GUI-based testing is a sub-field of software testing research that has emerged in the last three decades. GUI-based testing techniques focus on verifying the functional conformance of the system under test (SUT) through its graphical user interface. However, despite the research domains growth, studies in the field have low reproducibility and comparability. One observed cause of these phenomena is identified as a lack of research rigor and commonly used metrics, including coverage metrics.Objective: We aim to identify the most commonly used metrics in the field and formulate a taxonomy of coverage metrics for GUI-based testing research.Method: We adopt an evidence-based approach to build the taxonomy through a systematic literature review of studies in the GUI-based testing domain. Identified papers are then analyzed with Open and Axial Coding techniques to identify hierarchical and mutually exclusive categories of metrics with common characteristics, usages, and applications.Results: Through the analysis of 169 papers and 315 metric definitions, we obtained a taxonomy with 55 codes (common names for metrics), 17 metric categories, and 4 higher level categories: Functional Level, GUI Level, Model Level and Code Level. We measure a higher number of mentions of Model and Code level metrics over Functional and GUI level metrics.Conclusions: We propose a taxonomy for use in future GUI-based testing research to improve the general quality of studies in the domain. In addition, the taxonomy is perceived to help enable more replication studies as well as macro-analysis of the current body of research.
C1 [Coppola, Riccardo] Politecn Torino, Dept Control & Comp Engn, Turin, Italy.
   [Alegroth, Emil] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Polytechnic University of Turin; Blekinge Institute Technology
RP Coppola, R (corresponding author), Politecn Torino, Dept Control & Comp Engn, Turin, Italy.
EM riccardo.coppola@polito.it
FU KKS foundation, Sweden
FX Emil Alegroth would like to acknowledge that this work was supported by
   the KKS foundation, Sweden through the S.E.R.T. ResearchProfile project
   at Blekinge Institute of Technology.
CR Adamo D, 2018, INFORM SOFTWARE TECH, V99, P98, DOI 10.1016/j.infsof.2018.03.007
   Adeniyi A.M., 2016, AM J SOFTW ENG APPL, V5, P7
   Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Alsmadi I., 2009, OPEN SOFTW ENG J, V3
   Alsmadi IM, 2013, IEEE SOFTWARE, V30, P67, DOI 10.1109/MS.2012.22
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], 2016, P ACM S APPL COMPUTI
   Azuma M, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P117, DOI 10.1109/STEP.2003.13
   Beer A, 1998, P INT COMP SOFTW APP, P470, DOI 10.1109/CMPSAC.1998.716698
   Beierle N, 2017, IEEE INT SYMP SOFTW, P28, DOI 10.1109/ISSREW.2017.78
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Carino S, 2015, IEEE INT CONF AUTOM, P138, DOI 10.1109/ASE.2015.70
   Carino S, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P13, DOI 10.1109/AST.2015.10
   Choi W, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P445, DOI 10.1145/3180155.3180173
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Di Martino S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1754
   Duan Linshu, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P5, DOI 10.1109/VALID.2010.11
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Ebert C, 2009, IEEE SOFTWARE, V26, P88, DOI 10.1109/MS.2009.144
   Engstrom E., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), IEEE, 2015, P1, DOI DOI 10.1109/ICSTW.2015
   Fink A., 2019, Conducting research literature reviews: From the internet to paper
   Gao F., 2010, 2010 IEEE INT C INF, P823
   Gao Y, 2016, 2016 IEEE CHINESE GUIDANCE, NAVIGATION AND CONTROL CONFERENCE (CGNCC), P1024, DOI 10.1109/CGNCC.2016.7828927
   Gao ZB, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P55, DOI 10.1109/ICSE.2015.28
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Habibi E, 2015, INFORM SOFTWARE TECH, V67, P159, DOI 10.1016/j.infsof.2015.07.003
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   He ZW, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P18, DOI 10.1109/AST.2015.11
   Huang CY, 2010, J SYST SOFTWARE, V83, P646, DOI 10.1016/j.jss.2009.11.703
   Huang S., 2010, 2010 INT C COMPUTER, V5, pV5
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Jedlitschka A, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P261
   Kervinen A, 2006, ELECTRON NOTES THEOR, V164, P53, DOI 10.1016/j.entcs.2006.09.006
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Koroglu Y, 2018, IEEE INT CONF SOFTW, P105, DOI 10.1109/ICST.2018.00020
   Kushwaha T., 2013, CONFLUENCE 2013 NEXT, P83
   Lei Zhao, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P326, DOI 10.1109/QSIC.2010.11
   Li P, 2007, EMPIR SOFTW ENG, V12, P331, DOI 10.1007/s10664-006-9031-3
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Thai MTT, 2012, QUAL REP, V17
   Marchetto Alessandro, 2011, International Journal on Software Tools for Technology Transfer, V13, P131, DOI 10.1007/s10009-010-0177-3
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Mariani L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P280, DOI 10.1145/3180155.3180162
   Mayo Q, 2014, IEEE ICST WORKSHOP, P128, DOI 10.1109/ICSTW.2014.14
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Memon A, 2003, PROC IEEE INT CONF S, P410, DOI 10.1109/ICSM.2003.1235451
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Michaels R, 2021, 2021 IEEE 11TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P1326, DOI 10.1109/CCWC51732.2021.9376143
   Michaels R, 2020, 2020 10TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P598, DOI [10.1109/ccwc47524.2020.9031238, 10.1109/CCWC47524.2020.9031238]
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   Miniukovich A, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1163, DOI 10.1145/2702123.2702575
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Molnar AJ, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P185, DOI 10.1109/VISSOFT.2015.7332434
   Nass M, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106625
   Nguyen DucHoai., 2010, Proceedings of the Thirty-Third Australasian Conferenc on Computer Science-Volume, V102, P153
   Nolan G., 2015, AGILE ANDROID, P59
   Novella Luigi, 2018, 2018 IEEE 27th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE), P229, DOI 10.1109/WETICE.2018.00051
   Oliveira Alberto, 2020, Intelligent Data Engineering and Automated Learning - IDEAL 2020. 21st International Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12490), P516, DOI 10.1007/978-3-030-62365-4_49
   Paiva ACR, 2017, CLUSTER COMPUT, V20, P633, DOI 10.1007/s10586-017-0728-4
   Pan S.Q., 1996, Progress in Tourism and Hospitality Research, V2, P27, DOI [DOI 10.1002/(SICI)1099-1603(199603)2:1ANDLT;27::AID-PTH29ANDGT;3.0.CO;2-P, 10.1002/(SICI)1099-1603(199603)2:1%26lt;27::AIDPTH29%26gt;3.0.CO;2-P, DOI 10.1002/(SICI)1099-1603(199603)2:1<27::AIDPTH)26GT;3.0.CO;2-P, 10.1002/(SICI)1099-1603(199603)2:13.0.CO;2-P, DOI 10.1002/(SICI)1099-1603(199603)2:13.0.CO;2-P]
   Paydar S, 2020, IJST-T ELECTR ENG, V44, P1013, DOI 10.1007/s40998-019-00270-y
   Prechelt L, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P336, DOI 10.1145/3463274.3463356
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Rauf Abdul, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1057, DOI 10.1109/ITNG.2010.95
   Rauf A, 2018, CLUSTER COMPUT, V21, P729, DOI 10.1007/s10586-017-1000-7
   Rechtberger V, 2022, IEEE ICST WORKSHOP, P207, DOI 10.1109/ICSTW55395.2022.00044
   Reza H, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P183
   Reza H, 2007, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, PROCEEDINGS, P366
   Roggio R.F., 2014, J. Inf. Syst. Appl. Res, V7, P4
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saeed A, 2016, APPL SOFT COMPUT, V49, P1094, DOI 10.1016/j.asoc.2016.08.030
   Salihu IA, 2019, IEEE ACCESS, V7, P17158, DOI 10.1109/ACCESS.2019.2895504
   Shaukat K., 2015, INT J COMPUT SCI INN, V2015, P7
   Si Huang, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P245, DOI 10.1109/ICST.2010.39
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Staffs Keele, 2007, Tech. Rep.
   Strecker J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211620
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162, DOI 10.1109/ICSE.2013.6606562
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Vieira M., 2006, AST, P9, DOI DOI 10.1145/1138929.1138932
   Wang P, 2014, INT CONF COMM SYST, P1161, DOI 10.1109/CSNT.2014.236
   Wetzlmaier T, 2017, P 8 ACM SIGSOFT INT, P5
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Xie Q, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P159
   Yan JW, 2020, PROC INT CONF SOFTW, P457, DOI 10.1145/3377811.3380347
   Yan JW, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P42, DOI 10.1109/QRS.2017.14
   Yasin HN, 2021, SYMMETRY-BASEL, V13, DOI 10.3390/sym13020310
   Yasin HN, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12111894
   Yu ZX, 2013, INFORM SOFTWARE TECH, V55, P2076, DOI 10.1016/j.infsof.2013.07.004
   Yuan X., 2007, P INT C AUTOMATED SO, P405
   Zhang HL, 2017, PROC INT CONF SOFTW, P347, DOI 10.1109/ICSE.2017.39
   ZhanWei Hui, 2010, 2010 IEEE International Conference on Intelligent Computing and Intelligent Systems (ICIS 2010), P559, DOI 10.1109/ICICISYS.2010.5658394
NR 101
TC 6
Z9 6
U1 3
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107062
DI 10.1016/j.infsof.2022.107062
EA SEP 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4U5SW
UT WOS:000858854400003
DA 2024-07-18
ER

PT J
AU Zhou, CY
   He, P
   Zeng, C
   Ma, J
AF Zhou, Chunying
   He, Peng
   Zeng, Cheng
   Ma, Ju
TI Software defect prediction with semantic and structural information of
   codes based on Graph Neural Networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Class Dependency Network; Convolutional
   Neural Network; Graph Convolutional Network
AB Context: Most defect prediction methods consider a series of traditional manually designed static code metrics. However, only using these hand-crafted features is impractical. Some researchers use the Convolutional Neural Network (CNN) to capture the potential semantic information based on the program's Syntax Trees (ASTs). In recent years, leveraging the dependency relationships between software modules to construct a software network and using network embedding models to capture the structural information have been helpful in defect prediction. This paper simultaneously takes the semantic and structural information into account and proposes a method called CGCN. Objective: This study aims to validate the feasibility and performance of the proposed method in software defect prediction. Method: Abstract Syntax Trees and a Class Dependency Network (CDN) are first generated based on the source code. For ASTs, symbolic tokens are extracted and encoded into vectors. The numerical vectors are then used as input to the CNN to capture the semantic information. For CDN, a Graph Convolutional Network (GCN) is used to learn the structural information of the network automatically. Afterward, the learned semantic and structural information are combined with different weights. Finally, we concatenate the learned features with traditional hand-crafted features to train a classifier for more accurate defect prediction. Results: The proposed method outperforms the state-of-the-art defect prediction models for both within-project prediction (including within-version and cross-version) and cross-project prediction on 21 open-source projects. In general, within-version prediction achieves better performance in the three prediction tasks.Conclusion: The proposed method of combining semantic and structural information can improve the performance of software defect prediction.
C1 [Zhou, Chunying; He, Peng; Zeng, Cheng; Ma, Ju] Hubei Univ, Sch Comp Sci & Informat Engn, Wuhan, Peoples R China.
C3 Hubei University
RP He, P (corresponding author), Hubei Univ, Sch Comp Sci & Informat Engn, Wuhan, Peoples R China.
EM zcy9838@stu.hubu.edu.cn; penghe@hubu.edu.cn; zc@hubu.edu.cn;
   dcsxan@nus.edu.sg
RI 周, 纯英/HHN-2930-2022
FU National Key R&D Program of China [2018YFB1003801]; National Natural
   Science Founda-tion of China [61832014, 61902114, 61977021]; Key R&D
   Program of Hubei Province, China [2021BAA184, 2021BAA188]
FX Acknowledgments This work is supported by the National Key R&D Program
   of China (No. 2018YFB1003801) , the National Natural Science Founda-tion
   of China (Nos. 61832014, 61902114, 61977021) , and the Key R&D Program
   of Hubei Province, China under Grant (Nos. 2021BAA184, 2021BAA188) . The
   authors would like to express their gratitude to Edit-Springs (https://
   www.editsprings.cn/) for the expert linguistic services provided.
CR Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2022, IET SOFTW, V16, P185, DOI 10.1049/sfw2.12052
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guo B, 2019, NEUROCOMPUTING, V363, P366, DOI 10.1016/j.neucom.2019.07.052
   Hamilton WL, 2017, ADV NEUR IN, V30
   [何鹏 He Peng], 2018, [电子学报, Acta Electronica Sinica], V46, P257
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He P, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/869356
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Le P, 2016, Arxiv, DOI [arXiv:1603.00423, 10.48550/arXiv.1603.00423]
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li Y, 2017, THESIS
   Lin C, 2021, INT C PROGRAM COMPRE, P184, DOI 10.1109/ICPC52881.2021.00026
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Ma X., 2022, INFORM SOFTWARE TECH, V147
   Mo R, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106794
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Qu Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106605
   Qu Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09965-5
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Qu Y, 2018, IEEE INT CONF AUTOM, P844, DOI 10.1145/3238147.3240469
   Tan ZP, 2022, IEEE T NEUR NET LEAR, V33, P973, DOI 10.1109/TNNLS.2020.3036192
   Tang J, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1067, DOI 10.1145/2736277.2741093
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Weiss GM, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P13
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yang CHH, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP 2021), P6523, DOI 10.1109/ICASSP39728.2021.9413453
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Yun S, 2021, PROC CVPR IEEE, P2340, DOI 10.1109/CVPR46437.2021.00237
   Zeng C, 2021, PROC INT SYMP SOFTW, P69, DOI 10.1109/ISSRE52982.2021.00020
   Zeng M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE OF ONLINE ANALYSIS AND COMPUTING SCIENCE (ICOACS), P225, DOI 10.1109/ICOACS.2016.7563084
   Zhang F., 2022, INFORM SOFTWARE TECH, V148
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao KS, 2022, IET SOFTW, V16, P259, DOI 10.1049/sfw2.12040
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zhao YY, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106939
   Zhen Y., 2022, ACM Trans. Softw. Eng. Methodol.
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhu XD, 2015, PR MACH LEARN RES, V37, P1604
NR 56
TC 14
Z9 15
U1 7
U2 56
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107057
DI 10.1016/j.infsof.2022.107057
EA SEP 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4U5SW
UT WOS:000858854400001
DA 2024-07-18
ER

PT J
AU Ferreira, T
   Vergilio, SR
   Kessentini, M
AF Ferreira, Thiago
   Vergilio, Silvia Regina
   Kessentini, Marouane
TI Variability testing of software product line: A preference-based
   dimensionality reduction approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Spl testing; Search-based software engineering; Preference-based
   algorithms; Dimensionality reduction
ID NONDOMINATED SORTING APPROACH; GENETIC ALGORITHM; OPTIMIZATION
AB Context: Multi-and many-evolutionary algorithms have been applied to derive products for the variability testing of Software Product Lines (SPLs). This problem refers to the selection of an adequate product set to test a SPL by optimizing some objectives related to the number of products to be tested, testing criteria to be satisfied, and revealed faults. However, some problems emerge when the number of objectives to be optimized increases, for example: the solutions generated by the optimization algorithms become incomparable, designing a Pareto-front in this context requires a large number of solutions, and the visualization of such solutions requires special techniques. Several techniques are proposed to tackle this problem, such as decomposition and algorithms based on indicators. Among them, algorithms based on dimensionality reduction and user preferences are widely used, but there are no studies in the literature investigating the usage of both in a combined way. Objective: In light of this, we introduce COR-NSGA-II (Confidence-based Objective Reduction NSGA-II). COR-NSGA-II defines for each objective a confidence-level calculated with the user preferences provided interactively. The objectives with higher values of confidence are removed from the next algorithm execution. Method: For assessing the feasibility of COR-NSGA-II, experiments were conducted by using six different SPLs, seven objectives, two types of reference points representing the user preferences, and two scenarios to simulate different user profiles. Results: COR-NSGA-II is evaluated against four algorithms explored in the literature for the problem, and outperforms most of them according to R-HV and R-IGD. It takes less time to execute and generates a reduced number of solutions, all of them satisfying the user preferences. Conclusion: A qualitative analysis performed with 12 potential users shows that the task of selecting a solution generated by COR-NSGA-II is easier than selecting a solution generated by the other algorithms.
C1 [Ferreira, Thiago] Univ Michigan Flint, Coll Innovat & Technol, Flint, MI 48502 USA.
   [Vergilio, Silvia Regina] Univ Fed Parana, Comp Sci Dept, Curitiba, Brazil.
   [Kessentini, Marouane] Oakland Univ, Sch Engn & Comp Sci, Rochester, MI USA.
C3 University of Michigan System; University of Michigan Flint;
   Universidade Federal do Parana; Oakland University
RP Ferreira, T (corresponding author), Univ Michigan Flint, Coll Innovat & Technol, Flint, MI 48502 USA.
EM thiagod@umich.edu; silvia@inf.ufpr.br; marouane@umich.edu
RI Ferreira, Thiago/HNC-1049-2023
OI Ferreira, Thiago/0000-0001-7010-8306
FU CAPES, Brazil; CNPq, Brazil [307762/2015-7, 305968/2018-1]
FX Acknowledgments This work is supported by CAPES, Brazil and CNPq,
   Brazil, grants: 307762/2015-7 and 305968/2018-1.
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Akbari R, 2012, SWARM EVOL COMPUT, V2, P39, DOI 10.1016/j.swevo.2011.08.001
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2005, P 1 EUR WORKSH MOD T
   [Anonymous], 2006, INT J COMPUT INTELL
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Araújo AA, 2014, LECT NOTES COMPUT SC, V8636, P228
   Arcaini P., 2015, ICST, P1
   Audet C, 2021, EUR J OPER RES, V292, P397, DOI 10.1016/j.ejor.2020.11.016
   Beuche D., 2007, SOFTW DEV MAG PROJEC, V78, P5
   Burke Edmund K Kendall, 2005, SEARCH METHODOLOGIES
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2006, P WORLD C COMP INT, P3352
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   do Nascimento Ferreira T., 2020, IEEE SOFTWARE
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Ferreira J. M., 2013, P 25 INT C SOFTWARE, P232
   Ferreira T. do N., 2021, SUPPLEMENTARY MAT
   Ferreira TD, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P11, DOI 10.1145/3425174.3425211
   Ferreira TD, 2016, APPL SOFT COMPUT, V49, P1283, DOI 10.1016/j.asoc.2016.06.027
   Ferreira TD, 2016, IEEE C EVOL COMPUTAT, P4135, DOI 10.1109/CEC.2016.7744315
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Heradio Ruben, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414951
   Jain H, 2014, IEEE T EVOLUT COMPUT, V18, P602, DOI 10.1109/TEVC.2013.2281534
   Jakubovski HL, 2019, J SYST SOFTWARE, V151, P194, DOI 10.1016/j.jss.2019.02.028
   Jakubovski HL, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P162, DOI 10.1145/3266237.3266275
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Li K, 2018, IEEE T EVOLUT COMPUT, V22, P821, DOI 10.1109/TEVC.2017.2737781
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Filho RAM, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P21, DOI 10.1109/SBES.2015.17
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Oster Sebastian, 2011, 15 INT SOFTW PROD LI, P6, DOI DOI 10.1145/2019136.2019143
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Reuling D., 2015, P 19 INT SOFTWARE PR, P131
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shackelford M, 2004, ADAPTIVE COMPUTING IN DESIGN AND MANUFACTURE VI, P197, DOI 10.1007/978-0-85729-338-1_17
   Strickler A, 2016, APPL SOFT COMPUT, V49, P1232, DOI 10.1016/j.asoc.2016.07.059
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Weissleder Stephan, 2008, 1 WORKSH MOD BAS TES, P19
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
   Zitzler Eckart, 1999, EVOLUTIONARY ALGORIT
NR 57
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107031
DI 10.1016/j.infsof.2022.107031
EA AUG 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300001
DA 2024-07-18
ER

PT J
AU Wu, DW
   Shen, BJ
   Chen, YT
   Jiang, H
   Qiao, L
AF Wu, Dangwei
   Shen, Beijun
   Chen, Yuting
   Jiang, He
   Qiao, Lei
TI Automatically repairing tensor shape faults in deep learning programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Tensor shape faults; Crashing faults; Automated program repair; Deep
   learning programs
AB Context: Software developers frequently invoke deep learning (DL) APIs to incorporate artificial intelligence solutions into software systems. However, misuses of these APIs can cause various DL faults, such as tensor shape faults. Tensor shape faults occur when restriction conditions of operations are not met; they are prevalent in practice, leading to many system crashes. Meanwhile, researchers and engineers still face a strong challenge in detecting tensor shape faults - static techniques incur heavy overheads in defining detection rules, and the only dynamic technique requires human engineers to rewrite APIs for tracking shape changes.
   Objective: This paper introduces a novel technique that leverages machine learning to detect tensor shape faults, and as well uses patterns to repair faults detected.
   Methods: We first construct SFData, a set of 146 buggy programs with crashing tensor shape faults (i.e., those causing programs to crash). We also conduct an empirical study on crashing tensor shape faults, categorizing them into four types and revealing twelve repair patterns. Then we propose Tensfa2, an automated approach to detecting and repairing crashing tensor shape faults. Tensfa2 employs a machine learning method to learn from crash messages and decision trees to detect tensor shape faults. Next, Tensfa2 tracks shape properties by a customized Python debugger, analyzes their data dependences, and uses the twelve patterns to generate patches. Tensfa2 is an extended version of Tensfa-our previous approach presented at ISSRE'21. Its performance is enhanced by two techniques: a search-based method for repairing shape value faults, and a bundle of three ranking strategies for prioritizing the repair patterns.
   Results: Tensfa2 is evaluated on SFData and IslamData (another dataset of tensor shape faults). The results show the effectiveness of Tensfa2. In particular, Tensfa2 achieves an F1-score of 96.88% in detecting the faults and repairs 82 out of 146 buggy programs in SFData.
   Conclusion: We believe that repair patches generated by our approach will help engineers fix their deep learning programs much more efficiently, saving their time and efforts.
C1 [Wu, Dangwei; Shen, Beijun; Chen, Yuting] Shanghai Jiao Tong Univ, Sch Elect Informat & Elect Engn, Shanghai, Peoples R China.
   [Jiang, He] Dalian Univ Technol, Sch Software, Dalian, Peoples R China.
   [Qiao, Lei] Beijing Inst Control Engn, Ctr Board Comp & Elect, Beijing, Peoples R China.
C3 Shanghai Jiao Tong University; Dalian University of Technology
RP Shen, BJ (corresponding author), Shanghai Jiao Tong Univ, Sch Elect Informat & Elect Engn, Shanghai, Peoples R China.
EM wudangwei@sjtu.edu.cn; bjshen@sjtu.edu.cn; chenyt@sjtu.edu.cn;
   jianghe@dlut.edu.cn; fly2moon@163.com
RI Wu, Dangwei/HNQ-9104-2023
OI Shen, Beijun/0000-0001-8370-3956
FU National Natural Science Foundation of China [62032004]; CCF-Huawei
   Innovation Research Plan [TC20210701006/CCF2021-admin-270]
FX This research is supported by National Natural Science Foundation of
   China (Grant No. 62032004). Yuting Chen is also partially sponsored by
   CCF-Huawei Innovation Research Plan (TC20210701006/CCF2021-admin-270).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2011, NIPS 2011
   Collobert R., 2002, Torch: a modular machine learning software library
   Dangwei Wu, 2021, 2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE52982.2021.00014
   Dolby J, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P1, DOI 10.1145/3211346.3211349
   Dong S, 2021, COMPUT SCI REV, V40, DOI 10.1016/j.cosrev.2021.100379
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Everitt BS., 2005, Encyclopedia of statistics in behavioral science
   Gupta K., 2020, Advances in Neural Information Processing Systems, V33, P17685
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jia L, 2020, LECT NOTES COMPUT SC, V12112, P604, DOI 10.1007/978-3-030-59410-7_40
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   keralabiodiversity, US
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Lagouvardos Sifis, 2020, ECOOP
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Sridharan Manu, 2013, Aliasing in Object-Oriented Programming. Types, Analysis and Verification: LNCS 7850, P196, DOI 10.1007/978-3-642-36946-9_8
   Su C., 2020, INT J PERFORMABILITY, V16, P118
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Verma S., 2020, ABS201113452 CORR
   Wan CC, 2022, PROC INT CONF SOFTW, P212, DOI 10.1145/3510003.3510068
   Wan CC, 2021, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE43902.2021.00024
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 44
TC 1
Z9 1
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107027
DI 10.1016/j.infsof.2022.107027
EA AUG 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100014
DA 2024-07-18
ER

PT J
AU Gôlo, MPS
   Araújo, AF
   Rossi, RG
   Marcacini, RM
AF Golo, Marcos P. S.
   Araujo, Adailton F.
   Rossi, Rafael G.
   Marcacini, Ricardo M.
TI Detecting relevant app reviews for software evolution and maintenance
   through multimodal one-class learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE One-class classification; App reviews classification; Multimodal
   Autoencoders
AB Context: Mobile app reviews are a rich source of information for software evolution and maintenance. Several studies have shown the effectiveness of exploring relevant reviews in the software development lifecycle, such as release planning and requirements engineering tasks. Popular apps receive even millions of reviews, thereby making manual extraction of relevant information an impractical task. The literature presents several machine learning approaches to detect relevant reviews. However, these approaches use multi-class learning, implying more user effort for data labeling since users must label a significant set of relevant and irrelevant reviews.
   Objective: This article investigates methods for detecting relevant app reviews considering scenarios with small sets of labeled data. We evaluated unimodal and multimodal representations, different labeling levels, as well as different app review domains and languages.
   Method: We present a one-class multimodal learning method for detecting relevant reviews. Our approaches have two main contributions. First, we use one-class learning that requires only the labeling of relevant app reviews, thereby minimizing the labeling effort. Second, to handle the smaller amount of labeled reviews without harming classification performance, we also present methods to improve feature extraction and reviews representation. We propose the Multimodal Autoencoder and the Multimodal Variational Autoencoder. The methods learn representations which explore both textual data and visual information based on the density of the reviews. Density information can be interpreted as a summary of the main topics or clusters extracted from the reviews.
   Results: Our methods achieved competitive results even using only 25% of labeled reviews compared to models that used the entire training set. Also, our multimodal approaches obtain the highest F-1-Score and AUC-ROC in twenty-three out of twenty-four scenarios.
   Conclusion: Our one-class multimodal methods proved to be a competitive alternative for detecting relevant reviews and promising for practical scenarios involving data-driven software evolution and maintenance.
C1 [Golo, Marcos P. S.; Araujo, Adailton F.; Marcacini, Ricardo M.] Univ Sao Paulo, Inst Math & Comp Sci, POB 668, BR-13560970 Sao Carlos, SP, Brazil.
   [Rossi, Rafael G.] FACOM Fed Univ Mato Grosso do Sul, BR-79070900 Campo Grande, MS, Brazil.
C3 Universidade de Sao Paulo
RP Gôlo, MPS (corresponding author), Univ Sao Paulo, Inst Math & Comp Sci, POB 668, BR-13560970 Sao Carlos, SP, Brazil.
EM marcosgolo@usp.br; adailton.araujo@usp.br; rafael.g.rossi@ufms.br;
   ricardo.marcacini@icmc.usp.br
RI Marcacini, Ricardo/Q-6582-2019
OI Marcacini, Ricardo/0000-0002-2309-3487; Geraldeli Rossi,
   Rafael/0000-0001-8513-3213; Golo, Marcos/0000-0002-9093-8195
FU Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP), Brazil
   [2019/25010-5]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior (CAPES), Brazil [88887.671481/2022-00]; Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq), Brazil [133438/2020-1,
   426663/2018-7, 433082/2018-6]
FX This work was supported by the Fundacao de Amparo a Pesquisa do Estado
   de Sao Paulo (FAPESP), Brazil [grant number 2019/25010-5]; Coordenacao
   de Aperfeicoamento de Pessoal de Nivel Superior (CAPES), Brazil [grant
   number 88887.671481/2022-00]; and the Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq), Brazil [grant numbers
   133438/2020-1, 426663/2018-7 and 433082/2018-6].
CR Aggarwal C.C., 2018, NEURAL NETWORKS DEEP, DOI DOI 10.1007/978-3-319-94463-0
   Aggarwal CC., 2018, Machine learning for text, DOI [10.1007/978-3-319-73531-3_1, DOI 10.1007/978-3-319-73531-3_1]
   Al Kilani N, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P541, DOI [10.1109/SNAMS.2019.8931820, 10.1109/snams.2019.8931820]
   Alam S, 2020, KNOWL-BASED SYST, V196, DOI 10.1016/j.knosys.2020.105754
   Araujo Adailton., 2020, Anais do Encontro Nacional de Inteligencia Artificial e Computacional (ENIAC), SBC, P378, DOI DOI 10.5753/ENIAC.2020.12144
   Araujo AF, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00301-1
   Carnevali JC, 2021, INFORM SCIENCES, V580, P655, DOI 10.1016/j.ins.2021.08.099
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   de Araújo AF, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1321, DOI 10.1145/3412841.3442006
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Sorbo A, 2021, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME52107.2021.00058
   Di Sorbo A, 2021, IEEE T SOFTWARE ENG, V47, P1587, DOI 10.1109/TSE.2019.2930519
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernandez A., 2018, Learning from imbalanced data sets, DOI DOI 10.1007/978-3-319-98074-4
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Golo Marcos, 2019, PROCEEDING NATL M AR, P262
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Guo WZ, 2019, IEEE ACCESS, V7, P63373, DOI 10.1109/ACCESS.2019.2916887
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Kifetew FM, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106635
   Krawczyk B, 2014, INFORM SCIENCES, V264, P182, DOI 10.1016/j.ins.2013.12.019
   Ledel B., ARXIV
   Li YM, 2019, IEEE T KNOWL DATA EN, V31, P1863, DOI 10.1109/TKDE.2018.2872063
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Messaoud M., 2019, MULTILABEL ACTIVE LE, P805, DOI [10.1007/978-3- 030- 29551-6_71, DOI 10.1007/978-3-030-29551-6_71]
   Monarch M., 2021, HUMAN LOOP MACHINE L
   Otter DW, 2021, IEEE T NEUR NET LEAR, V32, P604, DOI 10.1109/TNNLS.2020.2979670
   Panichella S, 2020, INT REQUIR ENG CONF, P404, DOI 10.1109/RE48521.2020.00057
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rossi RG, 2016, INFORM PROCESS MANAG, V52, P217, DOI 10.1016/j.ipm.2015.07.004
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Rungta M, 2020, IEEE INT C SEMANT CO, P162, DOI 10.1109/ICSC.2020.00032
   Sharma S, 2018, COMPUT INTELL-US, V34, P440, DOI 10.1111/coin.12128
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Tan P.N., 2013, Introduction to Data Mining: Pearson New International Edition
   Tao CQ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106290
   Tax D., 2001, ASCI Dissertation Series
   Tax DMJ, 2004, MACH LEARN, V54, P45, DOI 10.1023/B:MACH.0000008084.60811.49
   Trawinski B, 2012, INT J AP MAT COM-POL, V22, P867, DOI 10.2478/v10006-012-0064-z
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267428
   Wu HY, 2021, PROC INT CONF SOFTW, P922, DOI 10.1109/ICSE43902.2021.00088
   Xu JC, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4503
   Yang ZL, 2019, ADV NEUR IN, V32
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
NR 51
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 106998
DI 10.1016/j.infsof.2022.106998
EA JUL 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100002
DA 2024-07-18
ER

PT J
AU de Munk, O
   Scoccia, GL
   Malavolta, I
AF de Munk, Omar
   Scoccia, Gian Luca
   Malavolta, Ivano
TI The state of the art in measurement-based experiments on the mobile web
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Measurement-based experiment; Mobile web; Systematic mapping study
ID SOFTWARE; QOE
AB Context: Nowadays the majority of all worldwide Web traffic comes from mobile devices, as we tend to primarily rely on the browsers installed on our smartphones and tablets (e.g., Chrome for Android, Safari for iOS) for accessing online services. A market of such a large scale leads to an extremely fierce competition, where it is of paramount importance that the developed mobile Web apps are of high quality, e.g., in terms of performance, energy consumption, security, usability. In order to objectively assess the quality of mobile Web apps, practitioners and researchers are conducting experiments based on the measurement of run-time metrics such as battery discharge, CPU and memory usage, number and type of network requests, etc.Objective: The objective of this work is to identify, classify, and evaluate the state of the art of conducting measurement-based experiments on the mobile Web. Specifically, we focus on (i) which metrics are employed during experimentation, how they are measured, and how they are analyzed; (ii) the platforms chosen to run the experiments; (iii) what subjects are used; (iv) the used tools and environments under which the experiments are run.Method: We apply the systematic mapping methodology. Starting from a search process that identified 786 potentially relevant studies, we selected a set of 33 primary studies following a rigorous selection procedure. We defined and applied a classification framework to them to extract data and gather relevant insights.Results: This work contributes with (i) a classification framework for measurement-based experiments on the mobile Web; (ii) a systematic map of current research on the topic; (iii) a discussion of emergent findings and challenges, and resulting implications for future research.Conclusion: This study provides a rigorous and replicable map of the state of the art of conducting measurement-based experiments on the mobile Web. Its results can benefit researchers and practitioners by presenting common techniques, empirical practices, and tools to properly conduct measurement-based experiments on the mobile Web.
C1 [de Munk, Omar; Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Scoccia, Gian Luca] Univ Aquila, DISIM, LAquila, Italy.
C3 Vrije Universiteit Amsterdam; University of L'Aquila
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM o.de.munk@student.vu.nl; gianluca.scoccia@univaq.it; i.malavolta@vu.nl
RI Scoccia, Gian Luca/AFA-9951-2022; Malavolta, Ivano/E-9018-2017
OI Scoccia, Gian Luca/0000-0003-3588-2659; Malavolta,
   Ivano/0000-0001-5773-8346
CR Albasir A, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON MOBILE COMPUTING, APPLICATIONS AND SERVICES (MOBICASE), P90, DOI 10.4108/icst.mobicase.2014.257770
   Ardito Luca, PROFILING POWER CONS
   Ayala I, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/8235458
   Baresi L, 2021, IEEE SOFTWARE, V38, P88, DOI 10.1109/MS.2020.2994306
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bonferroni C.E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali diFirenze, V8, P3
   Boylan JE, 2016, IMA J MANAG MATH, V27, P107, DOI 10.1093/imaman/dpw003
   Casalaro Giuseppina, 2021, SOFTW SYST MODEL, P1
   Cecchet E, 2013, INT WORKSH QUAL SERV, P1
   Chan-Jong-Chu Kwame, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P190, DOI 10.1145/3383219.3383239
   Chauhan J, 2018, IEEE INTERNET COMPUT, V22, P38, DOI 10.1109/MIC.2017.3301612
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Colquhoun D, 2014, ROY SOC OPEN SCI, V1, DOI 10.1098/rsos.140216
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   d'Ambrosio S, 2017, COMPUT NETW, V126, P81, DOI 10.1016/j.comnet.2017.07.003
   de Munk O, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P191, DOI 10.1145/3463274.3463318
   De Ryck Philippe, 2014, PRIMER CLIENT SIDE W, P25
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Drubin DG, 2012, MOL BIOL CELL, V23, P1399, DOI 10.1091/mbc.E12-02-0108
   Eaton K., 2012, Fast Company
   Foster ED., 2017, J Med Libr Assoc, V105, P203, DOI DOI 10.5195/JMLA.2017.88
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Gupta Sarthak, 2020, 7 IEEE ACM INT C MOB
   Gusenbauer M, 2019, SCIENTOMETRICS, V118, P177, DOI 10.1007/s11192-018-2958-5
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hosek J, 2013, IEEE GLOBE WORK, P1157, DOI 10.1109/GLOCOMW.2013.6825149
   Huber S, 2021, LECT NOTES COMPUT SC, V12706, P464, DOI 10.1007/978-3-030-74296-6_35
   Ihara T, 2015, 2015 9th International Conference on Next Generation Mobile Applications, Services and Technologies (NGMAST 2015), P13, DOI 10.1109/NGMAST.2015.44
   Jun B, 2019, MOBICOM'19: PROCEEDINGS OF THE 25TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, DOI 10.1145/3300061.3300137
   Kapetanakis K., 2012, 2012 International Conference on Telecommunications and Multimedia (TEMU), P152, DOI 10.1109/TEMU.2012.6294708
   Kim Y.D., 2013, International Journal of Smart Home, V7, P39
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Le Pochat Victor, 2018, ARXIV PREPRINT ARXIV
   Le Pochat Victor, 2018, CORR ARXIV180601156
   Liu XZ, 2016, IEEE T MOBILE COMPUT, V15, P2206, DOI 10.1109/TMC.2015.2489202
   Liu Y, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P337, DOI 10.1109/ICWS.2015.53
   Ma Y, 2018, IEEE T MOBILE COMPUT, V17, P990, DOI 10.1109/TMC.2017.2756633
   Ma Y, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P691, DOI 10.1145/2736277.2741114
   Ma Yun, 2014, P 6 AS PAC S INT INT, P68
   Malavolta Ivano, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P35, DOI 10.1109/MOBILESoft.2017.7
   Malavolta I, 2020, 2020 IEEE/ACM 7TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P109, DOI 10.1145/3387905.3388593
   Malavolta I, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P61, DOI 10.1145/3417113.3422184
   McKnight P.E., 2010, Mann-Whitney U Test, The Corsini Encyclopedia of Psychology
   McShane BB, 2019, AM STAT, V73, P235, DOI 10.1080/00031305.2018.1527253
   Mendoza Abner, 2015, 2015 IEEE Conference on Computer Communications (INFOCOM). Proceedings, P2740, DOI 10.1109/INFOCOM.2015.7218666
   Miettinen AP., 2010, MOBILE LIGHTWEIGHT W, P124
   Naseer Usama, 2021, HotMobile '21: Proceedings of the 22nd International Workshop on Mobile Computing Systems and Applications, P71, DOI 10.1145/3446382.3448652
   Nejati J, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1305, DOI 10.1145/2872427.2883014
   Nejati Javad, NEED MOBILE SPEED HI
   Park SH, 2022, INT J PR ENG MAN-GT, V9, P395, DOI 10.1007/s40684-021-00319-6
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Qazi IA, 2020, ACM SIGCOMM COMP COM, V50, P36, DOI 10.1145/3431832.3431837
   Qian F, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P218, DOI 10.1145/2594368.2594372
   Rajiullah M, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1532, DOI 10.1145/3308558.3313606
   Resnik DB, 2017, ACCOUNT RES, V24, P116, DOI 10.1080/08989621.2016.1257387
   Rosen S, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P459, DOI 10.1145/3038912.3052574
   Saborido Rubn, 2015, IMPACT SAMPLING FREQ
   StatCounter, DESKT VS MOB VS TABL
   StatCounter, 2020, MOB BROWS MARK SHAR
   Statista, 2020, Mobile Operating System Market Share Worldwide
   Stodden V., 2010, The scientific method in practice: reproducibility in the computational sciences, DOI [10.2139/ssrn.1550193, DOI 10.2139/SSRN.1550193]
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Thiagarajan Narendran., 2012, P 21 INT C WORLD WID, P41, DOI DOI 10.1145/2187836.2187843
   Tian DY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361249
   Tian Deyu, 2021, IEEE T MOBILE COMPUT
   van Riet J, 2020, PROC IEEE INT CONF S, P746, DOI 10.1109/ICSME46990.2020.00084
   Vesuna J, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P159
   Wang Zhen., 2011, P 12 WORKSHOP MOBILE, P91
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xie Feng, 2008, 7 INT C APPL PRINCIP, P28
NR 73
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106944
DI 10.1016/j.infsof.2022.106944
EA MAY 2022
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Olivero, MA
   Bertolino, A
   Dominguez-Mayo, FJ
   Matteucci, I
   Escalona, MJ
AF Olivero, Miguel A.
   Bertolino, Antonia
   Dominguez-Mayo, Francisco Jose
   Matteucci, Ilaria
   Escalona, Maria Jose
TI A Delphi study to recognize and assess systems of systems
   vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Delphi; Expert judgment; Security; Systems of systems
ID COEFFICIENT
AB Context: System of Systems (SoS) is an emerging paradigm by which independent systems collaborate by sharing resources and processes to achieve objectives that they could not achieve on their own. In this context, a number of emergent behaviors may arise that can undermine the security of the constituent systems.Objective: We apply the Delphi method with the aims to improve our understanding of SoS security and related problems, and to investigate their possible causes and remedies.Method: Experts on SoS expressed their opinions and reached consensus in a series of rounds by following a structured questionnaire.Results: The results show that the experts found more consensus in disagreement than in agreement about some SoS characteristics, and on how SoS vulnerabilities could be identified and prevented. Conclusions: From this study we learn that more work is needed to reach a shared understanding of SoS vulnerabilities, and we leverage expert feedback to outline some future research directions.
C1 [Olivero, Miguel A.; Dominguez-Mayo, Francisco Jose; Escalona, Maria Jose] Univ Seville, Seville, Spain.
   [Bertolino, Antonia] Ist Sci & Tecnol Informaz, Pisa, Italy.
   [Matteucci, Ilaria] CNR, Ist Informat & Telemat, Pisa, Italy.
C3 University of Sevilla; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienza e Tecnologie dell'Informazione "Alessandro Faedo"
   (ISTI-CNR); Consiglio Nazionale delle Ricerche (CNR); Istituto di
   Informatica e Telematica (IIT-CNR)
RP Olivero, MA (corresponding author), Univ Seville, Seville, Spain.
EM molivero@us.es; antonia.bertolino@isti.cnr.it; fjdominguez@us.es;
   ilaria.matteucci@iit.cnr.it; mjescalona@us.es
RI Bertolino, Antonia/ABD-6837-2020; Matteucci, Ilaria/AAY-4767-2020;
   Escalona, María José/G-3900-2010; Dominguez-Mayo, F. J./A-8121-2009;
   Matteucci, Ilaria/C-2141-2015
OI Bertolino, Antonia/0000-0001-8749-1356; Escalona, María
   José/0000-0002-6435-1497; Dominguez-Mayo, F. J./0000-0003-3502-8858;
   Matteucci, Ilaria/0000-0002-5936-8470
FU MIUR PRIN [201752ENYB]; Spanish Ministry of Science, Innovation and
   Universities (NICO) [PID2019-105455GB-C31]
FX This work has been partially supported by the MIUR PRIN 2017 Project:
   SISMA (Contract 201752ENYB) . and by the Spanish Ministry of Science,
   Innovation and Universities (NICO, PID2019-105455GB-C31) . The authors
   would like to thank the experts participating in the sur-vey as without
   their generous availability and effort this work would not have been
   possible. Likewise, the authors thank the anonymous re-viewers who
   provided valuable suggestions to improve the quality of this manuscript.
CR Alarabiat A., 2019, ELECT J BUS RES METH
   Olivero MA, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P62, DOI 10.1109/SESoS/WDES.2019.00017
   Axelsson J, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P18, DOI 10.1109/SYSOSE.2015.7151918
   Bianchi T, 2015, THIRD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS SESOS 2015, P23, DOI 10.1109/SESoS.2015.12
   Bouaynaya W, 2020, INFORM SYST FRONT, V22, P1505, DOI 10.1007/s10796-019-09947-5
   BOULDING KE, 1956, MANAGE SCI, V2, P197, DOI 10.1287/mnsc.2.3.197
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Carney O, 1996, J ADV NURS, V23, P1024, DOI 10.1046/j.1365-2648.1996.09623.x
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Dalkey N.C., 1972, Studies in the quality of life
   Daneshvar M., 2018, P 4 INT EN MAN TECHN 2018 12 INT C RES CH, P1, DOI DOI 10.1109/RCIS.2018.8406655
   Darktrace, 2017, GLOB THREAT REP SEL
   Darren M., 1999, SPSS WINDOWS STEP ST
   Dawson MD, 2001, AM J FAM THER, V29, P125, DOI 10.1080/01926180126229
   DIEHL M, 1987, J PERS SOC PSYCHOL, V53, P497, DOI 10.1037/0022-3514.53.3.497
   Ferreira FH, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P54, DOI 10.1109/SEAA53835.2021.00016
   Gliem J. A., 2003, MIDW RES TO PRACT C, V1, P82, DOI DOI 10.1109/PROC.1975.9792
   Graciano Neto V.V., 2020, Software Ecosystems, Sustainability and Human Values in the Social Web, P1, DOI [10.1007/978-3, DOI 10.1007/978-3]
   Guariniello C, 2014, PROCEDIA COMPUT SCI, V28, P720, DOI 10.1016/j.procs.2014.03.086
   Guessi M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1433, DOI 10.1145/2695664.2695795
   Hirschfeld H, 1935, P CAMB PHILOS SOC, V31, P520, DOI 10.1017/S0305004100013517
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Klein J., 2013, P 9 INT ACM SIGSOFT, P13, DOI [10.1145/2465478.2465490, DOI 10.1145/2465478.2465490]
   Legendre P, 2005, J AGR BIOL ENVIR ST, V10, P226, DOI 10.1198/108571105X46642
   Ligaarden O., 2010, EUROPEAN SAFETY RELI, P347
   Ludwig B., 1997, Journal of Extension, V35, P1
   MAHAJAN V, 1976, J MARKETING RES, V13, P317, DOI 10.2307/3150755
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Maier M. W., 2005, RES CHALLENGES SYSTE, P1
   Nakatsu RT, 2009, INFORM MANAGE-AMSTER, V46, P57, DOI 10.1016/j.im.2008.11.005
   Olivero M.A., SYSTEMATIC MAPPING S
   Olivero M. A., 2019, LECT NOTES COMPUT, V11732, P138, DOI [10.1007/978-3-030-30856-8_10, DOI 10.1007/978-3-030-30856-8_10]
   Olivero MA, 2020, J INF SECUR APPL, V52, DOI 10.1016/j.jisa.2020.102492
   Oquendo F, 2017, 2017 12TH SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE)
   Oquendo F, 2016, IEEE INT C ENG COMP, P13, DOI [10.1109/ICECCS.2016.35, 10.1109/ICECCS.2016.012]
   Sandford BA, 2007, RES EVALUAT, V12, DOI DOI 10.7275/PDZ9-TH90
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schmitt N, 1996, PSYCHOL ASSESSMENT, V8, P350, DOI 10.1037/1040-3590.8.4.350
   Silva E, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1674, DOI 10.1145/3167132.3167311
   Teixeira PG, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P34, DOI 10.1109/SESoS/WDES.2019.00013
   Torrecilla-Salinas CJ, 2019, INFORM TECHNOL MANAG, V20, P9, DOI 10.1007/s10799-018-0290-7
   Tsilipanos K, 2013, IEEE SYST J, V7, P114, DOI 10.1109/JSYST.2012.2207274
   Vargas IG, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P32, DOI [10.1109/SESoS.2016.014, 10.1145/2897829.2897835]
   von der Gracht HA, 2012, TECHNOL FORECAST SOC, V79, P1525, DOI 10.1016/j.techfore.2012.04.013
   Wentworth R.B., 1955, APPL IMAGINATION J M, DOI [10.2307/1248180, DOI 10.2307/1248180]
NR 47
TC 5
Z9 5
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106874
DI 10.1016/j.infsof.2022.106874
EA FEB 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Amna, AR
   Poels, G
AF Amna, Anis R.
   Poels, Geert
TI Ambiguity in user stories: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements engineering; Agile software development; User story;
   Ambiguity; Systematic Literature Review
ID SOFTWARE-DEVELOPMENT; DRIVEN DEVELOPMENT; AGILE
AB Context: Ambiguity in user stories is a problem that has received little research attention. Due to the absence of review studies, it is not known how and to what extent this problem, which impacts the effectiveness of user stories in supporting systems development, has been solved.
   Objectives: We review the studies that investigate or develop solutions for problems related to ambiguity in user stories. We investigate how these problems manifest themselves, what their causes and consequences are, what solutions have been proposed and what evidence of their effectiveness has been presented. Based on the insights we obtain from this review, we identify research gaps and suggest opportunities for future research.
   Methods: We followed Systematic Literature Review guidelines to review problems investigated, solutions proposed, and validation/evaluation methods used. We classified the reviewed studies according to the four linguistic levels of ambiguity (i.e., lexical, syntactic, semantic, pragmatic) proposed by Berry and Kamsties to obtain insights from patterns that we observe in the classification of problems and solutions.
   Results: A total of 36 studies published in 2001-2020 investigated ambiguity in user stories. Based on four patterns we discern, we identify three research gaps. First, we need more research on human behaviors and cognitive factors causing ambiguity. Second, ambiguity is seldom studied as a problem of a set of related user stories, like a theme or epic in Scrum. Third, there is a lack of holistic solution approaches that consider ambiguity at multiple linguistic levels.
   Conclusion: Ambiguity in user stories is a known problem. However, a comprehensive solution for addressing ambiguity in a set of related user stories as it manifests itself at different linguistic levels as a cognitive problem is lacking.
C1 [Amna, Anis R.; Poels, Geert] Univ Ghent, Dept Business Informat & Operat Management, Ghent, Belgium.
   [Amna, Anis R.] Univ 17 Agustus, Dept Informat Engn, Surabaya 1945, Indonesia.
   [Poels, Geert] Corelab CVAMO, FlandersMake UGent, Ghent, Belgium.
C3 Ghent University
RP Amna, AR (corresponding author), Univ Ghent, Dept Business Informat & Operat Management, Ghent, Belgium.; Amna, AR (corresponding author), Univ 17 Agustus, Dept Informat Engn, Surabaya 1945, Indonesia.
EM anis.r.amna@untag-sby.ac.id; Geert.Poels@UGent.be
RI Harrison, Dylan/AFP-8142-2022; Poels, Geert/D-1130-2013
OI Poels, Geert/0000-0001-9247-6150; Amna, Anis R./0000-0002-6966-9234
FU Indonesia Endowment Fund for Education (LPDP) [S-1003/LPDP.4/2019];
   Universitas 17 Agustus 1945 Surabaya
FX This work was partially funded by the Indonesia Endowment Fund for
   Education (LPDP) (Contract S-1003/LPDP.4/2019) and Universitas 17
   Agustus 1945 Surabaya.
CR Agra C., 2015, P 8 INT WORKSH ISTAR, P109
   Alzayed A, 2021, INT J ADV COMPUT SC, V12, P81
   [Anonymous], 2000, P INT C SYST SOFTW E
   Araujo L., 2016, ISTAR, P19
   Avdeenko T., 2018, P INT WORKSH SERV OR, P97, DOI [10.1007/978-3-030-03003-2, DOI 10.1007/978-3-030-03003-2]
   Bano M, 2015, IEEE INT WORKS EMPIR, P21, DOI 10.1109/EmpiRE.2015.7431303
   Barbosa R, 2016, I C DEPENDABLE SYST, P2, DOI [10.1109/DSN-W.2016.7, 10.1109/DSN-W.2016.27]
   Barlow JB, 2011, COMMUN ASSOC INF SYS, V29
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Berry DM, 2004, SPRING INT SER ENG C, V753, P7
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Choma Joelma, 2016, INT C HUM COMP INT, P131
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohn M, 2010, SUCCEEEDING AGILE SO
   Cohn M., 2009, User Stories Applied: For Agile Software Development
   Costa N, 2014, LECT NOTES COMPUT SC, V8581, P747, DOI 10.1007/978-3-319-09150-1_55
   de Brock B, 2018, IEEE INT WORKSH MODE, P73, DOI 10.1109/MoDRE.2018.00016
   Dermeval D, 2016, REQUIR ENG, V21, P405, DOI 10.1007/s00766-015-0222-6
   Digital.ai, 2021, 15 STAT AG REP
   Dilorenzo E, 2020, IEEE ACCESS, V8, P107285, DOI 10.1109/ACCESS.2020.2996951
   Ekholm I., 2019, IMPROVE CUSTOMER EXP
   Elallaoui M, 2018, PROCEDIA COMPUT SCI, V130, P42, DOI 10.1016/j.procs.2018.04.010
   Gause D.C., 1989, EXPLORING REQUIREMEN
   Gervasi Vincenzo, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P191, DOI 10.1007/978-3-030-30985-5_12
   Giganto R, 2008, NZ COMP SCI RES STUD, P208
   Gilson F, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P61, DOI 10.1109/ASWEC.2018.00016
   Gossage S, 2015, 2015 AGILE CONFERENCE, P21, DOI 10.1109/Agile.2015.16
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jaqueira A, 2013, P CEUR WORKSH, P55
   Jia JD, 2019, SCI COMPUT PROGRAM, V178, P1, DOI 10.1016/j.scico.2019.03.005
   Jiang B, 2020, MATH PROBL ENG, V2020, DOI 10.1155/2020/4984375
   Kamsties E, 2001, DETECTING AMBIGUITIE
   Kamthan P, 2017, LECT NOTES COMPUT SC, V10586, P605, DOI 10.1007/978-3-319-67585-5_59
   Kannan V, 2019, J AM MED INFORM ASSN, V26, P1344, DOI 10.1093/jamia/ocz123
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kocerka J, 2018, 2018 23RD INTERNATIONAL CONFERENCE ON METHODS & MODELS IN AUTOMATION & ROBOTICS (MMAR), P876, DOI 10.1109/MMAR.2018.8486143
   Lin JY, 2014, ASIAPAC SIGN INFO PR
   Liskin O., 2014, P 7 INT WORKSH COOP, P56, DOI DOI 10.1145/2593702.2593707
   Lopes LA, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234158
   Lopes Souza Pedro, 2018, Information Technology - New Generations. 15th International Conference on Information Technology. Advances in Intelligent Systems and Computing (AISC 738), P267, DOI 10.1007/978-3-319-77028-4_37
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Rivero JM, 2014, INFORM SOFTWARE TECH, V56, P670, DOI 10.1016/j.infsof.2014.01.011
   Melegati J, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P13, DOI 10.1145/3340481.3342732
   Merriam -Webster Inc, 1828, DEF AMB
   Meyer B, 2014, AGILE GOOD HYPE UGLY
   Moreno AM, 2012, LECT NOTES BUS INF P, V111, P168
   Müter L, 2019, LECT NOTES COMPUT SC, V11412, P109, DOI 10.1007/978-3-030-15538-4_7
   Ordóñez H, 2015, LECT NOTES COMPUT SC, V9155, P298, DOI 10.1007/978-3-319-21404-7_22
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Polpinij Jantima, 2009, 2009 IEEE Asia-Pacific Services Computing Conference (APSCC 2009), P219, DOI 10.1109/APSCC.2009.5394119
   Prakash N, 2017, CONF BUS INFORM, V1, P424, DOI 10.1109/CBI.2017.67
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Silva TR, 2020, COGN TECHNOL WORK, V22, P437, DOI 10.1007/s10111-019-00566-3
   Savolainen J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P289, DOI 10.1109/RE.2010.41
   Schwaber K., 2020, The Scrum Guide. The Definitive Guide to Scrum: The Rules of the Game
   Silva Thiago Rocha, 2017, International Journal of Semantic Computing, V11, P513, DOI 10.1142/S1793351X17400219
   Sohan SM, 2010, LECT NOTES BUS INF, V48, P103
   Stella G., 2016, P 4 INT C SOFTW ENG, V422, P191, DOI [10.1007/978-3-319-27896-4, DOI 10.1007/978-3-319-27896-4]
   Svensson H, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P256, DOI 10.1109/CSMR.2005.33
   Tenso T, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P268, DOI 10.1109/REW.2017.24
   Tenso T, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P254, DOI 10.5220/0004569302540259
   Thamrongchote C., 2016, IEEE ACIS 15 INT C C, DOI [10.1109/ICIS.2016.7550829, DOI 10.1109/ICIS.2016.7550829]
   Trkman M, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.08.001
   Umber A., 2011, 2011 Sixth International Conference on Digital Information Management, P102, DOI 10.1109/ICDIM.2011.6093363
   Urbieta M, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106375
   Versionone.com. and Collab.net, 2019, 12 ANN STAT AG REP
   Wanderley F, 2014, IEEE INT WORKSH MODE, P47, DOI 10.1109/MoDRE.2014.6890825
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Wautelet Y., 2017, 22 INT C REQ ENG FDN, V1796
   Wautelet Y, 2019, LECT NOTES BUS INF P, V369, P3, DOI 10.1007/978-3-030-35151-9_1
   Wautelet Y, 2018, LECT NOTES COMPUT SC, V10753, P209, DOI 10.1007/978-3-319-77243-1_13
   Wautelet Y, 2017, COMPUT LANG SYST STR, V50, P159, DOI 10.1016/j.cl.2017.06.007
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Willis  A., 2008, RES LANG COMPUT, V6, P355, DOI DOI 10.1007/S11168
   YANG H, 2010, P 23 INT C COMP LING, P1218
   Yang H., 2010, ASE 10 P IEEE ACM IN, P53, DOI [10.1145/1858996.1859007, DOI 10.1145/1858996.1859007]
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Zeaaraoui Adil, 2013, Third International Conference on Innovative Computing Technology (INTECH 2013), P407, DOI 10.1109/INTECH.2013.6653681
NR 81
TC 11
Z9 11
U1 6
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106824
DI 10.1016/j.infsof.2022.106824
EA JAN 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ4XL
UT WOS:000744536600004
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Halkjelsvik, T
   Liestol, K
AF Jorgensen, Magne
   Halkjelsvik, Torleif
   Liestol, Knut
TI When should we (not) use the mean magnitude of relative error (MMRE) as
   an error measure in software development effort estimation?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: The mean magnitude of relative error (MMRE) is an error measure frequently used to evaluate and compare the estimation performance of prediction models and software professionals.
   Objective: This paper examines conditions for proper use of MMRE in effort estimation contexts.
   Method: We apply research on scoring functions to identify the type of estimates that minimizes the expected value of the MMRE.
   Results: We show that the MMRE is a proper error measure for estimates of the most likely (mode) effort, but not for estimates of the median or mean effort, provided that the effort usage is approximately log-normally distributed, which we argue is a reasonable assumption in many software development contexts. The relevance of the findings is demonstrated on real-world software development data.
   Conclusion: MMRE is not a proper measure of the accuracy of estimates of the median or mean effort, but may be used for the accuracy evaluation of estimates of most likely effort.
C1 [Jorgensen, Magne; Halkjelsvik, Torleif] Simula Metropolitan, Ctr Digital Engn, POB 134 1325, N-0167 Oslo, Norway.
   [Liestol, Knut] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Jorgensen, M (corresponding author), Simula Metropolitan, Ctr Digital Engn, POB 134 1325, N-0167 Oslo, Norway.
EM magnej@simula.no; torleif@simula.no; knut@ifi.uio
CR Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gneiting T, 2011, J AM STAT ASSOC, V106, P746, DOI 10.1198/jasa.2011.r10138
   GOLENKOGINZBURG D, 1988, J OPER RES SOC, V39, P767, DOI 10.1057/jors.1988.132
   Halkjelsvik T., 2018, TIME PREDICTIONS UND, V5
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jorgensen Magne, 2014, P 18 INT C EV ASS SO, DOI [10.1145/2601248.2601262, DOI 10.1145/2601248.2601262]
   Samset K F., 2016, Governance schemes for major public investment projects: a comparative study of principles and practices in six countries
NR 8
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106784
DI 10.1016/j.infsof.2021.106784
EA NOV 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300003
DA 2024-07-18
ER

PT J
AU Fu, JJ
   Wang, YH
   Zhou, YF
   Wang, X
AF Fu, Jiaojiao
   Wang, Yaohui
   Zhou, Yangfan
   Wang, Xin
TI How resource utilization influences UI responsiveness of Android
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Resource utilization; Android performance; Laggy-UI; Empirical study
ID PERFORMANCE
AB Context: The rapid responsiveness of smartphones is critical to user experience. Excessive resource utilization is typically considered as one of the major factors leading to laggy-UI. Much work focuses on modifying the design of Android systems and software to reduce their resource utilization. However, laggy-UI is still quite common on Android devices, especially the low-end ones. One reason is that developers still lack a clear understanding about how the utilization of various resources (e.g., CPU and memory) affects Android responsiveness, which leads to the inadequacy of existing performance optimization measures.
   Objective: The objective of this paper is to obtain a systematical understanding of how the utilization of various resources (e.g., CPU and memory) affects Android responsiveness. Then accordingly, we aim to figure out the root cause(s) of laggy-UI.
   Methods: First, we conduct a set of controlled experiments on two Android devices with a stress test tool. Second, we further test 36 real-life Android software to study whether the competition of resource(s), the root factor(s) causing laggy-UI, is severe in real-life scenarios.
   Results: The experimental results show that CPU competition is the root cause and other resources have no observable impact on Android responsiveness, except in extreme cases, e.g., utilization reaches almost 100%. We also find out CPU competition is quite common for existing Android software when it is running in the background.
   Conclusion: Through stress testing and real-life Android software testing, this work unveils that CPU competition should be the main problem to be solved. Our experimental results deepen and update previous perceptions of resources' impact on Android responsiveness. Based on these findings, we provide a set of suggestions for designing high-performance Android systems and software, and effective performance optimization tools.
C1 [Fu, Jiaojiao; Wang, Yaohui; Zhou, Yangfan; Wang, Xin] Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
   Shanghai Key Lab Intelligent Informat Proc, Shanghai, Peoples R China.
C3 Fudan University
RP Zhou, YF (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
EM jjfu15@fudan.edu.cn; 17210240047@fudan.edu.cn; zyf@fudan.edu.cn;
   xinw@fudan.edu.cn
RI LU, lpp pp/JFJ-9011-2023; cai, wen/JWP-4797-2024; Wang,
   Huiyan/JXW-9178-2024; Wang, Jinguo/JED-9233-2023; Zhou,
   Yangfan/HMV-8677-2023; WANG, YILUN/KFB-0627-2024; Jiang,
   Cheng/JHU-0179-2023
OI Fu, Jiaojiao/0000-0002-0084-6079
FU National Natural Science Foundation of China [61971145]
FX This work was supported by the National Natural Science Foundation of
   China (Project No. 61971145) .
CR Ahmed F, 2017, IEEE ACM T NETWORK, V25, P3709, DOI 10.1109/TNET.2017.2761758
   Amrutkar C, 2013, I C DEPEND SYS NETWO
   [Anonymous], 2015, Proc. of the Annual International Conference on Mobile Systems, Applications, and Services MobiSys '15
   [Anonymous], 2020, DOC UMENT R4 2012705
   Anzhi.com, 2018, ANZH MOST FAM ANDR A
   ARM Limited, 2021, ARM BIG LITTL
   Baidu.com, 2018, BAID MOB MAN
   Barta T., ELIXIR 2, P2021
   Brocanelli M., 2018, IMPROVING PERFORMANC
   Courville J, 2016, IEEE S MASS STOR SYS
   Das T, 2020, EMPIR SOFTW ENG, V25, P2748, DOI 10.1007/s10664-019-09798-3
   Della Toffola L, 2018, INT SYM CODE GENER, P314, DOI 10.1145/3168830
   Du Y., 2016, P 14 ANN INT C MOB S, P137
   Fratantonio Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P687, DOI 10.1145/2786805.2786873
   G. Inc, 2021, ANDR DEV
   G. Inc, 2021, ANDR DEB BRIDG
   Gao Y, 2017, IEEE T MOBILE COMPUT, V16, P1773, DOI 10.1109/TMC.2016.2604258
   Gu Jiatao, 2017, ARXIV PREPRINT ARXIV
   Hiniker A, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P634, DOI 10.1145/2971648.2971762
   House K.S., 2021, NETWORK MONITOR MINI
   Huang G, 2017, IEEE T MOBILE COMPUT, V16, P2913, DOI 10.1109/TMC.2017.2651823
   Jeong Daeho., 2015, 13th USENIX Conference on File and Storage Technologies (FAST 15), P191
   Jeong S., 2013, Proceedings of the 2013 USENIX conference on Annual Technical Conference, P309
   Kang Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P410, DOI 10.1145/2950290.2950316
   Kang Y, 2016, PROC INT SYMP SOFTW, P490, DOI 10.1109/ISSRE.2016.16
   Kim H., 2013, P 7 INT C UB INF MAN
   Kim H, 2012, ACM T STORAGE, V8, DOI 10.1145/2385603.2385607
   Kim Y, 2015, ICCAD-IEEE ACM INT, P690, DOI 10.1109/ICCAD.2015.7372637
   Lee J, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P1235, DOI 10.1145/2971648.2971680
   Lee K., 2015, ANAL CLOUD GAMING PL, P151
   Lee K, 2012, EMSOFT '12: PROCEEDINGS OF THE TENTH AMC INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE 2012, P23
   Li SY, 2018, IEEE ACCESS, V6, P45740, DOI 10.1109/ACCESS.2018.2865177
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2015, IEEE SOFTWARE, V32, P67, DOI 10.1109/MS.2015.4
   Mahimkar A, 2016, INT CONF NETW SER, P188, DOI 10.1109/CNSM.2016.7818416
   Mao B, 2019, IEEE T COMPUT AID D, V38, P1017, DOI 10.1109/TCAD.2018.2834395
   Moon Y., 2015, PROC ANN INT C MOBIL, P419
   Mun H, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1010, DOI 10.1145/3341105.3375773
   N. Software, 2021, TINYCORE
   Nguyen D.T., 2015, PROC ANN INT C MOBIL, P287, DOI DOI 10.1145/2742647.2742661
   Nicholas M., 2018, BEST APPS MONITORING
   Qihoo.com, 2018, QIH MOB MAN
   Ravindranath L, 2012, P 10 USENIX C OP SYS, P107, DOI [DOI 10.5555/2387880.2387891, 10.5555/2387880.2387891]
   Ravindranath L, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P232, DOI 10.1145/2594368.2594387
   Sánchez AB, 2020, IEEE ACCESS, V8, P107214, DOI 10.1109/ACCESS.2020.3000928
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Song LH, 2017, PROC INT CONF SOFTW, P370, DOI 10.1109/ICSE.2017.41
   T. Inc, 2006, NAND VS FLASH MEM
   Tencent.com, 2018, TENC MOB MAN
   Thompson C, 2009, LECT NOTES COMPUT SC, V5860, P36, DOI 10.1007/978-3-642-10265-3_4
   Volosyuk I., 2021, DISKUSAGE
   Wang QS, 2013, I C DEPEND SYS NETWO
   Yan Tingxin, 2012, P 10 INT C MOB SYST, P113, DOI 10.1145/2307636
   Zhang JP, 2019, IEEE C ELEC DEVICES, DOI 10.1109/edssc.2019.8753994
   Zhang L., 2013, PROC IEEEACMIFIP INT, P1, DOI [10.1109/CODES-ISSS.2013.6659020, DOI 10.1109/CODES-ISSS.2013.6659020]
   Zhang SW, 2019, INT WORKSH QUAL SERV, DOI 10.1145/3326285.3329039
   Zhao YX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P176, DOI 10.1145/3180155.3180249
   Zhao ZJ, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P21, DOI 10.1145/2632048.2632080
   Zhong K, 2014, 2014 INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/2656045.2656049
   Zhu M., 2019, IEEE T MOBILE COMPUT
NR 62
TC 1
Z9 1
U1 5
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106728
DI 10.1016/j.infsof.2021.106728
EA SEP 2021
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700005
DA 2024-07-18
ER

PT J
AU Eluri, VK
   Mazzuchi, TA
   Sarkani, S
AF Eluri, Vijaya Kumar
   Mazzuchi, Thomas A.
   Sarkani, Shahram
TI Predicting long-time contributors for GitHub projects using machine
   learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Long-time contributor; GitHub; GHTorrent; BigQuery; Machine learning
   models
ID SOFTWARE; DEVELOPERS
AB Context: Many organizations develop software systems using open source software (OSS), which is risky due to the high possibility of losing support. Contributors are critical for the survival of OSS projects, but very few new contributors remain with OSS projects to become long-time contributors (LTCs). Identification of factors that contribute to become an LTC can help OSS project owners utilize limited resources to retain new contributors. Objective: In this paper, we investigate whether we can effectively predict new contributors to OSS repos-itories becoming long time contributors based on repository and contributor meta-data collected from GitHub. Method: We construct a dataset containing 70,899 observations from 888 most popular repositories with 56,766 contributors. Each observation represents a contributor who joined the repository and is categorized as either an LTC or a non-LTC, depending on whether their project tenure is longer than 3 years. Each observation has 31 features that are calculated using the information of the new contributor and the repository when a new contributor joins the project. We build several machine learning models, including naive Bayes, k-nearest neighbor, logistic regression, decision tree, and random forest to predict LTC validated using 10-fold cross-validation. We compare our best model with state of the art model in terms of precision, recall, F1-score, Matthews correlation coefficient (MCC), and area under the curve (AUC). Results: In 10-fold cross-validation, the precision, recall, F1-score, MCC, and AUC of our best model (random forest) are 0.695, 0.079, 0.140, 0.226, and 0.913, respectively. These values are 27.29%, 92.68%, 86.67%, 56.94%, and 0.55%, respectively better than the best baseline state of the art model (random forest). Conclusion: Compared to state of the art models, the models built using our approach use less than 50% features (31 vs 63), have no wait time of one month after the contributor joins to predict future LTC status, and produce better results.
C1 [Eluri, Vijaya Kumar] George Washington Univ, Syst Engn, Washington, DC 20052 USA.
   [Mazzuchi, Thomas A.; Sarkani, Shahram] George Washington Univ, Sch Engn & Appl Sci, Syst Engn & Engn Management, Washington, DC 20052 USA.
C3 George Washington University; George Washington University
RP Eluri, VK (corresponding author), George Washington Univ, Syst Engn, Washington, DC 20052 USA.
EM eluri@gwu.edu; mazzu@gwu.edu; sarkani@gwu.edu
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Benbya H, 2010, COMMUN ASSOC INF SYS, V27, P589
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   de Lima ML, 2018, J SYST SOFTWARE, V144, P181, DOI 10.1016/j.jss.2018.05.065
   Decan A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110573
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Eluri Vijaya Kumar, 2019, EPiC Series in Computing, V64, P148
   Fan Y, 2019, INT J NEUROSCI, V129, P30, DOI 10.1080/00207454.2018.1492575
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hu Y, 2018, EXPERT SYST APPL, V108, P108, DOI 10.1016/j.eswa.2018.05.002
   Hu Y, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2897-7
   Ihara A, 2014, INT WORKSH EMPIR ENG, P55, DOI 10.1109/IWESEP.2014.12
   Jarczyk O, 2018, INFORM SOFTWARE TECH, V100, P32, DOI 10.1016/j.infsof.2018.03.010
   Jiang J, 2019, INFORM SOFTWARE TECH, V105, P150, DOI 10.1016/j.infsof.2018.08.012
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kobayakawa N, 2017, P INT COMP SOFTW APP, P694, DOI 10.1109/COMPSAC.2017.139
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Krein Jonathan L., 2010, International Journal of Open Source Software & Processes, V2, P41, DOI 10.4018/jossp.2010040104
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lima A., 2014, 8 INT AAAI C WEBL SO, DOI [10.1609/icwsm.v8i1.14552, DOI 10.1609/ICWSM.V8I1.14552]
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nielek R, 2016, 2016 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2016), P200, DOI [10.1109/WI.2016.0037, 10.1109/WI.2016.36]
   Norman C., 2014, ORDINAL METHODS BEHA
   Peter Kincaid J., 1975, DERIVATION NEW READA
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Sen R, 2012, DECIS SUPPORT SYST, V52, P364, DOI 10.1016/j.dss.2011.09.003
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang T, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275223
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yiqing Yu, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3396, DOI 10.1109/HICSS.2012.97
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 51
TC 8
Z9 9
U1 4
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106616
DI 10.1016/j.infsof.2021.106616
EA MAY 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500006
OA hybrid
DA 2024-07-18
ER

PT J
AU Patón-Romero, JD
   Baldassarre, MT
   Rodríguez, M
   Runeson, P
   Höst, M
   Piattini, M
AF David Paton-Romero, J.
   Baldassarre, Maria Teresa
   Rodriguez, Moises
   Runeson, Per
   Host, Martin
   Piattini, Mario
TI Governance and Management of Green IT: A Multi-Case Study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Governance; Management; Audit; Green IT; Sustainability; Multi-case
   study
AB Context: The changes that are taking place with respect to environmental sensitivity are forcing organizations to adopt a new approach to this problem. Implementing sustainability initiatives has become a priority for the social and environmental awareness of organizations that want to stay ahead of the curve. One of the business areas that has, more than others, proven to be a vital asset and a potential ally of the environment, is the area of Information Technology (IT). Through this area, Green IT practices advocate sustainability in and by IT. However, organizations have a significant handicap in this regard, due to the lack of specific Green IT standards and frameworks that help them carry out this type of sustainability practices.
   Objective: We have developed the "Governance and Management Framework for Green IT" (GMGIT), which establishes the necessary characteristics to implement Green IT in organizations, from the point of view of the governance and management of this area. After developing and validating a first version of this framework, we have performed a set of improvements, obtaining the GMGIT 2.0, which we want to validate.
   Method: We have conducted a series of empirical validations at international level based on case studies, whose characteristics and results are presented in this study.
   Results: The results of this multi-case study show an example of the current situation of organizations in Green IT, as well as the resolution of problems encountered during the validations conducted with the GMGIT 1.0.
   Conclusion: The findings obtained demonstrate the usefulness, applicability, and validity of the framework when implementing, auditing, and improving Green IT in organizations in a systematic and progressive manner.
C1 [David Paton-Romero, J.; Rodriguez, Moises; Piattini, Mario] Univ Castilla La Mancha UCLM, Inst Technol & Informat Syst, Alarcos Res Grp, Paseo Univ 4, Ciudad Real 13071, Spain.
   [David Paton-Romero, J.; Baldassarre, Maria Teresa] Univ Bari Aldo Moro UniBa, Dept Informat, Via Edoardo Orabona 4, I-70125 Bari, Italy.
   [David Paton-Romero, J.; Rodriguez, Moises] AQCLab Software Qual Lab, Camino Moledores S-N, Ciudad Real 13051, Spain.
   [Runeson, Per; Host, Martin] Lund Univ LU, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
C3 Universidad de Castilla-La Mancha
RP Patón-Romero, JD (corresponding author), Univ Castilla La Mancha UCLM, Inst Technol & Informat Syst, Alarcos Res Grp, Paseo Univ 4, Ciudad Real 13071, Spain.; Patón-Romero, JD (corresponding author), Univ Bari Aldo Moro UniBa, Dept Informat, Via Edoardo Orabona 4, I-70125 Bari, Italy.; Patón-Romero, JD (corresponding author), AQCLab Software Qual Lab, Camino Moledores S-N, Ciudad Real 13051, Spain.
EM JoseDavid.Paton@gmail.com; mariateresa.baldassarre@uniba.it;
   mrodriguez@aqclab.es; per.runeson@cs.lth.se; martin.host@cs.lth.se;
   Mario.Piattini@uclm.es
RI Höst, Martin/KDN-4323-2024; Runeson, Per/H-5113-2019; Patón-Romero, J.
   David/R-5346-2017; Piattini, Mario/F-6271-2013; Rodriguez,
   Moises/N-3490-2016
OI Höst, Martin/0000-0002-9360-8693; Runeson, Per/0000-0003-2795-4851;
   Piattini, Mario/0000-0002-7212-8279; Rodriguez,
   Moises/0000-0003-2155-7409
FU Spanish Ministry of Science, Innovation and Universities [DI-17-09612,
   RTI2018-098309-B-C31]; "Torres Quevedo" Program of the Spanish Ministry
   of Economy, Industry and Competitiveness [PTQ-16-08504]; Ministry of
   Education, Culture and Sports of the JCCM (Regional Government of
   Castilla-La Mancha) [SBPLY/17/180501/000364]; ERDF (European Regional
   Development Fund) [RTI2018-098309-B-C31, SBPLY/17/180501/000364];
   Italian Ministry of University and Research [PON03PE_00136_1]; Apulia
   Region [T5LXK18]
FX This work is the result of a PhD co-tutele agreement between the
   University of Castilla-La Mancha and the University of Bari "Aldo Moro".
   This work is also part of the Industrial PhD DI-17-09612, funded by the
   Spanish Ministry of Science, Innovation and Universities; of the ECD
   project (PTQ-16-08504), funded by the "Torres Quevedo" Program of the
   Spanish Ministry of Economy, Industry and Competitiveness; of the SOS
   project (SBPLY/17/180501/000364), funded by the Ministry of Education,
   Culture and Sports of the JCCM (Regional Government of Castilla-La
   Mancha) and the ERDF (European Regional Development Fund); of the
   BIZDEVOPS-GLOBAL project (RTI2018-098309-B-C31), funded by the Spanish
   Ministry of Science, Innovation and Universities and the ERDF (European
   Regional Development Fund); of the "Digital Service Ecosystem" project
   (PON03PE_00136_1), funded by the Italian Ministry of University and
   Research; and the "Auriga2020" project (T5LXK18), funded by the Apulia
   Region.
CR García-Mireles GA, 2018, INFORM SOFTWARE TECH, V95, P108, DOI 10.1016/j.infsof.2017.10.002
   Ambtman E.L., 2011, THESIS
   [Anonymous], 2012, COBIT 5: A business framework for the governance and management of enterprise IT
   Ardimento P, 2008, J INF KNOWL MANAG, V7, P197, DOI 10.1142/S0219649208002081
   Baldassarre MT, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P59, DOI 10.1109/WOSQ.2009.5071558
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Blunt C.J., 2009, J APPL COMPUTING INF, V7
   Brodkin Jon., 2008, Network World, V25, P16
   Brundtland G. H., 1987, OUR COMM FUT
   Buchalcevova A., 2015, J SYSTEMS INTEGRATIO, P24, DOI [10.20470/jsi.v6i1.220, DOI 10.20470/JSI.V6I1.220]
   Calero C.Piattini., 2015, Green in Software Engineering, DOI 10.1007/978-3-319-08581-4
   Calero C, 2017, SUSTAIN COMPUT-INFOR, V16, P117, DOI 10.1016/j.suscom.2017.10.011
   Cazier J. A., 2011, SIGGREEN WORKSH SPRO, V11, P10
   Clarke T., 2009, EUROPEAN CORPORATE G, DOI [10.4324/9780203875896., DOI 10.4324/9780203875896]
   Curley M., 2016, BODY KNOWLEDGE GUIDE, P103
   Patón-Romero JD, 2019, J UNIVERS COMPUT SCI, V25, P1736
   Patón-Romero JD, 2019, COMPUT STAND INTER, V65, P180, DOI 10.1016/j.csi.2019.03.007
   Patón-Romero JD, 2018, COMPUT STAND INTER, V60, P26, DOI 10.1016/j.csi.2018.04.005
   Patón-Romero JD, 2017, SUSTAINABILITY-BASEL, V9, DOI 10.3390/su9101761
   De Haes Steven, 2016, International Journal of IT/Business Alignment and Governance, V7, P50, DOI 10.4018/IJITBAG.2016010104
   Deng Q, 2015, SUSTAINABILITY-BASEL, V7, P16737, DOI 10.3390/su71215843
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Epstein MJ, 2014, MAKING SUSTAINABILITY WORK: BEST PRACTICES IN MANAGING AND MEASURING CORPORATE SOCIAL, ENVIRONMENTAL, AND ECONOMIC IMPACTS, 2ND EDITION, P1
   Erdelyi Krisztina, 2013, 2013 IEEE 11th International Symposium on Intelligent Systems and Informatics (SISY), P337, DOI 10.1109/SISY.2013.6662597
   European Commission, 2017, REP COMM EUR PARL CO
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Gabriel C., 2008, Business Information Review, V25, P230, DOI [DOI 10.1177/0266382108098865, 10.1177/0266382108098865]
   Gray G.L., 2011, GREEN IT OPPORTUNITI
   Gray GL, 2014, J INF SYST, V28, P75, DOI 10.2308/isys-50694
   Hankel A., 2014, P 28 ENVIROINFO 2014, P33
   Hertel M, 2013, INFORM SYST FRONT, V15, P815, DOI 10.1007/s10796-013-9417-x
   International Organization for Standardization, 2015, ISO 14000-Environmental management-ISO
   ISACA, 2013, COBIT 5 ASS
   ISO, 2011, 19011 ISO
   ISO, 2003, 15504 ISOIEC
   ISO, 2015, 17021 ISO
   ISO, 2013, 33014 ISOIEC TR
   ISO, 2015, 33000 ISOIEC
   Jenkin TA, 2011, BUS SOC, V50, P266, DOI 10.1177/0007650311398640
   NEVES J., 2005, Corporate social responsibility across Europe
   Pardo C., 2010, ACM INT C PROCEEDING, P51, DOI DOI 10.1145/1961258.1961271
   Paton J.D., 2016, 3 INT WORKSH MEAS ME, P4
   Radovanovic D., 2010, 33 INT CONV MIPRO, P1137
   Ridley G., 2004, P 37 ANN HAW INT C S, DOI [10.1109/HICSS.2004.1265566, DOI 10.1109/HICSS.2004.1265566]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwab Klaus, 2017, 4 IND REVOLUTION, DOI DOI 10.1080/10686967.2018.1436355
   Simmonds DM, 2014, AMCIS 2014 PROCEEDINGS
   Sohal AS, 2002, INT J PROD ECON, V75, P97, DOI 10.1016/S0925-5273(01)00184-0
   Unhelkar B., 2011, Green IT strategies and applications: Using environmental intelligence
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wimmer W., 2010, COMPETITIVE ADVANTAG, DOI [10.1007/978-90-481-9127-7, DOI 10.1007/978-90-481-9127-7]
   Yin R.K., 2017, Applications of case study research, V3rd
NR 53
TC 5
Z9 6
U1 4
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106414
DI 10.1016/j.infsof.2020.106414
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200005
OA Green Published
DA 2024-07-18
ER

PT J
AU Jiang, J
   Wu, QD
   Cao, J
   Xia, X
   Zhang, L
AF Jiang, Jing
   Wu, Qiudi
   Cao, Jin
   Xia, Xin
   Zhang, Li
TI Recommending tags for pull requests in GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Tag recommendation; Pull request; Open-source project; Github
ID PREDICTION; SYSTEM
AB Context: In GitHub, contributors make code changes, then create and submit pull requests to projects. Tags are a simple and effective way to attach additional information to pull requests and facilitate their organization. However, little effort has been devoted to study pull requests' tags in GitHub.
   Objective: Our objective in this paper is to propose an approach which automatically recommends tags for pull requests in GitHub.
   Method: We make a survey on the usage of tags in pull requests. Survey results show that tags are useful for developers to track, search or classify pull requests. But some respondents think that it is difficult to choose right tags and keep consistency of tags. 60.61% of respondents think that a tag recommendation tool is useful. In order to help developers choose tags, we propose a method FNNRec which uses feed-forward neural network to analyze titles, description, file paths and contributors.
   Results: We evaluate the effectiveness of FNNRec on 10 projects containing 68,497 tagged pull requests. The experimental results show that on average, FNNRec outperforms approach TagDeepRec and TagMulRec by 62.985% and 24.953% in terms of F1 - score@3, respectively.
   Conclusion: FNNRec is useful to find appropriate tags and improve tag setting process in GitHub.
C1 [Jiang, Jing; Wu, Qiudi; Cao, Jin; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Xia, Xin] Monash Univ, Informat Technol, Melbourne, Vic, Australia.
C3 Beihang University; Monash University
RP Zhang, L (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
EM jiangjing@buaa.edu.cn; 1040814720@qq.com; 13277061183@163.com;
   xin.xia@monash.edu; lily@buaa.edu.cn
RI Wang, Jingjing/B-7476-2016; Xia, Xin/AAD-6217-2022
OI Wang, Jingjing/0000-0003-3170-8952; Xia, Xin/0000-0002-6302-3256
FU National Key Research and Development Program of China [2018AAA0102304];
   State Key Laboratory of Software Development Environment
   [SKLSDE2019ZX-05]; Fundamental Research Funds for the Central
   Universities [YWF-20-BJ-J-1018]; National Natural Science Foundation of
   China [61732019]
FX This work is supported by the National Key Research and Development
   Program of China No. 2018AAA0102304, the State Key Laboratory of
   Software Development Environment under Grant No. SKLSDE2019ZX-05,
   Fundamental Research Funds for the Central Universities under Grant No.
   YWF-20-BJ-J-1018 and the National Natural Science Foundation of China
   under Grant No. 61732019.
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Belém FM, 2017, J ASSOC INF SCI TECH, V68, P830, DOI 10.1002/asi.23736
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Izquierdo JLC, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P479, DOI 10.1109/SANER.2015.7081860
   COHEN J, 1972, EDUC PSYCHOL MEAS, V32, P61, DOI 10.1177/001316447203200106
   Crone SF, 2010, NEUROCOMPUTING, V73, P1923, DOI 10.1016/j.neucom.2010.01.017
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Li C, 2019, LECT NOTES ARTIF INT, V11776, P11, DOI [10.1007/978-3-030-29563-9_2, 10.1109/civemsa45640.2019.9071616]
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Liu ZG, 2020, APPL INTELL, V50, P1, DOI 10.1007/s10489-019-01511-7
   Llave YA, 2012, J FOOD ENG, V109, P553, DOI 10.1016/j.jfoodeng.2011.10.024
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Wang XY, 2015, J COMPUT SCI TECH-CH, V30, P1017, DOI 10.1007/s11390-015-1578-2
   WESSEL M., 2018, P ACM HUMAN COMPUTER, V2, P1
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yu S, 2018, PROCEEDINGS OF THE 1ST ACM SIGCAS CONFERENCE ON COMPUTING AND SUSTAINABLE SOCIETIES (COMPASS 2018), DOI 10.1145/3209811.3209863
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang ML, 2006, IEEE T KNOWL DATA EN, V18, P1338, DOI 10.1109/TKDE.2006.162
   Zhang YD, 2014, J FOOD ENG, V143, P167, DOI 10.1016/j.jfoodeng.2014.07.001
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 37
TC 11
Z9 12
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106394
DI 10.1016/j.infsof.2020.106394
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200002
DA 2024-07-18
ER

PT J
AU Wang, LL
   Li, BX
   Kong, XL
AF Wang Lulu
   Li Bixin
   Kong Xianglong
TI Type slicing: An accurate object oriented slicing based on sub-statement
   level dependence graph
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program slicing; System dependence graph; Object-oriented program;
   Slicing algorithm
ID PROGRAMS; MODEL
AB Context: Program slicing is very useful in program analysis and software engineering. It computes the slice, which is a part of program and contains all the statements related to the given slicing criterion. The more accurate a slicing technique could be, the smaller the slice is.
   Objective: This paper aims to improve the current slicing accuracy for object-oriented programs. The slicing accuracy is mainly related to three factors, the dependency graph (which extracts the inner relationships of source code), the slicing criterion (which determines the slicing requirement), and the slicing algorithm (which computes the slice for the criterion from the dependency graph).
   Method: Our method consists of three parts. First, we present a Sub-Statement Level Dependence Graph (SSLDG), which computes finer-grained dependences for object-oriented programs than mostly-used statement level graph. Second, we present a new type slicing criterion called (Sub-statement) Type Slicing Criterion (STSC), which supports the user to specify not only the statement and object variable, but also the type of object among its polymorphic types. At last, a corresponding slicing algorithm called (Sub-statement) Type Slicing (STS) is designed to perform the slicing process.
   Results: We implement STS on Java programs as MyJavaSlicer, and run it with ten open source projects and random slicing criteria. The results show that STS slicing algorithm as well as SSLDG would make slices 35.90% smaller than traditional two-phase slicing; additionally using STSC would make the slices 48.4% further smaller; STSC also helps traditional two-phase slices reduced by 56.90%.
   Conclusions: STS could provide more accurate slices than traditional two-phase slicing, and it also runs faster on most cases; STSC helps specify the slicing requirement, and roughly halves the size of slices for both slicing algorithms.
C1 [Wang Lulu; Li Bixin; Kong Xianglong] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Southeast University - China
RP Li, BX (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
EM bx.li@seu.edu.cn
OI Kong, Xianglong/0000-0002-2448-2214
FU National Natural Science Foundation of China [61402103, 61872078];
   Jiangsu Natural Science Foundation [BK20130633, BK20140644]
FX This work was supported partially by National Natural Science Foundation
   of China (Grant Nos. 61402103, 61872078), and Jiangsu Natural Science
   Foundation (Grant Nos. BK20130633, BK20140644). Special thanks to Neil
   Walkinshaw who has given valuable suggestions.
CR Agrawal H., 1990, P ACM SIG PLAN 90 C
   Allen M., 2003, SIGPLAN Notices, V38, P284, DOI 10.1145/966049.777394
   Alomari HW, 2014, J SOFTW-EVOL PROC, V26, P931, DOI 10.1002/smr.1651
   Ball T., 1993, SLICING PROGRAMS ARB, P206
   Beckert B., 2017, INT C INT FORM METH
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P33, DOI 10.1145/375431.375418
   CHENG JD, 1993, P INT COMP SOFTW APP, P231, DOI 10.1109/CMPSAC.1993.404187
   de Jong J.P., 2011, PROGRAM SLICING JAVA
   Du L., 2012, SURVEY APPLICATIONS
   Dwyer M.B., 1999, 997 KSU CIS TR
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Guo A., 2018, INT C SOFTW MAINT EV
   Hammen C, 2004, PSYCHOLOGICAL TREATMENT OF BIPOLAR DISORDER, P17, DOI 10.1145/996821.996830
   Harrold M.J., 2000, ACM SIGSOFT SOFTW EN, V18, P160
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   HORWITZ S, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P392
   Horwitz S., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P146, DOI 10.1145/73560.73573
   Jayaraman G, 2005, LECT NOTES COMPUT SC, V3442, P269, DOI 10.1007/978-3-540-31984-9_20
   Kashima Y, 2015, IEICE T INF SYST, VE98D, P119, DOI 10.1587/transinf.2014EDP7310
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Kovacs G., 1996, TR96108 JOZ ATT U
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Lallchandani JT, 2010, IET SOFTW, V4, P55, DOI 10.1049/iet-sen.2009.0080
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Li B., 2001, 416 TUCS
   Li BX, 2004, J COMPUT SCI TECH-CH, V19, P848, DOI 10.1007/BF02973448
   Liang DL, 1998, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.1998.738527
   Livadas PE, 2000, INFORM SCIENCES, V125, P99, DOI 10.1016/S0020-0255(99)00030-4
   Orso A, 2001, PROC IEEE INT CONF S, P158, DOI 10.1109/ICSM.2001.972726
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Panda S, 2015, INNOV SYST SOFTW ENG, V11, P243, DOI 10.1007/s11334-015-0252-8
   [钱巨 Qian Ju], 2014, [计算机工程与应用, Computer Engineering and Application], V50, P31
   Ranganath V.P., 2004, PRUNING INTERFERENCE, P39
   Sahu Madhusmita, 2017, ACM SIGSOFT Software Engineering Notes, V42, P25, DOI 10.1145/3089649.3089657
   Sahu M, 2019, ARAB J SCI ENG, V44, P9471, DOI 10.1007/s13369-019-04091-3
   Shatnawi A., 2018, CORR, P1
   Singh A, 2018, INT J MENT HEALTH NU, V27, P45
   Singh J, 2018, SOFTWARE PRACT EXPER, V48, P233, DOI 10.1002/spe.2520
   Singh J, 2017, COMPUT STAND INTER, V52, P71, DOI 10.1016/j.csi.2017.01.007
   Sinha S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P432, DOI 10.1109/ICSE.1999.841033
   Umemori F, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P108, DOI 10.1109/SCAM.2003.1238037
   Walkinshaw N, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P55, DOI 10.1109/SCAM.2003.1238031
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser Mark., 1979, PROGRAM SLICES FORMA
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Zhang P, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P565, DOI 10.1109/ICSESS.2014.6933631
   Zhang YK, 2009, IFPT'6: PROGRESS ON POST-GENOME TECHNOLOGIES, PROCEEDINGS, P1
   Zhao J., 2004, P ISFST
   Zhao J., 2001, P WORKSH SOFTW ENG D, P162
   Zhao JJ, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P13, DOI 10.1109/PDSE.1999.779735
   Zhao JJ, 1996, P INT COMP SOFTW APP, V20, P312, DOI 10.1109/CMPSAC.1996.544182
   Zhao JJ, 1999, PROG COMPREHEN, P126, DOI 10.1109/WPC.1999.777751
NR 53
TC 2
Z9 2
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106369
DI 10.1016/j.infsof.2020.106369
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700008
DA 2024-07-18
ER

PT J
AU Abdellatif, A
   Zeng, Y
   Elshafei, M
   Shihab, E
   Shang, WY
AF Abdellatif, Ahmad
   Zeng, Yi
   Elshafei, Mohamed
   Shihab, Emad
   Shang, Weiyi
TI Simplifying the Search of npm Packages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE JavaScript; NPM; Node.js; NPMS; Code reuse; Empirical studies
ID DEFECT PREDICTION; PRODUCTIVITY; REUSE; QUALITY
AB Context: Code reuse, generally done through software packages, allows developers to reduce time-to-market and improve code quality. The npm ecosystem is a Node.js package management system which contains more than 700 K Node.js packages and to help developers find high-quality packages that meet their needs, npms developed a search engine to rank Node.js packages in terms of quality, popularity, and maintenance. However, the current ranking mechanism for npms tends to be arbitrary and contains many different equations, which increases complexity and computation.
   Objective: The goal of this paper is to empirically improve the efficiency of npms by simplifying the used components without impacting the current npms package ranks.
   Method: We use feature selection methods with the aim of simplifying npms' equations. We remove the features that do not have a significant effect on the package's rank. Then, we study the impact of the simplified npms on the packages' rank, the amount of resources saved compared to the original npms, and the performance of the simplified npms as npm evolves.
   Results: Our findings indicate that (1) 31% of the unique variables of npms' equation can be removed without breaking the original packages' ranks; (2) The simplified npms, on average, preserves the overlapping of the packages by 98% and the ranking of those packages by 97%; (3) Using the simplified npms saves 10% of packages scoring time and more than 1.47 million network requests on each scoring run; (4) As the npm evolve through a period of 12 months, the simplified-npms was able to achieve results similar to the original npms.
   Conclusion: Our results show that the simplified npms preserves the original ranks of packages and is more efficient than the original npms. We believe that using our approach, helps the npms community speed up the scoring process by saving computational resources and time.
C1 [Abdellatif, Ahmad; Zeng, Yi; Elshafei, Mohamed; Shihab, Emad; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Abdellatif, Ahmad; Elshafei, Mohamed; Shihab, Emad] Data Driven Anal Software Lab, Montreal, PQ, Canada.
   [Zeng, Yi; Shang, Weiyi] Software Engn & Syst Engn Sense Lab, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Abdellatif, A (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.; Abdellatif, A (corresponding author), Data Driven Anal Software Lab, Montreal, PQ, Canada.
EM a_bdella@encs.concordia.ca; ze_yi@encs.concordia.ca;
   m_lshafe@encs.concordia.ca; eshihab@encs.concordia.ca;
   shang@encs.concordia.ca
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Chatzidimitriou KC, 2018, IEEE WORK CONF MIN S, P42, DOI 10.1145/3196398.3196465
   Chen X, 2017, P INT COMP SOFTW APP, P54, DOI 10.1109/COMPSAC.2017.65
   Chi J, 2017, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2017.16
   Clifton B., 2012, Advanced Web metrics with Google Analytics, V3rd
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P66, DOI 10.1145/3273934.3273942
   Dupret G. E., 2008, P 31 ANN INT ACM SIG, P331, DOI [10.1145/1390334.1390392, DOI 10.1145/1390334.1390392]
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Imminni SK, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P625, DOI 10.1145/2889160.2889174
   Kula Raula Gaikovina, 2017, CORR
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   Lertwittayatrai N, 2017, ASIA PAC SOFWR ENG, P298, DOI 10.1109/APSEC.2017.36
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Merriam S. B., 2001, Revised and expanded from case study research in education
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Petrescu P., 2014, GOOGLE ORGANIC CTR S
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Wang Yining, 2013, P 26 ANN C LEARN THE, DOI [DOI 10.1371/JOURNAL.PONE.0067335, DOI 10.16619/J.CNKI.RMLT.2013.23.018]
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
NR 30
TC 5
Z9 5
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106365
DI 10.1016/j.infsof.2020.106365
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800007
DA 2024-07-18
ER

PT J
AU Tebes, G
   Peppino, D
   Becker, P
   Matturro, G
   Solari, M
   Olsina, L
AF Tebes, Guido
   Peppino, Denis
   Becker, Pablo
   Matturro, Gerardo
   Solari, Martin
   Olsina, Luis
TI Analyzing and documenting the systematic review results of software
   testing ontologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing ontology; Systematic literature review; Systematic
   literature review process; Secondary study; Analysis; Testing strategy
ID QUALITY
AB Context: Software testing is a complex area since it has a large number of specific methods, processes and strategies, involving a lot of domain concepts. Therefore, it would be valuable to have a conceptualized software testing ontology that explicitly and unambiguously defines the concepts. Consequently, it is important to find out the available evidence in the literature on primary studies for software testing ontologies. In particular, we are looking for research that has a rich ontological coverage that includes Non-Functional Requirements (NFRs) and Functional Requirements (FRs) concepts in conjunction with static and dynamic testing concepts, which can be used in method and process specifications for a family of testing strategies.
   Objective: The main goal for this secondary study is to identify, evaluate and synthesize the available primary studies on conceptualized software testing ontologies.
   Method: To conduct this study, we use the Systematic Literature Review (SLR) approach, which follows our enhanced SLR process. We set three research questions. Additionally, to quantitatively evaluate the quality of the selected conceptualized ontologies, we designed a NFRs tree and its associated metrics and indicators.
   Results: We obtained 12 primary studies documenting conceptualized testing ontologies by using three different retrieval methods. In general, we noted that most of them have a lack of NFRs and static testing terminological coverage. Finally, we observe that none of them is directly linked with FRs and NFRs conceptual components.
   Conclusion: A general benefit of having the suitable software testing ontology is to minimize the current heterogeneity, ambiguity and incompleteness problems in terms, properties and relationships. We have confirmed that exists heterogeneity, ambiguity, and incompleteness for concepts dealing with testing artifacts, roles, activities, and methods. Moreover, we did not find the suitable ontology for our aim since none of the conceptualized ontologies are directly linked with NFRs and FRs components.
C1 [Tebes, Guido; Peppino, Denis; Becker, Pablo; Olsina, Luis] UNLPam, GIDIS Web, Engn Sch, Gen Pico, LP, Argentina.
   [Matturro, Gerardo; Solari, Martin] Univ ORT Uruguay, Engn Sch, Montevideo, Uruguay.
C3 University ORT Uruguay
RP Tebes, G (corresponding author), UNLPam, GIDIS Web, Engn Sch, Gen Pico, LP, Argentina.
EM guido.tebes92@gmail.com; denispeppino92@gmail.com;
   beckerp@ing.unlpam.edu.ar; matturro@ort.edu.uy;
   martin.solari@ort.edu.uy; olsinal@ing.unlpam.edu.ar
RI Matturro, Gerardo/W-4866-2017; Becker, Pablo/IAO-2503-2023
OI Matturro, Gerardo/0000-0001-6432-1223; 
FU Science and Technology Agency of Argentina at UNLPam (Universidad
   Nacional de La Pampa) [PICT 2014-1224]
FX This work and line of research are supported by the Science and
   Technology Agency of Argentina, in the PICT 2014-1224 project at UNLPam
   (Universidad Nacional de La Pampa).
CR [Anonymous], I EL EL ENG SAND SOF
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], STAND GLOSS TERMS US
   [Anonymous], NEW REV HYPERMEDIA M
   [Anonymous], THESIS
   [Anonymous], 21 CIBSE 18
   [Anonymous], 2008, WEB ENG MODELLING IM
   [Anonymous], SWEBOK GUID SOFTW EN
   [Anonymous], 2013, EMERGING TRENDS ICT, DOI DOI 10.1016/B978-0-12-411474-6.00002-5
   [Anonymous], 29 INT C SOFTW ENG K
   [Anonymous], 2015, CLEI ELECT J, DOI DOI 10.19153/CLEIEJ.18.1.2
   [Anonymous], 2019, J SOFTWARE ENG RES D, DOI DOI 10.5753/JSERD.2019.460
   [Anonymous], 2009, INT WORKSH ONT CONC
   [Anonymous], 2017, 20 CIBSE 17
   [Anonymous], 2 BRAZ S SYST AUT SO
   [Anonymous], 2005, P C DAT MIN DAT WAR
   [Anonymous], I EL EL ENG SAND SOF
   [Anonymous], JOURNAL
   Arnicans G, 2013, FRONT ARTIF INTEL AP, V249, P263, DOI 10.3233/978-1-61499-161-8-263
   Barbosa Ellen F., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P697
   Becker P, 2019, J COMPUT SCI TECHNOL, V19, P153, DOI 10.24215/16666038.19.e15
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cai LZ, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P103, DOI 10.1109/PRDC.2009.25
   d'Aquin M, 2011, APPL ONTOL, V6, P165, DOI 10.3233/AO-2011-0093
   Degbelo Auriol., 2017, P 13 INT C SEMANTIC, P1, DOI DOI 10.1145/3132218.3132219
   Dujmovie J.J., 1996, Proceedings of the 22nd International Conference for the Resource Management and Performance Evaluation of Enterprise CS, V1, P368
   Duque-Ramos A, 2011, J RES PRACT INF TECH, V43, P159
   Fernandez M., 1997, Methontology: From ontological art towards ontological engineering
   Ferrario R, 2017, APPL ONTOL, V12, P1, DOI 10.3233/AO-170178
   Freitas A, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P400, DOI 10.1109/WI-IAT.2014.62
   Gangemi A, 2006, LECT NOTES COMPUT SC, V4011, P140
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Haining Yao, 2005, Journal of Computer Sciences, V1, P107, DOI 10.3844/jcssp.2005.107.113
   ISO, 2013, 29119 ISOIECIEEE
   ISO, 2001, Stan-dard ISO/IEC 9126-1
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Lam RW, 2005, CAN J PSYCHIAT, V50, P167, DOI 10.1177/070674370505000306
   Lew P, 2012, REQUIR ENG, V17, P299, DOI 10.1007/s00766-011-0128-x
   Lozano-Tello A, 2004, J DATABASE MANAGE, V15, P1, DOI 10.4018/jdm.2004040101
   Olsina L, 2002, IEEE MULTIMEDIA, V9, P20, DOI 10.1109/MMUL.2002.1041945
   *OMG, 2008, SOFTW SYST PROC ENG
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Saier MH, 2007, WATER AIR SOIL POLL, V181, P1, DOI 10.1007/s11270-007-9372-6
   Sapna PC, 2011, COMM COM INF SC, V141, P91
   Souza E.F., 2013, ONT RES SEM BRAZ ONT, V1041, P71
   Tebes G, 2018, J COMPUT SCI TECHNOL, V18, P48, DOI 10.24215/16666038.18.e06
   Vasanthapriyan S., 2017, INT S KNOWLEDGE SYST, P212
   Vasanthapriyan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P472, DOI 10.1109/QRS-C.2017.82
   Xiaoying Bai, 2008, 2008 IEEE International Conference on Web Services (ICWS), P465, DOI 10.1109/ICWS.2008.111
   Zhu H., 2005, SOFTWARE EVOLUTION U, P263
NR 52
TC 14
Z9 15
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106298
DI 10.1016/j.infsof.2020.106298
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200001
DA 2024-07-18
ER

PT J
AU Molina-Ríos, J
   Pedreira-Souto, N
AF Molina-Rios, Jimmy
   Pedreira-Souto, Nieves
TI Comparison of development methodologies in web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Development methodologies; Web applications; Comparison; Agile
   methodologies
ID MODEL-DRIVEN DEVELOPMENT; AGILE; REQUIREMENTS; KNOWLEDGE; LANGUAGE;
   SUPPORT; QUALITY
AB Context: Web applications development is at its peak due to the advance of technological trends and the constant dependence of the Internet. As a result of the needs of developers, new development methodologies have emerged. However, that does not mean that companies always implement an optimal development process; instead, there are several disadvantages presented by an inadequate and not versatile methodologies.
   Objective: The aim is to compare web development methodologies based on dynamic features presented during the life cycle to identify their use, relevance, and characteristics. The process employing is an SLR and field research to Ecuadorian development companies.
   Method: The method used is a systematic literature review (SLR) for the identification of characteristics and processes of development methodologies. Additionally, a survey of Ecuadorian web application developers was implemented to assess the importance of using a method during the project.
   Results: The literature review exhibited as a result that UWE and OOHDM have greater flexibility than other methodologies before dynamic environments during the web development process. On the other hand, within field research was obtained that companies use different software development methods than those assessed in the study (hybrid methodologies). However, within the range of companies using the compared methodologies, UWE is the most selected.
   Conclusions: Each methodology holds particular features and employment environment, which makes them useful in specific conditions. Through the field research, it is possible to conclude that most of the companies use different methodologies than the evaluated ones; thus, the process is guided by hybrids methods or models based on experience. On the other hand, through the SLR, we identified UWE as the most suitable methodology for web development under dynamic environments, such as the size of the company, the need to modify the requirements, or the knowledge that the development team has about the process.
C1 [Molina-Rios, Jimmy] Tech Univ Machala, Civil Engn Fac, Machala 070222, Ecuador.
   [Pedreira-Souto, Nieves] Univ A Coruna, Comp Sci Fac, A Coruna 15071, Ecuador.
RP Molina-Ríos, J (corresponding author), Tech Univ Machala, Civil Engn Fac, Machala 070222, Ecuador.
EM jmolina@utmachala.edu.ec; nieves.pedreira@udc.es
RI Ríos, Jimmy Rolando JRM Molina/P-3829-2016; Pedreira,
   Nieves/AAS-1848-2021
OI Ríos, Jimmy Rolando JRM Molina/0000-0003-3915-8270; Pedreira,
   Nieves/0000-0002-8122-0886
CR Aedo I, 2003, INFORM SOFTWARE TECH, V45, P229, DOI 10.1016/S0950-5849(02)00159-3
   Aesoft, AES SIT OF AS EC SOF
   Al-Salem LS, 2007, J SYST SOFTWARE, V80, P294, DOI 10.1016/j.jss.2006.05.005
   Atzeni P., 2001, World Wide Web, V4, P21, DOI 10.1023/A:1012456311864
   Avgeriou P, 2005, MULTIMED TOOLS APPL, V27, P5, DOI 10.1007/s11042-005-2712-x
   Batini C, 2007, WORLD WIDE WEB, V10, P349, DOI 10.1007/s11280-007-0025-x
   Bolchini D, 2004, REQUIR ENG, V9, P85, DOI 10.1007/s00766-004-0188-2
   Ceri S, 2002, IEEE INTERNET COMPUT, V6, P20, DOI 10.1109/MIC.2002.1020321
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Cicchetti A, 2013, SOFTW SYST MODEL, V12, P53, DOI 10.1007/s10270-011-0193-0
   Conejero JM, 2013, J SYST SOFTWARE, V86, P2981, DOI 10.1016/j.jss.2013.04.053
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Domínguez-Mayo FJ, 2012, INFORM SOFTWARE TECH, V54, P1265, DOI 10.1016/j.infsof.2012.06.007
   Escalona M J., 2003, Journal of Web Engineering, V2, P193
   Frasincar F, 2010, INFORM SYST, V35, P23, DOI 10.1016/j.is.2009.03.003
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garrigós I, 2010, INFORM SOFTWARE TECH, V52, P991, DOI 10.1016/j.infsof.2010.04.001
   Giachetti RE, 2005, INT J COMPUT INTEG M, V18, P329, DOI 10.1080/09511920512331317818
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   Gitzel R, 2007, SCI COMPUT PROGRAM, V66, P105, DOI 10.1016/j.scico.2006.09.001
   Gkantouna V., 2016, ENG APPL ARTIF INTEL, V51, P97
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   Guerra-García C, 2013, INFORM SYST FRONT, V15, P433, DOI 10.1007/s10796-012-9401-x
   Jeary S, 2009, SOFTWARE QUAL J, V17, P125, DOI 10.1007/s11219-008-9066-3
   Jung BK, 2003, SCI CHINA SER F, V46, P241, DOI 10.1360/02yf0058
   Kim J, 2003, EXPERT SYST APPL, V24, P103, DOI 10.1016/S0957-4174(02)00088-X
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lee C, 2004, INFORM SOFTWARE TECH, V46, P17, DOI 10.1016/S0950-5849(03)00094-6
   Lee H, 1999, INFORM MANAGE, V36, P121, DOI 10.1016/S0378-7206(99)00011-7
   Li YF, 2014, INFORM SYST, V43, P20, DOI 10.1016/j.is.2014.02.001
   Manhas Jatinder, 2017, International Journal of Information Technology, V9, P363, DOI 10.1007/s41870-017-0045-4
   Rivero JM, 2014, INFORM SOFTWARE TECH, V56, P670, DOI 10.1016/j.infsof.2014.01.011
   MERIALDO P, 2003, ACM T INTERNET TECHN, V3, P49
   Meso P, 2006, J SYST SOFTWARE, V79, P15, DOI 10.1016/j.jss.2004.11.002
   Muller Pierre-Alain., 2005, Software and Systems Modeling, V4, P424
   Navarro A, 2008, SCI COMPUT PROGRAM, V71, P1, DOI 10.1016/j.scico.2007.10.003
   Nicolaescu P, 2018, INFORM SYST, V74, P23, DOI 10.1016/j.is.2017.07.008
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Paydar S, 2015, AUTOMAT SOFTW ENG, V22, P241, DOI 10.1007/s10515-014-0144-4
   Luna ER, 2011, REQUIR ENG, V16, P297, DOI 10.1007/s00766-011-0124-1
   Schmid HA, 2004, IEEE INTERNET COMPUT, V8, P19
   Schon E.-M., 2019, Journal of Computer and Communications, V7, P1
   Schwabe D., 2001, IEEE Multimedia, V8, P20, DOI 10.1109/93.923950
   Senapathi M, 2017, J SYST SOFTWARE, V132, P298, DOI 10.1016/j.jss.2017.07.010
   Shore H, 2005, COMPUT STAT DATA AN, V49, P1148, DOI 10.1016/j.csda.2004.07.006
   Tai H, 2004, IBM J RES DEV, V48, P797, DOI 10.1147/rd.485.0797
   Tarhan A, 2014, INFORM SOFTWARE TECH, V56, P477, DOI 10.1016/j.infsof.2013.12.002
   Torre I, 2009, USER MODEL USER-ADAP, V19, P433, DOI 10.1007/s11257-009-9067-3
   Torrecilla-Salinas CJ, 2016, INFORM SOFTWARE TECH, V71, P92, DOI 10.1016/j.infsof.2015.11.002
   Torrecilla-Salinas CJ, 2015, INFORM SOFTWARE TECH, V61, P124, DOI 10.1016/j.infsof.2015.01.006
   Torres V, 2012, SOFTW SYST MODEL, V11, P609, DOI 10.1007/s10270-010-0177-5
   Valderas P, 2009, INFORM SOFTWARE TECH, V51, P749, DOI 10.1016/j.infsof.2008.09.008
NR 54
TC 9
Z9 11
U1 6
U2 56
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106238
DI 10.1016/j.infsof.2019.106238
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100001
DA 2024-07-18
ER

PT J
AU Rakic, G
   Tóth, M
   Budimac, Z
AF Rakic, Gordana
   Toth, Melinda
   Budimac, Zoran
TI Toward recursion aware complexity metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintainability; Source code readability; Source code
   comprehension; Debugging; Source code complexity; Complexity metrics
ID SOFTWARE COMPLEXITY; COGNITIVE-COMPLEXITY; WEYUKERS PROPERTIES; CODE
AB Context: Software developers spend a significant amount of time on reading, comprehending, and debugging of source code. Numerous software metrics can give us awareness of incomprehensible functions or of flaws in their collaboration. Invocation chains, especially recursive ones, affect solution complexity, readability, and understandability. Even though decomposed and recursive solutions are characterized as short and clear in comparison with iterative ones, they hide the complexity of the observed problem and solution. As the collaboration between functions can strongly depend on context, difficulties are usually detected in debugging, testing or by static analysis, while metrics support is still very weak.
   Objective: We introduce a new complexity metric, called Overall Path Complexity (OPC), which is aware of (recursive) call chains in the observed source code. As invocations are basic collaboration mechanism and recursions are broadly accepted, the OPC metric is intended to be applicable independently on programming language and paradigm.
   Method: We propose four different versions of the OPC calculation algorithm and explore and discuss their suitability. We have validated proposed metrics based on a Framework specially designed for evaluation and validation of software complexity metrics and accordingly performed theoretical, empirical and practical validation. Practical validation was performed on toy examples and industrial cases (47012 LOCs, 2899 functions, and 758 recursive paths) written in Erlang.
   Result: Based on our analysis we selected the most suitable (of 4 proposed) OPC calculation formula, and showed that the new metric expresses advanced properties of the software in comparison with other available metrics that was confirmed by low correlation.
   Conclusion: We introduced the OPC metric calculated on the Overall Control Flow Graph as an extension of Cyclomatic Complexity by adding awareness of (recursive) invocations. The values of the new metric can lead us to find the problematic fragments of the code or of the execution paths.
C1 [Rakic, Gordana; Budimac, Zoran] Univ Novi Sad, Fac Sci, Dept Math & Informat, Trg Dositeja Obradovica 4, Novi Sad 21000, Serbia.
   [Toth, Melinda] Eotvos Lorand Univ, Fac Informat, Dept Programming Languages & Compilers, Pazmany Peter Stny 1-C, H-1117 Budapest, Hungary.
C3 University of Novi Sad; Eotvos Lorand University
RP Rakic, G (corresponding author), Univ Novi Sad, Fac Sci, Dept Math & Informat, Trg Dositeja Obradovica 4, Novi Sad 21000, Serbia.
EM gordana.rakic@dmi.uns.ac.rs; tothmelinda@elte.hu;
   zoran.budimac@dmi.uns.ac.rs
RI Rakic, Gordana/K-6200-2012
OI Rakic, Gordana/0000-0001-7366-5159
FU Ministry of Education, Science, and Technological development, Republic
   of Serbia [OI 174023]; Hungarian Government through the Thematic
   Excellence Programme, Industry and Digitization Subprogramme, NRDI
   Office, 2019
FX This joint work was partially supported by the Ministry of Education,
   Science, and Technological development, Republic of Serbia, through
   project no. OI 174023, and by the Hungarian Government through the
   Thematic Excellence Programme, Industry and Digitization Subprogramme,
   NRDI Office, 2019.
CR [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], THESIS
   Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Armstrong J., 2007, Programming Erlang: Software for a Concurrent World, V1st
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Blau S, 1999, COMPUT NETW, V31, P559, DOI 10.1016/S0169-7552(98)00282-7
   Bozó I, 2011, 12TH SYMPOSIUM ON PROGRAMMING LANGUAGES AND SOFTWARE TOOLS, SPLST' 11, P138
   Chapin N, 1996, J SOFTW MAINT-RES PR, V8, P101, DOI 10.1002/(SICI)1096-908X(199603)8:2<101::AID-SMR125>3.0.CO;2-3
   Crasso M, 2016, COMPUT INFORM, V35, P497
   De Silva DI, 2017, IEEE INT SYMP INFO, P241, DOI 10.1109/ISIT.2017.8006526
   De Silva DI, 2013, PROCEEDINGS OF THE 2013 8TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION (ICCSE 2013), P685
   Elixir-stat, 2019, COLL CO US EL PROD
   Fowler M., 2009, Refactoring: improving the design of existing code
   GORLA N, 1990, IEEE T SOFTWARE ENG, V16, P223, DOI 10.1109/32.44385
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   HARRISON W, 1982, COMPUTER, V15, P65, DOI 10.1109/MC.1982.1654138
   Horvath Z., 2009, INT C KNOWL ENG PRIN, V54, P7
   Hutton G., 2016, PROGRAMMING HASKELL
   Jakhar A. K., 2014, International Journal of Software Engineering and Its Applications, V8, P185, DOI [10.14257/ijseia.2014.8.7,15, DOI 10.14257/IJSEIA.2014.8.7,15]
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   KEARNEY JK, 1986, COMMUN ACM, V29, P1044, DOI 10.1145/7538.7540
   Király R, 2011, ANN MATH INFORM, V38, P59
   Koopman P., 2001, FUNCTIONAL PROGRAMMI
   Kushwaha D. S., 2006, 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems
   Kushwaha D.S., 2006, ACM SPECIAL INTEREST, V31, P1, DOI DOI 10.1145/1163514.1163533
   LAKSHMANAN KB, 1991, IEEE T SOFTWARE ENG, V17, P1289, DOI 10.1109/32.106989
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lokuciejewski P, 2011, EMBED SYST, P1, DOI 10.1007/978-90-481-9929-7
   Malhotra R, 2016, INT J SOFTW ENG KNOW, V26, P1221, DOI 10.1142/S0218194016500431
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Misra S, 2004, PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P103, DOI 10.1109/COGINF.2004.1327464
   Misra S, 2012, IET SOFTW, V6, P323, DOI 10.1049/iet-sen.2011.0206
   Misra Sanjay, 2009, International Journal of Software Science and Computational Intelligence, V1, P91, DOI 10.4018/jssci.2009040106
   Misra S., 2006, INT J THEORETICAL AP, V1, P1
   Misra S, 2008, LECT NOTES COMPUT SC, V5073, P641
   Misra S, 2007, PROCEEDINGS OF THE SIXTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P134, DOI 10.1109/COGINF.2007.4341883
   Misra S, 2007, PROCEEDINGS OF THE SIXTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P120, DOI 10.1109/COGINF.2007.4341881
   Misra S, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P242, DOI 10.1109/COGINF.2006.365703
   Misra S, 2006, LECT NOTES COMPUT SC, V4263, P1050
   Misra S, 2018, IEEE ACCESS, V6, P8782, DOI 10.1109/ACCESS.2018.2791344
   Misra S, 2011, LECT NOTES COMPUT SC, V6786, P342, DOI 10.1007/978-3-642-21934-4_28
   Misra S, 2012, LECT NOTES COMPUT SC, V7336, P234, DOI 10.1007/978-3-642-31128-4_17
   Misra S, 2011, SADHANA-ACAD P ENG S, V36, P317, DOI 10.1007/s12046-011-0028-2
   Misra Sanjay, 2010, Proceedings of the Indian National Science Academy, V76, P55
   Misra S, 2008, J INF SCI ENG, V24, P1689
   Misra S, 2009, LECT NOTES COMPUT SC, V5593, P70, DOI 10.1007/978-3-642-02457-3_6
   Rakic G, 2013, AIP CONF PROC, V1558, P357, DOI 10.1063/1.4825497
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69, DOI 10.1109/CJECE.2003.1532511
   Sheetz S.D., 1991, P 1 WORKSH INF TECHN
   Sipos A., 2006, P MACS 6 JOINT C MAT, P85
   Stafford J.A., 2000, THESIS
   Toth Melinda, 2012, Central European Functional Programming School. 4th Summer School, CEFP 2011. Revised Selected Papers, P440, DOI 10.1007/978-3-642-32096-5_9
   Vinju J. J., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P154, DOI 10.1109/SCAM.2012.17
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
NR 55
TC 5
Z9 5
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106203
DI 10.1016/j.infsof.2019.106203
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100003
DA 2024-07-18
ER

PT J
AU Dalpiaz, F
   van der Schalk, I
   Brinkkemper, S
   Aydemir, FB
   Lucassen, G
AF Dalpiaz, Fabiano
   van der Schalk, Ivor
   Brinkkemper, Sjaak
   Aydemir, Fatma Basak
   Lucassen, Garm
TI Detecting terminological ambiguity in user stories: Tool and
   experimentation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Natural language processing; Requirements engineering; Empirical
   software engineering; Ambiguity; User stories
ID REQUIREMENTS; FRAMEWORK; QUALITY
AB Context Defects such as ambiguity and incompleteness are pervasive in software requirements, often due to the limited time that practitioners devote to writing good requirements. Objective. We study whether a synergy between humans' analytic capabilities and natural language processing is an effective approach for quickly identifying near-synonyms, a possible source of terminological ambiguity. Method. We propose a tool-supported approach that blends information visualization with two natural language processing techniques: conceptual model extraction and semantic similarity. We evaluate the precision and recall of our approach compared to a pen-and-paper manual inspection session through a controlled quasi-experiment that involves 57 participants organized into 28 groups, each group working on one real-world requirements data set. Results. The experimental results indicate that manual inspection delivers higher recall (statistically significant with p <= 0.01) and non-significantly higher precision. Based on qualitative observations, we analyze the quantitative results and suggest interpretations that explain the advantages and disadvantages of each approach. Conclusions. Our experiment confirms conventional wisdom in requirements engineering: identifying terminological ambiguities is time consuming, even when with tool support; and it is hard to determine whether a near-synonym may challenge the correct development of a software system. The results suggest that the most effective approach may be a combination of manual inspection with an improved version of our tool.
C1 [Dalpiaz, Fabiano; van der Schalk, Ivor; Brinkkemper, Sjaak] Univ Utrecht, Utrecht, Netherlands.
   [Aydemir, Fatma Basak] Bogazici Univ, Istanbul, Turkey.
   [Lucassen, Garm] Secfi Inc, Amsterdam, Netherlands.
C3 Utrecht University; Bogazici University
RP Dalpiaz, F (corresponding author), Buys Ballot Lab, Dept Informat & Comp Sci, Princetonpl 5, NL-3584 CC Utrecht, Netherlands.
EM f.dalpiaz@uu.nl
RI Aydemir, Fatma Başak/AAF-3242-2020
OI Aydemir, Fatma Başak/0000-0003-3833-3997
CR Abad Z.S.H., 2016, P INT REQ ENG C
   Agarwal N, 2014, P ANN HICSS, P4739, DOI 10.1109/HICSS.2014.582
   Albayrak Ö, 2014, EMPIR SOFTW ENG, V19, P241, DOI 10.1007/s10664-012-9221-0
   Bano M, 2015, IEEE INT WORKS EMPIR, P21, DOI 10.1109/EmpiRE.2015.7431303
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   BERRY DM, 2001, TECHNICAL REPORT
   Cambria E, 2014, IEEE COMPUT INTELL M, V9, P48, DOI 10.1109/MCI.2014.2307227
   Carroll J.J., 2000, 73 HP LABS
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Dalpiaz  F., 2018, P INT WORK C REQ ENG
   Dalpiaz F, 2018, Mendeley Data, V1, DOI 10.17632/7zbk8zsd8y.1
   de Bruijn F, 2010, LECT NOTES COMPUT SC, V6182, P233, DOI 10.1007/978-3-642-14192-8_21
   DiMarco Chrysanne., 1993, AAAI SPRING S BUILDI, P114
   Duarte D, 2012, IEEE ENABL TECHNOL, P343, DOI 10.1109/WETICE.2012.14
   Femmer H., 2018, CEUR WORKSHOP PROC, V2075
   Femmer H, 2017, J SYST SOFTWARE, V123, P190, DOI 10.1016/j.jss.2016.02.047
   Ferrari A, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE), P1, DOI 10.1109/AIRE.2014.6894849
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Kamsties E., 2001, P 1 WORKSH INSP SOFT, P68
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Levene H, 1961, ESSAYS HONOR HAROLD, P279
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9974, P463, DOI 10.1007/978-3-319-46397-1_35
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Micallef L., 2013, THESIS
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mullery G. P., 1979, Proceedings of the 4th International Conference on Software Engineering, P126
   Perry J.W., 1955, American Documentation, V6, P242, DOI DOI 10.1002/ASI.5090060411
   Philippo Erik Jan, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P65, DOI 10.1007/978-3-642-37422-7_5
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Reddivari S, 2014, REQUIR ENG, V19, P257, DOI 10.1007/s00766-013-0194-3
   RIPS LJ, 1973, J VERB LEARN VERB BE, V12, P1, DOI 10.1016/S0022-5371(73)80056-8
   Robeer M., 2016, P INT REQ ENG C
   Rosadini B, 2017, LECT NOTES COMPUT SC, V10153, P344, DOI 10.1007/978-3-319-54045-0_24
   Savio D., 2012, Proceedings of the 2012 IEEE Second Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES4), P14, DOI 10.1109/RES4.2012.6347690
   Shaw M. L. G., 1989, Knowledge Acquisition, V1, P341, DOI 10.1016/S1042-8143(89)80010-X
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Slob  G.-J., 2018, TRACK REFSQ
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Tjong S. F., 2013, The design of SREE-a prototype potential ambiguity finder for requirements specifications and lessons learned, V7830, P80, DOI DOI 10.1007/978-3-642-37422-7_6
   Webber F.D.S., 2015, Semantic Folding Theory-White Paper
   Willis  A., 2008, RES LANG COMPUT, V6, P355, DOI DOI 10.1007/S11168
   Wnuk K, 2016, IEEE T SOFTWARE ENG, V42, P47, DOI 10.1109/TSE.2015.2445347
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
NR 48
TC 40
Z9 43
U1 1
U2 20
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 3
EP 16
DI 10.1016/j.infsof.2018.12.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100002
OA Green Published
DA 2024-07-18
ER

PT J
AU Megdadi, O
   Alhindawi, N
   Alsakran, J
   Saifan, A
   Migdadi, H
AF Megdadi, Omar
   Alhindawi, Nouh
   Alsakran, Jamal
   Saifan, Ahmad
   Migdadi, Hatim
TI Mining software repositories for adaptive change commits using machine
   learning techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code change metrics; Adaptive maintenance; Commit types; Maintenance
   classification; Machine learning
ID MAINTENANCE EFFORT; PREDICTION; CLASSIFICATION
AB Context Version Control Systems, such as Subversion, are standard repositories that preserve all of the maintenance changes undertaken to source code artifacts during the evolution of a software system. The documented data of the version history are organized as commits; however, these commits do not keep a tag that would identify the purpose of the relevant undertaken change of a commit, thus, there is rarely enough detail to clearly direct developers to the changes associated with a specific type of maintenance.
   Objective: This work examines the version histories of an open source system to automatically classify version commits into one of two categories, namely adaptive commits and non-adaptive commits.
   Method: We collected the commits from the version history of three open source systems, then we obtained eight different code change metrics related to, for example, the number of changed statements, methods, hunks, and files. Based on these change metrics, we built a machine learning approach to classify whether a commit was adaptive or not.
   Results: It is observed that code change metrics can be indicative of adaptive maintenance activities. Also, the classification findings show that the machine learning classifier developed has approximately 75% prediction accuracy within labeled change histories.
   Conclusion: The proposed method automates the process of examining the version history of a software system and identifies which commits to the system are related to an adaptive maintenance task. The evaluation of the method supports its applicability and efficiency. Although the evaluation of the proposed classifier on unlabeled change histories shows that it is not much better than the random guessing in terms of F-measure, we feel that our classifier would serve as a better basis for developing advanced classifiers that have predictive power of adaptive commits without the need of manual efforts.
C1 [Megdadi, Omar] Jordan Univ Sci & Technol, Irbid 22110, Jordan.
   [Alhindawi, Nouh] Jadara Univ, Irbid, Jordan.
   [Alsakran, Jamal] Univ Jordan, Amman, Jordan.
   [Saifan, Ahmad] Yarmouk Univ, Irbid, Jordan.
   [Migdadi, Hatim] Hashemite Univ, Zarqa, Jordan.
C3 Jordan University of Science & Technology; University of Jordan; Yarmouk
   University; Hashemite University
RP Alhindawi, N (corresponding author), Jadara Univ, Irbid, Jordan.
EM ommeqdadi@just.edu.jo; hindawi@jadara.edu.jo; j.alsakran@ju.edu.jo;
   ahmads@yu.edu.jo; hatims@hu.edu.jo
RI Meqdadi, Omar/AAC-2702-2019; Alsakran, Jamal/AAA-9875-2019
OI Meqdadi, Omar/0000-0001-9504-4230; Alhindawi, Nouh/0000-0003-2735-2631
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Aleem Saiqa, 2015, P 4 INT C SOFTWARE E, V1, P71
   Alhindawi N., 2013, P 29 IEEE INT C SOFT, P10
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 1998, LEARNING TEXT CATEGO
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Collard Michael L., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609719
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Hammad M, 2009, INT C PROGRAM COMPRE, P20, DOI 10.1109/ICPC.2009.5090024
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hinkle D.E., 1998, Applied Statistics for the Behavioral Sciences, V4th
   Johnson A.R., 1998, Applied multivariate statistical analysis
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kozlov Denis, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P186
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu H, 1995, PROC INT C TOOLS ART, P388, DOI 10.1109/TAI.1995.479783
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Meqdadi O, 2013, PROC IEEE INT CONF S, P416, DOI 10.1109/ICSM.2013.61
   Mitchell T. M., 1997, MACHINE LEARNING
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan K, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P31
   Ramil J. F., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, DOI 10.1109/ICSE.2000.870498
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   Sharma T.C., 2013, International Journal of Advanced Research in Computer and Communication Engineering, V2
   Spiewak R., 2008, CROSSTALK J DEFENSE, V21, P23
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang T., 2011, Journal of Information Computational Science, V8, P4241
   Witten I. H., 2005, DATA MINING PRACTICA
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
NR 41
TC 7
Z9 8
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 80
EP 91
DI 10.1016/j.infsof.2019.01.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400007
DA 2024-07-18
ER

PT J
AU Souza, E
   Moreira, A
   Goulao, M
AF Souza, Eric
   Moreira, Ana
   Goulao, Miguel
TI Deriving architectural models from requirements specifications: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Mapping study; Literature review
ID SOFTWARE ARCHITECTURE; ORIENTED REQUIREMENTS; DESIGN; KNOWLEDGE; NEEDS
AB Context: Software architecture design creates and documents the high-level structure of a software system. Such structure, expressed in architectural models, comprises software elements, relations among them, and properties of these elements and relations. Existing software architecture methods offer ways to derive architectural models from requirements specifications. These models must balance different forces that should be analyzed during this derivation process, such as those imposed by different application domains and quality attributes. Such balance is difficult to achieve, requiring skilled and experienced architects.
   Object: The purpose of this paper is to provide a comprehensive overview of the existing methods to derive architectural models from requirements specifications and offer a research roadmap to challenge the community to address the identified limitations and open issues that require further investigation. Method: To achieve this goal, we performed a systematic mapping study following the good practices from the Evidence-Based Software Engineering field.
   Results: This study resulted in 39 primary studies selected for analysis and data extraction, from the 2575 initially retrieved.
   Conclusion: The major findings indicate that current architectural derivation methods rely heavily on the architects' tacit knowledge (experience and intuition), do not offer sufficient support for inexperienced architects, and lack explicit evaluation mechanisms. These and other findings are synthesized in a research roadmap which results would benefit researchers and practitioners.
C1 [Souza, Eric; Moreira, Ana; Goulao, Miguel] Univ NOVA Lisboa, Fac Ciencias & Tecnol, Dept Informat, NOVA LINCS, Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Souza, E (corresponding author), Univ NOVA Lisboa, Fac Ciencias & Tecnol, Dept Informat, NOVA LINCS, Lisbon, Portugal.
EM er.souza@campus.fct.unl.pt; amm@fct.unl.pt; mgoul@fct.unl.pt
RI Goulão, Miguel/AAB-8223-2020; Moreira, Ana/F-4770-2011
OI Goulão, Miguel/0000-0002-5356-5203; Souza, Eric/0000-0002-5130-0439;
   Moreira, Ana/0000-0003-2046-2766
FU Programa Cada sem Fronteiras [99999.009047/2013-01]; NOVA LINCS Research
   Laboratory [UID/CEC/04516/2013]
FX We thank NOVA LINCS Software Engineering team for validating the
   protocol and results of the study described here, and Programa Cada sem
   Fronteiras (Ref. 99999.009047/2013-01) and NOVA LINCS Research
   Laboratory (Ref. UID/CEC/04516/2013) for their financial support.
CR Abdellatief M, 2013, J SYST SOFTWARE, V86, P587, DOI 10.1016/j.jss.2012.10.001
   Ahmad  A., 2012, TECHNICAL REPORT
   Ahmed M.M., 2015, International Journal of Software Engineering and Its Applications, V9, P173
   Alebrahim A., 2017, BRIDGING GAP REQUIRE
   Alebrahim  A., 2015, P 20 EUR C PATT LANG, P40
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   America P., 2003, PFE, V3014, P44
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 1998, REQUIREMENTS ENG PRO
   [Anonymous], VALUE BASED SOFTWARE
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   [Anonymous], 2011, SYSTEMS SOFTWARE ENG
   [Anonymous], EASE 08
   Arshad Ali, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P164, DOI 10.1049/ic.2011.0020
   Aulkemeier F, 2016, J THEOR APPL EL COMM, V11, P26, DOI 10.4067/S0718-18762016000100003
   Avgeriou P, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P1, DOI 10.1007/978-3-642-21001-3
   Bachmann  F., 2000, TECHNICAL REPORT
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Bombonatti D, 2017, SOFTWARE PRACT EXPER, V47, P943, DOI 10.1002/spe.2416
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Castro J, 2012, J SYST SOFTWARE, V85, P463, DOI 10.1016/j.jss.2011.05.047
   Catal C, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P661, DOI 10.1109/ITNG.2013.102
   Chitchyan R, 2007, LECT NOTES COMPUT SC, V4640, P3
   Chitchyan Ruzanna., 2007, AOSD 07, P36
   Chung L, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P91, DOI 10.1007/978-3-642-21001-3_7
   Clements P., 2003, SEI S SOFTW
   Colombo P, 2012, J SYST SOFTWARE, V85, P717, DOI 10.1016/j.jss.2011.09.046
   Cordero RL, 2006, LECT NOTES COMPUT SC, V3983, P726, DOI 10.1007/11751632_79
   Cruz-Benito J, 2016, LECT NOTES COMPUT SC, V9753, P125, DOI 10.1007/978-3-319-39483-1_12
   Dai L., 2005, Formal Design Analysis Framework: an Aspect-Oriented Architectural Framework
   Dai LR, 2005, SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERNG, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING AND FIRST AICS INTERNATIONAL WORKSHOP ON SELF-ASSEMBLING WIRELESS NETWORKS, PROCEEDINGS, P178
   de Boer RC, 2009, J SYST SOFTWARE, V82, P544, DOI 10.1016/j.jss.2008.11.185
   de Oliveira L. B. R., 2010, SYSTEMATIC REV SERVI
   Dersten S, 2011, EUROMICRO CONF PROC, P239, DOI 10.1109/SEAA.2011.44
   Durdik Z., 2011, P JOINT ACM SIGSOFT, P183, DOI DOI 10.1145/2000259.2000291
   Falessi D., 2007, Software Architecture, P5
   Galster  M., 2006, SOFTW ENG ART INT NE
   Garlan  D., 2014, SOFTWARE ARCHITECTUR, P29, DOI [10.1145/2593882.2593886, DOI 10.1145/2593882.2593886]
   Gonzalez-Huerta  J., 2013, INT C MOD DRIV ENG L, P388
   Grunbacher P., 2004, SOFTW SYST MODEL, V3, P235
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   Guessi Milena., 2012, Proceedings of the 3rd International ACM SIGSOFT Symposium on Architecting Critical Systems, ISARCS'12, DOI DOI 10.1145/2304656.2304661
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hohmann L., 2003, Beyond Software Architecture: Creating and Sustaining Winning Solutions
   JALALI S, 2012, ACM IEEE INT S, P10, DOI DOI 10.1145/2372251.2372257
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Joshi K. C., 2012, INT J ADV ENG TECHNO, VIII
   Juziuk J., 2014, Agent-Oriented Software Engineering: Reflections on Architectures, Methodologies, Languages, and Frameworks, P79, DOI DOI 10.1007/978-3-642
   Kazman R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P81, DOI 10.1109/ICSE.1994.296768
   Kazman R., 2000, TECHNICAL REPORT
   Kim J, 2008, J SYST SOFTWARE, V81, P37, DOI 10.1016/j.jss.2007.04.011
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lewis G, 2015, J SYST SOFTWARE, V107, P158, DOI 10.1016/j.jss.2015.06.005
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Loniewski G., 2011, 2011 Model-Driven Requirements Engineering Workshop (MoDRE 2011), P31, DOI 10.1109/MoDRE.2011.6045364
   Loya SR, 2014, J MED SYST, V38, DOI 10.1007/s10916-014-0140-z
   Lucena M, 2009, LECT NOTES COMPUT SC, V5872, P370, DOI 10.1007/978-3-642-05290-3_49
   Lytra I., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P111, DOI 10.1109/WICSA-ECSA.212.19
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Martinez S. Martin, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286110
   Me G, 2016, LECT NOTES COMPUT SC, V9839, P39, DOI 10.1007/978-3-319-48992-6_3
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Montero F, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P230, DOI 10.1109/ICECCS.2009.21
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   Murugesupillai E., 2011, P 15 INT SOFTW PROD, V2, P11
   Nakagawa Elisa Y., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P143, DOI 10.1109/WICSA.2014.25
   Nascimento AS, 2013, P BRAZ SYMP SOFTW, P119, DOI 10.1109/SBCARS.2013.23
   Nikpay F, 2020, INFORM SYST FRONT, V22, P789, DOI 10.1007/s10796-016-9716-0
   Ovaska E, 2010, INFORM SOFTWARE TECH, V52, P577, DOI 10.1016/j.infsof.2009.11.008
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Passarini RF, 2015, DES AUTOM EMBED SYST, V19, P345, DOI 10.1007/s10617-015-9164-y
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petrov P., 2014, ACM INT C P SER, V27, P1, DOI [10.1145/2642803.2642830, DOI 10.1145/2642803.2642830]
   Petrov P, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P147, DOI 10.1109/WICSA.2011.27
   Fabbri SCPF, 2013, IET SOFTW, V7, P298, DOI 10.1049/iet-sen.2013.0029
   Pohl K, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P229, DOI 10.1007/978-3-540-72677-7_14
   Qureshi N, 2013, P 17 INT C EV ASS SO, P97, DOI DOI 10.1145/2460999.2461014
   Räihä O, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P307, DOI 10.1007/978-3-642-21001-3_18
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Razavian M, 2010, LECT NOTES COMPUT SC, V6481, P150, DOI 10.1007/978-3-642-17694-4_13
   Sánchez P, 2007, LECT NOTES COMPUT SC, V4640, P54
   Sánchez P, 2010, INFORM SOFTWARE TECH, V52, P249, DOI 10.1016/j.infsof.2009.09.001
   Silva LF, 2007, LECT NOTES COMPUT SC, V4765, P75
   Siobhan C., 2005, ASPECT ORIENTED ANAL
   Smolander  K., 2002, IEEE INT C WORKSH EN
   Sochos  P., 2006, ENG COMP BAS SYST 20
   Software Engineering Institute, 2010, WHAT IS YOUR DEF SOF
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Souza  E., 2018, INF SOFTW TECHNOL, DOI [10.1016/j.infsof.2018.08.001, DOI 10.1016/JINFSOF.2018.08.001]
   Stevanetic  S., 2015, P 19 INT C EV ASS SO, P21
   Tabares L, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON CONNECTED HEALTH: APPLICATIONS, SYSTEMS AND ENGINEERING TECHNOLOGIES (CHASE), P42, DOI 10.1109/CHASE.2016.55
   Tang A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P107, DOI 10.1109/ICSA.2017.15
   Tang A, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P155, DOI 10.1007/978-3-642-02374-3_9
   Tang  S., 2009, GOAL DIRECTED MODELI, P313
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   Tian LC, 2005, LECT NOTES COMPUT SC, V3840, P192
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Vetterli C, 2013, IEEE INTERNET COMPUT, V17, P91, DOI 10.1109/MIC.2013.32
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Wojcik Rob, 2006, TECHNICAL REPORT
   Woods E, 2006, 5th Working IEEE/IFIP Conference on Software Architecture, Proceedings, P25
   Zalewski A, 2013, J SYST SOFTWARE, V86, P683, DOI 10.1016/j.jss.2012.10.923
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhu M, 2013, MULTIMEDIA SYST, V19, P183, DOI 10.1007/s00530-012-0274-0
NR 115
TC 11
Z9 14
U1 2
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 26
EP 39
DI 10.1016/j.infsof.2019.01.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400003
DA 2024-07-18
ER

PT J
AU Sabbaghi, A
   Kanan, HR
   Keyvanpour, MR
AF Sabbaghi, Arash
   Kanan, Hamidreza Rashidy
   Keyvanpour, Mohammad Reza
TI FSCT: A new fuzzy search strategy in concolic testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Automatic test case generation; Concolic Testing;
   Fuzzy expert system
ID SYMBOLIC EXECUTION; TEST-GENERATION; LOGIC
AB Context: Concolic testing is a promising approach to automate structural test data generation. However, combinatorial explosion of the path space, known as path explosion, and also constrained testing budget, makes achieving high code coverage in concolic testing a challenging task.
   Objective: All branches of the previously explored paths make up the search space of concolic testing and search strategy define the mechanism of choosing branches to be flipped to drive the execution toward testing goals. With regard to the large number of candidate branches, choosing the right branch to continue the search is so crucial and has a direct impact on coverage rate and effort. This paper aims to improve the effectiveness of branch testing by considering the characteristics of paths reaching uncovered branches and presenting a novel search strategy for effectively and efficiently exploring the search space.
   Method: We model the branch selection process in concolic testing as a decision making system and introduce a new Fuzzy Search Strategy in Concolic Testing (FSCT). FSCT chooses a branch to be filliped in which the most suitable path with respect to the proposed coverage factors reaches an uncovered branch with the highest priority and this priority is assigned by the designed fuzzy expert system. The proposed coverage factors effectively help to determine the characteristics of paths.
   Results: We implemented FSCT on top of CREST and evaluated it using several popular benchmarks. The experimental results show that FSCT outperforms the state-of-the-art techniques in terms of coverage rate and coverage effort.
   Conclusion: FSCT helps concolic testing to better cope with path explosion problem and shows its capabilities to achieve higher code coverage while at the same time decreases testing efforts in terms of both runtime and number of iterations.
C1 [Sabbaghi, Arash] Islamic Azad Univ, Qazvin Branch, Fac Comp & Informat Technol Engn, Qazvin, Iran.
   [Kanan, Hamidreza Rashidy] Shahid Rajaee Teacher Training Univ, Dept Comp Engn, Tehran, Iran.
   [Keyvanpour, Mohammad Reza] Alzahra Univ, Dept Comp Engn, Tehran, Iran.
C3 Islamic Azad University; Shahid Rajaee Teacher Training University
   (SRTTU); Alzahra University
RP Kanan, HR (corresponding author), Shahid Rajaee Teacher Training Univ, Dept Comp Engn, Tehran, Iran.
EM a.sabbaghi@qiau.ac.ir; h.rashidykanan@sru.ac.ir;
   keyvanpour@alzahra.ac.ir
RI Rashidy Kanan, Hamidreza/AAI-7928-2020; Keyvanpour, Mohammad
   Reza/AAL-5574-2020; Sabbaghi, Arash/AAT-7590-2021
OI Rashidy Kanan, Hamidreza/0000-0001-8789-8658; Keyvanpour, Mohammad
   Reza/0000-0003-2115-9099; Sabbaghi, Arash/0000-0002-8905-2661
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], P INT C TESTS PROOFS
   [Anonymous], P 5 WORKSH AUT SOFTW
   [Anonymous], P INT C SOFTW ENG FO
   [Anonymous], 2011, P INT S SOFTW TEST A
   [Anonymous], P ACM SIGSOFT SOFTW
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], P INT INT C RUNT VER
   [Anonymous], P 34 INT C SOFTW ENG
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], P PDPTA
   [Anonymous], 2007, P 29 INT C SOFTW ENG
   [Anonymous], P IEEE 35 ANN COMP S
   [Anonymous], P 19 INT S SOFTW TES
   [Anonymous], P INT C COMP CONSTR
   [Anonymous], SOFTWARE ENG PRINCIP
   [Anonymous], 1999, P 2 C COMP SCI ENG
   [Anonymous], DO 178B SOFTW CONS A
   [Anonymous], 2014, P USENIX SEC S
   [Anonymous], P 22 ACM SIGSOFT INT
   [Anonymous], P IEEE ACIS 16 INT C
   [Anonymous], P 18 INT S SOFTW TES
   [Anonymous], P ACM SIGPLAN NOT
   [Anonymous], P 5 INT C SOFTW ENG
   [Anonymous], P INT S SOFTW TEST A
   [Anonymous], FUZZY LOGIC EXPERT S
   [Anonymous], DO 178C ED 12C SOFTW
   [Anonymous], P 6 JOINT M EUR SOFT
   [Anonymous], P 26 IEEE ACM INT C
   [Anonymous], EXPERT SYSTEMS USAGE
   [Anonymous], P IEEE IFIP INT C DE
   [Anonymous], 1997, NEURO FUZZY SOFT COM
   [Anonymous], 2008, P 23 IEEE ACM INT C
   [Anonymous], P 40 INT C SOFTW ENG
   [Anonymous], P 2015 INT S SOFTWAR
   [Anonymous], 2008, AUTOMATED WHITEBOX F
   [Anonymous], P ACM SIGSOFT 20 INT
   [Anonymous], P INT C COMP AID VER
   [Anonymous], P IEEE TRUSTC BIGDAT
   [Anonymous], 2005, Artificial neural networks. Handbook of measuring system design
   [Anonymous], P ACM SIGSOFT SOFTW
   [Anonymous], 2008, ISSTA
   [Anonymous], P ACM SIGPL NOT
   [Anonymous], P INT C EV NOV APPR
   [Anonymous], P 9 JOINT M FDN SOFT
   [Anonymous], P ACM SIGPL NOT
   [Anonymous], P ACM SIGPL NOT
   [Anonymous], P ACM SIGSOFT SOFTW
   [Anonymous], BITBLAZE NEW APPROAC
   [Anonymous], P INT C COMP AID VER
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Baluda M, 2016, IEEE T SOFTWARE ENG, V42, P403, DOI 10.1109/TSE.2015.2490067
   Baluda M, 2011, SOFTWARE QUAL J, V19, P725, DOI 10.1007/s11219-011-9150-y
   Binkley DW, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000796
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Boyer R. S., 1975, SIGPLAN Notices, V10, P234, DOI 10.1145/390016.808445
   Braione P, 2014, SOFTWARE QUAL J, V22, P311, DOI 10.1007/s11219-013-9207-1
   Cadar C., 2008, P OSDI
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen T, 2015, SECUR COMMUN NETW, V8, P3667, DOI 10.1002/sec.1290
   Chen T, 2015, IEEE T RELIAB, V64, P284, DOI 10.1109/TR.2014.2363153
   Chen T, 2013, FUTURE GENER COMP SY, V29, P1758, DOI 10.1016/j.future.2012.02.006
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   Dadashi R, 2013, COMPUT VIS IMAGE UND, V117, P807, DOI 10.1016/j.cviu.2013.03.002
   Delahaye M, 2015, INFORM SOFTWARE TECH, V58, P403, DOI 10.1016/j.infsof.2014.07.012
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Duesterwald E., 2000, Operating Systems Review, V34, P202, DOI 10.1145/384264.379241
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Hutchins M., 1994, P 16 INT C SOFTW ENG
   IEC, 2000, IEC 61508
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Jaffar Joxan, 2012, COMPUTER AIDED VERIF
   Keyvanpour Mohammad Reza, 2013, International Journal of Information Processing and Management, V4, P26, DOI 10.4156/ijipm.vol4.issue3.3
   Kim Y, 2012, IEEE CPMT SYMP JAP
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Krishnamoorthy S, 2011, SCI CHINA INFORM SCI, V54, P1797, DOI 10.1007/s11432-011-4368-7
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Lakhotia K, 2010, J SYST SOFTWARE, V83, P2379, DOI 10.1016/j.jss.2010.07.026
   Le Wei, 2008, P 16 ACM SIGSOFT INT, P272, DOI [10.1145/1453101.1453137, DOI 10.1145/1453101.1453137]
   Lee C, 2012, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON APAC 2011
   LEE CC, 1990, IEEE T SYST MAN CYB, V20, P404, DOI 10.1109/21.52551
   Li YQ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652484
   MAMDANI EH, 1975, INT J MAN MACH STUD, V7, P1, DOI 10.1016/S0020-7373(75)80002-2
   Marinescu Paul Dan, 2013, P 9 JOINT M FDN SOFT
   Na MG, 2004, IEEE T NUCL SCI, V51, P313, DOI 10.1109/TNS.2004.825090
   Ngo MN, 2008, INFORM SOFTWARE TECH, V50, P641, DOI 10.1016/j.infsof.2007.06.006
   Pappis CP, 2014, Search Methodologies-Introductory Tutorials in Optimization and Decision Support Techniques, P519, DOI [10.1007/978-1-4614-6940-7_18, DOI 10.1007/978-1-4614-6940-7_18]
   Qi DW, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522925
   Ross T. J., 2009, Fuzzy logic with engineering applications, V3rd
   SCHNEIDER M., 1996, Fuzzy expert system tools
   Do T, 2015, INFORM SOFTWARE TECH, V66, P40, DOI 10.1016/j.infsof.2015.05.007
   Wang HJ, 2017, IEEE T SOFTWARE ENG, V43, P252, DOI 10.1109/TSE.2016.2584063
   Wang Jun., 2000, Computational intelligence in manufacturing handbook
   Wang L.-X., 1999, A Course in Fuzzy Systems and Control, P238
   Xu ZH, 2015, SOFTW TEST VERIF REL, V25, P77, DOI 10.1002/stvr.1562
   Yi QP, 2018, IEEE T SOFTWARE ENG, V44, P25, DOI 10.1109/TSE.2017.2659751
   ZADEH LA, 1983, FUZZY SET SYST, V11, P199, DOI 10.1016/S0165-0114(83)80081-5
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 101
TC 3
Z9 4
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 137
EP 158
DI 10.1016/j.infsof.2018.11.006
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200011
DA 2024-07-18
ER

PT J
AU El-Sharkawy, S
   Yamagishi-Eichler, N
   Schmid, K
AF El-Sharkawy, Sascha
   Yamagishi-Eichler, Nozomi
   Schmid, Klaus
TI Metrics for analyzing variability and its implementation in software
   product lines: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product lines; SPL; Metrics; Implementation; Systematic
   literature review
ID IDIOMS; MODELS
AB Context. Software Product Line (SPL) development requires at least concepts for variability implementation and variability modeling for deriving products from a product line. These variability implementation concepts are not required for the development of single systems and, thus, are not considered in traditional software engineering. Metrics are well established in traditional software engineering, but existing metrics are typically not applicable to SPLs as they do not address variability management. Over time, various specialized product line metrics have been described in literature, but no systematic description of these metrics and their characteristics is currently available.
   Objective: This paper describes and analyzes variability-aware metrics, designed for the needs of software product lines. More precisely we restrict the scope of our study explicitly to metrics designed for variability models, code artifacts, and metrics taking both kinds of artifacts into account. Further, we categorize the purpose for which these metrics were developed. We also analyze to what extent these metrics were evaluated to provide a basis for researchers for selecting adequate metrics.
   Method: We conducted a systematic literature review to identify variability-aware implementation metrics. We discovered 42 relevant papers reporting metrics intended to measure aspects of variability models or code artifacts.
   Results: We identified 57 variability model metrics, 34 annotation-based code metrics, 46 code metrics specific to composition-based implementation techniques, and 10 metrics integrating information from variability model and code artifacts. For only 31 metrics, an evaluation was performed assessing their suitability to draw any qualitative conclusions.
   Conclusions: We observed several problematic issues regarding the definition and the use of the metrics. Researchers and practitioners benefit from the catalog of variability-aware metrics, which is the first of its kind. Also, the research community benefits from the identified observations in order to avoid those problems when defining new metrics.
C1 [El-Sharkawy, Sascha; Yamagishi-Eichler, Nozomi; Schmid, Klaus] Univ Hildesheim, Inst Comp Sci, Software Syst Engn, Univ Pl 1, D-31141 Hildesheim, Germany.
C3 University of Hildesheim
RP El-Sharkawy, S; Schmid, K (corresponding author), Univ Hildesheim, Inst Comp Sci, Software Syst Engn, Univ Pl 1, D-31141 Hildesheim, Germany.
EM elscha@sse.uni-hildesheim.de; schmid@sse.uni-hildesheim.de
RI Schmid, Klaus/AAB-1480-2019
OI Schmid, Klaus/0000-0002-4147-3942; El-Sharkawy,
   Sascha/0000-0003-2371-7293
FU ITEA3 project REVaMP2 - BMBF (German Ministry of Research and Education)
   [01IS16042H]
FX This work is partially supported by the ITEA3 project
   REVaMP<SUP>2</SUP>, funded by the BMBF (German Ministry of Research and
   Education) under grant 01IS16042H. Any opinions expressed herein are
   solely by the authors and not of the BMBF.
CR Abilio R., 2014, P 21 BRAZ C SOFTW TO, P109
   Abilio R, 2016, INT WORKS EMERG TREN, P36, DOI [10.1145/2897695.2897701, 10.1109/WETSoM.2016.014]
   Abílio R, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P433, DOI 10.1109/ITNG.2015.76
   Andrade R, 2013, P BRAZ SYMP SOFTW, P59, DOI 10.1109/SBCARS.2013.17
   Andrade R, 2011, EUR CON SFTWR MTNCE, P231, DOI 10.1109/CSMR.2011.29
   [Anonymous], 2018, THE C PREPROCESSOR
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2017, KCONFIG DOCUMENTATIO
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 2018, KCONFIG LANGUAGE SPE
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], 2010, NETWORKS INTRO, DOI DOI 10.1093/ACPROF:OSO/9780199206650.001.0001
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Batory D, 2006, LECT NOTES COMPUT SC, V4143, P3
   Berger T., 2014, 8 INT WORKSH VAR MOD
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Bezerra C., 2015, Lecture Notes in Computer Science, P282
   Bezerra CIM, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P17, DOI 10.1145/2866614.2866617
   Bezerra Carla IM, 2016, P 20 INT SYSTEMS SOF, P314
   Cafeo BBP, 2013, INT WORKS EMERG TREN, P69, DOI 10.1109/WETSoM.2013.6619339
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Clements P., 2002, Software product lines
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Dallaway J., 2000, ECOS COMPONENT WRITE
   Dantas F, 2012, INT SYMP EMP SOFTWAR, P291, DOI 10.1145/2372251.2372304
   Dyer Robert., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P143
   El-Sharkawy S., 2018, TECHNICAL REPORT
   El-Sharkawy S, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P19, DOI 10.1145/3106195.3106208
   Fenske W, 2015, IEEE INT WORK C SO, P171, DOI 10.1109/SCAM.2015.7335413
   Ferreira Gabriel, 2016, P INT SOFTWARE PRODU, P65
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gaia FN, 2014, SCI COMPUT PROGRAM, V96, P230, DOI 10.1016/j.scico.2014.03.006
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Jbara A, 2013, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2013.6648179
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kolesnikov Sergiy, 2014, P 6 INT WORKSHOP FEA, P1, DOI DOI 10.1145/2660190.2660191
   Leitner A, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P242, DOI 10.1109/ECBS.2012.15
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lopez-Herrejon Roberto E., 2008, 2 INT WORKSHOP VARIA, P97
   Maâzoun J, 2016, J KING SAUD UNIV-COM, V28, P364, DOI 10.1016/j.jksuci.2016.01.005
   Macia I., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P60, DOI 10.1109/SBES.2010.14
   Mann S, 2011, P 5 WORKSH VAR MOD S, P29
   Marimuthu C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P143, DOI 10.1145/3106195.3106212
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mefteh M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1602, DOI 10.1145/2695664.2695907
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Montagud S., 2009, Proceedings of the International Software Product Line Conference, P91
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nunes Gaia Felipe, 2012, Programming Languages. Proceedings of the16th Brazilian Symposium, SBLP 2012, P134, DOI 10.1007/978-3-642-33182-4_11
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Passos L., 2011, 15 INT SOFTW PROD LI, V2
   Passos L., 2015, P 14 INT C MODULARIT, P81
   Queiroz R, 2014, P INT WORKSH FEAT OR, P23
   Ribeiro M, 2009, EUR CON SFTWR MTNCE, P79, DOI 10.1109/CSMR.2009.49
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   She S., 2010, VaMoS, P45
   Stuikys V, 2009, INF TECHNOL CONTROL, V38, P179
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Torres M., 2010, P 2 INT WORKSH FEAT, P10
   Vale G., 2015, PROC INT SOFTWARE PR, P176
   Vale G, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P110, DOI 10.1109/SBES.2015.9
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   Vyas G., 2016, INT J COMP SCI ENG T, V6, P82
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhang Bo., 2013, Proceedings of the 17th International Software Product Line Conference, P168
   Zhang Bo, 2012, 16 INT SOFTWARE PROD, V2, P91
   Zhang W, 2004, LECT NOTES COMPUT SC, V3308, P115
NR 75
TC 34
Z9 34
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 1
EP 30
DI 10.1016/j.infsof.2018.08.015
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300001
DA 2024-07-18
ER

PT J
AU Garousi, V
   Felderer, M
   Karapiçak, ÇM
   Yilmaz, U
AF Garousi, Vahid
   Felderer, Michael
   Karapicak, Cagri Murat
   Yilmaz, Ugur
TI Testing embedded software: A survey of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Embedded systems; Embedded software; Systematic
   mapping; Systematic literature mapping; Systematic literature review
ID GREY LITERATURE; SCIENTIFIC SOFTWARE; VERIFICATION; PRIORITIZATION;
   REVIEWS
AB Context Embedded systems have overwhelming penetration around the world. Innovations are increasingly triggered by software embedded in automotive, transportation, medical-equipment, communication, energy, and many other types of systems. To test embedded software in an effective and efficient manner, a large number of test techniques, approaches, tools and frameworks have been proposed by both practitioners and researchers in the last several decades.
   Objective: However, reviewing and getting an overview of the entire state-of-the-art and the practice in this area is challenging for a practitioner or a (new) researcher. Also unfortunately, as a result, we often see that many companies reinvent the wheel (by designing a test approach new to them, but existing in the domain) due to not having an adequate overview of what already exists in this area.
   Method: To address the above need, we conducted and report in this paper a systematic literature review (SLR) in the form of a systematic literature mapping (SLM) in this area. After compiling an initial pool of 588 papers, a systematic voting about inclusion/exclusion of the papers was conducted among the authors, and our final pool included 312 technical papers.
   Results: Among the various aspects that we aim at covering, our review covers the types of testing topics studied, types of testing activity, types of test artifacts generated (e.g., test inputs or test code), and the types of industries in which studies have focused on, e.g., automotive and home appliances. Furthermore, we assess the benefits of this review by asking several active test engineers in the Turkish embedded software industry to review its findings and provide feedbacks as to how this review has benefitted them.
   Conclusion: The results of this review paper have already benefitted several of our industry partners in choosing the right test techniques / approaches for their embedded software testing challenges. We believe that it will also be useful for the large world-wide community of software engineers and testers in the embedded software industry, by serving as an "index" to the vast body of knowledge in this important area. Our results will also benefit researchers in observing the latest trends in this area and for identifying the topics which need further investigations.
C1 [Garousi, Vahid] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
   [Felderer, Michael] Univ Innsbruck, Inst Comp Sci, Qual Engn Res Grp, Innsbruck, Austria.
   [Karapicak, Cagri Murat] METU, Informat Inst, Ankara, Turkey.
   [Yilmaz, Ugur] ASELSAN AS, Ankara, Turkey.
   [Yilmaz, Ugur] Hacettepe Univ, Dept Comp Engn, Ankara, Turkey.
   [Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Wageningen University & Research; University of Innsbruck; Middle East
   Technical University; Aselsan; Hacettepe University; Blekinge Institute
   Technology
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM vahid.garousi@wur.nl; michael.felderer@uibk.ac.at;
   murat.karapicak@metu.edu.tr; ugur.yilmaz@cs.hacettepe.edu.tr
RI Felderer, Michael/AAF-4909-2020
OI Garousi, Vahid/0000-0001-6590-7576; Yilmaz, Ugur/0009-0001-9759-4284
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Amman P., 2008, INTRO SOFTWARE TESTI
   [Anonymous], 2014, P TURK NAT SOFTW ENG
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Auriga Corp, 2017, TEST EMB SOFTW PROD
   Aveyard H., 2010, DOING LIT REV HLTH S, V2nd
   Bahrin N. K., 2014, Int. J. Softw. Eng. Technol., V1, P38
   Banerjee A, 2016, ADV COMPUT, V101, P121, DOI 10.1016/bs.adcom.2015.11.005
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Barbosa J. R., 2011, P 3 INT C ADV SYST T
   Bell M., 2010, Report of professional practitioner use of research review: Practitioner engagement in and/or with research
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Burford M. A. J., 1984, Fault-Tolerant Computing Systems. 2nd GI/NTG/GMR Conference, P101
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Day J., 2017, VIRTUAL HARDWARE LOO
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Felderer M., 2015, SOFTW TEST VERIF REL
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V., 2016, J SOFTW-EVOL PROC, V28, P312
   Garousi V., 2013, INT J SOFTW ENG KNOW, V23
   Garousi V., 2013, P INV TALK IST IND C
   Garousi V., 2016, P INV TALK ANK TEST
   Garousi V., 2016, P INT C EV ASS SOFTW, P171
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, IEEE INT CONF SOFTW, P213, DOI 10.1109/ICST.2016.7
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Harman M., 2018, IEEE T SOFTW ENG
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Haser F., 2014, P INT C EV ASS SOFTW
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   Jahier E., 2014, ENV MODEL BASED TEST, P636
   Johnson M., 1995, P NORTHC 95 IEEE TEC, P36
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Keränen JS, 2012, IET SOFTW, V6, P364, DOI 10.1049/iet-sen.2011.0111
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kualitatem Corp, 2017, EMB SOFTW TEST CHALL
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Liu S., 2012, EVALUATION MODEL BAS
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Neto A.C.D., 2007, P ACM INT WORKSH EMP
   Nguyen VM, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0132557
   Oster S., 2011, MODEL BASED TESTING
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Schlosser R., 2006, CLIN NURSE SPEC, V23, P321
   Schulz S, 2002, IEEE DES TEST COMPUT, V19, P60, DOI 10.1109/54.990443
   Shirole M., 2013, SIGSOFT SOFTW ENG NO, V38, P1, DOI DOI 10.1145/2492248.2492274
   Shokry H, 2009, COMPUTER, V42, P53, DOI 10.1109/MC.2009.125
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Singh PK, 2013, IEEE INT ADV COMPUT, P1455
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 71
TC 36
Z9 41
U1 2
U2 38
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 14
EP 45
DI 10.1016/j.infsof.2018.06.016
PG 32
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Malhotra, R
   Khanna, M
AF Malhotra, Ruchika
   Khanna, Megha
TI Particle swarm optimization-based ensemble learning for software change
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical validation; Ensemble learners; Particle swarm optimization;
   Software change prediction
ID CHANGE-PRONE CLASSES; GENETIC ALGORITHMS; DEFECT PREDICTION;
   NEURAL-NETWORK; CLASSIFICATION; SELECTION; METRICS; CLASSIFIERS;
   FRAMEWORK; MODELS
AB Context: Various researchers have successfully established the association between Object-Oriented metrics and change prone nature of a class. However, they actively continue to explore effective classifiers for developing efficient change prediction models. Recent developments have ascertained that ensemble methodology can be used to improve the prediction performance of individual classifiers.
   Objective: This study proposes four strategies of ensemble learning to predict change prone classes by combining seven individual Particle Swarm Optimization (PSO) based classifiers as constituents of ensembles and aggregating them using weighted voting.
   Method: The weights allocated to individual classifiers are based on their accuracy and their ability to correctly predict "hard instances" i.e. classes which are frequently misclassified by a majority of classifiers. Each individual PSO based classifier uses a different fitness function. The ensembles are constructed on the premises that change in fitness functions leads to variation in the results of a search-based algorithm such as PSO. Therefore, it is important to combine them to obtain a better classifier with improved accuracy using the ensemble methodology.
   Results: The proposed strategies of ensemble learning were found effective in predicting software change. The statistical analysis of the results indicates improved performance of the proposed ensemble classifiers as compared to individual classifiers. Furthermore, the results of the proposed voting ensemble classifiers were found competent with those of machine-learning ensemble classifiers for determination of change prone classes.
   Conclusion: The accuracy and diversity of the individual classifiers were instrumental in the superior performance of the proposed voting ensemble classifiers.
C1 [Malhotra, Ruchika; Khanna, Megha] Delhi Technol Univ, Dept Comp Sci & Engn, Discipline Software Engn, Delhi, India.
   [Khanna, Megha] Univ Delhi, Sri Guru Gobind Singh Coll Commerce, Delhi, India.
C3 Delhi Technological University; University of Delhi
RP Malhotra, R (corresponding author), Delhi Technol Univ, Dept Comp Sci & Engn, Discipline Software Engn, Delhi, India.
EM ruchikamalhotra@dtu.ac.in
RI Malhotra, Ruchika/ABC-3126-2020
OI Malhotra, Ruchika/0000-0003-3872-6213
CR Abdelhalim M. B., 2009, PARTICLE SWARM OPTIM
   Abdi Y, 2015, INNOV SYST SOFTW ENG, V11, P289, DOI 10.1007/s11334-015-0258-2
   Aljamaan HI, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P187, DOI 10.1109/CIDM.2009.4938648
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], 2005, P 1 AIAA MULT DES OP
   [Anonymous], 2014, P 2014 INT C DAT MIN
   [Anonymous], P INT C SOFTW TEST V
   [Anonymous], 2014, P 5 INT WORKSH EM TR
   [Anonymous], P 9 IEEE WORK C MIN
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Aslam MW, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P489, DOI 10.1109/SAI.2015.7237187
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Azar D, 2010, INT J COMPUT INTELL, V9, P125, DOI 10.1142/S1469026810002811
   Bansal A, 2017, COMPUT LANG SYST STR, V47, P211, DOI 10.1016/j.cl.2016.10.001
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Bhowan U, 2012, IEEE T SYST MAN CY B, V42, P406, DOI 10.1109/TSMCB.2011.2167144
   Bowes D., 2017, SOFTW QUAL J, P1
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2018, EVOL COMPUT, V26, P535, DOI [10.1162/EVCO_a_00213, 10.1162/evco_a_00213]
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   HANSEN LK, 1990, IEEE T PATTERN ANAL, V12, P993, DOI 10.1109/34.58871
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   He C, 2013, CHIN CONT DECIS CONF, P4106
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Jain S., 2016, 2016 IEEE Region 10 Humanitarian Technology Conference (R10-HTC), P1, DOI DOI 10.1109/POWERI.2016.8077264
   Jin C, 2015, APPL SOFT COMPUT, V35, P717, DOI 10.1016/j.asoc.2015.07.006
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kennedy J, 1998, IEEE C EVOL COMPUTAT, P78, DOI 10.1109/ICEC.1998.699326
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kubat M., 1997, ICML, P179
   Kuncheva LI, 2003, MACH LEARN, V51, P181, DOI 10.1023/A:1022859003006
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Malhotra R., 2017, P GEN EV COMP C
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Malhotra R, 2017, AUTOMAT SOFTW ENG, V24, P673, DOI 10.1007/s10515-016-0203-0
   Malhotra R, 2017, SWARM EVOL COMPUT, V32, P85, DOI 10.1016/j.swevo.2016.10.002
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Moussa R, 2017, J SYST SOFTWARE, V132, P41, DOI 10.1016/j.jss.2017.06.059
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Petric J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962610
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Sousa T, 2004, PARALLEL COMPUT, V30, P767, DOI 10.1016/j.parco.2003.12.015
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Witten IH, 2011, MOR KAUF D, P1
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 77
TC 25
Z9 25
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 65
EP 84
DI 10.1016/j.infsof.2018.05.007
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400005
DA 2024-07-18
ER

PT J
AU Mahmood, Z
   Bowes, D
   Hall, T
   Lane, PCR
   Petric, J
AF Mahmood, Zaheed
   Bowes, David
   Hall, Tracy
   Lane, Peter C. R.
   Petric, Jean
TI Reproducibility and replicability of software defect prediction studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Replication; Reproducibility; Software defect prediction
ID REPLICATED QUANTITATIVE-ANALYSIS; FAULT DISTRIBUTIONS; FAILURE-PRONENESS
AB Context: Replications are an important part of scientific disciplines. Replications test the credibility of original studies and can separate true results from those that are unreliable.
   Objective: In this paper we investigate the replication of defect prediction studies and identify the characteristics of replicated studies. We further assess how defect prediction replications are performed and the consistency of replication findings.
   Method: Our analysis is based on tracking the replication of 208 defect prediction studies identified by a highly cited Systematic Literature Review (SLR) [1]. We identify how often each of these 208 studies has been replicated and determine the type of replication carried out. We identify quality, citation counts, publication venue, impact factor, and data availability from all 208 SLR defect prediction papers to see if any of these factors are associated with the frequency with which they are replicated.
   Results: Only 13 (6%) of the 208 studies are replicated. Replication seems related to original papers appearing in the Transactions of Software Engineering (TSE) journal. The number of citations an original paper had was also an indicator of replications. In addition, studies conducted using closed source data seems to have more replications than those based on open source data. Where a paper has been replicated, 11 (38%) out of 29 studies revealed different results to the original study.
   Conclusion: Very few defect prediction studies are replicated. The lack of replication means that it remains unclear how reliable defect prediction is. We provide practical steps for improving the state of replication.
C1 [Mahmood, Zaheed; Bowes, David; Lane, Peter C. R.; Petric, Jean] Univ Hertfordshire, Hatfield, Herts, England.
   [Hall, Tracy] Brunel Univ London, London, England.
C3 University of Hertfordshire; Brunel University
RP Mahmood, Z (corresponding author), Univ Hertfordshire, Hatfield, Herts, England.
EM z.mahmood4@herts.ac.uk; d.h.bowes@herts.ac.uk; tracy.hall@brunel.ac.uk;
   peter.lane@bcs.org.uk; j.petric@herts.ac.uk
RI Petric, Jean/HLW-7896-2023
OI Petric, Jean/0000-0003-1949-2706; Bowes, David/0000-0001-7014-2811;
   Lane, Peter/0000-0002-8554-2217; Hall, Tracy/0000-0002-2728-9014
CR Aksnes DW, 2003, RES EVALUAT, V12, P159, DOI 10.3152/147154403781776645
   Amasaki S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2003.1251044
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], P 5 INT C PRED MOD S
   [Anonymous], 2010, P 6 INT C PRED MOD S, DOI DOI 10.1145/1868328.1868336
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bowes D, 2014, AUTOMAT SOFTW ENG, V21, P287, DOI 10.1007/s10515-013-0129-8
   Carver J. C, 2010, REPORTING GUIDELINES
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Devine T. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P181, DOI 10.1109/ICST.2012.98
   Duala-Ekoko E, 2009, INT SYMP EMP SOFTWAR, P34, DOI 10.1109/ESEM.2009.5316047
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fucci D, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962592
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Goodman SN, 2016, SCI TRANSL MED, V8, DOI 10.1126/scitranslmed.aaf5027
   Grbac TG, 2013, IEEE T SOFTWARE ENG, V39, P462, DOI 10.1109/TSE.2012.46
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P314, DOI 10.1109/ICMLA.2012.226
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hamill M, 2015, SOFTWARE QUAL J, V23, P229, DOI 10.1007/s11219-014-9235-5
   Harzing AW, 2014, SCIENTOMETRICS, V98, P565, DOI 10.1007/s11192-013-0975-y
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenam B., BACK BASICS 4RS SOFT
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Krishnan S, 2013, INFORM SOFTWARE TECH, V55, P1479, DOI 10.1016/j.infsof.2012.11.008
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Leek JT, 2015, P NATL ACAD SCI USA, V112, P1645, DOI 10.1073/pnas.1421412111
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Leszak M, 2005, LECT NOTES COMPUT SC, V3547, P98
   Li P.L., 2005, EMPIRICAL COMP FIELD
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moed HF, 2010, J INFORMETR, V4, P265, DOI 10.1016/j.joi.2010.01.002
   Moonesinghe R, 2007, PLOS MED, V4, P218, DOI 10.1371/journal.pmed.0040028
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munafò MR, 2017, NAT HUM BEHAV, V1, DOI 10.1038/s41562-016-0021
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schimmack U., 2014, Quantifying Statistical Research Integrity: The Replicability-Index
   Shepperd M., MACHINE LEARNING MAY
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh P., 2014, INT J APPL INF SYST, V7, P35
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Turhan B, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P231
   Vanschoren Joaquin, 2013, SIGKDD Explorations, V15, P49, DOI DOI 10.1145/2641190.2641198
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yu Z., 2016, CORR
   Zhang HY, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P93, DOI 10.1109/PRDC.2007.28
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 68
TC 15
Z9 17
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 148
EP 163
DI 10.1016/j.infsof.2018.02.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900013
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU García-Mireles, GA
   Moraga, MA
   García, F
   Calero, C
   Piattini, M
AF Alberto Garcia-Mireles, Gabriel
   Angeles Moraga, Ma
   Garcia, Felix
   Calero, Coral
   Piattini, Mario
TI Interactions between environmental sustainability goals and software
   product quality: A mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Environmental sustainability; Greenability; Interaction; Software
   product quality; ISO/IEC 25010
ID ENERGY EFFICIENCY; GREEN; GUIDELINES
AB Context: Sustainability is considered as either a quality requirement or a quality characteristic that should be included in software when environmental protection concerns are being taken into account. However, addressing sustainability in software projects might have an impact on the quality of the software product delivered. Conflicting goals between sustainability and particular software product characteristics should be studied when developing application software, since achieving users' requirements can be a hindrance in the quest to meet sustainability goals.
   Objective: This paper aims to provide an overview of the approaches found in the literature for dealing with interactions between software product quality and sustainability in the context of application software.
   Method: A systematic mapping study is conducted to identify practices for managing interactions between software quality characteristics and sustainability. The selected papers are classified according to the quality characteristic considered and their influence on sustainability.
   Results: Most of the 66 selected papers focused on validating current technologies concerning their support for sustainability (46%%). The interaction between performance efficiency and energy efficiency is what is reported most and there is a fairly positive interaction. In addition, reliability and usability point to a positive interaction with energy efficiency, while security shows a conflicting interaction with energy efficiency. Functional suitability and maintainability can present both positive and negative interaction, with different goals derived from environmental sustainability.
   Conclusions: Interactions between software quality and sustainability have been addressed within an explorative approach. There is a need for additional research work to characterize the impact of interaction on both software quality and sustainability. Furthermore, proposals should be validated in industrial settings.
C1 [Alberto Garcia-Mireles, Gabriel] Univ Sonora, Dept Matemat, Blvd Encinas & Rosales S-N, Hermosillo 83000, Sonora, Mexico.
   [Angeles Moraga, Ma; Garcia, Felix; Calero, Coral; Piattini, Mario] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informat, Paseo Univ 4, E-13071 Ciudad Real, Spain.
C3 Universidad de Sonora; Universidad de Castilla-La Mancha
RP García-Mireles, GA (corresponding author), Univ Sonora, Dept Matemat, Blvd Encinas & Rosales S-N, Hermosillo 83000, Sonora, Mexico.
EM mireles@mat.uson.mx; MariaAngeles.Moraga@uclm.es; Felix.Garcia@uclm.es;
   Coral.Calero@uclm.es; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Calero, Coral/D-4319-2011; Garcia,
   Felix/D-4299-2011; Moraga/G-2615-2015
OI Piattini, Mario/0000-0002-7212-8279; Calero, Coral/0000-0003-0728-4176;
   Garcia, Felix/0000-0001-6460-0353; Moraga/0000-0001-9165-7144;
   Garcia-Mireles, Gabriel Alberto/0000-0003-4633-7410
FU project: GINSENG (Ministerio de Economia y Competitividad y Fondo
   Europeo de Desarrollo Regional FEDER) [TIN2015-70259-C2-1-R]
FX This work has been funded by the project: GINSENG (Ministerio de
   Economia y Competitividad y Fondo Europeo de Desarrollo Regional FEDER,
   TIN2015-70259-C2-1-R).
CR Abdulsalam Sarah, 2015, 2015 Sixth International Green and Sustainable Computing Conference (IGSC), P1, DOI 10.1109/IGCC.2015.7393699
   Abdulsalam S., 2014, Green Computing Conference (IGCC), 2014 International, P1
   Aggarwal K., P 24 ANN INT C COMP, P219
   Agosta G, 2012, SUSTAIN COMPUT-INFOR, V2, P105, DOI 10.1016/j.suscom.2012.02.002
   Ahmed F, 2014, 2014 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS AND TECHNOLOGIES (ICOSST), P65, DOI 10.1109/ICOSST.2014.7029322
   Akinli Kocak S., 2014, P 3 INT WORKSH REQ E, P37
   Garcia-Mireles GA, 2014, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE 2014), P91
   García-Mireles GA, 2015, J SYST SOFTWARE, V103, P150, DOI 10.1016/j.jss.2015.01.057
   Amri R, 2014, 2014 FOURTH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATIONS (ICACC), P231, DOI 10.1109/ICACC.2014.62
   [Anonymous], 2010, ENVIROINFO CITESEER
   [Anonymous], 2013, SYSTEMATIC LIT REV G
   [Anonymous], ENERGY 2013
   Ardito L, 2014, SUSTAIN COMPUT-INFOR, V4, P24, DOI 10.1016/j.suscom.2013.09.001
   Ardito L, 2015, IT PROF, V17, P44, DOI 10.1109/MITP.2015.16
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Beghoura M. A., 2015, REQUIR ENG
   Bener AB, 2014, IEEE SOFTWARE, V31, P36
   Berander P., 2005, SOFTWARE QUALITY ATT
   Bomfim C, 2014, INT REQUIR ENG CONF, P402, DOI 10.1109/RE.2014.6912291
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Cabot J, 2009, PROC INT CONF SOFTW, P207, DOI 10.1109/ICSE-COMPANION.2009.5070983
   Calero C., 2015, Green in Software Engineering, P1, DOI [10.1007/978-3-319-08581-4, DOI 10.1007/978-3-319-08581-4]
   Calero C, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P46, DOI 10.1109/GREENS.2013.6606421
   Calero Coral, 2014, RE4SUSY RE, P28
   Calero Coral, 2015, Green in Software Engineering, P3
   Capra E, 2012, INFORM SOFTWARE TECH, V54, P60, DOI 10.1016/j.infsof.2011.07.005
   Chang S.-W., P 29 ANN ACM S APPL, P1469
   Chinenyeze SJ, 2016, P INT COMP SOFTW APP, P186, DOI 10.1109/COMPSAC.2016.90
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P508, DOI [10.1145/2901739.2903494, 10.1109/MSR.2016.066]
   Cordero V, 2015, 2015 IEEE 10TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2015), P35, DOI 10.1109/ICGSEW.2015.15
   Corral L., 2014, P 29 ANN ACM S APPL, P1213, DOI DOI 10.1145/2554850.2555064
   Couto M, 2014, LECT NOTES COMPUT SC, V8771, P77, DOI 10.1007/978-3-319-11863-5_6
   D'Ambrosio S., 2014, International Green Computing Conference, P1
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   De Guzman I.G. R., 2015, GREEN SOFTWARE ENG, P205
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erdelyi Krisztina, 2013, 2013 IEEE 11th International Symposium on Intelligent Systems and Informatics (SISY), P337, DOI 10.1109/SISY.2013.6662597
   Field H., 2014, P 29 ANN ACM S APPL, P1194, DOI [10.1145/2554850.2554920, DOI 10.1145/2554850.2554920]
   Giuseppe P, 2016, P 10 ACM IEEE INT S, P1, DOI [10.1145/2961111.2962586, DOI 10.1145/2961111.2962586]
   Gordieiev O., 2015, CEUR WORKSHOP PROC, V1356, P432
   Gottschalk M, 2016, PROGR IS, P77, DOI 10.1007/978-3-319-23455-7_5
   Hilty LM, 2006, ENVIRON MODELL SOFTW, V21, P1618, DOI 10.1016/j.envsoft.2006.05.007
   Hilty LM, 2015, ADV INTELL SYST, V310, P3, DOI 10.1007/978-3-319-09228-7_1
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   ISO/IEC, 2008, 12207E ISOIEC IEEE
   ISO/IEC, 2010, Technical report
   Jagroep EA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P523, DOI 10.1145/2889160.2889216
   Jelschen J, 2012, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2012.43
   Kansal Aman, 2008, Performance Evaluation Review, V36, P26, DOI 10.1145/1453175.1453180
   Keong CK, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P172, DOI 10.1109/MySEC.2015.7475216
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B., 2007, Ver. 2.3 EBSE Technical Report
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kocak S.A., 2015, RE4SUSY RE, P17
   Lago P., 2014, ENG NOTES, V39, P36
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Lago P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1523
   Lami G, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P53, DOI 10.1109/IWSM-MENSURA.2012.16
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Mahaux M, 2011, LECT NOTES COMPUT SC, V6606, P19, DOI 10.1007/978-3-642-19858-8_3
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Manotas I, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P16, DOI 10.1109/GREENS.2013.6606417
   Marcus A, 2014, LECT NOTES COMPUT SC, V8519, P583, DOI 10.1007/978-3-319-07635-5_56
   Marcus A, 2011, LECT NOTES COMPUT SC, V6769, P172, DOI 10.1007/978-3-642-21675-6_20
   Moraga M., 2015, GREEN SOFTWARE ENGIN, P261, DOI 10.1007/978-3-319-08581-4_11
   Moura I, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P56, DOI 10.1109/MSR.2015.13
   Naumann S., 2015, ADV INTELLIGENT SYST, V310, P91
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Noureddine A., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P21, DOI 10.1109/GREENS.2012.6224251
   Noureddine A., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, ISSTA, P445
   Noureddine A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P623, DOI 10.1109/ICSE.2015.208
   Ouhbi S., 2015, P 2015 10 INT C INT, P1
   Park J.J., 2014, SEKE, P717
   Penzenstadler Birgit, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P32, DOI 10.1049/ic.2012.0004
   Penzenstadler B., 2014, P 18 INT C EV ASS SO, P1
   Penzenstadler B., 2015, Green in Software Engineering, P157
   Penzenstadler B, 2015, LECT NOTES COMPUT SC, V9186, P634, DOI 10.1007/978-3-319-20886-2_59
   Penzenstadler B, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P36, DOI 10.1109/GREENS.2015.13
   Penzenstadler B, 2014, IEEE SOFTWARE, V31, P40, DOI 10.1109/MS.2014.22
   Penzenstadler Birgit., 2013, P WORKSH GREEN SOFTW, P3
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Procaccianti G, 2016, J SYST SOFTWARE, V117, P185, DOI 10.1016/j.jss.2016.02.035
   Rahman F, 2011, SUSTAIN COMPUT-INFOR, V1, P257, DOI 10.1016/j.suscom.2011.06.001
   Rajan A, 2016, P 17 IEEE INT S WORL, P1
   Rashid M, 2015, INT SYMP EMP SOFTWAR, P82, DOI 10.1109/ESEM.2015.7321198
   Raturi A., 2014, Proceedings of the 3rd International Workshop on Green and Sustainable Software. GREENS 2014, P1, DOI [DOI 10.1145/2593743.2593744, 10.1145/2593743.2593744]
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Rodriguez A., 2013, POW EL APPL EPE 2013, P1
   Roher K, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON USER EVALUATIONS FOR SOFTWARE ENGINEERING RESEARCHERS (USER), P16, DOI 10.1109/USER.2013.6603080
   Sabharwal M, 2013, IT PROF, V15, P19, DOI 10.1109/MITP.2012.104
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C., 2014, P 8 ACMIEEE INT S EM, P1
   Salado A, 2016, IEEE SYST J, V10, P25, DOI 10.1109/JSYST.2014.2315597
   Saputri TRD, 2016, COMM COM INF SC, V671, P53, DOI 10.1007/978-981-10-3256-1_4
   Sierszecki K, 2014, IEEE SOFTWARE, V31, P64, DOI 10.1109/MS.2014.63
   SustainAbility, CAN OUR SOC END
   Taina Juha, 2011, UPGRADE: The European Journal for the Informatics Professional, V12, P22
   UN (United Nations), 1987, OUR COMMON FUTURE
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Vallerio KS, 2006, IEEE T MOBILE COMPUT, V5, P846, DOI 10.1109/TMC.2006.97
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yu JD, 2015, IEEE T MOBILE COMPUT, V14, P1698, DOI 10.1109/TMC.2014.2352862
   Zhang CL, 2014, IEEE SOFTWARE, V31, P69, DOI 10.1109/MS.2014.27
   Zhang Chenlei, 2014, P 11 WORKING C MININ, P400, DOI DOI 10.1145/2597073.2597130
   Zhang H, 2014, INFORM SOFTWARE TECH, V56, P40, DOI 10.1016/j.infsof.2013.07.001
NR 110
TC 35
Z9 37
U1 1
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 108
EP 129
DI 10.1016/j.infsof.2017.10.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800009
DA 2024-07-18
ER

PT J
AU Mikkonen, T
   Lassenius, C
   Männistö, T
   Oivo, M
   Järvinen, J
AF Mikkonen, Tommi
   Lassenius, Casper
   Mannisto, Tomi
   Oivo, Markku
   Jarvinen, Janne
TI Continuous and collaborative technology transfer: Software engineering
   research with real-time industry impact
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technology transfer; Collaborative research; Software engineering
   research; Public-private partnership
ID ACADEMIC RESEARCH; MODEL; SYSTEMS
AB Context: Traditional technology transfer models rely on the assumption that innovations are created in academia, after which they are transferred to industry using a sequential flow of activities. This model is outdated in contemporary software engineering research that is done in close collaboration between academia and industry and in large consortia rather than on a one-on-one basis. In the new setup, research can be viewed as continuous co-experimentation, where industry and academia closely collaborate and iteratively and jointly discover problems and develop, test, and improve solutions.
   Objective: The objective of the paper is to answer the following research questions: How can high-quality, ambitious software engineering research in a collaborative setup be conducted quickly and on a large scale? How can real-time business feedback to continuously improve candidate solutions be gained?
   Method: The proposed model has been created, refined, and evaluated in two large, national Finnish software research programs. For this paper, we conducted thematic interviews with representatives of four companies who participated in these programs.
   Results: The fundamental change is in the mindset of the participants from technology push by academia to technology pull by companies, resulting in co-creation. Furthermore, continuous cooperation between participants enables solutions to evolve in rapid cycles and forms a scalable model of interaction between research institutes and companies.
   Conclusions: The multifaceted nature of software engineering research calls for numerous approaches. In particular, when working with human-related topics such as company culture and development methods, many discoveries result from seamless collaboration between companies and research institutes.
C1 [Mikkonen, Tommi] Dept Comp Sci, Gustav Hallstromin Katu 2b, Helsinki, Finland.
   [Lassenius, Casper] Aalto Univ, Espoo, Finland.
   [Mannisto, Tomi] Univ Helsinki, Helsinki, Finland.
   [Oivo, Markku] Univ Oulu, Oulu, Finland.
   [Jarvinen, Janne] F Secure, Helsinki, Finland.
C3 Aalto University; University of Helsinki; University of Oulu
RP Mikkonen, T (corresponding author), Dept Comp Sci, Gustav Hallstromin Katu 2b, Helsinki, Finland.
EM tommi.mikkonen@helsinki.fi; casper.lassenius@aalto.fi;
   tomi.mannisto@helsinki.fi; markku.oivo@oulu.fi;
   janne.jarvinen@f-secure.com
RI Lassenius, Casper C/A-4339-2013; Männistö, Tomi/ABC-7781-2021; Järvinen,
   Janne/HJJ-1432-2023
OI Männistö, Tomi/0000-0001-7470-5183; Jarvinen, Janne/0000-0002-2000-6552;
   Mikkonen, Tommi/0000-0002-8540-9918
CR Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], IDEA FACTORY BELL LA
   [Anonymous], WATERFALL CD TELECOM
   [Anonymous], ATLANTIC
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], 1995, SCI ENDLESS FRONTIER
   [Anonymous], R D MANAGE
   [Anonymous], N4S STRATEGIC RES IN
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], P 8 INT C SOFTW ENG
   [Anonymous], DIALOGUE MAPPING BUI
   [Anonymous], IEEE INT COMPUT
   [Anonymous], 2014, P 9 INT C SOFTW ENG
   [Anonymous], EASST REV
   [Anonymous], P WEBIST 17 INSTICC
   [Anonymous], 2012, NATL LAW REV
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BASILI VR, 1994, IEEE SOFTWARE, V11, P70, DOI 10.1109/52.268959
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Beecham S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P41, DOI 10.1109/ICGSE.2013.14
   BUXTON JN, 1991, SOFTWARE ENG J, V6, P17, DOI 10.1049/sej.1991.0002
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Debois P., 2011, J INF TECHNOL MANAG, V24, P3
   ETZKOWITZ H, 1993, MINERVA, V31, P326, DOI 10.1007/BF01098626
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   Godin B, 2006, SCI TECHNOL HUM VAL, V31, P639, DOI 10.1177/0162243906291865
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jarvinen J, 2017, PROC IEEE ACM INT C, P314, DOI 10.1109/ICSE-C.2017.59
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   John C.M., 1995, TECHNOLOGY READINESS
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kouwenhoven Vincent., 1993, Modern Governance: New Government.Society Interactions, P119
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Lehtinen TOA, 2017, EMPIR SOFTW ENG, V22, P2409, DOI 10.1007/s10664-016-9464-2
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Link A., 1989, Cooperative Research and Development: The Industry-University-Government Relationship
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   MANSFIELD E, 1991, RES POLICY, V20, P1, DOI 10.1016/0048-7333(91)90080-A
   MANSFIELD E, 1995, REV ECON STAT, V77, P55, DOI 10.2307/2109992
   Mowery DC., 2015, Ivory tower and industrial innovation: University-industry technology transfer before and after the Bayh-Dole Act
   Myllärniemi V, 2016, EMPIR SOFTW ENG, V21, P1623, DOI 10.1007/s10664-014-9359-z
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Poppendieck M, 2007, PROC INT CONF SOFTW, P165, DOI 10.1109/ICSECOMPANION.2007.46
   PREECE J, 1994, INT J HUM-COMPUT ST, V41, P553, DOI 10.1006/ijhc.1994.1073
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   ROSENBERG N, 1990, RES POLICY, V19, P165, DOI 10.1016/0048-7333(90)90046-9
   SHNEIDERMAN B, 1988, COMMUN ACM, V31, P1256, DOI 10.1145/50087.214900
   Shneiderman Ben, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), DOI 10.1109/ESEM.2013.63
   Stokes D. E., 2011, PASTEURS QUADRANT BA
   Tausan N, 2017, INFORM SOFTWARE TECH, V91, P82, DOI 10.1016/j.infsof.2017.06.008
   WENGER E., 2011, STEP LEADERSHIP WORK
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Zelkowitz MV, 1996, IEEE T ENG MANAGE, V43, P250, DOI 10.1109/17.511836
NR 70
TC 23
Z9 24
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 34
EP 45
DI 10.1016/j.infsof.2017.10.013
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Jayatilleke, S
   Lai, R
AF Jayatilleke, Shalinka
   Lai, Richard
TI A systematic review of requirements change management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements change management; Agile; Systematic review
ID ENGINEERING PRACTICES; SOFTWARE-DEVELOPMENT; IMPACT ANALYSIS;
   TRACEABILITY; CHALLENGES; MODELS
AB Context: Software requirements are often not set in concrete at the start of a software development project; and requirements changes become necessary and sometimes inevitable due to changes in customer requirements and changes in business rules and operating environments; hence, requirements development, which includes requirements changes, is a part of a software process. Previous work has shown that failing to manage software requirements changes well is a main contributor to project failure. Given the importance of the subject, there's a plethora of research work that discuss the management of requirements change in various directions, ways and means. An examination of these works suggests that there's a room for improvement.
   Objective: In this paper, we present a systematic review of research in Requirements Change Management (RCM) as reported in the literature.
   Method: We use a systematic review method to answer four key research questions related to requirements change management. The questions are: (1) What are the causes of requirements changes? (2) What processes are used for requirements change management? (3) What techniques are used for requirements change management? and (4) How do organizations make decisions regarding requirements changes? These questions are aimed at studying the various directions in the field of requirements change management and at providing suggestions for future research work.
   Results: The four questions were answered; and the strengths and weaknesses of existing techniques for RCM were identified.
   Conclusions: This paper has provided information about the current state-of-the-art techniques and practices for RCM and the research gaps in existing work. Benefits, risks and difficulties associated with RCM are also made available to software practitioners who will be in a position of making better decisions on activities related to RCM. Better decisions will lead to better planning which will increase the chance of project success. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Jayatilleke, Shalinka; Lai, Richard] La Trobe Univ, Dept Comp Sci & Informat Technol, Bundoora, Vic 3086, Australia.
C3 La Trobe University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Informat Technol, Bundoora, Vic 3086, Australia.
EM sejayatilleke@students.latrobe.edu.au; r.lai@latrobe.edu.au
CR Abdullah N., 2011, ... on Agile Requirements, P1, DOI DOI 10.1145/2068783.2068784
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Acuña ST, 2001, WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL 1, PROCEEDINGS, P237
   Ajila SA, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL VII, PROCEEDINGS, P492
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ali N, 2016, INFORM SOFTWARE TECH, V70, P49, DOI 10.1016/j.infsof.2015.09.005
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2003, INT WORKSH SOFTW PRO
   [Anonymous], INT ARAB J INF TECHN
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Aoyama M, 1998, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.1998.671097
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Bano Muneera, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P22, DOI 10.1049/ic.2012.0003
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   Bashir MF, 2006, 10TH IEEE INTERNATIONAL MULTITOPIC CONFERENCE 2006, PROCEEDINGS, P265
   Basili V., 2007, ICIS 2007 P, P25
   Basirati M. R., 2015, REQ ENG 2015 P IEEE
   Berry D. M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P311, DOI 10.1109/RE.2010.44
   Berry D. M., 2002, EBERLEIN AND LEITE
   Bilgaiyan Saurabh, 2016, 2016 2nd International Conference on Computational Intelligence and Networks (CINE), P112, DOI 10.1109/CINE.2016.27
   Bjarnason E., 2011, Proceedings of the 1st Workshop on Agile Requirements Engineering, P3
   Blaauboer F, 2007, LECT NOTES COMPUT SC, V4495, P294
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Boehm B., 1987, IEEE SOFTW, V4
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Bommer M, 2002, J MANAGE ENG, V18, P21, DOI 10.1061/(ASCE)0742-597X(2002)18:1(21)
   Bouquet F., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Butler B. R., 2004, REL TECN AN AV SUST
   Campbell B., 2005, PACIS, P54
   Cao L., 2008, IEEE SOFTW, V25
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Carlson D., 2010, P 13 ANN SYST ENG C
   Carlson R., 2012, APPL SCRUM STABILIZE, P1
   Ceschi M, 2005, IEEE SOFTWARE, V22, P21, DOI 10.1109/MS.2005.75
   Chitchyan Ruzanna., 2007, AOSD 07, P36
   Christel M. G., 1992, DTIC DOCUMENT
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P230
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Coelho E., 2012, DEVELOPMENT, V3, P7, DOI DOI 10.5120/IJAIS12-450574
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Davis AM, 2007, P INT COMP SOFTW APP, P487
   De Lucia Andrea, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P212, DOI 10.4304/jetwi.2.3.212-220
   Dick J, 2005, IEEE SOFTWARE, V22, P14, DOI 10.1109/MS.2005.150
   Eberlein Armin., 2002, Proceedings of the International Workshop on Time-Constrained Requirements Engineering (TCRE-02), P4
   Ebert C, 2005, PROC INT CONF SOFTW, P553
   Ecklund EF, 1996, ACM SIGPLAN NOTICES, V31, P342, DOI 10.1145/236338.236372
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   ElEmam K, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P214, DOI 10.1109/ICSM.1997.624248
   Ernst NA, 2014, INFORM SYST, V43, P100, DOI 10.1016/j.is.2013.05.008
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Firesmith D, 2007, J OBJECT TECHNOL, V6, P17, DOI 10.5381/jot.2007.6.1.c2
   Fowler M., 2003, REFACTORING IMPROVIN
   Fricke E., 2000, Systems Engineering, V3, P169
   Fuggetta A., 1996, SOFTWARE PROCESS
   Ghosh S, 2013, ASIA PAC SOFWR ENG, P148, DOI 10.1109/APSEC.2013.30
   Goknil A., 2008, ECMDA TRAC WORKSH EC
   Goradia T., 1993, SIGSOFT Software Engineering Notes, V18, P171, DOI 10.1145/174146.154269
   Gotel O, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P169, DOI 10.1109/ISRE.1997.566866
   Gotel O., 2006, P 1 INT WORKSH MULT
   Gupta C., 2010, J INF PROCESS, V6
   Gupta C, 2010, J INF PROCESS SYST, V6, P597, DOI 10.3745/JIPS.2010.6.4.597
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hamer P. G., 1982, Sixth International Conference on Software Engineering, P197
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Harker S. D. P., 1993, IEEE INT S REQ ENG
   Harrison R., 2007, INT C SOFTW ENG ADV, P71
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   Haugset B., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5289, DOI 10.1109/HICSS.2012.127
   Heindl M., 2005, P 10 EUROPEAN SOFTWA, P60
   Hewitt J, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P41, DOI 10.1109/IWSE.2005.1
   Hill P. R, 2010, PRACTICAL PROJECT ES
   Hussain W, 2016, INT REQUIR ENG CONF, P126, DOI 10.1109/RE.2016.64
   Ibrahim S., 2005, ASIAN J INFORM TECHN, V4, P345
   Ikram N., 2000, MANAGEMENT RISK INFO
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ingram C., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P42, DOI 10.1109/WETSoM.2012.6226992
   Janeway C.A., 2005, IMMUNOBIOLOGY, P14
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   Jayatilleke S, 2013, IEEE AUS SOFT ENGR, P175, DOI 10.1109/ASWEC.2013.29
   Jones C, 1996, COMPUTER, V29, P92, DOI 10.1109/2.507640
   Jones C., 1997, APPL SOFTWARE MEASUR
   Karesma P., 2016, SCALING AGILE METHOD
   Kazman R, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2010.111
   Khatri SK, 2016, INT CONF RELI INFO, P123, DOI 10.1109/ICRITO.2016.7784938
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kobayashi A, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P171, DOI 10.1109/ECBS.2001.922419
   Kotonya G., 1998, Requirements engineering: processes and techniques
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kumari S., 2013, INT J ADV RES COMPUT, V3
   Lam W., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P244, DOI 10.1109/EURMIC.1999.794787
   Lam W, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.1998.665774
   Lam W, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P34, DOI 10.1109/ASSET.1998.688230
   Lavazza L, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ICRE.2000.855597
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Leung Haretone., 2002, Handbook of Software Engineering, P1
   Li Y, 2008, LECT NOTES COMPUT SC, V5007, P100
   Liu Jun, 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P207, DOI 10.1109/WCSE.2010.105
   Lock S., 1999, INTEGRATED FRAMEWORK
   Lock S., 1998, DOCT S P CIT
   Lock S., 1998, REQUIREMENT LEVEL CH
   Lonchamp J., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P41, DOI 10.1109/SPCON.1993.236823
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Makarainen M., 2000, SOFTWARE CHANGE MANA, V4, P6
   Malhotra R, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P228, DOI 10.1109/ICACCI.2015.7275614
   Mathiassen L., 2004, MANAGING REQUIREMENT, P63
   Maxwell J. C., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P101, DOI 10.1109/RE.2012.6345793
   McGee S, 2012, REQUIR ENG, V17, P133, DOI 10.1007/s00766-012-0149-0
   McGee S, 2011, INT REQUIR ENG CONF, P25, DOI 10.1109/RE.2011.6051641
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mirarab S, 2007, INT C PROGRAM COMPRE, P177
   Moynihan T., 2000, Proceedings 2000 Australian Software Engineering Conference, P181, DOI 10.1109/ASWEC.2000.844575
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nurcan S., 1999, EUR C INF SYST, P513
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   NURMULIANI N, 2006, P 11 AUSTR WORKSH RE
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   O'Neal J. S., 2003, ANAL IMPACT CHANGING
   OLSEN NC, 1993, IEEE SOFTWARE, V10, P29, DOI 10.1109/52.232394
   OZ E, 1994, COMMUN ACM, V37, P29, DOI 10.1145/194313.194319
   Panda A, 2015, PROCEDIA COMPUT SCI, V57, P772, DOI 10.1016/j.procs.2015.07.474
   Pandey D., 2010, 2010 INT C ADV REC T, P287, DOI DOI 10.1109/ARTCOM.2010.24
   Pfleeger SL, 2008, IEEE SOFTWARE, V25, P32, DOI 10.1109/MS.2008.160
   Pichler M, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P251
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Pohl K., 1996, PROCESS CENTERED REQ, P342
   Popli R., 2014, INT J COMPUT SCI COM, V5, P23
   Pressman R. S., 2005, SOFTWARE ENG PRACTIT
   Racheva Z., 2010, P 2010 ACM IEEE INT, P39
   Rajper S., 2016, Indian Journal of Science and Technology, V9
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Ramzan S., 2005, INT C INF COMM TECHN, P309, DOI 10.1109/ICICT.2005.1598607
   Ramzan S, 2006, 10TH IEEE INTERNATIONAL MULTITOPIC CONFERENCE 2006, PROCEEDINGS, P219
   Ravichandar R., 2007, CS0703012 ARXIV, V2007, P10
   Regnell B., 2001, REQIREMENTS MEAN DEC
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Rochimah S.W. K., 2007, SOFTWARE ENG ADV, P19, DOI [10.1109/ICSEA.2007.17, DOI 10.1109/ICSEA.2007.17]
   Rolland C, 2004, REQUIR ENG, V9, P1, DOI 10.1007/s00766-003-0168-y
   SHEN VY, 1983, IEEE T SOFTWARE ENG, V9, P155, DOI 10.1109/TSE.1983.236460
   Shi L, 2013, S VIS LANG HUM CEN C, P135, DOI 10.1109/RE.2013.6636713
   Silvius A. G., 2007, 40 ANN HAW INT C, p211b 211b
   SKYTTE K, 1994, IEEE SPECTRUM, V31, P63, DOI 10.1109/6.265414
   Sommerville I., 2004, Software engineering. international computer science series
   Sommerville I., 1998, REQUIREMENTS ENG PRO, P282
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Strens MR, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P278, DOI 10.1109/ECBS.1996.494539
   Strong DR, 2009, ECOLOGY, V90, P1, DOI 10.1890/0012-9658-90.1.1
   Tallon P.P., 1999, A process-oriented assessment of the alignment of information system and business strategy: Implications for business value
   Taylor A., 2000, COMPUT BULL, V41, P24, DOI 10.1093/combul/42.1.24
   Tomyim J, 2016, INT CONF SOFTW ENG, P7, DOI 10.1109/ICSESS.2016.7883005
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Ullah A, 2013, ACM TRANS MANAG INF, V4, DOI 10.1145/2445560.2445564
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Verhanneman T., 2005, P 1 WORKSH SOFTW ENG, V30, P1
   von Knethen A, 2002, PROC IEEE INT CONF S, P482, DOI 10.1109/ICSM.2002.1167808
   WEISS DM, 1985, IEEE T SOFTWARE ENG, V11, P157, DOI 10.1109/TSE.1985.232190
   Wickramaarachchi D, 2017, COMPUT SCI INF SYST, V14, P393, DOI 10.2298/CSIS160229007W
   Wiegers Karl, 2013, Software Requirements
   Williams B. J., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P966
   Xiao Hua., 2007, Proceedings of the International Workshop on Systems Development in SOA Environments, P6, DOI DOI 10.1109/SDSOA.2007.11
   Zhu Y., 2014, COMPUT HUM BEHAV, V30
NR 180
TC 61
Z9 73
U1 10
U2 104
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 163
EP 185
DI 10.1016/j.infsof.2017.09.004
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200011
DA 2024-07-18
ER

PT J
AU Kroll, J
   Richardson, I
   Prikladnicki, R
   Audy, JLN
AF Kroll, Josiane
   Richardson, Ita
   Prikladnicki, Rafael
   Audy, Jorge L. N.
TI Empirical evidence in follow the Sun software development: A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Follow the sun; Time zone management;
   Virtual teams; Systematic mapping study
AB Context: Follow the Sun (FTS) development is a special case of Global Software Development. It is applied in the context of global projects to reduce the software development life-cycle duration. A number of studies have attempted to aggregate a better understanding of FTS development, but it is still an immature research area.
   Objective: This paper aims to investigate the existing empirical evidence about FTS research with a focus on identifying what research has been conducted in the area and which results have been obtained.
   Method: To achieve this goal, we performed a systematic mapping study to answer our research questions: "Which FTS studies have been published in the literature?" and "What empirical support is provided for them?" We investigated papers published between 1990 and 2017. The synthesis was made through classifying the papers into different categories (research topics, research methods, conferences and journals venues for FTS research, and countries involved in FTS research).
   Results: We selected 57 papers using a predefined search strategy. The majority of the papers discussing FTS were published in the International Conference on Global Software Engineering (ICGSE). The main research topic addressed is processes and organization development for FTS. Case studies combined with the interview as a research sub-method is adopted in the most studies performed in FTS. The majority of the existing research and the most active researchers in this topic are from the United States and Brazil. However, India and the United States are the countries that appear most often in the studies conducted to investigate FTS.
   Conclusion: Our findings suggest that FTS software development is an up-to-date research topic in Software Engineering. However, little information about FTS has been published over the last few years. The emergent need in this research is the development of evaluation research for testing FTS feasibility and effectiveness in practice. (c) 2017 Elsevier B.V. All rights reserved.
C1 [Kroll, Josiane; Prikladnicki, Rafael; Audy, Jorge L. N.] Pontifical Catholic Univ Rio Grande do Sul PUCRS, Comp Sci Sch, Porto Alegre, RS, Brazil.
   [Richardson, Ita] Univ Limerick, Lero, Limerick, Ireland.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; University of
   Limerick
RP Kroll, J (corresponding author), Pontifical Catholic Univ Rio Grande do Sul PUCRS, Comp Sci Sch, Porto Alegre, RS, Brazil.
EM josiane.kroll@acad.pucrs.br; Ita.Richardson@lero.ie; rafaelp@pucrs.br;
   audy@pucrs.br
OI Richardson, Ita/0000-0002-5493-2837
FU PNPD/CAPES (Brazilian Ministry of Education); Science Foundation Ireland
   [10/CE/I1855]; CNPq [312127/2015-4, 406692/2013-0]; FAPERGS
   [2062-2551/13-7]
FX The first author is supported by PNPD/CAPES (Brazilian Ministry of
   Education), the second author is partially supported by the Science
   Foundation Ireland grant 10/CE/I1855 to Lero (www.lero.ie), and the
   third author is partially supported by CNPq (projects 312127/2015-4 and
   406692/2013-0) and FAPERGS (project 2062-2551/13-7).
CR Carmel E., 2011, IM WORKING WHILE THE, P188
   Carmel E, 2010, J MANAGE INFORM SYST, V27, P17, DOI 10.2753/MIS0742-1222270102
   Carmel Erran., 2009, 2009 42nd Hawaii International Conference on System Sciences, P1
   Colomo-Palacios R, 2014, SOFTWARE QUAL J, V22, P3, DOI 10.1007/s11219-012-9191-x
   Deiters C, 2011, INT C GLOB SOFTW ENG, P156, DOI DOI 10.1109/ICGSE.2011.26
   Deshpande Sadhana, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P67, DOI 10.1109/ICGSE.2010.16
   Dingsoyr T, 2014, IT PROF, V16, P22, DOI 10.1109/MITP.2013.19
   Ebert C, 2016, INT CONF GLOBAL SOFT, P144, DOI 10.1109/ICGSE.2016.19
   Korkala M, 2014, J SYST SOFTWARE, V95, P122, DOI 10.1016/j.jss.2014.03.080
   Kroll J., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P164, DOI 10.1109/ICGSE.2012.28
   Kroll J., 2013, 8 INT C GLOB SOFTW D
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Prikladnicki R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P973, DOI 10.1109/ICSE.2013.6606647
   Prikladnicki R, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.48
   Ramasubbu N, 2005, IEEE SOFTWARE, V22, P80, DOI 10.1109/MS.2005.69
   Richardson I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P35, DOI 10.1007/978-3-642-10294-3_2
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Tang J.C., 2011, Proceedings of the ACM 2011 conference on Computer supported cooperative work, P235, DOI [10.1145/1958824.1958860, DOI 10.1145/1958824.1958860]
   van Solingen Rini, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P165, DOI 10.1109/ICGSE.2010.27
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 22
TC 29
Z9 29
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 30
EP 44
DI 10.1016/j.infsof.2017.08.011
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Capretz, LF
   Ahmed, F
   da Silva, FQB
AF Capretz, Luiz Fernando
   Ahmed, Faheem
   da Silva, Fabio Q. B.
TI Soft sides of software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID PERSONALITY-TYPES; SKILLS
C1 [Capretz, Luiz Fernando] Western Univ, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
   [Ahmed, Faheem] Thompson Rivers Univ, Dept Comp Sci, Kamloops, BC V2C 0C8, Canada.
   [da Silva, Fabio Q. B.] Univ Fed Pernambuco, Ctr Informat, BR-50740560 Recife, PE, Brazil.
C3 Western University (University of Western Ontario); Universidade Federal
   de Pernambuco
RP Capretz, LF (corresponding author), Western Univ, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
EM lcapretz@uwo.ca; fahmed@tru.ca; fabio@cin.ufpe.br
RI Capretz, Luiz Fernando/K-5944-2013; da Silva, Fabio Queda
   Bueno/A-6524-2012
OI Capretz, Luiz Fernando/0000-0001-6966-2369; da Silva, Fabio Queda
   Bueno/0000-0002-3734-040X
CR Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   [Anonymous], 1971, The Psychology of Computer Programming
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   da Silva FQB, 2013, INFORM SOFTWARE TECH, V55, P1316, DOI 10.1016/j.infsof.2012.11.006
   DeMarco T., 1987, PEOPLEWARE
   Dijkstra E., 1979, ACM CLASSIC BOOKS SE
   Kappelman L, 2016, COMMUN ACM, V59, P64, DOI 10.1145/2888391
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Olson J.S., 2003, QUEUE, V1, P52, DOI DOI 10.1145/966789.966804
   Richter K, 2015, MODELING EVALUATION
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 14
TC 13
Z9 13
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 92
EP 94
DI 10.1016/j.infsof.2017.07.011
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, M
   Ali, S
   Yue, T
   Norgre, R
AF Zhang, Man
   Ali, Shaukat
   Yue, Tao
   Norgre, Roland
TI Uncertainty-wise evolution of test ready models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Uncertainty; Belief model; Belief test ready model; Model evolution;
   Model-based testing
ID INVARIANTS
AB Context: Cyber-Physical Systems (CPSs), when deployed for operation, are inherently prone to uncertainty. Considering their applications in critical domains (e.g., healthcare), it is important that such CPSs are tested sufficiently, with the explicit consideration of uncertainty. Model-based testing (MBT) involves creating test ready models capturing the expected behavior of a CPS and its operating environment. These test ready models are then used for generating executable test cases. It is, therefore, necessary to develop methods that can continuously evolve, based on real operational data collected during the operation of CPSs, test ready models and uncertainty captured in them, all together termed as Belief Test Ready Models (BMs)
   Objective: Our objective is to propose a model evolution framework that can interactively improve the quality of BMs, based on operational data. Such BMs are developed by one or more test modelers (belief agents) with their assumptions about the expected behavior of a CPS, its expected physical environment, and potential future deployments. Thus, these models explicitly contain subjective uncertainty of the test modelers.
   Method: We propose a framework (named as UncerTolve) for interactively evolving BMs (specified with extended UML notations) of CPSs with subjective uncertainty developed by test modelers. The key inputs of UncerTolve include initial BMs of CPSs with known subjective uncertainty and real data collected from the operation of CPSs. UncerTolve has three key features: 1) Validating the syntactic correctness and conformance of BMs against real operational data via model execution, 2) Evolving objective uncertainty measurements of BMs via model execution, and 3) Evolving state invariants (modeling test oracles) and guards of transitions (modeling constraints for test data generation) of BMs with a machine learning technique.
   Results: As a proof-of-concept, we evaluated UncerTolve with one industrial CPS case study, i.e., GeoSports from the healthcare domain. Using UncerTolve, we managed to evolve 51% of belief elements, 18% of states, and 21% of transitions as compared to the initial BM developed in an industrial setting.
   Conclusion: UncerTolve can successfully evolve model elements of the initial BM, in addition to objective uncertainty measurements using real operational data. The evolved model can be used to generate additional test cases covering evolved model elements and objective uncertainty. These additional test cases can be used to test the current and future deployments of a CPS to ensure that it will handle uncertainty gracefully during its operations. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Zhang, Man; Ali, Shaukat; Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Yue, Tao] Univ Oslo, Oslo, Norway.
   [Norgre, Roland] Future Posit X, R&I, Gavle, Sweden.
C3 University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Oslo, Norway.; Yue, T (corresponding author), Univ Oslo, Oslo, Norway.
EM manzhang@simula.no; shaukat@simula.no; tao@simula.no;
   roland.norgren@fpx.se
RI Zhang, Man/AGR-7496-2022; yue, tao/H-6783-2013
OI Zhang, Man/0000-0003-1204-9322; Yue, Tao/0000-0003-3262-5577
FU EU Horizon; RCN; RFF Hovedstaden; EU COST action [MPM4CPS]
FX This research was supported by the EU Horizon 2020 funded project
   (Testing Cyber-Physical Systems under Uncertainty). Tao Yue and Shaukat
   Ali are also supported by RCN funded ZenConfigurator project, RFF
   Hovedstaden funded MBE-CR project, RCN funded MBT4CPS project, RCN
   funded Certus SFI and the EU COST action MPM4CPS.
CR Ackermann C., 2010, AUTOMATIC REQUIREMEN, P1, DOI DOI 10.1007/978-3-642-16612-91
   Ali S., 2011 11 INT C QUAL S, P41
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2002, Uncertainty Theory
   [Anonymous], 2015, CYBER PHYS SYSTEMS T
   [Anonymous], 201602 SIM RES LAB
   [Anonymous], P IEEE 8 INT C SOFTW
   [Anonymous], 2015, UN MOD LANG UML
   [Anonymous], P NIST CPS WORKSH CH
   [Anonymous], 201613 SIM RES LAB
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], P 12 EUR C MOD FDN A
   Berg T, 2006, LECT NOTES COMPUT SC, V3922, P107
   Berg T, 2008, LECT NOTES COMPUT SC, V4961, P317, DOI 10.1007/978-3-540-78743-3_24
   Beschastnikh I., P 19 ACM SIGSOFT S 1, P267
   Beschastnikh I., P 36 INT C SOFTW ENG, P468
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   Boshernitsan M., 2006, ISSTA, P169
   Carlo G., 2009, P 31 INT C SOFTW ENG
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Daun M, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P48, DOI 10.1109/SEsCPS.2015.17
   David L., 2007, P 22 IEEE ACM INT C
   Davide L., 2006, P 2006 INT WORKSH DY
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Geisberger E., 2015, Living in a networked world: Integrated research agenda Cyber-Physical Systems (agendaCPS)
   Hangal S, 2005, DES AUT CON, P775, DOI 10.1109/DAC.2005.193920
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hangal S., P 24 INT C SOFTW ENG, P291
   Krka I., 2010, ACM IEEE 32 INT C SO, P179
   Krka I., P 22 ACM SIGSOFT INT, P178
   Lo D., P 7 JOINT M EUR SOFT, P345
   Lo D, 2012, AUTOMAT SOFTW ENG, V19, P423, DOI 10.1007/s10515-012-0103-x
   Lorenzoli D., P 30 INT C SOFTW ENG, P501
   Mark G., 2008, P 16 ACM SIGSOFT INT
   O. M. Group, 2014, OBJ CONSTR LANG OCL
   OMG, 2013, UML TEST PROF
   Raz O., P 24 INT C SOFTW ENG, P302
   Tonella P, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P75, DOI 10.1109/IWAST.2013.6595795
   Tony O., 2014, P 29 ACM IEEE INT C
   Walkinshaw N., 2015, EMPIR SOFTW ENG, V21, P1
   Witten I. H., 2005, DATA MINING PRACTICA
   Yang J., P 28 INT C SOFTW ENG, P282
NR 42
TC 12
Z9 14
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 140
EP 159
DI 10.1016/j.infsof.2017.03.003
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300010
OA hybrid
DA 2024-07-18
ER

PT J
AU Mäkinen, S
   Leppänen, M
   Kilamo, T
   Mattila, AL
   Laukkanen, E
   Pagels, M
   Männistö, T
AF Makinen, Simo
   Leppanen, Marko
   Kilamo, Terhi
   Mattila, Anna-Liisa
   Laukkanen, Eero
   Pagels, Max
   Mannisto, Tomi
TI Improving the delivery cycle: A multiple-case study of the toolchains in
   Finnish software intensive enterprises
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous deployment; Continuous delivery; Software development tools;
   Deployment pipeline; Agile software development
ID CONTINUOUS INTEGRATION
AB Context: Software companies seek to gain benefit from agile development approaches in order to meet evolving market needs without losing their innovative edge. Agile practices emphasize frequent releases with the help of an automated toolchain from code to delivery.
   Objective: We investigate, which tools are used in software delivery, what are the reasons omitting certain parts of the toolchain and what implications toolchains have on how rapidly software gets delivered to customers.
   Method: We present a multiple-case study of the toolchains currently in use in Finnish software-intensive organizations interested in improving their delivery frequency. We conducted qualitative semi-structured interviews in 18 case organizations from various software domains. The interviewees were key representatives of their organization, considering delivery activities.
   Results: Commodity tools, such as version control and continuous integration, were used in almost every organization. Modestly used tools, such as UI testing and performance testing, were more distinctly missing from some organizations. Uncommon tools, such as artifact repository and acceptance testing, were used only in a minority of the organizations. Tool usage is affected by the state of current work-flows, manual work and relevancy of tools. Organizations whose toolchains were more automated and contained fewer manual steps were able to deploy software more rapidly.
   Conclusions: There is variety in the need for tool support in different development steps as there are domain-specific differences in the goals of the case organizations. Still, a well-founded toolchain supports speedy delivery of new software. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Makinen, Simo; Pagels, Max; Mannisto, Tomi] Univ Helsinki, Dept Comp Sci, PO 68,Gustaf Hallstromin Katu 2b, FI-00014 Helsinki, Finland.
   [Leppanen, Marko; Kilamo, Terhi; Mattila, Anna-Liisa] Tampere Univ Technol, Dept Pervas Comp, Korkeakoulunkatu 1, FI-33720 Tampere, Finland.
   [Laukkanen, Eero] Aalto Univ, Sch Sci, Dept Comp Sci & Engn, POB 19210, FI-00076 Aalto, Finland.
C3 University of Helsinki; Tampere University; Aalto University
RP Mäkinen, S (corresponding author), Univ Helsinki, Dept Comp Sci, PO 68,Gustaf Hallstromin Katu 2b, FI-00014 Helsinki, Finland.
EM simo.v.makinen@helsinki.fi; marko.leppanen@tut.fi; terhi.kilamo@tut.fi;
   anna-liisa.mattila@tut.fi; eero.laukkanen@aalto.fi;
   max.pagels@alumni.helsinki.fi; tomi.mannisto@cs.helsinki.fi
RI Männistö, Tomi/I-3999-2013; Männistö, Tomi/ABC-7781-2021
OI Männistö, Tomi/0000-0001-7470-5183; Männistö, Tomi/0000-0001-7470-5183;
   Leppanen, Marko/0000-0002-4105-3235
FU TEKES, N4S Program of DIGILE (Finnish Strategic Center for Science,
   Technology and Innovation in the field of ICT and digital business) [47,
   25]
FX We would like to thank the organizations for describing their
   development processes and the participants to the interviews for their
   time and effort. This article was supported by TEKES [47] as part of the
   N4S Program [25] of DIGILE (Finnish Strategic Center for Science,
   Technology and Innovation in the field of ICT and digital business).
CR Anderson D., 2003, AGILE MANAGEMENT SOF
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], ANOTHER GIT BRANCHIN
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2009, VERSION CONTROL SYST
   [Anonymous], CASE CONTINUOUS DELI
   [Anonymous], J INF TECHNOL MANAGE
   [Anonymous], P 1 WORKSH AG REQ EN
   [Anonymous], BLUEGREENDEPLOYMENT
   [Anonymous], TOOL APPENDIX
   [Anonymous], 2009, CONTINUOUS DEPLOYMEN
   [Anonymous], REBASE WORKFLOW GIT
   [Anonymous], SUCCESSFUL GIT BRANC
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2011, MANIFESTO AGILE SOFT
   de Gea JMC, 2011, IEEE SOFTWARE, V28, P86
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Fischer J, 2012, ACM SIGPLAN NOTICES, V47, P263, DOI 10.1145/2345156.2254096
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fowler M., 2013, ContinuousDelivery
   Fowler M., 2005, Continuous integration
   Ghobadi S, 2015, INFORM MANAGE-AMSTER, V52, P82, DOI 10.1016/j.im.2014.10.008
   Guest G., 2012, Applied thematicanalysis
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Leppänen M, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P34, DOI 10.1109/RCoSE.2015.14
   Maalej W., 2009, P 24 ACM SIGPLAN C C, P981, DOI [10.1145/1639950.1640068, DOI 10.1145/1639950.1640068]
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Monden Y., 1995, Journal of the Operational Research Society, P669
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Prasad C, 2013, COMPUTER, V46, P63, DOI 10.1109/MC.2013.337
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Shore James., 2006, Continuous Integration on a Dollar a Day
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   Spinellis D, 2005, IEEE SOFTWARE, V22, P108, DOI 10.1109/MS.2005.140
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 44
TC 21
Z9 23
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 175
EP 194
DI 10.1016/j.infsof.2016.09.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800011
DA 2024-07-18
ER

PT J
AU Häser, F
   Felderer, M
   Breu, R
AF Haeser, Florian
   Felderer, Michael
   Breu, Ruth
TI Is business domain language support beneficial for creating test case
   specifications: A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain Specific Languages (DSL); Behavior driven development; Controlled
   experiment; Software testing; Student experiment
ID DRIVEN DEVELOPMENT
AB Context: Behavior Driven Development (BDD), widely used in modern software development, enables easy creation of acceptance test case specifications and serves as a communication basis between business and technical-oriented stakeholders. BDD is largely facilitated through simple domain specific languages (DSL) and usually restricted to technical test domain concepts. Integrating business domain concepts to implement a ubiquitous language for all members of the development team is an appealing test language improvement issue. But the integration of business domain concepts into BDD toolkits has so far not been investigated.
   Objective: The objective of the study presented in this paper is to examine whether supporting the ubiquitous language features inside a DSL, by extending a DSL with business domain concepts, is beneficial over using a DSL without those concepts. In the context of the study, benefit is measured in terms of perceived quality, creation time and length of the created test case specifications. In addition, we analyze if participants feel supported when using predefined business domain concepts.
   Method: We investigate the creation of test case specifications, similar to BDD, in a controlled student experiment performed with graduate students based on a novel platform for DSL experimentation. The experiment was carried out by two groups, each solving a similar comparable test case, one with the simple DSL, the other one with the DSL that includes business domain concepts. A crossover design was chosen for evaluating the perceived quality of the resulting specifications.
   Results: Our experiment indicates that a business domain aware language allows significant faster creation of documents without lowering the perceived quality. Subjects felt better supported by the DSL with business concepts.
   Conclusion: Based on our findings we propose that existing BDD toolkits could be further improved by integrating business domain concepts. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Haeser, Florian; Felderer, Michael; Breu, Ruth] Univ Innsbruck, Technikerstr 21a, A-6020 Innsbruck, Austria.
C3 University of Innsbruck
RP Häser, F (corresponding author), Univ Innsbruck, Technikerstr 21a, A-6020 Innsbruck, Austria.
EM florian.haeser@uibk.ac.at; michael.felderer@uibk.ac.at;
   ruth.breu@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020
FU research projects QE LaB - Living Models for Open Systems [FFG 822740];
   MOB-STECO [FWF P26194]; Austrian Science Fund (FWF) [P26194] Funding
   Source: Austrian Science Fund (FWF)
FX This research was partially funded by the research projects QE LaB -
   Living Models for Open Systems (FFG 822740) and MOB-STECO (FWF P26194).
   In addition, we thank all participants of the experiment for their time
   and effort.
CR [Anonymous], ASSESSING FREQUENCY
   [Anonymous], INTRO BDD
   [Anonymous], 2012, CUCUMBER BOOK BEHAV
   [Anonymous], FORMAL PRAC ASPECTS
   [Anonymous], EMP SOFTW ENG 2005 2
   [Anonymous], P 20 INT C EV ASS SO
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], GUIDE DDVANCED EMPIR
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   BRYANT B., 2010, FOSER 2010, P65
   Canovas Izquierdo Javier Luis, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P101, DOI 10.1007/978-3-642-40840-3_16
   Chelimsky D., 2010, RSPEC BOOK BEHAV DRI
   Cohen J., 1988, STAT POWER ANAL BEHA
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Felderer M., 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P108, DOI 10.1109/VALID.2010.12
   Felderer M, 2015, INFORM SOFTWARE TECH, V61, P1, DOI 10.1016/j.infsof.2014.12.005
   Felderer M, 2014, EUROMICRO CONF PROC, P377, DOI 10.1109/SEAA.2014.37
   Fucci D, 2014, EMPIR SOFTW ENG, V19, P277, DOI 10.1007/s10664-013-9259-7
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Häser F, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P156, DOI 10.1109/QUATIC.2014.29
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Kahraman G., 2013, Software & Systems Modeling, P1
   Kirk RE ., 1982, Experimental design
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kuzniarz L, 2004, PROG COMPREHEN, P14, DOI 10.1109/WPC.2004.1311043
   Lozano Luis M., 2008, Methodology, P73, DOI [10.1027/1614-2241.4.2.73, DOI 10.1027/1614-2241.4.2.73]
   Madeyski L., 2009, TEST DRIVEN DEV EMPI
   Mugridge R., 2005, FIT DEV SOFTWARE FRA
   R Core Team, 2018, R LANG ENV STAT COMP
   Rammstedt B, 2007, J RES PERS, V41, P203, DOI 10.1016/j.jrp.2006.02.001
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Soeken M, 2012, LECT NOTES COMPUT SC, V7304, P269, DOI 10.1007/978-3-642-30561-0_19
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Tairas R, 2015, SOFTW SYST MODEL, V14, P889, DOI 10.1007/s10270-013-0352-6
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
   Wohlin C., 2012, Experimentation in Software Engineering
NR 43
TC 17
Z9 18
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 52
EP 62
DI 10.1016/j.infsof.2016.07.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW0AE
UT WOS:000383302500004
DA 2024-07-18
ER

PT J
AU Sui, J
   Xu, C
   Cheung, SC
   Xi, W
   Jiang, YY
   Cao, C
   Ma, XX
   Lu, J
AF Sui, Jun
   Xu, Chang
   Cheung, S. C.
   Xi, Wang
   Jiang, Yanyan
   Cao, Chun
   Ma, Xiaoxing
   Lu, Jian
TI Hybrid CPU-GPU constraint checking: Towards efficient context
   consistency
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 21st Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 01-04, 2014
CL Jeju, SOUTH KOREA
DE Context inconsistency; Constraint checking; GPU
ID DEPENDABILITY IMPROVEMENT
AB Context: modern software increasingly relies on contexts about computing environments to provide adaptive and smart services. Such contexts, captured and derived from environments of uncontrollable noises, can be inaccurate, incomplete or even in conflict with each other. This is known as the context inconsistency problem, and should be addressed by checking contexts in time to prevent abnormal behavior to applications. One popular way is to check application contexts against consistency constraints before their uses, but this can bring heavy computation due to tremendous amount of contexts in changing environments. Existing efforts improve the checking performance by incremental or concurrent computation, but they rely on CPU computing only and can consume valuable CPU capabilities that should otherwise be used by applications themselves.
   Objective: in this article, we propose GAIN, a GPU-supported technique to checking consistency constraints systematically and efficiently.
   Method: GAIN can automatically recognize a constraint's parallel units and associate these units and their runtime instances with matched contexts under checking. GAIN coordinates CPU and GPU and utilizes their capabilities for task preparation and context checking, respectively.
   Result: we evaluate GAIN experimentally with millions of real-life context data. The evaluation results show that GAIN can work at least 2-7 x faster and requires much less CPU usage than CPU-based techniques. Besides, GAIN can also work stably for different and varying workloads.
   Conclusion: our experience with GAIN suggests its high efficiency in constraint checking for context consistency as well as its wide applicability to different application workloads. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Sui, Jun; Xu, Chang; Xi, Wang; Jiang, Yanyan; Cao, Chun; Ma, Xiaoxing; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Sui, Jun; Xu, Chang; Xi, Wang; Jiang, Yanyan; Cao, Chun; Ma, Xiaoxing; Lu, Jian] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Cheung, S. C.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong University of Science
   & Technology
RP Xu, C (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
EM smilent_sj@163.com; changxu@nju.edu.cn; scc@cse.ust.hk;
   swangex@gmail.com; jiangyy@outlook.com; caochun@nju.edu.cn;
   xxm@nju.edu.cn; lj@nju.edu.cn
RI Liu, Chenyu/KBQ-8899-2024; Jiang, Yanyan/ABE-6639-2021; Ma,
   Xiaoxing/K-4290-2012; xi, wang/HIZ-7736-2022; Ma, Xiaoxing/X-6505-2018;
   Cheung, Shing Chi/U-5882-2018
OI Ma, Xiaoxing/0000-0001-7970-1384; Cheung, Shing Chi/0000-0002-3508-7172
CR [Anonymous], 2011, GPU Computing Gems
   Bakkum P., 2010, Proceedings of the 3rd Workshop on General-Purpose Computation on Graphics Processing Units - GPGPU '10 (New York, New York, USA, 2010), P94, DOI DOI 10.1145/1735688.1735706
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Blelloch Guy, 1990, Technical Report
   Block B, 2010, COMPUT PHYS COMMUN, V181, P1549, DOI 10.1016/j.cpc.2010.05.005
   Campeotto F, 2014, FRONT ARTIF INTEL AP, V263, P189, DOI 10.3233/978-1-61499-419-0-189
   Campeotto Federico, 2014, Practical Aspects of Declarative Languages. 16th International Symposium, PADL 2014. Proceedings: LNCS 8324, P152, DOI 10.1007/978-3-319-04132-2_11
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Chen CH, 2011, INT CONF PERVAS COMP, P10, DOI 10.1109/PERCOM.2011.5767574
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Han TD, 2011, IEEE T PARALL DISTR, V22, P78, DOI 10.1109/TPDS.2010.62
   He BS, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P260, DOI 10.1145/1454115.1454152
   Lee D, 2012, COMPUT METH PROG BIO, V106, P175, DOI 10.1016/j.cmpb.2010.10.013
   Luo LJ, 2012, ASIA S PACIF DES AUT, P353, DOI 10.1109/ASPDAC.2012.6164973
   Merrill D, 2012, ACM SIGPLAN NOTICES, V47, P117, DOI 10.1145/2370036.2145832
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Nvidia C., 2012, PROGRAMMING GUIDE
   Raychoudhury V, 2013, PERVASIVE MOB COMPUT, V9, P177, DOI 10.1016/j.pmcj.2012.08.006
   Ryoo S, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P73, DOI 10.1145/1345206.1345220
   Stuart J. A., 2011, Proceedings of the 25th IEEE International Parallel & Distributed Processing Symposium (IPDPS 2011), P1068, DOI 10.1109/IPDPS.2011.102
   Xi W., 2015, INF SOFTW T IN PRESS
   Xu C, 2015, IEEE T SOFTWARE ENG, V41, P842, DOI 10.1109/TSE.2015.2418760
   Xu C, 2013, IEEE INT CONF AUTOM, P592, DOI 10.1109/ASE.2013.6693118
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
   Xu Chen, 2013, Science China, Information Sciences, V56, DOI 10.1007/s11432-012-4679-3
   Yang WH, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5300-3
   Zhong JL, 2014, IEEE T PARALL DISTR, V25, P1543, DOI 10.1109/TPDS.2013.111
NR 28
TC 4
Z9 6
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 230
EP 242
DI 10.1016/j.infsof.2015.10.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ7BX
UT WOS:000374368000017
DA 2024-07-18
ER

PT J
AU Gill, AQ
AF Gill, Asif Qumer
TI Agile enterprise architecture modelling: Evaluating the applicability
   and integration of six modelling standards
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE ArchiMate; Agile modelling; Enterprise modelling; Enterprise
   architecture; Modelling standards
AB Context: Agile enterprise architecture artefacts are initially architected at the high-level and the details of those artefacts iteratively evolve in small project increments. There is a need to model agile enterprise architecture artefacts both at the high and low detailed level for a particular context. ArchiMate is relatively a new high-level architecture modelling standard. There is a growing interest amongst organisations in applying ArchiMate for high-level agile enterprise architecture modelling. However, organisations are unsure how to effectively apply ArchiMate at high-level and integrate it with their existing low detailed level modelling standards in practice for supporting end-to-end agile enterprise architecture modelling.
   Objective: This paper evaluates the applicability and integration of high-level ArchiMate modelling standard with the existing low-level modelling standards such as BPMN (Business Process Model and Notation), UML (Unified Modelling Language), FAML (FAME [Framework for Agent-Oriented Method Engineering] Language), SoaML (Service Oriented Architecture Modelling Language), and BMM (Business Motivation Model).
   Method: A qualitative questionnaire-based evaluation criteria has been developed based on the well-known and comprehensive The Open Group Architecture Framework (TOGAF). The evaluation criteria has been applied to evaluate the applicability and integration of the selected six modelling standards from the business, application, infrastructure and extension perspectives.
   Results: Each modelling standard is different in scope. A single modelling standard usually does not provide the kind of support required by the agile enterprise architecture modelling. Based on the review results, a hybrid enterprise architecture modelling approach is proposed. This paper demonstrates the application of the proposed hybrid approach with the help of an agile enterprise architecture modelling case study.
   Conclusion: It is concluded that the ArchiMate does not replace the existing low-level modelling standards, rather it can be used in conjunction with low-level modelling standards. This calls for the adoption of hybrid and integrated approach for agile enterprise architecture modelling. (C) 2015 Elsevier B.V. All rights reserved.
C1 Univ Technol Sydney, Sch Software, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Gill, AQ (corresponding author), Univ Technol Sydney, Sch Software, Sydney, NSW 2007, Australia.
EM asif.gill@uts.edu.au
RI Gill, Asif Q/K-4375-2017
OI Gill, Asif Q/0000-0001-6239-6280
CR Akbari O.Z., 2010, Comput. Eng. Res, V1, P14
   [Anonymous], 2007, 42010 ISOIEC
   [Anonymous], 2001, PRACT GUID FED ENT A
   [Anonymous], 2013, PSYCHOL SEX, DOI DOI 10.1080/19419899.2013.764921
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Bokang M., 2012, THESIS RHODES U
   Doherty G., 2009, ARCHITECTURE GOVERNA
   Edwards C., 2006, AGILE ENTERPRISE A 1
   Gill AQ, 2014, INT J INTELL INF TEC, V10, P1, DOI 10.4018/ijiit.2014010101
   Gill AQ, 2013, ADV COMPUT ELECTR EN, P64, DOI 10.4018/978-1-4666-2503-7.ch004
   Kutnick D., 2006, ALIGNING MEASURING A
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Madni AM, 2008, J INTEGR DES PROCESS, V12, P49
   Malik N., 2009, WILL THERE BE BATTLE
   OMG, 2014, BUS MOT MOD BMM
   OMG, 2013, DOC ASS BUS PROC MOD
   OMG, 2011, DOC ASS UML
   OMG, 2012, SOAML
   Persson A, 2014, LECT NOTES BUS INF P, V197, P179
   Purchase V., 2012, J ENTERPRISE TRANSFO, V1, P14
   Qureshi Muhammad Atif, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P12, DOI 10.1007/978-3-642-29645-1_3
   Rosen M., 2011, CUTTER CONSORTIUM, V14
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Sommerville I., 2010, SOFTWARE ENG
   Svanidzaite S., 2012, DB LOC P, P202
   The Open Group, 2013, ARCHIMATE
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 27
TC 27
Z9 35
U1 2
U2 101
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 196
EP 206
DI 10.1016/j.infsof.2015.07.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600011
DA 2024-07-18
ER

PT J
AU Galster, M
   Avgeriou, P
AF Galster, Matthias
   Avgeriou, Paris
TI An industrial case study on variability handling in large enterprise
   software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variability; Enterprise software systems; Case study; Grounded theory
ID GUIDELINES
AB Context: Enterprise software systems (e.g., enterprise resource planning software) are often deployed in different contexts (e.g., different organizations or different business units or branches of one organization). However, even though organizations, business units or branches have the same or similar business goals, they may differ in how they achieve these goals. Thus, many enterprise software systems are subject to variability and adapted depending on the context in which they are used.
   Objective: Our goal is to provide a snapshot of variability in large scale enterprise software systems. We aim at understanding the types of variability that occur in large industrial enterprise software systems. Furthermore, we aim at identifying how variability is handled in such systems.
   Method: We performed an exploratory case study in two large software organizations, involving two large enterprise software systems. Data were collected through interviews and document analysis. Data were analyzed following a grounded theory approach.
   Results: We identified seven types of variability (e.g., functionality, infrastructure) and eight mechanisms to handle variability (e.g., add-ons, code switches).
   Conclusions: We provide generic types for classifying variability in enterprise software systems, and reusable mechanisms for handling such variability. Some variability types and handling mechanisms for enterprise software systems found in the real world extend existing concepts and theories. Others confirm findings from previous research literature on variability in software in general and are therefore not specific to enterprise software systems. Our findings also offer a theoretical foundation for describing variability handling in practice. Future work needs to provide more evaluations of the theoretical foundations, and refine variability handling mechanisms into more detailed practices. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Galster, Matthias] Univ Canterbury, Christchurch 1, New Zealand.
   [Avgeriou, Paris] Univ Groningen, Groningen, Netherlands.
C3 University of Canterbury; University of Groningen
RP Galster, M (corresponding author), Univ Canterbury, Christchurch 1, New Zealand.
EM mgalster@ieee.org; paris@cs.rug.nl
FU NWO SaS-LeG [638.000.000.07N07]
FX The authors thank all individuals and organizations that participated in
   the study. This research is partially sponsored by NWO SaS-LeG, Contract
   No. 638.000.000.07N07.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 2005, Dictionary of statistics and methodology
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   Bachmann Felix., 2005, Variability in Software Product Lines
   Balasubramaniam S, 2009, PESOS: 2009 ICSE WORKSHOP ON PRINCIPLES OF ENGINEERING SERVICE ORIENTED SYSTEMS, P103, DOI 10.1109/PESOS.2009.5068829
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Chang SH, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P261, DOI 10.1109/SPLINE.2007.10
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen L., 2010, P 14 INT SOFTW PROD, P1
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Galster M., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P267, DOI 10.1109/WICSA-ECSA.212.43
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Galster M, 2013, INFORM SOFTWARE TECH, V55, P428, DOI 10.1016/j.infsof.2012.09.011
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Gerring J, 2007, CASE STUDY RESEARCH: PRINCIPLES AND PRACTICES, P1, DOI 10.2277/0521676568
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Gray DE., 2009, DOING RES REAL WORLD, V2nd
   Hilliard R., 2010, P 4 EUR C SOFTW ARCH, P312
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   *IEEE COMP SOC SOF, 2000, IEEE REC PRACT ARCH
   Ihme T, 2014, EMPIR SOFTW ENG, V19, P1144, DOI 10.1007/s10664-013-9253-0
   Ishida Y, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P44, DOI 10.1109/SPLINE.2007.18
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jaring M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P15
   Jaring M., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P356, DOI 10.1109/CMPSAC.2004.1342858
   Johansson E., 2001, 34 ANN HAW INT C SYS, P1
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kozuka N., 2011, 1 WORKSH SERV CLOUDS, P14
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Myllarniemi V., 2012, Proceedings of the 16th International Software Product Line Conference - Volume, V1, P41, DOI DOI 10.1145/2362536.2362546
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Robson C., 2002, Real World Research, V2nd
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segura S., 2007, 1 WORKSH SERV OR ARC, P1
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Thiel S, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/MS.2002.1020289
   Thörn C, 2010, INFORM SOFTWARE TECH, V52, P411, DOI 10.1016/j.infsof.2009.10.009
   Torchiano M., 2013, 1 INT WORKSH COND EM, P1
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Gurp J., 2003, SIGGRAPH ED PROGRAM, P1
   van Heesch U., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P101, DOI 10.1109/WICSA-ECSA.212.18
   van Heesch U, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P260, DOI 10.1109/WICSA.2011.42
   van Heesch U, 2010, LECT NOTES COMPUT SC, V6285, P24, DOI 10.1007/978-3-642-15114-9_5
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 60
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 16
EP 31
DI 10.1016/j.infsof.2014.12.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700002
DA 2024-07-18
ER

PT J
AU Prokhorova, Y
   Laibinis, L
   Troubitsyna, E
AF Prokhorova, Yuliya
   Laibinis, Linas
   Troubitsyna, Elena
TI Facilitating construction of safety cases from formal models in Event-B
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety-critical software systems; Safety requirements; Formal
   development and verification; Event-B; Safety cases; Argument patterns
ID VERIFICATION
AB Context: Certification of safety-critical software systems requires submission of safety assurance documents, e.g., in the form of safety cases. A safety case is a justification argument used to show that a system is safe for a particular application in a particular environment. Different argumentation strategies (informal and formal) are applied to determine the evidence for a safety case. For critical software systems, application of formal methods is often highly recommended for their safety assurance.
   Objective: The objective of this paper is to propose a methodology that combines two activities: formalisation of system safety requirements of critical software systems for their further verification as well as derivation of structured safety cases from the associated formal specifications.
   Method: We propose a classification of system safety requirements in order to facilitate the mapping of informally defined requirements into a formal model. Moreover, we propose a set of argument patterns that aim at enabling the construction of (a part of) a safety case from a formal model in Event-B.
   Results: The results reveal that the proposed classification-based mapping of safety requirements into formal models facilitates requirements traceability. Moreover, the provided detailed guidelines on construction of safety cases aim to simplify the task of the argument pattern instantiation for different classes of system safety requirements. The proposed methodology is illustrated by numerous case studies.
   Conclusion: Firstly, the proposed methodology allows us to map the given system safety requirements into elements of the formal model to be constructed, which is then used for verification of these requirements. Secondly, it guides the construction of a safety case, aiming to demonstrate that the safety requirements are indeed met. Consequently, the argumentation used in such a constructed safety case allows us to support it with formal proofs and model checking results used as the safety evidence. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Prokhorova, Yuliya] TUCS Turku Ctr Comp Sci, Turku, Finland.
   [Prokhorova, Yuliya; Laibinis, Linas; Troubitsyna, Elena] Abo Akad Univ, FIN-20520 Turku, Finland.
C3 Abo Akademi University
RP Prokhorova, Y (corresponding author), Abo Akad Univ, Joukahaisenkatu 3-5 A, FIN-20520 Turku, Finland.
EM Yuliya.Prokhorova@abo.fi; Linas.Laibinis@abo.fi;
   Elena.Troubitsyna@abo.fi
RI Troubitsyna, Elena/AAY-2172-2021; Laibinis, Linas/H-1695-2016
OI Laibinis, Linas/0000-0002-1200-0847
FU Foundation of Nokia Corporation
FX Yuliya Prokhorova's work is partially supported by the Foundation of
   Nokia Corporation. Additionally, the authors would like to thank Prof.
   Michael Butler for the valuable feedback on the requirements
   classification as well as the anonymous reviewers for many valuable
   comments and suggestions.
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J.-R., 2010, CONTROLLING CARS BRI
   Abrial J.-R., 1996, FORMAL METHODS IND A, P500
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   Advance Project, 2011, ADV ADV DES VER ENV
   [Anonymous], 2014, LTL MODEL CHECKING P
   [Anonymous], 2014, PROB AN MOD CHECK
   [Anonymous], 2014, RODIN PLUG INS
   [Anonymous], 2007, 0056 UK MIN DEF
   [Anonymous], 2010, 615082010 IEC
   [Anonymous], 2013, EB2ALL EV B C C JAV
   Ayoub Anaheed, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P141, DOI 10.1007/978-3-642-28891-3_14
   Back R.-J., 1998, Refinement Calculus
   Back R. J. R., 1994, FME '94: Industrial Benefit of Formal Methods. Second International Symposium of Formal Methods Europe. Proceedings, P1
   BACK RJR, 1989, LECT NOTES COMPUT SC, V375, P115
   Basir N., 2009, 4 IET INT C SYST SAF, P1
   Basir N., 2010, THESIS U SOUTHAMPTON
   Basir N, 2008, LECT NOTES COMPUT SC, V5219, P249, DOI 10.1007/978-3-540-87698-4_22
   Basir N, 2010, LECT NOTES COMPUT SC, V6351, P68, DOI 10.1007/978-3-642-15651-9_6
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Berthing Jesper, 2012, Integrated Formal Methods. Proceedings 9th International Conference, IFM 2012, P69, DOI 10.1007/978-3-642-30729-4_6
   Bishop P., 2000, SAFETY RELIABILITY
   Bitsch F., 2000, P 13 INT C SOFTW SYS
   Bitsch F., 2013, P 20 INT C COMP SAF, P176
   Bon P, 2013, J UNIVERS COMPUT SCI, V19, P2
   Bowen JP, 1997, P INT COMP SOFTW APP, P332, DOI 10.1109/CMPSAC.1997.624973
   Cansell D, 2007, LECT NOTES COMPUT SC, V4355, P140
   Checkland P, 1998, SYST PRACT ACT RES, V11, P9, DOI 10.1023/A:1022908820784
   Denney Ewen, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P21, DOI 10.1007/978-3-642-40793-2_3
   Denney E., 2011, NASACR2011215983
   Denney E, 2014, LECT NOTES COMPUT SC, V8666, P294, DOI 10.1007/978-3-319-10506-2_20
   Denney E, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P375, DOI 10.1109/ISSREW.2013.6688924
   Denney E, 2012, IEEE INT C ENG COMP, P199, DOI 10.1109/ICECCS.2012.20
   Deploy Project, 2008, DEPLOY IND DEPL SYST
   European Committee for Electrotechnical Standardization, 2011, 50128 CENELEC EN
   Event-B, 2014, EV B ROD PLATF
   Goal Structuring Notation Working Group, 2011, GOAL STRUCT NOT STAN
   Groslambert J, 2007, LECT NOTES COMPUT SC, V4355, P109
   Habli I, 2009, ELECTRON NOTES THEOR, V238, P27, DOI 10.1016/j.entcs.2009.09.004
   Hallerstede S, 2007, LECT NOTES COMPUT SC, V4591, P293
   Hawkins R, 2013, SAFETY SCI, V59, P55, DOI 10.1016/j.ssci.2013.04.007
   Herencia-Zapana H, 2011, LECT NOTES COMPUT SC, V6617, P162, DOI 10.1007/978-3-642-20398-5_13
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Iliasov A., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P51, DOI 10.1109/FormSERA.2012.6229789
   Iliasov Alexei, 2011, Software Engineering for Resilient Systems. Proceedings Third International Workshop (SERENE 2011), P9, DOI 10.1007/978-3-642-24124-6_2
   Iliasov A., 2011, 1006 TUCS
   International Organization for Standardization, 2011, 26262 ISO
   Jastram M., 2011, ELECT COMMUNICATIONS, V46
   Jastram M, 2010, LECT NOTES COMPUT SC, V6217, P97, DOI 10.1007/978-3-642-15057-9_7
   Jones, 2014, P FUT SOFTW ENG, P182, DOI DOI 10.1145/2593882.2593895
   Kelly T, 1998, THESIS U YORK
   Kelly T. P., 1997, SAFECOMP 97. 16th International Conference on Computer Safety, Reliability and Security, P55
   Lee E, 2010, LECT NOTES COMPUT SC, V6416, P343
   Lopatkin I., 2011, 1003 TUCS
   Mery D., 1999, IFM'99. Proceedings of the 1st International Conference on Integrated Formal Methods, P395
   Mery D., 2011, INRIA00584177
   Méry D, 2013, LECT NOTES COMPUT SC, V7789, P151, DOI 10.1007/978-3-642-39088-3_10
   Metayer C., 2005, EVENT B LANGUAGE RIG
   Nair S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P94, DOI 10.1109/ICST.2013.30
   Prokhorova Y., 2012, LNCS, V7527, P47, DOI DOI 10.1007/978-3-642-33176-3
   Prokhorova Y., 2013, 1070 TUCS
   Prokhorova Y., 2014, 1110 TUCS
   Prokhorova Y., 2012, INT J CRITICAL COMPU, V3, P305
   Prokhorova Y., 2013, 1086 TUCS
   Rodin Project, 2004, RODIN RIG OP DEV ENV
   Rushby J, 2010, MAKING SYSTEMS SAFER, P3, DOI 10.1007/978-1-84996-086-1_1
   Sarshogh M., 2011, ELECT COMMUNICATIONS, V46
   Tarasyuk A., 2014, FORM ASP COMPUT, P1
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Yeganefard S., 2011, ELECT COMMUNICATIONS, V46
NR 72
TC 20
Z9 20
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 51
EP 76
DI 10.1016/j.infsof.2015.01.001
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700004
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Wulf-Hadash, O
AF Reinhartz-Berger, Iris
   Wulf-Hadash, Ora
TI Improving the management of product lines by performing domain knowledge
   extraction and cross product line analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line engineering; Variability management; Domain
   analysis; Feature modeling
AB Context: Increase in market competition is one of the main reasons for developing and maintaining families of systems, termed Product Lines (PLs). Managing those PLs is challenging, let alone the management of several related PLs. Currently, those PLs are managed separately or their relations are analyzed assuming explicit specification of dependencies or use of an underlying terminology. Such assumptions may not hold when developing the PLs in different departments or companies applying various engineering processes.
   Objective: In this work we call for utilizing the knowledge gained from developing and maintaining different PLs in the same domain in order to recommend on improvements to the management of PLs.
   Method: The suggested approach conducts domain knowledge extraction and cross PL analysis on feature diagrams - the main aid for modeling PL variability. The domain knowledge is extracted by applying similarity metrics, clustering, and mining techniques. Based on the created,domain models, the approach performs cross PL analysis that examines relations in the domain models and generates improvement recommendations to existing PLs and overall management recommendations (e.g., merging or splitting PLs).
   Results: The approach outcomes were evaluated by humans in a domain of mobile phones. The evaluation results may provide evidence that the outcomes of the approach in general and its recommendations in particular meet human perception of the given domain.
   Conclusion: We conclude that through domain knowledge extraction and cross PL analysis the suggested approach may generate recommendations useful to the management of individual PLs, as well as to the overall management of different PLs in the same domain. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Reinhartz-Berger, Iris; Wulf-Hadash, Ora] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
C3 University of Haifa
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM iris@is.haifa.ac.il; orawulf@gmail.com
CR Acher Mathieu, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P62
   Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   ALTMAN DG, 1994, BRIT MED J, V308, P1552, DOI 10.1136/bmj.308.6943.1552
   [Anonymous], 42 HAW INT C SYST SC
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bosch J, 2010, IEEE SOFTWARE, V27, P29, DOI 10.1109/MS.2010.32
   Boskovic Marko., 2011, MODELS SOFTWARE ENG, V6627, P110
   Choi N, 2006, SIGMOD REC, V35, P34, DOI 10.1145/1168092.1168097
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Dao T., 2005, Measuring similarity between sentences
   Dhungana D., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P120, DOI 10.1109/SPLC.2011.22
   EDMONDS J, 1967, J RES NBS B MATH SCI, VB 71, P233, DOI 10.6028/jres.071B.032
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Holl G., 2013, P 28 ACM S APPL COMP, P1742
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hwan C, 2005, LECT NOTES COMPUT SC, V3748, P331
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Krueger C.W., 2006, Software Mass Customization
   KURITA T, 1991, PATTERN RECOGN, V24, P205, DOI 10.1016/0031-3203(91)90062-A
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pedersen Ted., 2004, DEMONSTRATION PAPERS, P38
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   RAND WM, 1971, J AM STAT ASSOC, V66, P846, DOI 10.2307/2284239
   Reinhartz-Berger I., 2013, LNBIP, V147, P354
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Shvaiko P, 2013, IEEE T KNOWL DATA EN, V25, P158, DOI 10.1109/TKDE.2011.253
   Steinley D, 2004, PSYCHOL METHODS, V9, P386, DOI 10.1037/1082-989X.9.3.386
   Talukdar ParthaPratim., 2010, P 2010 ACM SIGMOD IN, P387, DOI [DOI 10.1145/1807167.1807211, 10.1145/1807167.1807211]
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Wache H., 2001, P IJCAI 01 WORKSH ON, P108
   Wulf-Hadash O., 2013, P 7 VAMOS WORKSH, P123
NR 34
TC 2
Z9 2
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 191
EP 204
DI 10.1016/j.infsof.2014.11.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200011
DA 2024-07-18
ER

PT J
AU Bano, M
   Zowghi, D
AF Bano, Muneera
   Zowghi, Didar
TI A systematic review on the relationship between user involvement and
   system success
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE User involvement; Software development; Systematic Literature Review
ID MIS SUCCESS; PARTICIPATION; DESIGN
AB Context: For more than four decades it has been intuitively accepted that user involvement (UI) during system development lifecycle leads to system success. However when the researchers have evaluated the user involvement and system success (UI-SS) relationship empirically, the results were not always positive.
   Objective: Our objective was to explore the UI-SS relationship by synthesizing the results of all the studies that have empirically investigated this complex phenomenon.
   Method: We performed a Systematic Literature Review (SLR) following the steps provided in the guidelines of Evidence Based Software Engineering. From the resulting studies we extracted data to answer our 9 research questions related to the UI-SS relationship, identification of users, perspectives of UI, benefits, problems and challenges of UI, degree and level of UI, relevance of stages of software development lifecycle (SDLC) and the research method employed on the UI-SS relationship.
   Results: Our systematic review resulted in selecting 87 empirical studies published during the period 1980-2012. Among 87 studies reviewed, 52 reported that UI positively contributes to system success, 12 suggested a negative contribution and 23 were uncertain. The UI-SS relationship is neither direct nor binary, and there are various confounding factors that play their role. The identification of users, their degree/level of involvement, stage of SDLC for UI, and choice of research method have been claimed to have impact on the UI-SS relationship. However, there is not sufficient empirical evidence available to support these claims.
   Conclusion: Our results have revealed that UI does contribute positively to system success. But it is a double edged sword and if not managed carefully it may cause more problems than benefits. Based on the analysis of 87 studies, we were able to identify factors for effective management of UI alluding to the causes for inconsistency in the results of published literature. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Bano, Muneera; Zowghi, Didar] Univ Technol Sydney, Fac Engn & Informat Technol, Res Ctr Human Centered Technol Design, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Bano, M (corresponding author), Univ Technol Sydney, Res Ctr Human Centered Technol Design, Fac Engn & Informat Technol, Sydney, NSW 2007, Australia.
EM Muneera.Bano@student.uts.edu.au; Didar.Zowghi@uts.edu.au
RI Bano, Muneera/AAP-7064-2021; Zowghi, Didar/AAF-2345-2019; Bano,
   Muneera/O-8419-2017
OI Bano, Muneera/0000-0002-1447-9521; Zowghi, Didar/0000-0002-6051-0155;
   Bano, Muneera/0000-0002-1447-9521
CR Abelein U., 2013, EMPIR SOFTW ENG, P1
   Alexander IF, 2005, INT J TECHNOL HUM IN, V1, P23, DOI 10.4018/jthi.2005010102
   [Anonymous], DESIGN IMPLEMENTATIO
   Aoyama M, 2010, ASIA PAC SOFWR ENG, P50, DOI 10.1109/APSEC.2010.16
   Bachore Z., 2009, AMCIS 2009 Proceedings, P659
   Bano M., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, P125, DOI [10.1145/2460999.2461017, DOI 10.1145/2460999.2461017]
   Bano M, 2014, IET SOFTW, V8, P154, DOI 10.1049/iet-sen.2013.0131
   Bano M, 2013, IEEE INT WORKS EMPIR, P24, DOI 10.1109/EmpiRE.2013.6615212
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   BARKI H, 1994, MIS QUART, V18, P59, DOI 10.2307/249610
   CARMEL E, 1993, COMMUN ACM, V36, P40, DOI 10.1145/153571.163265
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   CAVAYE ALM, 1995, INFORM MANAGE, V28, P311, DOI 10.1016/0378-7206(94)00053-L
   Clavadetscher C, 1998, IEEE SOFTWARE, V15, P30, DOI 10.1109/52.663781
   Clavadetscher C., 1998, Software, IEEE, V15, P32
   CLEMENT A, 1994, COMMUN ACM, V37, P52, DOI 10.1145/175222.175226
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Damodaran L, 1996, BEHAV INFORM TECHNOL, V15, P363, DOI 10.1080/014492996120049
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Eason K., 1989, INFORM TECHNOLOGY OR
   EDSTROM A, 1977, HUM RELAT, V30, P589, DOI 10.1177/001872677703000702
   El Emam K., 1996, Requirements Engineering, V1, P4, DOI 10.1007/BF01235763
   Garrity E. J., 1994, Information Resources Management Journal, V7, P34
   He J, 2008, J MANAGE INFORM SYST, V25, P301, DOI 10.2753/MIS0742-1222250111
   Hwang MI, 1999, INFORM MANAGE-AMSTER, V35, P229, DOI 10.1016/S0378-7206(98)00092-5
   Iivari J, 2010, INFORM SYST J, V20, P109, DOI 10.1111/j.1365-2575.2009.00336.x
   Iivari N., 2004, 3rd Nordic Conference on Human-Computer Interaction, P287
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   Jones S., 2011, Proceedings of the 8th ACM Conference on Creativity and Cognition, P349
   Keele S., EBSE2007012007
   KIM EH, 1986, INFORM MANAGE, V11, P87, DOI 10.1016/0378-7206(86)90038-8
   Krippendorff K., 2012, Content analysis
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   Macaulay L., 1994, Requirements engineering, P67
   Markus M. L., 2004, J ASS INFORM SYST, V5, P1
   MCKEEN JD, 1994, MIS QUART, V18, P427, DOI 10.2307/249523
   MELONE NP, 1990, MANAGE SCI, V36, P76, DOI 10.1287/mnsc.36.1.76
   Muller M.J., 1997, Handbook of human-computer interaction
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   PALANISAMY R, 2001, J SERV RES, V1, P125
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Qureshi N., 2011, ICSEA 2011, The Sixth International Conference on Software Engineering Advances, P534
   Robertson J., 2000, Requirements Engineering, V5, P134, DOI 10.1007/PL00010346
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P37, DOI 10.1109/RE.2010.15
   Sharp H., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P387, DOI 10.1109/DEXA.1999.795198
   Wagner EL, 2007, COMMUN ACM, V50, P51, DOI 10.1145/1323688.1323694
   Wu JTB, 2006, J COMPUT INFORM SYST, V46, P127, DOI 10.1080/08874417.2006.11645930
   ZMUD RW, 1979, MANAGE SCI, V25, P966, DOI 10.1287/mnsc.25.10.966
NR 49
TC 155
Z9 164
U1 3
U2 57
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 148
EP 169
DI 10.1016/j.infsof.2014.06.011
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AX6HE
UT WOS:000347022800009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gandomani, TJ
   Zulzalil, H
   Ghani, AAA
   Sultan, ABM
   Parizi, RM
AF Gandomani, Taghi Javdani
   Zulzalil, Hazura
   Ghani, Abdul Azim Abdul
   Sultan, Abu Bakar Md.
   Parizi, Reza Meimandi
TI The impact of inadequate and dysfunctional training on Agile
   transformation process: A Grounded Theory study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Agile transformation process; Agile
   training; Agile transition; Grounded Theory
ID SOFTWARE-DEVELOPMENT; CHALLENGES; LEADERSHIP; PEOPLE
AB Context: Training is an essential facilitator in moving from traditional to Agile software development.
   Objective: This paper addresses the importance of adequate and functional training in Agile transformation process, the causes of inadequate and dysfunctional training, and the heuristic strategies that can be used in software companies for dealing with this phenomenon.
   Method: A Grounded Theory study was conducted with participation of 35 Agile experts from 13 different countries.
   Results: This research discovered that inadequate and dysfunctional training was one of the critical issues that affected Agile transformation process. This study shows that comprehensive and functional training is not often provided to support Agile transformation. This paper shows the primary causes of inadequate and dysfunctional training, its adverse consequences on the transformation process, and the heuristic and ad-hoc treatments as the strategies used by Agile teams to cope with this challenge.
   Conclusion: Comprehensive training is important in Agile transformation process. Inadequate and dysfunctional training causes several challenges and problems for software companies and development teams when moving to Agile. Several ad-hoc strategies identified by this study can be employed to help software teams and companies facing similar problems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gandomani, Taghi Javdani; Zulzalil, Hazura; Ghani, Abdul Azim Abdul; Sultan, Abu Bakar Md.] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Serdang 43400, Selangor, Malaysia.
   [Parizi, Reza Meimandi] Taylors Univ, Sch Comp, Subang Jaya 47500, Selangor, Malaysia.
   [Parizi, Reza Meimandi] Taylors Univ, IT, Subang Jaya 47500, Selangor, Malaysia.
C3 Universiti Putra Malaysia; Taylor's University; Taylor's University
RP Gandomani, TJ (corresponding author), Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Serdang 43400, Selangor, Malaysia.
EM taghi@upm.edu.my; hazura@upm.edu.my; azim@upm.edu.my; abakar@upm.edu.my;
   rezameimandi.parizi@taylors.edu.my
RI Zulzalil, Hazura/D-2030-2017; Parizi, Reza/AAF-3813-2019; Javdani
   Gandomani, Taghi/E-1377-2016
OI Zulzalil, Hazura/0000-0002-1596-4828; Javdani Gandomani,
   Taghi/0000-0002-8333-7957; Md Sultan, Abu Bakar/0000-0002-8962-0112
FU UPM International Graduate Research Fellowship (IGRF), Malaysia
FX The authors wish to express their special thanks to all the
   participants. They also thank Evan Laybourn who assisted in preparing
   this paper and reviewers for their insightful comments. This study was
   partially supported by UPM International Graduate Research Fellowship
   (IGRF), Malaysia.
CR Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI DOI 10.1145/1463788.1463806
   Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   [Anonymous], PATTERNS AGILE PRACT
   [Anonymous], 2011, 2011 FRONT ED C FIE, DOI DOI 10.1109/FTE.2011.6142849
   [Anonymous], 2004, XP Ser
   [Anonymous], P AG 2009 C CHIC IL
   [Anonymous], ROOT CAUSE ANAL IMPR
   [Anonymous], NVIVO QUAL DAT AN SO
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 2010, INF PROCESS MANAG
   [Anonymous], 2001, AGILE MANIFESTO
   [Anonymous], EVALUATING GT STUDY
   [Anonymous], AGILE SOFTWARE DEV E
   [Anonymous], 2012, QUAL INQ
   [Anonymous], 8 ANN STAT AG
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], THESIS U W AUSTR
   [Anonymous], 2008, ELECT J BUSINESS RES
   [Anonymous], 2012, LESSONS AGILE MANAGE
   [Anonymous], P 1 ANN FRONT ED C C
   [Anonymous], AGILE SOFTWARE DEV M
   Baskerville R, 2011, INFORM SOFTWARE TECH, V53, P543, DOI 10.1016/j.infsof.2010.10.010
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Bergin J, 2006, AGILE 2006, PROCEEDINGS, P384, DOI 10.1109/AGILE.2006.28
   Birks M., 2011, Grounded Theory: A Practical Guide
   Bringer J.., 2004, Qualitative Research, V4, P247, DOI [DOI 10.1177/1468794104044434, 10.1177/1468794104044434]
   Bringer JD, 2006, FIELD METHOD, V18, P245, DOI 10.1177/1525822X06287602
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Creswell J. W., 2013, RES DESIGN QUALITATI
   di Gregorio S., 2003, Qualitative Research Journal, V2003, P79
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dorairaj S, 2012, LECT NOTES BUS INF P, V111, P47
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   El-Khalili NH, 2013, INT J INF COMMUN TEC, V9, P1, DOI 10.4018/jicte.2013070101
   Gandomani Taghi Javdanm, 2013, Journal of Computer Science, V9, P620, DOI 10.3844/jcssp.2013.620.625
   Ganesh N., 2012, Journal of Computer Science, V8, P389, DOI 10.3844/jcssp.2012.389.392
   Ghanam Y, 2012, INFORM SOFTWARE TECH, V54, P968, DOI 10.1016/j.infsof.2012.03.005
   Glaser B. G., 1978, [No title captured]
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Hajjdiab H., 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P31, DOI 10.1109/ICSESS.2011.5982247
   Hajjdiab H., 2011, International Journal of Managing Value and Supply Chains, V2, P1
   Hammersley Martyn, 2007, Ethnography: Principles in practice, DOI DOI 10.4324/9780203944769
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hoda R., 2010, P 15 EUR C PATT LANG, P1, DOI DOI 10.1145/2328909.2328926
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hutchison AJ, 2010, INT J SOC RES METHOD, V13, P283, DOI 10.1080/13645570902996301
   James N., 2006, QUAL RES, V6, P403, DOI DOI 10.1177/1468794106065010
   Kan MM, 2004, LEADERSHIP QUART, V15, P467, DOI 10.1016/j.leaqua.2004.05.003
   Kelle U., 1995, COMPUTER AIDED QUALI
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY, DOI DOI 10.1002/EV.1427
   Livermore Jeffrey A., 2008, Journal of Software, V3, P31, DOI 10.4304/jsw.3.4.31-36
   Martin A, 2005, LECT NOTES COMPUT SC, V3556, P263
   Melnik G, 2003, LECT NOTES COMPUT SC, V2753, P172
   Moghaddam A, 2006, ISS EDUC RES, V16, P52
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   O'Connor C. P., 2011, Proceedings of the 2011 Agile Conference, P302, DOI 10.1109/AGILE.2011.25
   Parry KW, 1998, LEADERSHIP QUART, V9, P85, DOI 10.1016/S1048-9843(98)90043-1
   Pikkarainen M, 2012, EMPIR SOFTW ENG, V17, P675, DOI 10.1007/s10664-011-9185-5
   Pikkarainen M, 2009, LECT NOTES BUS INF P, V32, P401
   Poppendieck M., 2009, LEADING LEAN SOFTWAR
   Rico DF, 2009, AGILE 2009 CONFERENCE, P174, DOI 10.1109/AGILE.2009.13
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   Singh NP, 2011, COMM COM INF SC, V169, P640
   Sochová Z, 2010, FRONT ARTIF INTEL AP, V217, P346, DOI 10.3233/978-1-60750-629-4-346
   Srinivasan J., 2010, P 3 INDIA SOFTWARE E, P125
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Sureshchandra K, 2008, AGILE 2008, PROCEEDINGS, P97, DOI 10.1109/Agile.2008.49
   Thomas G, 2006, BRIT EDUC RES J, V32, P767, DOI 10.1080/01411920600989412
   Tolfo C, 2011, J SOFTW MAINT EVOL-R, V23, P423, DOI 10.1002/smr.483
   Vijayasarathy L, 2012, INFORM SOFTWARE TECH, V54, P137, DOI 10.1016/j.infsof.2011.08.003
   Wang XF, 2012, INFORM SYST J, V22, P435, DOI 10.1111/j.1365-2575.2011.00393.x
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 87
TC 22
Z9 31
U1 1
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 295
EP 309
DI 10.1016/j.infsof.2014.05.011
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500017
OA Bronze
DA 2024-07-18
ER

PT J
AU Barzilay, O
   Urquhart, C
AF Barzilay, Ohad
   Urquhart, Cathy
TI Understanding reuse of software examples: A case study of prejudice in a
   community of practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE LinkedIn; Qualitative research; Grounded theory; Virtual focus group;
   Human aspects; Open source development
ID KNOWLEDGE MANAGEMENT; GROUP VARIABILITY; EGO-DEPLETION; IN-GROUP; SELF;
   INGROUP; SYSTEMS; DEFINITION; SUCCESS; MODELS
AB Context: The context of this research is software developers' perceptions about the use of code examples in professional software development.
   Objective: The primary objective of this paper is to identify the human factors that dominate example usage among professional software developers, and to provide a theory that explains these factors.
   Method: To achieve this goal, we analyzed the perceptions of professional software developers as manifested on LinkedIn online community. We analyzed the data qualitatively using adapted grounded theory research procedures.
   Results: The research yields an initial framework of key factors that dominate professional developers' perception regarding example usage. We use the theoretical lens of prejudice theory to put these factors in a broader context, and outline initial recommendations to address these factors in professional organizational context.
   Conclusion: The results of this work, in particular the use of qualitative techniques - allowed us to obtain rich insight into key human factors that affect professional software developers, and enrich the body of literature on the issues of reuse. These factors need to be taken into account as part of an organizational reuse strategy. (c) 2014 Published by Elsevier B.V.
C1 [Barzilay, Ohad] Tel Aviv Univ, IL-69978 Tel Aviv, Israel.
   [Urquhart, Cathy] Manchester Metropolitan Univ, Manchester M15 6BH, Lancs, England.
C3 Tel Aviv University; Manchester Metropolitan University
RP Barzilay, O (corresponding author), Tel Aviv Univ, Recanati Bldg, IL-69978 Tel Aviv, Israel.
EM ohadbr@tau.ac.il; c.urquhart@mmu.ac.uk
RI Urquhart, Cathy/HLQ-1865-2023
CR Aberson CL, 2000, PERS SOC PSYCHOL REV, V4, P157, DOI 10.1207/S15327957PSPR0402_04
   Adorno T. W., 1950, AUTHORITARIAN PERSON
   Aldrich H., 1977, ACAD MANAGE REV, V2, P217, DOI DOI 10.2307/257905
   Allport G. W., 1954, NATURE PREJUDICE
   Altemeyer B, 1998, ADV EXP SOC PSYCHOL, V30, P47, DOI 10.1016/S0065-2601(08)60382-2
   [Anonymous], HUMAN ASPECTS SOFTWA
   [Anonymous], 2013, Finding Source Code on the Web for Remix and Reuse, DOI DOI 10.1007/978-1-4614-6596-6_15
   [Anonymous], AMCIS 2002 P
   [Anonymous], SUITE 2009
   [Anonymous], 1998, RESPONSES VICTIMIZAT
   [Anonymous], 1981, COGNITIVE PROCESSES
   [Anonymous], 2004, XP Ser
   [Anonymous], 2006, CONSTRUCTING GROUNDE
   [Anonymous], 1992, EMERGENCE VS FORCING
   [Anonymous], CHI 08
   [Anonymous], SOFTWARE REUSE HOLIS
   [Anonymous], THESIS TEL AVIV U
   [Anonymous], QUALITY SPEED TRADEO
   [Anonymous], IEEE SOFTW
   [Anonymous], 1922, PUBLIC OPINION
   [Anonymous], DISCOVERY GROUNDED T
   [Anonymous], P IEEE ACM INT C AUT
   [Anonymous], 2007, DAGSTUHL SEMINAR P D
   [Anonymous], EXPANSIVE LEARNING E
   [Anonymous], 2004, SOCIAL IDENTITY THEO
   [Anonymous], 2012, GROUNDED THEORY QUAL
   [Anonymous], PPIG 2008 PSYCH PROG
   [Anonymous], P 19 ACM SIGSOFT S 1
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], 2012, GUARDIAN
   [Anonymous], 2008, ATLANTIC
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bokowski B, 1999, LECT NOTES COMPUT SC, V1687, P355, DOI 10.1145/318774.319253
   Boyd DM, 2007, J COMPUT-MEDIAT COMM, V13, P210, DOI 10.1111/j.1083-6101.2007.00393.x
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   BREWER MB, 1979, PSYCHOL BULL, V86, P307, DOI 10.1037/0033-2909.86.2.307
   BREWER MB, 1991, PERS SOC PSYCHOL B, V17, P475, DOI 10.1177/0146167291175001
   Brewer MB, 1999, J SOC ISSUES, V55, P429, DOI 10.1111/0022-4537.00126
   Desouza KC, 2003, COMMUN ACM, V46, P99
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   Ferran-Urdaneta C., 1999, P 1999 ACM SIGCPR C, P128, DOI DOI 10.1145/299513.299644
   Fiske Susan., 1998, HDB SOCIAL PSYCHOL, P357, DOI DOI 10.1002/9780470561119
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Govorun O, 2006, SOC COGNITION, V24, P111, DOI 10.1521/soco.2006.24.2.111
   Hartmann B, 2008, IEEE PERVAS COMPUT, V7, P46, DOI 10.1109/MPRV.2008.54
   Holmes R, 2007, PROC INT CONF SOFTW, P447
   Humphrey WattsS., 2005, PSP (sm): a self-improvement process for software engineers
   Inzlicht M, 2006, PSYCHOL SCI, V17, P262, DOI 10.1111/j.1467-9280.2006.01695.x
   ISLAM MR, 1993, PERS SOC PSYCHOL B, V19, P700, DOI 10.1177/0146167293196005
   Jackson E.K. Daniel., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, Association for Computing Machinery, P173
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jarvenpaa SL, 2008, ORGAN SCI, V19, P260, DOI 10.1287/orsc.1070.0315
   Jeffries R., 2000, EXTREME PROGRAMMING
   Jones J.M., 1997, PREJUDICE RACISM, V2nd
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Junnarkar B, 1997, EXPERT SYST APPL, V13, P29, DOI 10.1016/S0957-4174(97)00020-1
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Knuth D, 1968, ART COMPUTER PROGRAM
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   KREFTING L, 1991, AM J OCCUP THER, V45, P214, DOI 10.5014/ajot.45.3.214
   Kruchten P, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P2, DOI 10.1109/ASWEC.2004.1290452
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Land R, 2009, LECT NOTES COMPUT SC, V5791, P150
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee A.S., 1997, INFORM SYSTEMS QUALI
   Lee JH, 2001, EXPERT SYST APPL, V20, P299, DOI 10.1016/S0957-4174(01)00015-X
   Lerner Melvin J., 1980, Perspectives in Social Psychology
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   LINVILLE PW, 1993, SOC COGNITION, V11, P92, DOI 10.1521/soco.1993.11.1.92
   Linville PW, 1998, ATTRIBUTION AND SOCIAL INTERACTION, P423, DOI 10.1037/10286-008
   Miller DT, 1998, EUR J SOC PSYCHOL, V28, P475, DOI 10.1002/(SICI)1099-0992(199805/06)28:3<475::AID-EJSP881>3.0.CO;2-M
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   MULLEN B, 1989, BASIC APPL SOC PSYCH, V10, P233, DOI 10.1207/s15324834basp1003_3
   Nanard M., 1998, Hypertext 98: Ninth ACM Conference on Hypertext and Hypermedia, P11, DOI 10.1145/276627.276629
   Ncube C, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.153
   Nelson T., 2006, PSYCHOL PREJUDICE, Vsecond
   Obrenovic Z, 2008, IEEE SOFTWARE, V25, P64, DOI 10.1109/MS.2008.162
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   OSTROM TM, 1993, J PERS SOC PSYCHOL, V64, P21, DOI 10.1037/0022-3514.64.1.21
   PARK B, 1990, J PERS SOC PSYCHOL, V59, P173, DOI 10.1037/0022-3514.59.2.173
   PETTIGREW TF, 1979, PERS SOC PSYCHOL B, V5, P461, DOI 10.1177/014616727900500407
   Plous S., 2003, Understanding prejudice and discrimination, P3
   Pour G, 2000, COMPUTER, V33, P35, DOI 10.1109/2.841782
   Quinn J.B., 1996, Academy of Management Executive, V10, P7, DOI [DOI 10.5465/AME.1996.9704111471, 10.5465/ame.1996.9704111471]
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   REDMILES DF, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P67
   Ross L., 1977, Advances in Experimental Social Psychology, V10 ed, P173, DOI [10.1016/S0065-2601(08)60357-3, DOI 10.1016/S0065-2601(08)60357-3]
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Serva M. A., 2000, Proceedings of the 2000 ACM SIGCPR Conference, P188, DOI 10.1145/333334.333395
   Sharma S, 2002, INFORM SYST J, V12, P7, DOI 10.1046/j.1365-2575.2002.00116.x
   Sidanius J, 1996, J PERS SOC PSYCHOL, V70, P476, DOI 10.1037/0022-3514.70.3.476
   Sim S.E., 2013, Finding Source Code on the Web for Remix and Reuse
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   SKRYPNEK BJ, 1982, J EXP SOC PSYCHOL, V18, P277, DOI 10.1016/0022-1031(82)90054-3
   Slyngstad O.P.N., 2006, P 2006 ACM IEEE INT, P242
   Speed JR, 1999, IEEE SOFTWARE, V16, P45, DOI 10.1109/52.805472
   Strauss A., 1990, BASICS QUALITATIVE R
   Strauss A.L., 2003, QUALITATIVE ANAL SOC
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   TAJFEL H, 1970, SCI AM, V223, P96, DOI 10.1038/scientificamerican1170-96
   Tajfel H., 1981, Human Groups and Social Categories
   Tomayko J., 2004, Human Aspects of Software Engineering, VIst
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Weinberg G.M., 1988, PSYCHOL COMPUTER PRO
   Weinberg GM, 1999, IEEE SOFTWARE, V16, P118, DOI 10.1109/MS.1999.744582
   Wenger E., 2009, COMMUNITIES PRACTICE
   Wolf M., 2008, PROUST SQUID STORY S
NR 114
TC 11
Z9 11
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2014
VL 56
IS 12
SI SI
BP 1613
EP 1628
DI 10.1016/j.infsof.2014.02.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AP2LG
UT WOS:000341903100006
DA 2024-07-18
ER

PT J
AU Schefer-Wenzl, S
   Strembeck, M
AF Schefer-Wenzl, Sigrid
   Strembeck, Mark
TI Model-driven specification and enforcement of RBAC break-glass policies
   for process-aware information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Access control; Business process modeling; Model-driven development; UML
AB Context: In many organizational environments critical tasks exist which in exceptional cases such as an emergency - must be performed by a subject although he/she is usually not authorized to perform these tasks. Break-glass policies have been introduced as a sophisticated exception handling mechanism to resolve such situations. They enable certain subjects to break or override the standard access control policies of an information system in a controlled manner.
   Objective: In the context of business process modeling a number of approaches exist that allow for the formal specification and modeling of process-related access control concepts. However, corresponding support for break-glass policies is still missing. In this paper, we aim at specifying a break-glass extension for process-related role-based access control (RBAC) models.
   Method: We use model-driven development (MDD) techniques to provide an integrated, tool-supported approach for the definition and enforcement of break-glass policies in process-aware information systems. In particular, we provide modeling support on the computation independent model (CIM) layer as well as on the platform independent model (PIM) and platform specific model (PSM) layers.
   Results: Our approach is generic in the sense that it can be used to extend process-aware information systems or process modeling languages with support for process-related RBAC and corresponding break-glass policies. Based on the formal CIM layer metamodel, we present a UML extension on the PIM layer that allows for the integrated modeling of processes and process-related break-glass policies via extended UML Activity diagrams. We evaluated our approach in a case study on real-world processes. Moreover, we implemented our approach at the PSM layer as an extension to the BusinessActivity library and runtime engine.
   Conclusion: Our integrated modeling approach for process-related break-glass policies allows for specifying break-glass rules in process-aware information systems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Schefer-Wenzl, Sigrid] Univ Appl Sci, Competence Ctr IT Secur, Vienna, Austria.
   [Schefer-Wenzl, Sigrid; Strembeck, Mark] WU Vienna, Inst Informat Syst & New Media, Vienna, Austria.
RP Schefer-Wenzl, S (corresponding author), Univ Appl Sci, Competence Ctr IT Secur, Campus Vienna, Vienna, Austria.
EM sigrid.schefer-wenzl@fh-campuswien.ac.at; mark.strembeck@wu.ac.at
CR Alqatawna J, 2007, EIGHTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS - PROCEEDINGS, P87, DOI 10.1109/POLICY.2007.31
   [Anonymous], [No title captured]
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], IEEE COMPUT
   [Anonymous], 2013, SAP VIRSA FIREFIGHTE
   [Anonymous], 2012, BUSINESS ACTIVITY LI
   Ardagna CA, 2010, COMPUT SECUR, V29, P848, DOI 10.1016/j.cose.2010.07.001
   Belnap N.D., 1977, MODERN USES MULTIPLE, P21
   Bertino E., 2001, ACM T INF SYST SECUR, V4
   Bertino E., 1999, ACM T INF SYST SECUR, V2, P65
   Botha RA, 2001, IBM SYST J, V40, P666, DOI 10.1147/sj.403.0666
   Bracha G., 1992, P IEEE INT C COMP LA
   Brucker A.D., 2010, P WORKSH INF SEC THE
   Brucker AD, 2009, P 14 ACM S ACC CONTR
   Carminati B., 2011, P INT C PRIV SEC RIS
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Chiu DKW, 1999, INFORM SYST, V24, P159, DOI 10.1016/S0306-4379(99)00010-1
   Clark D. D., 1987, IEEE S SEC PRIV
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   CRAMPTON J, 2008, P 13 ACM S ACC CONTR
   CUPPENS F, 2008, INT J INF SECUR, V7
   Dumas M., 2012, 24 INT C ADV INF SYS
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   FERREIRA A, 2006, P 19 IEEE S COMP BAS
   Ferreira A., 2009, P 2009 ANN COMP SEC
   Georgiadis C. K., 2001, ACM SACMAT
   Hoisl B., 2014, SOFTWARE SYST MODEL, V13
   Hove S. E., 2005, P 11 IEEE INT SOFTW
   Marinovic S, 2011, P 16 ACM S ACC CONTR, DOI [10.1145/1998441.1998453, DOI 10.1145/1998441.1998453]
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   Nurcan S., 2008, P 41 ANN HAW INT C S
   Object Management Group (OMG), 2010, OBJ CONSTR LANG SPEC
   Oh S., 2003, INF SYST, V28
   *OMG, 2009, OMG BUS PROC MOD NOT
   OMG, 2011, MET OBJ FAC MOF COR
   OMG, 2010, UN MOD LANG OMG UML
   Povey D., 2000, P 1999 WORKSH NEW SE
   Ravi Sandhu H.F., 1996, IEEE COMPUT, V29
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   Reichert M, 2009, LECT NOTES COMPUT SC, V5460, P115
   RISSANEN E, 2004, P 12 INT WORKSH SEC
   RODRIGUEZ A, 2006, LECT NOTES COMPUTER, V4231
   Russell N, 2005, LECT NOTES COMPUTER, V3520
   Russell N., 2006, INT C ADV INF SYST E
   Schefer S., 2011, OTM C 1 2011 P 19 IN
   Schefer S, 2011, LECT NOTES BUSINESS
   Schefer S, 2011, ELECT COMMUNICATIONS, V37
   Schefer S., 2011, BPM 2011 WORKSH 2 P
   Schefer-Wenzl S, 2012, LECT NOTES BUSINESS, V117
   Schefer-Wenzl S, 2012, 5 INT WORKSH ENT MOD
   Schefer-Wenzl S., 2013, P 28 ACM S APPL COMP
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Strembeck M., 2010, LECT NOTES COMPUTER, V6426
   Strembeck M., 2010, IEEE SECUR PRIVACY, V8
   Strembeck M., 2005, P 6 IEEE INT WORKSH
   Strembeck M., 2004, ACM T INF SYST SECUR, V7
   Strembeck M., 2011, INF SOFTWARE TECHNOL, V53
   Strembeck M., 2012, P 3 INT C MOB UB INT
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Tan K, 2004, P 17 IEEE WORKSH COM
   Thomas R.K., 1997, P IFIP TC11 WG11 3 E
   van der Aalst WMP, 2007, DECIS SUPPORT SYST, V43, P492, DOI 10.1016/j.dss.2006.11.005
   von Stackelberg S., 2012, OTM C
   Wainer J., 2003, INT J COOP INF SYST, V12
   WARNER J, 2006, P 11 ACM S ACC CONTR
   Weber B., 2007, INT C ADV INF SYST E
   Wetherall D., 1995, P USENIX TCL TK WORK
   Wolter C., 2007, LECT NOTES COMPUTER, V4714
   Wolter C., 2008, P 13 ACM S ACC CONTR
   Zdun U., 2007, INF SOFTWARE TECHNOL, V49
NR 72
TC 5
Z9 5
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1289
EP 1308
DI 10.1016/j.infsof.2014.04.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700008
DA 2024-07-18
ER

PT J
AU Delgado, A
   Weber, B
   Ruiz, F
   de Guzmán, IGR
   Piattini, M
AF Delgado, Andrea
   Weber, Barbara
   Ruiz, Francisco
   Garcia-Rodriguez de Guzman, Ignacio
   Piattini, Mario
TI An integrated approach based on execution measures for the continuous
   improvement of business processes realized by services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business Process Management (BPM); Service Oriented Computing (SOC);
   Continuous Process Improvement (CPI); Business Process Intelligence
   (BPI); Business Process execution measurement; ProM framework
AB Context: Organizations are rapidly adopting Business Process Management (BPM) as they focus on their business processes (BPs), seeing them to be key elements in controlling and improving the way they perform their business. Business Process Intelligence (BPI) takes as its focus the collection and analysis of information from the execution of BPs for the support of decision making, based on the discovery of improvement opportunities. Realizing BPs by services introduces an intermediate service layer that enables us to separate the specification of BPs in terms of models from the technologies implementing them, thus improving their modifiability by decoupling the model from its implementation.
   Objective: To provide an approach for the continuous improvement of BPs, based on their realization with services and execution measurement. It comprises an improvement process to integrate the improvements into the BPs and services, an execution measurement model defining and categorizing several measures for BPs and service execution, and tool support for both.
   Method: We carried out a systematic literature review, to collect existing proposals related to our research work. Then, in close collaboration with business experts from the Hospital General de Ciudad Real (HGCR), Spain, and following design science principles, we developed the methods and artifacts described in this paper, which were validated by means of a case study.
   Results: We defined an improvement process extending the BP lifecycle with measurement and improvement activities, integrating an execution measurement model comprising a set of execution measures. Moreover, we developed a plug-in for the ProM framework to visualize the measurement results as a proof-of-concept prototype. The case study with the HGCR has shown its feasibility.
   Conclusions: Our improvement vision, based on BPs realized by services and on measurement of their execution, in conjunction with a systematic approach to integrate the detected improvements, provides useful guidance to organizations. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Delgado, Andrea] Univ Republica, Fac Engn, Inst Comp Sci, Montevideo 11300, Uruguay.
   [Weber, Barbara] Univ Innsbruck, Inst Comp Sci, Qual Engn Res Grp, A-6020 Innsbruck, Austria.
   [Ruiz, Francisco; Garcia-Rodriguez de Guzman, Ignacio; Piattini, Mario] Univ Castilla La Mancha, Inst Informat Technol & Syst, Ciudad Real 13051, Spain.
C3 Universidad de la Republica, Uruguay; University of Innsbruck;
   Universidad de Castilla-La Mancha
RP Delgado, A (corresponding author), Univ Republica, Fac Engn, Inst Comp Sci, Julio Herrera y Reissig 565, Montevideo 11300, Uruguay.
EM adelgado@fing.edu.uy; barbara.weber@uibk.ac.at; francisco.ruizg@uclm.es;
   ignacio.grodriguez@uclm.es; mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Ruiz, Francisco/D-4295-2011; de Guzmán,
   Ignacio García-Rodríguez/N-4489-2014; Delgado, Andrea/J-5801-2018
OI Piattini, Mario/0000-0002-7212-8279; Ruiz,
   Francisco/0000-0002-4923-7848; de Guzmán, Ignacio
   García-Rodríguez/0000-0002-0038-0942; Delgado,
   Andrea/0000-0003-4749-9366; Weber, Barbara/0000-0002-6004-4860
FU Agencia Nacional de Investigacion e Innovacion (ANII, Uruguay);
   PEGASO/MAGO project (Ministerio de Ciencia e Innovacion MICINN, Spain,
   FEDS FEDER) [TIN2009-13718-C02-01]; GEODAS-BC (Ministerio de Economia y
   Competitividad, MINECO, Spain) [TIN2012-37493-C03-01]
FX This work has been partially funded by the Agencia Nacional de
   Investigacion e Innovacion (ANII, Uruguay), PEGASO/MAGO project
   (Ministerio de Ciencia e Innovacion MICINN, Spain, FEDS FEDER,
   TIN2009-13718-C02-01) and GEODAS-BC (Ministerio de Economia y
   Competitividad, MINECO, Spain, TIN2012-37493-C03-01). We also wish to
   thank the Hospital General de Ciudad Real (HGCR), especially the person
   responsible for the quality group. We are grateful for his participation
   and enrolment in the research. Thanks also goes to the student of the
   University of Innsbruck who developed the ProM BPEMM plug-in prototype.
   In addition, we would like to thank the editor and the anonymous
   reviewers for their constructively critical comments on earlier versions
   of the article, as well as for their very useful feedback on those
   versions.
CR [Anonymous], 2009, SERV OR ARCH MOD LAN
   [Anonymous], BPM CONCEPTS LANGUAG
   Barbacci M., 1995, CMUSEI95TR021
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Brand N., 1995, Workflow Analysis and Design
   Brereton P., 2008, EVALUATION ASSESSMEN
   Buglione L., 2000, FESM AEM SOFTW MEAS
   Cardoso J., 2005, 6 INT C ENF
   CARDOSO J, 2002, INT C ENT INT MOD TE
   Casati F., 2007, 33 INT C VER LARG DA
   Castellanos M., 2009, Handbook of research on business process modeling, P456, DOI DOI 10.4018/978-1-60566-288-6.CH021
   Clements P., 2003, SEI S SOFTW
   Clements P., 2001, EVALUATING SOFTWARE
   Delgado A., 2010, J SYSTEMS INTEGRATIO, V1
   Delgado A., 2009, 5 INT WORKSH ENG SO
   Delgado A., 2010, 5 INT C SOFTW DAT TE
   Delgado A., 2011, 23 INT C ADV INF SYS
   Delgado A., 2011, 6 INT C EV NOV APPR
   Delgado A., 2010, 4 INT C RES CHALL IN
   Delgado A., 2010, 2 INT WORKSH MOD DRI
   Delgado A., 2012, 27 S APPL COMP SAC 1
   DEMEDEIROS A, 2005, 6 WORKSH TUT PRACT U
   Draghici M., 2010, ROMANIAN EC J, VXIII, P123
   Erl T., 2005, SOA CONCEPTS TECHNOL
   Galloway R., 2009, THESIS U MAASTRICHT
   Garcia F., 2010, 18 INT C COOP INF SY
   Garcia F., 2005, INFORM SOFTWARE TECH, V48
   Gartner G., 2011, SURVEY ANAL BPM SPEN
   Georgakopoulos D, 2008, COOP INFORM SYST, P1
   Gonzalez L. Sanchez, 2009, HDB RES BUSINESS PRO, P532
   Harrington H.J., 1991, BUSINESS PROCESS IMP
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hicks B., 2007, INFORM MANAGEMENT
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jensen K., 1996, COLOURED PETRI NETS, VI.
   Jimmerson C., 2005, QUALITY PATIENT SAFE
   Kaplan R. S, 1992, HARVARD BUSINESS REV, V10
   Krafzig D., 2005, ENTERPRISE SOA BEST
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kwak YH, 2006, TECHNOVATION, V26, P708, DOI 10.1016/j.technovation.2004.10.003
   Laguna M., 2005, Business Process Modeling, Simulation and Design
   Maruster L., 2009, KNOWLEDGE INFORM SYS, V21
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Mora B., 2008, 8 OOPSL WORKSH DOM S
   Netjes M., 2010, PROCESS IMPROVEMENT
   O'Brien L., 2005, CMUSEI20055TN014
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2008, BUS PROC MAT MOD BPM
   OMG, 2010, BUS MOT MOD BMM
   Pino F., 2009, INT C SOFTW PROC ICS
   Poppendieck M., 2002, OOPSLA OBJECT ORIENT
   Reijers H.A., 2003, DESIGN CONTROL WORKF
   Rolon E., 2010, HDB RES DEV E HLTH T, P1024
   Rolon E., 2006, 21 S APPL COMP SAC 0
   Rozinat A., 2008, STTT, V10, P57
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sahai A., 2001, SPECIFYING GUARANTEE
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Schonenberg H, 2008, LECT NOTES COMPUT SC, V5240, P51, DOI 10.1007/978-3-540-85758-7_7
   Smith H., 2003, BUSINESS PROCESS MAN
   van der Aalst W., 2011, Modeling Business Processes: A Petri Net Oriented Approach
   van der Aalst W.M.P., 2010, LECT NOTES, V2ii75, P2010
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2010, INT HANDB INFORM SYS, P313, DOI 10.1007/978-3-642-00416-2_15
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   VANDERAALST WMP, 2003, INT C BUS PROC MAN B
   Wessel G., 2004, THE TQM MAGAZINE, V16, P264, DOI [https://doi.org/10.1108/09544780410541918, DOI 10.1108/09544780410541918]
   Westergaard M, 2011, LECT NOTES COMPUT SC, V6709, P169
   WfMC, 2008, XMOL PROC DEF LAND X
   Wynn M., 2007, INT WORKSH BUS PROC
   Yin RK, 2002, Applied Social Research Methods Series, V34
   zur Muehlen Michael., 2004, WORKFLOW BASED PROCE
NR 75
TC 35
Z9 36
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 134
EP 162
DI 10.1016/j.infsof.2013.08.003
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000003
DA 2024-07-18
ER

PT J
AU Lavazza, L
   Morasca, S
   Robiolo, G
AF Lavazza, Luigi
   Morasca, Sandro
   Robiolo, Gabriela
TI Towards a simplified definition of Function Points
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; Function Points; Effort prediction
ID COMPONENT TYPES; SIZE
AB Background: The measurement of Function Points is based on Base Functional Components. The process of identifying and weighting Base Functional Components is hardly automatable, due to the informality of both the Function Point method and the requirements documents being measured. So, Function Point measurement generally requires a lengthy and costly process.
   Objectives: We investigate whether it is possible to take into account only subsets of Base Functional Components so as to obtain functional size measures that simplify Function Points with the same effort estimation accuracy as the original Function Points measure. Simplifying the definition of Function Points would imply a reduction of measurement costs and may help spread the adoption of this type of measurement practices. Specifically, we empirically investigate the following issues: whether available data provide evidence that simplified software functionality measures can be defined in a way that is consistent with Function Point Analysis; whether simplified functional size measures by themselves can be used without any appreciable loss in software development effort prediction accuracy; whether simplified functional size measures can be used as software development effort predictors in models that also use other software requirements measures.
   Method: We analyze the relationships between Function Points and their Base Functional Components. We also analyze the relationships between Base Functional Components and development effort. Finally, we built effort prediction models that contain both the simplified functional measures and additional requirements measures.
   Results: Significant statistical models correlate Function Points with Base Functional Components. Basic Functional Components can be used to build models of effort that are equivalent, in terms of accuracy, to those based on Function Points. Finally, simplified Function Points measures can be used as software development effort predictors in models that also use other requirements measures.
   Conclusion: The definition and measurement processes of Function Points can be dramatically simplified by taking into account a subset of the Base Functional Components used in the original definition of the measure, thus allowing for substantial savings in measurement effort, without sacrificing the accuracy of software development effort estimates. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Robiolo, Gabriela] Univ Austral, Fac Ingn, Pilar, Buenos Aires, Argentina.
C3 Austral University
EM luigi.lavazza@uninsubria.it
RI Robiolo, Gabriela/X-9455-2019; Lavazza, Luigi/AAF-5323-2020
OI Robiolo, Gabriela/0000-0001-6865-8499; Lavazza,
   Luigi/0000-0002-5226-4337; Morasca, Sandro/0000-0003-4598-7024
FU Project "Metodi, tecniche e strumenti per l'analisi, l'implementazione e
   la valutazione di sistemi software"; Universita degli Studi
   dell'Insubria; School of Engineering of Austral University
FX The work has been partially supported by Project "Metodi, tecniche e
   strumenti per l'analisi, l'implementazione e la valutazione di sistemi
   software" funded by the Universita degli Studi dell'Insubria and
   Research Fund of School of Engineering of Austral University.
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   Abran A., 2004, INT WORKSH SOFTW MEA, P195
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2007, METH SOFTW SIZ DEC W
   [Anonymous], 2018, US COSMIC FUNCT SIZ
   [Anonymous], 247502005 ISOIEC
   [Anonymous], 2009, WORLDW SOFTW DEV BEN
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   Boehm BW., 1981, Software Engineering Economics
   Buglione L, 2010, 20 INT WORKSH SOFTW
   Buglione L, 2008, LECT NOTES COMPUT SC, V5089, P75, DOI 10.1007/978-3-540-69566-0_9
   Buglione L, 2011, IEEE SOFTWARE, V28, P91, DOI 10.1109/MS.2011.55
   Conte M., 2004, E Q EARLY QUICK APPR
   Cook RD, 1982, RESIDUALS INFLUENCE
   Cuadrado-Gallego JJ, 2010, ADV ENG SOFTW, V41, P262, DOI 10.1016/j.advengsoft.2009.07.003
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Finnish Software Measurement Association, 2004, 11 FISMA FSM
   Gencel C., ACM T SOFTWARE ENG M, V17
   Gencel C, 2008, LECT NOTES COMPUT SC, V4895, P72
   Gencel Cigdem., 2007, INT C SOFTWARE PROCE, P235
   Hericko M, 2008, INFORM SOFTWARE TECH, V50, P772, DOI 10.1016/j.infsof.2007.08.005
   I. ISO, 245702004 I ISO IEC
   International Software Benchmarking Standards Group, 2011, PRACT SOFTW PROJ EST
   International Standardization Organization (ISO), 2003, 209262003 ISOIEC
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R., 1996, Empirical Software Engineering, V1, P11, DOI 10.1007/BF00125809
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   Kempisty D., 2009, UK SOFTW METR ASS C
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B., 1999, TECHNICAL REPORT
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham Barbara, 2009, P 5 INT C PRED MOD S, P4
   Lavazza L., 2010, P 5 INT C PRED MOD S
   Lavazza L., 2010, P 4 INT S EMP SOFTW
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   Mendes E., 2005, 11 INT S SOFTWARE ME, P10, DOI DOI 10.1109/METRICS.2005.4
   MENDES O, 1996, FUNCTION POINT TOOL
   Morasca S., 2010, 2010 ICSE WORKSH ENG, P8
   Morasca S., 2009, Proceedings of the 5th International Conference on Predictor Models in Software Engineering, P1
   Pendharkar PC, 2009, COMMUN ACM, V52, P141, DOI 10.1145/1435417.1435449
   Robiolo G, 2008, INNOV SYST SOFTW ENG, V4, P31, DOI 10.1007/s11334-007-0043-y
   Rousseeuw P.J., 1987, ROBUST REGRESSION OU
   Rule P., 2001, SOFTW MEAS SERV NASS
   Santillo L., 2005, SOFTW METR 2005 11 I
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Stambollian A., 2006, P 16 IWSM METR 2006
   Stensrud E., 1998, P 5 INT S SOFTW METR
   Symons C., 2009, PERFORMANCE REAL TIM
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 54
TC 14
Z9 14
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1796
EP 1809
DI 10.1016/j.infsof.2013.04.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000009
OA Green Published
DA 2024-07-18
ER

PT J
AU Spinke, V
AF Spinke, Volker
TI An object-oriented implementation of concurrent and hierarchical state
   machines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE State machines; UML statecharts; State pattern; Double-dispatch; Code
   generation; Design pattern
AB Context: State machine diagrams are a powerful means to describe the behavior of reactive systems. Unfortunately, the implementation of state machines is difficult, because state machine concepts, like states, events and transitions, are not directly supported in commonly used programming languages. Most of the implementation approaches known so far have one or more serious drawbacks: they are difficult to understand and maintain, lack in performance, depend on the properties of a specific programming language or do not implement the more advanced state machine features like hierarchy, concurrency or history.
   Objective: This paper proposes and examines an approach to implement state machines, where both states and events are objects. Because the reaction of the state machine depends on two objects (state and event), a method known as double-dispatch is used to invoke the transition between the states. The aim of this work is to explore this approach in detail.
   Method: To prove the usefulness of the proposed approach, an example was implemented with the proposed approach as well as with other commonly known approaches. The implementation strategies are then compared with each other with respect to run-time, code size, maintainability and portability.
   Results: The presented approach executes fast but needs slightly more memory than other approaches. It supports hierarchy, concurrency and history, is human authorable, easy to understand and easy to modify. Because of its pure object-oriented nature depending only on inheritance and late binding, it is extensible and can be implemented with a wide variety of programming languages.
   Conclusion: The results show that the presented approach is a useful way to implement state machines, even on small micro-controllers. (C) 2013 Elsevier B.V. All rights reserved.
RP Spinke, V (corresponding author), Pk Str 8, D-65439 Florsheim, Germany.
EM vs@spinke.de
CR Adamczyk, 2003, P PATT LANG PROGR C
   [Anonymous], VISUALSTATE SET STAT
   [Anonymous], 2012, UN MOD LANG SPEC UML
   Chauvel F., 2005, P MODELS UML 2005
   Domínguez E, 2012, INFORM SOFTWARE TECH, V54, P1045, DOI 10.1016/j.infsof.2012.04.008
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Martin R.C., 1996, ACYCLIC VISITOR OBJE
   Niaz Iftikhar Azim, 2005, International Journal of Computer & Information Science, V6, P83
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   Samek M., 2002, PRACTICAL STATECHART
   Samek M., 2009, PRACTICAL STATECHART
   van Gurp J., 1999, P IASTED INT C 3 ANN
   YACOUB S, 1998, P 5 ANN C PATT LANG
   Yacoub S.M., 1998, P 3 EUR C PATT LANG
NR 15
TC 4
Z9 4
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1726
EP 1740
DI 10.1016/j.infsof.2013.03.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000004
DA 2024-07-18
ER

PT J
AU Graydon, PJ
   Kelly, TP
AF Graydon, Patrick J.
   Kelly, Tim P.
TI Using argumentation to evaluate software assurance standards
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety standards; Security standards; Assessing standards; Assurance
   arguments; Common Criteria
AB Context: Many people and organisations rely upon software safety and security standards to provide confidence in software intensive systems. For example, people rely upon the Common Criteria for Information Technology Security Evaluation to establish justified and sufficient confidence that an evaluated information technology product's contributions to security threats and threat management are acceptable. Is this standard suitable for this purpose?
   Objective: We propose a method for assessing whether conformance with a software safety or security standard is sufficient to support a conclusion such as adequate safety or security. We hypothesise that our method is feasible and capable of revealing interesting issues with the proposed use of the assessed standard.
   Method: The software safety and security standards with which we are concerned require evidence and discuss the objectives of that evidence. Our method is to capture a standard's evidence and objectives as an argument supporting the desired conclusion and to subject this argument to logical criticism. We have evaluated our method by case study application to the Common Criteria standard.
   Results: We were able to capture and criticise an argument from the Common Criteria standard. Review revealed 121 issues with the analysed use of the standard. These range from vagueness in its text to failure to require evidence that would substantially increase confidence in the security of evaluated software.
   Conclusion: Our method was feasible and revealed interesting issues with using a Common Criteria evaluation to support a conclusion of adequate software security. Considering the structure of similar assurance standards, we see no reason to believe that our method will not prove similarly valuable in other applications. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Kelly, Tim P.] Univ York, Dept Comp Sci, Heslington YO10 5GH, England.
C3 University of York - UK
RP Graydon, PJ (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM patrick.graydon@gmail.com
RI Graydon, Mallory/D-8162-2019
OI Graydon, Mallory/0000-0002-6352-4368
FU Swedish Foundation for Strategic Research (SSF) as part of the SYNOPSIS
   project
FX We thank John Knight for inspiring this work. We thank Howard Chivers,
   Karsten Nohl, and the anonymous reviewers for their constructive
   criticism. We also thank the Swedish Foundation for Strategic Research
   (SSF) for supporting this work as part of the SYNOPSIS project.
CR Alexander Rob, 2011, CESGTR20111 U YORK
   ANKRUM TS, P 9 INT S HIGH ASS S, DOI DOI 10.1109/HASE.2005.20
   [Anonymous], 2009, CCMB200907002
   [Anonymous], 0056 MIN DEF 1
   [Anonymous], 2011, GSN COMMUNITY STANDA
   [Anonymous], 61508 IEC
   [Anonymous], 2011, 2011 CWE SANS TOP 25
   [Anonymous], 2008, EXTENSIBLE MARKUP LA
   [Anonymous], CCMB200907001
   [Anonymous], P 28 INT SYST SAF C
   [Anonymous], 2009, CCMB200907003
   BARNUM S, 2010, SOFTW ASS WORK GROUP
   Bishop PG, 1998, IND PERSPECTIVES SAF, P194, DOI DOI 10.1007/978-1-4471-1534-2_14
   Boogerd C, 2008, PROC IEEE INT CONF S, P277, DOI 10.1109/ICSM.2008.4658076
   *CCMB, 2009, CCMB200907004
   GALLOWAY A, 2005, P 24 DIG AV SYST C D
   Goodenough John, 2007, ARGUING SECURITY CRE
   Greenwell W, 2006, P 24 INT SYST SAF C, P430
   Hatton L, 2004, INFORM SOFTWARE TECH, V46, P465, DOI 10.1016/j.infsof.2003.09.016
   HAYHURST KJ, 2001, TM2001210876 NASA
   *INT ORG STAND, 2010, 247722010 ISOIEC
   International Organization for Standardization, 2007, 149712007 ISO
   Kelly T., P DEPENDABLE SYSTEMS
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   LAUTIERI S, 2005, P 13 SAF CRIT SYST S, P66
   Vivas JL, 2011, REQUIR ENG, V16, P55, DOI 10.1007/s00766-010-0114-8
   Morimoto S, 2008, LECT NOTES COMPUT SC, V4910, P622
   Nohl K., 2008, USENIX SECURITY S, P185, DOI DOI 10.1109/54.785838
   *RTCA INC, 1992, DO178B RTCA INC
   Schumacher Markus., 2002, EuroPLoP, P289
   2012, GCOV INTRO USING GNU
   2012, RAPICOVER J RAPITA S
   2012, PVS BUGS LIST
NR 33
TC 9
Z9 9
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1551
EP 1562
DI 10.1016/j.infsof.2013.02.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700002
DA 2024-07-18
ER

PT J
AU Vela, B
   Mazón, JN
   Blanco, C
   Fernández-Medina, E
   Trujillo, J
   Marcos, E
AF Vela, B.
   Mazon, J. N.
   Blanco, C.
   Fernandez-Medina, E.
   Trujillo, J.
   Marcos, E.
TI Development of Secure XML Data Warehouses with QVT
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; Data warehouse; Security; MDA; QVT
ID MODEL-DRIVEN DEVELOPMENT; ACCESS-CONTROL; MDA APPROACH; REQUIREMENTS;
   TRANSFORMATION; EXTENSION; FRAMEWORK; OLAP
AB Context: Data warehouses are systems which integrate heterogeneous sources to support the decision making process. Data from the Web is becoming increasingly more important as sources for these systems, which has motivated the extensive use of XML to facilitate data and metadata interchange among heterogeneous data sources from the Web and the data warehouse. However, the business information that data warehouses manage is highly sensitive and must, therefore, be carefully protected. Security is thus a key issue in the design of data warehouses, regardless of the implementation technology. It is important to note that the idiosyncrasy of the unstructured and semi-structured data requires particular security rules that have been specifically tailored to these systems in order to permit their particularities to be captured correctly. Unfortunately, although security issues have been considered in the development of traditional data warehouses, current research lacks approaches with which to consider security when the target platform is based on XML technology.
   Objective: We shall focus on defining transformations to obtain a secure XML Schema from the conceptual multidimensional model of a data warehouse.
   Method: We have first defined the rationale behind the transformation rules and how they have been developed in natural language, and we have then established them clearly and formally by using the QVT language. Finally, in order to validate our proposal we have carried out a case study.
   Results: We have proposed an approach for the model driven development of Secure XML Data Warehouses, defining a set of QVT transformation rules.
   Conclusion: The main benefit of our proposal is that it is possible to model security requirements together with the conceptual model of the data warehouse during the early stages of a project, and automatically obtain the corresponding implementation for XML. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Vela, B.; Marcos, E.] Rey Juan Carlos Univ, Dept 2, Languages & Comp Syst Dept 2, Madrid 28933, Spain.
   [Mazon, J. N.; Trujillo, J.] Univ Alicante, Languages & Comp Syst Dept, Alicante 03690, Spain.
   [Blanco, C.] Univ Cantabria, Dept Math Stat & Comp Sci, Fac Ciencias, Santander 39071, Spain.
   [Fernandez-Medina, E.] Univ Castilla La Mancha, Informat Syst & Technol Dept, E-13071 Ciudad Real, Spain.
C3 Universidad Rey Juan Carlos; Universitat d'Alacant; Universidad de
   Cantabria; Universidad de Castilla-La Mancha
RP Vela, B (corresponding author), Rey Juan Carlos Univ, Dept 2, Languages & Comp Syst Dept 2, Madrid 28933, Spain.
EM belen.vela@urjc.es; jnmazon@dIsLua.es; Carlos.Blanco@unican.es;
   Eduardo.FdezMedina@uclm.es; jtrujillo@dIsLua.es;
   esperanza.marcos@urjc.es
RI Martinez, Esperanza Marcos/JCE-5935-2023; Trujillo, Juan/L-7079-2014;
   Martinez, Esperanza Marcos/AAS-8564-2021; Mazón,
   Jose-Norberto/AAA-9817-2019; Vela Sanchez, Belen/H-1561-2015;
   Fernandez-Medina, Eduardo/D-4648-2011; Blanco, Carlos/H-6911-2012
OI Trujillo, Juan/0000-0003-0139-6724; Mazón,
   Jose-Norberto/0000-0001-7924-0880; Vela Sanchez,
   Belen/0000-0003-0604-7312; Marcos, Esperanza/0000-0003-2666-9995;
   Fernandez-Medina, Eduardo/0000-0003-2553-9320; Blanco,
   Carlos/0000-0001-9001-0904
FU Spanish Ministry of Economy and Competitiveness [TIN2012-31104]; Spanish
   Ministry of Education and Science [TIN-2011-22617, TIN2010-14860];
   Consejeria de Ciencia y Tecnologia of the Junta de Comunidades de
   Castilla-La Mancha [PII2I09-0150-3135]; Spanish Ministry of Science and
   Innovation (MCI) [PET2008-0136]; European Social Fund [10/38-C]
FX Jose-Norberto Mazon had developed this work during a research internship
   in the University of Castilla-La Mancha, funded by the "Consejeria de
   Ciencia y Tecnologia of the Junta de Comunidades de Castilla-La Mancha"
   and the European Social Fund under the contract 10/38-C.; We would like
   to thank the referees for their helpful comments and suggestions that
   allow us to improve our research. This research has been carried out in
   the framework of the following projects: CoMobility (TIN2012-31104)
   financed by the Spanish Ministry of Economy and Competitiveness, MASAI
   (TIN-2011-22617) and MESOLAP (TIN2010-14860) financed by the Spanish
   Ministry of Education and Science, SISTEMAS (PII2I09-0150-3135) financed
   by the "Consejeria de Ciencia y Tecnologia of the Junta de Comunidades
   de Castilla-La Mancha", and BUSINESS (PET2008-0136), financed by the
   Spanish Ministry of Science and Innovation (MCI).
CR Abelló A, 2001, LECT NOTES COMPUT SC, V2113, P668
   [Anonymous], OCL 2 0 SPEC VERS 2
   [Anonymous], 2005, Building the Data Warehouse
   [Anonymous], ENCY DATA WAREHOUSIN
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Beyer K., 2005, SIGMOD 05 P 2005 ACM, P503
   Boussaid O, 2006, LECT NOTES COMPUT SC, V4152, P39
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Czarnecki K., 2003, 2 OOPSLA WORKSH GEN
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fernández-Medina E, 2006, DECIS SUPPORT SYST, V42, P1270, DOI 10.1016/j.dss.2005.10.008
   Fernández-Medina E, 2009, INFORM SOFTWARE TECH, V51, P809, DOI 10.1016/j.infsof.2008.05.010
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Golfarelli M., 2001, DOLAP 2001
   Hernandez P., 2011, ISTAR SHOWCASE 11
   Houmb S.H., 2010, HEURISTICS UMLSEC RE, V15, P30
   HUSEMANN B., 2000, Workshop on Design and Management of Data Warehouses, P3
   Inmon W. H., 2008, 2 0 ARCHITECTURE NEX
   Jurjens J., 2007, INT J SOFTW TOOLS TE, V9, P18
   Jurjens J., 2011, TECHNICAL REPORTS CO
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Katic N, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P300, DOI 10.1109/DEXA.1998.707417
   Kimball R., 2008, DATA WAREHOUSING LIF
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Li Y, 2005, DEEC 2005: INTERNATIONAL WORKSHOP ON DATA ENGINEERING ISSUES IN E-COMMERCE, PROCEEDINGS, P103
   Pérez JM, 2008, IEEE T KNOWL DATA EN, V20, P940, DOI 10.1109/TKDE.2007.190746
   Matulevicius R, 2011, FRONT ARTIF INTEL AP, V224, P339, DOI 10.3233/978-1-60750-688-1-339
   Mazón JN, 2008, DECIS SUPPORT SYST, V45, P41, DOI 10.1016/j.dss.2006.12.003
   Mazón JN, 2007, LECT NOTES COMPUT SC, V4802, P255
   Mazón JN, 2007, DATA KNOWL ENG, V63, P725, DOI 10.1016/j.datak.2007.04.004
   Mazón JN, 2009, SIGMOD REC, V38, P12, DOI 10.1145/1815918.1815920
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   Mouratidis H., 2011, SOFTWARE ENG SECURE
   Nassis V, 2006, LECT NOTES COMPUT SC, V3882, P513
   *OMG, 2003, MOD DRIV ARCH GUID V
   [OMG QVT], 2008, MET FAC MOP 2 0 QUER
   Paim FRS, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P75
   Park BK, 2005, LECT NOTES COMPUT SC, V3589, P32, DOI 10.1007/11546849_4
   Pedersen D, 2004, PROC INT CONF DATA, P778, DOI 10.1109/ICDE.2004.1320045
   PRIEBE T, 2001, 20 INT C CONC MOD ER
   Ravat F, 2010, INFORM SYST, V35, P662, DOI 10.1016/j.is.2009.12.002
   Rodríguez A, 2007, COMPUT SYST SCI ENG, V22, P307
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Romero O, 2009, INT J DATA WAREHOUS, V5, P1, DOI 10.4018/jdwm.2009040101
   Rosado D.G., 2006, WOSIS 06, P163
   Rosenthal A., 2000, 2 INT WORKSH DES MAN, P81
   Saltor F, 2002, HETEROGENEOUS INFORMATION EXCHANGE AND ORGANIZATIONAL HUBS, P123
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Soler E, 2008, COMPUT STAND INTER, V30, P341, DOI 10.1016/j.csi.2008.03.002
   Steel C., 2005, CORE SECURITY PATTER, P1088
   Thuraisingham Bhavani, 2007, International Journal of Business Intelligence and Data Mining, V2, P367, DOI 10.1504/IJBIDM.2007.016379
   Trujillo J., 2009, INFORM SOFTWARE TECH, V51
   Trujillo J, 2009, COMPUT STAND INTER, V31, P969, DOI 10.1016/j.csi.2008.09.040
   van de Riet RP, 2008, DATA KNOWL ENG, V67, P293, DOI 10.1016/j.datak.2008.04.006
   Vela B, 2004, LECT NOTES COMPUT SC, V3288, P780
   Vela B., 2012, DECIS SUPPORT SYST, V52, P26
   [W3C XML Schema Working Group], 2004, XML SCHEM PARTS 0 2
   Wang L, 2004, P IEEE S SECUR PRIV, P161
   Weippl E., 2001, WORKSH SEC DISTR DAT
   Wiwatwattana N., 2007, ICDE, P916
NR 63
TC 6
Z9 7
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1651
EP 1677
DI 10.1016/j.infsof.2013.03.003
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700010
DA 2024-07-18
ER

PT J
AU Jung, HW
AF Jung, Ho-Won
TI Investigating measurement scales and aggregation methods in SPICE
   assessment method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SPICE; ISO/IEC 15504; Aggregation method; MADM; Formative measurement
   model; Reflective measurement model
ID STRUCTURAL EQUATION MODELS; FORMATIVE MEASUREMENT; COMPOSITE INDICATORS;
   CAUSAL INDICATORS; DECISION; INDEX
AB Context: This study identified three issues in SPICE (Software Process Assessment and Capability dEtermination) assessment method based on ISO/IEC 15504-2 (Performing an assessment). The issues include a lack of a measurement scale for characterizing the extent to which an outcome (practice) is achieved (implemented) and two shortcomings of the aggregation methods in order to generate a process attribute (PA) rating. Such issues may be weaknesses to the needs of retaining consistent assessment results comparable within and across assessed organizations.
   Objective: The purpose of this study is to identify issues, such as the measurement scale and aggregation methods, in SPICE assessment methods and to provide candidate solutions based on measurement theories, while the rating scales of the current PA and capability are retained.
   Method: For those purposes, the present study reviews scale types based on a measurement theory and uses the reflective and formative measurement models in order to find the relationships between PAs and practices. Composite measure development methods that are dependent on the relationships are then proposed on the basis of appropriate aggregation methods by using multiple attribute decision making (MADM) methods.
   Results: Six candidate solutions are presented along with their strengths and weaknesses based on practical and theoretical perspectives. Two examples are given to illustrate and interpret six candidate solutions for the issues identified. By applying six candidate solutions to the examples shows that the measurement scale and the aggregation methods influence the PA rating.
   Conclusion: The process community, including the SPICE standardization group, can initiate discussions in order to determine the measurement scale and the aggregation methods with our six candidate solutions. The rationale and methods addressed in this study can also be applied to other domains in order to derive a composite (aggregate) value or rating. (C) 2013 Elsevier B.V. All rights reserved.
C1 Korea Univ, Sch Business, Seoul 136701, South Korea.
C3 Korea University
RP Jung, HW (corresponding author), Korea Univ, Sch Business, Anam Dong 5Ka, Seoul 136701, South Korea.
EM hwjung@korea.ac.kr
CR Allen J, 2020, ARCHAEOL OCEAN, V55, P1, DOI 10.1002/arco.5207
   [Anonymous], 2008, 155046 ISOIEC
   [Anonymous], 2008, 155047 ISOIEC
   [Anonymous], 2008, Handbook on Constructing Composite Indicators: Methodology and User Guide
   [Anonymous], 2012, 33002 ISOIEC CD JTC1
   [Anonymous], 2004, 155041 ISOIEC
   [Anonymous], 2004, 155044 ISOIEC
   [Anonymous], 2012, 33063 ISOIEC CD TC J
   [Anonymous], 155045 ISOIEC
   [Anonymous], 155048 ISOIEC
   [Anonymous], 155042 ISOIEC
   [Anonymous], 2012, 33003 ISOIEC CD JTC1
   [Anonymous], 2006, CONFIRMATORY FACTOR
   Babbie E.R., 2007, HDB EXPT PSYCHOL
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   Bagozzi RP, 2011, MIS QUART, V35, P261
   Bandura Romina., 2008, SURVEY COMPOSITE IND
   Blalock H.M., 1982, CONCEPTUALIZATION ME
   BOLLEN K, 1991, PSYCHOL BULL, V110, P305, DOI 10.1037/0033-2909.110.2.305
   Bollen K., 2001, International Encyclopedia of the Social Behavioral Sciences, DOI DOI 10.1016/B0-08-043076-7/00709-9
   Bollen KA, 2000, PSYCHOL METHODS, V5, P3, DOI 10.1037//1082-989X.5.1.3
   Bollen KA, 2011, MIS QUART, V35, P359
   Carmines E.G., 1979, RELIABILITY VALIDITY
   Diamantopoulos A, 2001, J MARKETING RES, V38, P269, DOI 10.1509/jmkr.38.2.269.18845
   Diamantopoulos A, 2006, J MODEL MANAG, V1, P7, DOI 10.1108/17465660610667775
   Diamantopoulos A, 2011, MIS QUART, V35, P335
   Diamantopoulos A, 2008, J BUS RES, V61, P1203, DOI 10.1016/j.jbusres.2008.01.009
   Ebert U, 2004, J ENVIRON ECON MANAG, V47, P270, DOI 10.1016/j.jeem.2003.09.001
   Edwards JR, 2011, ORGAN RES METHODS, V14, P370, DOI 10.1177/1094428110378369
   Edwards JR, 2000, PSYCHOL METHODS, V5, P155, DOI 10.1037//1082-989X.5.2.155
   Fayers PM, 2002, J R STAT SOC A STAT, V165, P233, DOI 10.1111/1467-985X.02020
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   GERBING DW, 1988, J MARKETING RES, V25, P186, DOI 10.2307/3172650
   Grace JB, 2008, ENVIRON ECOL STAT, V15, P191, DOI 10.1007/s10651-007-0047-7
   Hipp JR, 2005, STRUCT EQU MODELING, V12, P76, DOI 10.1207/s15328007sem1201_4
   HOBBS BF, 1986, IEEE T SYST MAN CYB, V16, P384, DOI 10.1109/TSMC.1986.4308970
   Howell RD, 2007, PSYCHOL METHODS, V12, P238, DOI 10.1037/1082-989X.12.2.238
   Jarvis CB, 2003, J CONSUM RES, V30, P199, DOI 10.1086/376806
   Johnson R., 2011, J BUSINESS PSYCHOL, V26, P1
   Jung H.-W., INVESTIGATING UNPUB
   Jung H.-W., 2001, SOFTWARE PROCESS IMP, V6, P111
   Jung HW, 2012, J SOFTW-EVOL PROC, V24, P401, DOI 10.1002/smr.545
   Law KS, 1998, ACAD MANAGE REV, V23, P741, DOI 10.5465/amr.1998.1255636
   MACCALLUM RC, 1993, PSYCHOL BULL, V114, P533, DOI 10.1037/0033-2909.114.3.533
   McDonald RP, 1999, TEST THEORY UNIFIED
   Munda G., 2005, EUR 21834, P1
   Munda G., 2006, P EUR C QUAL SURV ST
   Munda G, 2009, APPL ECON, V41, P1513, DOI 10.1080/00036840601019364
   OECD, 2011, OECD E GOV STUD IND
   OECD, 2010, HUM DEV REP 2010
   Rijsdijk SA, 2007, J ACAD MARKET SCI, V35, P340, DOI 10.1007/s11747-007-0040-6
   Rout TP, 2007, J SYST SOFTWARE, V80, P1483, DOI 10.1016/j.jss.2007.01.045
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saltelli A., 2008, Global Sensitivity Analysis: The Primer, DOI DOI 10.1002/9780470725184
   Saltelli A, 2007, SOC INDIC RES, V81, P65, DOI 10.1007/s11205-006-0024-9
   SEI, 2011, CMUSEI2011HB001
   SEI, 2011, APPR REQ CMMI VERS 1
   SPICE Trials, 2003, SPICE TRIALS SPICE P
   Ting KF, 1995, STRUCT EQU MODELING, V2, P163, DOI 10.1080/10705519509540005
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   van der Ploeg RR, 1999, SOIL SCI SOC AM J, V63, P1055, DOI 10.2136/sssaj1999.6351055x
   Varian HalR., 2003, INTERMEDIATE MICROEC, V6th
   Wilcox JB, 2008, J BUS RES, V61, P1219, DOI 10.1016/j.jbusres.2008.01.010
   Yoon K., 1995, Multiple Attribute Decision Making-An 1069 Introduction, DOI [10.1007/978-3-642-48318-9, DOI 10.4135/9781412985161]
   Zeleny M., 1982, MULTIPLE CRITERIA DE
   Zhou P, 2006, ECOL ECON, V59, P305, DOI 10.1016/j.ecolecon.2005.10.018
   Zhou P, 2009, SOC INDIC RES, V94, P83, DOI 10.1007/s11205-008-9338-0
NR 67
TC 5
Z9 5
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1450
EP 1461
DI 10.1016/j.infsof.2013.02.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 168DF
UT WOS:000320685200006
DA 2024-07-18
ER

PT J
AU Austin, A
   Holmgreen, C
   Williams, L
AF Austin, Andrew
   Holmgreen, Casper
   Williams, Laurie
TI A comparison of the efficiency and effectiveness of vulnerability
   discovery techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Vulnerability; Static analysis; Penetration testing; Black box
   testing; White box testing
ID STATIC ANALYSIS
AB Context: Security vulnerabilities discovered later in the development cycle are more expensive to fix than those discovered early. Therefore, software developers should strive to discover vulnerabilities as early as possible. Unfortunately, the large size of code bases and lack of developer expertise can make discovering software vulnerabilities difficult. A number of vulnerability discovery techniques are available, each with their own strengths.
   Objective: The objective of this research is to aid in the selection of vulnerability discovery techniques by comparing the vulnerabilities detected by each and comparing their efficiencies.
   Method: We conducted three case studies using three electronic health record systems to compare four vulnerability discovery techniques: exploratory manual penetration testing, systematic manual penetration testing, automated penetration testing, and automated static analysis.
   Results: In our case study, we found empirical evidence that no single technique discovered every type of vulnerability. We discovered that the specific set of vulnerabilities identified by one tool was largely orthogonal to that of other tools. Systematic manual penetration testing found the most design flaws, while automated static analysis found the most implementation bugs. The most efficient discovery technique in terms of vulnerabilities discovered per hour was automated penetration testing.
   Conclusion: The results show that employing a single technique for vulnerability discovery is insufficient for finding all types of vulnerabilities. Each technique identified only a subset of the vulnerabilities, which, for the most part were independent of each other. Our results suggest that in order to discover the greatest variety of vulnerability types, at least systematic manual penetration testing and automated static analysis should be performed. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Austin, Andrew; Holmgreen, Casper; Williams, Laurie] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Williams, L (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM andrew_austin@ncsu.edu; cmholmgr@ncsu.edu; williams@csc.ncsu.edu
FU Agency for Healthcare Research Quality
FX This work is supported by the Agency for Healthcare Research Quality. We
   also would like to thank the members of the Real-search group for their
   invaluable feedback on our research and this paper.
CR Allan D., 2008, CISC VIS NETW IND GL
   [Anonymous], 2010, Open Web Application Security Project (OWASP): OWASP Top Ten Project
   [Anonymous], 2002, NIST SPECIAL PUBLICA
   ANTUNES N, 2009, 15 IEEE PAC RIM INT, P301, DOI DOI 10.1109/PRDC.2009.54
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   BACA D, 2009, INT C AV REL SEC ARE, P804
   BARNUM S, 2005, DEFENSE DEPTH
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Doupe A., 2010, C DET INTR MALW VULN
   Geer D, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P185, DOI 10.1109/CSAC.2002.1176290
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   McGraw G, 2011, INFORMIT
   McGraw G., 2006, Software security: building security in
   OEMR.ORG, 2011, OPENEMR COMM HELP
   Robinson S., 2005, IEE Seminar on Security of Distributed Control Systems, P71, DOI 10.1109/IEE.2005.201375
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Smith B., 2010, Security and Privacy in Medical and Home-care Systems (SPIMACS), P1, DOI [DOI 10.1002/9781444313918, 10.1002/9781444313918, DOI 10.1145/1866914.1866916]
   Smith B, 2011, TR20115 N CAR STAT U
   Suto L., 2010, ANAL ACCURACY TIME C
   Suto Larry., 2007, Analyzing the Effectiveness and Coverage of Web Application Security Scanners
   The MITRE Corporation, 2011, COMM WEAKN EN
NR 24
TC 28
Z9 36
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1279
EP 1288
DI 10.1016/j.infsof.2012.11.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900010
DA 2024-07-18
ER

PT J
AU Andrade, J
   Ares, J
   Martínez, MA
   Pazos, J
   Rodríguez, S
   Romera, J
   Suárez, S
AF Andrade, Javier
   Ares, Juan
   Martinez, Maria-Aurora
   Pazos, Juan
   Rodriguez, Santiago
   Romera, Julio
   Suarez, Sonia
TI An architectural model for software testing lesson learned systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architectural model; Knowledge management; Lesson learned system;
   Software testing management; Software testing process improvement
ID KNOWLEDGE MANAGEMENT
AB Context: Software testing is a key aspect of software reliability and quality assurance in a context where software development constantly has to overcome mammoth challenges in a continuously changing environment. One of the characteristics of software testing is that it has a large intellectual capital component and can thus benefit from the use of the experience gained from past projects. Software testing can, then, potentially benefit from solutions provided by the knowledge management discipline. There are in fact a number of proposals concerning effective knowledge management related to several software engineering processes.
   Objective: We defend the use of a lesson learned system for software testing. The reason is that such a system is an effective knowledge management resource enabling testers and managers to take advantage of the experience locked away in the brains of the testers. To do this, the experience has to be gathered, disseminated and reused.
   Method: After analyzing the proposals for managing software testing experience, significant weaknesses have been detected in the current systems of this type. The architectural model proposed here for lesson learned systems is designed to try to avoid these weaknesses. This model (i) defines the structure of the software testing lessons learned; (ii) sets up procedures for lesson learned management; and (iii) supports the design of software tools to manage the lessons learned.
   Results: A different approach, based on the management of the lessons learned that software testing engineers gather from everyday experience, with two basic goals: usefulness and applicability.
   Conclusion: The architectural model proposed here lays the groundwork to overcome the obstacles to sharing and reusing experience gained in the software testing and test management. As such, it provides guidance for developing software testing lesson learned systems. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Andrade, Javier; Ares, Juan; Rodriguez, Santiago; Suarez, Sonia] Univ A Coruna, La Coruna 15071, Spain.
   [Martinez, Maria-Aurora] UDIMA Madrid Open Univ, Madrid 28400, Spain.
   [Pazos, Juan; Romera, Julio] Tech Univ Madrid, Madrid 28660, Spain.
C3 Universidade da Coruna; Madrid Open University, UDIMA; Universidad
   Politecnica de Madrid
RP Suárez, S (corresponding author), Univ A Coruna, Campus Elvina S-N, La Coruna 15071, Spain.
EM jag@udc.es; juanar@udc.es; mariaauror-a.martinez@udima.es;
   jpazos@fi.upm.es; santi@udc.es; julio_romera@elcorteingles.es;
   ssuarez@udc.es
RI Andrade-Garda, Javier/U-8124-2018; Ares Casal, Juan/G-2140-2016;
   Rodriguez-Yanez, Santiago/E-3038-2014; Martinez Rey, Maria
   Aurora/S-3210-2018
OI Andrade-Garda, Javier/0000-0002-9630-2534; Ares Casal,
   Juan/0000-0002-4497-2114; Rodriguez-Yanez, Santiago/0000-0002-6781-7838;
   Suarez-Garaboa, Sonia/0000-0003-3709-6766; Martinez Rey, Maria
   Aurora/0000-0002-0036-1442
FU La Caixa [P021005056]
FX We would like to thank IECISA for useful comments and suggestions about
   both the architectural model and the prototype; La Caixa, for funding
   Project P021005056: and Salome Garcia, for acting as intermediary among
   all of us. Our thanks also go to Rachel Elliott for her help in
   translating this paper.
CR Abecker A., 1997, 1997 AAAI SPRING S A, P1
   ALTHOFF KD, 1999, P WORKSH LEARN SOFTW, P27
   Anbari FT, 2008, TECHNOVATION, V28, P633, DOI 10.1016/j.technovation.2007.12.001
   Andrade J, 2007, RELIAB ENG SYST SAFE, V92, P902, DOI 10.1016/j.ress.2006.05.016
   Andrade J, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P471, DOI 10.1109/IRI.2003.1251453
   Andrade J., 2006, Engineering Letters, V13, P159
   Andrade J, 2008, COMPUT EDUC, V51, P1510, DOI 10.1016/j.compedu.2008.02.002
   Andrade J, 2008, DECIS SUPPORT SYST, V45, P164, DOI 10.1016/j.dss.2007.12.015
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], J UNIVERSAL COMPUTER
   [Anonymous], REVOLUTIONALIZING PR
   Arent J., 2001, IMPROVING SOFTWARE O, P235
   Aurum A, 2008, INFORM SOFTWARE TECH, V50, P511, DOI 10.1016/j.infsof.2007.05.005
   BACH J, 2002, TESTING PRACTITIONER, P209
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Berard E, 1996, IEEE SOFTWARE, V13, P91, DOI 10.1109/52.493025
   Bertolino A., 2005, SOFTWARE ENG DEV PRO, V1, P393
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Briand L.C., 2002, P 14 INT C SOFTWARE, P3, DOI DOI 10.1145/568760.568762
   Briand LC, 2008, INT CONF QUAL SOFTW, P3, DOI 10.1109/QSIC.2008.29
   Chen TT, 2008, PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P320, DOI 10.1109/ICMLC.2008.4620424
   Crispin L., 2009, AGILE TESTING PRACTI
   Davenport T.H., 2000, WORKING KNOWLEDGE OR, DOI DOI 10.1145/347634.348775
   Del Moral A., 2007, GESTION CONOCIMIENTO
   Di Lucca GA, 2006, INFORM SOFTWARE TECH, V48, P1172, DOI 10.1016/j.infsof.2006.06.006
   Dieng R, 1999, INT J HUM-COMPUT ST, V51, P567, DOI 10.1006/ijhc.1999.0281
   Falbo RD, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P162
   Glass RL, 2006, IEEE SOFTWARE, V23, P55, DOI 10.1109/MS.2006.113
   Gomez-Perez A., 2004, Ontological Engineering, V2nd, P1
   Hammond J.S., 1999, Smart choices: a practical guide to making better decisions
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Harrison W., 2002, P 27 ANN NASA GODD I, P139
   Holsapple CW, 2004, J AM SOC INF SCI TEC, V55, P593, DOI 10.1002/asi.20007
   Houdek F., 1997, Software Engineering Notes, V22, P81, DOI 10.1145/258368.258391
   IEEE Computer Society, 2008, IEEE STAND SOFTW SYS
   IEEE Computer Society Professional Practices Committee, 2004, SWEBOK GUID SOFTW EN
   Jain R., 2007, P 1 WORKSH ADV INN S
   Johnson B, 2002, IND CORP CHANGE, V11, P245, DOI 10.1093/icc/11.2.245
   Juristo N, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.104
   Juristo Natalia, 2004, SIGSOFT SOFTW ENG NO, V29, P1, DOI 10.1145/1022494.1022544
   KAJIHARA J, 1993, IEEE SOFTWARE, V10, P46, DOI 10.1109/52.232398
   Kaner C., 1999, TESTING COMPUTER SOF
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   Karhu K., 2007, P 11 C EV ASS SOFTW, P53
   Lee T. H., 2008, P 2 INT RES WORKSH A, P137
   Liebowitz J., 1999, KNOWLEDGE MANAGEMENT
   Liu DR, 2008, DECIS SUPPORT SYST, V44, P524, DOI 10.1016/j.dss.2007.06.015
   Marciniak JJ, 2002, ENCY SOFTWARE ENG
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Myers Glenford J., 2011, The Art of Software Testing
   Natali A. C. C., 2004, P 4 JORN IB ING SOFT, V4, P419
   Nonaka I., 1999, KNOWLEDGE CREATING C
   Ong KW, 2007, IN C IND ENG ENG MAN, P2120
   Rech J, 2007, IEEE SOFTWARE, V24, P99, DOI 10.1109/MS.2007.183
   Secchi P., 1999, ALERTS LESSONS LEARN, P57
   SHNEIDERMAN B, 1994, IEEE SOFTWARE, V11, P70, DOI 10.1109/52.329404
   Simon G., 1996, P 10 KNOWL ACQ KNOWL, P411
   TVERSKY A, 1977, PSYCHOL REV, V84, P327, DOI 10.1037/h0026750
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   Utting M., 2007, PRACTICAL MODEL BASE
   vanHeijst G, 1997, EXPERT SYST APPL, V13, P41, DOI 10.1016/S0957-4174(97)00021-3
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Vegas S, 2003, IDENTIFYING RELEVANT
   Vegas S, 2006, J SYST SOFTWARE, V79, P1606, DOI 10.1016/j.jss.2006.02.049
   Weber R., 2000, Advances in Case-Based Reasoning. 5th European Workshop, EWCBR 2000. Proceedings (Lecture Notes in Artificial Intelligence Vol.1898), P322
   Weber R., 2000, Intelligent Lessons Learned Systems. Papers from the AAAI Workshop. (Technical Report WS-00-03), P63
   Weber R, 2001, EXPERT SYST APPL, V20, P17, DOI 10.1016/S0957-4174(00)00046-4
   Wiig KM, 1997, EXPERT SYST APPL, V13, P1, DOI 10.1016/S0957-4174(97)00018-3
   Xuemei L., 2008, P 11 JOINT C INF SCI
   Zeleny M., 1982, MULTIPLE CRITERIA DE
   [No title captured]
NR 71
TC 16
Z9 17
U1 1
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 18
EP 34
DI 10.1016/j.infsof.2012.03.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 036GA
UT WOS:000311013200002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lakhotia, K
   Harman, M
   Gross, H
AF Lakhotia, Kiran
   Harman, Mark
   Gross, Hamilton
TI AUSTIN: An open source tool for search based software testing of C
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 2nd International Symposium on Search Based Software Engineering
CY 2010
CL Benevento, ITALY
DE Software testing; SBSE; SBST
ID GENERATION; ALGORITHMS; EXECUTION
AB Context: Despite the large number of publications on Search-Based Software Testing (SBST), there remain few publicly available tools. This paper introduces AUSTIN, a publicly available open source SBST tool for the C language.(1) The paper is an extension of previous work [1]. It includes a new hill climb algorithm implemented in AUSTIN and an investigation into the effectiveness and efficiency of different pointer handling techniques implemented by AUSTIN's test data generation algorithms.
   Objective: To evaluate the different search algorithms implemented within AUSTIN on open source systems with respect to effectiveness and efficiency in achieving branch coverage. Further, to compare AUSTIN against a non-publicly available, state-of-the-art Evolutionary Testing Framework (ETF).
   Method: First, we use example functions from open source benchmarks as well as common data structure implementations to check if the decision procedure for pointer inputs, introduced in this paper, differs in terms of effectiveness and efficiency compared to a simpler alternative that generates random memory graphs. A second empirical study formulates two alternate hypotheses regarding the effectiveness and efficiency of AUSTIN compared to the ETF. These hypotheses are tested using a paired Wilcoxon test.
   Results and Conclusion: The first study highlights some practical problems with the decision procedure for pointer inputs described in this paper. In particular, if the code under test contains insufficient guard statements to enforce constraints over pointers, then using a constraint solver for pointer inputs may be suboptimal compared to a method that generates random memory graphs. The programs used in the second study do not require any constraint solving for pointer inputs and consist of eight non-trivial, real-world C functions drawn from three embedded automotive software modules. For these functions, AUSTIN is competitive compared to the ETF, achieving an equal or higher branch coverage for six of the functions. In addition, for functions where AUSTIN's branch coverage is equal or higher, AUSTIN is more efficient than the ETF. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Lakhotia, Kiran; Harman, Mark] UCL, CREST, London WC1E 6BT, England.
   [Gross, Hamilton] Berner & Mattner Syst Tech GmbH, D-10587 Berlin, Germany.
C3 University of London; University College London
RP Lakhotia, K (corresponding author), UCL, CREST, Gower St, London WC1E 6BT, England.
EM k.lakhotia@ucl.ac.uk; mark.harman@ucl.ac.uk;
   hamilton.gross@berner-mattner.com
OI Harman, Mark/0000-0002-5864-4488
CR Alba E., 2005, INT WORKSH RAP INT S, V3943, P50
   Alba E, 2008, COMPUT OPER RES, V35, P3161, DOI 10.1016/j.cor.2007.01.016
   Ali S., IEEE T SOFT IN PRESS
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P113, DOI 10.1109/SSBSE.2009.16
   Blanco R, 2007, ENG INTELL SYST ELEC, V15, P135
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Díaz E, 2008, COMPUT OPER RES, V35, P3052, DOI 10.1016/j.cor.2007.01.009
   Free Software Foundation, 2009, GCC GNU COMP COLL
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gross H, 2009, IEEE ICST WORKSHOP, P111, DOI 10.1109/ICSTW.2009.38
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Lakhotia K, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P95, DOI 10.1109/TAICPART.2009.15
   Lefticaru Raluca, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P525, DOI 10.1109/ICST.2008.32
   LITTLEFAIR T, 2001, THESIS E COWAN U AUS
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Radio Technical Commission for Aeronautics, 1992, RTCA DO178 B SOFTW C
   Sagarna R, 2007, IEEE C EVOL COMPUTAT, P438, DOI 10.1109/CEC.2007.4424504
   Sen K., 2005, ESEC SIGSOFT FSE
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vittek M, 2006, LECT NOTES COMPUT SC, V4039, P423
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wheeler D.A., 2001, More than a gigabuck: Estimating GNU/Linux's size
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   [No title captured]
NR 35
TC 36
Z9 42
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 112
EP 125
DI 10.1016/j.infsof.2012.03.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 036GA
UT WOS:000311013200007
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Wnuk, K
   Regnell, B
AF Bjarnason, Elizabeth
   Wnuk, Krzysztof
   Regnell, Bjorn
TI Are you biting off more than you can chew? A case study on causes and
   effects of overscoping in large-scale software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements scoping; Empirical study; Software release planning; Case
   study; Agile requirements engineering
ID DECISION-MAKING; RISK-MANAGEMENT; REQUIREMENTS
AB Context: Scope management is a core part of software release management and often a key factor in releasing successful software products to the market. In a market-driven case, when only a few requirements are known a priori, the risk of overscoping may increase.
   Objective: This paper reports on findings from a case study aimed at understanding overscoping in large-scale, market-driven software development projects, and how agile requirements engineering practices may affect this situation.
   Method: Based on a hypothesis of which factors that may be involved in an overscoping situation, semi-structured interviews were performed with nine practitioners at a large, market-driven software company. The results from the interviews were validated by six (other) practitioners at the case company via a questionnaire.
   Results: The results provide a detailed picture of overscoping as a phenomenon including a number of causes, root causes and effects, and indicate that overscoping is mainly caused by operating in a fast-moving market-driven domain and how this ever-changing inflow of requirements is managed. Weak awareness of overall goals, in combination with low development involvement in early phases, may contribute to 'biting off more than a project can 'chew'. Furthermore, overscoping may lead to a number of potentially serious and expensive consequences, including quality issues, delays and failure to meet customer expectations. Finally, the study indicates that overscoping occurs also when applying agile requirements engineering practices, though the overload is more manageable and perceived to result in less wasted effort when applying a continuous scope prioritization, in combination with gradual requirements detailing and a close cooperation within cross-functional teams.
   Conclusion: The results provide an increased understanding of scoping as a complex and continuous activity, including an analysis of the causes, effects, and a discussion on possible impact of agile requirements engineering practices to the issue of overscoping. The results presented in this paper can be used to identify potential factors to address in order to achieve a more realistic project scope. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Bjarnason, Elizabeth; Wnuk, Krzysztof; Regnell, Bjorn] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Lund University
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM Elizabeth.Bjarnason@cs.lth.se; Krzysztof.W-nuk@cs.lth.se;
   Bjorn.Regnell@cs.lth.se
OI Bjarnason, Elizabeth/0000-0001-9070-0008; Regnell,
   Bjorn/0000-0002-9380-6120
FU Swedish Foundation for Strategic Research; VINNOVA (The Swedish
   Governmental Agency for Innovation Systems)
FX We would like to thank all anonymous interviewees and questionnaire
   respondents for their invaluable contribution to this project. We would
   also like to thank Dr. Dietmar Pfahl for reviewing an early version of
   this paper. The project is partly funded by the Swedish Foundation for
   Strategic Research and VINNOVA (The Swedish Governmental Agency for
   Innovation Systems) within the EASE and UPITER Projects.
CR Alenljung B, 2008, REQUIR ENG, V13, P257, DOI 10.1007/s00766-008-0068-2
   [Anonymous], SOFTWARE PRODUCT LIN
   [Anonymous], 4 S EMP SOFTW ENG 17
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], REQUIREMENTS MANAGEM
   [Anonymous], THESIS LINKOPING U
   [Anonymous], P 4 INT C WIR COMM N
   [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], STATUS DEV TRENDS PR
   [Anonymous], 2000, P 6 INT WORKSH REQ E
   [Anonymous], P PICMET 10 18 22 JU
   [Anonymous], P IEEE 5 INT S REQ E
   [Anonymous], P 1 IEEE S REQ ENG U
   [Anonymous], WORKSH REQ ENG DEC S
   [Anonymous], INFORM SYST J
   [Anonymous], 14 INT S COMP INF SC
   [Anonymous], 14 IEEE INT C SEPT
   [Anonymous], MANAGING ENG SOFTWAR
   [Anonymous], MANAGING ENG SOFTWAR
   [Anonymous], P 5 IEEE INT S REQ E
   [Anonymous], MANAGING ENG SOFTWAR
   [Anonymous], INTRO RISK MANAGEMEN
   [Anonymous], GUID PROJ MAN BOD KN
   [Anonymous], 2003, Software requirements
   [Anonymous], IEEE ENG MANAGE REV
   [Anonymous], MANAGING ENG SOFTWAR
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berry D. M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P311, DOI 10.1109/RE.2010.44
   Bjarnason E., 2011, P 1 WORKSH AG REQ EN
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Boehm B.W., 1989, TUTORIAL SOFTWARE RI
   Cusumano M.A., 1995, MICROSOFT SECRETS
   deBaud J.-M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P34, DOI 10.1109/ICSE.1999.840993
   DeMarco T, 2003, IEEE SOFTWARE, V20, P99, DOI 10.1109/MS.2003.1231163
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2002, ANN SOFTW ENG, V14, P73, DOI 10.1023/A:1020545406509
   El Emam K., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P68, DOI 10.1109/ISRE.1995.512547
   Faulk StuartR., 2001, P 5 IEEE INT S REQUI, P48
   Fricker S, 2007, LECT NOTES COMPUT SC, V4542, P144
   Gemmer A, 1997, COMPUTER, V30, P33, DOI 10.1109/2.589908
   Glinz M, 2002, INFORM SYST, V27, P425, DOI 10.1016/S0306-4379(02)00015-7
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kabbedijk J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P281, DOI 10.1109/RE.2009.28
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   Khurum M, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P97, DOI 10.1109/ASPEC.2007.18
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Medvidovic N, 2003, J SYST SOFTWARE, V68, P199, DOI 10.1016/S0164-1212(03)00063-3
   Myers M., 2002, QUALITATIVE RES INFO
   Neumann-Alkier L., 1997, P 5 EUROPEAN C INFOR, P541
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Phillips J., 2002, PROJECT MANAGEMENT S
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Regnell B, 2008, LECT NOTES COMPUT SC, V5025, P123, DOI 10.1007/978-3-540-69062-7_11
   Robson C., 2002, Real world research
   Rosca D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P236, DOI 10.1109/ISRE.1997.566874
   Sangwan R., 2006, Global software development handbook
   Sawyer P, 1999, VTT SYMP, V195, P222
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Van Lamsweerde A., 2003, Formal Methods for Software Architecture, LNCS 2804
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
NR 71
TC 49
Z9 52
U1 2
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1107
EP 1124
DI 10.1016/j.infsof.2012.04.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600005
OA Green Published
DA 2024-07-18
ER

PT J
AU O'Leary, P
   de Almeida, ES
   Richardson, I
AF O'Leary, Padraig
   de Almeida, Eduardo Santana
   Richardson, Ita
TI The Pro-PD Process Model for Product Derivation within software product
   lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Product derivation; Process
AB Background: The derivation of products from a software product line is a time consuming and expensive activity. Despite recognition that an effective process could alleviate many of the difficulties associated with product derivation, existing approaches have different scope, emphasise different aspects of the derivation process and are frequently too specialised to serve as a general solution.
   Objective: To define a systematic process that will provide a structured approach to the derivation of products from a software product line, based on a set of tasks, roles and artefacts.
   Method: Through a series of research stages using sources in industry and academia, this research has developed a Process Model for Product Derivation (Pro-PD). We document the evidence for the construction of Pro-PD and the design decisions taken. We evaluate Pro-PD through comparison with prominent existing approaches and standards.
   Results: This research presents a Process Model for Product Derivation (Pro-PD). Pro-PD describes the tasks, roles and work artefacts used to derive products from a software product line.
   Conclusion: In response to a need for methodological support, we developed Pro-PD (Process Model for Product Derivation). Pro-PD was iteratively developed and evaluated through four research stages. Our research is a first step toward an evidence-based methodology for product derivation and a starting point for the definition of a product derivation approach. (c) 2012 Elsevier B.V. All rights reserved.
C1 [O'Leary, Padraig; de Almeida, Eduardo Santana] Univ Fed Bahia, RiSE Reuse Software Engn & Comp Sci Dept, Salvador, BA, Brazil.
   [Richardson, Ita] Univ Limerick, Lero, Limerick, Ireland.
C3 Universidade Federal da Bahia; University of Limerick
RP O'Leary, P (corresponding author), Univ Fed Bahia, RiSE Reuse Software Engn & Comp Sci Dept, Salvador, BA, Brazil.
EM padraig.oleary@rise.com.br; esa@rise.com.br; ita.richardson@lero.ie
RI Ines, INCT/J-9550-2013; de Almeida, Eduardo/JJC-2493-2023
OI Richardson, Ita/0000-0002-5493-2837
FU IRCSET [RS/06/167]; Science Foundation Ireland through Lero - the Irish
   Software Engineering Research Centre [03/CE2/1303_1, 10/CE/11855];
   National Institute of Science and Technology for Software Engineering
   (INES[1]); CNPq [305968/2010-6, 559997/2010-8, 474766/2010-1]; FACEPE
   [573964/2008-4, APQ-1037-1.03/08]; FAPESB
FX This work is supported by IRCSET under Grant Number RS/06/167 and by
   Science Foundation Ireland through Lero - the Irish Software Engineering
   Research Centre under Grant Numbers 03/CE2/1303_1 and 10/CE/11855. This
   work was partially supported by the National Institute of Science and
   Technology for Software Engineering (INES[1]), funded by CNPq and
   FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08 and CNPq grants
   305968/2010-6, 559997/2010-8, 474766/2010-1 and FAPESB.
CR Ahlemann F., 2006, REFERENCE MODELING B
   [Anonymous], 13 ANN IEEE INT C WO
   Atkinson C., 2000, P 1 C SOFTW PROD LIN
   Bayer J., 2000, 7 IEEE INT C WORKSH
   BAYER J, 1999, P S SOFTW REUS
   Beck K., 2011, MANIFESTO AGILE SOFT
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Bockle G., 2002, P 2 INT C SOFTW PROD
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   CHASTEK G, 2002, GUIDELINES DEV PRODU
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Fettke P., 2006, REFERENCE MODELING B
   Griss ML, 2000, LECT NOTES COMPUT SC, V1844, P137
   Guelfi N, 2007, LECT NOTES COMPUT SC, V4542, P78
   Hammersley M., 2000, CASE STUDY METHOD KE
   Heider W., 2010, P 4 INT WORKSH VAR M
   Hotz L, 2003, P SOFT VAR MAN WORKS
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kim SD, 2005, Third International Conference on Information Technology and Applications, Vol 1, Proceedings, P70
   Matinlassi M., 2004, SOFTWARE ENG ICSE 20
   McGregor J., 2005, Preparing for Automated Derivation of Products in a Software Product Line
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Leary P., 2010, J SOFTW MAINTEN EVOL
   O'Leary P., 2009, SOFTWARE PRODUCT LIN
   O'Leary P, 2007, P 2 IFIP CENTR E EUR
   O'Leary P., 2010, PRODUCT DERIVATION P, P277
   O'Leary P, 2008, 3 IFIP TC2 CENTR E E
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R., 2007, 11 INT SOFTW PROD LI
   RABISER R, 2009, THESIS J KEPLER U LI
   Rabiser R., 2007, 33 EURMICROCONF SOFT
   Rabiser R, 2011, J SYST SOFTWARE, V84, P285, DOI 10.1016/j.jss.2010.09.042
   Rombach D, 2000, P 22 INT C SOFTW ENG
   Rosemann M., 1999, REFERENZMODELLIERUNG, P22
   Schlagheck B., 2000, Object-oriented reference models for controlling processes and projects
   Schmid K., 2005, P 27 INT C SOFTW ENG
   Sinnema M., 2006, P 9 INT C SOFTW REUS
   Sinnema M., 2004, P 3 INT C SOFTW PROD
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
NR 41
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 1014
EP 1028
DI 10.1016/j.infsof.2012.03.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700007
OA Green Published
DA 2024-07-18
ER

PT J
AU Fortino, G
   Russo, W
AF Fortino, Giancarlo
   Russo, Wilma
TI ELDAMeth: An agent-oriented methodology for simulation-based prototyping
   of distributed agent systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agent oriented software engineering; Simulation; CASE tools; Mobile
   agents; Multi-coordination; Statecharts
AB In application domains, such as distributed information retrieval, content management and distribution, e-Commerce, the agent-based computing paradigm has been demonstrated to be effective for the analysis, design and implementation of distributed software systems. In particular, several agent-oriented methodologies, incorporating suitable agent models, frameworks and tools, have been to date defined to support the development lifecycle of distributed agent systems (DAS). However, few of them provide effective validation methods to analyze design objects at different degrees of refinement before their actual implementation and deployment. In this paper, ELDAMeth, a simulation-based methodology for DAS, which enables rapid prototyping based on visual programming, validation, and automatic code generation for JADE-based DAS, is presented. ELDAMeth can be used both stand-alone for the modeling and evaluation of DAS and coupled with other agent-oriented methodologies for enhancing them with simulation-based validation. In particular, the proposed methodology, which is based on the ELDA (Event-driven Lightweight Distilled StateCharts-based Agents) agent model, provides key programming abstractions (event-driven computation, multi-coordination, and coarse-grained strong mobility) very suitable for highly dynamic distributed computing and is supported by a CASE tool-driven iterative process seamlessly covering the detailed design, simulation, and implementation phases of DAS. A simple yet effective case study in the distributed information retrieval domain is used to illustrate the proposed methodology. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Fortino, Giancarlo; Russo, Wilma] Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Fortino, G (corresponding author), Univ Calabria, DEIS, Via P Bucci,Cubo 41C, I-87036 Arcavacata Di Rende, CS, Italy.
EM g.fortino@unical.it; w.russo@unical.it
RI Russo, Wilma/M-1831-2015; Fortino, Giancarlo/J-2950-2017
OI Russo, Wilma/0000-0003-1452-5695; Fortino, Giancarlo/0000-0002-4039-891X
CR [Anonymous], FIPA AG MAN SPEC MAN
   [Anonymous], ELDATOOL DOCUMENTATI
   Arcos JL, 2005, ENG APPL ARTIF INTEL, V18, P191, DOI 10.1016/j.engappai.2004.11.019
   ASTLEY M, 1998, P ACM SIGSOFT 6 INT
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   Boloni L., 2000, Proceedings of the Fourth International Conference on Autonomous Agents, P80
   Braun P., 2005, MOBILE AGENTS BASIC
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Cabri G, 2000, COMPUTER, V33, P82, DOI 10.1109/2.820044
   Cossentino Massimo, 2007, International Journal of Agent-Oriented Software Engineering, V1, P91, DOI 10.1504/IJAOSE.2007.013266
   Cossentino Massimo, 2008, International Journal of Agent-Oriented Software Engineering, V2, P132, DOI 10.1504/IJAOSE.2008.017313
   Cossentino M., 2005, AGENT ORIENTED METHO
   FORTINO G, 2005, COMPUTER SYSTEMS SCI, V20, P94
   Fortino G, 2007, P WORKSH OBJ AG WOA, P14
   Fortino G., 2009, P IEEE S INT AG IEEE
   Fortino G., 2010, INT J AGENT ORIENTED, V4
   Fortino G., 2010, P 14 INT C KNOWL BAS
   Galán JM, 2009, JASSS-J ARTIF SOC S, V12
   Gardelli Luca, 2008, International Journal of Agent-Oriented Software Engineering, V2, P171, DOI 10.1504/IJAOSE.2008.017314
   Gómez-Sanz JJ, 2010, SIMUL MODEL PRACT TH, V18, P1468, DOI 10.1016/j.simpat.2010.05.012
   Hahn C., 2008, Proceedings of the 7th international joint conference on Autonomous agents and multiagent systems-Volume, V1, P233
   Himmelspach J, 2008, P 6 INT WORKSH AG TH
   Logan B, 2001, P IEEE, V89, P174, DOI 10.1109/5.910853
   Luck M, 2004, AUTON AGENT MULTI-AG, V9, P203, DOI 10.1023/B:AGNT.0000038027.29035.7c
   Martelli M., 1999, P APP GULP PROD JOIN, P13
   Michel Fabien, 2009, P MULTIAGENT SYSTEMS, P3
   Molesini A, 2007, P 8 INT WORKSH ENG S
   Omicini A., 1999, P ACM S APPL COMP SA
   Padovitz A., 2004, ANN MATH COMPUT TELE, V1, P35
   Pavon Juan, 2008, International Journal of Agent-Oriented Software Engineering, V2, P196, DOI 10.1504/IJAOSE.2008.017315
   Pavon J., 2005, Agent-oriented Methodologies, P236
   Ricci A, 2006, APPL ARTIF INTELL, V20, P179, DOI 10.1080/08839510500484207
   Sarjoughian HS, 2001, P IEEE, V89, P201, DOI 10.1109/5.910855
   Sierra C., 2004, NOVATICA, V170
   Sims M, 2008, AUTON AGENT MULTI-AG, V16, P151, DOI 10.1007/s10458-007-9023-8
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Zhou XY, 2004, 2004 IEEE CONFERENCE ON CYBERNETICS AND INTELLIGENT SYSTEMS, VOLS 1 AND 2, P53
NR 37
TC 41
Z9 43
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 608
EP 624
DI 10.1016/j.infsof.2011.08.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100007
DA 2024-07-18
ER

PT J
AU Ng, TH
   Yu, YT
   Cheung, SC
   Chan, WK
AF Ng, T. H.
   Yu, Yuen Tak
   Cheung, S. C.
   Chan, W. K.
TI Human and program factors affecting the maintenance of programs with
   deployed design patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design patterns; Empirical study; Human factors; Pattern-deployed
   software; Program factors; Software maintenance
ID SOURCE CODE; ROLES
AB Context: Practitioners may use design patterns to organize program code. Various empirical studies have investigated the effects of pattern deployment and work experience on the effectiveness and efficiency of program maintenance. However, results from these studies are not all consistent. Moreover, these studies have not considered some interesting factors, such as a maintainer's prior exposure to the program under maintenance.
   Objective: This paper aims at identifying what factors may contribute to the productivity of maintainers in the context of making correct software changes when they work on programs with deployed design patterns.
   Method: We performed an empirical study involving 118 human subjects with three change tasks on a medium-sized program to explore the possible effects of a suite of six human and program factors on the productivity of maintainers, measured by the time taken to produce a correctly revised program in a course-based setting. The factors we studied include the deployment of design patterns and the presence of pattern-unaware solutions, as well as the maintainer's prior exposure to design patterns, the subject program and the programming language, and prior work experience.
   Results: Among the factors under examination, we find that the deployment of design patterns, prior exposure to the program and the presence of pattern-unaware solutions are strongly correlated with the time taken to correctly complete maintenance tasks. We also report some interesting observations from the experiment.
   Conclusion: A new factor, namely, the presence of pattern-unaware solutions, contributes to the efficient completion of maintenance tasks of programs with deployed design patterns. Moreover, we conclude from the study that neither prior exposure to design patterns nor prior exposure to the programming language is supported by sufficient evidences to be significant factors, whereas the subjects' exposure to the program under maintenance is notably more important. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Ng, T. H.; Yu, Yuen Tak; Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
   [Cheung, S. C.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
C3 City University of Hong Kong; Hong Kong University of Science &
   Technology
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
EM cssamng@cityu.edu.hk; csytyu@cityu.edu.hk; scc@cse.ust.hk;
   wkchan@cs.cityu.edu.hk
RI Liu, Jingyi/JWP-6326-2024; Chan, Wah Kheong/AGA-6636-2022; Liu,
   Chenyu/KBQ-8899-2024; Cheung, Shing Chi/U-5882-2018
OI Chan, Wah Kheong/0000-0002-9105-5837; Cheung, Shing
   Chi/0000-0002-3508-7172; Chan, Wing Kwong/0000-0001-7726-6235
FU City University of Hong Kong [7008039]; Research Grants Council of the
   Hong Kong Special Administrative Region. China [111410, 123207, 612108]
FX This work was supported in part by a Strategic Research Grant (Project
   Number 7008039) from City University of Hong Kong, and research grants
   (GRF Project Numbers 111410, 123207, and 612108) from the Research
   Grants Council of the Hong Kong Special Administrative Region. China.
CR Ahmed S, 2007, J SYST SOFTWARE, V80, P1408, DOI 10.1016/j.jss.2006.10.037
   [Anonymous], 2008, J ED RES COMP
   [Anonymous], JHOTDRAW
   [Anonymous], LECT NOTES COMPUT SC
   [Anonymous], JAVABEANS OBSERVERS
   [Anonymous], P 7 EUR C OBJ OR PRO
   [Anonymous], P 10 INT C QUAL SOFT
   [Anonymous], OUTLIER MATHWORLD WO
   [Anonymous], TUTORIAL WEBSITE
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Baniassad ELA, 2003, PROC INT CONF SOFTW, P352, DOI 10.1109/ICSE.2003.1201214
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bennett K, 1996, INFORM SOFTWARE TECH, V38, P673, DOI 10.1016/0950-5849(96)01116-0
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Hsueh NL, 2008, J SYST SOFTWARE, V81, P1430, DOI 10.1016/j.jss.2007.11.724
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Kerievsky J., 2005, Refactoring to Patterns
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kouskouras KG, 2008, J SYST SOFTWARE, V81, P1725, DOI 10.1016/j.jss.2007.12.807
   Li GQ, 2009, PROCEEDINGS OF 2009 8TH INTERNATIONAL CONFERENCE ON RELIABILITY, MAINTAINABILITY AND SAFETY, VOLS I AND II, P522, DOI 10.1109/ICRMS.2009.5270137
   Ng T., 2006, P 14 ACM SIGSOFT INT, P12
   Ng TH, 2007, PROC INT CONF SOFTW, P168
   Ng TH, 2005, INFORM SOFTWARE TECH, V47, P797, DOI 10.1016/j.infsof.2005.01.004
   Ng TH., 2006, P 2006 INT WORKSHOP, P51, DOI DOI 10.1145/1137702.1137713
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yates D., 1999, The Practice of Statistics, V1st
NR 42
TC 4
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 99
EP 118
DI 10.1016/j.infsof.2011.08.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500007
DA 2024-07-18
ER

PT J
AU Segura, S
   Hierons, RM
   Benavides, D
   Ruiz-Cortés, A
AF Segura, Sergio
   Hierons, Robert M.
   Benavides, David
   Ruiz-Cortes, Antonio
TI Mutation testing on an object-oriented framework: An experience report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Test adequacy; Test data generation; Automated
   analysis; Feature models
AB Context: The increasing presence of Object-Oriented (OO) programs in industrial systems is progressively drawing the attention of mutation researchers toward this paradigm. However, while the number of research contributions in this topic is plentiful, the number of empirical results is still marginal and mostly provided by researchers rather than practitioners.
   Objective: This article reports our experience using mutation testing to measure the effectiveness of an automated test data generator from a user perspective.
   Method: In our study, we applied both traditional and class-level mutation operators to FaMa, an open source Java framework currently being used for research and commercial purposes. We also compared and contrasted our results with the data obtained from some motivating faults found in the literature and two real tools for the analysis of feature models, FaMa and SPLOT.
   Results: Our results are summarized in a number of lessons learned supporting previous isolated results as well as new findings that hopefully will motivate further research in the field.
   Conclusion: We conclude that mutation testing is an effective and affordable technique to measure the effectiveness of test mechanisms in OO systems. We found, however, several practical limitations in current tool support that should be addressed to facilitate the work of testers. We also missed specific techniques and tools to apply mutation testing at the system level. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Segura, Sergio; Benavides, David; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, E-41012 Seville, Spain.
   [Hierons, Robert M.] Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB7 7NU, Middx, England.
C3 University of Sevilla; Brunel University
RP Segura, S (corresponding author), Univ Seville, Dept Comp Languages & Syst, Av Reina Mercedes S-N, E-41012 Seville, Spain.
EM sergiosegura@us.es; benavides@us.es
RI Cortés, Antonio Ruiz/B-9056-2008; Benavides, David/K-2791-2014; Segura,
   Sergio/A-9615-2011
OI Cortés, Antonio Ruiz/0000-0001-9827-1834; Benavides,
   David/0000-0002-8449-3273; Segura, Sergio/0000-0001-8816-6213; Hierons,
   Robert/0000-0002-4771-1446
FU European Commission; Spanish Government [TIN2009-07366]; Andalusian
   Government [TIC-2533, TIC-5906]
FX This work has been partially supported by the European Commission
   (FEDER) and Spanish Government under CICYT Project SETI (TIN2009-07366)
   and the Andalusian Government Projects ISABEL (TIC-2533) and THEOS
   (TIC-5906).
CR Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], SOFTWARE
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BENAVIDES D, FAMA FRAMEWORK
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   BRADBURY JS, 2006, WORKSH MUT AN, P4
   CETINA C, MOSKITT FEATURE MODE
   Chevalley P., 2003, International Journal on Software Tools for Technology Transfer, V5, P90, DOI 10.1007/s10009-002-0099-9
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DEREZINSKA A, 2008, P INT C DEP COMP SYS, P261, DOI DOI 10.1109/DEPCOS-RELCOMEX.2008.51
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   GOTLIEB A, 2003, COMP SOFTW APPL C 20, V3, P34
   GRNN B, 2009, P 4 INT WORKSH MUT T
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   JIA Y, 2009, TR0906 KINGS COLL CR
   Kim Sun-woo., 1999, 28 JAIIO: Symposium on Software Technology (SoST'99), P72
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   MA YS, 2005, DESCRIPTION CLASS MU
   MA YS, 2006, ICSE 06, P869
   Ma YS, 2009, ETRI J, V31, P140, DOI 10.4218/etrij.09.0108.0356
   Ma Yu-Seung., 2005, Description of method-level mutation operators for java
   MATEO PR, 2010, P 5 INT WORKSH MUT A
   MENDONCA M, SOFTWARE PRODUCT LIN
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   *PUR SYST, PUR VAR
   Segura Sergio, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P35, DOI 10.1109/ICST.2010.20
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
NR 35
TC 14
Z9 14
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1124
EP 1136
DI 10.1016/j.infsof.2011.03.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fernandez, A
   Insfran, E
   Abrahao, S
AF Fernandez, Adrian
   Insfran, Emilio
   Abrahao, Silvia
TI Usability evaluation methods for the web: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Usability evaluation methods; Web development; Systematic mapping
AB Context: In recent years, many usability evaluation methods (UEMs) have been employed to evaluate Web applications. However, many of these applications still do not meet most customers' usability expectations and many companies have folded as a result of not considering Web usability issues. No studies currently exist with regard to either the use of usability evaluation methods for the Web or the benefits they bring.
   Objective: The objective of this paper is to summarize the current knowledge that is available as regards the usability evaluation methods (UEMs) that have been employed to evaluate Web applications over the last 14 years.
   Method: A systematic mapping study was performed to assess the UEMs that have been used by researchers to evaluate Web applications and their relation to the Web development process. Systematic mapping studies are useful for categorizing and summarizing the existing information concerning a research question in an unbiased manner.
   Results: The results show that around 39% of the papers reviewed reported the use of evaluation methods that had been specifically crafted for the Web. The results also show that the type of method most widely used was that of User Testing. The results identify several research gaps, such as the fact that around 90% of the studies applied evaluations during the implementation phase of the Web application development, which is the most costly phase in which to perform changes. A list of the UEMs that were found is also provided in order to guide novice usability practitioners.
   Conclusions: From an initial set of 2703 papers, a total of 206 research papers were selected for the mapping study. The results obtained allowed us to reach conclusions concerning the state-of-the-art of UEMs for evaluating Web applications. This allowed us to identify several research gaps, which subsequently provided us with a framework in which new research activities can be more appropriately positioned, and from which useful information for novice usability practitioners can be extracted. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Fernandez, Adrian; Insfran, Emilio; Abrahao, Silvia] Univ Politecn Valencia, Dept Informat Syst & Computat, ISSI Res Grp, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Fernandez, A (corresponding author), Univ Politecn Valencia, Dept Informat Syst & Computat, ISSI Res Grp, Camino Vera S-N, Valencia 46022, Spain.
EM afernandez@dsic.upv.es; einsfran@dsic.upv.es; sabrahao@dsic.upv.es
RI Abrahão, Silvia/AAK-6976-2020; Insfran, Emilio/O-6934-2015
OI Abrahão, Silvia/0000-0003-3580-2014; Mengoni, Maura/0000-0003-2826-7455;
   Insfran, Emilio/0000-0003-0855-5564
FU Spanish Ministry of Science and Education [TIN2009-13838, AP2007-03731]
FX This research work is funded by the MULTIPLE project (TIN2009-13838) and
   the FPU program (AP2007-03731) from the Spanish Ministry of Science and
   Education.
CR ABRAHAO S, 2007, MATURING USABILITY Q, V10, P3
   Alva ME, 2003, LECT NOTES COMPUT SC, V2722, P386
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Batra S, 2007, LECT NOTES COMPUT SC, V4559, P243
   Becker SA, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.903167
   Bevan N, 2009, J USABILITY STUD, V4, P106
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Caldwell B, W3C WEB CONTENT ACCE
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Cunliffe D, 2000, INTERNET RES, V10, P295, DOI 10.1108/10662240010342577
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fleiss Joseph L., 1981, STAT METHODS RATES P
   Freire AP, 2007, SIGDOC'07: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P162
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   Gray WD, 1998, HUM-COMPUT INTERACT, V13, P203, DOI 10.1207/s15327051hci1303_2
   Hartson HR, 2001, INT J HUM-COMPUT INT, V13, P373, DOI 10.1207/S15327590IJHC1304_03
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Insfran E, 2008, LECT NOTES COMPUT SC, V5176, P81, DOI 10.1007/978-3-540-85200-1_10
   *INT ORG STAND, 1996, 924110 ISOIEC
   *INT ORG STAND, 1998, 12207 ISOIEC
   International Organization for Standardization, 2001, 91261 ISOIEC
   International Organization for Standardization, 2005, 25000 ISOIEC
   International Organization for Standarization, 1998, 924111 ISOIEC
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   McCrickard, 2004, P HUM FACT ERG SOC 4, V48, P2480
   Melia S., 2010, P INT S EMP SOFTW EN, P505
   Neuwirth CM, 2002, IEEE INTERNET COMPUT, V6, P44, DOI 10.1109/MIC.2002.991442
   Nielsen, 1994, HEURISTIC EVALUATION
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
NR 30
TC 235
Z9 255
U1 2
U2 57
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 789
EP 817
DI 10.1016/j.infsof.2011.02.007
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300001
DA 2024-07-18
ER

PT J
AU Lee, J
   Cheng, YC
AF Lee, Jonathan
   Cheng, Yu Chin
TI Change the face of software engineering education: A field report from
   Taiwan
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering education; Dysfunctions of software engineering
   education; Curriculum design and implementation; Evaluation criteria
AB Context: In Taiwan, the supply of software engineers provided by universities has suffered from both a quantity problem and a quality problem. An effort to change the software engineering education is in need.
   Objective: The Software Engineering Consortium (SEC) of Taiwan sets its objective to increase the number of college graduates that are better prepared for filling software development and maintenance jobs.
   Method: Four dysfunctions: avoidance of process, inattention to modeling, lack of awareness to software quality, and chasm between application domains and software engineering, of the current situation are identified. The effort to correct the dysfunctions involves design of a module-oriented software engineering curriculum, and organization of people, resource, and activities.
   Results: In the academic years from 2003 to 2008, both the number of software engineering courses offered and the enrollment size increased significantly by a space of some 250 courses and 5000 enrollments, respectively.
   Conclusion: The SEC effort to establishing software engineering modules has been received with enthusiasm by faculty members and students of the participating institutes. Inspired by the important foundational work such as SWEBOK and SE2004, we believe that the adopted strategy of identifying dysfunctions and then designing remedies to address these dysfunctions contributed significantly to the success of the SEC effort. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Lee, Jonathan] Natl Cent Univ, Dept Comp Sci & Informat Engn, Jhongli 320, Taiwan.
   [Cheng, Yu Chin] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
C3 National Central University; National Taipei University of Technology
RP Lee, J (corresponding author), Natl Cent Univ, Dept Comp Sci & Informat Engn, Jhongli 320, Taiwan.
EM yjlee@selab.csie.ncu.edu.tw; yccheng@csie.ntut.edu.tw
RI Liu, Kai/IST-6808-2023
CR Ahern D., 2005, CMMI SCAMPI distilled: Appraisals for process improvement
   Ahern D.M., 2003, CMMI DISTILLED PRACT
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Bourque P, 1999, IEEE SOFTWARE, V16, P35, DOI 10.1109/52.805471
   DAHL AL, 2006, LEVERAGING ICT DEV
   FORD G, 1991, CMUSE91TR2
   *GRAD SOFTW ENG, 2009, CURR GUID GRAD DEGR
   Honiden S, 2007, PROC INT CONF SOFTW, P708
   Humphrey W S, 1995, A discipline for software engineering
   Kang S, 2010, CONF SOFTW ENG EDUC, P49, DOI 10.1109/CSEET.2010.24
   LOU YM, 2006, ANAL TAIWAN SCI TECH
   Pyster A, 2009, IEEE SOFTWARE, V26, P94, DOI 10.1109/MS.2009.133
   2008, 2008 YB INFORM SERV
   2004, SOFTWARE ENG 2004 CU
NR 14
TC 9
Z9 9
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 51
EP 57
DI 10.1016/j.infsof.2010.08.005
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100005
DA 2024-07-18
ER

PT J
AU Vlaanderen, K
   Jansen, S
   Brinkkemper, S
   Jaspers, E
AF Vlaanderen, Kevin
   Jansen, Slinger
   Brinkkemper, Sjaak
   Jaspers, Erik
TI The agile requirements refinery: Applying SCRUM principles to software
   product management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product management; Requirements management; Requirements
   refinery; Agile development; SCRUM
AB Context: Although agile software development methods such as SCRUM and DSDM are gaining popularity, the consequences of applying agile principles to software product management have received little attention until now.
   Objective: In this paper, this gap is filled by the introduction of a method for the application of SCRUM principles to software product management. Method: A case study research approach is employed to describe and evaluate this method.
   Results: This has resulted in the 'agile requirements refinery', an extension to the SCRUM process that enables product managers to cope with complex requirements in an agile development environment. A case study is presented to illustrate how agile methods can be applied to software product management.
   Conclusions: The experiences of the case study company are provided as a set of lessons learned that will help others to apply agile principles to their software product management process. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Vlaanderen, Kevin; Jansen, Slinger; Brinkkemper, Sjaak] Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TB Utrecht, Netherlands.
   [Jaspers, Erik] Planon BV, NL-6503 AB Nijmegen, Netherlands.
C3 Utrecht University
RP Vlaanderen, K (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, POB 80-089, NL-3508 TB Utrecht, Netherlands.
EM k.vlaanderen@cs.uu.nl; s.jansen@cs.uu.nl; s.brinkkemper@cs.uu.nl;
   erik.jaspers@planon.nl
RI Brinkkemper, Sjaak/H-9931-2014; Roijackers, Slinger/Y-4244-2019
OI Brinkkemper, Sjaak/0000-0002-2977-8911; Roijackers,
   Slinger/0000-0003-3752-2868
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BERANDER P, 2007, BLEKINGE I TECHNOLOG
   Booch G., 1995, Object solutions: managing the object-oriented project
   Brinkkemper S., 2008, META MODELING SITUAT, P38
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Carlshamre P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P961, DOI 10.1109/DEXA.2000.875142
   Danait A, 2005, AGILE 2005, Proceedings, P214, DOI 10.1109/ADC.2005.9
   Dingsoyr T, 2006, LECT NOTES COMPUT SC, V4257, P5
   Ebert C, 2007, J SYST SOFTWARE, V80, P850, DOI 10.1016/j.jss.2006.09.017
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   GORCHEL L, 2000, PRODUCT MANAGERS HDB
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Jansen S., 2008, Information Systems Research Methods, Epistemology and Applications, P120
   Kittlaus H.B., 2009, Software Product Management and Pricing
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Pichler M, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P251
   PITTMAN M, 1993, IEEE SOFTWARE, V10, P43, DOI 10.1109/52.207226
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Robertson J., 1998, Volere. Requirements Specification Template. Edition 6.0
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   SCHWANNINGER C, 2009, LECT NOTES COMPUTER, V5795
   Stapleton J., 1999, Proceedings Technology of Object-Oriented Languages and Systems, P406, DOI DOI 10.1109/TOOLS.1999.779095
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Svensson R. B, 2008, IWSPM 08, P18
   Vahaniitty J., 2008, INT C SOFTW ENG, P25
   Van DeWeerd Inge, 2006, 2006 INT WORKSHOP SO, P3
   XU L, 2005, P 1 INT WORKSH PHIL, P531
   Yin R.K., 2011, Qualitative research from start to finish
NR 35
TC 76
Z9 90
U1 7
U2 112
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 58
EP 70
DI 10.1016/j.infsof.2010.08.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100006
DA 2024-07-18
ER

PT J
AU Arévalo, G
   Ducasse, S
   Gordillo, S
   Nierstrasz, O
AF Arevalo, Gabriela
   Ducasse, Stephane
   Gordillo, Silvia
   Nierstrasz, Oscar
TI Generating a catalog of unanticipated schemas in class hierarchies using
   Formal Concept Analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented development; Class hierarchy schemas; Source code
   analysis; Formal Concept Analysis
ID PATTERNS; DESIGN
AB Context: Inheritance is the cornerstone of object-oriented development, supporting conceptual modeling, subtype polymorphism and software reuse. But inheritance can be used in subtle ways that make complex systems hard to understand and extend, clue to the presence of implicit dependencies in the inheritance hierarchy.
   Objective: Although these dependencies often specify well-known schemas (i.e., recurrent design or coding patterns, such as hook and template methods), new unanticipated dependency schemas arise in practice, and can consequently be hard to recognize and detect. Thus, a developer making changes or extensions to an object-oriented system needs to understand these implicit contracts defined by the dependencies between a class and its subclasses, or risk that seemingly innocuous changes break them.
   Method: To tackle this problem, we have developed an approach based on Formal Concept Analysis. Our Formal Concept Analysis based-Reverse Engineering methodology (FoCARE) identifies undocumented hierarchical dependencies in a hierarchy by taking into account the existing structure and behavior of classes and subclasses.
   Results: We validate our approach by applying it to a large and non-trivial case study, yielding a catalog of hierarchy schemas, each one composed of a set of dependencies over methods and attributes in a class hierarchy. We show how the discovered dependency schemas can be used not only to identify good design practices, but also to expose bad smells in design, thereby helping developers in initial reengineering phases to develop a first mental model of a system. Although some of the identified schemas are already documented in existing literature, with our approach based on Formal Concept Analysis (FCA), we are also able to identify previously unidentified schemas.
   Conclusions: FCA is an effective tool because it is an ideal classification mining tool to identify commonalities between software artifacts, and usually these commonalities reveal known and unknown characteristics of the software artifacts. We also show that once a catalog of useful schemas stabilizes after several runs of FoCARE, the added cost of FCA is no longer needed. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Arevalo, Gabriela] FI Univ Austral, RA-1063 Buenos Aires, DF, Argentina.
   [Gordillo, Silvia] LIFIA UNLP, RA-1900 La Plata, Buenos Aires, Argentina.
   [Ducasse, Stephane] INRIA Lille Nord Europe, ADAM Team, FR-59650 Villeneuve Dascq, France.
   [Nierstrasz, Oscar] Univ Bern, SCG IAM, CH-3012 Bern, Switzerland.
   [Gordillo, Silvia] CICPBA, RA-1900 La Plata, Buenos Aires, Argentina.
   [Arevalo, Gabriela] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 Austral University; National University of La Plata; University of Bern;
   Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Arévalo, G (corresponding author), FI Univ Austral, Avda Juan de Garay 125, RA-1063 Buenos Aires, DF, Argentina.
EM garevalo@austral.edu.ar; ducasse@inria.fr;
   gordillo@sol.info.unlp.edu.ar; oscar@iam.unibe.ch
OI Nierstrasz, Oscar/0000-0002-9975-9791; Ducasse,
   Stephane/0000-0001-6070-6599
FU Swiss National Science Foundation (SNF) [200020-121594]; Swiss National
   Science Foundation (SNF) [200020_121594] Funding Source: Swiss National
   Science Foundation (SNF)
FX We thank Simon Denier, Andres Fortier, Alejandra Garrido, Jannik Laval
   and Lukas Renggli for useful comments that helped us to improve this
   paper. The last author gratefully acknowledges the financial support of
   the Swiss National Science Foundation for the project "Bringing Models
   Closer to Code" (SNF Project No. 200020-121594, October 2008-September
   2010).
CR Albin-Amiot H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P166, DOI 10.1109/ASE.2001.989802
   Alpert ShermanR., 1998, DESIGN PATTERNS SMAL
   [Anonymous], P INT WORKSH CONC LA
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   AREVALO G, 2005, THESIS U BERN BERN
   AREVALO G, 2003, P LMO 03, P47
   Arévalo G, 2006, LECT NOTES COMPUT SC, V4199, P513
   AUER K, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P505
   Beck K, 1994, LECT NOTES COMPUTER, V821, P139
   Beck Kent, 1997, SMALLTALK BEST PRACT
   Bergerot A, 2000, EUR J NEUROSCI, V12, P336
   Black AP, 2003, ACM SIGPLAN NOTICES, V38, P47, DOI 10.1145/949343.949311
   Budd Timothy., 1991, An introduction to object-oriented programming
   BUSCH PF, 2008, THESIS U AUSTRAL BUE
   CASAIS E, 1995, OBJECT ORIENTED SOFT, P201
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   COOK WR, 1992, SIGPLAN NOTICES, V27, P1, DOI 10.1145/141937.141938
   Dao M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P227, DOI 10.1109/METRIC.2002.1011341
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Denier S, 2009, INT SYMP EMP SOFTWAR, P79, DOI 10.1109/ESEM.2009.5316016
   DICKY H, 1995, BDA ONZIEMES JOURNEE, P25
   DICKY H, 1996, P OOPSLA 96, P251
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   Ducasse S, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P35
   Ducasse S, 2009, SOFTW SYST MODEL, V8, P5, DOI 10.1007/s10270-008-0081-4
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Falleri Jean-Remy, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P431, DOI 10.1109/ASE.2008.66
   Fowler Martin., 2003, UML DISTILLED, V3
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Godin R, 1998, THEOR PRACT OBJ SYST, V4, P117, DOI 10.1002/(SICI)1096-9942(1998)4:2<117::AID-TAPO6>3.0.CO;2-Q
   GODIN R, 1993, P OOPSLA 93 8 C OBJ, V28, P394
   GODIN R, 2002, ECOOP 2002, P58
   Greevy O, 2006, J SOFTW MAINT EVOL-R, V18, P425, DOI 10.1002/smr.340
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   GUEHENEUC YG, 2006, C SOFTW MAINT REENG
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Huchard M, 2000, RAIRO-INF THEOR APPL, V34, P521, DOI 10.1051/ita:2000129
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   KLIMAS EJ, 1996, SMALLTALK STYLE
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   LALONDE W, 1991, J OBJECT-ORIENT PROG, V3, P57
   LANGE DB, 1995, P OOPSLA 95, P342
   LANZA M, 2001, P OOPSLA 2001, P300
   LANZA M, 2001, P WORKSH FORM FDN SO
   LEBLANC H, 2000, THESIS U MONTPELLIER
   Lienhard A., 2005, PROC 20 IEEEACM INT, P66
   Mendelzon A, 1995, SOFTWARE-CONC TOOL, V16, P170
   Mihancea PF, 2006, INT C PROGRAM COMPRE, P285, DOI 10.1109/ICPC.2006.48
   MIHANCEA PF, 2009, CSMR 09, P7
   MIKHAJLOV L, 1998, LNCS, V1445, P355
   MOORE I, 1996, P 11 ANN C OBJ OR PR, P235
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   NIERE J, 2001, TRRI01222 U PAD DEP, P222
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   Nierstrasz Oscar, 2004, EUROPEAN RES CONSORT, V58, P24
   PHILIPPOW I, 2003, ECOOP WORKSH MOD VAR, P42
   ROUME C, 2002, OBJET, V8, P151
   SCHARLI N, 2005, THESIS U BERN
   SCHAUER R, 1999, P ICSM 99 INT C SOFT
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   SHARP A, 1997, SMALLTALK EXAMPLE
   Shull F., 1996, CSTR3597 U MAR COMP
   Snelting G, 1998, ACM SIGPLAN NOTICES, V33, P1, DOI 10.1145/277633.277634
   SNELTING G, 1998, ACM T PROGRAMMING LA
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Streckenbach M, 2004, ACM SIGPLAN NOTICES, V39, P315, DOI 10.1145/1035292.1029003
   Taenzer D., 1989, ECOOP '89. Proceedings of the 1989 European Conference on Object-Oriented Programming, P25
   Taivalsaari A, 1996, ACM COMPUT SURV, V28, P438, DOI 10.1145/243439.243441
   Wendehals L., 2003, P ICSE 2003 WORKSH D
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
   [No title captured]
   [No title captured]
   [No title captured]
NR 78
TC 11
Z9 15
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1167
EP 1187
DI 10.1016/j.infsof.2010.05.010
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Garousi, V
AF Garousi, Vahid
TI Experience and challenges with UML-driven performance engineering of a
   Distributed Real-Time System
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Performance Engineering; Performance tuning; Stress testing;
   Experiment; Distributed Real-Time Systems; UML
AB Context: Performance-related failures of Distributed and Real-Time Software Systems (DRTS's) can be very costly, e.g., explosion of a nuclear reactor. We reported in a previous work a stress testing methodology to detect performance-related Real-Time (RI) faults in DRTS's based on the design UML model of a System Under Test (SUT). The stress methodology aimed at increasing the chances of RT failures (violations in RT constraints).
   Objective: After stress testing a SUT and finding RT faults, an important immediate question is how to fix (debug) those RT faults and prevent the same RT violations in the future and after deployment. If appropriate solutions to this challenge cannot be found, stress testing and its findings (detection of RT faults) will be of no or little use to the quality assurance goals of the development team.
   Method: To move towards systematically solving performance-related problems causing RT faults, we develop a customized version of the standard Software Performance Engineering process and conduct an experiment on a DRTS. The process is iteratively applied to a SUT, while results from stress testing reveal that there are still scenarios in which RT constraints are violated.
   Results: Application of the performance engineering paradigm in this context on a real DRTS enables systematic analysis of performance-related defects and their fixations.
   Conclusion: The contributions of this work are an initial approach to software performance engineering based on stress testing, and an analysis, based on experimentation, of the open issues that need to be addressed in order to improve the approach. (C) 2010 Elsevier B.V. All rights reserved.
C1 Univ Calgary, Software Qual Engn Lab SoftQual, Dept Elect & Comp Engn, Schulich Sch Engn, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Garousi, V (corresponding author), Univ Calgary, Software Qual Engn Lab SoftQual, Dept Elect & Comp Engn, Schulich Sch Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca
OI Garousi, Vahid/0000-0001-6590-7576
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [341511-07]; Alberta Ingenuity New Faculty Award [200600673]
FX This work was supported by the Discovery Grant No. 341511-07 from the
   Natural Sciences and Engineering Research Council of Canada (NSERC) and
   also by the Alberta Ingenuity New Faculty Award No. 200600673. The
   author would like to thank James Miller for his helpful comments and
   suggestions on the early drafts of this article.
CR [Anonymous], 1999, DOING HARD TIME DEV
   [Anonymous], 2005, UML PROF SCHED PERF
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   AURUM BSA, 2005, VALUE BASED SOFTWARE
   BARBER S, 2004, PERFORMANCE TESTIN 1
   CHAN EK, 1992, IEEE T POWER SYST, V7, P320, DOI 10.1109/59.141721
   DANEELS A, 1999, P INT C ACC LARG EXP, P39
   Ebata Y, 2000, 2000 IEEE POWER ENGINEERING SOCIETY WINTER MEETING - VOLS 1-4, CONFERENCE PROCEEDINGS, P1656, DOI 10.1109/PESW.2000.847593
   FRANKS G, 1995, PERFORM EVALUATION, V24, P117, DOI 10.1016/0166-5316(95)96869-T
   Franks G., 1996, Software Quality, P15
   GAROUSI V, 2005, SCE0513 CARL U
   Garousi V., 2008, 10 ANN C GENETIC EVO, P1743
   GAROUSI V, 2007, SERG200703 U CALG
   GAROUSI V, 2007, SERG200701 U CALG
   GAROUSI V, 2006, P INT C SOFTW ENG, P391
   GAROUSI V, 2008, P IEEE INT C SOFTW T, P92
   Garousi V, 2008, J SYST SOFTWARE, V81, P161, DOI 10.1016/j.jss.2007.05.037
   Garousi V, 2010, IEEE T SOFTWARE ENG, V36, P778, DOI 10.1109/TSE.2010.5
   GITTENS M, 2004, THESIS U W ONTARIO
   Gomaa H., 2000, DESIGNING CONCURRENT
   Hammond J, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P102
   Hayes B, 2008, COMMUN ACM, V51, P9, DOI 10.1145/1364782.1364789
   HIRSH M, 2003, NEWSWEEK        0825
   KLEIN MH, 1996, CMUSEI95TR020
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kuhn DR, 1997, COMPUTER, V30, P31, DOI 10.1109/2.585151
   MAHESHWARI P, 2004, P WORKSH WEB INF SYS, P241
   Mos A, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P227, DOI 10.1109/EDOC.2002.1137712
   MOTSKO M, 2002, CMUSEI2002TR032
   *OMG, 2008, UML PROF MOD AN REAL
   *OMG, 2007, UML 2 1 1 SUP SPEC
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Ramler R, 2006, VALUE-BASED SOFTWARE ENGINEERING, P225, DOI 10.1007/3-540-29263-2_11
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Ruhe Gunther., 2003, Innovations in Decision Support Systems, V3, P143
   Smith C., 2002, ENCY SOFTWARE ENG
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   SMITH CU, 2007, WILL YOUR NEW DISTRI
   STOCKDALE M, 2009, AG VANC C MUCH AD AG, V4
   Tsai J., 1996, DISTRIBUTED REAL TIM
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   WILLEBEEKLEMAIR MH, 1993, IEEE T PARALL DISTR, V4, P979, DOI 10.1109/71.243526
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
NR 44
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 625
EP 640
DI 10.1016/j.infsof.2010.01.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 602PE
UT WOS:000278150500004
DA 2024-07-18
ER

PT J
AU Juric, MB
   Sasa, A
   Roman, I
AF Juric, Matjaz B.
   Sasa, Ana
   Roman, Ivan
TI WS-BPEL Extensions for Versioning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Versioning; BPEL; SOA; Business processes
ID WEB SERVICE COMPOSITION; SOFTWARE
AB This article proposes specific extensions for WS-BPEL (Business Process Execution Language) to support versioning of processes and partner links. It introduces new activities and extends existing activities, including partner links, invoke, receive, import, and onmessage activities. It proposes version-related extensions to variables and introduces version handlers. The proposed extensions represent a complete solution for process-level and scope-level versioning at development, deployment, and run-time. It also provides means to version applications that consist of several BPEL processes, and to put temporal constraints on versions. The proposed approach has been tested in real-world environment. It solves major challenges in BPEL versioning. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Juric, Matjaz B.; Roman, Ivan] Univ Maribor, FERI, Inst Informat, SI-2000 Maribor, Slovenia.
   [Sasa, Ana] Univ Ljubljana, FRI, Informat Syst Lab, SI-1000 Ljubljana, Slovenia.
C3 University of Maribor; University of Ljubljana
RP Juric, MB (corresponding author), Univ Maribor, FERI, Inst Informat, Smetanova 17, SI-2000 Maribor, Slovenia.
EM matjaz.juric@uni-mb.si
CR Agrawal A., WEB SERVICES HUMAN T
   Agrawal A., 2007, WS BPEL EXTENSION PE
   [Anonymous], 2008, BUSINESS PROCESS DRI
   [Anonymous], 2006, Business Process Execution Language for Web Services BPEL and BPEL4WS
   [Anonymous], 2007, Web services business process execution language version 2.0
   Biffl S., 2005, Value-Based Software Engineering
   BRADA P, 2001, ACM SIGSOFT SOFTWARE, V26, P297
   Brown K., 2004, Best practices for web services versioning
   Charfi A, 2004, LECT NOTES COMPUT SC, V3250, P168
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   Decker G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P296
   DONGSOO K, 2007, INT C CONV INF TECHN, P1154
   ERRADI A, 2005, P MIDDL WEB SERV MWS
   Fang R, 2008, P IEEE I C SERV COMP, P327, DOI 10.1109/SCC.2008.31
   GAUR H, 2007, BPEL COOKBOOK BEST P
   Ghedira C, 2006, ELECTRON NOTES THEOR, V146, P117, DOI 10.1016/j.entcs.2005.11.011
   Ginige JA, 2006, INT CONF E BUS ENG, P171
   *I SOFTW RES, 2005, XADL 2 0 HIGHL EXT A
   IRANI R, 2004, VERSIONING WEB SERVI
   Juric MB, 2009, J SYST SOFTWARE, V82, P1326, DOI 10.1016/j.jss.2009.03.001
   JURIC MB, 2007, SOA APPROACH INTEGRA
   Kaminski P., 2006, P 2006 C CTR ADV STU, P23, DOI [10.1145/1188966.1188997, DOI 10.1145/1188966.1188997]
   Kaminski P., 2006, Proceedings of the 2006 international workshop on Self-adaptation and self-managing systems (SEAMS 2006), P86
   KATZ RH, 1990, ACM COMPUT SURV, P375
   KENYON J, 2003, WEB SERVICES J
   Klahold P., 1986, Proceedings of Very Large Data Bases. Twelfth International Conference on Very Large Data Bases, P319
   Kloppmann M., 2005, WS BPEL EXTENSION SU
   LIE A, 1989, LNCS, V387, P191
   Lin YJ, 1996, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.1996.493425
   Liu YD, 2006, ACM SIGPLAN NOTICES, V41, P325, DOI 10.1145/1167515.1167502
   Louridas P, 2008, IEEE SOFTWARE, V25, P85, DOI 10.1109/MS.2008.42
   Neth J, 2008, VERSIONING BUSINESS
   *OR, 2007, OR BPEL PROC MAN DEV
   PELTZ C, 2004, DESIGN STRATEGIES WE
   Ponnekanti SR, 2004, LECT NOTES COMPUT SC, V3231, P331
   REICHENBERGER C, 1994, SOFTWARE-CONC TOOL, V15, P97
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Senivongse T., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P201, DOI 10.1109/DOA.1999.794027
   Snodgrass RT, 2008, DATA KNOWL ENG, V65, P223, DOI 10.1016/j.datak.2007.09.003
   TALENS C, 1993, P 19 VLDB C IR, P62
   Tripathi UK, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P155, DOI 10.1109/ISADS.2007.25
   Vinoski S, 2004, IEEE INTERNET COMPUT, V8, P87, DOI 10.1109/MIC.2004.1260709
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
   *WIK, 2008, SOFTW VERS
   Wohlin C, 2000, INFORM SOFTWARE TECH, V42, P983, DOI 10.1016/S0950-5849(00)00150-6
   ZELLER A, 1995, P 3 ACM SIGSOFT S FD, P151
NR 48
TC 10
Z9 10
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1261
EP 1274
DI 10.1016/j.infsof.2009.03.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500005
DA 2024-07-18
ER

PT J
AU Thomas, S
   Williams, L
   Xie, T
AF Thomas, Stephen
   Williams, Laurie
   Xie, Tao
TI On automated prepared statement generation to remove SQL injection
   vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SQL injection; Prepared statement; Fix automation
AB Since 2002, over 10% of total cyber vulnerabilities were SQL injection vulnerabilities (SQLIVs). This paper presents an algorithm of prepared statement replacement for removing SQLIVs by replacing SQL statements with prepared statements. Prepared statements have a static structure, which prevents SQL injection attacks from changing the logical structure of a prepared statement. We created a prepared statement replacement algorithm and a corresponding tool for automated fix generation. We conducted four case studies of open source projects to evaluate the capability of the algorithm and its automation. The empirical results show that prepared statement code correctly replaced 94% of the SQLIVs in these projects. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Thomas, Stephen; Williams, Laurie; Xie, Tao] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Thomas, S (corresponding author), N Carolina State Univ, Dept Comp Sci, Box 8206, Raleigh, NC 27695 USA.
EM stephen.smthomas@gmail.com; williams@csc.ncsu.edu; xie@csc.ncsu.edu
FU North Carolina State Center for Advanced Computers and Communications
   (CACC); National Science Foundation
FX We Would like to thank Rada Chirkova and Michael Gegick for their
   contributions to this research. We would also like to thank the NCSU
   Software Engineering Realsearch group for their careful review and
   helpful suggestions for the paper. Funding for this research was
   provided by the North Carolina State Center for Advanced Computers and
   Communications (CACC) and the National Science Foundation.
CR Anley C., 2002, ADV SQL INJECTION SQ
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   Audsley N, 2003, AEROSP CONF PROC, P2863
   Barnum S, 2005, IEEE SECUR PRIV, V3, P74, DOI 10.1109/MSP.2005.45
   BORDIN M, 2007, INT WORKSH JAV TECHN, P63
   BRYANT RE, 2005, 27 INT C SOFTW ENG I, P312
   BUEHRER G, 2005, 5 INT WORKSH SOFTW E, P106
   CHEON Y, 2002, 16 EUR C OBJ OR PROG, P29
   Florescu D, 2004, VLDB J, V13, P294, DOI 10.1007/s00778-004-0137-1
   Halfond W.G. J., 2005, Proceedings of the third international workshop on Dynamic analysis, P1
   HALFOND WGJ, 2006, INT S SEC SOFTW ENG
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   HALLOND WGJ, 2006, 14 ACM SIGSOFT INT S, P175
   HOVEMEYER D, 2004, 19 ANN ACM SIGPLAN C, P92
   Howard M., 2003, Writing Secure Code
   Huang XG, 2004, CHINESE J ELECTRON, V13, P40
   KEIZER G, 2007, ONE AT A TIME HACKER, V1
   KIRK J, 2006, DATABASES ASSAULTED, V1
   Lam MonicaS., 2005, Proceedings of Principles of Database Systems (PODS), P12
   LIVSHITS B, 2005, WORKSH DEF STAT ART, P1
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   LIVSHITS VB, 2004, COMP SEC APPL C TUCS, P2
   Martin J, 2005, IEEE INTELL SYST, V20, P19, DOI 10.1109/MIS.2005.102
   NGUYENTUONG A, 2005, 20 IFIP INT INF SEC, P12
   NIST, 2007, NAT VULN DAT
   SU Z, 2006, 33 ACM SIGPLAN SIGAC, P372
NR 26
TC 29
Z9 37
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 589
EP 598
DI 10.1016/j.infsof.2008.08.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 400TM
UT WOS:000262891500004
DA 2024-07-18
ER

PT J
AU Vassilakis, C
   Lepouras, G
   Katifori, A
AF Vassilakis, C.
   Lepouras, G.
   Katifori, A.
TI A heuristics-based approach to reverse engineering of electronic
   services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE e-Government; Electronic services; Reverse engineering; Organizational
   knowledge
AB Since the beginning of the electronic era, public administrations and enterprises have been developing services, through which citizens, businesses and customers can conduct their transactions with the offering entity. Each electronic service contains a substantial amount of knowledge in the form help texts, rules of use or legislation excerpts, examples, validation checks, etc. This knowledge has been extracted from domain experts when the services were developed, especially in the phases of analysis and design, and was subsequently translated into software. In the latter format though, knowledge cannot be readily used in organizational processes, such as knowledge sharing and development of new services. in this paper, we present an approach for reverse engineering electronic services in order to create knowledge items of high levels of abstraction, which can be used in knowledge sharing environments as well as in service development platforms. The proposed approach has been implemented and configured to generate artifacts for the SmartGov service development platform. Finally, an evaluation of the proposed approach is presented to assess its efficiency regarding various aspects of the reverse engineering process. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Vassilakis, C.; Lepouras, G.] Univ Peloponnese, Dept Comp Sci & Technol, Terma Karaiskaki 22100, Tripoli, Greece.
   [Katifori, A.] Univ Athens, Dept Informat & Telecommun, Athens 15784, Greece.
C3 University of Peloponnese; National & Kapodistrian University of Athens
RP Vassilakis, C (corresponding author), Univ Peloponnese, Dept Comp Sci & Technol, Terma Karaiskaki 22100, Tripoli, Greece.
EM costas@uop.gr; gl@uop.gr; vivi@di.uoa.gr
RI Costas, Vassilakis/AAH-5948-2019; Lepouras, Georgios/AAM-3058-2021
OI Costas, Vassilakis/0000-0001-9940-1821; Lepouras,
   Georgios/0000-0001-6094-3308
CR ABECKER A, 2001, IJCAI 2001 WORKSH KN
   *AD SYST INC, 2005, AD LIVECYCLE DES
   *AD SYST INC, 2005, AD GOV FORMS
   *BEA SYST INC, 2005, BEA LOG WORKSH
   *CAPT, 2005, BUS INF DEL SOL
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   *COGN, 2005, COGN BUS INT OV
   *COMP SCI CORP, 2005, CSC KNOWL MAN
   Desouza KC, 2003, COMMUN ACM, V46, P85, DOI 10.1145/777313.777317
   Di Lucca GA, 2004, J SOFTW MAINT EVOL-R, V16, P71, DOI 10.1002/smr.281
   Di Lucca GA, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/WCRE.2001.957827
   *E EUR, 2000, COMM LIST BAS PUBL S
   *EMP, 2005, E CORP KNOWL SUIT
   Essanaa SB, 2004, LECT NOTES COMPUT SC, V3136, P362
   ESSANAAA SB, 2004, P 4 INT C WEB ENG MU, P306
   GASSON S, 2004, P 37 ANN HAW INT C S, V8
   GEORGIADIS P, 2002, P 1 INT C EL GOV EGO, P362
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   PAGANELLI L, 2003TR56
   *SMARTGOV CONS, 2004, SMARTGOV PROJ DEL D1
   *SMARTGOV CONS, 2002, SMARTGOV PROJ DEL D4
   SOWA J, 1988, CONCEPTUAL STRUCTURE
   *THEBRAIN TECHN CO, 2005, THEBRAIN ENT KNOWL P
   Tilley SR, 2000, ANN SOFTW ENG, V9, P249, DOI 10.1023/A:1018985010508
   *TOP WEB, 2004, US SAT US SURV EGOVE
   *UN, E COMM DEV REP 2004
   Vassilakis C., 2003, Telematics and Informatics, V20, P315, DOI 10.1016/S0736-5853(03)00011-X
   VASSILAKIS C, 2005, E SERVICE J, V4
NR 28
TC 1
Z9 1
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 325
EP 336
DI 10.1016/j.infsof.2008.04.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900007
DA 2024-07-18
ER

PT J
AU Babar, A
   Cox, K
   Tosic, V
   Bleistein, S
   Verner, J
AF Babar, Abdul
   Cox, Karl
   Tosic, Vladimir
   Bleistein, Steven
   Verner, June
TI Integrating B-SCP and MAP to manage the evolution of strategic IT
   requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; evolution; business strategy; strategic
   alignment; B-SCP; MAP
ID INFORMATION-TECHNOLOGY; BUSINESS; ALIGNMENT
AB This paper presents the first steps in a research project that integrates two requirements engineering methodologies, B-SCP and MAP, in order to manage the evolution of strategic IT. Our integration approach presents a mechanism to validate and verify MAP requirements against B-SCP requirements and vice versa. MAP has an inbuilt Gap Analysis process which saves the overhead of inventing a new approach to deal with requirements evolution. In addition, MAP extends B-SCP's capability by the addition of non-deterministic process modelling. Our solution is evaluated on an exemplar case study which looks at a system built for Seven Eleven Japan. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Babar, Abdul] Univ New S Wales, Sch Engn & Comp Sci, ESE Grp, Sydney, NSW 2000, Australia.
   [Babar, Abdul; Cox, Karl; Tosic, Vladimir; Bleistein, Steven; Verner, June] Univ New S Wales, NICTA, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney; University of New South Wales
   Sydney; Australian National University
RP Babar, A (corresponding author), Univ New S Wales, Sch Engn & Comp Sci, ESE Grp, Level 1,S Pod,Bay 15 Locomot Workshop, Sydney, NSW 2000, Australia.
EM abdul.babar@nicta.com.au; karl.cox@nicta.com.au;
   vladimir.tosic@nicta.com.au; steven.bleistein@nicta.com.au;
   june.verner@nicta.com.au
OI Babar, Abdul/0009-0005-5437-7844
CR BABAR A, 2008, 23 ACM S AP IN PRESS
   BABAR A, 2007, 22 ACM S APPL COMP S, P120
   BABAR A, 2007, 1 INT WORKSH ENT INF, P835
   Bennasri S, 2004, LECT NOTES COMPUT SC, V3261, P523
   BENSOAU M, 1997, 7 11 JAPAN MANAGING
   Bleistein SJ, 2006, J SYST SOFTWARE, V79, P362, DOI 10.1016/j.jss.2005.04.033
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Brancheau JC, 1996, MIS QUART, V20, P225, DOI 10.2307/249479
   BUBENKO JA, 1994, 4 EUR JAP SEM INF MO
   CHAMPION REM, 1996, INT C REQ ENG ICRE 9
   CHAPIN D, 2005, BUSINESS MOTIVATION
   Croteau AM, 2001, J STRATEGIC INF SYST, V10, P77, DOI 10.1016/S0963-8687(01)00044-0
   DARIMONT R, 1996, 4 ACM SIGSOFT S FDN
   Etien A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P125, DOI 10.1109/RE.2005.37
   GIORGINI P, 2004, AGENT ORIENTED SOFTW
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   HOSOYA H, 2000, NEW PERSPECTIVES Q, V17
   HUBER N, 2002, COMPUTER WEEKLY 0321
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Kavakli V, 1999, INFORM SYST, V24, P187, DOI 10.1016/S0306-4379(99)00015-0
   Kokune A, 2007, J SYST SOFTWARE, V80, P314, DOI 10.1016/j.jss.2006.04.035
   LOUCOPOULOS P, 1995, INT J COOP INF SYST, V4, P45, DOI 10.1142/S0218843095000032
   LOUCOPOULOS P, 2003, WORKSH REQ ENG BUS P
   Luftman J., 2004, MIS Quarterly Executive, V3, P89
   MAKINO N, 1997, JAPAN ECHO, V44, P44
   McKeen J., 2003, Making IT Happen: Critical Issues in IT Management
   Nurcan S, 2005, BUS PROCESS MANAG J, V11, P628, DOI 10.1108/14637150510630828
   OLIVER RW, 2001, J BUS STRAT, P7
   Ould M.A., 2005, Business Process Management: A Rigorous Approach
   Porter M.E., 1996, HARVARD BUS REV, V74, P61
   PORTER ME, 1987, HARVARD BUS REV, V65, P43
   RAPP WV, 2002, INFORM TECHNOLOGY ST, P163
   Reich B., 2003, DATA BASE ADV INF SY, V34, P28
   Reynolds P, 2007, J SYST SOFTWARE, V80, P285, DOI 10.1016/j.jss.2006.04.036
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P66
   Rolland C, 2004, REQUIR ENG, V9, P1, DOI 10.1007/s00766-003-0168-y
   Rummler G. A., 1995, JOSSEY BASS MANAGEME
   SALINESI C, 2004, CAISE 2004, P338
   Tallon PP, 2000, J MANAGE INFORM SYST, V16, P145, DOI 10.1080/07421222.2000.11518269
   Thevenet LH, 2007, LECT NOTES COMPUT SC, V4495, P203
   v Lamsweerde A., 2000, REQUIREMENTS ENG YEA
   Watson R. T., 1991, Information and Management, V20, P213, DOI 10.1016/0378-7206(91)90056-8
   WATTERS D, 2004, IBM STRATEGY CHANGE
   Weill P., 2001, Place to space: moving to ebusiness models
   YU E, 1993, IEEE INT S REQ ENG
   2001, ECONOMIST, V359, P77
   [No title captured]
NR 48
TC 4
Z9 4
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 815
EP 831
DI 10.1016/j.infsof.2007.11.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000015
DA 2024-07-18
ER

PT J
AU Ahmed, F
   Capretz, LF
AF Ahmed, Faheem
   Capretz, Luiz Fernando
TI Managing the business of software product line: An empirical
   investigation of key business factors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE key business factor; software product line; software engineering
   economics; management; strategic planning; marketing strategy
ID MARKET ORIENTATION
AB Business has been highlighted as a one of the critical dimensions of software product line engineering. This paper's main contribution is to increase the understanding of the influence of key business factors by showing empirically that they play an imperative role in managing a successful software product line. A quantitative survey of software organizations currently involved in the business of developing software product lines over a wide range of operations, including consumer electronics, telecommunications, avionics, and information technology, was designed to test the conceptual model and hypotheses of the study. This is the first study to demonstrate the relationships between the key business factors and software product lines. The results provide evidence that organizations in the business of software product line development have to cope with multiple key business factors to improve the overall performance of the business, in addition to their efforts in software development. The conclusions of this investigation reinforce current perceptions of the significance of key business factors in successful software product line business. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Western Ontario, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
C3 Western University (University of Western Ontario)
RP Ahmed, F (corresponding author), Univ Western Ontario, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
EM fahmed@engga.uwo.ca; lcapretz@eng.uwo.ca
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   [Anonymous], 1986, Applied multivariate statistics for the social sciences
   ANSOFF HI, 1967, HARVARD BUS REV, V45, P71
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Bennett P.D., 1988, Dictionary of Marketing Terms
   Bergstrom A., 2000, STRATEGY LEADERSHIP, V28, P10, DOI DOI 10.1108/10878570010378645
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Böckle G, 2005, LECT NOTES COMPUT SC, V3714, P124
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   CATTELL RB, 1966, MULTIVAR BEHAV RES, V1, P245, DOI 10.1207/s15327906mbr0102_10
   Clements P., 2002, Software product lines
   CLEMENTS PC, 2001, P 4 INT WORKSH SOFTW, P69
   Cohen J., 1988, STAT POWER ANAL BEHA
   Comrey A. L., 1992, A first course in factor analysis, DOI DOI 10.4324/9781315827506-16
   Cronbach L.J., 1971, ED MEASUREMENT, DOI DOI 10.1037/14353-009
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   CROSBY LA, 1990, J MARKETING, V54, P68, DOI 10.2307/1251817
   DAVENPORT TH, 1993, ORICESS INNOVATION
   DECASTRO J, 1995, J BUS RES, V33, P165, DOI 10.1016/0148-2963(94)00066-N
   Ebert C, 2003, PROC INT CONF SOFTW, P520, DOI 10.1109/ICSE.2003.1201231
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   Fritsch C, 2004, LECT NOTES COMPUT SC, V3154, P228
   Harrison E.R., 1995, Management Decision, V33, P48
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   Joreskog K. G., 1982, Systems under indirect observation: Causality, structure, prediction, P263
   KAISER HF, 1970, PSYCHOMETRIKA, V35, P401, DOI 10.1007/BF02291817
   KAISER HF, 1960, EDUC PSYCHOL MEAS, V20, P141, DOI 10.1177/001316446002000116
   KANG KC, 2002, P 2 INT C SOFTW PROD, P366, DOI DOI 10.1007/3-540-45652-X_23
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   KOHLI AK, 1990, J MARKETING, V54, P1, DOI 10.2307/1251866
   Martensen Anne., 1999, International Journal of Quality Reliability Management, V16 Issue, P734, DOI DOI 10.1108/02656719910283344
   NARVER JC, 1990, J MARKETING, V54, P20, DOI 10.2307/1251757
   Niemelä E, 2005, LECT NOTES COMPUT SC, V3714, P186
   Nunnally J.C., 1997, Psychometric Theory, V3rd
   OMMERING RV, 2000, P C SOFTW ARCH PROD, P187
   ROBINSON WT, 1992, STRATEGIC MANAGE J, V13, P609, DOI 10.1002/smj.4250130804
   Saltelli A., 2000, SENSITIVITY ANAL PRO
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   SUTTON B, 1993, LIBR INFORM SCI RES, V15, P299
   Toft P, 2000, KLUWER INT SER ENG C, V576, P111
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   Wappler T, 2000, KLUWER INT SER ENG C, V576, P73
   Wijnstra J. G., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P68
   Wilson DavidT., 1995, J ACAD MARKET SCI, V23, P335, DOI DOI 10.1177/009207039502300414
NR 48
TC 20
Z9 24
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 194
EP 208
DI 10.1016/j.infsof.2006.05.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 118EY
UT WOS:000242926300009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hong, ZW
   Lin, JM
   Jiau, HC
   Fang, GM
   Chiou, CW
AF Hong, Zeng-Wei
   Lin, Jim-Min
   Jiau, Hewijin C.
   Fang, Guo-Ming
   Chiou, Che Wun
TI Encapsulating windows-based software applications into reusable
   components with design patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reuse; COTS-based system (CBS); design patterns; Graphic
   Mechanical Part Management System (GMPMS)
ID DECOMPOSING LEGACY PROGRAMS; CORBA; SYSTEMS; STEP
AB Reusing software by integrating Commercial Off-The-Shelf (COTS) applications into a software system is maturing in practice. Our previous work [1] presented a component wrapping approach to convert Windows-based COTS applications into CORBA objects. A formal and generalized representation of the conversion process for a Windows-based COTS application into a reusable software component would be useful and desirable for applying such software reuse to COTS-based system development. This study addresses a pattern-based representation of our experience. The patterns in this study offer clear documentation and sufficient information for a software developer to develop a COTS-based software system rapidly. An example system, Graphic Mechanical Part Management System (GMPMS) assembling two COTS applications under MS-DOS and MS-Windows 2000/XP, respectively, is also developed in this study to reveal how the patterns are utilized. (C) 2005 Elsevier B.V. All rights reserved.
C1 Feng Chia Univ, Dept Comp Sci & Informat Engn, Taichung 40724, Taiwan.
   Natl Cheng Kung Univ, Dept Elect Engn, Tainan 701, Taiwan.
   Ching Yun Univ, Dept Elect Engn, Taoyuan 320, Taiwan.
C3 Feng Chia University; National Cheng Kung University; Chien Hsin
   University of Science & Technology
RP Lin, JM (corresponding author), Feng Chia Univ, Dept Comp Sci & Informat Engn, Taichung 40724, Taiwan.
EM jimmy@fcu.edu.tw
OI Hong, Zeng-Wei/0000-0002-5090-2788
CR Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   Brodie M., 1995, MIGRATING LEGACY SYS
   Canfora G, 1996, SOFTWARE PRACT EXPER, V26, P25, DOI 10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.0.CO;2-T
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Canfora G, 1998, PROG COMPREHEN, P136, DOI 10.1109/WPC.1998.693336
   Canfora G, 2000, J SYST SOFTWARE, V54, P99, DOI 10.1016/S0164-1212(00)00030-3
   Canfora G, 1998, IEEE T SOFTWARE ENG, V24, P721, DOI 10.1109/32.713328
   Cimitile A, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P59, DOI 10.1109/WCRE.1998.723176
   DeLucia A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P122, DOI 10.1109/ICSM.1997.624238
   Fatoohi R, 2003, SOFTWARE PRACT EXPER, V33, P1, DOI 10.1002/spe.492
   Gamma Erich., 1994, DESIGN PATTERNS
   GOEDICKE M, 2002, J SOFTWARE MAINTENAN, P1
   Lakhotia A, 1997, J SYST SOFTWARE, V36, P211, DOI 10.1016/0164-1212(95)00098-4
   Lee SC, 2000, INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/MMSE.2000.897225
   Lin JM, 1997, P INT COMP SOFTW APP, P402, DOI 10.1109/CMPSAC.1997.625023
   LIN JM, 1992, J SYST SOFTWARE, V18, P207, DOI 10.1016/0164-1212(92)90098-5
   Lin JM, 2004, INFORM SOFTWARE TECH, V46, P403, DOI 10.1016/j.infsof.2003.08.003
   LIN JM, 1992, P 1992 INT COMP S DE, P13
   Sang J, 2001, SOFTWARE PRACT EXPER, V31, P1313, DOI 10.1002/spe.415
   SCHMIDT DC, 1999, SIGS, V11
   Schmidt Douglas., 1999, PATTERN ORIENTED SOF, V2
   SERRANO M, 2000, P 13 INT C IND ENG A, P79
   Serrano M. A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P86, DOI 10.1109/ICSM.1999.792579
   Serrano MA, 2002, J SYST SOFTWARE, V64, P37, DOI 10.1016/S0164-1212(02)00020-1
   Sneed HM, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P303
   Sneed HM, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P59, DOI 10.1109/WSE.2003.1234009
   Sneed HM, 1998, PROC IEEE INT CONF S, P86, DOI 10.1109/ICSM.1998.738496
   SPINELLIS D, 2000, J INFORMATION SOFTWA, P609
   WU JT, 2003, P 7 BIENN WORLD C IN
NR 29
TC 6
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 619
EP 629
DI 10.1016/j.infsof.2005.06.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900015
DA 2024-07-18
ER

PT J
AU Woodward, MR
   Hennell, MA
AF Woodward, Martin R.
   Hennell, Michael A.
TI On the relationship between two control-flow coverage criteria: all
   JJ-paths and MCDC
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software testing; control-flow coverage criteria; all JJ-paths; MCDC
ID FORMAL ANALYSIS
AB Coverage criteria may be used to assess the adequacy of software test data. Improved test data, that takes account of any inadequacies identified by lack of coverage, may then be developed. It is natural to seek ways of comparing different criteria and the 'subsumes' relationship is one such way: one criterion subsumes another, if satisfying the first always implies satisfaction of the second. This paper considers two criteria: ball jump-to-jump paths' (all JJ-paths) and 'modified condition/decision coverage' (MCDC). It might be anticipated that there would be a relationship between these criteria since both are based on advanced control-flow concepts. MCDC has particular importance since it is involved in the DO-178B standard for avionics software. However, it is shown that 'all JJ-paths' and MCDC are, in general. incomparable. but for programs written under certain specific constraints 'all JJ-paths' subsumes MCDC. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ Liverpool, Dept Comp Sci, Liverpool L69 7ZF, Merseyside, England.
   LDRA Ltd, Wirral CH41 5LH, Merseyside, England.
C3 University of Liverpool
RP Woodward, MR (corresponding author), Univ Liverpool, Dept Comp Sci, Chadwick Bldg,Peach St, Liverpool L69 7ZF, Merseyside, England.
EM m.r.woodward@csc.liv.ac.uk; mike.hennell@ldra.com
CR [Anonymous], P 2 INT C SOFTW ENG
   Binder R.V., 2000, AW OBJ TECHNOL S
   Chilenski J.J., 2001, INVESTIGATION 3 FORM
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   HAMLET R, 1989, ACM SIGSOFT, V14, P28, DOI 10.1145/75309.75313
   Kapoor K, 2005, SOFTW TEST VERIF REL, V15, P21, DOI 10.1002/stvr.306
   Kapoor K, 2004, SOFTW TEST VERIF REL, V14, P167, DOI 10.1002/stvr.303
   Myers Glenford J., 2011, The Art of Software Testing
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   RTCA Incorporated, 1992, DO178B RTCA INC
   WEISER MD, 1985, IEEE SOFTWARE, V2, P80, DOI 10.1109/MS.1985.230356
   Weyuker E. J., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P100, DOI 10.1109/METRIC.1993.263796
   WOODWARD M, 2001, SOFTWARE FOCUS, V2, P93
   WOODWARD MR, 1980, IEEE T SOFTWARE ENG, V6, P278, DOI 10.1109/TSE.1980.230473
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H, 1996, IEEE T SOFTWARE ENG, V22, P248, DOI 10.1109/32.491648
NR 18
TC 22
Z9 23
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 433
EP 440
DI 10.1016/j.infsof.2005.05.003
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900001
DA 2024-07-18
ER

PT J
AU Cao, J
   Wang, J
   Law, K
   Zhang, SS
   Li, ML
AF Cao, J
   Wang, J
   Law, K
   Zhang, SS
   Li, ML
TI An interactive service customization model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE service customization; service process; goal ontology; process component
ID MASS CUSTOMIZATION; WEB
AB Mass customization has become one of the key strategies for a service provider to differentiate itself from its competitors in a highly segmented global service market. This paper proposes an interactive service customization model to support individual service offering for customers. In this model, not only that the content of an activity is customizable, but the process model can also be constructed dynamically according to the customer's requirements. Based on goal ontology, the on-demand customer requirements are transformed into a high-level service process model. Process components, which are building blocks for reusable standardized service processes, are designed to support on-demand process composition. The customer can incrementally define the customized service process through a series of operations, including activation of goal decomposition, reusable component selection, and process composition. In this paper, we first discuss the key requirements of the service customization problem. We then present in detail a knowledge-based customizable service process model and the accompanying customization method. Finally we demonstrate the feasibility of the our approach through a case Study of the well-known travel planning problem and present a prototype system that enables users to interactively organize a satisfying travel plan. (c) 2005 Elsevier B.V. All rights reserved.
C1 Shanghai Jiao Tong Univ, Dept Comp Sci & Tecnol, Shanghai 200030, Peoples R China.
   Stanford Univ, Dept Civil & Environm Engn, Stanford, CA 94305 USA.
C3 Shanghai Jiao Tong University; Stanford University
RP Shanghai Jiao Tong Univ, Dept Comp Sci & Tecnol, 1954 Huashan Rd, Shanghai 200030, Peoples R China.
EM cao-jian@cs.sjtu.edu.cn
RI Li, Minglu/B-7695-2009
CR Aiello M, 2002, LECT NOTES COMPUT SC, V2444, P76
   Ankolekar A, 2002, LECT NOTES COMPUT SC, V2342, P348
   CASATI F, 2002, HPL200039 SOFTW TECH
   CHIU D, 1998, CSCW 98 WORKSH AD WO
   CHUN SA, 2002, P 2 NAT C DIG GOV LA
   Chung PWH, 2003, KNOWL-BASED SYST, V16, P149, DOI 10.1016/S0950-7051(02)00080-1
   Duray R, 2000, J OPER MANAG, V18, P605, DOI 10.1016/S0272-6963(00)00043-7
   Fensel D., 2002, ELETRONIC COMMERCE, V1, P113, DOI DOI 10.1016/S1567-4223(02)00015-7
   GIACOMO P, 2001, COMPUTER NETWORKS IN, V37, P95
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guarino N, 1998, FR ART INT, V46, P3
   Heimann P, 1996, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1996.493428
   IBM, 2003, BUS PROC EX LANG WEB
   KIM J, 2004, 2004 AAAI SPRING S
   LIANGZHAO Z, 2002, LECT NOTES COMPUTER, V2444, P141
   Malone, 2003, ORG BUSINESS KNOWLED
   MCILRAITH S, 2002, P INT C PRINC KNOWL, V4, P482
   *OASIS, 2002, UDDI VERS 2 04 API
   Orriëns B, 2003, LECT NOTES COMPUT SC, V2819, P14
   PELTZ C., 2003, WEB SERVICE ORCHESTR
   Peters L, 2000, INT J INFORM MANAGE, V20, P103, DOI 10.1016/S0268-4012(99)00059-6
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   SIVASHANMUGAM K, 2003, 03008 LSDIS LAB DEP
   *SMI, 2002, SMI20020943
   Srivastava B., 2003, ICAPS 2003 WORKSHOP, P28
   VANDERAALST WMP, 2002, FITTR200205
   W3C, WEB SERV DESCR LANG
   *W3C, 2003, SIMPL OBJ ACC PROT
   *WFMC, 2000, INT WF XML BIND
   *WSUI WORK GROUP, 2002, WSUI EX WHIT PAP
NR 32
TC 31
Z9 35
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 280
EP 296
DI 10.1016/j.infsof.2005.04.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Grimstad, S
   Jorgensen, M
   Molokken-Ostvold, K
AF Grimstad, S
   Jorgensen, M
   Molokken-Ostvold, K
TI Software effort estimation terminology: The tower of Babel
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software effort estimation; terminology; structured review; software
   estimation guidelines
ID INFORMATION-SYSTEMS; MAINTENANCE; MANAGEMENT; CONFLICT; IMPACT; COST
AB It is well documented that the software industry Suffers from frequent cost overruns. A contributing factor is, we estimation terminology in use. A lack of clarity and precision in the use of estimation terms reduces the interpretability of estimation accuracy results, makes the communication of estimates difficult, and lowers the learning possibilities. This paper reports on a structured review of typical software effort estimation terminology in software engineering textbooks and software estimation research papers. The review provides evidence that the term 'effort estimate' is frequently used Without sufficient clarification of its meaning, and that estimation accuracy is often evaluated without ensuring that the estimated and the actual effort are comparable. Guidelines are suggested on how to reduce this lack of clarity and precision in terminology. (c) 2005 Elsevier B.V. All rights reserved.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM steingr@simula.no; magnej@simula.no; kjetilmo@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ABDELHAMID TK, 1993, COMPUTER, V26, P20, DOI 10.1109/2.204681
   [Anonymous], EUR J INF SYST
   [Anonymous], SOFTWARE MAGAZIN FEB
   [Anonymous], 2003, IT PROJECT ESTIMATIO
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P417
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   BERGERON F, 1992, INFORM MANAGE, V22, P239, DOI 10.1016/0378-7206(92)90026-C
   BERRY RH, 1992, P TRI ADA 92, P375
   Boehm BW, 2000, IEEE SOFTWARE, V17, P22, DOI 10.1109/MS.2000.895164
   Bootsma F, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P105, DOI 10.1109/ASSET.2000.888060
   Brooks Frederick P., 1995, The mythical man-month
   Buehler R, 1997, PERS SOC PSYCHOL B, V23, P238, DOI 10.1177/0146167297233003
   COSIER RA, 1977, ORGAN BEHAV HUM PERF, V19, P378, DOI 10.1016/0030-5073(77)90071-X
   DeMarco T., 2003, WALTZING BEARS MANAG
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Edwards JS, 1994, EUR J INFORM SYST, V3, P139, DOI 10.1057/ejis.1994.14
   Fleck RA, 1998, IND MANAGE DATA SYST, V98, P63, DOI 10.1108/02635579810205403
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   HAUGNES GM, 2004, OFFENTLIG IT SPREKK
   Haynes P., 1996, American Programmer, V9, P35
   Heldman K., 2002, PMP PROJECT MANAGEME
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2002, P C EMP ASS SOFTW EN
   JORGENSEN M, 2003, SOFTWARE ENG NOTES, V28, P30
   Kamatar J, 2000, IEEE SOFTWARE, V17, P85, DOI 10.1109/52.895173
   KEEN PGW, 1981, COMMUN ACM, V24, P24, DOI 10.1145/358527.358543
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   Larman C, 2005, APPL UML PATTERNS IN
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   Lind MR, 1998, EUR J INFORM SYST, V7, P261, DOI 10.1057/palgrave.ejis.3000308
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Mizuno O, 2000, INFORM SOFTWARE TECH, V42, P465, DOI 10.1016/S0950-5849(00)00092-6
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   MOLOKKEN K, 2004, PROJECT ESTIMATION N
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Ropponen J, 1997, EUR J INFORM SYST, V6, P41, DOI 10.1057/palgrave.ejis.3000253
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   SHEPPERD M, 2001, P 7 INT SOFTW METR S, P28, DOI DOI 10.1109/METRIC.2001.915513
   SPONSKY J, 2004, JOEL SOFTWARE DIVERS
   SUBRAMANIAN GH, 1995, J SYST SOFTWARE, V31, P135, DOI 10.1016/0164-1212(94)00093-3
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   2004, SOMMERVILLE SOFTWARE
NR 51
TC 40
Z9 42
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 302
EP 310
DI 10.1016/j.infsof.2005.04.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800007
DA 2024-07-18
ER

PT J
AU Mahmood, S
   Lai, R
   Kim, YS
   Kim, JH
   Park, SC
   Oh, HS
AF Mahmood, S
   Lai, R
   Kim, YS
   Kim, JH
   Park, SC
   Oh, HS
TI A survey of component based system quality assurance and assessment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SOFTWARE COMPONENTS; MODEL; TESTABILITY; METRICS
AB Component Based Software Development (CBSD) is focused on assembling existing components to build a software system, with a potential benefit of delivering quality systems by using quality components. It departs from the conventional software development process in that it is integration centric as opposed to development centric. The quality of a component based system using high quality components does not therefore necessarily guarantee a system of high quality, but depends on the quality of its components. and a framework and integration process used. Hence, techniques and methods for quality assurance and assessment of a component based system would be different from those of the traditional software engineering methodology. It is essential to quantify factors that contribute to the overall quality, for instances, the trade off between cost and quality of a component, analytical techniques and formal methods, and quality attribute definitions and measurements. This paper presents a literature survey of component based system quality assurance and assessment; the areas surveyed include formalism, cost estimation, and assessment and measurement techniques for the following quality attributes: performance, reliability, maintainability and testability. The aim of this survey is to help provide a better understanding of CBSD in these aspects in order to facilitate the realisation of its potential benefits of delivering quality systems. (C) 2005 Elsevier B.V. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
   Kyungwon Univ, Coll Software, Songnam 461701, South Korea.
C3 La Trobe University; Gachon University
RP La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
EM lai@cs.latrobe.edu.au
RI Mahmood, Sajjad/B-2295-2010
OI Mahmood, Sajjad/0000-0001-5786-5118
CR Abrial J-R., 1996, The B Book
   ABTS CM, 1998, P CAL SOFTW S
   ADDY EA, 1999, P S SOFTW REUS, P83
   ALENCAR PSC, 1999, P 21 INT C SOFTW ENG
   Andrews A, 2002, PROC IEEE INT CONF S, P359, DOI 10.1109/ICSM.2002.1167792
   ARBAB F, 2002, P INT S FORM METH CO, P33
   Ardimento P, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P115, DOI 10.1109/CSMR.2004.1281412
   Arsanjani A, 2002, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSM.2002.1167827
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bertolino A, 1996, IEEE T SOFTWARE ENG, V22, P97, DOI 10.1109/32.485220
   Botella P, 2003, LECT NOTES COMPUT SC, V2693, P225
   CARNEY D, 2000, J SOFTWARE MAINTENAN, P357
   Cechich A, 2003, LECT NOTES COMPUT SC, V2693, P1
   CECHICH A, 2002, P 22 INT C CHIL COMP
   Chen YH, 1997, PROC INT C TOOLS ART, P94, DOI 10.1109/TAI.1997.632242
   CHENG BHC, 1997, IEEE T KNOWLEDGE DAT, V9
   Cho ES, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419
   CICALESE CDT, 1999, IEEE COMPUT, V32, P46
   Cortellessa V, 2005, IEEE T SOFTWARE ENG, V31, P3, DOI 10.1109/TSE.2005.12
   Councill WT, 1999, IEEE SOFTWARE, V16, P55, DOI 10.1109/52.776949
   Cox PT, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P304, DOI 10.1109/HCC.2001.995278
   Díaz-Redondo RP, 2003, LECT NOTES COMPUT SC, V2693, P326
   Diller A., 1994, Z INTRO FORMAL METHO, VSecond
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Dolbec J., 1995, Proc. of the Conference of the Centre for Advanced Studies on Collaborative Research (CASCON'95), P19
   ELLIS T, 1995, P SYST ENG GLOB MARK
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   GAFFNEY EJ, 1981, P ACM 81 C
   Gaffney J.E., 1995, SOFTWARE MEASUREMENT
   GAO J, 2000, 3 INT WORKSH COMP BA
   Gao J., 2003, TESTING QUALITY ASSU
   Gergic J, 2003, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2003.1235415
   Gill NasibS., 2004, ACM SIGSOFT Software Engineering Notes, V29, P4
   GILL NS, 2003, SIGSOFT SOFTWARE ENG, V28, P1, DOI DOI 10.1145/882240
   GOSSLER G, 2002, P 1 INT S FMCO 2002, P443
   Hatcliff J, 2003, PROC INT CONF SOFTW, P160, DOI 10.1109/ICSE.2003.1201197
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Hissam S., 2001, CMUSEI2001TR024
   IBRAHIM R, 1998, P 12 EUR C OBJ OR PR
   *IEEE, 1991, STAND GLOSS SOFTW EN
   *ISO IEC, 2001, 91261 ISOIEC 1
   JENG JJ, 1994, P 9 KNOWL BAS SOFTW, P90
   Kim HY, 2003, LECT NOTES COMPUT SC, V2693, P259
   KOUCHNARENKO O, 2003, P INT S FORM METH EU
   Kramer R., 1998, TOOLS 98
   Krishnamurthy S, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P146, DOI 10.1109/ISSRE.1997.630860
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   LEICHER A, 2002, LNCS, V2348
   LONG B, 2003, P INT PAR DISTR PROC
   Mao XG, 2003, EUROMICRO CONF PROC, P395, DOI 10.1109/EURMIC.2003.1231620
   Mari M, 2003, EUROMICRO CONF PROC, P25
   MCKEGNEY R, 2003, P 2 INT C ICCBSS 200, P143
   Mili A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P157, DOI 10.1109/ICSE.2000.870407
   Minkiewicz AF, 2001, AEROSP CONF PROC, P2863, DOI 10.1109/AERO.2001.931307
   MOS A, 2002, P 6 IEEE INT ENT DIS
   NARASIMHAN VL, 2004, P WORKSH OBJ SYST SO
   Nguyen TB, 2002, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSM.2002.1167799
   NIERSTRASZ O, 2002, P 1 INT S FMCO 2002, P339
   PLOSILA J, 2003, P INT S FORM METH EU, P424
   Reussner RH, 2003, LECT NOTES COMPUT SC, V2693, P287
   Rodríguez I, 2004, INFORM SOFTWARE TECH, V46, P791, DOI 10.1016/j.infsof.2004.01.003
   Russell JT, 2003, DES AUT CON, P396
   Schneidewind NF, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P127, DOI 10.1109/METRIC.1997.637173
   Sedigh-Ali S, 2003, ISORC 2003: SIXTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P149
   Sedigh-Ali S, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/HASE.2002.1173130
   Sedigh-Ali S, 2001, P INT COMP SOFTW APP, P303, DOI 10.1109/CMPSAC.2001.960631
   Sedigh-Ali S, 2001, COMPUTER, V34, P44, DOI 10.1109/2.920611
   Simao RPS, 2003, LECT NOTES COMPUT SC, V2693, P184
   Singh H, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ISSRE.2001.989454
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith CU, 1997, P INT COMP SOFTW APP, P166, DOI 10.1109/CMPSAC.1997.624783
   Smith CU, 2004, INT CONF QUANT EVAL, P38
   SMITH CU, 1993, IEEE T SOFTWARE ENG, V19, P720, DOI 10.1109/32.238572
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Sparling M, 2000, COMMUN ACM, V43, P47, DOI 10.1145/352183.352202
   Srivastava B, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P125
   STAFFORD J, 1999, CUCS89699
   STUTZKE R, 1995, P WORKSH COCOMO 2 0
   Sullivan KJ, 1999, IEEE T SOFTWARE ENG, V25, P584, DOI 10.1109/32.799960
   UPADHYAYA BP, 2004, P 8 WORLD MULT C SYS
   UPADHYAYA BP, 2004, P 28 ANN INT COMP SO
   Vigder MR, 1998, PROC IEEE INT CONF S, P132, DOI 10.1109/ICSM.1998.738501
   Voas J, 1998, IEEE SOFTWARE, V15, P22, DOI 10.1109/52.687940
   VOAS JM, 1993, J SYST SOFTWARE, V20, P207, DOI 10.1016/0164-1212(93)90064-5
   WAND AJA, 2002, P 6 IASTED INT C SOF, P583
   WASHIZAKI H, 2003, P 9 INT SOFTW METR S
   Williams LG, 1998, P 1 INT WORKSH SOFTW
   WILLIAMS LG, 2002, P ACM INT WORKSH SOF
   WOODMAN M, 2001, P 4 ICSE WORKSH COMP
   Wu Y, 2000, PROC IEEE INT CONF S, P236, DOI 10.1109/ICSM.2000.883054
   WU Y, P 7 EUR C SOFTW MAIN, P2003
   YACOUB S, 2002, P 2 INT C SOFTW PROD, P229
   Yacoub S. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P22, DOI 10.1109/ISSRE.1999.809307
   Yakimovich D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P296, DOI 10.1109/ICSE.1999.841020
   Zhu Y, 2003, ATS 2003: 12TH ASIAN TEST SYMPOSIUM, PROCEEDINGS, P488, DOI 10.1109/ATS.2003.1250866
NR 95
TC 22
Z9 27
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2005
VL 47
IS 10
BP 693
EP 707
DI 10.1016/j.infsof.2005.03.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 948IL
UT WOS:000230709200005
DA 2024-07-18
ER

PT J
AU Börger, E
   Cavarra, A
   Riccobene, E
AF Börger, E
   Cavarra, A
   Riccobene, E
TI On formalizing UML state machines using ASMs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
AB We present a transparent yet rigorous conceptual framework for defining the semantics of dynamic UML diagrams. We illustrate the method for UML state machines, making the "semantic variation points" of UML explicit, as well as various ambiguities and omissions in the official UML documents. This includes the event deferring and completion mechanism, the meaning of atomic and durative actions, concurrent internal activities and conflict situations which may arise through the concurrent behavior of active objects. (C) 2003 Elsevier B.V. All. rights reserved.
C1 Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
   Univ Pisa, Dipartimento Informat, I-56125 Pisa, Italy.
   Univ Catania, Dipartimento Matemat & Informat, I-95124 Catania, Italy.
C3 University of Oxford; University of Pisa; University of Catania
RP Univ Oxford, Comp Lab, Wolfson Bldg Pks Rd, Oxford OX1 3QD, England.
EM alessandra.cavarra@comlab.ox.ac.uk
RI Riccobene, Elvinia/B-7517-2013
OI Riccobene, Elvinia/0000-0002-1400-1026
CR Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BORGER E, 2000, LNCS, V1912, P223
   BORGER E, 2003, SAC 2003
   BORGER E, 2000, LECT NOTES COMPUTER, V1862, P41
   BORGER E, 2002, P SFEDL02 ETAPS 2002
   CAVARRA A, 2000, THESIS
   CAVARRA A, 2001, P EUROCAST 2001
   COMPTON K, 2000, DYNAMIC BEHAV UML MO
   EVANS AS, 1998, OOP SLA 98
   France R, 1998, COMPUT STAND INTER, V19, P325, DOI 10.1016/S0920-5489(98)00020-8
   GNESI S, 1999, P 4 IEEE INT S HIGH
   GOGOLLA M, 1998, P PSMT 98
   Gurevich Yuri., 1995, Speci fication and Validation Methods
   JIN Y, 2002, LNAI, V2317
   JURJENS J, 2002, SAC2002
   JURJENS J, 2002, FMOODS 2002
   KUSKE S, 2001, LNCS, V2185
   LATELLA D, 1999, P FMOODS99
   LATELLA D, 1999, FAC99, V11
   *OMG, 2001, OMG UN MOD LANG SPEC
   PALTOR I, 1999, LNCS, V1723
   REGGIO G, 2000, LNCS, V1783
   SCHFER T, 2001, ENTCS, V47, P1
   SCHMID J, EXECUTING ASM SPECIF
   VONDERBEECK M, 2001, LNCS, V2185
NR 25
TC 12
Z9 12
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 287
EP 292
DI 10.1016/j.infsof.2003.09.009
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500003
DA 2024-07-18
ER

PT J
AU Bonfigli, ME
   Cabri, G
   Leonardi, L
   Zambonelli, F
AF Bonfigli, ME
   Cabri, G
   Leonardi, L
   Zambonelli, F
TI Virtual visits to cultural heritage supported by web-agents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web application; virtual visit; cultural heritage; agent
ID COORDINATION; ARCHITECTURE; INFORMATION; ISSUES; WWW
AB The integration between information technologies and cultural heritage can impact on everyday life, both from the point of view of institutions and of users. The cultural heritage community have recently been attracted by the chance offered by information technology, and, in particular, by the possibility of making cultural information available to a wide range of people. Museums, exhibitions and cultural institutions can now supply new services to access cultural information, and this calls for suitable infrastructures and tools. In such a context, this paper proposes a Web-based application that enables virtual visits to access cultural information tailored on the basis of user profiles and devices. The application is closely integrated within the Web; it also permits one group to build up virtual visits that can be attended by different people interested in the same subject. The application is based on an infrastructure exploiting innovative technologies such as active proxy servers and mobile agents; it grants a high degree of flexibility and is particularly suitable for an improved promulgation of cultural information. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Modena, Dipartimento Ingn Informat, I-41100 Modena, Italy.
   CINECA Supercomp Ctr, Vis IT Lab, Casalecchio Di Reno, BO, Italy.
   Univ Modena, Dipartimento Sci & Metodi Ingn, I-42100 Reggio Emilia, Italy.
C3 Universita di Modena e Reggio Emilia; CINECA, Italy; Universita di
   Modena e Reggio Emilia
RP Univ Modena, Dipartimento Ingn Informat, Via Vignolese 905, I-41100 Modena, Italy.
EM e.bonfigli@cineca.it; giacomo.cabri@unimo.it; letizia.leonardi@unimo.it;
   zarnbonelli@unimo.it
RI Cabri, Giacomo/M-6723-2015; Leonardi, Letizia/L-9722-2015
OI Cabri, Giacomo/0000-0002-4942-2453; Zambonelli,
   Franco/0000-0002-6837-8806; Leonardi, Letizia/0000-0003-4035-8560
CR [Anonymous], 1999, JavaSpaces Principles, Patterns, and Practice
   [Anonymous], 1998, RENEWABLE ENERGY TEC
   [Anonymous], 1999, Designing Web Usability: The Practice of Simplicity
   Appelt W, 1999, LECT NOTES COMPUT SC, V1725, P66
   BENTLEY R, 1997, WORLD WIDE WEB ENABL
   BICKMORE TW, 1997, P 6 INT WWW C SANT C
   BONFIGLI ME, 2001, P INT CULT HER INF M
   BONFIGLI ME, 2000, P ACM SIGGRAPH2000
   BONFIGLI ME, 2001, TAILORED DISTRIBUTED
   Cabri G, 2000, J SYST ARCHITECT, V46, P1419, DOI 10.1016/S1383-7621(00)00033-3
   Cabri G, 1999, SOFTWARE PRACT EXPER, V29, P1241, DOI 10.1002/(SICI)1097-024X(19991210)29:14<1241::AID-SPE277>3.0.CO;2-V
   Cabri G, 2000, IEEE INTERNET COMPUT, V4, P26, DOI 10.1109/4236.865084
   CABRI G, 2000, P 9 IEEE INT WORKSH
   Ciancarini P, 1998, IEEE T SOFTWARE ENG, V24, P362, DOI 10.1109/32.685259
   CIANCARINI P, 2003, KNOWLEDGE ENG REV, V18
   *CIMI, 1999, GUID BEST PRACT DUBL
   *CIMI, 2000, COMM WORK QUAL DUBL
   *COUNC EUR UN EMPL, B EU
   COUNSELL J, 1999, P 1999 IEEE INT C IN
   DENG J, 2000, P 2000 IEEE INT C MU
   DENTI E, 1998, P ACM S APPL COMP AT
   GALL U, 1997, P 6 INT WWW C SANT C
   Ihde S.C., 2001, IBM SYSTEMS J, V40
   JACOBS S, 1996, P 5 INT WWW C COMP N, V28, P1385
   Karnik NM, 1998, IEEE CONCURR, V6, P52, DOI 10.1109/4434.708256
   Kirchner M, 2002, FOURTH INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P65, DOI 10.1109/WSE.2002.1134091
   Moen WE, 1998, COMMUN ACM, V41, P44, DOI 10.1145/273035.273046
   TREVOR J, 1997, P EUR C COMP SUPP CO
   VELTMAN K, 1997, P GLOB VILL C, P1
   VELTMAN K, 1997, J ACM NEW YORK, P32
   2000, IEEE MULTIMEDIA, V7
NR 31
TC 9
Z9 10
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2004
VL 46
IS 3
BP 173
EP 184
DI 10.1016/S0950-5849(03)00126-5
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 764WQ
UT WOS:000188229300003
DA 2024-07-18
ER

PT J
AU Sabaliauskaite, G
   Matsukawa, F
   Kusumoto, S
   Inoue, K
AF Sabaliauskaite, G
   Matsukawa, F
   Kusumoto, S
   Inoue, K
TI Further investigations of reading techniques for object-oriented design
   inspection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE checklist-based reading; controlled experiment; perspective-based
   reading; software inspection; unified modelling language
AB This paper describes an experimental evaluation of two reading techniques, namely Checklist-based reading (CBR) and Perspective-based reading (PBR) for Object-Oriented (00) design document, written using the notation of Unified Modelling Language, inspection. Inspections are usually applied for defect detection in requirement documents or code modules, and there is a significant lack of information how inspections should be applied to 00 design documents.
   The paper reports on a controlled experiment with 59 subject students to compare CBR and PBR techniques with respect to individual time spent on inspection, cost per defect, effectiveness, and 3-person simulated team effectiveness. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Osaka Univ, Dept Informat & Math Sci, Grad Sch Engn Sci, Osaka 5608531, Japan.
   Osaka Univ, Dept Comp Sci, Grad Sch Informat Sci & Technol, Osaka 5608531, Japan.
   Kaunas Univ Technol, Dept Informat Syst, LT-3026 Kaunas, Lithuania.
C3 Osaka University; Osaka University; Kaunas University of Technology
RP Osaka Univ, Dept Informat & Math Sci, Grad Sch Engn Sci, 1-3 Machikameyama, Osaka 5608531, Japan.
EM giedre@ics.es.osaka-u.ac.jp
RI Sabaliauskaite, Giedre/GYD-8916-2022
OI Sabaliauskaite, Giedre/0000-0003-1183-7001
CR Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili Victor., LAB PACKAGE EMPIRICA
   Biffl S, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P107, DOI 10.1109/METRIC.2002.1011330
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Cheng B., 1996, Proceedings 1996 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.1996.534137
   Chernak Y, 1996, IEEE T SOFTWARE ENG, V22, P866, DOI 10.1109/32.553635
   Dunsmore A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P47, DOI 10.1109/ICSE.2002.1007955
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gilb Tom, 1993, Software inspections
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   ITOH K, 2001, SOFTWARE ENG EXERCIS
   JURISTO N, BASICS SOFTWARE ENG
   LAITENBERGER C, 1999, P 21 INT C SOFTW ENG, P494
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Sabaliauskaite G, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P148, DOI 10.1109/ISESE.2002.1166934
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   *U MAR EXP SOFTW E, PROC TECHN PERSP BAS
   Wohlin C, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P118, DOI 10.1109/METRIC.2002.1011331
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 23
TC 6
Z9 6
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 571
EP 585
DI 10.1016/S0950-5849(03)00044-2
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700003
DA 2024-07-18
ER

PT J
AU Fong, J
   Wong, HK
   Cheng, Z
AF Fong, J
   Wong, HK
   Cheng, Z
TI Converting relational database into XML documents with DOM
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML document; denormalization; relational database; schema translation;
   data conversion; data dependencies; document object model; document type
   definition
AB The revolution of XML is recognized as the trend of technology on the Internet to researchers as well as practitioners. Companies need to adopt XML technology. With investment in the current relational database systems, they want to develop new XML documents while running existing relational databases on production. They need to reengineer the relational databases into XML documents with constraints preservation. In the process, schema translation must be done before data conversion. Since the existing relational databases are usually normalized, they have to be reconstructed into XML document tree structures. This can be accomplished through denormalization by joining the normalized relations into tables according to their data dependencies constraints. The joined tables are mapped into DOMs, which are then integrated into XML document trees. The user specifies an XML document root with its relevant nodes to form a partitioned XML document tree to meet their requirements. The selected XML document tree is mapped into an XML schema in the form of DTD. We then load joined tables into DOMs, integrate them into a DOM, and transform it into an XML document. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   City Univ Hong Kong, Dept Elect Engn, Kowloon, Hong Kong, Peoples R China.
C3 City University of Hong Kong; City University of Hong Kong
RP City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Kowloon, Hong Kong, Peoples R China.
EM csjfong@cityu.edu.hk; hkwong@cs.cityu.edu.hk
CR ABITEBOUL S, 2000, DATA WEB RELATIONAL, P197
   CAREY MJ, 2000, P 26 INT C VER LARG, P646
   CHAN J, 2000, P 1 INT C WEB INF SY, V2, P47
   Fernández M, 2000, COMPUT NETW, V33, P723, DOI 10.1016/S1389-1286(00)00061-X
   Fong J, 2001, 12TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P61, DOI 10.1109/DEXA.2001.953042
   Fong J., 1997, SIGMOD Record, V26, P53, DOI 10.1145/248603.248614
   FONG J, 2003, XML DATA MANAGEMENT
   FONG J, 2001, P 9 IFIP 2 6 WORK C, P113
   FONG J, 1999, INFORMATION SOFTWARE, V36, P141
   FONG J, 1992, INFORMATION SOFT MAR, P159
   Khan L., 2001, P 3 INT WORKSHOP WEB, P31
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Shanmugasundaram Jayavel., 2000, P 26 INT C VERY LARG, P65
   Varlamis I., 2001, Proceedings of the ACM Symposium on Document Engineering (DocEng '01), P105, DOI 10.1145/502187.502203
   Yoshikawa Masatoshi., 2001, ACM T INTERNET TECHN, V1, P110, DOI DOI 10.1145/383034.383038
   ZHOU A, 2001, P 27 VLDB C ROM IT, P646
NR 16
TC 20
Z9 27
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2003
VL 45
IS 6
BP 335
EP 355
DI 10.1016/S0950-5849(03)00026-0
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673GN
UT WOS:000182572500004
DA 2024-07-18
ER

PT J
AU Sigman, S
   Liu, XQF
AF Sigman, S
   Liu, XQF
TI A computational argumentation methodology for capturing and analyzing
   design rationale arising from multiple perspectives
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE argumentation model; design rationale capture; design specification;
   fuzzy set theory
ID REQUIREMENTS; SYSTEMS
AB Contemporary development methodologies provide for the traceability of design decisions to functional requirements. However, they fail to adequately provide this type of traceability for non-functional requirements. This paper describes a methodology for the computational evaluation of the impact of design decisions on the non-functional requirements of the various stakeholders involved in the development of a system. A design dialog process based upon a design argumentation model is described. The dialog process provides for the capture of design rationale and for their management. Fuzzy inference is used to identify conflicts, to simply arguments, and to measure the favorability of an argument. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 SW Baptist Univ, Dept Comp & Informat Sci, Bolivar, MO 65613 USA.
   Univ Missouri, Dept Comp Sci, Rolla, MO 65401 USA.
C3 University of Missouri System; Missouri University of Science &
   Technology
RP Sigman, S (corresponding author), SW Baptist Univ, Dept Comp & Informat Sci, Bolivar, MO 65613 USA.
CR Boehm B., 1994, Proceedings. Third International Conference on the Software Process. Applying the Software Process (Cat. No.94TH8001), P59, DOI 10.1109/SPCON.1994.344423
   BOEHM B, 1995, PROC INT CONF SOFTW, P243, DOI 10.1145/225014.225037
   BOEHM B, 1996, IEEE SOFTWARE    MAR, P25
   BOEHM B, 1994, IEEE INT C REQ ENG A, P74
   CONKLIN J, 1988, ACM T INFORM SYST, V6, P303, DOI 10.1145/58566.59297
   KARSENTY L, 1996, P CHI 96, P23
   KLEIN M, 1991, IEEE T SYST MAN CYB, V21, P1379, DOI 10.1109/21.135683
   KLEIN M, 1990, THESIS U ILLINOIS UR
   LEASE M, 1990, HYPERMEDIA, V2, P34
   LIU XF, 1996, P 2 WORLD C INT DES, P460
   LIU XF, 1996, P 18 IEEE INT C SOFT
   Liu XQF, 1997, CONCURRENT ENG-RES A, V5, P123, DOI 10.1177/1063293X9700500204
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Robinson W. N., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P206, DOI 10.1109/ICRE.1994.292383
   ROBINSON WN, 1993, THESIS U OREGON PORT
   SIGMAN S, 1999, THESIS U MISSOURI RO
   Sillence J., 1997, Encyclopedia of Library and Information Science, 19, 22, P176
NR 17
TC 11
Z9 17
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2003
VL 45
IS 3
BP 113
EP 122
AR PII S0950-5849(02)00187-8
DI 10.1016/S0950-5849(02)00187-8
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 643KW
UT WOS:000180861300001
DA 2024-07-18
ER

PT J
AU Biazotto, JP
   Feitosa, D
   Avgeriou, P
   Nakagawa, EY
AF Biazotto, Joao Paulo
   Feitosa, Daniel
   Avgeriou, Paris
   Nakagawa, Elisa Yumi
TI Technical debt management automation: State of the art and future
   perspectives
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Technical debt; Technical debt management;
   Tools; Automation
AB Context: Technical debt (TD) refers to non-optimal decisions made in software projects that may lead to shortterm benefits, but potentially harm the system's maintenance in the long-term. Technical debt management (TDM) refers to a set of activities that are performed to handle TD, e.g., identification or measurement of TD. These activities typically entail tasks such as code and architectural analysis, which can be time-consuming if done manually. Thus, substantial research work has focused on automating TDM tasks (e.g., automatic identification of code smells). However, there is a lack of studies that summarize current approaches in TDM automation. This can hinder practitioners in selecting optimal automation strategies to efficiently manage TD. It can also prevent researchers from understanding the research landscape and addressing the research problems that matter the most.Objectives: The main objective of this study is to provide an overview of the state of the art in TDM automation, analyzing the available tools, their use, and the challenges in automating TDM. Methods: We conducted a systematic mapping study (SMS), following the guidelines proposed by Kitchenham et al. From an initial set of 1086 primary studies, 178 were selected to answer three research questions covering different facets of TDM automation. Results: We found 121 automation artifacts that can be used to automate TDM activities. The artifacts were classified in 4 different types (i.e., tools, plugins, scripts, and bots); the inputs/outputs and interfaces were also collected and reported. Finally, a conceptual model is proposed that synthesizes the results and allows to discuss the current state of TDM automation and related challenges.Conclusion: The research community has investigated to a large extent how to perform various TDM activities automatically, considering the number of studies and automation artifacts we identified. Nonetheless, more research is needed towards fully automated TDM, specially concerning the integration of the automation artifacts.
C1 [Biazotto, Joao Paulo; Feitosa, Daniel; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
   [Biazotto, Joao Paulo; Nakagawa, Elisa Yumi] Univ Sao Paulo, Inst Math & Computat Sci, Sao Paulo, Brazil.
C3 University of Groningen; Universidade de Sao Paulo
RP Biazotto, JP (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
EM j.p.biazotto@rug.nl
RI Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X; Avgeriou,
   Paris/0000-0002-7101-0754; Biazotto, Joao Paulo/0000-0003-4075-3456
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Anderson P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P71, DOI 10.1109/TechDebt.2019.00024
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Fontana F. A., 2016, P 31 ANN ACM S APPL
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Fontana FA, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P21, DOI 10.1109/WICSA.2016.37
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Junior HJ, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106964
   Khomyakov I, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS 2019), VOL 2, P95, DOI 10.5220/0007675900950106
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Lamprakos CP, 2022, LECT NOTES COMPUT SC, V13227, P342, DOI 10.1007/978-3-031-04580-6_23
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Li YK, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10297-9
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Masmali Omar, 2021, Advances in Information and Communication. Proceedings of the 2021 Future of Information and Communication Conference (FICC). Advances in Intelligent Systems and Computing (AISC 1364), P142, DOI 10.1007/978-3-030-73103-8_9
   McGregor J. D., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P27, DOI 10.1109/MTD.2012.6225996
   dos Santos PSM, 2013, LECT NOTES BUS INF P, V149, P121
   Mendes Thiago S., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-018-0083-1
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mumtaz H, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110885
   Object Management Group, 2017, Tech. Rep.
   Ochoa L, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2022), P26, DOI [10.1145/3510455.3512783, 10.1109/ICSE-NIER55298.2022.9793524]
   Paiva Thanis, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0041-1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Phaithoon S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1257, DOI 10.1109/ASE51524.2021.9678680
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   da Silva JD, 2022, LECT NOTES BUS INF P, V455, P280, DOI 10.1007/978-3-031-08965-7_14
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   Scannavino Katia Romero Felizardo, 2017, Revisao Sistematica da Literatura em Engenharia de Software: teoria e pratica
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tan J., 2022, SSRN Electron. J, DOI [10.2139/ssrn.4160012(Preprint, DOI 10.2139/SSRN.4160012(PREPRINT]
   Tan J, 2020, EUROMICRO CONF PROC, P487, DOI 10.1109/SEAA51224.2020.00082
   van Solingen R., 2002, Goal question metric (gqm) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106908
   Zabardast E, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2425
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 51
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107375
DI 10.1016/j.infsof.2023.107375
EA DEC 2023
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FZ4W9
UT WOS:001149674400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Wang, L
   Sun, CH
   Zhang, CY
   Nie, WK
   Huang, KY
AF Wang, Lu
   Sun, Chenhan
   Zhang, Chongyang
   Nie, Weikun
   Huang, Kaiyuan
TI Application of knowledge graph in software engineering field: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Knowledge graph; Software engineering; Code recommendation; API
   recommendation; Vulnerability mining and location; Intelligent
   development
ID RECOMMENDATION
AB Context: Knowledge graphs describe knowledge resources and their carriers through visualization. Moreover, they mine, analyze, construct, draw, and display knowledge and their interrelationships to reveal the dynamic development law of the knowledge field. Furthermore, knowledge graphs provide practical and valuable references for subject research. With the development of software engineering, powerful semantic processing and organizational interconnection capabilities of knowledge graphs are gradually required. Current research suggests using knowledge graphs for code or API recommendation, vulnerability mining, and positioning to improve the efficiency and accuracy of development and design. However, software engineering lacks a systematic analysis of the knowledge graphs application.Objective: This paper explores the construction techniques and application status of knowledge graphs in the field of software engineering, broadens the application prospects of knowledge graphs in this field, and facilitates the subsequent research of researchers.Methods: We collected over 100 documents from 2017 to date and selected 55 directly related documents for systematic analysis. Then, we analyzed the organized knowledge mainly stored in software engineering knowledge graphs, including software architecture, code details, and security reports.Results: We studied the emerging research methods in ontology modeling, named entity recognition, and knowledge fusion in graph construction and found that current knowledge graphs are mainly used in intelligent software development, software vulnerability mining, security testing, and API recommendation.Conclusion: Our research on the innovation of knowledge graph in software engineering and the future construction of integrating open-source community software and developer recommendations with knowledgedriven microservice O&M aspects can inspire more scholars and knowledge workers to use knowledge graph technology, which is important to solve software engineering problems and promote the development of both fields.
C1 [Wang, Lu; Sun, Chenhan; Zhang, Chongyang; Nie, Weikun; Huang, Kaiyuan] Xidian Univ, Xian 710071, Shaanxi, Peoples R China.
C3 Xidian University
RP Sun, CH (corresponding author), Xidian Univ, Xian 710071, Shaanxi, Peoples R China.
EM wanglu@xidian.edu.cn; 21031221792@stu.xidian.edu.cn;
   21031211699@stu.xidian.edu.cn; 21031211743@stu.xidian.edu.cn;
   21031211704@stu.xidian.edu.cn
RI Huang, Kaiyuan/KJM-6330-2024
OI Wang, Lu/0000-0001-8414-4164
FU National Natural Science Foundation of China [62372351, U21B2015,
   61972300]; Shaanxi Science and Technology Association [20220113]
FX This work was supported by the National Natural Science Foundation of
   China [grant numbers 62372351, U21B2015, 61972300] ; and the Shaanxi
   Science and Technology Association [grant number 20220113]
CR Abu-Salih B, 2021, J NETW COMPUT APPL, V185, DOI 10.1016/j.jnca.2021.103076
   Atzeni M, 2017, LECT NOTES COMPUT SC, V10588, P20, DOI 10.1007/978-3-319-68204-4_2
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Chen XJ, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112948
   Chen Yongfang, 2022, Intell. Comput. Appl., P012
   Conneau A, 2018, Arxiv, DOI arXiv:1710.04087
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   de Faria Eustaquio Sao Jose, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P517, DOI 10.1109/COMPSAC.2008.177
   Del Mondo G, 2021, ISPRS INT J GEO-INF, V10, DOI 10.3390/ijgi10080541
   Dong JW, 2022, SCI REP-UK, V12, DOI 10.1038/s41598-022-06940-y
   Du DD, 2018, LECT NOTES COMPUT SC, V10845, P33, DOI 10.1007/978-3-319-91662-0_3
   Eppler MJ, 2015, HANDB COMMUN SCI, V5, P215
   Feng X, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P327
   Fensel D., 2020, KNOWLEDGE GRAPHS, P1, DOI [10.1007/978-3-030-37439-6_1, DOI 10.1007/978-3-030-37439-6, 10.1007/978-3-030-37439-6]
   Ganapathy G, 2011, INT J ADV COMPUT SC, V2, P111
   Ghafari Mohammad., 2014, Proceedings of the 4th International Workshop on Recommendation Systems for Software Engineering, P26
   Gu DX, 2017, INT J MED INFORM, V98, P22, DOI 10.1016/j.ijmedinf.2016.11.006
   Gueyoung Jung, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P456, DOI 10.1109/SERVICES.2013.55
   Guo L, 2022, ROBOT CIM-INT MANUF, V73, DOI 10.1016/j.rcim.2021.102222
   Han ZB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P456, DOI 10.1109/SANER.2018.8330232
   Hao XJ, 2021, REMOTE SENS-BASEL, V13, DOI 10.3390/rs13132511
   Nguyen HL, 2020, INFORM FUSION, V61, P56, DOI 10.1016/j.inffus.2020.03.014
   Hur A, 2021, 2021 IEEE FOURTH INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND KNOWLEDGE ENGINEERING (AIKE 2021), P99, DOI 10.1109/AIKE52691.2021.00021
   Iannone E, 2021, INT C PROGRAM COMPRE, P396, DOI 10.1109/ICPC52881.2021.00046
   Ji SX, 2022, IEEE T NEUR NET LEAR, V33, P494, DOI 10.1109/TNNLS.2021.3070843
   Jiang B, 2021, IEEE ACCESS, V9, P50880, DOI 10.1109/ACCESS.2021.3068570
   Kejriwal Mayank, 2019, Domain-specific knowledge graph construction, DOI DOI 10.1007/978-3-030-12375-8
   Kesri V, 2021, IEEE ICST WORKSHOP, P234, DOI 10.1109/ICSTW52544.2021.00047
   Kursuncu U, 2020, Arxiv, DOI arXiv:1912.00512
   Kwapong BA, 2019, IEEE WORLD CONGR SER, P115, DOI 10.1109/SERVICES.2019.00039
   Lampropoulos G, 2020, VIS INFORM, V4, P32, DOI 10.1016/j.visinf.2020.01.001
   Lemos O.A. L., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P212, DOI DOI 10.1145/2597073.2597087
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Li RQ, 2019, IEEE IND ELEC, P2877, DOI 10.1109/IECON.2019.8927285
   [李文鹏 Li Wenpeng], 2017, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V11, P851
   Lin JJ, 2021, NEURAL COMPUT APPL, V33, P681, DOI 10.1007/s00521-020-05057-5
   Lin ZQ, 2017, J COMPUT SCI TECH-CH, V32, P242, DOI 10.1007/s11390-017-1718-y
   Ling CY, 2019, J COMPUT SCI TECH-CH, V34, P993, DOI 10.1007/s11390-019-1956-2
   Ling Xiao, 2012, P AAAI C ART INT, P94, DOI 10.1609/aaai.v26i1.8122
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Luo Chao, 2018, 2018 IEEE 9 INT C SO, P1
   Lv WQ, 2020, IEEE WORLD CONGR SER, P145, DOI 10.1109/SERVICES48979.2020.00041
   Ma DY, 2020, ASIA PAC SOFWR ENG, P188, DOI 10.1109/APSEC51365.2020.00027
   Meng GZ, 2017, Arxiv, DOI arXiv:1711.07451
   Nagel L, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P158, DOI 10.1109/SEAA53835.2021.00028
   Nayak A, 2020, ACM INT CONF PR SER, P289, DOI 10.1145/3371158.3371202
   Paulheim H, 2017, SEMANT WEB, V8, P489, DOI 10.3233/SW-160218
   Peng Nanyun, 2017, Transactions of the Association for Computational Linguistics, V5, P101, DOI 10.1162/tacl_a_00049
   Ping Chen, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P425, DOI 10.1109/DSA.2019.00066
   Qin S., 2019, Cyberspace Data and Intelligence, and Cyber-Living, Syndrome, and Health, P3
   Reiss Steven P., 2012, 2012 4 INT WORKSH SE, P1
   Ren XX, 2020, IEEE INT CONF AUTOM, P461, DOI 10.1145/3324884.3416551
   Roehrs A, 2017, J MED INTERNET RES, V19, DOI 10.2196/jmir.5876
   Rubino Daniel, 2021, Vulnerability knowledge base construction method and design scheme based on knowledge graph
   Sabou M, 2018, LECT NOTES COMPUT SC, V10843, P560, DOI 10.1007/978-3-319-93417-4_36
   Samuel BM, 2022, IEEE T SOFTWARE ENG, V48, P3969, DOI 10.1109/TSE.2021.3108935
   Sette M, 2017, P INT COMP SOFTW APP, P712, DOI 10.1109/COMPSAC.2017.19
   Sheth A, 2019, IEEE INTERNET COMPUT, V23, P67, DOI 10.1109/MIC.2019.2928449
   Thung F, 2016, IEEE INT CONF AUTOM, P896, DOI 10.1145/2970276.2975940
   Ul Hague M, 2022, EUR CON SFTWR MTNCE, P420, DOI 10.1109/SANER53432.2022.00057
   [王飞 Wang Fei], 2020, [软件学报, Journal of Software], V31, P47
   Wang JH, 2020, IEEE WORLD CONGR SER, P151, DOI 10.1109/SERVICES48979.2020.00042
   Wang L, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110902
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Wang M, 2019, LECT NOTES COMPUT SC, V11602, P115, DOI 10.1007/978-3-030-22888-0_9
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
   Wang wei, 2021, Open Source Software Vulnerability Mining Method Based on Knowledge Graph
   Wang X, 2021, WORLD WIDE WEB, V24, P869, DOI 10.1007/s11280-021-00894-3
   Wang X, 2019, IEEE ACCESS, V7, P7651, DOI 10.1109/ACCESS.2018.2890156
   Weihong Wang, 2021, 2021 4th International Conference on Advanced Electronic Materials, Computers and Software Engineering (AEMCSE), P1163, DOI 10.1109/AEMCSE51986.2021.00237
   Xiao HB, 2019, LECT NOTES COMPUT SC, V11955, P50, DOI 10.1007/978-3-030-36718-3_5
   Xie R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P434, DOI [10.1109/saner.2019.8667969, 10.1109/SANER.2019.8667969]
   Yang B, 2022, NEURAL COMPUT APPL, V34, P2569, DOI 10.1007/s00521-021-05985-w
   Yang WS, 2021, IEEE I C SQRS-C, P67, DOI 10.1109/QRS-C55045.2021.00020
   Yaqing S.H.I., 2022, Comput. Technol. Dev., V32, P111
   Yin H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P251, DOI 10.1109/ICWS53863.2021.00043
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Yu L, 2021, IEEE ACCESS, V9, P51631, DOI 10.1109/ACCESS.2021.3064687
   Zan Hongying, 2020, J. Zhengzhou Univ. (Nat. Sci. Ed.), V52, P7
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhang Ma, 2021, Comput. Syst. Appl., V30, P202
   Zhang Q, 2019, LECT NOTES COMPUT SC, V11779, P325, DOI 10.1007/978-3-030-30796-7_21
   Zhang SQ, 2020, INT CONF SOFTW ENG, P503, DOI [10.1109/icsess49938.2020.9237681, 10.1109/ICSESS49938.2020.9237681]
   Zhang Y., 2020, Commun. Technol., V53, P168
   Zhang Yan, 2020, Avion. Technol., V51, P7
   Zhangying Ling, 2022, J. Comput. Appl., V42, P12
   Zhou C, 2018, INT C PROGRAM COMPRE, P108, DOI 10.1145/3196321.3196335
NR 88
TC 1
Z9 1
U1 56
U2 56
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107327
DI 10.1016/j.infsof.2023.107327
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA4Q3
UT WOS:001149928500001
DA 2024-07-18
ER

PT J
AU Ormeño, YI
   Panath, JI
   Pastor, O
AF Ormeno, Yeshica Isela
   Panath, Jose Ignacio
   Pastor, Oscar
TI An empirical experiment of a usability requirements elicitation method
   to design GUIs based on interviews
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability requirements elicitation; Interviews; Empirical experiment;
   Guidelines
AB Context: The usability requirements elicitation process is a difficult task that lacks methods to guide and help analysts, who are usually not experts at usability. Objective: This paper conducts an experiment with two replications to evaluate a method that elicits usability requirements based on structured interviews named UREM versus an unstructured method. The method consists of guided interviews by the analyst using decision trees. The tree is composed of questions and possible answers. Each question appears when there are different possible design alternatives, and each answer represents one of these alternatives. The tree also recommends the alternative that enhances the usability based on existing usability guidelines. Method: We have conducted an experiment with two replications with 22 and 26 subjects playing two different roles in a within-subjects design. The analysts used a tree to guide the interview and elicit the requirements while the end users had to explain to the analyst the type of system to develop. During the interview, the analyst must design a paper prototype to be validated by the end user. For the analyst, the experiment measures the effectiveness of usability requirements elicitation, the effectiveness of the use of the usability guidelines, the efficiency of the elicitation process, and the satisfaction with the entire elicitation process. For the end user, the experiment measures the satisfaction with the designed prototype at the end of the interview. Results: UREM yielded significantly better results for the effectiveness in the usability requirements elicitation process and for the effectiveness in the use of usability guidelines when compared to unstructured interviews. The use of UREM did not reduce the analysts' efficiency and both analyst and end user remained the same satisfaction. Conclusions: Eliciting usability requirements is a difficult task if it is done with unstructured interviews and without usability recommendations.
C1 [Ormeno, Yeshica Isela] Univ Nacl San Antonio Abad Cusco, Cuzco, Peru.
   [Panath, Jose Ignacio] Univ Valencia, Dept Informat, Escola Tecn Super Enginyeria, Ave Univ S-N, Valencia 46100, Burjassot, Spain.
   [Pastor, Oscar] Univ Politecn Valencia, Valencian Res Inst Artificial Intelligence VRAIN, Cami De Vera S-N, Valencia 46022, Spain.
C3 Universidad Nacional de San Antonio Abad del Cusco; University of
   Valencia; Universitat Politecnica de Valencia
RP Panath, JI (corresponding author), Univ Valencia, Dept Informat, Escola Tecn Super Enginyeria, Ave Univ S-N, Valencia 46100, Burjassot, Spain.
EM joigpana@uv.es
RI ; Pastor Lopez, Oscar/S-4216-2016
OI Panach Navarrete, Jose Ignacio/0000-0002-7043-6227; Pastor Lopez,
   Oscar/0000-0002-1320-8471
FU National University of San Antonio Abad of Cusco; FONDECYT; Generalitat
   Valenciana; Spanish Ministry of Science and Innovation; FEDER
   [CIAICO/2022/229]; CoMoDID; GENI;  [PID2021-123824OB-I00]; 
   [CIPROM/2021/023]
FX This work was developed with the support of the National University of
   San Antonio Abad of Cusco under the program Yachayninchis Winarinanpaq
   CONCYTEC and FONDECYT, the support of Generalitat Valenciana with
   CoMoDID (CIPROM/2021/023) and GENI (CIAICO/2022/229) , as well as the
   support of the Spanish Ministry of Science and Innovation co -financed
   by FEDER in the project SREC (PID2021-123824OB-I00) .
CR Abad ZSH, 2018, IEEE INT WORKS EMPIR, P16, DOI 10.1109/EmpiRE.2018.00007
   Abad ZSH, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P132, DOI 10.1109/REW.2017.71
   Abdallah A., 2013, P ACM S APPL COMP, P1117
   Bahurmuz N, 2021, INT J INF TECHNOL PR, V12, P1, DOI 10.4018/IJITPM.2021070101
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DAVIS FD, 1993, INT J MAN MACH STUD, V38, P475, DOI 10.1006/imms.1993.1022
   de Carvalho EA, 2019, PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON HUMAN FACTORS IN COMPUTING SYSTEMS (IHC 2019), DOI 10.1145/3357155.3360475
   De Troyer O, 2014, INT WORKSH REQUIRE, P17, DOI 10.1109/RePa.2014.6894839
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Elias Endhe, 2012, Intelligent Tutoring Systems. Proceedings 11th International Conference (ITS 2012), P298, DOI 10.1007/978-3-642-30950-2_39
   Elrakaiby Y, 2017, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2017.27
   Fahey P, 2011, COMP MED SY
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Ferreira JM, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106195
   Goundar MS, 2024, INT J HUM-COMPUT INT, V40, P1298, DOI 10.1080/10447318.2022.2141009
   Gruber T.R., 1991, ML WORKSHOP
   Gündüz F, 2012, INT CONF ADV COMPUT, P49, DOI 10.1109/ACSAT.2012.9
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hutahaean H.A., 2021, P INT C ENG INFORM T, P1
   International Organization For Standardization, 1998, ISO 9241-11
   ISO/IEC, 2013, ISO /IEC 25010: 2011 systems and software engineering@ systems and software quality requirements and evaluation (SQuaRE)@ system and software quality models
   Juristo N., 2013, BASICS SOFTWARE ENG
   LEWIS JR, 1995, INT J HUM-COMPUT INT, V7, P57, DOI 10.1080/10447319509526110
   Márquez G, 2020, IEEE ACCESS, V8, P145787, DOI 10.1109/ACCESS.2020.3015144
   Martinie C., 2010, P 28 ACM INT C DESIG, P73
   Meyers L., 2006, APPL MULTIVARIATE RE
   Muller M.J., 2003, HUM FAC ER, P1051
   Nhavoto JA, 2015, JMIR MHEALTH UHEALTH, V3, DOI 10.2196/mhealth.3854
   Nielsen J., 1993, USABILITY ENG
   Okesola OJ., 2019, J. Eng. Appl. Sci., V14, P565
   Ormeno Yeshica, 2023, Zenodo, DOI 10.5281/ZENODO.7646554
   Ormeño YI, 2013, INT CONF RES CHAL
   Peruzzini M., 2014, P IEEE ASME 10 INT C, P1
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Quiñones D, 2018, COMPUT STAND INTER, V59, P109, DOI 10.1016/j.csi.2018.03.002
   Rajanen M, 2007, LECT NOTES COMPUT SC, V4663, P511
   Rey E.M., 2019, P 34 ACM SIGAPP S AP
   Silva TR, 2020, COGN TECHNOL WORK, V22, P437, DOI 10.1007/s10111-019-00566-3
   SHARMA S., 2013, International Journal of Computer Applications, V75, P35, DOI [10.5120/13166-0889, DOI 10.5120/13166-0889]
   Takeshi H, 2008, NEC TECH J, V3, P12
   Temper M, 2015, PROCEEDINGS 2015 FIRST INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA 2015), P30, DOI 10.1109/ICSSA.2015.016
   Tiwari S., 2012, Selecting requirement elicitation techniques for software projects, P1, DOI [10.1109/CONSEG.2012.6349486, DOI 10.1109/CONSEG.2012.6349486]
   Vitiello G, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P139, DOI 10.1109/REW.2017.67
   Yuan X., 2015, P IEEE INT MOD DRIV, P1
   Yukiko Tanikawa, 2014, NEC Technical Journal, V8, P28
NR 45
TC 2
Z9 2
U1 3
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107324
DI 10.1016/j.infsof.2023.107324
EA SEP 2023
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y6XL5
UT WOS:001106670100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Rainer, A
   Wohlin, C
AF Rainer, Austen
   Wohlin, Claes
TI Case study identification: A trivial indicator outperforms human
   classifiers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Evaluation; Systematic review; Primary study; Smell
   indicator
AB Context: The definition and term "case study"are not being applied consistently by software engineering researchers. We previously developed a trivial "smell indicator"to help detect the misclassification of primary studies as case studies. Objective: To evaluate the performance of the indicator. Methods: We compare the performance of the indicator against human classifiers for three datasets, two datasets comprising classifications by both authors of systematic literature studies and primary studies, and one dataset comprising only primary-study author classifications. Results: The indicator outperforms the human classifiers for all datasets. Conclusions: The indicator is successful because human classifiers "fail"to properly classify their own, and others', primary studies. Consequently, reviewers of primary studies and authors of systematic literature studies could use the classifier as a "sanity"check for primary studies. Moreover, authors might use the indicator to double-check how they classified a study, as part of their analysis, and prior to submitting their manuscript for publication. We challenge the research community to both beat the indicator, and to improve its ability to identify true case studies.
C1 [Rainer, Austen] Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, Antrim, North Ireland.
   [Wohlin, Claes] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Queens University Belfast; Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Ayala C, 2022, IEEE T SOFTWARE ENG, V48, P4229, DOI 10.1109/TSE.2021.3113558
   Chacón-Luna AE, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106389
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Rainer A, 2023, REPORTING CASE STUDI
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Wohlin C, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111395
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
NR 10
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107252
DI 10.1016/j.infsof.2023.107252
EA MAY 2023
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P8FO1
UT WOS:001052976000001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Galster, M
   Mitrovic, A
   Malinen, S
   Holland, J
   Peiris, P
AF Galster, Matthias
   Mitrovic, Antonija
   Malinen, Sanna
   Holland, Jay
   Peiris, Pasan
TI Soft skills required from software professionals in New Zealand
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Soft skills; Software engineering practice; Job adverts; Exploratory
   study; Flexiterm
ID KNOWLEDGE
AB Context: Soft skills (e.g., communication) significantly contribute to software project success. Objective: We aim to understand (a) what are relevant soft skills in software engineering, (b) how soft skills relate to characteristics of hiring organizations, and (c) how reliably we can automatically identify soft skills in job adverts to support their continuous analysis. We focus on soft skills required by organizations in New Zealand, a country with a small but growing software sector characterized by a skills shortage, reliance on offshoring, and embedded in a bi-cultural context. Method: We manually analyzed 530 job adverts from New Zealand's largest portal for technology-related positions. We identified soft skills following an inductive approach, i.e., without pre-defined soft skills. We complemented the manual analysis with an automated analysis using Flexiterm (an approach for term recognition). Results: We found explicit references to soft skills in 82% of adverts. Adverts from recruitment agencies (compared to hiring companies) included fewer soft skills. We identified 17 soft skills and proposed a contextualized software engineering description. Communication-related skills are most in demand. Soft skills related to broader human or societal values (e.g., empathy, cultural awareness) or distributed development are not common. Soft skills do not depend on company size or core business and domain of companies, or whether a company operates globally. Automatically identifying soft skills in adverts is error-prone. Conclusions: Employers explicitly ask for soft skills. Our findings support previous studies that highlight the importance of communication. On the other hand, identified soft skills only partially overlap with those reported in other skills classifications. Characteristics specific to New Zealand do not impact the demand for soft skills. Our findings benefit researchers in human aspects of software engineering and to those responsible for staff, curricula and professional development.
C1 [Galster, Matthias; Mitrovic, Antonija; Malinen, Sanna; Holland, Jay; Peiris, Pasan] Univ Canterbury, Christchurch, New Zealand.
C3 University of Canterbury
RP Galster, M (corresponding author), Univ Canterbury, Christchurch, New Zealand.
EM matthias.galster@canterbury.ac.nz; tanja.mitrovic@canterbury.ac.nz;
   sanna.malinen@canterbury.ac.nz; jay.holland@canterbury.ac.nz;
   pitigalagepasan.peiris@pg.canterbury.ac.nz
OI Mitrovic, Antonija/0000-0003-0936-0806; Peiris,
   Pasan/0000-0002-1968-070X
CR Allport F.H., 1921, J. Abnorm. Psychol. Soc. Psychol, V16, P6, DOI [10.1037/h0069790, DOI 10.1037/H0069790]
   Ardelt M, 2000, SOC PSYCHOL QUART, V63, P392, DOI 10.2307/2695848
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Calazans A., 2017, 25 INT REQ ENG C, P196
   Cerioli M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1586, DOI 10.1145/3341105.3373961
   Chapman E, 2017, J MANAG DEV, V36, P940, DOI 10.1108/JMD-01-2016-0002
   Council of Europe, 2018, REF FRAM COMP DEM CU, V1, P65
   Daneva M, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P284, DOI 10.1145/3319008.3319352
   Daneva M, 2017, INT SYMP EMP SOFTWAR, P448, DOI 10.1109/ESEM.2017.60
   Digital Skills Forum, 2021, DIG SKILLS AOT DIG S, P114
   Digital Skills Forum, 2018, DIG SKILLS DIG NAT A, P68
   Erder M, 2017, IEEE SOFTWARE, V34, P20, DOI 10.1109/MS.2017.103
   European Commission, 2020, EU Biodiversity Strategy for 2030, P23
   Frantzi K.T., 1999, J NATURAL LANGUAGE P, V6, P145, DOI DOI 10.5715/JNLP.6.3_
   Galster M., 2022, 16 ACM IEEE INT S EM, P272
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Gurcan F., 2019, 1 INT INFORMATICS SO, P1
   Gurcan F, 2019, IEEE ACCESS, V7, P82541, DOI 10.1109/ACCESS.2019.2924075
   Hammer C, 2017, BIG DATA POTENTIAL C
   Heckman JJ, 2012, LABOUR ECON, V19, P451, DOI 10.1016/j.labeco.2012.05.014
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   Hendarman AF, 2012, PROCD SOC BEHV, V52, P35, DOI 10.1016/j.sbspro.2012.09.439
   Herrmann Andrea, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P347, DOI 10.1007/978-3-642-37422-7_25
   Hidayati Anita, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P110, DOI 10.1145/3378936.3378966
   James T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P13, DOI 10.1109/ICSE-SEIP.2017.31
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Kanij T, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P1, DOI [10.1109/ICSE-SEIS55304.2022.9793874, 10.1145/3510458.3513016]
   Kechagias K., 2011, Teaching and assessing soft skills
   Khaouja I, 2021, IEEE ACCESS, V9, P118134, DOI 10.1109/ACCESS.2021.3106120
   Krishnamurthy R, 2017, IEEE SOFTWARE, V34, P9, DOI 10.1109/MS.2017.83
   Kumari Neeraj, 2014, The ﻿Journal of Business, Economics, and Environmental Studies, V4, P19
   Liang J., 2022, ACM JOINT EUR SOFTW, P170
   Matteson ML, 2016, PORTAL-LIBR ACAD, V16, P71, DOI 10.1353/pla.2016.0009
   Matturro G, 2019, J UNIVERS COMPUT SCI, V25, P16
   Matturro G, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P101, DOI 10.1109/CHASE.2015.30
   Matturro G, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P133, DOI 10.1109/CHASE.2013.6614749
   Ministry of Business Innovation and Employment (MBIE) New Zealand, 2017, ICT Sector Report.
   Ministry of Business Innovation and Employment (MBIE) New Zealand, 2014, The New Zealand Sectors Report 2014-Main Report.
   Noll J, 2017, LECT NOTES COMPUT SC, V10611, P307, DOI 10.1007/978-3-319-69926-4_22
   Nurwidyantoro A., 2021, INFORM SOFTWARE TECH, V141, P1
   Ochoa SF, 2017, IEEE SOFTWARE, V34, P96, DOI 10.1109/MS.2017.64
   Papoutsoglou M, 2019, IEEE ACCESS, V7, P157595, DOI 10.1109/ACCESS.2019.2949905
   Papoutsoglou M, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P108, DOI 10.1109/SEAA.2017.50
   Richa S., 2016, INT C ED NEW LEARN T, P8880
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Rosener A., 2016, LIBR LEADERSH MANAG, V30, P1
   Sadowsi C., 2019, Rethinking Productivity in Software Engineering, P39
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sampaio Suzana C. B., 2021, International Journal of Agile Systems and Management, V14, P27, DOI 10.1504/IJASM.2021.114904
   SFTI Foundation, 2021, SKILLS FRAM INF AG
   Shastri Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09899-4
   Sibarani EM, 2020, LECT NOTES COMPUT SC, V12392, P366, DOI 10.1007/978-3-030-59051-2_25
   Spasic I, 2013, J BIOMED SEMANT, V4, DOI 10.1186/2041-1480-4-27
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Technology Investment Network, 2020, The Investor's Guide to the New Zealand Technology Sector
   Treude C., 2019, Rethinking Productivity in Software Engineering, P169
   U.S. Department of Labor, 2019, OCCUPATIONAL INFORM
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Wagner S, 2019, RETHINKING PRODUCTIV, P69, DOI 10.1007/978-1-4842-4221-68
   Wang C, 2020, IEEE SYM PARA DISTR, P1052, DOI 10.1109/IPDPSW50202.2020.00176
   Wang C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268916
   Wang D, 2018, LECT NOTES COMPUT SC, V11271, P141, DOI 10.1007/978-3-030-03673-7_10
   Wang D, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268926
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   World Economic Forum, 2020, FUT JOBS REP 2020, P163
   Wu J, 2017, INT C SERVICE SYSTEM, P1
NR 68
TC 4
Z9 4
U1 4
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107232
DI 10.1016/j.infsof.2023.107232
EA MAY 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H7MC0
UT WOS:000997750100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zheng, ZQ
   Liu, YS
   Zhang, B
   Liu, XQ
   He, HY
   Gong, X
AF Zheng, Zhangqi
   Liu, Yongshan
   Zhang, Bing
   Liu, Xinqian
   He, Hongyan
   Gong, Xiang
TI A multitype software buffer overflow vulnerability prediction method
   based on a software graph structure and a self-attentive graph neural
   network
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software graph structure; Self-attentive; Graph neural networks;
   Multitype buffer overflow vulnerability
AB Context: Buffer overflow vulnerabilities are one of the most common and dangerous software vulnerabilities; however, the complexity of software code makes predicting buffer overflow vulnerabilities in software challenging.Objective: To accurately predict multiple types of software buffer overflow vulnerabilities, this paper proposes a multitype software buffer overflow vulnerability prediction method called MSVAGraph that is based on the graph structure of software and a self-attentive graph neural network.Method: First, by analyzing software buffer overflow type vulnerabilities, a vulnerability feature set GSVFset extraction method based on graph structure is proposed to act as the software's basic unit. Second, a self-attentive pooling mechanism is used to design a vulnerability feature update mechanism based on a self-attentive graph neural network to transform the graph structure of the vulnerability feature set GSVFset into a feature vector representation. Finally, based on the updated GSVFset feature vector, a time-recursive-based neural network is designed to construct a prediction method for multitype software buffer overflow vulnerabilities.Results: The method proposed in this paper validates executable programs of four types of buffer overflow vul-nerabilities in the Juliet dataset using precision, accuracy, recall and F1 value as evaluation metrics. The pre-diction results have higher values after introducing the self-attentive pooling mechanism.Conclusion: The proposed MSVAGraph achieves high precision, accuracy, recall and F1 value, and can better preserve the network topology and node content information of graphs in the software's graph structure.
C1 [Zheng, Zhangqi; Liu, Yongshan; Zhang, Bing; He, Hongyan] Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao, Hebei, Peoples R China.
   [Zheng, Zhangqi; Zhang, Bing] Key Lab Software Engn Hebei Prov, Qinhuangdao 066004, Peoples R China.
   [Liu, Xinqian] Shandong Univ Technol, Sch Comp Sci & Technol, Zibo 255000, Peoples R China.
   [Gong, Xiang] Hebei Univ Environm Engn, Qinhuangdao 066102, Peoples R China.
C3 Yanshan University; Shandong University of Technology; Hebei University
   of Environmental Engineering
RP Liu, YS (corresponding author), Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao, Hebei, Peoples R China.
EM 451499304@qq.com
RI Gu, Bingxin/JNS-4761-2023; zhang, ling/JXW-6931-2024; Yang,
   Lili/JTT-5215-2023; chen, jiayi/KHV-5520-2024; lin, qing/JTU-4293-2023;
   LEI, LEI/JTS-4675-2023; Zhang, Kai/KBD-3312-2024; zhang,
   xu/JXX-7692-2024; wang, yi/JYO-8193-2024; chen, yan/JRY-4645-2023; lei,
   lei/JSL-3106-2023; wang, hongyuan/JWP-2279-2024; He, Hongyan/V-5942-2017
OI Gu, Bingxin/0009-0005-5667-1430; Yang, Lili/0009-0008-2926-484X; Zhang,
   Bing/0000-0002-9867-8439; Zheng, Zhangqi/0000-0001-9085-4277
FU National Natural Science Foundation of China [61972334]; Central
   government guided local science and Technology Development Fund Project
   [226Z0701G]; Natural Science Foundation of Hebei Province [F2022203026];
   Science and Technology Project of Hebei Education Department
   [BJK2022029, QN2021145]; Innovation Capability Improvement Plan Project
   of Hebei Province [22567637H]
FX Acknowledgements This work was supported by the National Natural Science
   Foundation of China (no. 61972334) , Central government guided local
   science and Technology Development Fund Project (no. 226Z0701G) , the
   Natural Science Foundation of Hebei Province (no. F2022203026) , Science
   and Technology Project of Hebei Education Department (no. BJK2022029,
   QN2021145) and Innovation Capability Improvement Plan Project of Hebei
   Province (no. 22567637H) .
CR Bilgin Z, 2020, IEEE ACCESS, V8, P150672, DOI 10.1109/ACCESS.2020.3016774
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Choi MJ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1546
   Croft R., 2022, IEEE T SOFTWARE ENG, P1
   Cui L, 2021, IEEE T INF FOREN SEC, V16, P2004, DOI 10.1109/TIFS.2020.3047756
   cwe.mitre, About us
   Ghaffarian SM, 2021, INFORM SCIENCES, V553, P189, DOI 10.1016/j.ins.2020.11.053
   Han H., 2008, COMPUT DEV APPL
   Han K., 2016, P 2016 INT C INT INT, P114
   Hanif H, 2021, J NETW COMPUT APPL, V179, DOI 10.1016/j.jnca.2021.103009
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu JC, 2020, TSINGHUA SCI TECHNOL, V25, P604, DOI 10.26599/TST.2019.9010068
   [黄桦烽 Huang Huafeng], 2019, [计算机研究与发展, Journal of Computer Research and Development], V56, P2299
   Korpi J, 2007, ADVANCES AND INNOVATIONS IN SYSTEMS, COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P197, DOI 10.1007/978-1-4020-6264-3_35
   Krinke J., 2004, WORKSH ASP REV ENG
   Lee J, 2019, PR MACH LEARN RES, V97
   Li A., 2017, CHINESE HIGH TECHNOL
   Li H., 2012, STAT LEARNING METHOD
   Li Y., 2021, COMMUN COMPUT INF SC, V1558, P342
   Li Z., 2021, IEEE T DEPENDABLE SE
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin DS, 2019, J PHYS CONF SER, V1187, DOI 10.1088/1742-6596/1187/5/052031
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Liu SG, 2020, IEEE T IND INFORM, V16, P2154, DOI 10.1109/TII.2019.2942800
   Luo C.L., 2020, MATH PROBL ENG, P1
   Mikolov T, 2013, P 2013 INT C LEARNIN
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Minmin Zhou, 2019, Wuhan University Journal of Natural Sciences, V24, P149, DOI 10.1007/s11859-019-1380-z
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Pavitdeep Singh, 2013, SOFTWARE ENG NOTES A
   PEERZADA B., 2021, P 9 INT C REL INF TE, DOI 10.1109/IWALT.2000.890602
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pereira Jose D'Abruzzo, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P123, DOI 10.1109/ISSREW51248.2020.00049
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Qiaoqiao Yan, 2021, IEEJ Transactions on Electrical and Electronic Engineering, V16, P1635, DOI 10.1002/tee.23467
   Ren JD, 2019, SECUR COMMUN NETW, DOI 10.1155/2019/8391425
   Ren S.Y., 2021, P 2020 INT S THEOR A, P1
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   Rozi M.F., 2021, P 28 INT C NEUR INF, P669, DOI [10.1007/978-3-030-92270-2_57, DOI 10.1007/978-3-030-92270]
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Tamura Y., 2021, SAFETY RELIABILITY M, P161
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Williams MA, 2020, COMPUT SECUR, V92, DOI 10.1016/j.cose.2020.101751
   Wu P, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P38, DOI 10.1109/QRS-C51114.2020.00018
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang SG, 2021, I C DEPEND SYS NETWO, P224, DOI 10.1109/DSN48987.2021.00036
   Yuntao Zhang, 2019, 2019 IEEE Fourth International Conference on Data Science in Cyberspace (DSC). Proceedings, P46, DOI 10.1109/DSC.2019.00016
   Zeng JX, 2020, IEEE INT CONF TRUST, P1664, DOI 10.1109/TrustCom50675.2020.00229
   Zeng P, 2020, IEEE ACCESS, V8, P197158, DOI 10.1109/ACCESS.2020.3034766
   Zhang Q, 2019, COMPUT GRAPH FORUM, V38, P243, DOI 10.1111/cgf.13833
   Zhang T., 2021, P 5 INT C DEEP LEARN
   Zheng WN, 2021, PROC INT SYMP SOFTW, P457, DOI 10.1109/ISSRE52982.2021.00054
   Zhou J, 2021, Arxiv, DOI [arXiv:1812.08434, DOI 10.1016/J.AIOPEN.2021.01.001]
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 58
TC 1
Z9 1
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107246
DI 10.1016/j.infsof.2023.107246
EA MAY 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H7GF8
UT WOS:000997597900001
DA 2024-07-18
ER

PT J
AU van Oosten, W
   Rasiman, R
   Dalpiaz, F
   Hurkmans, T
AF van Oosten, Wouter
   Rasiman, Randell
   Dalpiaz, Fabiano
   Hurkmans, Toine
TI On the effectiveness of automated tracing from model changes to project
   issues
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirement Traceability; Trace link recovery; Model-driven development;
   Low-code development; Machine learning
ID REQUIREMENTS TRACEABILITY; LINKS; CODE
AB Context: Requirements Traceability (RT) is concerned with monitoring and documenting the lifecycle of requirements. Although researchers have proposed several automated tracing tools, trace link establishment and maintenance are still prevalently manual activities.Objective: In order to foster the adoption of automated tracing tools, we study their empirical effectiveness in the context of model-driven development (MDD). We focus on trace link recovery (TLR) from (i) SVN revisions of MDD models to (ii) JIRA issues that represent requirements and bugs.Method: Based on the state-of-the-art in automated TLR, we propose the LCDTrace tool that uses 131 features to train a machine learning classifier. Some of these features use specific information for MDD contexts. We conduct three experiments on ten datasets from seven MDD projects. First, we evaluate the effectiveness of three ML algorithms and four rebalancing strategies using all 131 features, and we derive two optimal combinations for trace link recommendation and for trace maintenance. Second, we investigate whether the MDD-specific features convey higher performance than a version of LCDTrace that excludes those features. Third, we employ automated feature selection and study whether we can reduce the number of features while keeping similar performance, thereby boosting time and energy efficiency.Results: In our experiments, the gradient boosting models outperform those based on random forests. The best combinations for trace recommendation and maintenance achieve an F2-score of 61% and F0.5-score of 67%, respectively. While MDD-specific features do not provide additional value, automated feature selection succeeds at reducing feature numerosity without compromising performance.Conclusion: We provide insights on the effectiveness of state-of-the-art TLR techniques in MDD. Our findings are a baseline for devising and experimenting with alternative TLR approaches.
C1 [van Oosten, Wouter; Rasiman, Randell; Dalpiaz, Fabiano] Univ Utrecht, Utrecht, Netherlands.
   [Hurkmans, Toine] Mendix, Rotterdam, Netherlands.
C3 Utrecht University
RP Dalpiaz, F (corresponding author), Univ Utrecht, Utrecht, Netherlands.
EM f.dalpiaz@uu.nl
OI Dalpiaz, Fabiano/0000-0003-4480-3887
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abukwaik H, 2018, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2018.00049
   [Anonymous], 2012, EXPT SOFTWARE ENG
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Aung TWW, 2020, INT C PROGRAM COMPRE, P14, DOI 10.1145/3387904.3389251
   Berry DM, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09986-0
   Blaauboer F, 2007, LECT NOTES COMPUT SC, V4495, P294
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Callens A, 2020, APPL OCEAN RES, V104
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Ding C, 2003, PROCEEDINGS OF THE 2003 IEEE BIOINFORMATICS CONFERENCE, P523, DOI 10.1109/CSB.2003.1227396
   Falessi D, 2020, IEEE T SOFTWARE ENG, V46, P420, DOI 10.1109/TSE.2018.2861735
   Falessi D, 2017, EMPIR SOFTW ENG, V22, P996, DOI 10.1007/s10664-016-9460-6
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Heck P, 2014, J SOFTW-EVOL PROC, V26, P1280, DOI 10.1002/smr.1678
   Ke GL, 2017, ADV NEUR IN, V30
   KENT JT, 1983, BIOMETRIKA, V70, P163, DOI 10.1093/biomet/70.1.163
   Lin JF, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10050-0
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mills C, 2019, PROC IEEE INT CONF S, P103, DOI 10.1109/ICSME.2019.00020
   Mills C, 2018, PROC IEEE INT CONF S, P369, DOI 10.1109/ICSME.2018.00045
   Mills C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P51, DOI 10.1109/ICSE-NIER.2017.14
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Ramesh B., 1993, P 1 INT S REQUIREMEN, P256
   Rasiman R, 2022, LECT NOTES COMPUT SC, V13216, P35, DOI 10.1007/978-3-030-98464-9_4
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Umuhoza E, 2016, LECT NOTES COMPUT SC, V9847, P93, DOI 10.1007/978-3-319-44215-0_8
   van Oosten W., 2023, ONLINE APPENDIX EFFE, DOI [10.5281/zenodo.7757275, DOI 10.5281/ZENODO.7757275]
   Wang BC, 2018, J SYST SOFTWARE, V146, P59, DOI 10.1016/j.jss.2018.09.001
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Yoon J, 2021, COMPUT ECON, V57, P247, DOI 10.1007/s10614-020-10054-w
   Zhao ZY, 2019, PR INT CONF DATA SC, P442, DOI 10.1109/DSAA.2019.00059
NR 45
TC 2
Z9 2
U1 4
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107226
DI 10.1016/j.infsof.2023.107226
EA APR 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F6YY1
UT WOS:000983792200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Shu, T
   Wu, CP
   Ding, ZH
AF Shu, Ting
   Wu, Cuiping
   Ding, Zuohua
TI Boosting input data sequences generation for testing EFSM-specified
   systems using deep reinforcement learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE EFSM; Input data; Feasible test sequences; Deep reinforcement learning
AB Context: Input data sequence (IDS) is an important component of test sequences for testing from the Extended Finite State Machine (EFSM) model. During test generation, frequent IDS derivation is time-consuming. Therefore, it has become one of the key factors that restrict the efficiency of test sequences generation.Objective: To address this issue, this paper introduces deep reinforcement learning (DRL) to propose a novel approach named IDSG-DRL to accelerate IDS derivation.Method: Our method first formalizes the problem of generating IDS for EFSM-based testing as a Markov decision problem. It then incorporates the DRL algorithm to learn experience from previous input data generation and train a decision-making model to significantly enhance the efficiency of subsequent data derivation for the newly generated test sequences. To improve the convergence of DRL algorithm and ensure the success rate of data generation, a state representation based on variable deviation and action formulation using adaptive exploration are elaborately designed. Finally, a DRL-based algorithm for efficiently yielding IDS is presented for any subject test sequence.Results: We evaluate the proposed approach against the random method, GA-based method as well as a particle swarm optimization (PSO) based method. Experimental statistics show that IDSG-DRL significantly outperforms the baselines in terms of iteration steps, runtime cost, and the success rate of input data derivation. Specifically, compared to random, GA-based and PSO-based methods, IDSG-DRL can reduce the average number of iteration steps by up to 87.09%, 78.57%, and 56.35%, respectively. Regarding the average runtime, our approach is about 3.52 and 1.58 times faster than the GA-based and PSO-based methods. Additionally, given a larger input range, we observed that the performance of IDSG-DRL is more stable and its advantages are more significant.Conclusion: The experimental results suggest that our method is very promising to speed up IDS generation for EFSM-based testing.
C1 [Shu, Ting; Wu, Cuiping; Ding, Zuohua] Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
C3 Zhejiang Sci-Tech University
RP Shu, T (corresponding author), Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou 310018, Peoples R China.
EM shuting@zstu.edu.cn; 202030504154@mails.zstu.edu.cn;
   zuohuading@zstu.edu.cn
OI shu, ting/0000-0002-5222-7608
FU Zhejiang Provincial Natural Science Foundation of China; Zhejiang
   Science and Technology Plan Project; National Natural Science Foundation
   of China;  [LY22F020019];  [2022C01045];  [61101111];  [62132014]
FX Acknowledgments This work was supported by the Zhejiang Provincial
   Natural Science Foundation of China under Grant No. LY22F020019, the
   Zhejiang Science and Technology Plan Project under Grant No. 2022C01045,
   and the National Natural Science Foundation of China under Grants (No.
   61101111 and 62132014) .
CR Allman M., 2009, TCP CONGESTIN CONTRO
   Arulkumaran K, 2017, IEEE SIGNAL PROC MAG, V34, P26, DOI 10.1109/MSP.2017.2743240
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bourhfir C, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P75
   CHANSON ST, 1994, IEEE INFOCOM SER, P792, DOI 10.1109/INFCOM.1994.337659
   Derderian K, 2010, AUTOMAT SOFTW ENG, V17, P33, DOI 10.1007/s10515-009-0057-9
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   El-Fakih K, 2017, J SYST SOFTWARE, V123, P106, DOI 10.1016/j.jss.2016.09.044
   Feldt R, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P1, DOI 10.1109/SBST.2015.8
   Francois-Lavet V, 2018, Arxiv, DOI arXiv:1811.12560
   Hierons RM, 2004, COMPUT NETW, V44, P681, DOI 10.1016/j.comnet.2003.06.001
   Huang CM, 1998, COMPUT COMMUN, V21, P1462, DOI 10.1016/S0140-3664(98)00172-8
   Huang CM, 1999, J CHIN INST ENG, V22, P593, DOI 10.1080/02533839.1999.9670497
   Jie Zhang, 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P76, DOI 10.1109/IWAST.2012.6228994
   Kalaji AS, 2011, INFORM SOFTWARE TECH, V53, P1297, DOI 10.1016/j.infsof.2011.06.004
   Kim J, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P51, DOI 10.1145/3194718.3194720
   Lefticaru Raluca, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P525, DOI 10.1109/ICST.2008.32
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Núñez A, 2013, SOFT COMPUT, V17, P301, DOI 10.1007/s00500-012-0894-5
   Orset JM, 2005, LECT NOTES COMPUT SC, V3707, P400
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Plappert M, 2016, keras-rl
   Ramalingom T, 2003, COMPUT COMMUN, V26, P1622, DOI 10.1016/S0140-3664(03)00116-6
   Reddy S, 2020, PROC INT CONF SOFTW, P1410, DOI 10.1145/3377811.3380399
   Shu T, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106557
   Shu T, 2016, INFORM SCIENCES, V370, P63, DOI 10.1016/j.ins.2016.07.059
   Turlea A, 2016, INT SYMP SYMB NUMERI, P173, DOI [10.1109/SYNASC.2016.31, 10.1109/SYNASC.2016.037]
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   van Hasselt H, 2016, AAAI CONF ARTIF INTE, P2094
   Wang ZY, 2016, PR MACH LEARN RES, V48
   Wong WE, 2009, INFORM SOFTWARE TECH, V51, P1505, DOI 10.1016/j.infsof.2009.06.005
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Yang GW, 2019, ADV COMPUT, V113, P225, DOI 10.1016/bs.adcom.2018.10.002
   Yang R, 2015, INT J SOFTW ENG KNOW, V25, P633, DOI 10.1142/S0218194015300018
   Zhang J, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P242, DOI 10.1109/SEFM.2004.1347528
   Zhang SH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P555, DOI 10.1109/ASE51524.2021.9678832
   Zhao RL, 2020, IEEE T RELIAB, V69, P611, DOI 10.1109/TR.2020.2971095
   Zhou XF, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P925, DOI 10.1109/ICSESS.2014.6933716
NR 40
TC 1
Z9 1
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107114
DI 10.1016/j.infsof.2022.107114
EA DEC 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200005
DA 2024-07-18
ER

PT J
AU Anquetil, N
   Delplanque, J
   Ducasse, S
   Zaitsev, O
   Fuhrman, C
   Gueheneuc, YG
AF Anquetil, N.
   Delplanque, J.
   Ducasse, S.
   Zaitsev, O.
   Fuhrman, C.
   Gueheneuc, Y. -g.
TI What do developers consider magic literals? A smalltalk perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software analysis; Software quality; Magic literals
AB Context: Literals are constant values (numbers, strings, etc.) used in the source code. Magic literals are such values used without an explicit explanation of their meaning. Such undocumented values may hinder source code comprehension, negatively impacting maintenance. Relatively little literature can be found on the subject beyond the usual (and very old) recommendation of avoiding literals and preferring named constants. Yet, magic literals are still routinely found in source code.Objective: We studied literal values in source code to understand when they should be considered magic or not (i.e., acceptable). Methods: First, we perform a qualitative study of magic literals, to establish why and under which conditions they are considered harmful. We formalize hypotheses about the reasoning behind how literals are considered magic. Second, we perform a quantitative study on seven real systems ranging from small (a few classes) to large (thousands of classes). We report the literals' types (number, string, Boolean, ... ), their grammatical function (e.g., argument in a call, operand in an expression, value assigned, ... ), or the purpose of the code in which they appear (test methods, regular code). Third, we report on another study involving 26 programmers who analyzed about 24,000 literals, to understand which ones they consider magic. Finally, we evaluate the hypotheses defining specific conditions under which literals are acceptable.Results: We show that (1) literals still exist and are relatively frequent (found in close to 50% of the methods considered); (2) they are more frequent in test methods (in 80% of test methods); (3) to a large extent, they were considered acceptable (only 25% considered magic); and (4) the hypotheses concerning acceptable literals are valid to various degrees.Conclusion: We thus pave the way to future research on magic literals, for example, with tools that could help developers deciding if a literal is acceptable.
C1 [Anquetil, N.; Delplanque, J.; Ducasse, S.] Univ Lille, CNRS, Inria, Cent Lille, Lille, France.
   [Zaitsev, O.] Arolla, Paris, France.
   [Fuhrman, C.] ETS Montreal, Montreal, PQ, Canada.
   Concordia Univ, Montreal, PQ, Canada.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Lille; Centrale Lille; Inria; University of Quebec; Ecole de Technologie
   Superieure - Canada; Concordia University - Canada
RP Anquetil, N (corresponding author), Univ Lille, CNRS, Inria, Cent Lille, Lille, France.
EM nicolas.anquetil@inria.fr
RI Zaitsev, Oleksandr/JMB-5893-2023
OI Zaitsev, Oleksandr/0000-0003-0267-2874; Fuhrman,
   Christopher/0000-0001-8010-1087
CR Alpert ShermanR., 1998, DESIGN PATTERNS SMAL
   [Anonymous], 2018, REFACTORING IMPROVIN
   Delplanque Julien, 2019, INT WORKSHOP SMALLTA
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   McConnell Steve., 2004, Code Complete, V2nd ed
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Miranda E, 2018, PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON VIRTUAL MACHINES AND INTERMEDIATE LANGUAGES (VMIL '18), P57, DOI 10.1145/3281287.3281295
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mukherjee Sudipta, 2017, SOURCE CODE ANAL ROS
   Nicholas D., 1978, LIT BIBLIOMETRICS
   Nundhapana Ruchuta, 2018, P WORLD C ENG COMPUT, V1
   Parnas D. L., 1978, 3rd International Conference on Software Engineering, P264
   Smit M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P504, DOI 10.1109/ICSM.2011.6080819
   Smit M., 2011, TR1106 U ALB DEP COM
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Zaitsev Oleksandr, 2020, CHARACTERIZING PHARO
NR 17
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106942
DI 10.1016/j.infsof.2022.106942
EA MAY 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000004
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Ge, XT
   Fang, CR
   Qian, MY
   Ge, Y
   Qing, MS
AF Ge, Xiuting
   Fang, Chunrong
   Qian, Meiyuan
   Ge, Yu
   Qing, Mingshuang
TI Locality-based security bug report identification via active learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security bug report identification; Active learning; Text mining
AB Context: Security bug report (SBR) identification is a crucial way to eliminate security-critical vulnerabilities during software development.
   Objective: In recent years, many approaches have utilized supervised machine learning (SML) techniques in the SBR identification. However, such approaches often require a large number of labelled bug reports, which are often hard to obtain in practice. Active learning is a potential approach to reducing the manual labelling cost while maintaining good performance. Nevertheless, the existing active learning-based SBR identification approach still yields poor performance due to ignoring the locality in bug reports.
   Method: To address the above problems, we propose locality-based SBR identification via active learning. Our approach recommends a small part of instances based on locality in bug reports, asks for their labels, and learns the SBR classifier. Specifically, our approach relies on the locality to construct the initial training set, which is designed to address how to start during active learning. Moreover, our approach applies the locality into the query process, which is designed to improve which instance should be queried next during active learning.
   Result: We conduct experiments on large-scale bug reports (nearly 125K) from six real-world projects. In comparison with three state-of-the-art SML-based and active learning-based SBR identification approaches, our approach can obtain the maximum values of F-Measure (0.8176) and AUC (0.8631). Moreover, our approach requires 16.60% to 71.40% of all bug reports when achieving the optimal performance in these six projects, which improves three approaches from 9.82% to 64.19% on average.
   Conclusion: As shown from the experimental results, our approach can be more effective and efficient to identify SBRs than the existing approaches.
C1 [Ge, Xiuting; Fang, Chunrong; Qian, Meiyuan; Ge, Yu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Qing, Mingshuang] Southwest Univ Sci & Technol, Dept Comp Sci & Technol, Mianyang, Sichuan, Peoples R China.
C3 Nanjing University; Southwest University of Science & Technology - China
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM dg20320002@smail.nju.edu.cn; fangchunrong@nju.edu.cn;
   mf20320109@smail.nju.edu.cn; 920397425@qq.com; qingms@mails.swust.edu.cn
RI Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111
FU National Key Research and Development Program of China [2018YFB1403400];
   National Natural Science Foundation of China [62141215]; Open Foundation
   of State Key Laboratory for Novel Software Technology in Nanjing
   University [ZZKT2021B01]
FX We would like to thank anonymous reviewers for insightful com-ments. The
   work is partly supported by the National Key Research and Development
   Program of China (2018YFB1403400) , National Natural Science Foundation
   of China (62141215) , and the Open Foundation of State Key Laboratory
   for Novel Software Technology in Nanjing University (ZZKT2021B01) .
CR Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Arnold J, 2009, Arxiv, DOI arXiv:0904.4058
   Baset S.A., 2013, P 2013 5 USENIX WORK
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla I, 2014, INT CONF CONTEMP, P376, DOI 10.1109/IC3.2014.6897203
   Chen X, 2019, Arxiv, DOI arXiv:1908.06560
   Cormack GV, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P5, DOI 10.1145/3077136.3080812
   Cormack GV, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P153, DOI 10.1145/2600428.2609601
   Cormack GV, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P75, DOI 10.1145/2911451.2911510
   Dudley JJ, 2018, ACM T INTERACT INTEL, V8, DOI 10.1145/3185517
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Feldman R., 2007, TEXT MINING HDB ADV, DOI DOI 10.1017/CBO9780511546914
   Garcia W., 2016, P 2016 1 ACM WORKSHO, P67
   Ge X., 2021, P 2021 21TH IEEE INT
   Ge XT, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P71, DOI 10.1109/QRS-C.2019.00027
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Goseva-Popstojanova K, 2017, PROC INT SYMP SOFTW, P152, DOI 10.1109/ISSRE.2017.42
   Gunawi H. S., 2014, P ACM S CLOUD COMP S, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiang L, 2019, J VISUAL-JAPAN, V22, P401, DOI 10.1007/s12650-018-0531-1
   Jiang Y, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106314
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu Yi, 2018, Journal of Software, V29, P2559, DOI 10.13328/j.cnki.jos.005394
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Mingshuang Qing, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P20, DOI 10.1109/DSA52907.2021.00012
   Miwa M, 2014, J BIOMED INFORM, V51, P242, DOI 10.1016/j.jbi.2014.06.005
   Murukannaiah PK, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729976
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pan Y, 2020, IEEE ACCESS, V8, P116363, DOI 10.1109/ACCESS.2020.3002842
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   QuinoneroCandela J, 2009, NEURAL INF PROCESS S, P1
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Romano J., 2006, ANN M FLORIDA ASS IN, V177
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Settles B, 2007, ACTIVE LEARNING LIT, V42
   Shu R, 2019, Arxiv, DOI arXiv:1905.06872
   Tolles J, 2016, JAMA-J AM MED ASSOC, V316, P533, DOI 10.1001/jama.2016.7653
   Cormack GV, 2015, Arxiv, DOI arXiv:1504.06868
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wallace B.C., 2013, P PF 2013 KDD WORKSH
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Wu XX, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110456
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yang XQ, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114134
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Yu Z, 2019, EXPERT SYST APPL, V120, P57, DOI 10.1016/j.eswa.2018.11.021
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
NR 57
TC 2
Z9 2
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106899
DI 10.1016/j.infsof.2022.106899
EA MAR 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700011
DA 2024-07-18
ER

PT J
AU Tyagi, S
   Sibal, R
   Suri, B
AF Tyagi, Sulabh
   Sibal, Ritu
   Suri, Bharti
TI Empirically developed framework for building trust in distributed agile
   teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Trust; Distributed agile teams; Agile software development; Grounded
   theory; Global software development
ID SOFTWARE OUTSOURCING RELATIONSHIPS; INTERPERSONAL-TRUST; GROUNDED
   THEORY; LEADERSHIP; CHALLENGES; VALIDATION; PROJECTS; ISSUES
AB Background: Organizations are adopting agile practices in distributed software development in order to develop quality software in less time. Using agile software development in distributed set up has its own set of challenges pertaining to face to face interactions, collaboration, time zone and cultural differences. A strong presence of trust helps to overcome these challenges. A relatively lesser number of empirical studies on multidimensional perspective of trust in distributed agile software development has motivated this study.Objective: This study aims to develop a comprehensive framework to build trust in distributed agile teams.Method: This study is based on Grounded Theory research methodology which involves 40 agile practitioners from diverse domains belonging to 19 different software organizations located across seven different countries. Besides, observations in two different software organizations were also performed to gather data. Data has been gathered in the form of semi-structured interviews and field notes.Result: Qualitative data analysis resulted into five different contributing categories for building trust amongst distributed agile teams. These categories represent multidimensional perspectives that influence trust building amongst agile team members working across different parts of the world.Conclusion: This study culminates into a framework for building trust in distributed agile teams. The proposed framework has been developed empirically and has five components that influence trust building. These components are related to working environment, leadership, organizational, personal and socio cultural perspectives. The multidimensional perspective of trust was investigated from an agile practitioners view through their real-life project experiences. Organizations and software practitioners may utilize the results of this study to create a hospitable environment for building trust while practicing agile in a distributed environment.
C1 [Tyagi, Sulabh] Jaypee Inst Informat Technol, Dept CSE & IT, Noida, India.
   [Tyagi, Sulabh; Sibal, Ritu] Netaji Subhash Univ Technol, Dept COE, Delhi, India.
   [Suri, Bharti] GGSIP Univ, Dept USI & CT, Delhi, India.
C3 Jaypee Institute of Information Technology (JIIT); Netaji Subhas
   University of Technology; GGS Indraprastha University
RP Tyagi, S (corresponding author), Jaypee Inst Informat Technol, Dept CSE & IT, Noida, India.
EM sulabhtyagi2k@yahoo.co.in
RI Harrison, Dylan/AFP-8142-2022
OI Tyagi, Sulabh/0000-0002-2407-6822
FU NSIT
FX Acknowledgment We would like to thank all the participants for their
   valuable time and sharing their project experiences with us and for
   their insightful comments to improve the quality of this article. This
   research study has been partially supported by TRF academic grant, NSIT,
   India.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Adolph S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1031
   AgileIndia, 2019, AG IND 2018
   Al-Ani B, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P31, DOI 10.1109/ICGSE.2013.13
   Al-Ani Ban., 2013, P ACM C COMPUTER SUP, P563, DOI [DOI 10.1145/2441776.2441840, 10.1145/2441776.2441840]
   ASCI, 2019, AG SOFTW COMM IND
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Badreddin O., 2013, ADV SOFTW ENG, V2013
   Birks M., 2011, Grounded Theory: A Practical Guide
   Brashear TG, 2003, J ACAD MARKET SCI, V31, P189, DOI 10.1177/0092070302250902
   Bryant A., 2007, The sage handbook of grounded theory
   Burke CS, 2007, LEADERSHIP QUART, V18, P606, DOI 10.1016/j.leaqua.2007.09.006
   Casimir G., 2006, Journal of Leadership Organizational Studies, V12, P68, DOI DOI 10.1177/107179190601200305
   Castillo-Montoya M, 2016, QUAL REP, V21, P811
   Clark WR, 2010, J BUS-BUS MARK, V17, P215, DOI 10.1080/10517120903000439
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conchúir EO, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICGSE.2006.261229
   Corbin J., 2015, BASICS QUALITATIVE R
   Costa AC, 2011, EUR J WORK ORGAN PSY, V20, P119, DOI 10.1080/13594320903272083
   Dayan M, 2010, IND MARKET MANAG, V39, P691, DOI 10.1016/j.indmarman.2010.01.001
   Diegmann P., 2017, ICIS
   Dirks KT, 2002, J APPL PSYCHOL, V87, P611, DOI 10.1037/0021-9010.87.4.611
   Dorairaj S, 2010, LECT NOTES BUS INF P, V48, P172
   ELLIS TS, 1997, P 30 HAWAII INT C SY, V4, P94
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Gambetta Diego, 2000, Trust: Making and breaking cooperative relations, V2000, P213, DOI 10.2307/2234217
   Gandornani TJ, 2016, COMPUT HUM BEHAV, V62, P257, DOI 10.1016/j.chb.2016.04.009
   Gillespie NA., 2004, Journal of Managerial Psychology
   Gilson Lucy, 2006, J Health Organ Manag, V20, P359, DOI 10.1108/14777260610701768
   Glaser B., 2019, GROUNDED THEORY I ME
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   Goulding C., 2002, GROUNDED THEORY PRAC
   Highsmith J., 2002, Agile software development ecosystems
   Hoda R, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P5
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hossain E, 2009, ASIA PAC SOFWR ENG, P457, DOI 10.1109/APSEC.2009.56
   Hung Y.-T. C., 2004, Proceedings of the 37th Annual Hawaii International Conference on System Sciences
   I.I.I. of Business Analysis, 2019, AG EXT
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jalali S., 2010, P 2010 ACM IEEE INT, P1, DOI [10.1145/1852786.1852817, DOI 10.1145/1852786.1852817]
   JOHNSONGEORGE C, 1982, J PERS SOC PSYCHOL, V43, P1306, DOI 10.1037/0022-3514.43.6.1306
   Jung DI, 2000, J ORGAN BEHAV, V21, P949, DOI 10.1002/1099-1379(200012)21:8<949::AID-JOB64>3.0.CO;2-F
   Kramer R.M., 2001, SOCIAL IDENTITY PROC, P167
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Lane MT, 2009, INT CONF GLOBAL SOFT, P244, DOI 10.1109/ICGSE.2009.32
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Lincoln Y., 1985, Naturalist Inquiry
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Marsh SP, 1994, FORMALISING TRUST CO
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   McCallin Antoinette M, 2003, Nurs Crit Care, V8, P203, DOI 10.1046/j.1362-1017.2003.00033.x
   McHugh O., 2011, Information Systems Development, V8, P503
   McHugh O, 2012, IEEE SOFTWARE, V29, P71, DOI 10.1109/MS.2011.118
   Merriman K.K., 2009, COMPENSATION BENEFIT, V41, P61
   Mike C., 2009, SUCCEEDING AGILE SOF
   Moe N.B., 2009, 2009 42 HAW INT C SY, P1
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moore S., 2004, OFFSHORE OUTSOURCING
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nolan T., 2007, INFORM TECHNOL PEOPL
   Oza NV, 2006, INFORM SOFTWARE TECH, V48, P345, DOI 10.1016/j.infsof.2005.09.011
   Paasivaara M, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P109, DOI 10.1109/ICGSE.2006.261222
   Pillai R, 2003, LEADERSHIP QUART, V14, P161, DOI 10.1016/S1048-9843(03)00008-0
   Puusa A., 2006, J BUS ETHICS ORGAN S
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   REMPEL JK, 1985, J PERS SOC PSYCHOL, V49, P95, DOI 10.1037/0022-3514.49.1.95
   ROTTER JB, 1980, AM PSYCHOL, V35, P1, DOI 10.1037/0003-066X.35.1.1
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Schaubroeck J, 2011, J APPL PSYCHOL, V96, P863, DOI 10.1037/a0022625
   Shrivastava SV, 2015, INFORM SOFTWARE TECH, V58, P373, DOI 10.1016/j.infsof.2014.07.007
   SOLOMON L, 1960, J ABNORM SOC PSYCH, V61, P223, DOI 10.1037/h0047571
   Thorgren S, 2019, RES TECHNOL MANAGE, V62, P31, DOI 10.1080/08956308.2019.1563436
   Tyagi S., 2018, ICTACT Journal on Management Studies, V04, P748
   TYAGI S, 2017, INT C AG SOFTW DEV, P184
   Vax M, 2008, AGILE 2008, PROCEEDINGS, P310, DOI 10.1109/Agile.2008.44
   Weimar E., 2017, ARXIV PREPRINT ARXIV
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Young C, 2008, AGILE 2008, PROCEEDINGS, P304, DOI 10.1109/Agile.2008.7
   Zak PJ, 2017, HARVARD BUS REV, V95, P84
NR 85
TC 11
Z9 11
U1 4
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106828
DI 10.1016/j.infsof.2022.106828
EA JAN 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0J9PR
UT WOS:000780430800001
DA 2024-07-18
ER

PT J
AU Zhang, MX
   Liu, HX
   Chen, CY
   Liu, YZ
   Bai, ST
AF Zhang, Mengxi
   Liu, Huaxiao
   Chen, Chunyang
   Liu, Yuzhou
   Bai, Shuotong
TI Consistent or not? An investigation of using Pull Request Template in
   GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Github; Pull request; Pull request template; Empirical software
   engineering
AB Context: The arbitrary usage of pull requests in GitHub may bring many issues such as incomplete, verbose, and duplicated descriptions, which hinder the development and maintenance of the project. Thus, GitHub proposed the Pull Request Template (PRT) in 2016 so that developers could edit the pull request in a relevant consistent manner. However, whether the PRT has been widely applied to GitHub and what impact it might bring remain little known. Such uninformed cases may affect the efficiency of cooperative development.
   Objective: In this work, we conduct an empirical study on large-scale repositories to explore whether the PRT has been widely applied and what impact it can bring to the GitHub community.
   Method: This work aims to answer four research questions. The first is a statistical experiment with the aim of analyzing the current status of PRTs. The second is an explored experiment, which aims at probing which repositories are suitable to adopt the PRT. The third is the measurement evaluation experiment, focusing on discussing what impact the PRT can bring. The last is an online survey to explain why few PRTs have been adopted. Notably, both the second and third questions are conducted a mixed quantitative and qualitative analysis.
   Results and conclusion: In this work, we find that only 1.2% of repositories contain the PRT in GitHub, and such repositories are mostly in high popularity and contain a large number of PRs. Besides, contributors are willing to accept the PRT that requires pivotal information, including description, test, and check_list. Meanwhile, the PRT can assist developers to manage repositories, reflecting in less time for reviewing, fewer duplicated pull requests, and almost non-existentially invalid comments. Finally, we survey 527 well-reputed developers to explain why few repositories adopt the PRT, and further provide some actionable suggestions.
C1 [Zhang, Mengxi; Liu, Huaxiao; Liu, Yuzhou; Bai, Shuotong] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   [Chen, Chunyang] Monash Univ, Informat Technol, Melbourne, Australia.
   [Zhang, Mengxi; Liu, Huaxiao; Liu, Yuzhou; Bai, Shuotong] Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Changchun 130012, Jilin, Peoples R China.
C3 Jilin University; Monash University; Jilin University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
OI liu, huaxiao/0000-0002-8151-1413; zhang, mengxi/0000-0003-4380-794X;
   Chen, Chunyang/0000-0003-2011-9618
FU Natural Science Research Foundation of Jilin Province of China
   [20190201193JC]; Graduate Innovation Fund of Jilin University, China
   [101832020CX181]; "Fundamental Research Funds for the Central
   Universities'', China; Interdisciplinary Research Funding Program for
   Doctoral Students of Jilin University, China [101832020DJX064]
FX The work is funded by Natural Science Research Foundation of Jilin
   Province of China under Grant Nos. 20190201193JC, supported by Graduate
   Innovation Fund of Jilin University, China 101832020CX181, supported by
   ``the Fundamental Research Funds for the Central Universities'', China,
   and Interdisciplinary Research Funding Program for Doctoral Students of
   Jilin University, China 101832020DJX064.
CR Alyahya S, 2019, 2019 INTERNATIONAL CONFERENCE ON ELECTRONICS, INFORMATION, AND COMMUNICATION (ICEIC), P544, DOI 10.23919/elinfocom.2019.8706495
   [Anonymous], 2016, ENDOGENOUS VARIABLES
   [Anonymous], 2016, DIFFERENCE DIFFERENC
   [Anonymous], 2021, GITHUB US GLOB RANK
   Bao L., 2020, IEEE T SOFTW ENG, P1
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chandrabose Uma Maheswari, 2019, ENHENCE PULL REQUEST
   da Silva Daniel Augusto Nunes, 2020, P 14 BRAZ S SOFTW CO
   Devanbu Premkumar., 2017, Proceedings of the 3rd ACM SIGSOFT International Workshop on Software Analytics (SWAN), P19
   Dobos A., 2012, WORLD RENEWABLE ENER
   Eluri VK, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106616
   GitHub, 2016, CREAT PULL REQ TEMPL
   GitHub, 2020, GITHUB HELL WORLD
   GitHub, 2020, HIST PULL REQ TEMPL
   GitHub, 2016, ISS PULL REQ TEMPL
   GitHub, 2008, GITHUB OP SOURC PLAT
   GitHub, 2021, PULL REQ
   GitHub, 2021, FORK REP
   GitHub Wiki, GITHUB WIK, P2021
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Golzadeh Mehdi, 2021, IDENTIFYING BOT ACTI
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Guzman E., 2014, Association for Computing Machinery, P352
   Hu DY, 2019, INFORM SOFTWARE TECH, V115, P1, DOI 10.1016/j.infsof.2019.07.004
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kicad, 2018, OFF KIC FOOTP LIB
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Li Zhixing, 2021, IEEE T SOFTW ENG
   Li ZQ, 2020, INT J GEOGR INF SCI, V34, P1378, DOI 10.1080/13658816.2020.1720692
   Lu Y, 2016, ASIA PAC SOFWR ENG, P49, DOI [10.1109/APSEC.2016.44, 10.1109/APSEC.2016.018]
   Perlmutter David D., 2007, BREAK RULE WHAT DO I
   Quora, 2009, QUOR IS PLAC GAIN SH
   Rehman I, 2020, PROC IEEE INT CONF S, P855, DOI 10.1109/ICSME46990.2020.00110
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Spencer D., 2009, CARD SORTING DESIGNI
   Stackoverflow, 2008, STACK OV IS LARG MOS
   VANEEUWIJK FA, 1995, BIOMETRICS, V51, P1017, DOI 10.2307/2533001
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zhao GX, 2019, EXPERT OPIN DRUG DIS, V14, P735, DOI 10.1080/17460441.2019.1614559
   Zhu Jiaxin, 2014, 8 ACMIEEE INT S EMPI, P30
   Zou WQ, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P306, DOI 10.1109/QRS.2019.00047
NR 44
TC 3
Z9 4
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106797
DI 10.1016/j.infsof.2021.106797
EA DEC 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800009
DA 2024-07-18
ER

PT J
AU Lewowski, T
   Madeyski, L
AF Lewowski, Tomasz
   Madeyski, Lech
TI How far are we from reproducible research on code smell detection? A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software engineering; Code smells; Reproducibility; Reproducible
   research
ID MACHINE LEARNING TECHNIQUES; SOFTWARE-DEVELOPMENT
AB Context: Code smells are symptoms of wrong design decisions or coding shortcuts that may increase defect rate and decrease maintainability. Research on code smells is accelerating, focusing on code smell detection and using code smells as defect predictors. Recent research shows that even between software developers, agreement on what constitutes a code smell is low, but several publications claim the high performance of detection algorithms-which seems counterintuitive, considering that algorithms should be taught on data labeled by developers. Objective: This paper aims to investigate the possible reasons for the inconsistencies between studies in the performance of applied machine learning algorithms compared to developers. It focuses on the reproducibility of existing studies. Methods: A systematic literature review was performed among conference and journal articles published between 1999 and 2020 to assess the state of reproducibility of the research performed in those papers. A quasi-gold standard procedure was used to validate the search. Modeling process descriptions, reproduction scripts, data sets, and techniques used for their creation were analyzed. Results: We obtained data from 46 publications. 22 of them contained a detailed description of the modeling process, 17 included any reproduction data (data set, results, or scripts) and 15 used existing data sets. In most of the publications, analyzed projects were hand-picked by the researchers. Conclusion: Most studies do not include any form of an online reproduction package, although this has started to change recently-8% of analyzed studies published before 2018 included a full reproduction package, compared to 22% in years 2018-2019. Ones that do include a package usually use a research group website or even a personal one. Dedicated archives are still rarely used for data packages. We recommend that researchers include complete reproduction packages for their studies and use well-established research data archives instead of their own websites.
C1 [Lewowski, Tomasz; Madeyski, Lech] Wroclaw Univ Sci & Technol, Dept Appl Informat, Wroclaw, Poland.
C3 Wroclaw University of Science & Technology
RP Lewowski, T (corresponding author), Wroclaw Univ Sci & Technol, Dept Appl Informat, Wroclaw, Poland.
EM tomasz.lewowski@pwr.edu.pl; lech.madeyski@pwr.edu
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Lewowski, Tomasz/0000-0003-4897-1263
FU Polish National Centre for Research and Development, Poland
   [POIR.01.01.01-00-0792/16]
FX This research was partly financed by Polish National Centre for Research
   and Development, Poland grant POIR.01.01.01-00-0792/16: ''Codebeat
   -wykorzystanie sztucznej inteligencji w statycznej analizie jakosci
   oprogramowania.''
CR Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Barbez A, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110486
   Barbez A, 2019, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSME.2019.00021
   Barr E., 2010, P FSE SDP WORKSH FUT, P23
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Caram FL, 2019, INT J SOFTW ENG KNOW, V29, P285, DOI 10.1142/S021819401950013X
   Carlisle JB, 2017, ANAESTHESIA, V72, P944, DOI 10.1111/anae.13938
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen ZF, 2018, INFORM SOFTWARE TECH, V94, P14, DOI 10.1016/j.infsof.2017.09.011
   Das AK, 2019, TENCON IEEE REGION, P2081, DOI [10.1109/tencon.2019.8929628, 10.1109/TENCON.2019.8929628]
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fu SZ, 2015, INT SYMP EMP SOFTWAR, P41
   Gauthier F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1169, DOI 10.1109/ICSE.2013.6606670
   Gebru T, 2021, COMMUN ACM, V64, P86, DOI 10.1145/3458723
   Grodzicka H., 2020, Data-Centr. Bus. Applicat.: Tow. Softw. Develop, P137, DOI DOI 10.1007/978-3-030-34706-2_8
   Guggulothu T, 2020, SOFTWARE QUAL J, V28, P1063, DOI 10.1007/s11219-020-09498-y
   Guo XL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361257
   Gupta Himanshu, 2019, 2019 9th Annual Information Technology, Electromechanical Engineering and Microelectronics Conference (IEMECON), P189, DOI 10.1109/IEMECONX.2019.8877082
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hesselmann F, 2017, CURR SOCIOL, V65, P814, DOI 10.1177/0011392116663807
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   Hozano M, 2017, INT C PROGRAM COMPRE, P110, DOI 10.1109/ICPC.2017.32
   Iterative.ai, DAT VERS CONTR
   Karaduzovic-Hadziabdic K, 2018, 2018 3RD INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P670, DOI 10.1109/UBMK.2018.8566561
   Kaur A, 2020, NEURAL COMPUT APPL, V32, P7009, DOI 10.1007/s00521-019-04175-z
   Kaur A, 2017, 2017 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND DATA SCIENCE (MLDS 2017), P9, DOI 10.1109/MLDS.2017.8
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K, 2017, INT J ELECT COMPUT E, V7, DOI DOI 10.11591/IJECE.V7I6
   Kitchenham B. A., 2015, Evidence-based software engineering and systematic reviews, DOI DOI 10.1201/B19467
   Kiyak E. O., 2019, 3 INT SYMPMULTIDISCI, P1, DOI [10.1109/ISMSIT.2019.8932855, DOI 10.1109/ISMSIT.2019.8932855]
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lewowski T., 2022, Develop. Informat. Knowl. Manage. Bus. Appl, V3, P285
   Lewowski T, 2020, STUD COMPUT INTELL, V851, P1, DOI 10.1007/978-3-030-26574-8_1
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Madeyski Lech, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P342, DOI 10.1145/3383219.3383264
   Madeyski L, 2021, B POL ACAD SCI-TECH, V69, DOI 10.24425/bpasts.2020.135401
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Merzah Bayadaa M., 2019, 2019 International Conference on Information and Communications Technology (ICOIACT), P394
   Mkaouer MW, 2016, LECT NOTES COMPUT SC, V9962, P281, DOI 10.1007/978-3-319-47106-8_24
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mousavi T, 2020, DARU, V28, P359, DOI 10.1007/s40199-020-00332-1
   NASEM] National Academies of Sciences Engineering and Medicine, 2019, Reproducibility and Replicability in Science, DOI [DOI 10.17226/25303, 10.17226/25303]
   Ocariza FS, 2017, IEEE INT CONF AUTOM, P566, DOI 10.1109/ASE.2017.8115667
   Ozkalkan Z., 2018, CEUR WORKSHOP PROC, V2201
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2016, PROC IEEE INT CONF S, P636, DOI 10.1109/ICSME.2016.26
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P769, DOI 10.1109/ICSE.2015.244
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pradel M., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P265
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosenbaum S, 2010, HEALTH SERV RES, V45, P1442, DOI 10.1111/j.1475-6773.2010.01140.x
   Rozier KY, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON ETHICS IN SCIENCE, TECHNOLOGY AND ENGINEERING
   Rubin J, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P123, DOI 10.1109/MOBILESoft.2019.00025
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Sharma P., 2018, INT J ENG TECHNOL UA, V7, P161, DOI [10.14419/ijet.v7i2.27.14635, DOI 10.14419/IJET.V7I2.27.14635]
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tummalapalli Sahithi, 2019, 2019 9th Annual Information Technology, Electromechanical Engineering and Microelectronics Conference (IEMECON), P137, DOI 10.1109/IEMECONX.2019.8877008
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 88
TC 17
Z9 17
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106783
DI 10.1016/j.infsof.2021.106783
EA DEC 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fahmideh, M
   Grundy, J
   Beydoun, G
   Zowghi, D
   Susilo, W
   Mougouei, D
AF Fahmideh, Mahdi
   Grundy, John
   Beydoun, Ghassan
   Zowghi, Didar
   Susilo, Willy
   Mougouei, Davoud
TI A model-driven approach to reengineering processes in cloud computing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modeling; Model-driven software engineering; Reengineering process;
   Method engineering; Cloud computing; Legacy software applications
ID DESIGN SCIENCE RESEARCH; LEGACY; MIGRATION; FRAMEWORK; SYSTEMS
AB Context: The reengineering process of large data-intensive legacy software applications ("legacy applications" for brevity) to cloud platforms involves different interrelated activities. These activities are related to planning, architecture design, re-hosting/lift-shift, code refactoring, and other related ones. In this regard, the cloud computing literature has seen the emergence of different methods with a disparate point of view of the same underlying legacy application reengineering process to cloud platforms. As such, the effective interoperability and tailoring of these methods become problematic due to the lack of integrated and consistent standard models. Objective: We design, implement, and evaluate a novel framework called MLSAC (Migration of Legacy Software Applications to the Cloud). The core aim of MLSAC is to facilitate the sharing and tailoring of reengineering methods for migrating legacy applications to cloud platforms. MLSAC achieves this by using a collection of coherent and empirically tested cloud-specific method fragments from the literature and practice. A metamodel (or meta-method) together with corresponding instantiation guidelines is developed from this collection. The metamodel can also be used to create and maintain bespoke reengineering methods in a given scenario of reengineering to cloud platforms. Approach: MLSAC is underpinned by a metamodeling approach that acts as a representational layer to express reengineering methods. The design and evaluation of MLSAC are informed by the guidelines from the design science research approach. Results: Our framework is an accessible guide of what legacy-to-cloud reengineering methods can look like. The efficacy of the framework is demonstrated by modeling real-world reengineering scenarios and obtaining user feedback. Our findings show that the framework provides a fully-fledged domain-specific, yet platformindependent, foundation for the semi-automated representing, maintaining, sharing, and tailoring reengineering methods. MLSAC contributes to the state of the art of cloud computing and model-driven software engineering literature through (a) providing a collection of mainstream method fragments for incorporate into various scenarios of reengineering processes and (b) enabling a basis for consistent creation, representation, and maintenance of reengineering methods and processes within the cloud computing community.
C1 [Fahmideh, Mahdi; Mougouei, Davoud] Univ Southern Queensland, Toowoomba, Qld, Australia.
   [Grundy, John; Beydoun, Ghassan] Monash Univ, Clayton, Vic, Australia.
   [Zowghi, Didar] Univ Technol Sydney, Sydney, NSW, Australia.
   [Susilo, Willy] Univ Wollongong, Wollongong, NSW, Australia.
C3 University of Southern Queensland; Monash University; University of
   Technology Sydney; University of Wollongong
RP Fahmideh, M (corresponding author), Univ Southern Queensland, Toowoomba, Qld, Australia.
EM mahdi.fahmideh@usq.edu.au
RI Beydoun, Ghassan/L-5554-2017; Fahmideh/AAH-7234-2021; Zowghi,
   Didar/AAF-2345-2019; Susilo, Willy/A-3724-2008; Grundy, John/I-6681-2012
OI Fahmideh/0000-0001-7196-7217; Zowghi, Didar/0000-0002-6051-0155; Susilo,
   Willy/0000-0002-1562-5105; Beydoun, Ghassan/0000-0001-8087-5445
FU ARC Laureate Fellowship [FL190100035]
FX We would like to thank our industry partners who provided detailed and
   constructive feedback in different stages of this research. We would
   like to express our special thanks to anonymous reviewers whose comments
   improved this paper. Finally, the work of Professor John Grundy was
   supported by the ARC Laureate Fellowship under Grant FL190100035.
CR Alkhalil Adel, 2017, International Journal of Business Information Systems, V24, P102
   Andrikopoulos V, 2014, LECT NOTES COMPUT SC, V8745, P148, DOI 10.1007/978-3-662-44879-3_11
   Andrikopoulos V, 2013, COMPUTING, V95, P493, DOI 10.1007/s00607-012-0248-2
   [Anonymous], 2008, Metamodelling for software engineering
   [Anonymous], 2011, INT J COMPUT APPL
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bayern M., 2019, TECHREPUBLICS
   Bergmayr A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3150227
   Beydeda S., 2005, MODEL DRIVEN SOFTWAR
   Bianchi A, 2003, IEEE T SOFTWARE ENG, V29, P225, DOI 10.1109/TSE.2003.1183932
   Bounagui Y, 2015, I C COMP SYST APPLIC
   Brambilla M., 2017, Model-driven software engineering in practice, V3, P1
   Brandic Ivona, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P244, DOI 10.1109/CLOUD.2010.42
   Brandtzaeg E., 2012, 8 EUR C MOD FDN APPL, P18
   Cervera M, 2015, INFORM SYST, V50, P36, DOI 10.1016/j.is.2015.01.006
   Chauhan MA, 2012, 2012 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICE COMPUTING (CSC), P80, DOI 10.1109/CSC.2012.20
   Church P, 2017, J CLOUD COMPUT-ADV S, V6, DOI 10.1186/s13677-017-0080-5
   De Angelis F, 2018, INT CONF UTIL CLOUD, P232, DOI 10.1109/UCC-Companion.2018.00061
   Dybå T, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P432, DOI 10.1109/ISESE.2005.1541852
   Fahmideh M., 2021, IEEE T SOFTWARE ENG
   Fahmideh M., 2016, P EUR C SERV OR CLOU
   Fahmideh M., 2021, AUXILIARY MAT LIST S
   Fahmideh M., 2016, CONCEPTUALISING CLOU, V1
   Fahmideh M, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.06.005
   Fahmideh M, 2019, EUR J INFORM SYST, V28, P233, DOI 10.1080/0960085X.2018.1524417
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Frey S., 2011, International Journal on Advances in Software, V4, P342
   Frey S, 2010, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, GRIDS, AND VIRTUALIZATION (CLOUD COMPUTING 2010), P155
   Galante G, 2012, INT CONF UTIL CLOUD, P263, DOI 10.1109/UCC.2012.30
   Gholami M. F., 2010, Proceedings 2010 UKSim 4th European Modelling Symposium on Computer Modelling and Simulation (EMS 2010), P75, DOI 10.1109/EMS.2010.24
   Gholami MF, 2017, INFORM SYST, V67, P100, DOI 10.1016/j.is.2017.03.008
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Gholami MF, 2010, UKSIM INT CONF COMP, P152, DOI 10.1109/ISMS.2010.38
   Greenhalgh T, 1997, BMJ-BRIT MED J, V315, P740, DOI 10.1136/bmj.315.7110.740
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Guillen Joaquin, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P180, DOI 10.1007/978-3-642-40651-5_15
   Hamdaqa Mohammad, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P98
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Henderson-Sellers B, 2010, LECT NOTES COMPUT SC, V6412, P219, DOI 10.1007/978-3-642-16373-9_16
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Hong Zhou, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P383, DOI 10.1109/COMPSAC.2010.46
   Hursch W., 1995, Separation of concerns
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Khadka R., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P163, DOI 10.1109/ICSM.2011.6080783
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kleppe A. G., 2003, MODEL DRIVEN ARCHITE
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Lorido-Botran T., 2012, TECH REP EHU KAT IK
   Lorido-Botran T, 2014, J GRID COMPUT, V12, P559, DOI 10.1007/s10723-014-9314-7
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Menychtas A, 2014, INT SYMP SYMB NUMERI, P424, DOI 10.1109/SYNASC.2013.62
   Merle P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P852, DOI 10.1109/CLOUD.2015.117
   Michael Maximilien E., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P619, DOI [10.1145/1639950.1639957, DOI 10.1145/1639950.1639957]
   Moradi H, 2020, FUTURE GENER COMP SY, V105, P61, DOI 10.1016/j.future.2019.11.028
   Nasr KA, 2013, J SOFTW-EVOL PROC, V25, P639, DOI 10.1002/smr.540
   O.M. group, 2006, SOFTW PROC ENG MET S, V1
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pratt M.K., 2020, WHY CLOUD MIGRATION
   Rai R, 2015, SPRINGERPLUS, V4, DOI 10.1186/s40064-015-0962-2
   Razavian M, 2014, J SOFTW-EVOL PROC, V26, P141, DOI 10.1002/smr.1613
   Robinson OC, 2014, QUAL RES PSYCHOL, V11, P25, DOI 10.1080/14780887.2013.801543
   Rochwerger B, 2009, IBM J RES DEV, V53, DOI 10.1147/JRD.2009.5429058
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shuaib Mohammed, 2019, Ambient Communications and Computer Systems. RACCCS-2018. Advances in Intelligent Systems and Computing (AISC 904), P387, DOI 10.1007/978-981-13-5934-7_35
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Standard O, 2013, TOP ORCH SPEC CLOUD
   Stroulia E, 2002, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2002.1167788
   Umar A, 2009, J SYST SOFTWARE, V82, P448, DOI 10.1016/j.jss.2008.07.047
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wettinger Johannes, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P437
   Wilson J., 2020, IHS MARKIT TECHNOLOG
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
NR 77
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106795
DI 10.1016/j.infsof.2021.106795
EA DEC 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cardozo, N
   Mens, K
AF Cardozo, Nicolas
   Mens, Kim
TI Programming language implementations for context-oriented self-adaptive
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context-oriented programming; Self-adaptive systems; Language
   engineering; Programming language abstractions
AB Context: The context-oriented programming paradigm is designed to enable self-adaptation, or dynamic behavior modification of software systems, in response to changes in their surrounding environment. Contextoriented programming offers an adaptation model, from a programming language perspective, that maintains a clean modularisation between the application and adaptation logic, as well as between the components providing adaptations. Objective: We use three implementation techniques for context-oriented programming languages to assess their appropriateness to foster self-adaptive systems. These approaches take advantage of the capabilities offered by the host programming language to realize self-adaptation as proposed by context-oriented languages. Method: We evaluate each of these approaches by assessing their modularity and complexity when defining adaptations, and by comparing their run-time performance on a simple benchmark. Results: Our results show a higher modularity than that for common architecture based self-adaptive systems, while maintaining comparable performance. Conclusion: We conclude that context-oriented programming is an appropriate paradigm to realize self adaptation.
C1 [Cardozo, Nicolas] Univ Andes, FLAG Lab, Syst & Comp Engn Dept, Bogota, Colombia.
   [Mens, Kim] Catholic Univ Louvain, ICTEAM, Louvain La Neuve, Belgium.
C3 Universidad de los Andes (Colombia); Universite Catholique Louvain
RP Cardozo, N (corresponding author), Univ Andes, FLAG Lab, Syst & Comp Engn Dept, Bogota, Colombia.
EM n.cardozo@uniandes.edu.co; kim.mens@uclouvain.be
OI Mens, Kim/0000-0003-0303-1630
CR Allan C, 2005, LECT NOTES COMPUT SC, V3676, P10
   [Anonymous], 2013, P INT C ASP OR SOFTW, DOI [DOI 10.1145/2451436, DOI 10.1145/2451436.2451461, 10.1145/2451436.2451461]
   Appeltauer Malte, 2011, Computer Software, V28, P272
   Appeltauer M, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a4
   Appeltauer Malte, 2009, P 1 ACM INT WORKSHOP, P1, DOI DOI 10.1145/1562112.1562118
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Bainomugisha E., 2012, P INT S NEW ID NEW P
   Baumer D., 2000, ROLE OBJECT, P15
   Cardoso N., 2012, 17th Conference on Emerging Technologies Factory Automation ETFA, P1
   Cardozo N., 2015, P CONT OR PROGR WORK, DOI [10.1145/2786545.2786554, DOI 10.1145/2786545.2786554]
   Cardozo N, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P191, DOI 10.1109/TASE.2013.33
   Cardozo Nicolas, 2011, P INT C SOFTWARE ENG, P130
   Costanza P, 2003, ACM SIGPLAN NOTICES, V38, P29, DOI 10.1145/944579.944587
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Desmet B., 2006, P EUR WORKSH ASP SOF
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Duhoux B., 2016, P 8 INT WORKSHOP CON, P7
   Duhoux B, 2019, PROCEEDINGS OF THE WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING (COP'19), P9, DOI 10.1145/3340671.3343357
   Duhoux B, 2019, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'19), DOI 10.1145/3319499.3328240
   Elyasaf Achiya, 2021, COP 2021: Proceedings of the 13th ACM International Workshop on Context-Oriented Programming and Advanced Modularity, P16, DOI 10.1145/3464970.3468414
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Ghezzi Carlo., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems, SEAMS '10, P59
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Gonzalez S., 2007, P DYN LANG S, P77
   González S, 2011, LECT NOTES COMPUT SC, V6563, P246, DOI 10.1007/978-3-642-19440-5_15
   González S, 2008, J UNIVERS COMPUT SCI, V14, P3307
   Günther S, 2012, SCI COMPUT PROGRAM, V77, P152, DOI 10.1016/j.scico.2010.12.007
   Herrmann S, 2007, APPL ONTOL, V2, P181
   Hirschfeld R., 2007, GENERATIVE TRANSFORM, P396
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   IBM, 2005, An architectural blueprint for autonomic computing
   Inoue H, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P50, DOI 10.1145/2892664.2892669
   Kamina T., 2016, T MODUL COMPOS, V1, P3
   Kamina T., 2011, P 10 INT C ASP OR SO, P253, DOI DOI 10.1145/1960275.1960305
   Kamina T., 2015, P INT C MOD MODULARI
   Kamina T, 2017, PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING, P17, DOI 10.1145/3117802.3117805
   Kamishima T., 2013, CEUR Workshop Proceedings, V1050, P1
   Kasin G., 2012, THESIS U CATHOLIQUE
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Leger P., 2020, INT WORKSHOP CONTEXT, P1
   Leuthauser M., 2015, P 2015 JOINT MORSE V, P25
   Lincke J, 2011, SCI COMPUT PROGRAM, V76, P1194, DOI 10.1016/j.scico.2010.11.013
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Maingret B., 2015, P 7 INT WORKSH CONT, P7
   Nallur V, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P122, DOI [10.1109/SEAMS.2016.022, 10.1145/2897053.2897067]
   Pina L., 2012, Proceedings 2012 Fourth International Workshop on Hot Topics in Software Upgrades (HotSWUp 2012), P21, DOI 10.1109/HotSWUp.2012.6226612
   Poncelet T., 2012, THESIS U CATHOLIQUE
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Pukall M, 2013, SOFTWARE PRACT EXPER, V43, P153, DOI 10.1002/spe.2107
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Salvaneschi G, 2012, J SYST SOFTWARE, V85, P1801, DOI 10.1016/j.jss.2012.03.024
   Salvaneschi Guido, 2012, AOSD 12 P 11 ANN INT, P191, DOI [10.1145/2162049.2162072, DOI 10.1145/2162049.2162072]
   Salzman L, 2005, LECT NOTES COMPUT SC, V3586, P312
   Sato Y, 2003, LECT NOTES COMPUT SC, V2830, P189
   Schreiber F., 2014, P IT S ADV DAT SYST, P175
   Shadbolt N, 2003, IEEE INTELL SYST, V18, P2, DOI 10.1109/MIS.2003.1200718
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Taing N, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P137, DOI 10.1145/2892664.2892687
   Vallejos J, 2010, LECT NOTES COMPUT SC, V6144, P66, DOI 10.1007/978-3-642-14046-4_5
   Van Cutsem T., 2011, P ACM INT WORKSH PRO, P1, DOI [10.1145/2093328.2093330, DOI 10.1145/2093328.2093330]
   Villazón A, 2010, ACM SIGPLAN NOTICES, V45, P95, DOI 10.1145/1837852.1621622
   Weiser M, 1999, IBM SYST J, V38, P693, DOI 10.1147/sj.384.0693
   Wernli E., 2011, P EUR SMALLT US GROU, P21
NR 66
TC 4
Z9 4
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106789
DI 10.1016/j.infsof.2021.106789
EA DEC 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300008
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Escott, E
AF Jorgensen, Magne
   Escott, Eban
TI Relative estimates of software development effort: Are they more
   accurate or less time-consuming to produce than absolute estimates, and
   to what extent are they person-independent?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development effort estimation; Expert estimates; Relative
   estimation; Story points
AB Context: Estimates of software development effort may be given as judgments of relationships between the use of efforts on different tasks-that is, as relative estimates. The use of relative estimates has increased with the introduction of story points in agile software development contexts. Objective: This study examines to what extent relative estimates are likely to be more accurate or less timeconsuming to produce than absolute software development effort estimates and to what extent relative estimates can be considered developer-independent. Method: We conducted two experiments. In the first experiment, we collected estimates from 102 professional software developers estimating the same tasks and randomly allocated to providing relative estimates in story points or absolute estimates in work-hours. In the second experiment, we collected the actual efforts of 20 professional software developers completing the same 5 programming tasks and used these to analyze the variance in relative efforts. Results: The results from the first experiment indicates that the relative estimates were less accurate than the absolute estimates, and that the time consumed completing the estimation work was higher for those using relative estimation, even when only considering developers with extensive prior experience in story point-based estimation for both tasks. The second experiment revealed that the relative effort was far from developerindependent, especially for the least productive developers. This suggests that relative estimates to a large extent are developer-dependent. Conclusions: Although there may be good reasons for the continued use of relative estimates, we interpret our results as not supporting that the use of relative estimates is connected with higher estimation accuracy or less time consumed on producing the estimates. Neither do our results support a high degree of developerindependence in relative estimates.
C1 [Jorgensen, Magne] Simula Metropolitan, Pilestredet 52, N-0167 Oslo, Norway.
   [Jorgensen, Magne] Oslo Metropolitan Univ, Pilestredet 52, N-0167 Oslo, Norway.
   [Escott, Eban] Codebots, Brisbane, Qld, Australia.
C3 Oslo Metropolitan University (OsloMet)
RP Jorgensen, M (corresponding author), Simula Metropolitan, Pilestredet 52, N-0167 Oslo, Norway.; Jorgensen, M (corresponding author), Oslo Metropolitan Univ, Pilestredet 52, N-0167 Oslo, Norway.
EM magnej@simula.no
CR [Anonymous], 2009, EMPIRICAL RES RELATI
   Arifin HH, 2017, INT WORKSH EMPIR ENG, P35, DOI 10.1109/IWESEP.2017.21
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P443
   Bryan G.E., 2012, P IEEE AER C IEEE, P1
   Cohn M., 2005, Agile Estimating and Planning
   Grenning J., 2002, Hawthorn Woods, Renaissance Softw. Consulting, V3, P22
   Halkjelsvik T., 2018, TIME PREDICTIONS UND
   Jorgensen M, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.24
   Jorgensen M, 2013, IEEE SOFTWARE, V30, P74, DOI 10.1109/MS.2012.70
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jorgensen Magne, 2014, P 18 INT C EV ASS SO, DOI [10.1145/2601248.2601262, DOI 10.1145/2601248.2601262]
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Laming D., 2004, HUMAN JUDGMENT EYE B
   Nichols WR, 2019, IEEE SOFTWARE, V36, P71, DOI 10.1109/MS.2019.2908576
   Prechelt L., 1999, 28 1 GRANT SACKMAN L
   Stewart N, 2005, PSYCHOL REV, V112, P881, DOI 10.1037/0033-295X.112.4.881
   TVERSKY A, 1977, PSYCHOL REV, V84, P327, DOI 10.1037/h0026750
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
NR 18
TC 3
Z9 3
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106782
DI 10.1016/j.infsof.2021.106782
EA NOV 2021
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300002
DA 2024-07-18
ER

PT J
AU Reynolds, O
   García-Domínguez, A
   Bencomo, N
AF Reynolds, Owen
   Garcia-Dominguez, Antonio
   Bencomo, Nelly
TI <i>Cronista:</i> A multi-database automated provenance collection system
   for runtime-models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Provenance; Runtime-models; Multi-threading; Self-adaptation;
   Self-explanation
AB Context: Decision making by software systems that face uncertainty needs tracing to support understandability, as accountability is crucial. While logging has been essential to support explanations and understandability of behaviour, several issues still persist, such as the high cost for managing large logs, not knowing what to log, and the inability of logging techniques to relate events to each other or to specific occurrences of high-level activities in the system. Objective: Cronista is an alternative to logging for systems that act on top of runtime models. Instead of targeting the running systems, Cronista automatically collects the provenance of changes made to the runtime models, which aim at leveraging high-level representations, to produce more concise historical records. The provenance graphs capture causal links between those changes and the activities of the system, which are used to investigate issues. Method: Cronista's architecture is described with the current design and the implementation of its high-level components for single-machine, multi-threaded systems. Cronista is applied to a traffic-simulation case study. The trade-offs of two different storage solutions are evaluated, i.e. the CDO model repositories, and JanusGraph graph databases. Results: Integrating Cronista into the case study requires only minor code changes. Cronista collected provenance graphs for the simulations as they ran, using both CDO and JanusGraph. Both solutions highlighted the cause of a seeded defect in the system. For the longer executions, both CDO and JanusGraph showed negligible overhead on the simulation times. Querying and visualisation tools were more user-friendly in JanusGraph than in CDO. Conclusion: Cronista demonstrates the feasibility of recording fine-grained provenance for the evolution of runtime models, while using it to investigate issues. User convenience and resource requirements need to be balanced. The paper present how the available technologies studied offer different trade-offs to satisfy the balance required.
C1 [Reynolds, Owen; Garcia-Dominguez, Antonio; Bencomo, Nelly] Aston Univ, SEA Res Grp, EPS, Birmingham, W Midlands, England.
C3 Aston University
RP Reynolds, O (corresponding author), Aston Univ, SEA Res Grp, EPS, Birmingham, W Midlands, England.
EM 180200041@aston.ac.uk; a.garcia-dominguez@aston.ac.uk;
   n.bencomo@aston.ac.uk
RI Bencomo, Nelly/GZL-1379-2022; Garcia Dominguez, Antonio/IAN-2064-2023
OI Garcia Dominguez, Antonio/0000-0002-4744-9150; Reynolds,
   Owen/0000-0002-5639-0533
FU Leverhulme Trust Research Fellowship, United Kingdom [RF-2019-548];
   EPSRC Research Project [EP/T017627/1]; EPSRC [EP/T017627/1] Funding
   Source: UKRI
FX The work was partially funded by the Leverhulme Trust Research
   Fellowship, United Kingdom (Grant RF-2019-548) and the EPSRC Research
   Project Twenty20Insight (Grant EP/T017627/1) .
CR Andrews R, 1995, KNOWL-BASED SYST, V8, P373, DOI 10.1016/0950-7051(96)81920-4
   [Anonymous], 2015, XML MET INT XMI SPEC
   Apache Foundation, 2020, LOG4J HOM
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Barmpis K, 2020, MODEL MANAGEMENT AND ANALYTICS FOR LARGE SCALE SYSTEMS, P87, DOI 10.1016/B978-0-12-816649-9.00014-4
   Bellotti V, 2001, HUM-COMPUT INTERACT, V16, P193, DOI 10.1207/S15327051HCI16234_05
   Bencomo N, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P216, DOI 10.1109/MODELS.2019.00005
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Beschastnikh I, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375633
   Bianchi FA, 2018, IEEE T SOFTWARE ENG, V44, P747, DOI 10.1109/TSE.2017.2707089
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Daniel G, 2017, SCI COMPUT PROGRAM, V149, P9, DOI 10.1016/j.scico.2017.08.002
   Eclipse Foundation, 2019, CDO MODEL REP
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Garcia-Dominguez A., 2020, EMC CDO GITHUB PROJE
   García-Domínguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P194, DOI 10.1109/MODELS.2019.000-2
   Gehani Ashish, 2012, Middleware 2012. ACM/IFIP/USENIX 13th International Middleware Conference. Proceedings, P101, DOI 10.1007/978-3-642-35170-9_6
   German Aerospace Center, 2019, SUMO HOM
   Giese Holger, 2017, SelfAware Computing Systems, P17
   Giese Holger., 2017, Self-Aware Computing Systems, P237, DOI DOI 10.1007/978-3-319-47474-8_8
   Groth P., 2013, W3C, W3C Note
   Haeusler M, 2018, LECT NOTES COMPUT SC, V10706, P153, DOI 10.1007/978-3-319-73117-9_11
   Haeusler M, 2019, SOFTW SYST MODEL, V18, P3487, DOI 10.1007/s10270-019-00725-0
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Herschel M, 2017, VLDB J, V26, P881, DOI 10.1007/s00778-017-0486-1
   Hilken F, 2016, 19TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2016), P708, DOI 10.1109/DSD.2016.42
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kounev S., 2017, The notion of self-aware computing, P3
   Kovács T, 2019, ACTA CYBERN, V24, P43, DOI 10.14232/actacyb.24.1.2019.5
   Legeza V., 2019, LOGIN, V44
   Madani S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a3
   Moreau L, 2011, FUTURE GENER COMP SY, V27, P743, DOI 10.1016/j.future.2010.07.005
   MQTT.org, 2021, MQTT HOM
   National Research Council, 2014, COMPL OP DEC MAK NET, DOI [10.17226/18844, DOI 10.17226/18844]
   Parra-Ullauri Juan Marcelo, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P155, DOI 10.1145/3419804.3420276
   Pérez B, 2018, KNOWL INF SYST, V57, P495, DOI 10.1007/s10115-018-1164-3
   Pika A, 2014, LECT NOTES COMPUT SC, V8484, P564, DOI 10.1007/978-3-319-07881-6_38
   Pinheiro Rodrigo, 2014, 2014 IEEE International Conference on Bioinformatics and Biomedicine (BIBM), P16, DOI 10.1109/BIBM.2014.6999292
   Reynolds Owen, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P12, DOI 10.1145/3419804.3420262
   Reynolds Owen, 2020, P ACM IEEE 23 INT C, P1, DOI [10.1145/3417990.3419503, DOI 10.1145/3417990.3419503]
   Ricaud B., 2021, Graphexp github project
   Sakizloglou L., 2020, P 23 ACM IEEE INT C, P175, DOI DOI 10.1145/3365438.3410961
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Selbst AD, 2017, INT DATA PRIV LAW, V7, P233, DOI 10.1093/idpl/ipx022
   Software Freedom Conservancy, 2020, GIT PROJ HOM
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Szvetits M., P 8 WORKSH MOD RUN T, V1079, P39
   Vogel T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P129, DOI 10.1109/SEAMS.2012.6224399
   Welsh K, 2014, LECT NOTES COMPUT SC, V8780, P122, DOI 10.1007/978-3-662-44871-7_5
   Wheeler D.A, 2013, SLOCCOUNT HOMEPAGE
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhao DF, 2013, IEEE INT C CL COMP
NR 54
TC 3
Z9 3
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106694
DI 10.1016/j.infsof.2021.106694
EA AUG 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wang, Y
   Li, QB
   Chen, ZF
   Zhang, P
   Zhang, GM
   Shi, ZH
AF Wang, Ye
   Li, Qingbao
   Chen, Zhifeng
   Zhang, Ping
   Zhang, Guimin
   Shi, Zhihui
TI BCI-CFI: A context-sensitive control-flow integrity method based on
   branch correlation integrity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ROP; Branch correlation integrity; Equivalence class; Indirect
   control-flow transfer; BCI-CFI
AB Context: As part of the arms race, one emerging attack methodology has been control-hijacking attacks, e.g., return-oriented programming (ROP). Control-flow integrity (CFI) is a generic and effective defense against most control-hijacking attacks. However, existing CFI mechanisms have poor security as demonstrated by their equivalence class (EC) sizes, which are sets of targets that CFI policies cannot distinguish. Adversaries can choose an illegitimate control transfer within an EC that is included in the resulting CFG and incorrectly allowed by CFI protection policies.
   Objective: The paper introduces a context-sensitive control-flow integrity method, which aims to improve the security of CFI and prevent ROP attacks. Method: The paper presents BCI-CFI, a context-sensitive CFI technique based on branch correlation integrity (BCI), which can effectively break down EC sizes and improve the security of CFI. BCI-CFI takes the branch correlation relationship (i.e., a new type of context for CFI) as contextual information to refine the CFI policy and identify the BCI pairs in the target program via static analysis. Furthermore, the paper introduces a state machine MCFI for BCI-CFI to conduct target validation for the indirect control-flow transfer (ICT) instructions in the target program at runtime.
   Results: Our results show that, (i) BCI-CFI prevented adversaries from manipulating the control data and launching ROP attacks, (ii) protected both forward and backward ICT in the target program, and improved the security and effectiveness of CFI, and (iii) BCI-CFI introduced a 19.67% runtime overhead on average and a maximum runtime overhead of 31.2%
   Conclusion: BCI-CFI is a context-sensitive CFI technique aiming to prevent adversaries from manipulating the control data of the target program to launch ROP attacks. BCI-CFI can reduce EC sizes and improve the security of CFI while incurring a moderate runtime overhead on average.
C1 [Wang, Ye; Li, Qingbao; Chen, Zhifeng; Zhang, Ping; Zhang, Guimin; Shi, Zhihui] State Key Lab Math Engn & Adv Comp, Zhengzhou 450001, Henan, Peoples R China.
C3 PLA Information Engineering University
RP Wang, Y (corresponding author), State Key Lab Math Engn & Adv Comp, Zhengzhou 450001, Henan, Peoples R China.
EM daguoli415@163.com
FU National Natural Science Foundation of China [61802432]
FX This work was supported by project of the National Natural Science
   Foundation of China (No. 61802432) .
CR Abadi M, 2005, P 12 ACM C COMP COMM, DOI [10.1145/1102120.1102165, DOI 10.1145/1102120.1102165]
   Abadi M, 2009, ACM T INFORM SYST SE, V13, DOI 10.1145/1609956.1609960
   [Anonymous], AEON FLUX
   Bletsch T., 2011, P 6 ACM S INF COMP C, P30
   Burow N, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054924
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Carlini N, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P385
   Carlini N, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P161
   Dang T.H.Y., 2015, P 10 ACM S INF COMP
   Davi L, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P401
   Ding R, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P131
   Fan XK, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P329, DOI 10.1145/3092703.3092729
   Hu H, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1470, DOI 10.1145/3243734.3243797
   Hu H, 2016, P IEEE S SECUR PRIV, P969, DOI 10.1109/SP.2016.62
   Khandaker M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P95, DOI 10.1109/EuroSP.2019.00017
   Khandaker MR, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P195
   Lan BC, 2015, 2015 IEEE TRUSTCOM/BIGDATASE/ISPA, VOL 1, P190, DOI 10.1109/Trustcom.2015.374
   Li JK, 2018, IEEE T INF FOREN SEC, V13, P1535, DOI 10.1109/TIFS.2018.2797932
   Liu YT, 2017, INT S HIGH PERF COMP, P529, DOI 10.1109/HPCA.2017.18
   Miao Y., 2020, P S NETW DISTR SYST
   Pappas V., 2013, USENIX SEC S, P447
   PaX Team, PAX NONEX DES IMPL
   Ramakesavan R., 2015, INTEL MEMORY PROTECT
   Reinders J., 2012, INTEL SOFTWARE NETWO
   Shacham H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P552
   Suaboot J, 2020, COMPUT SECUR, V92, DOI 10.1016/j.cose.2020.101773
   Sui YL, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P460, DOI 10.1145/2950290.2950296
   van der Veen V, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P927, DOI 10.1145/2810103.2813673
   van der Veen V, 2016, P IEEE S SECUR PRIV, P934, DOI 10.1109/SP.2016.60
   Wang Y, 2020, J NETW COMPUT APPL, V154, DOI 10.1016/j.jnca.2020.102534
   Wang Y, 2020, COMPUT SECUR, V89, DOI 10.1016/j.cose.2019.101679
   Wang Y, 2019, COMPUT SECUR, V81, P94, DOI 10.1016/j.cose.2018.11.002
   Zhang C, 2013, P IEEE S SECUR PRIV, P559, DOI 10.1109/SP.2013.44
   Zhang JL, 2019, IEEE INTERNET THINGS, V6, P458, DOI 10.1109/JIOT.2018.2866164
   Zhang M, 2013, 22 USENIX SEC S USEN, P337, DOI [10.5555/2534766.2534796, DOI 10.1145/2818000.2818016]
NR 35
TC 3
Z9 4
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106572
DI 10.1016/j.infsof.2021.106572
EA MAR 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900002
DA 2024-07-18
ER

PT J
AU Dawood, KA
   Sharif, KY
   Ghani, AA
   Zulzalil, H
   Zaidan, AA
   Zaidan, BB
AF Dawood, Kareem A.
   Sharif, Khaironi Y.
   Ghani, Abdul A.
   Zulzalil, H.
   Zaidan, A. A.
   Zaidan, B. B.
TI Towards a unified criteria model for usability evaluation in the context
   of open source software based on a fuzzy Delphi method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability; Usability evaluation; Open source software; OSS; Fuzzy
   Delphi; Criteria selection; Usability model
ID INTERNATIONAL STANDARDS; VALIDATION; SELECTION; INFORMATION; VALIDITY;
   SUPPORT; SYSTEMS; WEB
AB Context: A plethora of models are available for open-source software (OSS) usability evaluation. However, these models lack consensus between scholars as well as standard bodies on a specific set of usability evaluation criteria. Retaining irrelevant criteria and omitting essential ones will mislead the direction of the usability evaluation.
   Objective: This study introduces a three-step method to develop a usability evaluation model in the context of OSS.
   Method: The fuzzy Delphi method has been employed to unify the usability evaluation criteria in the context of OSS. The first step in the method is the usability criteria analysis, which involves redefining and restructuring all collected usability criteria reported in the literature. The second step is fuzzy Delphi analysis, which includes the design and validates the fuzzy Delphi instrument and the utilisation of the fuzzy Delphi method to analyse the fuzziness consensus of experts' opinions on the usability evaluation criteria. The third step is the proposal of the OSS usability evaluation model.
   Results: A total of 124 usability criteria were identified, redefined, and restructured by creating groups of related meaning criteria. The result of the groupings generated 11 main criteria; the findings of the fuzzy Delphi narrowed down the criteria to only seven. The final set of criteria was sent back to the panellists for reconsideration of their responses. The panellists verified that these criteria are suitable in the evaluation of the usability of OSS.
   Discussion: The empirical analysis confirmed that the proposed evaluation model is acceptable in assessing the usability of OSS. Therefore, this model can be used as a reference metric for OSS usability evaluation which will have a practical benefit for the community in public and private organisations in helping the decision-maker to select the best OSS software package amongst the alternatives.
C1 [Dawood, Kareem A.; Sharif, Khaironi Y.; Ghani, Abdul A.; Zulzalil, H.] Univ Putra Malaysia UPM, Fac Comp Sci & Informat Technol, Seri Kembangan, Malaysia.
   [Zaidan, A. A.; Zaidan, B. B.] Univ Pendidikan Sultan Idris, Dept Comp, FSKIK, Tanjung Malim, Malaysia.
C3 Universiti Pendidikan Sultan Idris
RP Zaidan, AA (corresponding author), Univ Pendidikan Sultan Idris, Dept Comp, FSKIK, Tanjung Malim, Malaysia.
EM aws.alaa@fskik.upsi.edu.my
RI Albahri,, A. S./F-7289-2010; Dawood, Kareem/AAB-5709-2021; zaidan,
   bilal/AAJ-7841-2021
OI Dawood, Kareem/0000-0002-7024-0961; zaidan, bilal/0000-0001-7412-8267
CR Abran A, 2003, SOFTWARE QUAL J, V11, P325, DOI 10.1023/A:1025869312943
   Adler M., 1996, Gazing Into the Oracle: The Delphi Method and Its Application to Social Policy and Public Health
   Ahmad Z., 2014, 2 INT SEM TEACH EXC
   Al-Rawashdeh T., 2015, INT REV COMPUTERS SO, V10, P1018
   Alonso-Ríos D, 2010, INT J HUM-COMPUT INT, V26, P53, DOI 10.1080/10447310903025552
   [Anonymous], 2005, 1 MONDAY, DOI DOI 10.5210/FM.V10I2.1207
   [Anonymous], 2004, QUANTITATIVE DATA AN
   [Anonymous], 1993, Usability Engineering
   [Anonymous], 1998, SOFTWARE ENG STANDAR, DOI DOI 10.1109/SESS.1997.596008
   [Anonymous], 2001, ISOEC91261
   [Anonymous], 1992, 1061 IEEE
   [Anonymous], 1991, Human Factors for Informatics Usability, DOI DOI 10.1016/J.INTCOM.2009.04.007
   [Anonymous], 2010, DESIGNING USER INTER
   Anthony B, 2019, J SCI TECHNOL POLICY, V10, P404, DOI 10.1108/JSTPM-06-2018-0060
   Bahamdain SS, 2015, PROCEDIA COMPUT SCI, V56, P459, DOI 10.1016/j.procs.2015.07.236
   Baytiyeh H., 2011, P FRONTIERS ED C, P11, DOI [10.1109/FIE.2011.6142798., DOI 10.1109/FIE.2011.6142798]
   Bevan N, 2001, INT J HUM-COMPUT ST, V55, P533, DOI 10.1006/ijhc.2001.0483
   Bodjanova S, 2006, FUZZY SET SYST, V157, P879, DOI 10.1016/j.fss.2005.10.015
   Bolarinwa Oladimeji Akeem, 2015, Niger Postgrad Med J, V22, P195, DOI 10.4103/1117-1936.173959
   Booth Paul, 2014, An introduction to human-computer interaction (psychology revivals)
   Borsci S, 2019, BEHAV INFORM TECHNOL, V38, P519, DOI 10.1080/0144929X.2018.1541255
   Capiluppi A, 2009, ELECTRON NOTES THEOR, V233, P89, DOI 10.1016/j.entcs.2009.02.063
   Capretz A.R.a.L.F., 2012, 1 MONDAY PEER REVIEW, V17, P1, DOI 10.5210/fm.v17i3.3640.
   Çetin G, 2008, SITIS 2008: 4TH INTERNATIONAL CONFERENCE ON SIGNAL IMAGE TECHNOLOGY AND INTERNET BASED SYSTEMS, PROCEEDINGS, P585, DOI 10.1109/SITIS.2008.106
   Chang PL, 2011, INT J HYDROGEN ENERG, V36, P14172, DOI 10.1016/j.ijhydene.2011.05.045
   Cheng CH, 2002, EUR J OPER RES, V142, P174, DOI 10.1016/S0377-2217(01)00280-6
   Chu HC, 2008, EXPERT SYST APPL, V34, P2826, DOI 10.1016/j.eswa.2007.05.034
   Chuang C.-C.L.a.L.Z.-H., 2012, BUSINESS EC FINANCIA, P347
   Côté MA, 2007, SOFTWARE QUAL J, V15, P401, DOI 10.1007/s11219-007-9029-0
   Crowston K., 2004, WORKSH INT SOFTW ENG
   DAJANI JS, 1979, TECHNOL FORECAST SOC, V13, P83, DOI 10.1016/0040-1625(79)90007-6
   Dapari Rahmat, 2017, Tanaffos, V16, P46
   Dawood KA, 2019, IEEE ACCESS, V7, P65913, DOI 10.1109/ACCESS.2019.2914368
   DeVon HA, 2007, J NURS SCHOLARSHIP, V39, P155, DOI 10.1111/j.1547-5069.2007.00161.x
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   Donyaee M., 2001, QUIM FRAMEWORK QUANT
   Donyaee M. K., 2001, INTEGRATED MODEL SPE
   Dubey S.K., 2012, International Journal of Computer Application, V43, P1
   Falzarano Mary, 2013, J Allied Health, V42, P99
   Feng A.L., 2017, INT FORUM ALLERGY RH
   Fenton N.E., 2000, P C FUT SOFTW ENG
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Fernandez-Perez Y., 2018, COMPLEX SYSTEMS SOLU, P165
   Fleck MP, 2006, REV SAUDE PUBL, V40, P785, DOI 10.1590/S0034-89102006000600007
   FrOkjr E, 2000, P SIGCHI C HUM FACT
   Fuh-Gwo Chen, 2017, International Journal of Information and Education Technology, V7, P686, DOI 10.18178/ijiet.2017.7.9.954
   Gupta D., 2020, FEATURE SELECTION EV
   Gupta D, 2017, J COMPUT SCI-NETH, V23, P195, DOI 10.1016/j.jocs.2017.06.005
   Habibi A., 2015, Asian Journal of Research in Business Economics and Management, V5, P130, DOI DOI 10.5958/2249-7307.2015.00036.5
   Haladyna T.M., 1999, Educational Assessment, V6, P129
   Harrison R., 2013, J INTERACTION SCI, V1, P1, DOI [10.1186/2194-0827-1-1, DOI 10.1186/2194-0827-1-1]
   Hauge, 2007, THESIS
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hedberg H., 2007, 1 INT WORKSH EM TREN, P2, DOI [10.1109/FLOSS.2007.2, DOI 10.1109/FLOSS.2007.2]
   Hedberg H., 1 INT WORKSH EM TREN
   HILL KQ, 1975, TECHNOL FORECAST SOC, V7, P179, DOI 10.1016/0040-1625(75)90057-8
   Hsu YL, 2010, EXPERT SYST APPL, V37, P419, DOI 10.1016/j.eswa.2009.05.068
   IEC, 1991, 9126ISO, P12
   Iivari N., 2008, EUR C INF SYST ECIS
   Iivari N, 2008, INT FED INFO PROC, V275, P359
   ISO, 2018, ERGONOMICS HUMAN SYS
   ISO I. J. B. C., 1998, 9241111998 ISO IJBC
   ISO I. & Std I. J. I. I. S., 2001, 9126 SOFTW PROD EV Q
   Joia Luiz Antonio, 2017, Journal of High Technology Management Research, V28, P261, DOI 10.1016/j.hitech.2017.10.008
   Jones H., 1978, FORECASTING TECHNOLO
   Jusoh Y. Yah, 2014, Am. J. Software Eng. Appl., V3, P83, DOI [10.11648/j.ajsea.20140306.13, DOI 10.11648/J.AJSEA.20140306.13]
   Kamei Y, 2018, IEICE T INF SYST, VE101D, P2744, DOI 10.1587/transinf.2018EDP7163
   Kengeri R., 1999, International Journal on Digital Libraries, V2, P157, DOI 10.1007/s007990050044
   Khajouei R., 2018, INT J MED INFORM
   Khosravi K., 2005, P 9 QAOOSE WORKSH EC
   Kiah MLM, 2014, COMPUT METH PROG BIO, V117, P360, DOI 10.1016/j.cmpb.2014.07.002
   Kim SW, 2008, J COMPUT ASSIST LEAR, V24, P284, DOI 10.1111/j.1365-2729.2007.00260.x
   Lacerda T.C., 2017, COMPUTER STANDARDS I
   Lam K.W., 2018, INT J ACAD RES BUSIN, V8, P367
   Lecerof A, 1998, IEEE T SOFTWARE ENG, V24, P863, DOI 10.1109/32.729686
   Lee K.H., 2004, 1 COURSE FUZZY THEOR, V27
   LisowskaMasson AgnesLalanne DenisAmstutz &Timon, 2017, USABILITY REFACTORIN, P1135, DOI [10.1145/3027063.3053345, DOI 10.1145/3027063.3053345]
   Llerena L., 2018, P 40 INT C SOFTW ENG, DOI [10.1145/3183440.3194946., DOI 10.1145/3183440.3194946]
   Llerena L., 2018, TRENDS IN E LEARNING
   Llerena L., 2018, INFORM SOFTWARE TECH
   Llerena L, 2019, INFORM SOFTWARE TECH, V107, P48, DOI 10.1016/j.infsof.2018.10.011
   Manakandan S K, 2017, Med J Malaysia, V72, P228
   Manakandan Sujith Kumar, 2017, MED J MALAYSIA, V72
   Marsan J, 2012, INFORM SOFTWARE TECH, V54, P1308, DOI 10.1016/j.infsof.2012.07.001
   Matera M, 2006, WEB ENGINEERING, P143, DOI 10.1007/3-540-28218-1_5
   McCall J.A., 1977, CONCEPTS DEFINITIONS, Vi
   MikkoRajanen N. I. a. E.K., 2012, INTRO USABILITY ACTI
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mohamad S.N. A., 2015, INT ED STUDIES, V8, P171, DOI DOI 10.5539/IES.V8N9P171
   Moon J. Y., 2000, 1 MONDAY, V5, P11
   Mosayebi A., 2020, DECISION SCI LETT, V9, P107
   MURRY JW, 1995, REV HIGH EDUC, V18, P423, DOI 10.1353/rhe.1995.0008
   Nair R., 2011, SEMINARS ARTHRITIS R
   Netta Iivari M.R.H. H., 2014, 25 AUSTR C INF SYST
   Nivala AM, 2008, CARTOGR J, V45, P129, DOI 10.1179/174327708X305120
   Nworie J, 2011, TECHTRENDS, V55, P24, DOI 10.1007/s11528-011-0524-6
   Othman N, 2015, UKSIM EURO SYMP COMP, P367, DOI 10.1109/EMS.2015.60
   Pachauri B, 2013, INFORM SOFTWARE TECH, V55, P1974, DOI 10.1016/j.infsof.2013.06.001
   Sánchez-Lezama AP, 2014, CAD SAUDE PUBLICA, V30, P245, DOI 10.1590/0102-311X00025113
   Parsazadeh N, 2018, STUD EDUC EVAL, V58, P97, DOI 10.1016/j.stueduc.2018.06.002
   Parsian N., 2009, Global Journal of Health Science, V1, P2, DOI DOI 10.5539/GJHS.V1N1P2
   Paul C.L., 2009, IFIP INT FEDERATION, P264
   Polit DF, 2006, RES NURS HEALTH, V29, P489, DOI 10.1002/nur.20147
   Preece J., 1993, GUIDE USABILITY HUMA, V183
   Quesenbery W., 2004, Cutter IT Journal, V17, P4
   Quesenbery W., 2001, ANN C SOC TECHN COMM
   Quesenbery W., 2003, UPA 2003 C
   Raja M. K., 2010, P IEEE AS SOL STAT C, P1
   Raymond E. S., 2011, CATHEDRAL BAZAAR 199
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Raza Arif, 2011, International Journal of Open Source Software & Processes, V3, P1, DOI 10.4018/jossp.2011010101
   Raza A, 2012, COMPUT HUM BEHAV, V28, P1109, DOI 10.1016/j.chb.2012.01.018
   Raza A, 2012, ENG COMPUT-GERMANY, V28, P109, DOI 10.1007/s00366-011-0222-1
   Rubin A., 2012, Practitioner's guide to using research for evidence-based practice, V2nd
   Saffie NAM, 2016, 2016 INTERNATIONAL CONFERENCE ON LOGISTICS, INFORMATICS AND SERVICE SCIENCES (LISS' 2016)
   Sagar K., 2017, International Journal of Information Technology, P1, DOI DOI 10.1007/S41870-017-0048-1
   Sarrab M, 2014, ADV ENG SOFTW, V69, P1, DOI 10.1016/j.advengsoft.2013.12.001
   Sbai N, 2018, INFORM SOFTWARE TECH, V104, P104, DOI 10.1016/j.infsof.2018.07.009
   Schneider F, 2013, PROCEDIA COMPUT SCI, V16, P796, DOI 10.1016/j.procs.2013.01.083
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Senyard A., 2004, 11 AS PAC SOFTW ENG
   Shackel B., 1986, P 2 C BRIT COMP SOC
   Sharif KY, 2015, INFORM SOFTWARE TECH, V57, P77, DOI 10.1016/j.infsof.2014.09.003
   Tamir DE, 2010, IEEE SYS MAN CYBERN, DOI 10.1109/ICSMC.2010.5641883
   Tang CW, 2010, HIGH EDUC, V60, P269, DOI 10.1007/s10734-009-9299-5
   Tractinsky N, 2018, HUM-COMPUT INTERACT, V33, P131, DOI 10.1080/07370024.2017.1298038
   Viorres N, 2007, LECT NOTES COMPUT SC, V4564, P455
   von der Gracht HA, 2012, TECHNOL FORECAST SOC, V79, P1525, DOI 10.1016/j.techfore.2012.04.013
   Vrbnjak D., 2016, OBZORNIK ZDRAVSTVENE, V50
   Wang J, 2015, INFORM SOFTWARE TECH, V67, P1, DOI 10.1016/j.infsof.2015.06.002
   White J., 2014, SURVEY INTERVI UNPUB
   Wu CH, 2011, QUAL QUANT, V45, P751, DOI 10.1007/s11135-010-9425-6
   Yaghmaie F., 2003, J Med Educ, V3, p25
   Yusop Grundy Schneider Vasa N. S. M. J. J.-G. R. J. I. J. o. A. S., 2020, USABILITY DEFECTS DE, V10, P98
   Zaidan AA, 2015, DECIS SUPPORT SYST, V78, P15, DOI 10.1016/j.dss.2015.07.002
   Zhang L., 2013, SOME SIMILARITY MEAS
   Zhang X., 2019, RESTOR NEUROL NEUROS, P1, DOI DOI 10.3233/RNN-190941
   Zhao LY, 2010, J SOFTW MAINT EVOL-R, V22, P653, DOI 10.1002/smr.455
NR 138
TC 45
Z9 46
U1 7
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106453
DI 10.1016/j.infsof.2020.106453
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA PI2JM
UT WOS:000600922900002
DA 2024-07-18
ER

PT J
AU McClean, K
   Greer, D
   Jurek-Loughrey, A
AF McClean, Kelvin
   Greer, Des
   Jurek-Loughrey, Anna
TI Social network analysis of open source software: A review and
   categorisation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Review; Open source software; Social network analysis
ID PROJECTS; COMMUNITIES; SEARCH
AB Context: As companies have become large users of Open Source Software, it is important that they feel comfortable in their Open Source strategies. One of the critical differences between Open Source and Proprietary Software is the communication networks.
   Objective: This paper tries to set a base for understanding how open source teams are structured and how they change. This is vital to understanding Open Source Software Communities.
   Method: The paper looks into previous research on Social Network Analysis of Open Source Software, using a systematic literature review. Papers were gathered from Scopus, IEEEXplore and ACM Digital Library, and used or discarded based on predetermined inclusion and exclusion criteria. Research which focuses on the success factors of Open Source Software through Network Analysis is also examined.
   Results: A subjective categorisation is established for the papers: Structure, Lifecycle and Communication. It was found that the structure of a project has a large bearing on project success, with developers having previously worked together being indicative of project success. Other structure indicators of success are having a small but structured hierarchy, a diverse user and developer base, and project prominence. However, it was found that information on how these structures appear and evolve over time is lacking, and future research into temporal data models to determine project success information is suggested.
   Conclusions: A categorisation of existing research on Social Network Analysis is provided as a basis for further research. Further work into the lifecycle of OSS projects through Social Network Analysis of temporal project information is suggested.
C1 [McClean, Kelvin; Greer, Des; Jurek-Loughrey, Anna] Queens Univ, Sch Elect Elect Engn & Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
C3 Queens University Belfast
RP Greer, D (corresponding author), Queens Univ, Sch Elect Elect Engn & Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
EM des.greer@qub.ac.uk
OI Greer, Des/0000-0001-6367-9274
CR Ahmed I, 2017, S VIS LANG HUM CEN C, P223, DOI 10.1109/VLHCC.2017.8103471
   Aljemabi MA, 2018, IEEE ACCESS, V6, P51049, DOI 10.1109/ACCESS.2018.2868427
   Allaho MY, 2013, 2013 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P62
   [Anonymous], 2011, FOUND TRENDS TECHNOL
   [Anonymous], 2014, MULTIMEDIA SIGNAL PR
   [Anonymous], 2007, P 28 INT C INF SYST
   Azarbakht A, 2014, IFIP ADV INF COMM TE, V427, P41
   Babic SG, 2017, INT CONF SOFTW, P6
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Celinska D, 2018, SMSOCIETY'18: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON SOCIAL MEDIA AND SOCIETY, P31, DOI 10.1145/3217804.3217895
   Chen X, 2014, J ELECTRON COMMER RE, V15, P77
   Chen XH, 2017, TECHNOL ANAL STRATEG, V29, P1, DOI 10.1080/09537325.2016.1194387
   Chen XH, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P277, DOI 10.1109/SAI.2015.7237155
   Conaldi G, 2010, IFIP ADV INF COMM TE, V319, P42
   Corona E.I.M., 2013, 12 IASTED INT C SOFT, P701, DOI [10.2316/p.2013.796-018, DOI 10.2316/P.2013.796-018]
   Crowston K., 2010, System Sciences (HICSS), 2010 43rd Hawaii International Conference on, P1, DOI [10.1109/HICSS.2010.62, DOI 10.1109/HICSS.2010.62]
   Daniel S, 2018, J STRATEGIC INF SYST, V27, P237, DOI 10.1016/j.jsis.2018.04.002
   Martínez-Torres MD, 2014, ASIAN J TECHNOL INNO, V22, P114, DOI 10.1080/19761597.2014.912577
   Dias Luis Felipe, 2018, Journal of the Brazilian Computer Society, V24, DOI 10.1186/s13173-018-0079-x
   El Asri M., 2017, 18 IFIP WG 5 5 WORK
   Gharehyazie M, 2013, PROC IEEE INT CONF S, P340, DOI 10.1109/ICSM.2013.45
   Greer D, 2009, IET SOFTW, V3, P356, DOI 10.1049/iet-sen.2008.0093
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   He P, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P418, DOI 10.1109/CGC.2012.50
   Hu DN, 2012, DECIS SUPPORT SYST, V53, P526, DOI 10.1016/j.dss.2012.02.005
   Huang K., 2011, 2011 44 HAWAII INT C, P1, DOI [10.1109/HICSS.2011.359, DOI 10.1109/HICSS.2011.359]
   Kavaler D, 2017, EMPIR SOFTW ENG, V22, P407, DOI 10.1007/s10664-016-9431-y
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915993
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kumar S, 2015, P ANN HICSS, P5154, DOI 10.1109/HICSS.2015.609
   Martínez-Torres MR, 2012, EXPERT SYST APPL, V39, P13182, DOI 10.1016/j.eswa.2012.05.083
   Martínez-Torres MR, 2010, INTERNET RES, V20, P72, DOI 10.1108/10662241011020842
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Onoue S, 2016, IEICE T INF SYST, VE99D, P1304, DOI 10.1587/transinf.2015EDP7363
   Otte E, 2002, J INF SCI, V28, P441, DOI 10.1177/016555150202800601
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/saner.2019.8667987, 10.1109/SANER.2019.8667987]
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Sharma PN, 2017, ASIA PAC SOFWR ENG, P308, DOI 10.1109/APSEC.2017.37
   Singh PV, 2013, INFORM SYST RES, V24, P539, DOI 10.1287/isre.1120.0449
   Syed S, 2013, P INT WORKSH SOFTW E, P13
   Teixeira J, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0028-2
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Torres RH, 2011, ASHGATE STUD HUM, P109
   Van Antwerp M., 2010, 43 HAWAII INT C SYST, P1, DOI [10. 1109/HICSS.2010.385., DOI 10.1109/HICSS.2010.385]
   Van Antwerp M., 2010, 6 INT C OP SOURC SYS, P25
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   Whitehurst J.R.H., 2019, TECHNICAL REPORT
   Xuan Q, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500058
   Yang X, 2013, P ANN HICSS, P3178, DOI 10.1109/HICSS.2013.251
   Yasir M, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P151, DOI 10.1109/ASWEC.2018.00028
   Yu Y, 2014, INT J ANTENN PROPAG, V2014, DOI 10.1155/2014/482615
   Yu Zhang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P383, DOI 10.1109/APSEC.2014.63
NR 53
TC 5
Z9 6
U1 3
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106442
DI 10.1016/j.infsof.2020.106442
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA PI2JM
UT WOS:000600922900001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nosrati, M
   Haghighi, H
   Asl, MV
AF Nosrati, M.
   Haghighi, H.
   Asl, M. Vahidi
TI Test data generation using genetic programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Genetic programming; Search-based test data generation; Evolutionary
   algorithms
ID SELECTION
AB Context: Typically, search-based test data generation methods search on a population of program input values. Program input values can be regarded as solutions to underlying path constraints over program input parameters. One way to discover these path constraints is to use the symbolic execution method. Search-based methods attempt to find input values which are solutions to these path constraints, without knowing the actual constraints.
   Objective: In this paper, we show that we can search for the underlying path constraints using search-based methods, without resorting to symbolic execution. Trying to discover the exact or a good enough approximation of the underlying constraints may lead to a more targeted search, compared to directly searching for program input values. Besides, the construction of approximate constraints by searching may help to avoid some problems of symbolic execution.
   Method: The proposed method uses genetic programming for learning constraints on program input parameters.
   Results: To evaluate the performance of the proposed approach, a series of experiments have been conducted on a number of different benchmark programs. For 91.8% of benchmark programs, the proposed method achieved the best efficiency among the competitive algorithms.
   Conclusion: The results show that, if constraint solving can be provided for some or all parameter types of the methods of programs under test, our approach can improve the efficiency and effectiveness of search-based test data generation.
C1 [Nosrati, M.; Haghighi, H.; Asl, M. Vahidi] Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
C3 Shahid Beheshti University
RP Haghighi, H (corresponding author), Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
EM mohammad.nosrati@gmail.com; h_haghighi@sbu.ac.ir; m.vahidi.asl@gmail.com
CR Anand S., 2012, TECHNIQUES FACILITAT
   Anjum MS, 2020, LECT NOTES COMPUT SC, V12101, P18, DOI 10.1007/978-3-030-44094-7_2
   Anjum MS, 2019, LECT NOTES COMPUT SC, V11451, P3, DOI 10.1007/978-3-030-16670-0_1
   [Anonymous], 2015, J SOFTWARE ENG APPL, DOI DOI 10.4236/JSEA.2015.812057
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chengying Mao, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P623, DOI 10.1109/ICIS.2012.103
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Emer MCFP, 2003, SOFTWARE QUAL J, V11, P167, DOI 10.1023/A:1023772729494
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ernst MichaelD., 2000, DYNAMICALLY DISCOVER
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Girgis MR, 2005, J UNIVERS COMPUT SCI, V11, P898
   Hamlet R., 2002, ENCY SOFTW ENG
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   Hermadi I, 2014, INFORM SOFTWARE TECH, V56, P395, DOI 10.1016/j.infsof.2014.01.001
   Kewen Li, 2009, Proceedings of the 2009 Fifth International Conference on Natural Computation (ICNC 2009), P216, DOI 10.1109/ICNC.2009.239
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li H., 2004, P 1 INT WORKSH KNOWL, P1
   Lv XW, 2018, IET SOFTW, V12, P306, DOI 10.1049/iet-sen.2017.0260
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   Mao CY, 2014, NEURAL COMPUT APPL, V25, P199, DOI 10.1007/s00521-013-1474-z
   Mao CY, 2012, INT CONF QUAL SOFTW, P98, DOI 10.1109/QSIC.2012.12
   Mariani L, 2015, ADV COMPUT, V99, P157, DOI 10.1016/bs.adcom.2015.04.002
   McCarthy John., 1959, Computer Programming and Formal Systems, volume 26 of Studies in Logic and the Foundations of Mathematics, V26, P33, DOI DOI 10.1016/S0049-237X(09)70099-0
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASE.1997.632858
   Mishra DB, 2019, ADV INTELL SYST, V817, P857, DOI 10.1007/978-981-13-1595-4_68
   Montana DJ, 1995, EVOL COMPUT, V3, P199, DOI 10.1162/evco.1995.3.2.199
   Nayak N, 2010, COMM COM INF SC, V95, P1, DOI 10.1007/978-3-642-14825-5_1
   Nosrati M, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110549
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Ribeiro J.C.B., 2008, GEN EV COMP C GECCO, P1819, DOI DOI 10.1145/1388969.1388979
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Russell S., 2016, Artificial intelligence a modern approach
   Safe M, 2004, LECT NOTES ARTIF INT, V3171, P405
   Sahoo R.K., 2016, P 6 INT C ADV COMP I, P23
   Sakti Abdelilah, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P213, DOI 10.1007/978-3-642-33119-0_16
   Sharifipour H, 2018, SWARM EVOL COMPUT, V40, P76, DOI 10.1016/j.swevo.2017.12.009
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 61
TC 2
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106446
DI 10.1016/j.infsof.2020.106446
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900009
DA 2024-07-18
ER

PT J
AU Manzano, M
   Ayala, C
   Gómez, C
   Abherve, A
   Franch, X
   Mendes, E
AF Manzano, Marti
   Ayala, Claudia
   Gomez, Cristina
   Abherve, Antonin
   Franch, Xavier
   Mendes, Emilia
TI A Method to Estimate Software Strategic Indicators in Software
   Development: An Industrial Application
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Strategic Indicator; Decision-making support; Estimation model;
   Design Science; Case Study
ID ENTERPRISE ARCHITECTURE ANALYSIS; DECISION-MAKING; BAYESIAN NETWORKS;
   QUALITY; MODEL
AB Context: Exploiting software development related data from software-development intensive organizations to support tactical and strategic decision making is a challenge. Combining data-driven approaches with expert knowledge has been highlighted as a sensible approach for leading software-development intensive organizations to rightful decision-making improvements. However, most of the existing proposals lack of important aspects that hinders their industrial uptake such as: customization guidelines to fit the proposals to other contexts and/or automatic or semi-automatic data collection support for putting them forward in a real organization. As a result, existing proposals are rarely used in the industrial context.
   Objective: Support software-development intensive organizations with guidance and tools for exploiting software development related data and expert knowledge to improve their decision making.
   Method: We have developed a novel method called SESSI (Specification and Estimation of Software Strategic Indicators) that was articulated from industrial experiences with Nokia, Bittium, Softeam and iTTi in the context of Q-Rapids European project following a design science approach. As part of the industrial summative evaluation, we performed the first case study focused on the application of the method.
   Results: We detail the phases and steps of the SESSI method and illustrate its application in the development of ModelioNG, a software product of Modeliosoft development firm.
   Conclusion: The application of the SESSI method in the context of ModelioNG case study has provided us with useful feedback to improve the method and has evidenced that applying the method was feasible in this context.
C1 [Manzano, Marti; Ayala, Claudia; Gomez, Cristina; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
   [Abherve, Antonin] Softeam Grp, Paris, France.
   [Mendes, Emilia] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Universitat Politecnica de Catalunya; Blekinge Institute Technology
RP Manzano, M (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM mmanzarto@essi.upe.edu
RI Mendes, Maria E/B-4207-2015; Manzano, Martí/O-7718-2015; Franch,
   Xavier/A-8588-2008; Seoane, Cristina Gómez/ABG-7453-2020
OI Seoane, Cristina Gómez/0000-0002-3872-0439; Mendes,
   Emilia/0000-0003-0449-5322
FU Spanish Ministry of Economy and Competitiveness [TIN2016-79269R];
   European Union [732253]
FX This work was supported by the Spanish Ministry of Economy and
   Competitiveness (project GENESIS, grant agreement TIN2016-79269R), and
   by the European Union's Horizon 2020 research and innovation program
   (Q-Rapids project, grant agreement N. 732253). We also thank Softeam and
   Modeliosoft for promoting and participating in the case study,
   respectively.
CR Antinyan V, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P154, DOI 10.1109/CSMR-WCRE.2014.6747165
   Asthana A, 2009, CQR: 2009 IEEE INTERNATIONAL WORKSHOP TECHNICAL COMMITTEE AND COMMUNICATIONS QUALITY AND RELIABILITY, P7
   Avison D., 2003, P 7 INT C COMP SUPP, P19, DOI [10.1109/CSCWD.2002.1047641., DOI 10.1109/CSCWD.2002.1047641]
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Balletbo, 2019, QRAPIDS SI ASSESSMEN
   Bengio D, 2018, MINERAL MET MAT SER, P99, DOI 10.1007/978-3-319-72350-1_9
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Carvallo JP, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P214
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Darwiche A, 2010, COMMUN ACM, V53, P80, DOI 10.1145/1859204.1859227
   Das B., 2004, CORR
   Dougherty J., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P194
   Fenton N., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P701, DOI 10.1243/1748006XJRR161
   Fenton N., 2007, Application of Bayesian Networks
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   Franch X, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P411, DOI 10.1109/REW.2017.85
   Freire A, 2018, INFORM SOFTWARE TECH, V100, P119, DOI 10.1016/j.infsof.2018.04.004
   Furia C.A., 2018, BAYESIAN DATA ANAL E, DOI [10.1109/TSE.2019.2935974., DOI 10.1109/TSE.2019.2935974]
   Ilieva S, 2004, EUROMICRO CONF PROC, P326, DOI 10.1109/EURMIC.2004.1333387
   Janssen M, 2017, J BUS RES, V70, P338, DOI 10.1016/j.jbusres.2016.08.007
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Krippendorff K., 1980, Content Analysis
   KYBURG HE, 1991, J PHILOS, V88, P434, DOI 10.2307/2026705
   Lagerstrom R., 2009, International Journal of Computer Science and Applications, V6, P89, DOI DOI 10.1007/S11219-010-9100-0
   Lagerström R, 2010, J SYST SOFTWARE, V83, P1387, DOI 10.1016/j.jss.2010.02.019
   Manzano M., 2020, APPENDIX
   Manzano M., 2019, WSA JAVA IMPLEMENTAT
   Manzano M., 2018, P IEEE 1 INT WORK QU, P1, DOI [10.1109/QuaRAP.2018.00006, DOI 10.1109/QUARAP.2018.00006]
   Manzano M., 2019, QRAPIDS SI ASSESSMEN
   Manzano M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P52, DOI 10.1145/3273934.3273940
   Martínez-Fernández S, 2019, IEEE ACCESS, V7, P68219, DOI 10.1109/ACCESS.2019.2917403
   Martínez-Fernández S, 2018, EUROMICRO CONF PROC, P370, DOI 10.1109/SEAA.2018.00067
   Matsumoto S., 2011, UNBBAYES JAVA FRAMEW
   Matthies C, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P552, DOI 10.5220/0007967905520559
   Mendes E., 2014, PRACT KNOWL REPRESEN, V1, P73, DOI [10.1007/978-3-642-54157-5_6, DOI 10.1007/978-3-642-54157-5_6]
   Mendes E, 2018, SOFTWARE QUAL J, V26, P607, DOI 10.1007/s11219-017-9360-z
   Mendes E, 2012, PROC INT CONF SOFTW, P1112, DOI 10.1109/ICSE.2012.6227108
   Menzies T, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2018.290111035
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Mordal-Manet K, 2009, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2009.5306381
   Murphy KevinP., 2001, INTRO GRAPHICAL MODE
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Närman P, 2014, SOFTW SYST MODEL, V13, P1085, DOI 10.1007/s10270-012-0288-2
   Närman P, 2013, J STRATEGIC INF SYST, V22, P70, DOI 10.1016/j.jsis.2012.10.002
   Närman P, 2012, J SYST SOFTWARE, V85, P1953, DOI 10.1016/j.jss.2012.02.035
   Norsys Software Corp, 2002, APPL BEL NETW INFL D
   Pedrycz W, 1998, 1998 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AT THE IEEE WORLD CONGRESS ON COMPUTATIONAL INTELLIGENCE - PROCEEDINGS, VOL 1-2, P1026, DOI 10.1109/FUZZY.1998.686259
   Perkusich M., 2017, PROC INT C SOFTW ENG, P67, DOI [10.18293/SEKE2017-139, DOI 10.18293/SEKE2017-139]
   Perkusich M, 2015, EXPERT SYST APPL, V42, P437, DOI 10.1016/j.eswa.2014.08.015
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2012, LECT NOTES BUS INF P, V111, P108
   Raschka S., 2018, MODEL EVALUATION MOD
   Robson C., 2002, REAL WORLD RES RE SO
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sommestad T, 2013, IEEE SYST J, V7, P363, DOI 10.1109/JSYST.2012.2221853
   Staron Miroslaw, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P3, DOI 10.1007/978-3-642-21843-9_3
   Staron M, 2012, LECT NOTES BUS INF P, V111, P93
   Staron M, 2009, INFORM SOFTWARE TECH, V51, P721, DOI 10.1016/j.infsof.2008.10.001
   Svensson RB, 2019, LECT NOTES BUS INF P, V355, P69, DOI 10.1007/978-3-030-19034-7_5
   Tosun A, 2017, SOFTWARE QUAL J, V25, P273, DOI 10.1007/s11219-015-9297-z
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Wagner S, 2010, INFORM SOFTWARE TECH, V52, P1230, DOI 10.1016/j.infsof.2010.03.016
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Yan M, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9608-3
   Yin R.K., 2014, Applications of case study research, V2nd
   Zhang L, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P1147, DOI 10.1109/CIMCA.2008.70
   Zheng XR, 2014, IEEE T IND INFORM, V10, P1527, DOI 10.1109/TII.2014.2306329
NR 72
TC 2
Z9 2
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106433
DI 10.1016/j.infsof.2020.106433
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200011
OA Green Published
DA 2024-07-18
ER

PT J
AU Montandon, JE
   Politowski, C
   Silva, LL
   Valente, MT
   Petrillo, F
   Guéhéneuc, YG
AF Montandon, Joao Eduardo
   Politowski, Cristiano
   Silva, Luciana Lourdes
   Valente, Marco Tulio
   Petrillo, Fabio
   Gueheneuc, Yann-Gael
TI What skills do IT companies look for in new developers? A study with
   Stack Overflow jobs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Hiring; Soft skills; Hard skills; Stack overflow
AB Context: There is a growing demand for information on how IT companies look for candidates to their open positions. Objective: This paper investigates which hard and soft skills are more required in IT companies by analyzing the description of 20,000 job opportunities. Method: We applied open card sorting to perform a high-level analysis on which types of hard skills are more requested. Further, we manually analyzed the most mentioned soft skills. Results: Programming languages are the most demanded hard skills. Communication, collaboration, and problem-solving are the most demanded soft skills. Conclusion: We recommend developers to organize their resume according to the positions they are applying. We also highlight the importance of soft skills, as they appear in many job opportunities.
C1 [Montandon, Joao Eduardo; Silva, Luciana Lourdes; Valente, Marco Tulio] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
   [Politowski, Cristiano; Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Chicoutimi, PQ, Canada.
C3 Universidade Federal de Minas Gerais; Concordia University - Canada;
   University of Quebec; University of Quebec Chicoutimi
RP Montandon, JE (corresponding author), Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
EM joao.montandon@dcc.ufmg.br
OI Valente, Marco Tulio/0000-0002-8180-7548; Montandon, Joao
   Eduardo/0000-0002-3371-7353
CR Bastian M., 2014, ACM C REC SYST RECSY
   Litecky C, 2010, IEEE SOFTWARE, V27, P78, DOI 10.1109/MS.2009.150
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Saha AK, 2013, IEEE WORK CONF MIN S, P73, DOI 10.1109/MSR.2013.6624009
   Sayfullina Luiza, 2018, Analysis of Images, Social Networks and Texts. 7th International Conference, AIST 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11179), P141, DOI 10.1007/978-3-030-11027-7_15
   Spencer D., 2009, CARD SORTING DESIGNI
   Warrens M.J., 2015, J. Psychol. Psychother, V5, P1, DOI DOI 10.4172/2161-0487.1000197
   Xia XY, 2019, IEEE T COMPUT SOC SY, V6, P1051, DOI 10.1109/TCSS.2019.2909265
NR 8
TC 15
Z9 17
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106429
DI 10.1016/j.infsof.2020.106429
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Basirati, MR
   Otasevic, M
   Rajavi, K
   Böhm, M
   Krcmar, H
AF Basirati, Mohammad R.
   Otasevic, Marko
   Rajavi, Koushyar
   Boehm, Markus
   Krcmar, Helmut
TI Understanding the relationship of conflict and success in software
   development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conflict; Software project success; Software development;
   Non-human-rooted conflict; Organization size; Team size
ID INTERPERSONAL CONFLICT; REQUIREMENTS UNCERTAINTY; INTRAGROUP CONFLICT;
   INFORMATION-SYSTEMS; TEAM EFFECTIVENESS; ROLE AMBIGUITY; MANAGEMENT;
   DIVERSITY; INCONSISTENCY; PERFORMANCE
AB Context: Software development incorporates numerous people with diverse expertise and expectations. This makes conflict a common phenomenon in software development. Besides human causes, many conflicts in software development root in the tools and processes. Moreover, the growing role of software in any type of system is increasing the heterogeneity in software projects. The number and variety of tools and processes are increasing. Nevertheless, the relationship between conflicts, particularly rooted in non-human elements, and software project success is still unclear.
   Objective: We aim to understand the impact of conflict on the success of software development projects for different types of conflict and different environments. Particularly, we distinguish between human-rooted conflict (HRC) and non-human-rooted conflict (NHRC). Moreover, we investigate whether organization size and team size moderate the impact of conflict on software project success.
   Methods: First, we conduct a survey and analyze it using structural equation modeling (SEM) to investigate any correlation between conflict and software project success. Second, we explore the reasons behind the relationship between conflict and software project success by conducing 13 semi-structured expert interviews.
   Results: HRC is always a threat to software project success for any organization or team size. Based on the interviews, resolving an HRC is regularly problematic. On the other hand, NHRC is negatively correlated with software project success only in corporate organizations and small teams. High coordination overhead and dependency on tools and processes make NHRC more influential in corporate organizations. In contrast, overlooking non-human elements and lack of experienced individuals in smaller teams make them more vulnerable to NHRC.
   Conclusion: While the detrimental impact of HRC is constant for software project success, NHRC can be controlled efficiently. Corporate organizations need to frequently improve the non-human elements in the development. Smaller teams should expect tools and processes to be significantly influential in their success.
C1 [Basirati, Mohammad R.; Otasevic, Marko; Boehm, Markus; Krcmar, Helmut] Tech Univ Munich, Munich, Germany.
   [Rajavi, Koushyar] Georgia Inst Technol, Scheller Coll Business, Atlanta, GA USA.
C3 Technical University of Munich; University System of Georgia; Georgia
   Institute of Technology
RP Basirati, MR (corresponding author), Tech Univ Munich, Munich, Germany.
OI Basirati, Mohammadreza/0000-0001-8410-9270
FU German Research Foundation (Deutsche Forschungsgemeinschaft, DFG)
   [Sonderforschungsbereich SFB 768]
FX This work was supported by the German Research Foundation (Deutsche
   Forschungsgemeinschaft, DFG) collaborative research center
   `Sonderforschungsbereich SFB 768 "Managing cycles in innovation
   processes - Integrated development of product-service-systems based on
   technical products".
CR Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   Aldahmash A, 2017, COMM COM INF SC, V748, P504, DOI 10.1007/978-3-319-64218-5_41
   Aldekhail M, 2016, INT J ADV COMPUT SC, V7, P326
   Amason AC, 1997, J MANAGE, V23, P495, DOI 10.1177/014920639702300401
   [Anonymous], 1977, MIS Quarterly, DOI DOI 10.2307/249019
   [Anonymous], 1995, READ UNDERST MULTIVA
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Bagozzi RP, 2012, J ACAD MARKET SCI, V40, P8, DOI 10.1007/s11747-011-0278-x
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Barki H, 2001, MIS QUART, V25, P195, DOI 10.2307/3250929
   Belassi W., 1996, International Journal of Project Management, V14, P141
   CATTELL RB, 1966, MULTIVAR BEHAV RES, V1, P245, DOI 10.1207/s15327906mbr0102_10
   Chen H-G, 2004, J INT TECHNOL INF MA, V13, P2
   Daspit J, 2013, TEAM PERFORM MANAG, V19, P34, DOI 10.1108/13527591311312088
   Easterbrook S.M., 1993, CSCW, P1
   Fisk A., 2010, ICIS, P96
   Fried Y, 1998, J OCCUP ORGAN PSYCH, V71, P19, DOI 10.1111/j.2044-8325.1998.tb00659.x
   George B, 2016, VENTUR CAP, V18, P279, DOI 10.1080/13691066.2016.1224457
   Giebels E, 2005, EUR J WORK ORGAN PSY, V14, P137, DOI 10.1080/13594320444000236
   Glaser J., 2010, ALS INSTRUMENTE REKO, V4th
   Greer LL, 2007, RES MANAG GROUP TEAM, V10, P21, DOI 10.1016/S1534-0856(07)10002-5
   Hadar I, 2015, INT REQUIR ENG CONF, P226, DOI 10.1109/RE.2015.7320427
   He J., 2007, ASS INF SYST 13 AM C, P2287
   Hjerto KB, 2017, INT J CONFL MANAGE, V28, P50, DOI 10.1108/IJCMA-02-2016-0009
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Ika LA, 2009, PROJ MANAG J, V40, P6, DOI 10.1002/pmj.20137
   Jehn KA, 1997, ADMIN SCI QUART, V42, P530, DOI 10.2307/2393737
   Jehn KA, 2001, ACAD MANAGE J, V44, P238, DOI 10.5465/3069453
   JEHN KA, 1995, ADMIN SCI QUART, V40, P256, DOI 10.2307/2393638
   Jorgensen M, 2016, INFORM SOFTWARE TECH, V78, P83, DOI 10.1016/j.infsof.2016.05.008
   Joslin R, 2016, INT J MANAG PROJ BUS, V9, P364, DOI 10.1108/IJMPB-03-2015-0025
   Kaplan B, 2009, J AM MED INFORM ASSN, V16, P291, DOI 10.1197/jamia.M2997
   Kawamura Tomoyuki, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P327, DOI 10.1109/APSEC.2014.56
   Kersten M, 2018, IEEE SOFTWARE, V35, P14, DOI 10.1109/MS.2018.1661330
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Kline R.B., 2016, Principles and Practice of Structural Equation Modeling, VFourth
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Levina N, 2005, INFORM SYST RES, V16, P109, DOI 10.1287/isre.1050.0055
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   Liang TP, 2010, IEEE T ENG MANAGE, V57, P477, DOI 10.1109/TEM.2009.2033049
   Liu JYC, 2011, INT J PROJ MANAG, V29, P547, DOI 10.1016/j.ijproman.2010.04.007
   Lovelace K, 2001, ACAD MANAGE J, V44, P779, DOI 10.5465/3069415
   Mantyla M.V., 2017, GUEST ITORIAL SPECIA
   Mohr A. T., 2007, European Management Journal, V25, P25, DOI 10.1016/j.emj.2006.11.003
   Mooney AC, 2007, J MANAGE STUD, V44, P733, DOI 10.1111/j.1467-6486.2006.00674.x
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Parolia N, 2015, INFORM SOFTWARE TECH, V66, P30, DOI 10.1016/j.infsof.2015.05.001
   Pelled LH, 1999, ADMIN SCI QUART, V44, P1, DOI 10.2307/2667029
   Pernstål J, 2015, INFORM SOFTWARE TECH, V67, P44, DOI 10.1016/j.infsof.2015.06.007
   Poon P, 2001, DECIS SUPPORT SYST, V30, P393, DOI 10.1016/S0167-9236(00)00069-5
   Prilepok M., 2018, MANAGING CONFLICT EF
   Ribes D, 2013, INFORM ORGAN-UK, V23, P1, DOI 10.1016/j.infoandorg.2012.08.001
   RIZZO JR, 1970, ADMIN SCI QUART, V15, P150, DOI 10.2307/2391486
   Schepers JJL, 2016, INT J RES MARK, V33, P797, DOI 10.1016/j.ijresmar.2016.01.004
   Schmidt S, 2014, EUR J WORK ORGAN PSY, V23, P91, DOI 10.1080/1359432X.2012.711523
   Seth FP, 2015, SOFTWARE QUAL J, V23, P627, DOI 10.1007/s11219-014-9246-2
   Shameem M, 2018, ARAB J SCI ENG, V43, P8223, DOI 10.1007/s13369-018-3375-z
   Shaw JD, 2011, J APPL PSYCHOL, V96, P391, DOI 10.1037/a0021340
   Song WY, 2017, COMPUT IND, V85, P11, DOI 10.1016/j.compind.2016.11.005
   Stewart GL, 2006, J MANAGE, V32, P29, DOI 10.1177/0149206305277792
   Sullivan BN, 2010, ORGAN SCI, V21, P432, DOI 10.1287/orsc.1090.0436
   Tsai KH, 2014, IND MARKET MANAG, V43, P293, DOI 10.1016/j.indmarman.2013.08.012
   Venkatesh V, 2013, MIS QUART, V37, P21
   WALL JA, 1995, J MANAGE, V21, P515, DOI 10.1016/0149-2063(95)90018-7
   Wiesner Stefan., 2017, International journal of automation technology, V11, P17, DOI DOI 10.20965/IJAT.2017.P0017
   Wu GD, 2013, PAK J STAT, V29, P935
   Yang LR, 2015, INT J PROJ MANAG, V33, P67, DOI 10.1016/j.ijproman.2014.02.012
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
   Zowghi D, 2004, INFORM SOFTWARE TECH, V46, P761, DOI 10.1016/j.infsof.2004.03.002
NR 70
TC 8
Z9 9
U1 3
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106331
DI 10.1016/j.infsof.2020.106331
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NT9PE
UT WOS:000573271800013
DA 2024-07-18
ER

PT J
AU Hussain, Y
   Huang, ZQ
   Zhou, Y
   Wang, SZ
AF Hussain, Yasir
   Huang, Zhiqiu
   Zhou, Yu
   Wang, Senzhang
TI CodeGRU: Context-aware deep learning with gated recurrent unit for
   source code modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Machine learning; Deep learning; Software language models; Source code
   suggestion; Source code completion
AB Context: Recently deep learning based Natural Language Processing (NLP) models have shown great potential in the modeling of source code. However, a major limitation of these approaches is that they take source code as simple tokens of text and ignore its contextual, syntactical and structural dependencies.
   Objective: In this work, we present CodeGRU, a gated recurrent unit based source code language model that is capable of capturing source code's contextual, syntactical and structural dependencies.
   Method: We introduce a novel approach which can capture the source code context by leveraging the source code token types. Further, we adopt a novel approach which can learn variable size context by taking into account source code's syntax, and structural information.
   Results: We evaluate CodeGRU with real-world data set and it shows that CodeGRU outperforms the state-of-the-art language models and help reduce the vocabulary size up to 24.93%. Unlike previous works, we tested CodeGRU with an independent test set which suggests that our methodology does not requisite the source code comes from the same domain as training data while providing suggestions. We further evaluate CodeGRU with two software engineering applications: source code suggestion, and source code completion.
   Conclusion: Our experiment confirms that the source code's contextual information can be vital and can help improve the software language models. The extensive evaluation of CodeGRU shows that it outperforms the state-of-the-art models. The results further suggest that the proposed approach can help reduce the vocabulary size and is of practical use for software developers.
C1 [Hussain, Yasir; Huang, Zhiqiu; Zhou, Yu; Wang, Senzhang] Nanjing Univ Aeronaut & Astronaut NUAA, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Huang, Zhiqiu] NUAA, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing 211106, Peoples R China.
   [Huang, Zhiqiu] Collaborat Innovat Ctr Novel Software Technol & I, Nanjing 210093, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics
RP Hussain, Y; Huang, ZQ (corresponding author), Nanjing Univ Aeronaut & Astronaut NUAA, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.; Huang, ZQ (corresponding author), NUAA, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing 211106, Peoples R China.; Huang, ZQ (corresponding author), Collaborat Innovat Ctr Novel Software Technol & I, Nanjing 210093, Peoples R China.
EM yaxirhuxxain@nuaa.edu.cn; zghuang@nuaa.edu.cn; zhouyu@nuaa.edu.cn;
   szwang@nuaa.edu.cn
RI Hussain, Yasir/AHD-3944-2022; Li, Kexin/KAO-2519-2024
OI Zhou, Yu/0000-0002-3723-7584; Hussain, Yasir/0000-0001-7318-8137
FU National Key RD [2018YFB1003902]; Natural Science Foundation of Jiangsu
   Province [BK20170809]; National Natural Science Foundation of China
   [61972197, 61802179]; Qing Lan Project
FX This work was supported by the National Key R&D (grant no.
   2018YFB1003902), Natural Science Foundation of Jiangsu Province (No.
   BK20170809), National Natural Science Foundation of China (No. 61972197,
   No. 61802179) and Qing Lan Project.
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Nguyen AT, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P323, DOI 10.1109/SANER.2018.8330220
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 1998, IFIP-The international federation for information processing. Data mining and reverse engineering: Searching for semantics, DOI DOI 10.1007/978-0-387-35300-5_3
   [Anonymous], COMPLEXITY
   Bellegarda JR, 2000, IEEE T SPEECH AUDI P, V8, P76, DOI 10.1109/89.817455
   Berger Adam, 2017, ACM SIGIR Forum, V51, P219, DOI 10.1145/3130348.3130371
   Bielik P, 2016, PR MACH LEARN RES, V48
   Cambria E, 2014, IEEE COMPUT INTELL M, V9, P48, DOI 10.1109/MCI.2014.2307227
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   D'Souza AR, 2016, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2016.22
   Dam Hoa Khanh, 2016, arXiv
   Franks C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P705, DOI 10.1109/ICSE.2015.228
   FUNAHASHI K, 1993, NEURAL NETWORKS, V6, P801, DOI 10.1016/S0893-6080(05)80125-X
   Gajbhiye A, 2018, LECT NOTES COMPUT SC, V11141, P157, DOI 10.1007/978-3-030-01424-7_16
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guerrouj L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P639, DOI 10.1109/ICSE.2015.212
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Karaivanov S., 2014, P 2014 ACM INT S NEW, P173, DOI 10.1145/2661136.2661148
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   King DB, 2015, ACS SYM SER, V1214, P1
   Kochar IS, 2018, INT J PEDIATR ENDOCR, DOI 10.1186/s13633-018-0059-0
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Ranjan Nihar, 2016, Int. J. Comput. Appl., V134, P6
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rong X., 2014, Word2vec Parameter Learning Explained, V1, P21
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Tay Y., 2018, ADV NEURAL INFORM PR, P4731
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Young T, 2018, IEEE COMPUT INTELL M, V13, P55, DOI 10.1109/MCI.2018.2840738
NR 52
TC 24
Z9 24
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106309
DI 10.1016/j.infsof.2020.106309
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arrieta, A
   Wang, S
   Markiegi, U
   Arruabarrena, A
   Etxeberria, L
   Sagardui, G
AF Arrieta, Aitor
   Wang, Shuai
   Markiegi, Urtzi
   Arruabarrena, Ainhoa
   Etxeberria, Leire
   Sagardui, Goiuria
TI Pareto efficient multi-objective black-box test case selection for
   simulation-based testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Genetic and Evolutionary Computation Conference (GECCO)
CY JUL 15-19, 2018
CL Kyoto, JAPAN
SP Assoc Comp Machinery Special Interest Grp Genet & Evolutionary Computat, Assoc Comp Machinery, SparkCognition, Nat Res, Sentient, Uber AI Labs, Springer, Beacon, NEC, Fujitsu Ltd, Rakuten Linkshare, NTT DATA Engn Syst Corp, DataDirect Networks Japan, HPCTECH Corp, Intelligent Light, Japanese Soc Evolutionary Computat, Shinshu Univ, Univ Electro Commun, Univ Electro Commun, Artificial Intelligence eXplorat Res Ctr
DE Test case selection; Search-based software engineering; Simulation-based
   testing; Cyber-physical systems
ID REGRESSION TEST SELECTION; TEST-CASE GENERATION; FAULT LOCALIZATION;
   PRIORITIZATION; ALGORITHM; SEARCH; MINIMIZATION; FRAMEWORK
AB Context In many domains, engineers build simulation models (e.g., Simulink) before developing code to simulate the behavior of complex systems (e.g., Cyber-Physical Systems). Those models are commonly heavy to simulate which makes it difficult to execute the entire test suite. Furthermore, it is often difficult to measure white-box coverage of test cases when employing such models. In addition, the historical data related to failures might not be available.
   Objective: The objective of the approach presented in this paper is to cost-effectively select test cases without making use of white-box coverage information or historical data related to fault detection.
   Method: We propose a cost-effective approach for test case selection that relies on black-box data related to inputs and outputs of the system. The approach defines in total six effectiveness measures and one cost measure followed by deriving in total 21 objective combinations and integrating them within Non-Dominated Sorting Genetic Algorithm-II (NSGA-II). The proposed six effectiveness metrics are specific to simulation models and are based on anti-patterns and similarity measures.
   Results: We empirically evaluated our approach with these 21 combinations using six case studies by employing mutation testing to assess the fault revealing capability. We compared our approach with Random Search (RS), two many-objective algorithm, as well as three white-box metrics. The results demonstrated that our approach managed to improve Random Search by up to around 28% in terms of the Hypervolume quality indicator. Similarly, black-box metrics-based test case selection also significantly outperformed those of white-box metrics.
   Conclusion: We demonstrate that test case selection is a non-trivial problem in the context of simulation models. We also show that the proposed effectiveness metrics performed significantly better than traditional white-box metrics. Thus, we show that black-box test selection approaches are appropriate to solve the test case selection problem within simulation models.
C1 [Arrieta, Aitor; Markiegi, Urtzi; Arruabarrena, Ainhoa; Etxeberria, Leire; Sagardui, Goiuria] Mondragon Unibertsitatea, Arrasate Mondragon, Spain.
   [Wang, Shuai] Testify AS, Oslo, Norway.
C3 Mondragon Unibertsitatea
RP Arrieta, A (corresponding author), Mondragon Unibertsitatea, Arrasate Mondragon, Spain.
EM aarrieta@mondragon.edu; shuai.wang@testify.no; umarkiegi@mondragon.edu;
   eibek03@mondragon.edu; letxeberria@mondragon.edu;
   gsagardui@mondragon.edu
RI Etxeberria, Leire/R-6402-2017; Sagardui, Goiuria/ABH-5263-2020
OI Etxeberria, Leire/0000-0002-4846-2007; Sagardui,
   Goiuria/0000-0003-1002-456X
FU Department of Education, Universities and Research of the Basque
   Government
FX The work has been developed by the embedded systems group supported by
   the Department of Education, Universities and Research of the Basque
   Government.
CR Abdessalem R. B., 2018, P 40 INT C SOFTW ENG
   Anwar Z, 2013, 2013 16TH INTERNATIONAL MULTI TOPIC CONFERENCE (INMIC), P95, DOI 10.1109/INMIC.2013.6731331
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Arrieta A., 2016, P 20 INT SYST SOFTW, P297, DOI 10.1145/2934466.2946046
   Arrieta A., 2019, STAT TESTS RESULTS
   Arrieta A, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1411, DOI 10.1145/3205455.3205490
   Arrieta A, 2019, J SYST SOFTWARE, V149, P1, DOI 10.1016/j.jss.2018.09.055
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Arrieta A, 2018, IEEE T IND INFORM, V14, P1055, DOI 10.1109/TII.2017.2788019
   Arrieta A, 2017, SOFTWARE QUAL J, V25, P1041, DOI 10.1007/s11219-016-9341-7
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Arrieta A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1053, DOI 10.1145/2908812.2908871
   Baller H, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P303, DOI 10.1109/ICST.2014.43
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Binkley D, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P251, DOI 10.1109/ICSM.1995.526547
   Briand L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P789, DOI 10.1145/2889160.2889212
   Campos J., 2017, P S SEARCH BAS SOFTW
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chowdhury SA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P981, DOI 10.1145/3180155.3180231
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Corne DW., 2002, P GEN EV COMP C GECC, P283, DOI [DOI 10.5555/2955239.2955289, 10.5555/2955239.2955289]
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Eidson JC, 2012, P IEEE, V100, P45, DOI 10.1109/JPROC.2011.2161237
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   González CA, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P176, DOI 10.1145/3239372.3239409
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kane A, 2014, I C DEPEND SYS NETWO, P148, DOI 10.1109/DSN.2014.28
   Lachmann R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1311, DOI 10.1145/3071178.3071189
   Hanh LTM, 2016, J SYST SOFTWARE, V120, P17, DOI 10.1016/j.jss.2016.07.001
   Le Thi My Hanh, 2014, International Journal of Computer and Information Technology, V3, P763
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Liu B., 2017, P 24 IEEE INT C SOFT
   Liu B, 2019, EMPIR SOFTW ENG, V24, P444, DOI 10.1007/s10664-018-9611-z
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Maia C. L. B., 2009, P AN 41 S BRAS PESQ, P1824
   Markiegi U, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P123, DOI 10.1145/3106195.3106210
   Matinnejad R., IEEE T SOFTW ENG
   Matinnejad R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P938, DOI 10.1145/3106237.3117770
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Matinnejad R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P84, DOI 10.1145/2786805.2786818
   Matinnejad R, 2015, INFORM SOFTWARE TECH, V57, P705, DOI 10.1016/j.infsof.2014.05.007
   Menghi C., 2019, ARXIV190303399
   Panichella A., IEEE T SOFT ENG, V41
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Pradhan D, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1085, DOI 10.1145/2908812.2908850
   Ramirez A., 2018, J SYST SOFTW
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   Rothermel G., 1998, CSE J ARTIC, P11
   SAGARDUI G, 2017, 2017 IEEE INT WORKSH, P1
   Sagardui G, 2017, IEEE INT SYMP SOFTW, P16, DOI 10.1109/ISSREW.2017.9
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Schroeder P. J., 2000, Software Engineering Notes, V25, P173, DOI 10.1145/347636.349042
   Shokry H, 2009, COMPUTER, V42, P53, DOI 10.1109/MC.2009.125
   Strathmann T., 2015, 1 2 INT WORKSH APPL, P49
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P182, DOI 10.1145/2889160.2889240
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Xie T, 2005, IEEE T SOFTWARE ENG, V31, P869, DOI 10.1109/TSE.2005.107
   Xu ZW, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P120
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2011, LECT NOTES COMPUT SC, V6956, P219, DOI 10.1007/978-3-642-23716-4_20
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zheng J., 2 INT WORKSH INC COT, DOI [10.1109/iwicss.2007.8, DOI 10.1109/IWICSS.2007.8]
   Zheng W, 2016, INFORM SCIENCES, V334, P1, DOI 10.1016/j.ins.2015.11.027
   Zitzler E., 2001, TIK-Report, V103, P1
NR 91
TC 26
Z9 26
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 137
EP 154
DI 10.1016/j.infsof.2019.06.009
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200009
DA 2024-07-18
ER

PT J
AU Lwakatare, LE
   Kilamo, T
   Karvonen, T
   Sauvola, T
   Heikkilä, V
   Itkonen, J
   Kuvaja, P
   Mikkonen, T
   Oivo, M
   Lassenius, C
AF Lwakatare, Lucy Ellen
   Kilamo, Terhi
   Karvonen, Teemu
   Sauvola, Tanja
   Heikkila, Ville
   Itkonen, Juha
   Kuvaja, Pasi
   Mikkonen, Tommi
   Oivo, Markku
   Lassenius, Casper
TI DevOps in practice: A multiple case study of five companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE DevOps; Continuous deployment; Agile; Operations; Development
ID CONTINUOUS DEPLOYMENT; AGILE; ARCHITECTURE
AB Context: DevOps is considered important in the ability to frequently and reliably update a system in operational state. DevOps presumes cross-functional collaboration and automation between software development and operations. DevOps adoption and implementation in companies is non-trivial due to required changes in technical, organisational and cultural aspects.
   Objectives: This exploratory study presents detailed descriptions of how DevOps is implemented in practice. The context of our empirical investigation is web application and service development in small and medium sized companies.
   Method: A multiple-case study was conducted in five different development contexts with successful DevOps implementations since its benefits, such as quick releases and minimum deployment errors, were achieved. Data was mainly collected through interviews with 26 practitioners and observations made at the companies. Data was analysed by first coding each case individually using a set of predefined themes and thereafter perform a cross-case synthesis.
   Results: Our analysis yielded some of the following results: (I) software development team attaining ownership and responsibility to deploy software changes in production is crucial in DevOps. (ii) toolchain usage and support in deployment pipeline activities accelerates the delivery of software changes, bug fixes and handling of production incidents. (ii) the delivery speed to production is affected by context factors, such as manual approvals by the product owner (iii) steep learning curve for new skills is experienced by both software developers and operations staff, who also have to cope with working under pressure.
   Conclusion: Our findings contributes to the overall understanding of DevOps concept, practices and its perceived impacts, particularly in small and medium sized companies. We discuss two practical implications of the results.
C1 [Lwakatare, Lucy Ellen; Karvonen, Teemu; Sauvola, Tanja; Kuvaja, Pasi; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
   [Kilamo, Terhi] Tampere Univ, Fac Informat Technol & Commun Sci, Tampere, Finland.
   [Heikkila, Ville; Itkonen, Juha; Lassenius, Casper] Aalto Univ, Dept Comp Sci, Helsinki, Finland.
   [Mikkonen, Tommi] Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
C3 University of Oulu; Tampere University; Aalto University; University of
   Helsinki
RP Lwakatare, LE (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
EM lucylwakatare@yahoo.com
RI Itkonen, Juha P/E-8360-2012; Lassenius, Casper/A-4339-2013
OI Kuvaja, Pasi/0000-0002-1488-6928; Lassenius, Casper/0000-0003-4192-7024;
   Mikkonen, Tommi/0000-0002-8540-9918
FU TEKES as a part of the N4S project (2014-2017) of DIMECC (Digital,
   Internet, Materials and Engineering Co-Creation)
FX This work was supported by TEKES as a part of the N4S project
   (2014-2017) of DIMECC (Digital, Internet, Materials and Engineering
   Co-Creation). We would like to also acknowledge and thank the companies
   and company representatives for their contributions and involvement in
   the study.
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Babar Z, 2015, LECT NOTES BUS INF P, V235, P322, DOI 10.1007/978-3-319-25897-3_21
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bass L, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P4, DOI 10.1109/RELENG.2015.11
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Callanan M, 2016, IEEE SOFTWARE, V33, P53, DOI 10.1109/MS.2016.66
   Chen L, 2017, J SYST SOFTW
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Cukier D., 2013, Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, Applications: Software for Humanity, P143, DOI DOI 10.1145/2508075.2508432
   Davis J., 2016, EFFECTIVE DEVOPS
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Elberzhager F, 2017, LECT NOTES BUS INF P, V269, P33, DOI 10.1007/978-3-319-49421-0_3
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Fazal-Baqaie M., 2017, CEUR WORKSHOP PROCEE, V1806, P18
   Gotel O, 2007, LECT NOTES COMPUT SC, V4536, P24
   Hamilton J, 2007, USENIX ASSOCIATION PROCEEDING OF THE 21ST LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P231
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hummer W., 2013, TESTING IDEMPOTENCE
   Iden J, 2011, INFORM SOFTWARE TECH, V53, P394, DOI 10.1016/j.infsof.2010.12.002
   Jabbari MH, 2016, EC SOC DEVELOP, P1
   Jones S, 2016, EXPAND LITERACIES ED, P75
   Kerzazi N, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P77, DOI [10.1109/CSED.2016.022, 10.1145/2896941.2896957]
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Liming Zhu, 2015, IEEE Software, V32, P73, DOI 10.1109/MS.2015.23
   Liu Y., 2014, International Journal of U- EService, Science Technology, V7, P41
   Lwakatare L E., 2016, ICSEA 2016: The Eleventh International Conference on Software Engineering Advances, IARIA, 2016, P91
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mysara M, 2016, CAIRO INT BIOM ENG, P19, DOI 10.1109/CIBEC.2016.7836090
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Penners R., 2015, FULL SCALE SOFTW ENG
   PuppetLabs, 2016, 2016 STAT DEVOPS REP
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schlossnagle T, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3168505
   Schneider M, 2016, DISTRIBUTION OF WEALTH - GROWING INEQUALITY?, P138
   Shi YRR, 2015, IEEE ANTENNAS PROP, P328, DOI 10.1109/APS.2015.7304550
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Tessem B., 2008, International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE), P105, DOI DOI 10.1145/1370114.1370141
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Wettinger J, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P60, DOI 10.1109/IC2E.2015.23
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin R.K., 2014, Applications of case study research, V2nd
NR 57
TC 57
Z9 71
U1 6
U2 88
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 217
EP 230
DI 10.1016/j.infsof.2019.06.010
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mayvan, BB
   Rasoolzadegan, A
   Ebrahimi, AM
AF Mayvan, B. Bafandeh
   Rasoolzadegan, A.
   Ebrahimi, A. M.
TI A new benchmark for evaluating pattern mining methods based on the
   automatic generation of testbeds
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Benchmarking; Pattern mining; Design pattern detection; Automatic code
   generation
ID DESIGN PATTERNS; SOURCE CODE; RECOVERY; TOOL; SUPPORT
AB Context: Mining patterns is one of the most attractive topics in the field of software design. Knowledge about the number, type, and location of pattern instances is crucial to understand the original design decisions. Several techniques and tools have been presented in the literature for mining patterns in a software system. However, evaluating the quality of the detection results is usually done manually or subjectively. This can significantly affect the evaluation results. Therefore, a fair comparison of the quality of the various mining methods is not possible.
   Objective: This paper describes a new benchmark to evaluate pattern mining methods in source code or design. Our work aims at overcoming the challenges faced in benchmarking in pattern detection. The proposed benchmark is comprehensive, fair, and objective, with a repeatable evaluation process.
   Method: Our proposed benchmark is based on automatic generation of testbeds using graph theory. The generated testbeds are Java source codes and their corresponding class diagrams in which various types of patterns and their variants are inserted in different locations. The generated testbeds differ in their levels of complexity and full information is available on the utilized patterns.
   Results: The results show that our proposed benchmark is able to evaluate the pattern mining methods quantitatively and objectively. Also, it can be used to compare pattern mining methods in a fair and repeatable manner.
   Conclusions: Based on our findings, it can be argued that benchmarking in the pattern mining field is significantly less mature than topics such as presenting a new detection method. Therefore, special attention is needed in the pattern evaluation topic. Our proposed benchmark is a step towards achieving a comparative understanding of the effectiveness of detection methods and demonstrating their strengths and weaknesses.
C1 [Mayvan, B. Bafandeh; Rasoolzadegan, A.; Ebrahimi, A. M.] Ferdowsi Univ Mashhad, Fac Engn, Mashhad, Iran.
C3 Ferdowsi University Mashhad
RP Rasoolzadegan, A (corresponding author), Ferdowsi Univ Mashhad, Fac Engn, Mashhad, Iran.
EM rasoolzadegan@um.ac.ir
RI Rasoolzadegan, Abbas/A-1729-2017
OI Rasoolzadegan, Abbas/0000-0001-8668-5650
CR Al-Obeidallah M. G., 2016, INT J SOFTW ENG, V7, P73
   Albin-Amiot H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P166, DOI 10.1109/ASE.2001.989802
   Alnusair A, 2014, INT J SOFTW TOOLS TE, V16, P315, DOI 10.1007/s10009-013-0292-z
   [Anonymous], 2007, P 1 EUROPLOP FOC GRO
   [Anonymous], 2015, INT C LOGISTICS INFO, DOI DOI 10.1109/LISS.2015.7369655
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bernardi ML, 2014, J SOFTW-EVOL PROC, V26, P1233, DOI 10.1002/smr.1674
   Bernardi Mario Luca, 2015, P CAISE 2015 FORUM 2, V1367, P113
   Beyer D, 2003, PROG COMPREHEN, P294
   Blewitt Alex, 2005, 20 IEEE ACM INT AUT, P224
   Bultan T, 2008, LECT NOTES COMPUT SC, V4171, P337
   Chihada A, 2015, APPL SOFT COMPUT, V26, P357, DOI 10.1016/j.asoc.2014.10.027
   Costagliola G, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P102, DOI 10.1109/CSMR.2005.23
   Cutting D., 2015, INT J ADV SOFTWARE, V8, P115
   De Lucia A, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176643
   De Lucia A, 2015, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSM.2015.7332462
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   De Lucia Andrea., 2010, Proceedings of the IEEE International Conference on Software Maintenance, ICSM, P1, DOI DOI 10.1109/ICSM.2010.5609707
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Dong J, 2009, INT J SOFTW ENG KNOW, V19, P823, DOI 10.1142/S021819400900443X
   Dong J, 2009, IEEE T SYST MAN CY A, V39, P1271, DOI 10.1109/TSMCA.2009.2028012
   Dong J, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P765
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Fernandes E., 2016, P 20 EASE, P18
   Fontana FA, 2012, EUR CON SFTWR MTNCE, P235, DOI 10.1109/CSMR.2012.32
   Fülöp LJ, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P143
   Fülöp LJ, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P127
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Geeheneuc Yann-Gel., 2001, P 1 IJCAI WORKSHOP M, P57
   Gueheneuc Y.-G., 2006, 10th European Conference on Software Maintenance and Reengineering
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2010, SOFTWARE QUAL J, V18, P145, DOI 10.1007/s11219-009-9082-y
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Hannemann Jan., 2005, AOSD 05, P135
   Hayashi S, 2008, IEICE T INF SYST, VE91D, P933, DOI 10.1093/ietisy/e91-d.4.933
   Heaven W., 2004, IEE Proceedings-Software, V151, P10, DOI 10.1049/ip-sen:20040297
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   IEEE, 1990, IEEE Std 610.1990, P12
   Issaoui I, 2015, INNOV SYST SOFTW ENG, V11, P39, DOI 10.1007/s11334-014-0241-3
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Kniesel G, 2010, EUR CON SFTWR MTNCE, P232, DOI 10.1109/CSMR.2010.40
   Kniesel G, 2009, INT C PROGRAM COMPRE, P208, DOI 10.1109/ICPC.2009.5090044
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Lu S., 2005, WORKSH EV SOFTW DEF, V5
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Mayvan BB, 2017, KNOWL-BASED SYST, V120, P211, DOI 10.1016/j.knosys.2017.01.007
   Mens K, 2005, COMPUT LANG SYST STR, V31, P183, DOI 10.1016/j.cl.2004.11.004
   Moreno N, 2007, IET SOFTW, V1, P67, DOI 10.1049/iet-sen:20060067
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Paakki J., 2000, Proceedings of the International Conference on Software, P325
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Rasool G, CATALOGUE DESIGN PAT
   Rasool G., 2011, IJCSI International Journal of Computer Science Issues, V8, P251
   Rasool G, 2010, ADV ENG SOFTW, V41, P519, DOI 10.1016/j.advengsoft.2009.10.014
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sim S. E., 2003, THESIS
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Sim SE, 2002, PROG COMPREHEN, P114, DOI 10.1109/WPC.2002.1021331
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P184, DOI 10.1109/WCRE.2000.891465
   Smith JM, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ASE.2003.1240309
   Thongrak Malisa, 2014, 2014 International Computer Science and Engineering Conference (ICSEC), P97, DOI 10.1109/ICSEC.2014.6978176
   Tonella P., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P230, DOI 10.1109/ICSM.1999.792619
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Turbak F, 2008, DESIGN CONCEPTS IN PROGRAMMING LANGUAGES, P1
   Vokác M, 2006, J OBJECT TECHNOL, V5, P139, DOI 10.5381/jot.2006.5.1.a6
   von Detten Markus., 2011, Proceedings of the joint ACM SIGSOFT conference - QoSA and ACM SIGSOFT symposium - ISARCS on Quality of software architectures - QoSA and architecting critical systems - ISARCS, QoSA-ISARCS '11, P23
   Wierda A, 2008, COMM COM INF SC, V22, P141
   Wu Ren, 2012, Proceedings of the 2012 IEEE International Conference on Computer Science and Automation Engineering (CSAE 2012), P544, DOI 10.1109/CSAE.2012.6273011
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
   Yang SZ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P53, DOI 10.1109/SANER.2015.7081815
   Yu DJ, 2018, J SYST SOFTWARE, V142, P35, DOI 10.1016/j.jss.2018.04.015
   Yu DJ, 2015, J SYST SOFTWARE, V103, P1, DOI 10.1016/j.jss.2015.01.019
   Yu Dongjin, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P874, DOI 10.1109/ICSESS.2013.6615444
   Zhu H, 2009, P INT COMP SOFTW APP, P228, DOI 10.1109/COMPSAC.2009.37
NR 78
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 60
EP 79
DI 10.1016/j.infsof.2019.01.007
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400006
DA 2024-07-18
ER

PT J
AU Garousi, V
   Felderer, M
   Kiliçaslan, FN
AF Garousi, Vahid
   Felderer, Michael
   Kilicaslan, Feyza Nur
TI A survey on software testability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Software testability; Survey; Systematic literature
   mapping; Systematic literature review; Systematic mapping
ID TECHNICAL DEBT; CHALLENGES; VOICE
AB Context: Software testability is the degree to which a software system or a unit under test supports its own testing. To predict and improve software testability, a large number of techniques and metrics have been proposed by both practitioners and researchers in the last several decades. Reviewing and getting an overview of the entire state-of-the-art and state-of-the-practice in this area is often challenging for a practitioner or a new researcher.
   Objective: Our objective is to summarize the body of knowledge in this area and to benefit the readers (both practitioners and researchers) in preparing, measuring and improving software testability.
   Method: To address the above need, the authors conducted a survey in the form of a systematic literature mapping (classification) to find out what we as a community know about this topic. After compiling an initial pool of 303 papers, and applying a set of inclusion/exclusion criteria, our final pool included 208 papers (published between 1982 and 2017).
   Results: The area of software testability has been comprehensively studied by researchers and practitioners. Approaches for measurement of testability and improvement of testability are the most-frequently addressed in the papers. The two most often mentioned factors affecting testability are observability and controllability. Common ways to improve testability are testability transformation, improving observability, adding assertions, and improving controllability.
   Conclusion: This paper serves for both researchers and practitioners as an "index" to the vast body of knowledge in the area of testability. The results could help practitioners measure and improve software testability in their projects. To assess potential benefits of this review paper, we shared its draft version with two of our industrial collaborators. They stated that they found the review useful and beneficial in their testing activities. Our results can also benefit researchers in observing the trends in this area and identify the topics that require further investigation.
C1 [Garousi, Vahid] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
   [Felderer, Michael] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Felderer, Michael] Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
   [Kilicaslan, Feyza Nur] Hacettepe Univ, Dept Comp Engn, Ankara, Turkey.
C3 Wageningen University & Research; Blekinge Institute Technology;
   University of Innsbruck; Hacettepe University
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM vahid.garousi@wur.nl; michael.felderer@uibk.ac.at;
   feyzanur@cs.hacettepe.edu.tr
RI Felderer, Michael/AAF-4909-2020
OI Garousi, Vahid/0000-0001-6590-7576
FU Knowledge Foundation (KKS) of Sweden [20130085]
FX The authors would like to thank Bas Dijkstra and Armin Beer for
   providing their opinions on benefits of this mapping study. Michael
   Felderer was partly funded by the Knowledge Foundation (KKS) of Sweden
   through the project 20130085: Testing of Critical System Characteristics
   (TOCSYC).
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   [Anonymous], 2016, P 31 ANN ACM S APPL
   [Anonymous], 8301998 IEEE
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2011, 250102011 ISOIEC
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Beer A, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET 2018), P25, DOI 10.1145/3195538.3195542
   Binder R., GTAC 2010 WHAT TESTA
   BINDER RV, 1994, COMMUN ACM, V37, P87, DOI 10.1145/182987.184077
   Bolton M., MORE TESTABILITY
   Bryman A., 2007, INT J SOC RES METHOD, V10, P5, DOI DOI 10.1080/13645570600655282
   Caroli J. A., ADA236148 US DEF TEC
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Felderer M., 2018, ARXIV180207140
   Felderer M, 2017, LECT NOTES BUS INF P, V269, P87, DOI 10.1007/978-3-319-49421-0_7
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P609, DOI 10.1007/s10009-014-0328-z
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V., ONLINE DATASET WHAT
   Garousi V., 2013, P TURK NAT SOFTW ENG
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Garousi V, 2018, IEEE SOFTWARE, V35, P62, DOI 10.1109/MS.2018.2801541
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Hanoglu E. I., 2016, P TURK NAT SOFTW ENG, P260
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Haser F., 2014, P INT C EV ASS SOFTW
   Hassan MM, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P341, DOI 10.1109/SEAA.2015.47
   Hevery M., DESIGN TECH TALK SER
   Huda M, 2014, INT J SCI ENG TECHNO, V3, P1313
   Hulley S. B., 2001, DES CLIN RES, V335
   ISO, 2001, 912612001 ISO
   ISO, 2008, 122072008 ISO
   ISO and IEEE, 2010, 247652010 ISOIECIEEE
   ISO and IEEE, 2011, 291482011E ISOIECIEE
   ISTQB, STAND GLOSS TERMS US
   Jianping F., 2010, P INT C COMP APPL SY, V15
   Kedemo M., 2015, TESTING TRAPEZE  DEC, P31
   Kirk K., 2010, WRITING READABILITY
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lipowski EE, 2008, AM J HEALTH-SYST PH, V65, P1667, DOI 10.2146/ajhp070276
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Malla P., 2012, THESIS
   Nguyen VM, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0132557
   Nikfard P., 2010, INT J COMPUT TECHNOL, P938
   Nikfard P, 2013, 2013 INTERNATIONAL CONFERENCE ON INFORMATICS AND CREATIVE MULTIMEDIA (ICICM), P85, DOI 10.1109/ICICM.2013.22
   Obrenovic Z, 2017, IEEE SOFTWARE, V34, P71, DOI 10.1109/MS.2017.101
   Petersen K, 2008, P INT C EV ASS SOFTW
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   S. A. SonarSource, SON SQALE 1 2 SCREEN
   Sabane A., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P309, DOI 10.1109/WCRE.2010.47
   Shaheen M. R., 2010, RRLIG005 INR
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shull F, 2017, IEEE SOFTWARE, V34, P23, DOI 10.1109/MS.2017.91
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Srivastava R., 2014, INT J ADV RES COMPUT, V2, P360
   Srivastava S., 2014, INT J ADV RES COMPUT, V2
   Staffs Keele, 2007, Tech. Rep.
   Suri P.R, 2015, International Journal of Computer Applications Technology and Research, V5, P359, DOI 10.7753/IJCATR0405.1006
   Suri PR, 2015, INT J SCI RES, V4, P3047
   US Department of Defence, 1985, MILSTD2165 US DEP DE
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 76
TC 24
Z9 24
U1 2
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 35
EP 64
DI 10.1016/j.infsof.2018.12.003
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xiao, Y
   Keung, J
   Bennin, KE
   Mi, Q
AF Xiao, Yan
   Keung, Jacky
   Bennin, Kwabena E.
   Mi, Qing
TI Improving bug localization with word embedding and enhanced
   convolutional neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Convolutional neural network; Word embedding; TF-IDF;
   Deep learning; Semantic information
AB Context Automatic localization of buggy files can speed up the process of bug fixing to improve the efficiency and productivity of software quality assurance teams. Useful semantic information is available in bug reports and source code, but it is usually underutilized by existing bug localization approaches.
   Objective: To improve the performance of bug localization, we propose DeepLoc, a novel deep learning-based model that makes full use of semantic information.
   Method: DeepLoc is composed of an enhanced convolutional neural network (CNN) that considers bug-fixing recency and frequency, together with word-embedding and feature-detecting techniques. DeepLoc uses word embeddings to represent the words in bug reports and source files that retain their semantic information, and different CNNs to detect features from them. DeepLoc is evaluated on over 18,500 bug reports extracted from AspectJ, Eclipse, JDT, SWT, and Tomcat projects.
   Results: The experimental results show that DeepLoc achieves 10.87%-13.4% higher MAP (mean average precision) than conventional CNN. DeepLoc outperforms four current state-of-the-art approaches (DeepLocator, HyLoc, LR + WE, and BugLocator) in terms of Accuracy@k (the percentage of bug reports for which at least one real buggy file is located within the top k rank), MAP, and MRR (mean reciprocal rank) using less computation time.
   Conclusion: DeepLoc is capable of automatically connecting bug reports to the corresponding buggy files and achieves better performance than four state-of-the-art approaches based on a deep understanding of semantics in bug reports and source code.
C1 [Xiao, Yan; Keung, Jacky; Bennin, Kwabena E.; Mi, Qing] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Xiao, Y (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM yanxiao6-c@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk;
   kebennin2-c@my.cityu.edu.hk; Qing.Mi@my.cityu.edu.hk
RI Mi, Qing/GQI-1620-2022; Keung, Jacky/X-4693-2019; Keung,
   Jacky/ABA-7089-2020
OI Mi, Qing/0000-0001-5063-3189; Keung, Jacky/0000-0002-3803-9600; Bennin,
   Kwabena/0000-0001-9140-9271; XIAO, Yan/0000-0002-2563-083X
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7004683]
FX This work is supported in part by. the General Research Fund of the
   Research Grants Council of Hong Kong [No. 11208017], and the research
   funds of City University of Hong Kong [No. 7004683]
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2010, Search engines: Information retrieval in practice
   [Anonymous], 2016, AAAI
   Beel J., 2017, P ICONFERENCE 2017 W
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Fukushima S., 1982, inCompetition and Cooperation in Neural Nets, P267, DOI 10.1007/978-3-642-46466-9_18
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   HUBEL DH, 1962, J PHYSIOL-LONDON, V160, P106, DOI 10.1113/jphysiol.1962.sp006837
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kenter T, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P941
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Kim Y, 2016, AAAI CONF ARTIF INTE, P2741
   Kingma D. P., 2014, arXiv
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kwolek B, 2005, LECT NOTES COMPUT SC, V3696, P551, DOI 10.1007/11550822_86
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning C. D., 2008, Scoring, term weighting, and the vector space model, P100
   Mealling M, 2002, TECHNICAL REPORT
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Pagliardini M., 2018, NAACL, P528
   Peng H, 2015, LECT NOTES ARTIF INT, V9403, P547, DOI 10.1007/978-3-319-25159-2_49
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   van der Maaten L, 2014, J MACH LEARN RES, V15, P3221
   Vincent Pascal, 2008, P 25 INT C MACHINE L, DOI DOI 10.1145/1390156.1390294
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xiao Y., 2018, INF SOFTW TECHNOL
   Xiao Y, 2017, ASIA PAC SOFWR ENG, P338, DOI 10.1109/APSEC.2017.40
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zeiler Matthew D, 2012, ARXIV12125701
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P424, DOI 10.1145/2591062.2591099
   Zhang Y, 2015, ARXIV PREPRINT ARXIV
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou ZH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3553
NR 54
TC 61
Z9 69
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 17
EP 29
DI 10.1016/j.infsof.2018.08.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900002
DA 2024-07-18
ER

PT J
AU Makady, S
   Walker, RJ
AF Makady, Soha
   Walker, Robert J.
TI Debugging and maintaining pragmatically reused test suites
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Pragmatic software reuse; Test suite reuse; Error detection; Error
   repair; Debugging; Maintenance; Semi-automatic; Lightweight tool
ID SOFTWARE MAINTENANCE; GENERATION
AB Context: Pragmatic software reuse is a common activity in industry, involving the reuse of software artifacts not designed to anticipate that reuse.
   Objective: There are two key issues in such tasks that have not been previously explored. (1) Subtle bugs can be inserted due to mistakes on the part of a developer performing the pragmatic reuse. The reused code, integrated in the target system, should be (re-)validated there. But it is not clear what validation strategies would be employed by professional developers, and which of these strategies would be most effective to detect and to repair these inserted bugs. (2) Although semi-automated reuse of the associated test suite has been previously proposed as a strategy to detect such inserted bugs, it is unknown if the reused test suite would be maintainable in practice and how its maintenance characteristics would compare against alternative strategies.
   Method: We present two empirical studies with industrial developers to address these open issues.
   Results: We find that industrial developers use a few strategies including test suite reuse, but that test suite reuse is more reliably effective at discovering and repairing bugs inserted during pragmatic reuse. We also find that, in general, semi-automatically reused test suites are slightly more maintainable than manually reused test suites, in pragmatic reuse scenarios; specific situations can vary wildly however. Participants suggested specific extensions to tool support for semi-automated reuse of test suites.
   Conclusions: While various validation strategies are employed by industrial developers in the context of pragmatic reuse, none is as reliable and effective as test case reuse at discovering and repairing bugs inserted during pragmatic reuse. Despite the fact that semi-automatically reused test cases contain non-trivial adaptive code, their maintainability is equivalent to or exceeds that of manually reused test suites. The approach could be improved, however, by adopting the suggestions of our participants to increase usability.
C1 [Makady, Soha] Cairo Univ, Fac Comp & Informat, Dept Comp Sci, Giza, Egypt.
   [Walker, Robert J.] Univ Calgary, Dept Comp Sci, Calgary, AB, Canada.
C3 Egyptian Knowledge Bank (EKB); Cairo University; University of Calgary
RP Walker, RJ (corresponding author), Univ Calgary, Dept Comp Sci, Calgary, AB, Canada.
EM s.makcady@fci-cu.edu.eg; walker@ucalgary.ca
FU Natural Sciences and Engineering Research Council of Canada
FX This work was supported in part by a Discovery Grant from the Natural
   Sciences and Engineering Research Council of Canada.
CR Agresti W., 2010, J. Softw. Eng. Appl., V1, P48
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   [Anonymous], ACM COMPUTING SURVEY, DOI DOI 10.1145/130844.130856
   [Anonymous], 1996, ARIANE 5, Flight 501 Failure
   [Anonymous], 2010, JAVA OBJECT SERIALIZ
   [Anonymous], 2010, FLEAX ATUNES CROSS P
   [Anonymous], P CHI
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Biggerstaff T. J., 1994, Proceedings. Third International Conference on Software Reuse: Advances in Software Reusability (Cat. No.94TH06940), P102, DOI 10.1109/ICSR.1994.365806
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Burkhardt J.-M., 1995, Human-Computer Interaction. Interact '95, P133
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Cordy JR, 2003, PROG COMPREHEN, P196
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   DAHL OJ, 1966, COMMUN ACM, V9, P671, DOI 10.1145/365813.365819
   Duala-Ekoko E, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767754
   Elbaum S, 2009, IEEE T SOFTWARE ENG, V35, P29, DOI 10.1109/TSE.2008.103
   Evans H., 2000, WHY OBJECT SERIALIZA
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Fluri B, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P66, DOI 10.1109/SCAM.2005.14
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   Gupta C, 2010, J INF PROCESS SYST, V6, P597, DOI 10.3745/JIPS.2010.6.4.597
   Harman M, 2013, WORK CONF REVERSE EN, P1, DOI 10.1109/WCRE.2013.6671274
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Holmes R., 2006, 28th International Conference on Software Engineering Proceedings, P961, DOI 10.1145/1134285.1134463
   Holmes R, 2008, LECT NOTES COMPUT SC, V5030, P330, DOI 10.1007/978-3-540-68073-4_35
   Holmes R, 2007, PROC INT CONF SOFTW, P447
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Jack P., HERITRIX
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Jaygarl Hojun, 2010, P 19 INT S SOFTWARE, P159
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Krueger CW, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P117, DOI 10.1109/ASSET.2000.888062
   Lange B. M., 1989, SIGCHI Bulletin, P69, DOI 10.1145/67450.67465
   Leotta M, 2016, ADV COMPUT, V101, P193, DOI 10.1016/bs.adcom.2015.11.007
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Makady S., 2014, 2014106112 U CALG, DOI [10.5072/PRISM/31124, DOI 10.5072/PRISM/31124]
   Makady S., 2015, THESIS
   Makady S, 2013, SOFTWARE PRACT EXPER, V43, P1039, DOI 10.1002/spe.2134
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mcllroy M.D., 1968, REPORT C NATO SCI CO, P138
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   *NIST, 2002, 023 NIST
   O'Madadhain J., JAVA UNIVERSAL NETWO
   Orso Alessandro., 2005, SIGSOFT SOFTW ENG NO, V30, P1, DOI [10.1145/1082983.1083251, DOI 10.1145/1082983.1083251]
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   PRIETODIAZ R, 1993, IEEE SOFTWARE, V10, P61, DOI 10.1109/52.210605
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Ricca Filimo, 2013, 2013 15th IEEE International Symposium on Web Systems Evolution (WSE), P39, DOI 10.1109/WSE.2013.6642415
   Rojas J.M., 2015, Automated Unit Test Generation During Software Development: A Controlled Experiment and Think-aloud Observations, P338
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Skoglund M, 2004, PROC IEEE INT CONF S, P438, DOI 10.1109/ICSM.2004.1357831
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Torkar R, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/SWSTE.2003.1245437
   van Dooren M, 2007, LECT NOTES COMPUT SC, V4609, P425
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   Van Rompaey B, 2008, WORK CONF REVERSE EN, P269, DOI 10.1109/WCRE.2008.29
   Walker R. J., 2016, 2016108807 U CALG DE, DOI [10.5072/PRISM/31120, DOI 10.5072/PRISM/31120]
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
NR 82
TC 4
Z9 4
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 6
EP 29
DI 10.1016/j.infsof.2018.05.001
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400002
DA 2024-07-18
ER

PT J
AU Edison, H
   Wang, XF
   Jabangwe, R
   Abrahamsson, P
AF Edison, Henry
   Wang, Xiaofeng
   Jabangwe, Ronald
   Abrahamsson, Pekka
TI Innovation Initiatives in Large Software Companies: A Systematic Mapping
   Study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Innovation; Innovation initiative; Corporate innovation; Corporate
   entrepreneurship; Large software companies; Systematic mapping study
ID CORPORATE ENTREPRENEURSHIP; SPIN-OFFS; TECHNOLOGY; INTRAPRENEURSHIP;
   STRATEGY; MODEL; INCUMBENCY; PRODUCTS; FUTURE
AB Context: To keep the competitive advantage and adapt to changes in the market and technology, companies need to innovate in an organised, purposeful and systematic manner. However, due to their size and complexity, large companies tend to focus on the structure in maintaining their business, which can potentially lower their agility to innovate.
   Objective: The aims of this study are to provide an overview of the current research on innovation initiatives and to identify the challenges of implementing those initiatives in the context of large software companies.
   Method: The investigation was primarily performed using a systematic mapping approach of published literature on corporate innovation and entrepreneurship, which was then complemented with interviews with four experts with rich industry experience.
   Results: Our mapping study results suggest that, there is a lack of high quality empirical studies on innovation initiative in the context of large software companies. A total of 7 studies are conducted in the context of large software companies, which reported 5 types of initiatives: intrapreneurship, bootlegging, internal venture, spin-off and crowdsourcing. Our study offers three contributions. First, this paper represents the map of existing literature on innovation initiatives inside large companies. The second contribution of this paper is to provide an innovation initiative tree. The third contribution is to identify key challenges faced by each initiative in large software companies.
   Conclusions: At the strategic and tactical levels, there is no difference between large software companies and other companies. At the operational level, large software companies are highly influenced by the advancement of Internet technology. In addition, large software companies use open innovation paradigm as part of their innovation initiatives. We envision our future work is to further empirically evaluate the innovation initiative tree in large software companies. More practitioners from different companies should be involved in the future studies.
C1 [Edison, Henry; Wang, Xiaofeng] Free Univ Bozen Bolzano, Piazza Domenicani 3, I-39100 Bolzano, Italy.
   [Jabangwe, Ronald] Univ Southern Denmark, SDU Software Engn, Maersk Mc Kinney Moller Inst, Campusvej 55, DK-5230 Odense M, Denmark.
   [Abrahamsson, Pekka] Univ Jyvaskyla, Fac Informat Technol, POB 35, FI-40014 Jyvaskyla, Finland.
C3 Free University of Bozen-Bolzano; University of Southern Denmark;
   University of Jyvaskyla
RP Edison, H (corresponding author), Free Univ Bozen Bolzano, Piazza Domenicani 3, I-39100 Bolzano, Italy.
EM henry.edison@inf.unibz.it
RI li, ye/GWN-2672-2022; Wang, Xiaofeng/E-5077-2016; Li, Ye/JBS-2949-2023;
   Jabangwe, Ronald/P-1049-2018; Edison, Henry/AAA-9989-2020; Hu,
   Shaolin/N-1791-2018
OI Jabangwe, Ronald/0000-0002-2305-6352; Edison, Henry/0000-0002-9494-8059;
   
CR Abetti PA, 1997, J BUS VENTURING, V12, P507, DOI 10.1016/S0883-9026(97)00002-5
   Abetti PA, 2002, J BUS VENTURING, V17, P83, DOI 10.1016/S0883-9026(00)00049-5
   Ahmed P.K., 1998, EUROPEAN J INNOVATIO, V1, P30, DOI DOI 10.1108/14601069810199131
   Amundsen O., 2014, International Journal of Business Science and Applied Management, V9, P24
   Andersson M, 2012, RES POLICY, V41, P54, DOI 10.1016/j.respol.2011.08.005
   Anokhin S, 2011, LONG RANGE PLANN, V44, P134, DOI 10.1016/j.lrp.2010.12.005
   Anokhin S, 2011, TECHNOL FORECAST SOC, V78, P1060, DOI 10.1016/j.techfore.2010.12.005
   [Anonymous], 2011, P PACIS2011
   [Anonymous], PRODUCT FOCUSED SOFT
   [Anonymous], STRATEGIC MANAGE J
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2001, European Management Journal, DOI DOI 10.1016/S0263-2373(01)00066-4
   [Anonymous], 2015, US GUID SME DEF
   [Anonymous], DISCIPLINE MARKET LE
   [Anonymous], P 22 ICE IEEE INT TE
   [Anonymous], P AMCIS
   [Anonymous], P BLED
   [Anonymous], 2015, EMPIR SOFTW ENG
   ANTON JJ, 1995, J LAW ECON ORGAN, V11, P362
   Antoncic B, 2001, J BUS VENTURING, V16, P495, DOI 10.1016/S0883-9026(99)00054-3
   Augsdorfer P, 2005, RES POLICY, V34, P1, DOI 10.1016/j.respol.2004.09.010
   BADGUERAHANIAN L, 1995, J BUS VENTURING, V10, P477, DOI 10.1016/0883-9026(95)00038-A
   BARNEY J, 1991, J MANAGE, V17, P99, DOI 10.1177/014920639101700108
   Ben Rejeb H, 2008, TECHNOVATION, V28, P838, DOI 10.1016/j.technovation.2008.08.005
   Espinosa MDB, 2011, INT ENTREP MANAG J, V7, P413, DOI 10.1007/s11365-011-0203-2
   Berchicci L, 2013, RES POLICY, V42, P117, DOI 10.1016/j.respol.2012.04.017
   Birkinshaw J, 1997, STRATEGIC MANAGE J, V18, P207, DOI 10.1002/(SICI)1097-0266(199703)18:3<207::AID-SMJ864>3.3.CO;2-H
   Birkinshaw J., 1998, European Management Journal, V16, P355
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Brundin E, 2008, J BUS VENTURING, V23, P221, DOI 10.1016/j.jbusvent.2006.10.009
   Buenstorf G, 2009, INT J ENTREP VENTUR, V1, P22, DOI 10.1504/IJEV.2009.023818
   Burgelman RA, 1991, ORGAN SCI, V2, P239, DOI 10.1287/orsc.2.3.239
   Carayannis EG, 1998, TECHNOVATION, V18, P1, DOI 10.1016/S0166-4972(97)00101-6
   Chandy RK, 2000, J MARKETING, V64, P1, DOI 10.1509/jmkg.64.3.1.18033
   Chasteen L, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P533, DOI 10.1109/IEMC.2003.1252330
   Chesbrough H, 2003, RES POLICY, V32, P403, DOI 10.1016/S0048-7333(02)00017-3
   Christensen JF, 2005, RES POLICY, V34, P1533, DOI 10.1016/j.respol.2005.07.002
   Clarysse B, 2011, J MANAGE STUD, V48, P1420, DOI 10.1111/J.1467-6486.2010.00991.X
   Corbett A, 2013, J PROD INNOVAT MANAG, V30, P812, DOI 10.1111/jpim.12031
   Covin J.G., 1991, ENTREP THEORY PRACT, V16, P7, DOI 10.1177/104225879101600102
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Cruz-Cázares C, 2013, J ENG TECHNOL MANAGE, V30, P227, DOI 10.1016/j.jengtecman.2013.05.001
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2014, RES POLICY, V43, P812, DOI 10.1016/j.respol.2013.06.006
   Digout J., 2013, Arab Economic and Business Journal, V8, P6, DOI [10.1016/j.aebj.2013.11.001, DOI 10.1016/J.AEBJ.2013.11.001]
   Drucker P.F., 1985, INNOVATION ENTREPREN
   DUNCAN WJ, 1988, BUS HORIZONS, V31, P16, DOI 10.1016/0007-6813(88)90004-3
   Edison H, 2013, J SYST SOFTWARE, V86, P1390, DOI 10.1016/j.jss.2013.01.013
   Ford S, 2010, R&D MANAGE, V40, P81, DOI 10.1111/j.1467-9310.2009.00580.x
   Frederiksen Lars, 2008, International Journal of Project Management, V26, P487, DOI 10.1016/j.ijproman.2008.05.006
   Gassmann O, 2010, R&D MANAGE, V40, P213, DOI 10.1111/j.1467-9310.2010.00605.x
   GHEMAWAT P, 1991, MARKET SCI, V10, P161, DOI 10.1287/mksc.10.2.161
   Gorschek T, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2009.164
   Gulati R, 2000, STRATEGIC MANAGE J, V21, P203, DOI 10.1002/(SICI)1097-0266(200003)21:3<203::AID-SMJ102>3.0.CO;2-K
   Hasegawa K., 2011, Proceedings of the First IEEE International Technology Management Conference (ITMC 2011), P445, DOI 10.1109/ITMC.2011.5996011
   HITT MA, 1990, STRATEGIC MANAGE J, V11, P29
   Howe J., 2006, WIRED, V14, P134
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   Kacperczyk AJ, 2012, ADMIN SCI QUART, V57, P484, DOI 10.1177/0001839212462675
   Khurum M, 2015, INFORM SOFTWARE TECH, V57, P595, DOI 10.1016/j.infsof.2014.06.010
   KIERULFF HE, 1979, BUS HORIZONS, V22, P6, DOI 10.1016/0007-6813(79)90099-5
   Kitchenham B., 2007, Joint Report
   KLEINSCHMIDT EJ, 1991, J PROD INNOVAT MANAG, V8, P240, DOI 10.1016/0737-6782(91)90046-2
   KNIGHT KE, 1967, J BUS, V40, P478, DOI 10.1086/295013
   Knosková L, 2015, AMFITEATRU ECON, V17, P342
   Kuratko D.F., 2015, Small Business Economics, V2, P1
   Kuratko DF, 2014, BUS HORIZONS, V57, P37, DOI 10.1016/j.bushor.2013.08.009
   Kuratko DF, 2009, BUS HORIZONS, V52, P459, DOI 10.1016/j.bushor.2009.05.001
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   MCGRATH RG, 1995, J BUS VENTURING, V10, P121, DOI 10.1016/0883-9026(94)00021-L
   Menzel HC, 2007, TECHNOVATION, V27, P732, DOI 10.1016/j.technovation.2007.05.004
   MORSE CW, 1986, LONG RANGE PLANN, V19, P92, DOI 10.1016/0024-6301(86)90101-9
   Mukherjee T., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P193
   Myers D. D., 1984, Engineering Management International, V2, P229, DOI 10.1016/0167-5419(84)90044-9
   Nambisan S, 2002, J ENG TECHNOL MANAGE, V19, P141, DOI 10.1016/S0923-4748(02)00007-3
   Narayanan VK, 2009, RES POLICY, V38, P58, DOI 10.1016/j.respol.2008.08.015
   O'Connor GC, 2013, J PROD INNOVAT MANAG, V30, P2, DOI 10.1111/jpim.12060
   Organisation for Economic Cooporation and Development (OCED), 2005, OSL MAN GUID COLL IN, DOI 10.1787/9789264013100-en
   Parhankangas A, 2003, RES POLICY, V32, P463, DOI 10.1016/S0048-7333(02)00018-5
   Pavitt K., 1991, BRIT J MANAGE, V2, P41, DOI DOI 10.1111/J.1467-8551.1991.TB00014.X
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pikkarainen M, 2011, ART OF SOFTWARE INNOVATION: EIGHT PRACTICE AREAS TO INSPIRE YOUR BUSINESS, P1, DOI 10.1007/978-3-642-21049-5
   PINCHOT G, 1985, IEEE SPECTRUM, V22, P74, DOI 10.1109/MSPEC.1985.6370622
   Ries E, 2011, The Lean Startup
   ROBERTS EB, 1985, SLOAN MANAGE REV, V26, P3
   Roberts PW, 1999, STRATEGIC MANAGE J, V20, P655, DOI 10.1002/(SICI)1097-0266(199907)20:7<655::AID-SMJ44>3.3.CO;2-G
   Robson C., 2002, Real World Research, V2nd
   ROSS J, 1987, BUS HORIZONS, V30, P76, DOI 10.1016/0007-6813(87)90069-3
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharma P., 1999, ENTREP THEORY PRACT, V23, P11, DOI [DOI 10.1177/104225879902300302, 10.1007/978-3-540-48543-8_4]
   Song XM, 1998, J PROD INNOVAT MANAG, V15, P124, DOI 10.1016/S0737-6782(97)00077-5
   STEVENSON HH, 1990, STRATEGIC MANAGE J, V11, P17
   Subramanian N, 2005, J ECON BEHAV ORGAN, V58, P487, DOI 10.1016/j.jebo.2004.03.006
   Sundbo J, 1996, TECHNOVATION, V16, P397, DOI 10.1016/0166-4972(96)00029-6
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Teece DJ, 2007, STRATEGIC MANAGE J, V28, P1319, DOI 10.1002/smj.640
   Teng BS, 2007, J MANAGE STUD, V44, P119, DOI 10.1111/j.1467-6486.2006.00645.x
   VANDEVEN AH, 1986, MANAGE SCI, V32, P590, DOI 10.1287/mnsc.32.5.590
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Yagüe A, 2014, P ANN HICSS, P5049, DOI 10.1109/HICSS.2014.620
NR 103
TC 11
Z9 12
U1 2
U2 58
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 1
EP 14
DI 10.1016/j.infsof.2017.12.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Hozano, M
   Garcia, A
   Fonseca, B
   Costa, E
AF Hozano, Mario
   Garcia, Alessandro
   Fonseca, Baldoino
   Costa, Evandro
TI Are you smelling it? Investigating how similar developers detect code
   smells
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smell; Detection; Software maintenance; Empirical study
ID BAD
AB Context: A code smell indicates a poor implementation choice that often worsens software quality. Thus, code smell detection is an elementary technique to identify refactoring opportunities in software systems. Unfortunately, there is limited knowledge on how similar two or more developers detect smells in code. In particular, few studies have investigated if developers agree or disagree when recognizing a smell and which factors can influence on such (dis)agreement.
   Objective: We perform a broader study to investigate how similar the developers detect code smells. We also analyze whether certain factors related to the developers' profiles concerning background and experience may influence such (dis)agreement. Moreover, we analyze if the heuristics adopted by developers on detecting code smells may influence on their (dis)agreement.
   Method: We conducted an empirical study with 75 developers who evaluated instances of 15 different code smell types. For each smell type, we analyzed the agreement among the developers and we assessed the influence of 6 different factors on the developers' evaluations. Altogether more than 2700 evaluations were collected, resulting in substantial quantitative and qualitative analyses.
   Results: The results indicate that the developers presented a low agreement on detecting all 15 smell types analyzed in our study. The results also suggest that factors related to background and experience did not have a consistent influence on the agreement among the developers. On the other hand, the results show that the agreement was consistently influenced by specific heuristics employed by developers.
   Conclusions: Our findings reveal that the developers detect code smells in significantly different ways. As a consequence, these findings introduce some questions concerning the results of previous studies that did not consider the different perceptions of developers on detecting code smells. Moreover, our findings shed light towards improving state-of-the-art techniques for accurate, customized detection of code smells. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hozano, Mario] Univ Fed Campina Grande, Dept Comp Syst, Campina Grande, PB, Brazil.
   [Hozano, Mario] UFAL, Nucleo Ciencias Exatas, Arapiraca, AL, Brazil.
   [Garcia, Alessandro] Pontificia Univ Catolica Rio de Janeiro, Informat Dept, Opus Res Grp LES, Rio de Janeiro, RJ, Brazil.
   [Fonseca, Baldoino; Costa, Evandro] Univ Fed Alagoas, Comp Inst, Maceio, AL, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de Alagoas;
   Universidade Federal de Alagoas
RP Hozano, M (corresponding author), Univ Fed Campina Grande, Dept Comp Syst, Campina Grande, PB, Brazil.
EM hozano@gmail.com
RI Fonseca, Baldoino/JUV-2819-2023
OI Fonseca, Baldoino/0000-0002-0730-0319
FU CAPES/Procad [175956]; CNPq [483425/2013-3, 309884/2012-8]; FAPERJ
   [E26-102.166/2013]
FX This work is funded by CAPES/Procad (Grant #175956). Alessandro is also
   funded by CNPq (Grants #483425/2013-3 and #309884/2012-8) and FAPERJ
   (Grant #E26-102.166/2013).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], PSYCHOL MUSIC
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Ferreira Manuele., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, SAC'14, P1158
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gopalan R, 2012, THESIS U W AUSTR
   Hozano M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1661, DOI 10.1145/2695664.2696059
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Macia I, 2013, EUR CON SFTWR MTNCE, P177, DOI 10.1109/CSMR.2013.27
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Mantyla M. V., 2006, SUBJECTIVE EVALUATIO, V11, DOI [10.1007/s10664-006-9002-8, DOI 10.1007/S10664-006-9002-8]
   Mäntylá MV, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P277, DOI 10.1109/ISESE.2005.1541837
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Santos Jose Amancio, 2013, P 17 INT C EV ASS SO, P48
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 38
TC 25
Z9 27
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 130
EP 146
DI 10.1016/j.infsof.2017.09.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200009
DA 2024-07-18
ER

PT J
AU Chochlov, M
   English, M
   Buckley, J
AF Chochlov, Muslim
   English, Michael
   Buckley, Jim
TI A historical, textual analysis approach to feature location
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature location; Version histories; Dataset expansion; Software
   systems' characterization; Search effort
ID LINK ANALYSIS ALGORITHMS; STATIC CONCEPT LOCATION;
   INFORMATION-RETRIEVAL; SOURCE CODE; EXECUTION
AB Context Feature location is the task of finding the source code that implements specific functionality in software systems. A common approach is to leverage textual information in source code against a query, using Information Retrieval (IR) techniques. To address the paucity of meaningful terms in source code, alternative, relevant source-code descriptions, like change-sets could be leveraged for these IR techniques. However, the extent to which these descriptions are useful has not been thoroughly studied.
   Objective: This work rigorously characterizes the efficacy of source-code lexical annotation by change-sets (ACIR), in terms of its best-performing configuration.
   Method: A tool, implementing ACIR, was used to study different configurations of the approach and to compare them to a baseline approach (thus allowing comparison against other techniques going forward). This large-scale evaluation employs eight subject systems and 600 features.
   Results: It was found that, for ACIR: (1) method level granularity demands less search effort; (2) using more recent change-sets improves effectiveness; (3) aggregation of recent change-sets by change request, decreases effectiveness; (4) naive, text-classification-based filtering of "management" change-sets also decreases the effectiveness. In addition, a strongly pronounced dichotomy of subject systems emerged, where one set recorded better feature location using ACIR and the other recorded better feature location using the baseline approach. Finally, merging ACIR and the baseline approach significantly improved performance over both standalone approaches for all systems.
   Conclusion: The most fundamental finding is the importance of rigorously characterizing proposed feature location techniques, to identify their optimal configurations. The results also suggest it is important to characterize the software systems under study when selecting the appropriate feature location technique. In the past, configuration of the techniques and characterization of subject systems have not been considered first-class entities in research papers, whereas the results presented here suggests these factors can have a big impact. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Chochlov, Muslim; English, Michael; Buckley, Jim] Univ Limerick, Lero Dept Comp Sci & Informat Syst, Limerick, Ireland.
C3 University of Limerick
RP Chochlov, M (corresponding author), Univ Limerick, Lero Dept Comp Sci & Informat Syst, Limerick, Ireland.
EM muslim.chochlov@ul.ie; michael.english@ul.ie; jim.buckley@ul.ie
RI English, Michael/KIC-0937-2024
OI Buckley, Jim/0000-0001-6928-6746
FU Science Foundation Ireland [12/IP/1351, 13/RC/2094]; Science Foundation
   Ireland (SFI) [12/IP/1351] Funding Source: Science Foundation Ireland
   (SFI)
FX This work was supported, in part, by Science Foundation Ireland Grants
   12/IP/1351 and 13/RC/2094 to Lero the Irish Software Engineering
   Research Centre (http://www.lero.ie).
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   Alhindawi N, 2013, PROC IEEE INT CONF S, P300, DOI 10.1109/ICSM.2013.41
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 2005, LOGIC SCI DISCOVERY, DOI DOI 10.4324/9780203994627
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], 2005, Researching Information Systems and Computing
   [Anonymous], 2007, P CIKM
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Canfora G., 2001, HDB SOFTWARE ENG KNO
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   Chochlov M, 2015, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2015.7335401
   Cleary B., 2007, Proceedings of the 19th Psychology of Programming Workshop, P42
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hayashi S., 2010, P 26 IEEE INT C SOFT, P1
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P318, DOI 10.1109/CSMR-WCRE.2014.6747185
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Kevic K., 2014, P MSR, P320
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lientz B P., 1980, Software Maintenance Management
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McGill M., 1983, Introduction to Modern Information Retrieval
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   Peng X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P900, DOI 10.1145/1985793.1985939
   Petrenko M, 2013, INFORM SOFTWARE TECH, V55, P651, DOI 10.1016/j.infsof.2012.09.013
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rahman MM, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P540, DOI 10.1109/SANER.2015.7081873
   Ratanotayanon S., 2010, ASE, P341
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shao P., 2009, P 47 ANN SE REG C, P70
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Tantithamthavorn C., 2014, REQUIR ENG, P135
   Wang J, 2011, PROCEEDINGS OF 2011 INTERNATIONAL CONFERENCE ON ELECTRICAL INSULATING MATERIALS (ISEIM), P213
   Würsch M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522931
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 59
TC 17
Z9 18
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 110
EP 126
DI 10.1016/j.infsof.2017.04.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500007
DA 2024-07-18
ER

PT J
AU Yilmaz, M
   O'Connor, RV
   Colomo-Palacios, R
   Clarke, P
AF Yilmaz, Murat
   O'Connor, Rory V.
   Colomo-Palacios, Ricardo
   Clarke, Paul
TI An examination of personality traits and how they impact on software
   development teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software team visualization; Interactive personality assessment;
   Software developer personality traits; Social aspects of software
   development
ID PROCESS IMPROVEMENT; GROUNDED THEORY; 5-FACTOR MODEL; WORK
AB Context Research has shown that a significant number of software projects fail due to social issues such as team or personality conflicts. However, only a limited number of empirical studies have been undertaken to understand the impact of individuals' personalities on software team configurations. These studies suffer from an important limitation as they lack a systematic and rigorous method to relate personality traits of software practitioners and software team structures.
   Objective: Based on an interactive personality profiling approach, the goal of this study is to reveal the personality traits of software practitioners with an aim to explore effective software team structures.
   Method: To explore the importance of individuals' personalities on software teams, we employed a two-step empirical approach. Firstly, to assess the personality traits of software practitioners, we developed a context-specific survey instrument, which was conducted on 216 participants from a middle-sized soft ware company. Secondly, we propose a novel team personality illustration method to visualize team structures.
   Results: Study results indicated that effective team structures support teams with higher emotional stability, agreeableness, extroversion, and conscientiousness personality traits.
   Conclusion: Furthermore, empirical results of the current study show that extroversion trait was more predominant than previously suggested in the literature, which was especially more observable among agile software development teams. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Yilmaz, Murat] Cankaya Univ, Dept Comp Engn, Ankara, Turkey.
   [O'Connor, Rory V.; Clarke, Paul] Lero, Limerick, Ireland.
   [O'Connor, Rory V.; Clarke, Paul] Dublin City Univ, Sch Comp, Dublin, Ireland.
   [Colomo-Palacios, Ricardo] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
C3 Cankaya University; University of Limerick; Dublin City University;
   Ostfold University College
RP Yilmaz, M (corresponding author), Cankaya Univ, Dept Comp Engn, Ankara, Turkey.
EM myilmaz@cankaya.edu.tr
RI /T-8786-2019; Clarke, Paul/JAX-9606-2023
OI /0000-0002-2446-3224; Clarke, Paul/0000-0002-4487-627X; Colomo-Palacios,
   Ricardo/0000-0002-1555-9726; O'Connor, Rory/0000-0001-9253-0313
FU Science Foundation Ireland grant [13/RC/2094]; Science Foundation
   Ireland (SFI) [13/RC/2094] Funding Source: Science Foundation Ireland
   (SFI)
FX This work is supported, in part, by Science Foundation Ireland grant
   number 13/RC/2094 to Lero, the Irish Software Research Centre
   (www.lero.ie).
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   [Anonymous], AGILE ESTIM TECHN IN
   [Anonymous], 2008, CASE STUDY RES DESIG
   [Anonymous], 1996, 5 FACTOR MODEL PERSO
   [Anonymous], MANAGING IT PROFESSI
   [Anonymous], 22 ANN PSYCH PROGR I
   [Anonymous], PERSONALITY TRAITS
   [Anonymous], 2004, QUALITATIVE RES DESI
   [Anonymous], P 21 EUR SYST SOFTW
   [Anonymous], SOCIAL SKILLS
   [Anonymous], 2012, QUAL INQ
   [Anonymous], MEASUREMENT NURSING
   [Anonymous], 2010, SIGSOFT SOFTW ENG NO, DOI DOI 10.1145/1734103.1734111
   Basu R., 2004, IMPLEMENTING QUALITY
   Bryant A., 2019, The SAGE Handbook of Current Developments in Grounded Theory, DOI [10.4135/9781526485656, DOI 10.4135/9781848607941, DOI 10.4135/9781526485656]
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Chao J, 2006, AGILE 2006, PROCEEDINGS, P89, DOI 10.1109/AGILE.2006.20
   Clarke P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P86, DOI [10.1145/2904354.2904369, 10.1109/ICSSP.2016.019]
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Colomo-Palacios R, 2013, COMPUT HUM BEHAV, V29, P456, DOI 10.1016/j.chb.2012.04.021
   Colomo-Palacios R, 2012, J GLOB INF TECH MAN, V15, P30, DOI 10.1080/1097198X.2012.10845617
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Ferdig R., 2012, Interdisciplinary Advancements in Gaming, Simulations and Virtual Environments
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   GOLDBERG LR, 1993, AM PSYCHOL, V48, P26, DOI 10.1037/0003-066X.48.1.26
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Goulding C., 2002, GROUNDED THEORY PRAC
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hayes S.C., 2002, RELATIONAL FRAME THE
   Haywood H.C., 1992, INTERACTIVE ASSESSME
   John O.P., 1991, BIG 5 INVENTORY VERS
   Jung C.G., 1991, Psychological types
   Kaluzniacky E., 2004, Managing Psychological Factors in Information Systems Work: An Orientation to Emotional Intelligence
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Karn JS, 2006, BEHAV RES METHODS, V38, P495, DOI 10.3758/BF03192804
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Kline P., 2000, HDB PSYCHOL TESTING
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Mayer David B., 1968, P 1968 23 ACM NAT C, P657, DOI [10.1145/800186.810630, DOI 10.1145/800186.810630]
   McCrae R.R., 1998, Personality: Critical Concepts in Psychology, V60, P295
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   McGonical Jane., 2011, REALITY IS BROKEN WH
   Mills A.J., 2009, Encyclopedia of Case Study Research
   Moe NB, 2009, LECT NOTES BUS INF P, V31, P114
   Moffitt M. L., 2012, The Handbook of Dispute Resolution
   Myers I., 1999, MBTI manual
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Rodrigues Nuno, 2013, Rev. psicol. trab. organ., V29, P21
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rutherfoord R. H., 2001, SIGCSE Bulletin, V33, P73, DOI 10.1145/507758.377486
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Tavris C., 2004, Science and pseudoscience in clinical psychology
   Tekinbas K. S., 2003, Rules of Play: Game Design Fundamentals
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Yilmaz M., 2011, ACM SIGSOFT SOFTW EN, V36, P1
   Yilmaz M, 2012, EUROMICRO CONF PROC, P400, DOI 10.1109/SEAA.2012.62
NR 69
TC 57
Z9 63
U1 0
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 101
EP 122
DI 10.1016/j.infsof.2017.01.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ES9DB
UT WOS:000399855200007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Belle, AB
   El Boussaidi, G
   Kpodjedo, S
AF Belle, Alvine Boaye
   El Boussaidi, Ghizlane
   Kpodjedo, Segla
TI Combining lexical and structural information to reconstruct software
   layers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Reverse engineering; Architecture recovery;
   Layering style; Hill climbing; Latent Dirichlet Allocation
ID ARCHITECTURE
AB Context: The architectures of existing software systems generally lack documentation or have often drifted from their initial design due to repetitive maintenance operations. To evolve such systems, it is mandatory to reconstruct and document their architectures. Many approaches were proposed to support the architecture recovery process but few of these consider the architectural style of the system under analysis. Moreover, most of existing approaches rely on structural dependencies between entities of the system and do not exploit the semantic information hidden in the source code of these entities.
   Objective: We propose an approach that exploits both linguistic and structural information to recover the software architecture of Object Oriented (OO) systems. The focus of this paper is the recovery of architectures that comply with the layered style, which is widely used in software systems.
   Method: In this work, we (i) recover the responsibilities of the system under study and (ii) assign these responsibilities to different abstraction layers. To do so, we use the linguistic information extracted from the source code to recover clusters corresponding to the responsibilities of the system. Then we assign these clusters to layers using the system's structural information and the layered style constraints. We formulate the recovery of the responsibilities and their assignment to layers as optimization problems that we solve using search-based algorithms.
   Results: To assess the effectiveness of our approach we conducted experiments on four open source systems. The so-obtained layering results yielded higher precision and recall than those generated using a structural-based layering approach.
   Conclusion: Our hybrid lexical-structural approach is effective and shows potential for significant improvement over techniques based only on structural information. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Belle, Alvine Boaye; El Boussaidi, Ghizlane; Kpodjedo, Segla] Ecole Technol Super, Dept Software & IT Engn, Montreal, PQ, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada
RP Belle, AB (corresponding author), Ecole Technol Super, Dept Software & IT Engn, Montreal, PQ, Canada.
EM ak20180@ens.etsmtl.ca; Ghizlane.ElBoussaidi@etsmtl.ca;
   Segla.Kpodjedo@etsmtl.ca
OI El Boussaidi, Ghizlane/0000-0001-6145-774X
CR Andreopoulos B, 2007, INFORM SOFTWARE TECH, V49, P244, DOI 10.1016/j.infsof.2006.10.010
   [Anonymous], 2007, Probabilistic Topic Models
   [Anonymous], P 15 ACM SIGKDD INT
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1999, MODERN INFORM RETRIE
   [Anonymous], IEEE TSE
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Barros MD, 2015, INFORM SOFTWARE TECH, V57, P684, DOI 10.1016/j.infsof.2014.07.015
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Belle Alvine Boaye, 2013, SEKE, V1, P344
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boaye B. A., 2014, P 9 INT C ENASE
   Boussaidi G. E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P345, DOI 10.1109/WCRE.2012.44
   Clements P., 2003, SEI S SOFTW
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Garcia Joshua., 2011, ASE
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Karafotias G, 2015, IEEE T EVOLUT COMPUT, V19, P167, DOI 10.1109/TEVC.2014.2308294
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lague B, 1998, PROG COMPREHEN, P37, DOI 10.1109/WPC.1998.693281
   Laval J, 2013, SCI COMPUT PROGRAM, V78, P1055, DOI 10.1016/j.scico.2012.08.001
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell BrianS., 2002, GECCO, V2, P1375
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Porter M.F., 1997, ALGORITHM SUFFIX STR
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Saeidi A. M., 2015, SEARCH BASED APPRAOC
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sangal N., 2005, J DEFENSE SOFTWARE E, P8
   Sarkar S, 2009, J SYST SOFTWARE, V82, P1891, DOI 10.1016/j.jss.2009.06.039
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Scanniello G, 2010, SOFTWARE PRACT EXPER, V40, P897, DOI 10.1002/spe.988
   Schmidt F., 2012, P SERA 2011, P95
   Smith J.E., 2008, Self-adaptation in evolutionary algorithms for combinatorial optimisation Adaptive and Multilevel Metaheuristics, P31
   Sora I., 2010, ICCC CONTI 2010
   Szyperski Clemens., 1998, COMPONENT SOFTWARE
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
NR 47
TC 18
Z9 20
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 1
EP 16
DI 10.1016/j.infsof.2016.01.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000001
DA 2024-07-18
ER

PT J
AU Arvanitou, EM
   Ampatzoglou, A
   Chatzigeorgiou, A
   Avgeriou, P
AF Arvanitou, Elvira-Maria
   Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Avgeriou, Paris
TI Software metrics fluctuation: a property for assisting the metric
   selection process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented metrics; Fluctuation; Case study; Software evolution
ID OBJECT-ORIENTED SOFTWARE; EVOLUTION
AB Context: Software quality attributes are assessed by employing appropriate metrics. However, the choice of such metrics is not always obvious and is further complicated by the multitude of available metrics. To assist metrics selection, several properties have been proposed. However, although metrics are often used to assess successive software versions, there is no property that assesses their ability to capture structural changes along evolution.
   Objective: We introduce a property, Software Metric Fluctuation (SMF), which quantifies the degree to which a metric score varies, due to changes occurring between successive system's versions. Regarding SMF, metrics can be characterized as sensitive (changes induce high variation on the metric score) or stable (changes induce low variation on the metric score).
   Method: SMF property has been evaluated by: (a) a case study on 20 OSS projects to assess the ability of SMF to differently characterize different metrics, and (b) a case study on 10 software engineers to assess SMF's usefulness in the metric selection process.
   Results: The results of the first case study suggest that different metrics that quantify the same quality attributes present differences in their fluctuation. We also provide evidence that an additional factor that is related to metrics' fluctuation is the function that is used for aggregating metric from the micro to the macro level. In addition, the outcome of the second case study suggested that SMF is capable of helping practitioners in metric selection, since: (a) different practitioners have different perception of metric fluctuation, and (b) this perception is less accurate than the systematic approach that SMF offers.
   Conclusions: SMF is a useful metric property that can improve the accuracy of metrics selection. Based on SMF, we can differentiate metrics, based on their degree of fluctuation. Such results can provide input to researchers and practitioners in their metric selection processes. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Arvanitou, Elvira-Maria; Ampatzoglou, Apostolos; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Zernike Campus, Groningen, Netherlands.
   [Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Groningen; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Groningen, Dept Math & Comp Sci, Zernike Campus, Groningen, Netherlands.
EM e.m.arvanitou@rug.nl; apostolos.ampatzoglou@gmail.com; achat@uom.gr;
   paris@cs.rug.nl
RI Ampatzoglou, Apostolos/AAC-3632-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754
CR Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J., 2012, T SOFTW ENG METHODOL, V21
   Ampatzoglou Apostolos, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P255, DOI 10.1109/ESEM.2013.48
   Ampatzoglou A, 2013, ENTERTAIN COMPUT, V4, P131, DOI 10.1016/j.entcom.2012.10.002
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2006, Automatic Autocorrelation and Spectral Analysis
   [Anonymous], 1998, 10611998 IEEE, P31
   [Anonymous], 2008, AGGREGATION FUNCTION
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Campbell M. J., 2009, STAT SQUARE ONE, V11th
   Chatzigeorgiou A, 2013, J SOFTW-EVOL PROC, V25, P303, DOI 10.1002/smr.584
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Cichosz P., 2015, DATA MINING ALGORITH
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Field A., 2013, Discovering statistics using IBM SPSS statistics, V4th, P591
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Geetika Rani, 2014, ACM SIGSOFT Software Engineering Notes, V39, P1, DOI [10.1145/2557833.2557847, DOI 10.1145/2557833.2557847]
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Gómez O, 2008, COMM COM INF SC, V10, P165
   Griffith I., 2014, 8 INT S EMP SOFTW EN
   Hull J.C., 2015, OPTIONS FUTURES OTHE
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Marg L., 2014, 1 WORKSH AUT MAN MET
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Serebrenik Alexander., 2010, P 26 IEEE INT C SOFT, P1
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 36
TC 20
Z9 20
U1 1
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 110
EP 124
DI 10.1016/j.infsof.2015.12.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500007
OA Green Published
DA 2024-07-18
ER

PT J
AU Elish, MO
   Mohammed, MA
AF Elish, Mahmoud O.
   Mohammed, Mawal A.
TI Quantitative analysis of fault density in design patterns: An empirical
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design patterns; Software quality; Fault density; Quantitative analysis
ID REPLICATION
AB Context: There are many claimed advantages for the use of design patterns and their impact on software quality. However, there is no enough empirical evidence that supports these claimed benefits and some studies have found contrary results.
   Objective: This empirical study aims to quantitatively measure and compare the fault density of motifs of design patterns in object-oriented systems at different levels: design level, category level, motif level, and role level.
   Method: An empirical study was conducted that involved five open-source software systems. Data were analyzed using appropriate statistical test of significance differences.
   Results: There is no consistent difference in fault density between classes that participate in design motifs and non-participant classes. However, classes that participate in structural design motifs tend to be less fault-dense. For creational design motifs, it was found that there is no clear tendency for the difference in fault density. For behavioral design motifs, it was found that there is no significant difference between participant classes and non-participant classes. We observed associations between five design motifs (Builder, Factory Method, Adapter, Composite and Decorator) and fault density. At the role level, we found that only one pair of roles (Adapter vs. Client) shows a significant difference in fault density.
   Conclusion: There is no clear tendency for the difference in fault density between participant and non-participant classes in design motifs. However, structural design motifs have a negative association with fault density. The Builder design motif has a positive association with fault density whilst the Factory Method, Adapter, Composite, and Decorator design motifs have negative associations with fault density. Classes that participate in the Adapter role are less dense in faults than classes that participate in the Client role. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Elish, Mahmoud O.; Mohammed, Mawal A.] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Elish, MO (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
EM elish@kfupm.edu.sa; mawal.mohammed@yahoo.com
RI Mohammed, Mawal/IAO-6654-2023; Elish, Mahmoud/I-8178-2018
OI Elish, Mahmoud/0000-0002-2767-0501; Moahmmed, Mawal/0000-0003-4419-1454
FU Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals (KFUPM) [IN121056]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals (KFUPM) under Research Grant IN121056. We sincerely thank the
   anonymous reviewers for their insightful comments and suggestions, which
   have substantially improved the paper.
CR Afacan T., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P67, DOI 10.1109/SIES.2011.5953682
   Ali M., 2013, 2013 15 EUROPEAN C P, P1, DOI DOI 10.1109/EPE.2013.6634697
   Ampatzoglou A., 2011, P 15 INT AC MINDTREK
   [Anonymous], P 1 ECOOP WORKSH BUI
   Aversano L., 2007, P 6 JOINT M EUR SOFT
   Bernardi ML, 2013, WORK CONF REVERSE EN, P172, DOI 10.1109/WCRE.2013.6671292
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bunse C., 2013, 2 WORKSH EN AW SOFTW
   Chen K, 2004, EMPIR SOFTW ENG, V9, P197, DOI 10.1023/B:EMSE.0000027779.70556.d0
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dietrich J, 2007, J WEB SEMANT, V5, P108, DOI 10.1016/j.websem.2006.11.007
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fontana FA, 2011, J SYST SOFTWARE, V84, P2334, DOI 10.1016/j.jss.2011.07.006
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garzás J, 2009, J COMPUT SCI TECH-CH, V24, P262, DOI 10.1007/s11390-009-9222-7
   Gatrell M, 2009, WORK CONF REVERSE EN, P160, DOI 10.1109/WCRE.2009.31
   Gatrell M., 2011, Research Challenges in Information Science (RCIS), 2011 Fifth International Conference on, P1, DOI DOI 10.1109/RCIS.2011.6006827
   Gueheneuc Y.G., 2007, P 1 EUROPLOP FOC GRO
   Gueheneuc Y.-G., 2007, OBJECT ORIENTED DESI, P105
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2010, SOFTWARE QUAL J, V18, P145, DOI 10.1007/s11219-009-9082-y
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   Hegedus P, 2012, COMM COM INF SC, V340, P138
   Juristo N., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P7, DOI 10.1109/RESER.2011.8
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krein J. L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P25, DOI 10.1109/RESER.2011.10
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Litke A., 2005, Proceedings of the International Conference on Machine Learning and Software Engineering, P86
   Mann H. B., 2000, TEST WHETHER ONE 2 R
   Nanthaamomphong A., 2011, 2 INT WORKSH REPL EM, P15
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Posnett D, 2011, EMPIR SOFTW ENG, V16, P396, DOI 10.1007/s10664-010-9148-2
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P1, DOI 10.1109/RESER.2011.12
   Rudzki J, 2005, P 4 INT C SCI ENG DI
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Smith JasonMcC., 2003, SPQR FLEXIBLE AUTOMA, P215
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Zhang C, 2013, INFORM SOFTWARE TECH, V55, P822, DOI 10.1016/j.infsof.2012.11.003
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 50
TC 11
Z9 13
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 58
EP 72
DI 10.1016/j.infsof.2015.05.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OG
UT WOS:000358699900005
DA 2024-07-18
ER

PT J
AU Licorish, SA
   MacDonell, SG
AF Licorish, Sherlock A.
   MacDonell, Stephen G.
TI Communication and personality profiles of global software developers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human factors; Communication; Personality; SNA; Data mining;
   Psycholinguistics
ID VIRTUAL TEAMS; NETWORKS; AGILE; LEADERSHIP; DIVERSITY; PATTERNS;
   PROJECTS; IMPACT; ROLES
AB Context: Prior research has established that a small proportion of individuals dominate team communication during global software development. It is not known, however, how these members' contributions affect their teams' knowledge diffusion process, or whether their personality profiles are responsible for their dominant presence.
   Objective: We set out to address this gap through the study of repository artifacts.
   Method: Artifacts from ten teams were mined from the IBM Rational Jazz repository. We employed social network analysis (SNA) to group practitioners into two clusters, Top Members and Others, based on the numbers of messages they communicated and their engagement in task changes. SNA metrics (density, in-degree and closeness) were then used to study practitioners' importance in knowledge diffusion. Thereafter, we performed psycholinguistic analysis on practitioners' messages using linguistic dimensions that had been previously correlated with the Big Five personality profiles.
   Results: For our sample of 146 practitioners we found that Top Members occupied critical roles in knowledge diffusion, and demonstrated more openness to experience than the Others. Additionally, all personality profiles were represented during teamwork, although openness to experience, agreeableness and extroversion were particularly evident. However, no specific personality predicted members' involvement in knowledge diffusion.
   Conclusion: Task assignment that promotes highly connected team communication networks may mitigate tacit knowledge loss in global software teams. Additionally, while members expressing openness to experience are likely to be particularly driven to perform, this is not entirely responsible for a global team's success. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Licorish, Sherlock A.; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, Dunedin 9054, New Zealand.
C3 University of Otago
RP MacDonell, SG (corresponding author), Univ Otago, Dept Informat Sci, POB 56, Dunedin 9054, New Zealand.
EM sherlock.licorish@otago.ac.nz; stephen.macdonell@otago.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941
FU AUT University
FX We thank IBM for granting us access to the Jazz repository. Thanks also
   to the EASE'14 reviewers for their detailed and insightful comments on
   the shorter version of this work that considered the treatment of team
   personality. S. Licorish largely carried out the research underpinning
   this paper while supported by an AUT University Vice-Chancellor's
   Doctoral Scholarship Award.
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Adams SL, 2010, PROJ MANAG J, V41, P89, DOI 10.1002/pmj.20192
   Al-Ani B, 2011, LEADERSHIP-LONDON, V7, P219, DOI 10.1177/1742715011407382
   Amin A., 2004, ARCHITECTURES KNOWLE, P200
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, DOI DOI 10.1145/1321211.1321221
   [Anonymous], 2002, Research in the Schools
   [Anonymous], 1986, HDB ORG BEHAV
   [Anonymous], 2013, SCH COMPUTER MATH SC
   [Anonymous], 1990, PERSONALITY ADULTHOO
   [Anonymous], 2014, COLLECTED WORKS VOL
   [Anonymous], 2013, P 17 INT C EVALUATIO
   [Anonymous], P INT C INF SYST ICI
   [Anonymous], 1981, Review of personality and social psychology, DOI DOI 10.1037/0022-3514.59.6.1216
   [Anonymous], 2014, 18 INT C EVALUATION
   [Anonymous], 1985, MANUAL GUIDE DEV USE
   [Anonymous], 1997, Personality: Theory and research
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Aral S, 2011, IEEE INTELL SYST, V26, P91, DOI 10.1109/MIS.2011.89
   Argote L, 2000, ORGAN BEHAV HUM DEC, V82, P150, DOI 10.1006/obhd.2000.2893
   Bavelas Alex, 1950, J ACOUST SOC AM, V22, P725, DOI [10. 1121/1.1906679, DOI 10.1121/1.1906679, 10.1121/1.1906679]
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Benne KD, 1948, J SOC ISSUES, V4, P41, DOI 10.1111/j.1540-4560.1948.tb01783.x
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Blaskovich Jennifer L., 2008, Journal of Information Systems, V22, P27, DOI 10.2308/jis.2008.22.1.27
   Blumberg M., 1982, ACAD MANAGE REV, V7, P560, DOI [10.5465/amr.1982.4285240, DOI 10.5465/AMR.1982.4285240]
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B., 2003, BALANCING AGILITY DI
   Burt R., 1992, STRUCTURAL HOLES
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P3081, DOI DOI 10.1145/2207676.2208722
   Cattell RB, 1957, PERSONALITY MOTIVATI
   Chang KC, 2013, INT J PROJ MANAG, V31, P252, DOI 10.1016/j.ijproman.2012.06.005
   Chao-Chih H., 2009, INT C ADV SOC NETW A
   Choi KS, 2008, INFORM SOFTWARE TECH, V50, P1114, DOI 10.1016/j.infsof.2007.11.002
   Colomo-Palacios R., 2010, COMMUN COMPUT INFORM, P1, DOI DOI 10.1007/978-3-642-16318-0_1
   Costa JMR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3151
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Datta S., 2010, P 3 IND SOFTW ENG C, P33
   de Laat M, 2007, INT J COMP-SUPP COLL, V2, P87, DOI 10.1007/s11412-007-9006-4
   de Souza CRB, 2009, COMPUT SUPP COOP W J, V18, P445, DOI 10.1007/s10606-009-9101-3
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dekker A., 2001, CONNECTIONS OFFICIAL, V24, P93
   Denning P.J., 2010, THE INNOVATORS WAY
   Denning PJ, 2012, COMMUN ACM, V55, P33, DOI 10.1145/2380656.2380668
   Downey J, 2009, INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND EDUCATION, VOLS 1AND 2, P447, DOI 10.1007/978-0-387-68772-8_34
   Dullemond K, 2009, INT CONF GLOBAL SOFT, P143, DOI 10.1109/ICGSE.2009.22
   Ehrlich K, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P149, DOI 10.1109/ICGSE.2006.261228
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   FREEMAN LC, 1980, SOC NETWORKS, V2, P119, DOI 10.1016/0378-8733(79)90002-9
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Geva, 2003, Journal of Asynchronous Learning Networks, V7, P1, DOI DOI 10.24059/OLJ.V7I3.1842
   Gill AJ, 2006, PERS INDIV DIFFER, V40, P497, DOI 10.1016/j.paid.2005.06.027
   Gill AJ, 2003, PROCEEDINGS OF THE TWENTY-FIFTH ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, PTS 1 AND 2, P456
   GOLDBERG LR, 1990, J PERS SOC PSYCHOL, V59, P1216, DOI 10.1037/0022-3514.59.6.1216
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Hackman J.R., 1975, Advances in experimental social psychology, V8, P47, DOI [DOI 10.1016/S0065-2601(08)60248-8, 10.1016/S0065-2601(08)60248-8]
   Hancock JT, 2001, COMMUN RES, V28, P325, DOI 10.1177/009365001028003004
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   HANNEMAN R. A., 2005, Introduction to social network methods
   Highsmith J., 2004, AGILE SOFTWARE DEV S, P277
   Hinds P., 2006, P 2006 20 ANN C COMP, P343
   Ivancevich J.M., 2001, ORG BEHAV MANAGEMENT, P695
   Jaanu T, 2012, INT SYMP EMP SOFTWAR, P231, DOI 10.1145/2372251.2372293
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Krebs SA, 2006, SMALL GR RES, V37, P721, DOI 10.1177/1046496406294886
   Kumar V., 2006, Introduction to Data Mining
   LEAVITT HJ, 1951, J ABNORM SOC PSYCH, V46, P38, DOI 10.1037/h0057189
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Li J, 2010, INT J HUM-COMPUT ST, V68, P589, DOI 10.1016/j.ijhcs.2010.04.001
   Licorish S. A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P83, DOI 10.1109/CHASE.2012.6223029
   Licorish S.A., 2013, 24 AUSTR C INF SYST
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Licorish Sherlock A., 2013, P C EV ASS SOFTW ENG, P228
   Lopez Jose., 2000, SOCIAL STRUCTURE
   Mairesse F., 2006, P HUM LANG TECHN C N, P85
   Mairesse F, 2007, J ARTIF INTELL RES, V30, P457, DOI 10.1613/jair.2349
   MCCROSKEY JC, 1976, HUMAN COMMUNICATION, V2, P376, DOI DOI 10.1111/J.1468-2958.1976.TB00498.X
   McDonald S., 2007, Communications of the ACM, V50, P66, DOI 10.1145/1188913.1188919
   Mendieta Jorge Gil, 1997, Connections, V20, P34
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Oberlander Jon, 2019, P 24 ANN C COGN SCI, P363, DOI DOI 10.4324/9781315782379-99
   Oh H, 2006, ACAD MANAGE REV, V31, P569, DOI 10.2307/20159229
   Pennebaker JW, 1999, J PERS SOC PSYCHOL, V77, P1296, DOI 10.1037/0022-3514.77.6.1296
   Polzehl T, 2010, IEEE INT C SEMANT CO, P134, DOI 10.1109/ICSC.2010.41
   Prabhala S., 2005, IIE ANN C EXP 2005 I
   Reagans R, 2001, ORGAN SCI, V12, P502, DOI 10.1287/orsc.12.4.502.10637
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Sach R, 2011, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/ESEM.2011.50
   Serce F.C., 2009, PROCEEDINGS OF THE F
   Shihab E, 2010, LECT NOTES ARTIF INT, V6284, P91
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Sowe SK, 2008, J SYST SOFTWARE, V81, P431, DOI 10.1016/j.jss.2007.03.086
   Thompson G, 2003, MARKETS HIERARCHIES
   Trimmer KJ, 2002, J COMPUT INFORM SYST, V42, P7
   Wang Y., 2009, P 2009 3 INT S EMP S
   Wasserman S., 1997, SOCIAL NETWORK ANAL
   Willging P. A., 2005, US CHINA ED REV, V2, P46
   Williams Laurie A., 2003, Pair programming illuminated
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Yu LG, 2011, LECT NOTES COMPUT SC, V7046, P218
   Zhong XP, 2012, INT J INFORM MANAGE, V32, P209, DOI 10.1016/j.ijinfomgt.2011.11.001
   Zhou L, 2004, COMPUT HUM BEHAV, V20, P381, DOI 10.1016/S0747-5632(03)00051-7
   Zigurs I, 2003, ORGAN DYN, V31, P339, DOI 10.1016/S0090-2616(02)00132-8
   [No title captured]
   [No title captured]
NR 117
TC 28
Z9 34
U1 1
U2 63
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 113
EP 131
DI 10.1016/j.infsof.2015.02.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CJ3EB
UT WOS:000355365100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nie, CH
   Wu, HY
   Niu, XT
   Kuo, FC
   Leung, H
   Colbourn, CJ
AF Nie, Changhai
   Wu, Huayao
   Niu, Xintao
   Kuo, Fei-Ching
   Leung, Hareton
   Colbourn, Charles J.
TI Combinatorial testing, random testing, and adaptive random testing for
   detecting interaction triggered failures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Random Testing (RT); Adaptive Random Testing (ART);
   Combinatorial Testing (CT); Interaction Triggered Failure (ITF); Minimal
   Failure-causing Schema (MFS)
ID DESIGN
AB Context: Software behavior depends on many factors, and some failures occur only when certain factors interact. This is known as an interaction triggered failure, and the corresponding selection of factor values can be modeled as a Minimal Failure-causing Schema (MFS). (An MFS involving m factors is an m-MFS.) Combinatorial Testing (CT) has been developed to exercise ("hit") all MFS with few tests. Adaptive Random Resting (ART) endeavors to make tests as different as possible, ensuring that testing of MFS is not unnecessarily repeated. Random Testing (RT) chooses tests at random without regard to the MFS already treated. Cl' might be expected to improve on RT for finding interaction triggered faults, and yet some studies report no significant difference. CT can also be expected to be better than ART, and yet other studies report that ART can be much better than RT. In light of these, the relative merits of CT, ART, and RT for finding interaction triggered faults are unclear.
   Objective: To investigate the relationships among CT, ART, and RT, we conduct the first complete and systematic comparison for the purpose of hitting MFS.
   Method: A systematic review of six aspects of CT, RT and ART is conducted first. Then two kinds of experiments are used to compare them under four metrics.
   Results: ART improves upon RT, but t-way CT is better than both. In hitting t'-MFS the advantage is typically in the range from 10% to 30% when t = t', but becomes much smaller when t' < t, and there may be no advantage when t' > t. The latter case may explain the studies reporting no significant difference between RT and CT.
   Conclusion: RT is easily implemented. However, depending on its implementation, ART can improve upon RT. Cl' does as well as ART whether or nott' = t, but provides a valuable improvement in the cases when t' = t. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Nie, Changhai; Wu, Huayao; Niu, Xintao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Kuo, Fei-Ching] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Colbourn, Charles J.] Arizona State Univ, Tempe, AZ USA.
C3 Nanjing University; Swinburne University of Technology; Hong Kong
   Polytechnic University; Arizona State University; Arizona State
   University-Tempe
RP Nie, CH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
EM changhainie@nju.edu.cn
RI Nie, Changhai/IWM-7504-2023
FU National Natural Science Foundation of China [61272079]; Research Fund
   for the Doctoral Program of Higher Education of China [20130091110032];
   Science Fund for Creative Research Groups of the National Natural
   Science Foundation of China [61321491]; Major Program of National
   Natural Science Foundation of China [91318301]
FX This work was supported by the National Natural Science Foundation of
   China (No. 61272079), the Research Fund for the Doctoral Program of
   Higher Education of China (No. 20130091110032), the Science Fund for
   Creative Research Groups of the National Natural Science Foundation of
   China (No. 61321491), and the Major Program of National Natural Science
   Foundation of China (No. 91318301).
CR [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri Andrea., 2011, ISSTA
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan KP, 2004, LECT NOTES COMPUT SC, V3063, P200
   Chen T.Y., 2009, P 2009 ACM S APPL CO, P422
   Chen TY, 2008, J SYST SOFTWARE, V81, P2146, DOI 10.1016/j.jss.2008.03.062
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Dalal SR, 1998, TECHNOMETRICS, V40, P234, DOI 10.2307/1271179
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Ellims M, 2008, LECT NOTES COMPUT SC, V5219, P16, DOI 10.1007/978-3-540-87698-4_5
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   Hamlet D., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P206, DOI 10.1109/WST.1988.5376
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Kobayashi N, 2002, INFORM SOFTWARE TECH, V44, P113, DOI 10.1016/S0950-5849(01)00222-1
   Kuhn D.R., 2009, P MODSIM WORLD, P83
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuo F.-C., 2007, P 19 INT C SOFTW ENG, P135
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Myers G.J., 2004, ART SOFTWARE TESTING, P3
   Nair VN, 1998, STAT SINICA, V8, P165
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parizi Reza Meimandi., 2009, International Journal of Software Engineering and its Applications, V3, P1
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Salem A.M., 2001, THESIS FLORIDA I TEC
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Thayer ThomasA ., 1978, SOFTWARE RELIABILITY
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Zhi Quan Zhou, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P208, DOI 10.1109/COMPSACW.2010.43
   Zhou B, 2010, LECT NOTES COMPUT SC, V6059, P447, DOI 10.1007/978-3-642-13577-4_40
NR 43
TC 28
Z9 30
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 198
EP 213
DI 10.1016/j.infsof.2015.02.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000011
DA 2024-07-18
ER

PT J
AU Xia, X
   Lo, D
   Shihab, E
   Wang, XY
   Yang, XH
AF Xia, Xin
   Lo, David
   Shihab, Emad
   Wang, Xinyu
   Yang, Xiaohu
TI ELBlocker: Predicting blocking bugs with ensemble imbalance learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Blocking bug; Ensemble learning; Imbalance learning
AB Context: Blocking bugs are bugs that prevent other bugs from being fixed. Previous studies show that blocking bugs take approximately two to three times longer to be fixed compared to non-blocking bugs.
   Objective: Thus, automatically predicting blocking bugs early on so that developers are aware of them, can help reduce the impact of or avoid blocking bugs. However, a major challenge when predicting blocking bugs is that only a small proportion of bugs are blocking bugs, i.e., there is an unequal distribution between blocking and non-blocking bugs. For example, in Eclipse and OpenOffice, only 2.8% and 3.0% bugs are blocking bugs, respectively. We refer to this as the class imbalance phenomenon.
   Method: In this paper, we propose ELBlocker to identify blocking bugs given a training data. ELBlocker first randomly divides the training data into multiple disjoint sets, and for each disjoint set, it builds a classifier. Next, it combines these multiple classifiers, and automatically determines an appropriate imbalance decision boundary to differentiate blocking bugs from non-blocking bugs. With the imbalance decision boundary, a bug report will be classified to be a blocking bug when its likelihood score is larger than the decision boundary, even if its likelihood score is low.
   Results: To examine the benefits of ELBlocker, we perform experiments on 6 large open source projects namely Freedesktop, Chromium, Mozilla, Netbeans, OpenOffice, and Eclipse containing a total of 402,962 bugs. We find that ELBlocker achieves F1 and EffectivenessRatio@20% scores of up to 0.482 and 0.831, respectively. On average across the 6 projects, ELBlocker improves the F1 and EffectivenessRatio@20% scores over the state-of-the-art method proposed by Garcia and Shihab by 14.69% and 8.99%, respectively. Statistical tests show that the improvements are significant and the effect sizes are large.
   Conclusion: ELBlocker can help deal with the class imbalance phenomenon and improve the prediction of blocking bugs. ELBlocker achieves a substantial and statistically significant improvement over the state-of-the-art methods, i.e., Garcia and Shihab's method, SMOTE, OSS, and Bagging. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Xia, Xin; Wang, Xinyu; Yang, Xiaohu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310003, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Zhejiang University; Singapore Management University; Concordia
   University - Canada
RP Wang, XY (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310003, Zhejiang, Peoples R China.
EM xxkidd@zju.edu.cn; davidlo@smu.edu.sg; eshihab@cse.concordia.ca;
   wangxinyu@zju.edu.cn; yangxh@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Basic Research Program of China (the 973 Program)
   [2015CB352201]; National Key Technology R&D Program of the Ministry of
   Science and Technology of China [2014BAH24F02]; Fundamental Research
   Funds for the Central Universities
FX This research was supported by the National Basic Research Program of
   China (the 973 Program) under Grant 2015CB352201, and National Key
   Technology R&D Program of the Ministry of Science and Technology of
   China under Grant 2014BAH24F02, and the Fundamental Research Funds for
   the Central Universities.
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], AUTOMATED SOFTWARE E
   [Anonymous], EUSAR 2014 10 EUR C
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Barandela R, 2004, LECT NOTES COMPUT SC, V3138, P806
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Garcia H.V., 2014, P 11 INT WORKSH MIN
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kubat M., 1997, ICML, P179
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tassey Gregory., EC IMPACTS INADEQUAT
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P134, DOI 10.1109/CSMR-WCRE.2014.6747163
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 45
TC 70
Z9 73
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 93
EP 106
DI 10.1016/j.infsof.2014.12.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400006
DA 2024-07-18
ER

PT J
AU Chatzipetrou, P
   Papatheocharous, E
   Angelis, L
   Andreou, AS
AF Chatzipetrou, Panagiota
   Papatheocharous, Efi
   Angelis, Lefteris
   Andreou, Andreas S.
TI A multivariate statistical framework for the analysis of software effort
   phase distribution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort distribution; Phased effort analysis; Compositional data
   analysis; Biplot; Cluster analysis
ID COMPOSITIONAL DATA SETS; ZEROS
AB Context: In software project management, the distribution of resources to various project activities is one of the most challenging problems since it affects team productivity, product quality and project constraints related to budget and scheduling.
   Objective: The study aims to (a) reveal the high complexity of modelling the effort usage proportion in different phases as well as the divergence from various rules-of-thumb in related literature, and (b) present a systematic data analysis framework, able to offer better interpretations and visualisation of the effort distributed in specific phases.
   Method: The basis for the proposed multivariate statistical framework is Compositional Data Analysis, a methodology appropriate for proportions, along with other methods like the deviation from rules-of-thumb, the cluster analysis and the analysis of variance. The effort allocations to phases, as reported in around 1500 software projects of the ISBSG R11 repository, were transformed to vectors of proportions of the total effort and were analysed with respect to prime project attributes.
   Results: The proposed statistical framework was able to detect high dispersion among data, distribution inequality and various interesting correlations and trends, groupings and outliers, especially with respect to other categorical and continuous project attributes. Only a very small number of projects were found close to the rules-of-thumb from the related literature. Significant differences in the proportion of effort spent in different phrases for different types of projects were found.
   Conclusion: There is no simple model for the effort allocated to phases of software projects. The data from previous projects can provide valuable information regarding the distribution of the effort for various types of projects, through analysis with multivariate statistical methodologies. The proposed statistical framework is generic and can be easily applied in a similar sense to any dataset containing effort allocation to phases. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Chatzipetrou, Panagiota; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
   [Papatheocharous, Efi] Univ Cyprus, Dept Comp Sci, CY-1678 Nicosia, Cyprus.
   [Papatheocharous, Efi] Swedish Inst Comp Sci, SE-16429 Stockholm, Sweden.
   [Andreou, Andreas S.] Cyprus Univ Technol, Dept Comp Engn & Informat, Limassol, Cyprus.
C3 Aristotle University of Thessaloniki; University of Cyprus; Cyprus
   University of Technology
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
EM pchatzip@csd.auth.gr; efi.papatheochar-ous@cs.ucy.ac.cy;
   lef@csd.auth.gr; andreas.andreou@cut.ac.cy
OI ANDREOU, ANDREAS/0000-0001-7104-2097; Chatzipetrou,
   Panagiota/0000-0002-0311-1502
FU European Union Seventh Framework Programme (FP7) [246016]
FX We wish to thank the anonymous reviewers for their constructive comments
   which helped us to improve significantly the quality of this paper. The
   work of Dr. Papatheocharous was carried out partly during the tenure of
   an ERCIM "Alain Bensoussan" Fellowship Programme and the research has
   received funding from the European Union Seventh Framework Programme
   (FP7/2007-2013) under grant agreement no 246016.
CR ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A., The COSMIC functional size measurement method version 5.0, Online
   Agresti A, 2002, CATEGORICAL DATA ANA
   Aitchison J., 2003, LAB STAT GEOINFORMAT
   Aitchison J, 2005, 2 COMP DAT AN WORKSH
   Ambler S., 2005, A Manager's Introduction to The Rational Unified Process (RUP)
   [Anonymous], 4 INT WORKSH COMP DA
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], P SOFTAIR C SOFTW DE
   [Anonymous], 2003, STAT ANAL COMPOSITIO
   [Anonymous], IBM SPSS STAT REL 2
   [Anonymous], FUNCT POINT COUNT PR
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Boehm BW., 1981, Software Engineering Economics
   Chatzipetrou P, 2012, EUROMICRO CONF PROC, P367, DOI 10.1109/SEAA.2012.50
   Chatzipetrou P, 2010, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2010.35
   Dery D., 2005, P 15 INT WORKSH SOFT, P123
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fernández-Diego M, 2014, INFORM SOFTWARE TECH, V56, P527, DOI 10.1016/j.infsof.2014.01.003
   Filzmoser P, 2009, MATH GEOSCI, V41, P905, DOI 10.1007/s11004-008-9196-y
   Gabriel K.R., 1981, INTERPRETING MULTIVA, P147
   GABRIEL KR, 1971, BIOMETRIKA, V58, P453, DOI 10.1093/biomet/58.3.453
   Greenacre M., 1982, TOPICS APPLIED MULTI, P183
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Heijstek W, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P266, DOI 10.1109/SEAA.2008.43
   Jeris C, 2001, P 7 ACM SIGKDD INT C, P263, DOI [10.1145/502512.502549, DOI 10.1145/502512.502549]
   Jiang Z., 2007, INT J COMPUTER INFOR, V1, P230
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   MacDonell SG, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P73, DOI 10.1109/METRIC.2003.1232457
   Martin-Fernandez J. A., 2003, P COMP DAT AN WORKSH
   Martín-Fernández JA, 2003, MATH GEOL, V35, P253, DOI 10.1023/A:1023866030544
   Martín-Fernández JA, 2000, ST CLASS DAT ANAL, P155
   Ohlsson M. C., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P91, DOI 10.1109/METRIC.1999.809730
   Palarea-Albaladejo J, 2007, MATH GEOL, V39, P625, DOI 10.1007/s11004-007-9100-1
   Port D., 2005, P 4 INT S EMP SOFTW, P422
   Pressman R S., 2001, Software engineering: a practitioner's approach', P466
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Schach S.R., 2007, Object-Oriented Classical Software Engineering, V7th
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sommerville I, 2010, INT COMPUTER SCI SER
   Tan T., 2012, THESIS U SO CALIFORN
   Thio-Henestrosa S., 2011, 4 INT WORKSH COMP DA
   Yang Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P61
   Yiftachel P., 2011, ADV SOFTWARE ENG, V6
   Yourdon E., 1992, Decline Fall of the American Programmer
   ZELKOWITZ MV, 1978, COMPUT SURV, V10, P197, DOI 10.1145/356725.356731
NR 48
TC 10
Z9 10
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 149
EP 169
DI 10.1016/j.infsof.2014.11.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200009
DA 2024-07-18
ER

PT J
AU Insa, D
   Silva, J
AF Insa, David
   Silva, Josep
TI Automatic transformation of iterative loops into recursive methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program transformation; Iteration; Recursion
ID LEADS
AB Context: In software engineering, taking a good election between recursion and iteration is essential because their efficiency and maintenance are different. In fact, developers often need to transform iteration into recursion (e.g., in debugging, to decompose the call graph into iterations); thus, it is quite surprising that there does not exist a public transformation from loops to recursion that can be used in industrial projects (i.e., it is automatic, it handles all kinds of loops, it considers exceptions, etc.).
   Objective: This article describes an industrial algorithm implemented as a Java library able to automatically transform iterative loops into equivalent recursive methods. The transformation is described for the programming language Java, but it is general enough as to be adapted to many other languages that allow iteration and recursion.
   Method: We describe the changes needed to transform loops of types while/do/for/foreach into recursion. We provide a transformation schema for each kind of loop.
   Results: Our algorithm is the first public transformation that can be used in industrial projects and faces the whole Java language (i.e., it is fully automatic, it handles all kinds of loops, it considers exceptions, it treats the control statements break and continue, it handles loop labels, it is able to transform any number of nested loops, etc.). This is particularly interesting because some of these features are missing in all previous work, probably, due to the complexity that their mixture introduce in the transformation.
   Conclusion: Developers should use a methodology when transforming code, specifically when transforming loops into recursion. This article provides guidelines and algorithms that allow them to face different problems such as exception handling. The implementation has been made publicly available as open source. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Insa, David; Silva, Josep] Univ Politecn Valencia, Dept Sistemes Informat & Computacio, E-46022 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Silva, J (corresponding author), Univ Politecn Valencia, Dept Sistemes Informat & Computacio, Camino de Vera S-N, E-46022 Valencia, Spain.
EM dinsa@dsic.upv.es; jsilva@dsic.upv.es
RI Silva, Josep/Q-4772-2019; Silva, José/KAM-3937-2024
OI Silva, Josep/0000-0001-5096-0008; 
FU EU (FEDER); Spanish Ministerio de Economia y Competitividad (Secretaria
   de Estado de Investigacion, Desarrollo e Innovacion)
   [TIN2013-44742-C4-1-R]; Generalitat Valenciana [PROMETEO/2011/052];
   Spanish Ministerio de Educacion [AP2010-4415]
FX This work has been partially supported by the EU (FEDER) and the Spanish
   Ministerio de Economia y Competitividad (Secretaria de Estado de
   Investigacion, Desarrollo e Innovacion) under Grant TIN2013-44742-C4-1-R
   and by the Generalitat Valenciana under Grant PROMETEO/2011/052. David
   Insa was partially supported by the Spanish Ministerio de Educacion
   under FPU Grant AP2010-4415.
CR [Anonymous], PEPM
   [Anonymous], 2010, 2010 IEEE INT C SOFT
   BAKER HG, 1996, Patent No. 5590332
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   Clinger WD, 1998, ACM SIGPLAN NOTICES, V33, P174, DOI 10.1145/277652.277719
   Elmroth E, 2000, IBM J RES DEV, V44, P605, DOI 10.1147/rd.444.0605
   Erascu M, 2011, INT SYMP SYMB NUMERI, P142, DOI 10.1109/SYNASC.2010.64
   Filinski A., 1994, LISP and Symbolic Computation, V7, P11, DOI 10.1007/BF01019943
   FONSECA A, 2012, AEMINIUM LOOPS2RECUR
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   GEUVERS H, 1992, P WORKSH TYP PROOFS, P193
   Gustavson FG, 1997, IBM J RES DEV, V41, P737, DOI 10.1147/rd.416.0737
   HANSON C, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P106, DOI 10.1145/91556.91603
   HARRISON PG, 1992, THEOR COMPUT SCI, V93, P91, DOI 10.1016/0304-3975(92)90213-Y
   INSA D, 2014, ABS14104956 CORR
   Insa D., 2012, LECT NOTES COMPUTER, V7844, P71
   Manolios P, 2003, J AUTOM REASONING, V31, P107, DOI 10.1023/B:JARS.0000009505.07087.34
   McCarthy John., 1962, IFIP C, P21
   Myreen MO, 2009, ELECTRON NOTES THEOR, V240, P185, DOI 10.1016/j.entcs.2009.05.052
   Yi Q, 2000, ACM SIGPLAN NOTICES, V35, P169, DOI 10.1145/358438.349323
NR 20
TC 8
Z9 8
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 95
EP 109
DI 10.1016/j.infsof.2014.10.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800006
OA Green Published
DA 2024-07-18
ER

PT J
AU Hermadi, I
   Lokan, C
   Sarker, R
AF Hermadi, I.
   Lokan, C.
   Sarker, R.
TI Dynamic stopping criteria for search-based test data generation for path
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Path testing; Evolutionary algorithm; Software reliability growth model
ID SOFTWARE TEST DATA
AB Context: Evolutionary algorithms have proved to be successful for generating test data for path coverage testing. However in this approach, the set of target paths to be covered may include some that are infeasible. It is impossible to find test data to cover those paths. Rather than searching indefinitely, or until a fixed limit of generations is reached, it would be desirable to stop searching as soon it seems likely that feasible paths have been covered and all remaining un-covered target paths are infeasible.
   Objective: The objective is to develop criteria to halt the evolutionary test data generation process as soon as it seems not worth continuing, without compromising testing confidence level.
   Method: Drawing on software reliability growth models as an analogy, this paper proposes and evaluates a method for determining when it is no longer worthwhile to continue searching for test data to cover uncovered target paths. We outline the method, its key parameters, and how it can be used as the basis for different decision rules for early termination of a search. Twenty-one test programs from the SBSE path testing literature are used to evaluate the method.
   Results: Compared to searching for a standard number of generations, an average of 30-75% of total computation was avoided in test programs with infeasible paths, and no feasible paths were missed due to early termination. The extra computation in programs with no infeasible paths was negligible.
   Conclusions: The method is effective and efficient. It avoids the need to specify a limit on the number of generations for searching. It can help to overcome problems caused by infeasible paths in search-based test data generation for path testing. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Hermadi, I.] Bogor Agr Univ, Dept Comp Sci, Bogor, Indonesia.
   [Hermadi, I.; Lokan, C.; Sarker, R.] UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT, Australia.
C3 Bogor Agricultural University; University of New South Wales Sydney
RP Hermadi, I (corresponding author), Bogor Agr Univ, Dept Comp Sci, Bogor, Indonesia.
EM i.hermadi@student.adfa.edu.au; c.lokan@adfa.edu.au; r.sarker@adfa.edu.au
RI Sarker, Ruhul A/B-5677-2012
OI Sarker, Ruhul A/0000-0002-1363-2774; Hermadi, Irman/0000-0001-6985-5275
FU Indonesia General Directorate of Higher Education (IGDHE) of the
   Ministry of National Education of the Republic of Indonesia; University
   of New South Wales Canberra (UNSW Canberra); Research Student Unit of
   the UNSW Canberra
FX Acknowledgments are due to the Indonesia General Directorate of Higher
   Education (IGDHE) of the Ministry of National Education of the Republic
   of Indonesia for providing a Ph.D. Scholarship, the University of New
   South Wales Canberra (UNSW Canberra) for providing a Completion
   Scholarship, and the Research Student Unit of the UNSW Canberra for
   supporting a Research Publication Fellowship.
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Alba E, 2008, COMPUT OPER RES, V35, P3161, DOI 10.1016/j.cor.2007.01.016
   [Anonymous], TR0903
   Arcuri A., 2010, IEEE T SOFTWARE ENG, V38, P497
   Blanco R, 2009, INFORM SOFTWARE TECH, V51, P708, DOI 10.1016/j.infsof.2008.11.001
   Bueno P.M.S., 2001, INT C SOFTW ENG KNOW, P2
   Bueno PMS, 2002, INT J SOFTW ENG KNOW, V12, P691, DOI 10.1142/S0218194002001074
   Bueno PMS, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/ASE.2000.873665
   Chen JCH, 2008, INT J TECHNOL MANAGE, V43, P1
   Fraser G., 2013, SBST WORKSH
   Gallagher MJ, 1997, IEEE T SOFTWARE ENG, V23, P473, DOI 10.1109/32.624304
   Girgis MR, 2005, J UNIVERS COMPUT SCI, V11, P898
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gong DW, 2011, J SYST SOFTWARE, V84, P2222, DOI 10.1016/j.jss.2011.06.028
   Gupta N., 1998, Software Engineering Notes, V23, P231, DOI 10.1145/291252.288321
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hermadi I., 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P241, DOI 10.1109/WCSE.2010.82
   Hermadi I, 2003, IEEE C EVOL COMPUTAT, P85, DOI 10.1109/CEC.2003.1299560
   Hermadi I., 2012, THESIS U NEW S WALES
   Hermadi I., 2004, THESIS FAHD U PETROL
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Li MQ, 2009, PROCEEDINGS OF 2009 INTERNATIONAL CONFERENCE OF NATURAL PRODUCT AND TRADITIONAL MEDICINE, VOLS 1 AND 2, P177
   Lin JC, 2000, PROCEEDINGS OF THE NINTH ASIAN TEST SYMPOSIUM (ATS 2000), P241, DOI 10.1109/ATS.2000.893632
   Lin JC, 2001, INFORM SCIENCES, V131, P47, DOI 10.1016/S0020-0255(00)00093-1
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P, 2006, INT S SOFTW TEST AN, P13, DOI DOI 10.1145/1146238.1146241
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Musa J. D., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P230
   Myers G. J., 1977, SIGPLAN Notices, V12, P61, DOI 10.1145/954627.954633
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Offutt A.J., 1994, ISSETR94105
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   PEI M, 1994, AUTOMATED SOFTWARE T
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   S. Artifact Infrastructure Repository (SIR), 2011, REP SOFTW REL ART ME
   Sagarna Ramon, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P232, DOI 10.1109/ICSTW.2008.19
   Wegener J, 2002, P INT COMP SOFTW APP, P287, DOI 10.1109/CMPSAC.2002.1044566
   Wegener J., 2002, P GENETIC EVOLUTIONA, P1233
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
   Yong Chen, 2009, 2009 Third International Symposium on Intelligent Information Technology Application, P216, DOI 10.1109/IITA.2009.232
NR 47
TC 21
Z9 29
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2014
VL 56
IS 4
BP 395
EP 407
DI 10.1016/j.infsof.2014.01.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD0DG
UT WOS:000332904000002
DA 2024-07-18
ER

PT J
AU Lara, JA
   Lizcano, D
   Martínez, MA
   Pazos, J
   Riera, T
AF Lara, Juan A.
   Lizcano, David
   Martinez, Maria A.
   Pazos, Juan
   Riera, Teresa
TI A UML profile for the conceptual modelling of structurally complex data:
   Easing human effort in the KDD process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE KDD; Data mining; Conceptual modelling; Structurally complex data; Time
   series; UML profiles
ID ENTITY-RELATIONSHIP MODEL; DATA WAREHOUSES; TIME-SERIES; SCHEMAS;
   DESIGN; METHODOLOGY
AB Context: Domains where data have a complex structure requiring new approaches for knowledge discovery from data are on the increase. In such domains, the information related to each object under analysis may be composed of a very broad set of interrelated data instead of being represented by a simple attribute table. This further complicates their analysis.
   Objective: It is becoming more and more necessary to model data before analysis in order to assure that they are properly understood, stored and later processed. On this ground, we have proposed a UML extension that is able to represent any set of structurally complex hierarchically ordered data. Conceptually modelled data are human comprehensible and constitute the starting point for automating other data analysis tasks, such as comparing items or generating reference models.
   Method: The proposed notation has been applied to structurally complex data from the stabilometry field. Stabilometry is a medical discipline concerned with human balance. We have organized the model data through an implementation based on XML syntax.
   Results: We have applied data mining techniques to the resulting structured data for knowledge discovery. The sound results of modelling a domain with such complex and wide-ranging data confirm the utility of the approach.
   Conclusion: The conceptual modelling and the analysis of non-conventional data are important challenges. We have proposed a UML profile that has been tested on data from a medical domain, obtaining very satisfactory results. The notation is useful for understanding domain data and automating knowledge discovery tasks. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Lara, Juan A.; Lizcano, David; Martinez, Maria A.] Open Univ Madrid, UDIMA, Fac Ensenanzas Tecn, Madrid 28400, Spain.
   [Pazos, Juan] Tech Univ Madrid, Sch Comp Sci, Madrid 28660, Spain.
   [Riera, Teresa] Univ Islas Baleares, Dept Matemat & Informat, Palma De Mallorca 07122, Spain.
C3 Universidad Politecnica de Madrid; Universitat de les Illes Balears
RP Lara, JA (corresponding author), Open Univ Madrid, UDIMA, Fac Ensenanzas Tecn, Ctra Coruna,Km 38-500,Via Serv 15, Madrid 28400, Spain.
EM juanalfonso.lara@udima.es
RI Lara Torralbo, Juan Alfonso/I-9196-2014; Lizcano, David/B-4518-2011;
   Martinez Rey, Maria Aurora/S-3210-2018
OI Lara Torralbo, Juan Alfonso/0000-0001-5131-8447; Lizcano,
   David/0000-0001-7928-5237; Martinez Rey, Maria
   Aurora/0000-0002-0036-1442
CR Agrawal R., P 20 INT C VERY LARG
   Alonso F, 2007, EXPERT SYSTEMS RES T, V3, P113
   [Anonymous], 1996, Advances in knowledge discovery & data mining
   [Anonymous], 2010, BCP SOFTWARE
   [Anonymous], PRED MOD MARK LANG P
   [Anonymous], 1973, The art of computer programming
   [Anonymous], 2009, P INT MULTICONFERENC
   Arimura H, 2002, LECT NOTES COMPUT SC, V2373, P17
   Bachman C.W., 1969, SIGMIS DATABASE, V1, P4, DOI 10.1145/1017466.1017467
   BARIGANT P, 1972, AGRESSOLOGIE, V13, P69
   BARON J B, 1964, Arch Mal Prof, V25, P41
   Barona R., 2003, INTERES CLIN SISTEMA
   Bayer R., 1972, Acta Informatica, V1, P173, DOI 10.1007/BF00288683
   Boniver R, 1994, Rev Med Liege, V49, P285
   Bruce T., 1992, DESIGNING QUALITY DA
   Chaovalitwongse W.A., 2007, IEEE T SYST MAN CY A, P1
   Chen S.-C., 2001, P 2 INT WORKSH MULT
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   CZEJDO B, 1990, COMPUTER, V23, P26, DOI 10.1109/2.50270
   Di Tria F, 2012, INFORM SOFTWARE TECH, V54, P360, DOI 10.1016/j.infsof.2011.11.004
   Domínguez E, 2011, INFORM SOFTWARE TECH, V53, P34, DOI 10.1016/j.infsof.2010.08.001
   Farré C, 2013, INFORM SOFTWARE TECH, V55, P1529, DOI 10.1016/j.infsof.2013.02.010
   Frohlich H., 2005, ICML, P225
   GOGOLLA M, 1991, ACM T DATABASE SYST, V16, P369, DOI 10.1145/111197.111200
   HALPIN T., 1998, HDB ARCHITECTURES IN, P81
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   Kamfonas M.J., 1992, RELATION J
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Krumbein T., 2003, RULE BASED GENERATIO
   Lara J.A., 2011, THESIS TU MADRID
   Lara JA, 2008, COMP MED SY, P293, DOI 10.1109/CBMS.2008.61
   Lara JA, 2010, FRONT ARTIF INTEL AP, V215, P1115, DOI 10.3233/978-1-60750-606-5-1115
   Lazaro M., 2005, MED CLIN BARCELONA
   Lee C.-H.L., IEEE T KNOWLEDGE DAT, V18
   Lehmann TM, 2005, COMPUT MED IMAG GRAP, V29, P143, DOI 10.1016/j.compmedimag.2004.09.010
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   MARKOWITZ VM, 1990, IEEE T SOFTWARE ENG, V16, P777, DOI 10.1109/32.57618
   Martin J., 1990, Information engineering, planning analysis: book 2
   Sanz EM, 2007, ACTA OTORRINOLAR ESP, V58, P296
   Mateen U., 2012, EMERGENT SEMANTIC PA, P1
   Microsoft, 2010, DEV MICR VIS SOL
   Muñoz L, 2010, INFORM SOFTWARE TECH, V52, P1188, DOI 10.1016/j.infsof.2010.06.003
   Neurocom&REG; International, 2004, BAL MAST OP MAN V8 2
   Nguyen D., 2005, J BONE MINERAL RES, V20
   Object Management Group O., 2003, COMM WAR MET CWM
   Object Management Group (OMG), 2010, UN MOD LANG
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Prat N, 2006, DECIS SUPPORT SYST, V42, P1449, DOI 10.1016/j.dss.2005.12.001
   RAIVA V, 2005, CHULA MED J, V49, P129
   Rama Lopez J, 2003, REV MED-U NAVARRA, V47, P21
   Reddy G., 2012, IOSR J COMPUTER ENG, V4, P37
   Rizzi S, 2003, LECT NOTES COMPUT SC, V2813, P77
   Rizzi S., 2004, PARMA
   Romberg MH., 1853, Manual of Nervous System Disease of Man, P395
   Ronda J M, 2002, Acta Otorrinolaringol Esp, V53, P252
   SANZ R, 2000, VERTERE, V25, P5
   Shirahama K., 2005, VIDEO DATA MINING MI, P598
   Sinaki M, 2005, MAYO CLIN PROC, V80, P849, DOI 10.4065/80.7.849
   Sohr K, 2012, INFORM SOFTWARE TECH, V54, P1396, DOI 10.1016/j.infsof.2012.06.008
   Song D., 2002, ANESTHESIA ANALGESIA
   STOCKWELL CW, 1981, OTOLARYNG HEAD NECK, V89, P333, DOI 10.1177/019459988108900237
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   TEOREY TJ, 1986, COMPUT SURV, V18, P197, DOI 10.1145/7474.7475
   The World Wide Web Consortium (W3C), XML PATH LANG XPATH
   Yin J., 2006, P 7 INT C PAR DISTR
   Zubcoff J, 2007, DATA KNOWL ENG, V63, P44, DOI 10.1016/j.datak.2006.10.007
   Zubcoff J, 2009, INFORM SOFTWARE TECH, V51, P977, DOI 10.1016/j.infsof.2008.09.006
NR 68
TC 4
Z9 6
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 335
EP 351
DI 10.1016/j.infsof.2013.11.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA8NU
UT WOS:000331353000005
DA 2024-07-18
ER

PT J
AU Novais, RL
   Torres, A
   Mendes, TS
   Mendonça, M
   Zazworka, N
AF Novais, Renato Lima
   Torres, Andre
   Mendes, Thiago Souto
   Mendonca, Manoel
   Zazworka, Nico
TI Software evolution visualization: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Software visualization; Software evolution
ID VISUAL APPROACH; METRICS SUITE; NAVIGATION
AB Background: Software evolution is an important topic in software engineering. It generally deals with large amounts of data, as one must look at whole project histories as opposed to their current snapshot. Software visualization is the field of software engineering that aims to help people to understand software through the use of visual resources. It can be effectively used to analyze and understand the large amount of data produced during software evolution.
   Objective: This study investigates Software Evolution Visualization (SEV) approaches, collecting evidence about how SEV research is structured, synthesizing current evidence on the goals of the proposed approaches and identifying key challenges for its use in practice.
   Methods: A mapping study was conducted to analyze how the SEV area is structured. Selected primary studies were classified and analyzed with respect to nine research questions.
   Results: SEV has been used for many different purposes, especially for change comprehension, change prediction and contribution analysis. The analysis identified gaps in the studies with respect to their goals, strategies and approaches. It also pointed out to a widespread lack of empirical studies in the area.
   Conclusion: Researchers have proposed many SEV approaches during the past years, but some have failed to clearly state their goals, tie them back to concrete problems, or formally validate their usefulness. The identified gaps indicate that there still are many opportunities to be explored in the area. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Novais, Renato Lima; Torres, Andre; Mendes, Thiago Souto; Mendonca, Manoel] Univ Fed Bahia, Dept Comp Sci, BR-41170290 Salvador, BA, Brazil.
   [Novais, Renato Lima; Mendes, Thiago Souto] Univ Fed Bahia, Dept Informat Technol, BR-41170290 Salvador, BA, Brazil.
C3 Universidade Federal da Bahia; Universidade Federal da Bahia
RP Novais, RL (corresponding author), Univ Fed Bahia, Dept Comp Sci, BR-41170290 Salvador, BA, Brazil.
EM renatoln@dcc.ufba.br; atorres@dcc.ufba.br; thiagomendes@dcc.ufba.br;
   mgmendonca@dcc.ufba.br; nzazworka@fc-md.umd.edu
RI Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665; Zazworka, Nico/0000-0001-6549-453X
FU PROCAD-NF [720/2010]; INES; CNPq [573964/2008-4]
FX This work has received full or partial funding from the following
   agencies and projects: for the authors Renato and Manoel PROCAD-NF
   (Grant 720/2010) and INES (www.ines.org.br) funded by CNPq (Grant
   573964/2008-4).
CR Alam S, 2009, LECT NOTES COMPUT SC, V5440, P167, DOI 10.1007/978-3-642-00437-7_7
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   [Anonymous], EASE 08
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Buckley J, 2009, COMPUTER, V42, P106, DOI 10.1109/MC.2009.127
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   CARNEIRO GD, 2009, 31 INT C SOFTW ENG C, P441
   CARNEIRO GD, 2008, P 4 ACM S SOFTW VIS, P201
   Carneiro GD, 2009, INT C PROGRAM COMPRE, P291, DOI 10.1109/ICPC.2009.5090063
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Draheim D, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P131, DOI 10.1109/IWPSE.2003.1231220
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   GIGER E, 2012, ACM IEEE INT S EMP S, P171
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Heer J, 2012, COMMUN ACM, V55, P45, DOI 10.1145/2133806.2133821
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Izurieta C., 2012, SOFTWARE QUALITY J
   Jahnke JH, 2002, PROG COMPREHEN, P187, DOI 10.1109/WPC.2002.1021340
   Johnson B., 1991, Proceedings Visualization '91 (Cat. No.91CH3046-0), P284, DOI 10.1109/VISUAL.1991.175815
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Keim DA, 1996, IEEE T KNOWL DATA EN, V8, P923, DOI 10.1109/69.553159
   Kitchenham B., 2007, Joint Report
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Maletic JI, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P32, DOI 10.1109/VISSOF.2002.1019792
   Mazza R., 2009, INTRO INFORM VISUALI
   Merkle B., 2010, PROC ACM INT C COMPA, P129, DOI [10.1145/1869542.1869563, DOI 10.1145/1869542.1869563]
   Novais R., 2012, SOFTW VIS WBVS 2012, P1
   Novais R.L., 2011, WBVS 11
   Novais R, 2012, PROC INT CONF SOFTW, P1044, DOI 10.1109/ICSE.2012.6227115
   Novais RL, 2012, LECT NOTES BUS INF P, V102, P241
   Olszak A, 2012, EUR CON SFTWR MTNCE, P171, DOI 10.1109/CSMR.2012.26
   Ribeiro M., P ACM INT C COMP OBJ, P11
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   TAMASSIA R, 1988, IEEE T SYST MAN CYB, V18, P61, DOI 10.1109/21.87055
   Telea A, 2002, PROG COMPREHEN, P3, DOI 10.1109/WPC.2002.1021303
   Voinea S.-L., 2007, THESIS TU EINDHOVEN
   Ware C., 2020, INFORM VISUALIZATION
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 49
TC 49
Z9 52
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1860
EP 1883
DI 10.1016/j.infsof.2013.05.008
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500002
DA 2024-07-18
ER

PT J
AU Meth, H
   Brhel, M
   Maedche, A
AF Meth, Hendrik
   Brhel, Manuel
   Maedche, Alexander
TI The state of the art in automated requirements elicitation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements Engineering; Requirements Elicitation; Automation;
   Requirements Reuse; Systematic Review
ID SOFTWARE; SUPPORT; CLASSIFICATION; DESIGN; REUSE; MODEL
AB Context: In large software development projects a huge number of unstructured text documents from various stakeholders becomes available and needs to be analyzed and transformed into structured requirements. This elicitation process is known to be time-consuming and error-prone when performed manually by a requirements engineer. Consequently, substantial research has been done to automate the process through a plethora of tools and technologies.
   Objective: This paper aims to capture the current state of automated requirements elicitation and derive future research directions by identifying gaps in the existing body of knowledge and through relating existing works to each other. More specifically, we are investigating the following research question: What is the state of the art in research covering tool support for automated requirements elicitation from natural language documents?
   Method: A systematic review of the literature in automated requirements elicitation is performed. Identified works are categorized using an analysis framework comprising tool categories, technological concepts and evaluation approaches. Furthermore, the identified papers are related to each other through citation analysis to trace the development of the research field.
   Results: We identified, categorized and related 36 relevant publications. Summarizing the observations we made, we propose future research to (I) investigate alternative elicitation paradigms going beyond a pure automation approach (2) compare the effects of different types of knowledge on elicitation results (3) apply comparative evaluation methods and multi-dimensional evaluation measures and (4) strive for a closer integration of research activities across the sub-fields of automatic requirements elicitation.
   Conclusion: Through the results of our paper, we intend to contribute to the Requirements Engineering body of knowledge by (1) conceptualizing an analysis framework for works in the area of automated requirements elicitation, going beyond former classifications (2) providing an extensive overview and categorization of existing works in this area (3) formulating concise directions for future research. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Meth, Hendrik; Maedche, Alexander] Univ Mannheim, Inst Enterprise Syst, D-68131 Mannheim, Germany.
   [Brhel, Manuel; Maedche, Alexander] Univ Mannheim, Chair Informat Syst 4, D-68131 Mannheim, Germany.
C3 University of Mannheim; University of Mannheim
RP Meth, H (corresponding author), Univ Mannheim, Inst Enterprise Syst, L 15,1-6, D-68131 Mannheim, Germany.
EM meth@es.uni-mannheim.de; mbrhel@mail.uni-mannheim.de;
   maedche@es.uni-mannheim.de
OI Maedche, Alexander/0000-0001-6546-4816
CR Alkhader Y., 2006, P INT C INF AUT ICIA, P349
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   Ankori R, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/SWSTE.2005.8
   [Anonymous], 1983, INTRO MODERN INFORM
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Berry D. M, 2001, INT WORKSH REQ ENG I INT WORKSH REQ ENG I
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Casamayor A, 2012, ARTIF INTELL REV, V38, P173, DOI 10.1007/s10462-011-9237-7
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Castro-Herrera Carlos., 2009, the Symposium on Applied Computing, SAC'09, P1419, DOI [10.1145/1529282.1529601, DOI 10.1145/1529282.1529601]
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cybulski JL, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P128, DOI 10.1109/APSEC.1998.733606
   Cybulski JL, 2000, LECT NOTES COMPUT SC, V1844, P190
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Fabbrini F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P97, DOI 10.1109/SEW.2001.992662
   Flores JJG, 2004, P 10 INT WORKSH REQ, P99
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gacitua R, 2011, REQUIR ENG, V16, P251, DOI 10.1007/s00766-011-0122-3
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Hayes J.H., 2005, MSR'05: Proceedings of the 2005 International Workshop on Mining Software Repositories, P1
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   John I, 2003, P 9 INT WORKSH REQ E, P17
   Kaindl H., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P399, DOI 10.1109/RE.2010.57
   Kaiya H, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P189
   Kiyavitskaya N, 2004, LECT NOTES COMPUT SC, V3136, P135
   Kiyavitskaya N, 2008, AUTOMAT SOFTW ENG, V15, P149, DOI 10.1007/s10515-008-0028-6
   Kof L., 2004, INT J COMPUTER SYSTE, V20, P37
   Korner Sven J., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P691
   Laukaitis A, 2007, LECT NOTES COMPUT SC, V4542, P218
   Lee BS, 2004, LECT NOTES COMPUT SC, V2941, P219
   Liu L, 2008, MARK: 2008 FIRST INTERNATIONAL WORKSHOP ON MANAGING REQUIREMENTS KNOWLEDGE, P47, DOI 10.1109/MARK.2008.2
   Mathiassen L, 2007, J ASSOC INF SYST, V8, P569
   Mcilroy D. M., 1968, 1 INT C SOFTW ENG, P88
   Meyer B., 1988, Object-Oriented Software Construction
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Mich L, 2002, MANAG INFORMAT SYST, V6, P321
   Mich L., 1996, Natural Language Engineering, V2, P161, DOI 10.1017/S1351324996001337
   Natt och Dag J., 2002, Requirements Engineering, V7, P20, DOI 10.1007/s007660200002
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Omoronyia I, 2010, LECT NOTES COMPUT SC, V6182, P188, DOI 10.1007/978-3-642-14192-8_18
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   Perez-Gonzalez H. G., 2002, P COMP 17 ANN ACM SI, P86
   Perez-Gonzalez H.G., 2005, 20 ANN ACM SIGPLAN C, P180
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Popescu D, 2008, LECT NOTES COMPUT SC, V5320, P103
   Rago A., 2011, REQUIR ENG, P1
   Robertson S., 1996, INT WORKSH SYST REUS
   ROMAN GC, 1985, COMPUTER, V18, P14
   Sampaio A, 2007, LECT NOTES COMPUT SC, V4620, P4
   Sawyer P, 2002, INFORM SYST FRONT, V4, P343, DOI 10.1023/A:1019918908208
   Schneider K, 2012, REQUIR ENG, V17, P35, DOI 10.1007/s00766-011-0141-0
   Seresht SM, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P133, DOI 10.1109/SERA.2008.34
   Shibaoka M, 2007, LECT NOTES COMPUT SC, V4802, P225
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Sommerville Ian, 2016, Software engineering 8
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Tichy W.F., 2010, P FSESDP WORKSHOP FU, P379
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Urquhart C., 1999, Information Technology & People, V12, P44, DOI 10.1108/09593849910250547
   Vlas R., 2011, 44 HAW INT C SYST SC, P1
   Webster J, 2002, MIS QUART, V26, pXIII
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
NR 73
TC 42
Z9 46
U1 0
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1695
EP 1709
DI 10.1016/j.infsof.2013.03.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000002
DA 2024-07-18
ER

PT J
AU Panesar-Walawege, RK
   Sabetzadeh, M
   Briand, L
AF Panesar-Walawege, Rajwinder Kaur
   Sabetzadeh, Mehrdad
   Briand, Lionel
TI Supporting the verification of compliance to safety standards via
   model-driven engineering: Approach, tool-support and empirical
   validation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety certification; Safety standards; Safety evidence; Model-driven
   engineering; UML; UML profiles
AB Context: Many safety-critical systems are subject to safety certification as a way to provide assurance that these systems cannot unduly harm people, property or the environment. Creating the requisite evidence for certification can be a challenging task due to the sheer size of the textual standards based on which certification is performed and the amenability of these standards to subjective interpretation.
   Objective: This paper proposes a novel approach to aid suppliers in creating the evidence necessary for certification according to standards. The approach is based on Model-Driven Engineering (MDE) and addresses the challenges of using certification standards while providing assistance with compliance.
   Method: Given a safety standard, a conceptual model is built that provides a succinct and explicit interpretation of the standard. This model is then used to create a UML profile that helps system suppliers in relating the concepts of the safety standard to those of the application domain, in turn enabling the suppliers to demonstrate how their system development artifacts comply with the standard.
   Results: We provide a generalizable and tool-supported solution to support the verification of compliance to safety standards. Empirical validation of the work is presented via an industrial case study that shows how the concepts of a sub-sea production control system can be aligned with the evidence requirements of the IEC61508 standard. A subsequent survey examines the perceptions of practitioners about the solution.
   Conclusion: The case study indicates that the supplier company where the study was performed found the approach useful in helping them prepare for certification of their software. The survey indicates that practitioners found our approach easy to understand and that they would be willing to adopt it in practice. Since the IEC61508 standard applies to multiple domains, these results suggest wider applicability and usefulness of our work. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Panesar-Walawege, Rajwinder Kaur] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Panesar-Walawege, Rajwinder Kaur; Briand, Lionel] Simula Res Lab, Ctr Software Verificat & Validat, Fornebu, Norway.
   [Sabetzadeh, Mehrdad; Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 University of Oslo; University of Luxembourg
RP Panesar-Walawege, RK (corresponding author), Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
EM rpanesar@simula.no; mehrdad.sabetzadeh@uni.lu; lionel.briand@uni.lu
OI Sabetzadeh, Mehrdad/0000-0002-4711-8319
FU DNV under the ModelME! project; National Research Fund Luxembourg
   [FNR/P10/03]; FP7 Programme [289011 (OPENCOSS)]; Research Council of
   Norway [203461/030 (Certus)]
FX We are grateful to the staff at the partner company where we conducted
   our case study and survey for volunteering their time and sharing their
   knowledge. Funding for this research was provided by DNV under the
   ModelME! project, by the National Research Fund Luxembourg (FNR/P10/03 -
   Validation and Verification Laboratory), by the FP7 Programme under
   Grant Agreement No. 289011 (OPENCOSS), and by the Research Council of
   Norway under Project No. 203461/030 (Certus).
CR [Anonymous], 2009, UML PROFILE MODELING
   [Anonymous], 2005, 61508 IEC
   [Anonymous], 1982, DO178B
   [Anonymous], 2009, ROAD VEH FU IN PRESS
   [Anonymous], 2005, UML 2 0 SUPERSTRUCTU
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 1999, RAILWAY APPL SAFETY
   [Anonymous], 2004, APPL IEC61508 IEC615
   [Anonymous], 2008, UML PROFILE MODELING
   [Anonymous], 2006, OMG Object Constraint Language Version 2.0
   [Anonymous], 2005, 13628 ISO
   Bai Y., 2010, Subsea Engineering Handbook", V1th
   Berkenkötter K, 2006, LECT NOTES COMPUT SC, V4166, P398
   Berkenkotter K., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P159
   Chung PWH, 2008, KNOWL-BASED SYST, V21, P332, DOI 10.1016/j.knosys.2007.11.002
   Cockram Trevor, 2003, CURRENT ISSUES SAFET
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   Dunn William R., 2002, PRACTICAL DESIGN SAF
   Feldt R., 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P225, DOI 10.1109/ICST.2010.37
   Huhn M, 2010, LECT NOTES COMPUT SC, V6100, P201, DOI 10.1007/978-3-642-16277-0_8
   IEC, 2003, 61511 IEC
   Lewis R, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P183, DOI 10.1007/978-1-84882-349-5_12
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Nguyen Thuy, 2011, MODRE WORKSH, P225
   Oates B. J., 2006, Researching information systems and computing
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Panesar-Walawege RK, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P30, DOI 10.1109/ISSRE.2011.11
   PANESARWALAWEGE RK, 2011, P 30 INT C CONC MOD, V6998, P362
   Redmill F., 2000, 5 AUSTR WORKSH SAF C
   Rogers EM, 2003, DIFFUSION INNOVATION
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Software Assurance Evidence Metamodel (SAEM), 2010, SOFTWARE ASSURANCE E
   Zoughbi G., 2010, SOFTWARE SYSTEMS MOD, P1
NR 34
TC 42
Z9 46
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 836
EP 864
DI 10.1016/j.infsof.2012.11.009
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000004
DA 2024-07-18
ER

PT J
AU Zhang, C
   Budgen, D
AF Zhang, Cheng
   Budgen, David
TI A survey of experienced user perceptions about software design patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software design patterns; Survey; Software design
ID SYSTEMATIC LITERATURE-REVIEWS
AB Context: Although the concept of the software design pattern is well-established, there is relatively little empirical knowledge about the patterns that experienced users consider to be most valuable.
   Aim: To identify which patterns from the set catalogued by the 'Gang of Four' are considered to be useful by experienced users, which ones are considered as not being useful, and why this is so.
   Method: We undertook a web-based survey of experienced pattern users, seeking information about their experiences as software developers and maintainers. Our sampling frame consisted of the authors of all of the pattern papers that we had identified in a preceding systematic review of studies of patterns.
   Results: We received 206 usable responses, corresponding to a response rate of 19% from the original sampling frame. Most respondents were involved with software development rather than maintenance.
   Conclusion: While patterns can provide a means of sharing 'knowledge schemas' between designers, only three patterns were widely regarded as valuable. Around one quarter of the patterns gained very low approval or worse. These observations need to be considered when using patterns; teaching students about the pattern concept; and planning empirical studies about patterns. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Zhang, Cheng] Anhui Univ, Hefei 230039, Peoples R China.
   [Budgen, David] Univ Durham, Durham, England.
C3 Anhui University; Durham University
RP Budgen, D (corresponding author), Univ Durham, Durham, England.
EM david.budgen@durham.ac.uk
RI Yang, Jing/JFK-4046-2023
OI Yang, Jing/0009-0004-8274-9863; Budgen, David/0000-0001-7143-0241
CR ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   [Anonymous], P EASE 2009 BCS EWIC
   [Anonymous], SPRINGER PRACTITIONE
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], 2007, P 11 ECOOP WORKSH QU
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Budgen D, 2009, IET SOFTW, V3, P410, DOI 10.1049/iet-sen.2008.0106
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   De Vaus D., 2002, SURVEYS SOCIAL RES
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Kohls Christian., 2008, Proceedings of the 15th Conference on Pattern Languages of Programs, PLoP '08, p15:1
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Sommerville Ian, 2016, Software engineering 8
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   Zhang C, 2012, INT SYMP EMP SOFTWAR, P79, DOI 10.1145/2372251.2372264
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 34
TC 22
Z9 22
U1 0
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 822
EP 835
DI 10.1016/j.infsof.2012.11.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000003
DA 2024-07-18
ER

PT J
AU Juristo, N
   Vegas, S
   Solari, M
   Abrahao, S
   Ramos, I
AF Juristo, Natalia
   Vegas, Sira
   Solari, Martin
   Abrahao, Silvia
   Ramos, Isabel
TI A process for managing interaction between experimenters to get useful
   similar replications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical studies; Experimentation; Replication; Combination of
   experiment results
AB Context: A replication is the repetition of an experiment. Several efforts have been made to adopt replication as a common practice in software engineering. There are different types of replications, depending on their purpose. Similar replications keep the experimental conditions as alike as possible to the original ones. External similar replications, where the replicating experimenters are not the same people as the original experimenters, have been a stumbling block. Several attempts at combining the results of replications have resulted in failure. Software engineering does not appear to be well suited to such replications, because it works with complex experimentally immature contexts. Software engineering settings have a large number of variables, and the role that many of them play is unknown. A successful (or useful) similar replication helps to better understand the phenomenon under study by verifying results and/or identifying contextual variables that could influence (or not) the results, through the combination of experimental results.
   Objective: To be able to get successful similar replications, there needs to be interaction between original and replicating experimenters. In this paper, we propose an interaction process for achieving successful similar replications.
   Method: This process consists of: an adaptation meeting, where experimenters tailor the experiment to the new setting; querying, to settle occasional inquiries while the experiment is being run; and a combination meeting, where experimenters meet to discuss the combination of replication outcomes with previous results. To check its effectiveness, the process has been tested on three different replications of the same experiment.
   Results: The proposed interaction process has helped to identify new contextual variables that could potentially influence (or not) the experimental results in the three replications run. Additionally, the interaction process has helped to uncover certain problems and deviations that occurred during some of the replications that we would have not been aware of otherwise.
   Conclusions: There are signs that suggest that it is possible to get successful similar replications in software engineering experimentation, when there is appropriate interaction among experimenters. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Juristo, Natalia; Vegas, Sira] Univ Politecn Madrid, E-28660 Madrid, Spain.
   [Solari, Martin] Univ ORT Uruguay, Montevideo, Uruguay.
   [Abrahao, Silvia] Univ Politecn Valencia, Valencia 46022, Spain.
   [Ramos, Isabel] Univ Seville, E-41012 Seville, Spain.
C3 Universidad Politecnica de Madrid; University ORT Uruguay; Universitat
   Politecnica de Valencia; University of Sevilla
RP Vegas, S (corresponding author), Univ Politecn Madrid, Campus Montegancedo S-N, E-28660 Madrid, Spain.
EM natalia@fi.upm.es; svegas@fi.upm.es; martin.solari@ort.edu.uy;
   sabrahao@dsic.upv.es; iramo-s@us.es
RI Abrahão, Silvia/AAK-6976-2020; Vegas, Sira/R-6742-2018; Ramos Roman,
   Isabel/U-7827-2017
OI Abrahão, Silvia/0000-0003-3580-2014; Ramos Roman,
   Isabel/0000-0002-9201-0673; Solari, Martin/0000-0001-5532-3227
FU Spanish Ministry of Science and Innovation [TIN2011-23216]
FX This work has been performed under research Grant TIN2011-23216 of the
   Spanish Ministry of Science and Innovation.
CR [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1 INT WORKSH REPL EM
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili V.R., 1985, TR1501 U MAR DEP COM
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Ciolkowski M., 1997, ISERN9713
   Gomez O.S., 2010, INT S EMP SOFTW ENG, P19
   Jedlitschka A., 2008, GUIDE ADV EMPIRICAL
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2003, EMPIRICAL METHODS ST, V2785, P235
   Juristo N., 2012, P 5 INT C SOFTW TEST
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   KAMSTIES E, 1995, P 5 EUR SOFTW ENG C
   Kamsties E., 1995, 9502 ISERN U KAIS DE
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL
   Linger R.C., 1979, SYSTEMS PROGRAMMING
   LUNG J, 2008, P 30 INT C SOFTW ENG
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   SHULL F, 2003, LECT NOTES EMPIRICAL, P39
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Solari M, 2006, P 4 INT WORKSH SER E, P19
   Wood M., 1997, P 6 EUR SOFTW ENG C
NR 28
TC 10
Z9 12
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 215
EP 225
DI 10.1016/j.infsof.2012.07.016
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500003
OA Green Accepted, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Holl, G
   Grünbacher, P
   Rabiser, R
AF Holl, Gerald
   Gruenbacher, Paul
   Rabiser, Rick
TI A systematic review and an expert survey on capabilities supporting
   multi product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Product line engineering; Large-scale systems; Multi product lines;
   Systematic literature review
AB Context: Complex software-intensive systems comprise many subsystems that are often based on heterogeneous technological platforms and managed by different organizational units. Multi product lines (MPLs) are an emerging area of research addressing variability management for such large-scale or ultra-large-scale systems. Despite the increasing number of publications addressing MPLs the research area is still quite fragmented.
   Objective: The aims of this paper are thus to identify, describe, and classify existing approaches supporting MPLs and to increase the understanding of the underlying research issues. Furthermore, the paper aims at defining success-critical capabilities of infrastructures supporting MPLs.
   Method: Using a systematic literature review we identify and analyze existing approaches and research issues regarding MPLs. Approaches described in the literature support capabilities needed to define and operate MPLs. We derive capabilities supporting MPLs from the results of the systematic literature review. We validate and refine these capabilities based on a survey among experts from academia and industry.
   Results: The paper discusses key research issues in MPLs and presents basic and advanced capabilities supporting MPLs. We also show examples from research approaches that demonstrate how these capabilities can be realized.
   Conclusions: We conclude that approaches supporting MPLs need to consider both technical aspects like structuring large models and defining dependencies between product lines as well as organizational aspects such as distributed modeling and product derivation by multiple stakeholders. The identified capabilities can help to build, enhance, and evaluate MPL approaches. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Gruenbacher, Paul] Johannes Kepler Univ Linz, Inst Syst Engn & Automat, A-4040 Linz, Austria.
   [Holl, Gerald; Rabiser, Rick] Johannes Kepler Univ Linz, Christian Doppler Lab Automated Software Engn, A-4090 Linz, Austria.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz
RP Grünbacher, P (corresponding author), Johannes Kepler Univ Linz, Inst Syst Engn & Automat, Altenberger Str 69, A-4040 Linz, Austria.
EM holl@ase.jku.at; paul.gruenbacher@jku.at; rabiser@ase.jku.at
RI Rabiser, Rick/B-8673-2017; Grunbacher, Paul/C-2970-2013
OI Rabiser, Rick/0000-0003-3862-1112; Grunbacher, Paul/0000-0002-1951-5288
CR Abele Andreas., 2010, Proceedings of the 4th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'10), V37, P101
   Altintas NI, 2008, LECT NOTES COMPUT SC, V5030, P166, DOI 10.1007/978-3-540-68073-4_15
   [Anonymous], P 2010 ICSE WORKSH S
   [Anonymous], P 23 IEEE ACM INT C
   [Anonymous], P 5 INT WORKSH VAR M
   [Anonymous], 42 HAW INT C SYST SC
   [Anonymous], 2004, OOPSLA GPCE WORKSH 0
   [Anonymous], P 1 INT WORKSH FEAT
   [Anonymous], P 1 INT WORKSH AUT C
   [Anonymous], 2009, P 42 IEEE ANN HAWAII
   [Anonymous], 200916 TU BERL
   [Anonymous], P 2010 ICSE WORKSH P
   [Anonymous], P 13 INT SOFTW PROD
   [Anonymous], ULTRALARGESCALE SYST
   [Anonymous], 2008, P WORKSH MOD COMP GE
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 2007, P 40 HAWAII INT C SY, DOI DOI 10.1109/HICSS.2007.27
   [Anonymous], P 2 INT WORKSH ULTR
   [Anonymous], P 3 INT WORKSH VAR M
   [Anonymous], 2000, Kluwer international series in software engineering
   [Anonymous], 2005, JOENS LEARN INSTR S
   [Anonymous], P 4 INT WORKSH PRINC
   [Anonymous], 2009, P 2009 17 IEEE INT R
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], P 38 ANN HAW INT C S
   [Anonymous], P 13 INT SOFTW PROD
   [Anonymous], 2009, P 42 HAW INT C SYST
   Babbie E.R., 1990, SURV RES METHODS-GER, VSecond
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Bosch J, 2010, IEEE SOFTWARE, V27, P29, DOI 10.1109/MS.2010.32
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Brondum J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P355, DOI 10.1145/1810295.1810390
   Brown T. J., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P154
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Classen Andreas., 2009, Proceedings of the 3th International Workshop on Variability Modelling of Software-intensive Systems (VAMOS'09), P51
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Dhungana D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/SPLC.2008.26
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Elsner C, 2010, LECT NOTES COMPUT SC, V6287, P181, DOI 10.1007/978-3-642-15579-6_13
   Ganter Bernhard., 1998, FORMAL CONCEPT ANAL
   Hanssen G., 2010, Workshop on Product Line Approaches in Software Engineering, International Conference on Software Engineering, P1
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Kang Kyo C, 1990, Technical Report
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krueger CW, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P95, DOI 10.1109/SPLINE.2006.1691581
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   MARTIN PY, 1986, J APPL BEHAV SCI, V22, P141, DOI 10.1177/002188638602200207
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2011, J SYST SOFTWARE, V84, P285, DOI 10.1016/j.jss.2010.09.042
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Reiser MO, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P149
   Rosenmuller Marko., 2010, VAMOS, P123
   Schmid K, 2010, LECT NOTES COMPUT SC, V6287, P151, DOI 10.1007/978-3-642-15579-6_11
   Seibel A, 2010, SOFTW SYST MODEL, V9, P493, DOI 10.1007/s10270-009-0146-z
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Staffs Keele, 2007, Tech. Rep.
   Thompson J. M., 2003, Requirements Engineering, V8, P42, DOI 10.1007/s00766-003-0166-0
   Unterkalmsteiner Michael., 2011, IEEE T SOFTWARE ENG, P1
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   van Ommering R, 2003, LECT NOTES COMPUT SC, V2649, P16
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   Van Ommering R., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P187
   Wille R, 2009, LECT NOTES ARTIF INT, V5548, P314
NR 69
TC 83
Z9 85
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 828
EP 852
DI 10.1016/j.infsof.2012.02.002
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963DB
UT WOS:000305599200004
DA 2024-07-18
ER

PT J
AU Kitchenham, BA
   Sjoberg, DIK
   Dybå, T
   Pfahl, D
   Brereton, P
   Budgen, D
   Höst, M
   Runeson, P
AF Kitchenham, Barbara Ann
   Sjoberg, Dag I. K.
   Dyba, Tore
   Pfahl, Dietmar
   Brereton, Pearl
   Budgen, David
   Host, Martin
   Runeson, Per
TI Three empirical studies on the agreement of reviewers about the quality
   of software engineering experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Quality evaluation; Empirical studies; Human-intensive experiments;
   Experimentation; Software engineering
ID RELIABILITY; SYSTEMS; TRIALS; GAME
AB Context: During systematic literature reviews it is necessary to assess the quality of empirical papers. Current guidelines suggest that two researchers should independently apply a quality checklist and any disagreements must be resolved. However, there is little empirical evidence concerning the effectiveness of these guidelines.
   Aims: This paper investigates the three techniques that can be used to improve the reliability (i.e. the consensus among reviewers) of quality assessments, specifically, the number of reviewers, the use of a set of evaluation criteria and consultation among reviewers. We undertook a series of studies to investigate these factors.
   Method: Two studies involved four research papers and eight reviewers using a quality checklist with nine questions. The first study was based on individual assessments, the second study on joint assessments with a period of inter-rater discussion. A third more formal randomised block experiment involved 48 reviewers assessing two of the papers used previously in teams of one, two and three persons to assess the impact of discussion among teams of different size using the evaluations of the "teams" of one person as a control.
   Results: For the first two studies, the inter-rater reliability was poor for individual assessments, but better for joint evaluations. However, the results of the third study contradicted the results of Study 2. Inter-rater reliability was poor for all groups but worse for teams of two or three than for individuals.
   Conclusions: When performing quality assessments for systematic literature reviews, we recommend using three independent reviewers and adopting the median assessment. A quality checklist seems useful but it is difficult to ensure that the checklist is both appropriate and understood by reviewers. Furthermore, future experiments should ensure participants are given more time to understand the quality checklist and to evaluate the research papers. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Kitchenham, Barbara Ann; Brereton, Pearl] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Sjoberg, Dag I. K.; Dyba, Tore; Pfahl, Dietmar] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   [Dyba, Tore] SINTEF, N-7034 Trondheim, Norway.
   [Pfahl, Dietmar; Host, Martin; Runeson, Per] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
   [Budgen, David] Univ Durham, Sci Labs, Sch Engn & Comp Sci, Durham DH1 3LE, England.
C3 Keele University; University of Oslo; SINTEF; Lund University; Durham
   University
RP Kitchenham, BA (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM B.A.Kitchenham@cs.keele.ac.uk; Dag.Sjoberg@ifi.uio.no;
   Tore.Dyba@sintef.no; Dietmar.Pfahl@cs.lth.se;
   O.P.Brereton@cs.keele.ac.uk; David.Budgen@durham.ac.uk;
   Martin.Host@cs.lth.se; Per.Runeson@cs.lth.se
RI Höst, Martin/KDN-4323-2024; Kitchenham, Barbara/AAL-4311-2020; Runeson,
   Per/H-5113-2019; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Höst, Martin/0000-0002-9360-8693; Kitchenham,
   Barbara/0000-0002-6134-8460; Runeson, Per/0000-0003-2795-4851; Pfahl,
   Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Budgen,
   David/0000-0001-7143-0241
CR Abrahao S, 2007, INFORM SOFTWARE TECH, V49, P366, DOI 10.1016/j.infsof.2006.06.001
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2009, GROUP DYNAMICS
   [Anonymous], 1983, Groupthink: Psychological studies of policy decisions and fiascoes
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   Bornmann L, 2010, PLOS ONE, V5, DOI 10.1371/journal.pone.0014331
   Brown B. B., 1968, P3925 RAND
   Chen L., 2009, P C EV ASS SOFTW ENG
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Egger M, 2003, Health Technol Assess, V7, P1
   Jorgensen M., 2000, INFORM SOFTWARE TECH, V48, P297
   Jüni P, 1999, JAMA-J AM MED ASSOC, V282, P1054, DOI 10.1001/jama.282.11.1054
   KAMPENES VB, 2007, THESIS U OSLO
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   KARAU SJ, 1992, J EXP SOC PSYCHOL, V28, P542, DOI 10.1016/0022-1031(92)90045-L
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   Kitchenham B., 2010, EMPIR SOFTW ENG, V15, P619
   Kitchenham B.A., 2010, P C EMP SOFTW ENG ME
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   laonnidis J.P.A., 2001, BRIT MED J, V322, P879
   Laughlin PR, 2006, J PERS SOC PSYCHOL, V90, P644, DOI 10.1037/0022-3514.90.4.644
   Laughlin PR, 1999, ORGAN BEHAV HUM DEC, V80, P50, DOI 10.1006/obhd.1999.2854
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Marsh HW, 2008, AM PSYCHOL, V63, P160, DOI 10.1037/0003-066X.63.3.160
   MYERS DG, 1976, PSYCHOL BULL, V83, P602, DOI 10.1037/0033-2909.83.4.602
   Neff BD, 2006, BIOSCIENCE, V56, P333, DOI 10.1641/0006-3568(2006)56[333:IPRAGO]2.0.CO;2
   Nunamaker J. R.  Jr, 1996, Journal of Management Information Systems, V13, P163
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Omenn GS, 1996, NEW ENGL J MED, V334, P1150, DOI 10.1056/NEJM199605023341802
   Poolman RW, 2007, ACTA ORTHOP, V78, P278, DOI 10.1080/17453670710013807
   Rowe B.H., 2006, BMC MED RES METHODOL, V6
   Schultz DM, 2010, SCIENTOMETRICS, V84, P277, DOI 10.1007/s11192-009-0084-0
   Shang AJ, 2005, LANCET, V366, P726, DOI 10.1016/S0140-6736(05)67177-2
   Shaw M., 1981, GROUP DYNAMICS
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Weller A.C., 2002, Editorial peer review: Its strengths and weaknesses
   Wood M, 2004, J INF SCI, V30, P2, DOI 10.1177/0165551504041673
   Yusuf S, 2000, NEW ENGL J MED, V342, P154, DOI 10.1056/NEJM200001203420302
NR 44
TC 9
Z9 10
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 804
EP 819
DI 10.1016/j.infsof.2011.11.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 963DB
UT WOS:000305599200002
DA 2024-07-18
ER

PT J
AU Tran, H
   Zdun, U
   Holmes, T
   Oberortner, E
   Mulo, E
   Dustdar, S
AF Huy Tran
   Zdun, Uwe
   Holmes, Ta'id
   Oberortner, Ernst
   Mulo, Emmanuel
   Dustdar, Schahram
TI Compliance in service-oriented architectures: A model-driven and
   view-based approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Compliance; Model-driven; View-based; Service-oriented architectures;
   Process-driven SOAs; Domain-specific languages
ID COMPLIANCE-CHECKING; BUSINESS
AB Context: Ensuring software systems conforming to multiple sources of relevant policies, laws, and regulations is significant because the consequences of infringement can be serious. Unfortunately, this goal is hardly achievable due to the divergence and frequent changes of compliance sources and the differences in perception and expertise of the involved stakeholders. In the long run, these issues lead to problems regarding complexity, understandability, maintainability, and reusability of compliance concerns.
   Objective: In this article, we present a model-driven and view-based approach for addressing problems related to compliance concerns.
   Method: Compliance concerns are represented using separate view models. This is achieved using domain-specific languages (DSLs) that enable non-technical and technical experts to formulate only the excerpts of the system according to their expertise and domain knowledge. The compliance implementations, reports, and documentation can be automatically generated from the models. The applicability of our approach has been validated using an industrial case study.
   Results: Our approach supports stakeholders in dealing with the divergence of multiple compliance sources. The compliance controls and relevant reports and documentation are generated from the models and hence become traceable, understandable, and reusable. Because the generated artifacts are associated with the models, the compliance information won't be lost as the system evolves. DSLs and view models convey compliance concerns to each stakeholder in a view that is most appropriate for his/her current work task.
   Conclusions: Our approach lays a solid foundation for ensuring conformance to relevant laws and regulations. This approach, on the one hand, aims at addressing the variety of expertise and domain knowledge of stakeholders. On the other hand, it also aims at ensuring the explicit links between compliance sources and the corresponding implementations, reports, and documents for conducting many important tasks such as root cause analysis, auditing, and governance. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Huy Tran; Zdun, Uwe] Univ Vienna, Software Architecture Grp, Fac Comp Sci, A-1090 Vienna, Austria.
   [Holmes, Ta'id; Oberortner, Ernst; Mulo, Emmanuel; Dustdar, Schahram] Vienna Univ Technol, Distributed Syst Grp, Inst Informat Syst, Vienna, Austria.
C3 University of Vienna; Technische Universitat Wien
RP Tran, H (corresponding author), Univ Vienna, Software Architecture Grp, Fac Comp Sci, Berggasse 11,Top 2, A-1090 Vienna, Austria.
EM huy.tran@univie.ac.at; uwe.zdun@univie.ac.at;
   tholmes@infosys.tuwien.ac.at; e.oberortner@infosys.tuwien.a-c.at;
   e.mulo@infosys.tuwien.ac.at; dustdar@infosys.tuwie-n.ac.at
RI Dustdar, Schahram/G-9877-2015; Zdun, Uwe/AFR-2161-2022
OI Dustdar, Schahram/0000-0001-6872-8821; Assouline Dayan,
   Yehudith/0000-0002-2851-6629
FU European Union [215175, 257483]
FX We would like to thank the anonymous reviewers for providing insightful
   and constructive comments that greatly help us to improve this article.
   This work was partially supported by the European Union FP7 Project
   COMPAS (http://www.compas-ict.eu), Grant No. 215175 and the European
   Union FP7 Project INDENICA (http://www.indenica.eu), Grant No. 257483.
CR Accorsi R., 2008, THESIS U FREIBURG GE
   [Anonymous], INT FIN REP STAND IF
   [Anonymous], 2007, Web Services Description Language (WSDL) Version 2.0
   [Anonymous], 2009, COMPAS DEL D5 4 REAS
   [Anonymous], P 2006 C PATT LANG P
   [Anonymous], 2004, Software Factories
   [Anonymous], 2004, International Convergence of Capital Measurement and Capital Standards: A Revised Framework
   [Anonymous], P INT WORK C BUS PRO
   Arbab F, 2008, COMM COM INF SC, V17, P108
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Elgammal A., 2010, International Conference on Service-Oriented Computing, P27, DOI DOI 10.1007/978-3-642-19394-1_4
   Elgammal A, 2010, LECT NOTES COMPUT SC, V6470, P17, DOI 10.1007/978-3-642-17358-5_2
   Elgammal A, 2011, LECT NOTES COMPUT SC, V6568, P27, DOI 10.1007/978-3-642-19394-1_4
   Gangadharan GR, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.161
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Giblin C, 2006, 3662 RZ IBM RES
   Giblin C, 2005, FRONT ARTIF INTEL AP, V134, P37
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2009, LECT NOTES BUS INF P, V17, P5
   Holmes T, 2008, LECT NOTES COMPUT SC, V5095, P246, DOI 10.1007/978-3-540-69100-6_17
   *IBM, 2006, TRAV BOOK PROC
   Kabicher S., 2011, P BPM 11 WORKSH 1 IN
   Kähmer M, 2008, I W ADV ISS E COMMER, P87, DOI [10.1109/CECandEEE.2008.122, 10.1109/CEC/EEE.2008.43]
   Kelly S., 2008, Domain-Specific Modeling
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   Lotz V, 2008, WIRTSCHAFTSINF, V50, P383, DOI 10.1007/s11576-008-0086-1
   Lu RP, 2008, INFORM SYST MANAGE, V25, P344, DOI 10.1080/10580530802384613
   Lu RP, 2008, LECT NOTES COMPUT SC, V4928, P120
   Ly L.T., 2008, 1 INT WORKSH GOV RIS
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Mahoney W, 2011, INT J CRIT INFR PROT, V4, P41, DOI 10.1016/j.ijcip.2011.03.002
   Mayr C, 2008, LECT NOTES COMPUT SC, V5377, P62, DOI 10.1007/978-3-540-89897-9_6
   Milosevic Z, 2006, IEEE INT ENTERP DIST, P211
   Ministre de l' conomie des finances et de l'industrie, 2003, LOI SEC FIN LSF
   Namiri K, 2007, LECT NOTES COMPUT SC, V4803, P59
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Oberortner E., 2010, IEEE INT C SERV OR C, P1
   Oberortner E., 2011, 18 C PATT LANG PROGR
   Oberortner E., 2010, 17 C PATT LANG PROGR
   Oberortner E., 2011, P 16 EUR C PATT LANG
   Oberortner E, 2009, 2009 ICSE WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P20, DOI 10.1109/MISE.2009.5069892
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2005, UN MOD LANG 2 0
   *OMG, 2008, SERV OR ARCH MOD LAN
   Ran S., 2003, ACM SIGECOM EXCHANGE, V4, P1, DOI DOI 10.1145/844357.844360
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Sackmann S, 2008, I W ADV ISS E COMMER, P79, DOI [10.1109/CEC/EEE.2008.20, 10.1109/CECandEEE.2008.99]
   Sackmann S, 2008, WIRTSCHAFTSINF, V50, P366, DOI 10.1007/s11576-008-0078-1
   Sadiq S., 2010, HDB BUSINESS PROCESS
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Schleicher D., 2010, International conference on service-oriented computing and applications, Perth, P1
   Schleicher D, 2011, IEEE INT ENTERP DIST, P257, DOI 10.1109/EDOC.2011.22
   Schumm D, 2010, LECT NOTES BUS INF P, V61, P131
   Silveira P., 2011, AIDING COMPLIANCE GO
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Tarantino A., 2008, GOVERNANCE RISK COMP
   The Netherlands Corporate Governance Committee, 2003, DUTCH CORP GOV COD
   Tran Huy, 2011, International Journal of Business Process Integration and Management, V5, P229, DOI 10.1504/IJBPIM.2011.042527
   Tran H., 2010, 2 INT C PERS TECHN, V66, P338
   Tran H., 2009, HDB RES BUSINESS PRO
   Tran H., 2008, INT WORKSH MOD BAS S
   Tran H, 2008, LECT NOTES COMPUT SC, V5030, P233, DOI 10.1007/978-3-540-68073-4_23
   Tran H, 2011, INT SYMP SYMB NUMERI, P407, DOI 10.1109/SYNASC.2010.52
   Tran H, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P233, DOI 10.1007/978-3-642-21001-3_14
   Tran H, 2011, SOFTW SYST MODEL, V10, P5, DOI 10.1007/s10270-009-0137-0
   UK Financial Services Authority, 2007, MARK FIN INSTR DIR M
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   Weigand H, 2011, INFORM SYST, V36, P791, DOI 10.1016/j.is.2010.12.005
   Zdun Uwe, 2007, International Journal of Business Process Integration and Management, V2, P109, DOI 10.1504/IJBPIM.2007.015135
NR 71
TC 27
Z9 28
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 531
EP 552
DI 10.1016/j.infsof.2012.01.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100002
DA 2024-07-18
ER

PT J
AU Stol, KJ
   Babar, MA
   Avgeriou, P
   Fitzgerald, B
AF Stol, Klaas-Jan
   Babar, Muhammad Ali
   Avgeriou, Paris
   Fitzgerald, Brian
TI A comparative study of challenges in integrating Open Source Software
   and Inner Source Software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open Source Software; Inner Source; Software development; Challenges;
   Case study; Empirical studies
ID REUSE
AB Context: Several large software-developing organizations have adopted Open Source Software development (OSSD) practices to develop in-house components that are subsequently integrated into products. This phenomenon is also known as "Inner Source". While there have been several reports of successful cases of this phenomenon, little is known about the challenges that practitioners face when integrating software that is developed in such a setting.
   Objective: The objective of this study was to shed light on challenges related to building products with components that have been developed within an Inner Source development environment.
   Method: Following an initial systematic literature review to generate seed category data constructs, we performed an in-depth exploratory case study in an organization that has a significant track record in the implementation of Inner Source. Data was gathered through semi-structured interviews with participants from a range of divisions across the organization. Interviews were transcribed and analyzed using qualitative data analysis techniques.
   Results: We have identified a number of challenges and approaches to address them, and compared the findings to challenges related to development with OSS products reported in the literature. We found that many challenges identified in the case study could be mapped to challenges related to integration of OSS.
   Conclusion: The results provide important insights into common challenges of developing with OSS and Inner Source and may help organizations to understand how to improve their software development practices by adopting certain OSSD practices. The findings also identify the areas that need further research. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Stol, Klaas-Jan; Fitzgerald, Brian] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [Babar, Muhammad Ali] IT Univ Copenhogen, DK-2300 Copenhagen, Denmark.
   [Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
C3 University of Limerick; IT University Copenhagen; University of
   Groningen
RP Stol, KJ (corresponding author), Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
EM klaas-jan.stol@lero.ie; malibaba@itu.dk; paris@cs.rug.nl;
   brian.fitzgerald@lero.ie
RI Stol, Klaas-Jan/I-6269-2013; Fitzgerald, Brian/E-7790-2010
OI Stol, Klaas-Jan/0000-0002-1038-5050; Fitzgerald,
   Brian/0000-0001-9193-2863; Avgeriou, Paris/0000-0002-7101-0754
FU IRCSET [RS/2008/134]; Science Foundation Ireland [03/CE2/1303_1]
FX This work is partially funded by IRCSET under grant no. RS/2008/134 and
   by Science Foundation Ireland grant 03/CE2/1303_1 to Lero (www.lero.ie).
   We are grateful to the participants of our study for their time and
   enthusiasm. We thank the anonymous reviewers for their useful comments
   and suggestions to improve this paper, particularly Sections 5-8. The
   first author is grateful to Sarah Beecham for her valuable feedback on
   earlier drafts of Fig. 2.
CR Agerfalk P.J., 2005, First International Conference on Open Source Systems, P82
   Akkanen J, 2007, INT FED INFO PROC, V234, P217, DOI 10.1007/978-0-387-72486-7_18
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], OPEN SOURCE ECOSYSTE
   [Anonymous], P 5 WORKSH OP SOURC
   [Anonymous], P 1 WORKSH OP SOURC
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], P 3 INT C RES CHALL
   [Anonymous], P 2 WORKSH OP SOURC
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], P 1 WORKSH OP SOURC
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], P 2 EUR S SYST AN DE
   [Anonymous], P 32 INT COMP SOFTW
   [Anonymous], P 2 WORKSH EM TRENDS
   Ayala C, 2007, INT FED INFO PROC, V234, P17, DOI 10.1007/978-0-387-72486-7_2
   Charters S., 2007, 2007001 EBSE
   Chen X, 2008, COMM COM INF SC, V16, P94
   Clements P., 2002, Software product lines
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Dinkelacker J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P177, DOI 10.1109/ICSE.2002.1007966
   Edmondson AC, 2007, ACAD MANAGE REV, V32, P1155, DOI 10.5465/AMR.2007.26586086
   Feller J., 2002, Understanding Open Source Software development
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Gaughan G, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/SEAA.2009.86
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Gurbani VK, 2010, COMMUN ACM, V53, P155, DOI 10.1145/1646353.1646392
   Hauge O, 2007, INT FED INFO PROC, V234, P259
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Jaaksi A, 2007, INT FED INFO PROC, V234, P85, DOI 10.1007/978-0-387-72486-7_7
   Krivoruchko J, 2007, INT FED INFO PROC, V234, P277, DOI 10.1007/978-0-387-72486-7_28
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   Madanmoban TR, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.45
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   Melian C., 2007, PhD thesis.
   Melian C, 2008, INT FED INFO PROC, V275, P93, DOI 10.1007/978-0-387-09684-1_8
   Merilinna J, 2006, EUROMICRO CONF PROC, P170, DOI 10.1109/EUROMICRO.2006.61
   Modine Austin., 2009, The Register
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Robbins J., 2005, PERSPECTIVES FREE OP, P245
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Theunissen M, 2008, LECT NOTES COMPUT SC, V5082, P84, DOI 10.1007/978-3-540-85279-7_7
   van der Linden Frank, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P32
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   Ven K, 2009, INT FED INFO PROC, V299, P116, DOI 10.1007/978-3-642-02032-2_12
   Wallnau K., 2002, Building systems from commercial components
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
   Yin R.K., 2011, Qualitative research from start to finish
NR 55
TC 42
Z9 45
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1319
EP 1336
DI 10.1016/j.infsof.2011.06.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Sung, A
   Choi, B
   Wong, WE
   Debroy, V
AF Sung, Ahyoung
   Choi, Byoungju
   Wong, W. Eric
   Debroy, Vidroha
TI Mutant generation for embedded systems using kernel-based software and
   hardware fault simulation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation operators; Embedded systems; Fault injection; Integration
   testing
ID MUTATION; SELECTION
AB Context: Mutation testing is a fault-injection-based technique to help testers generate test cases for detecting specific and predetermined types of faults.
   Objective: Before mutation testing can be effectively applied to embedded systems, traditional mutation testing needs to be modified. To inject a fault into an embedded system without causing any system failure or hardware damage is a challenging task as it requires some knowledge of the underlying layers such as the kernel and the corresponding hardware.
   Method: We propose a set of mutation operators for embedded systems using kernel-based software and hardware fault simulation. These operators are designed for software developers so that they can use the mutation technique to test the entire system after the software is integrated with the kernel and hardware devices.
   Results: A case study on a programmable logic controller for a digital reactor protection system in a nuclear power plant is conducted. Our results suggest that the proposed mutation operators are useful for fault-injection and this is evidenced by the fact that faults not injected by us were discovered in the subject software as a result of the case study.
   Conclusion: We conclude that our mutation operators are useful for integration testing of an embedded system. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Sung, Ahyoung; Choi, Byoungju] Ewha Womans Univ, Dept Comp Sci & Engn, Seoul, South Korea.
   [Wong, W. Eric; Debroy, Vidroha] Univ Texas Dallas, Dept Comp Sci, Dallas, TX 75230 USA.
C3 Ewha Womans University; University of Texas System; University of Texas
   Dallas
RP Choi, B (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM ahyoung.sung@samsung.com; bjchoi@ewha.ac.kr; ewong@utdallas.edu;
   vxd024000@utdallas.edu
FU Korea Research Foundation [KRF-2007-357-D00215]; Ministry of Knowledge
   Economy (MKE), Korea, under the Information Technology Research Center
   (ITRC) [NIPA-2011-(C1090-1131-0008)]; USA National Science Foundation
   (NSF) [DUE-1023071]
FX This work was supported in part by the Korea Research Foundation under
   award KRF-2007-357-D00215, The Ministry of Knowledge Economy (MKE),
   Korea, under the Information Technology Research Center (ITRC) support
   program supervised by the National IT Industry Promotion Agency (NIPA)
   (NIPA-2011-(C1090-1131-0008)) and the USA National Science Foundation
   (NSF DUE-1023071).
CR Agrawal H., 1989, Design of mutant operators for the C programming language
   Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Arlat J, 2002, IEEE T COMPUT, V51, P138, DOI 10.1109/12.980005
   Baraza JC, 2005, INT HIGH LEVEL DESIG, P19, DOI 10.1109/HLDVT.2005.1568808
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   *GNU, 2008, PACK ENG GNIC 2 GIG
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   *IEC, 1993, 1131 IEC 3
   *ISO, 1975, SET CONTR CHAR ISO 6
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   *KOR AT EN RES I, 2006, KNICSPLCSDS33101 KOR, P331
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Sanchez P, 1996, INTERNATIONAL TEST CONFERENCE 1996, PROCEEDINGS, P732, DOI 10.1109/TEST.1996.557132
   SHAN L, 2006, P INT WORKSH AUT SOF, P43
   Sung A, 2007, COMPUT STAND INTER, V29, P430, DOI 10.1016/j.csi.2006.07.002
   *TEX INSTR, 1998, TMS320C32 DIG SIGN P
   *TEX INSTR, 1999, SPRU296 COD COMP US
   Yoon H, 2004, SOFTW TEST VERIF REL, V14, P45, DOI 10.1002/stvr.276
NR 23
TC 4
Z9 4
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1153
EP 1164
DI 10.1016/j.infsof.2011.03.010
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200010
DA 2024-07-18
ER

PT J
AU Qian, J
   Chen, L
   Xu, BW
   Zhang, XF
AF Qian, Ju
   Chen, Lin
   Xu, Baowen
   Zhang, Xiaofang
TI Contribution-based call stack abstraction for call string based pointer
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Pointer analysis; Contribution-based; Stack abstraction;
   Aspect-oriented; Multi-threaded; Data flow
ID TO ANALYSIS
AB Context: Different method calls may have different contributions to the precision of the final application when abstracted into the call strings. The existing call string based pointer analysis algorithms do not consider such contribution difference and hence may not achieve best cost-effectiveness.
   Objective: To be more cost-effective, we try to leverage the contribution information of each method call in call string based pointer analysis.
   Method: The paper firstly proposes a contribution-based call stack abstraction method which abstracts the call stacks into call strings with the contribution information under consideration. Then, we apply the new call stack abstraction method to the pointer analysis of Aspect., programs and propose a concern-sensitive points-to analysis method. Besides, the new abstraction method is also applied to multi-threaded Java programs and results in a thread-sensitive pointer analysis method.
   Results: The experimental results show that the two pointer analysis methods with contribution-based call stack abstraction can be more cost-effective than the ordinary call string based approaches for an application that detects harmful advices and an application that detects inter-thread data flow.
   Conclusion: These pointer analysis methods more concretely and more clearly show that the contribution-based call stack abstraction can lead to better cost-effectiveness for the given applications. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Chen, Lin; Xu, Baowen; Zhang, Xiaofang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Qian, Ju] Nanjing Univ Aeronaut & Astronaut, Nanjing 210016, Peoples R China.
   [Qian, Ju] Shanghai Key Lab Comp Software Testing & Evaluati, Shanghai 201112, Peoples R China.
   [Zhang, Xiaofang] Soochow Univ, Suzhou 215006, Peoples R China.
C3 Nanjing University; Nanjing University of Aeronautics & Astronautics;
   Soochow University - China
RP Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
FU National High Technology Research and Development of China (863 Program)
   [2009AA01Z147]; NSFC [90818027, 60903026, 60973046]; Shanghai Key
   Laboratory of Computer Software Evaluating Testing [09DZ2272600]
FX This research is supported by the National High Technology Research and
   Development of China (863 Program) (2009AA01Z147), NSFC (90818027,
   60903026, 60973046), and the Opening Project of Shanghai Key Laboratory
   of Computer Software Evaluating & Testing (09DZ2272600).
CR Andersen L. O., 1994, Ph.D. thesis
   Avgustinov P., 2005, ASPECT ORIENTED SYST, P87
   Besson F, 2009, P 11 INT WORKSH FORM
   CHANG BM, 2004, P COMP INF SCI
   Chen ZQ, 2002, ACM SIGPLAN NOTICES, V37, P45, DOI 10.1145/596992.597003
   DANTAS DS, 2006, POPL 06, P383
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Guyer SZ, 2003, LECT NOTES COMPUT SC, V2694, P214
   Hind Michael., 2001, ACM SIGPLAN SIGSOFT
   *JAV GRAND FOR, 1999, MULT BENCHM SUIT
   Karkare B, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1286821.1286829
   Katz S., 2004, FOAL FDN ASPECT ORIE, P1
   Khedker UP, 2008, LECT NOTES COMPUT SC, V4959, P213
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lattner C, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P278, DOI 10.1145/1250734.1250766
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   LHOTAK O, 2006, P 15 INT C COMP CONS
   Lhoták O, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391987
   LIANG D, 2006, ACM SIGSOFT SOFTWARE, V31, P6
   MARTIN F, 1999, P INT C COMP CONSTR, P63
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   NANDA MG, 2003, P ACM S APPL COMP, P1068
   Oh H, 2009, LECT NOTES COMPUT SC, V5904, P14
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   QIAN J, 2007, P 7 ACM SIGPLAN SIGS
   Qian J, 2007, INT WKSHP FUT TR DIS, P157, DOI 10.1109/FTDCS.2007.34
   RECEBLI EA, 2005, THESIS U OXFORD
   RINARD M, 2001, P STAT AN S SAS
   RINARD M, 2004, P 12 ACM SIGSOFT INT, P147
   Rugina R, 2003, ACM T PROGR LANG SYS, V25, P70, DOI 10.1145/596980.596982
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   Sharir M., 1981, PROGRAM FLOW ANAL TH
   SRIDHARAN M, 2006, PLDI 06, P387
   SUN Q, 2008, P 8 IEEE INT WORK C
   VALLEERAI R, 1999, SOOT JAVA OPTIMIZATI, P125
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   Xu G., 2008, ISSTA'08, P225, DOI DOI 10.1145/1390630.1390658
   ZHU J, 2004, P ACM SIGPLAN C PROG, P145
NR 39
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 654
EP 665
DI 10.1016/j.infsof.2010.11.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900010
DA 2024-07-18
ER

PT J
AU Cruzes, DS
   Dybå, T
AF Cruzes, Daniela S.
   Dyba, Tore
TI Research synthesis in software engineering: A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Evidence-based software engineering; Empirical software engineering;
   Systematic review; Qualitative methods; Mixed-methods
ID SYSTEMATIC LITERATURE-REVIEWS
AB Context: Comparing and contrasting evidence from multiple studies is necessary to build knowledge and reach conclusions about the empirical support for a phenomenon. Therefore, research synthesis is at the center of the scientific enterprise in the software engineering discipline.
   Objective: The objective of this article is to contribute to a better understanding of the challenges in synthesizing software engineering research and their implications for the progress of research and practice.
   Method: A tertiary study of journal articles and full proceedings papers from the inception of evidence-based software engineering was performed to assess the types and methods of research synthesis in systematic reviews in software engineering.
   Results: As many as half of the 49 reviews included in the study did not contain any synthesis. Of the studies that did contain synthesis, two thirds performed a narrative or a thematic synthesis. Only a few studies adequately demonstrated a robust, academic approach to research synthesis.
   Conclusion: We concluded that, despite the focus on systematic reviews, there is limited attention paid to research synthesis in software engineering. This trend needs to change and a repertoire of synthesis methods needs to be an integral part of systematic reviews to increase their significance and utility for research and practice. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Cruzes, Daniela S.] NTNU, NO-7491 Trondheim, Norway.
   [Dyba, Tore] SINTEF, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Cruzes, DS (corresponding author), NTNU, NO-7491 Trondheim, Norway.
EM dcruzes@idi.ntnu.no; tore.dyba@sintef.no
CR Anderson Stuart, 2008, Health Res Policy Syst, V6, P7, DOI 10.1186/1478-4505-6-7
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2006, EVIDENCE BASED POLIC
   [Anonymous], 1967, DISCOVERY GROUNDED T
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], CRIT APPR SKILLS PRO
   [Anonymous], 1988, STAT POWER ANAL BEHA
   [Anonymous], RES POLICY
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Charters S., 2007, GUIDELINES PERFORMIN
   Cohen B., 1989, DEV SOCIOLOGICAL KNO
   Cooper HM., 2009, HDB RES SYNTHESIS ME, V2nd edn
   Cruzes Daniela, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P235
   Cruzes D, 2007, P INT C CHIL COMPUT, P105, DOI 10.1109/SCCC.2007.11
   Davis K, 2009, INT J NURS STUD, V46, P1386, DOI 10.1016/j.ijnurstu.2009.02.010
   Dixon-Woods M., 2007, Qualitative Research, V7, P375, DOI DOI 10.1177/1468794107078517
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Estabrooks C.A., 1994, QUAL HEALTH RES, V4, P503
   Franzosi Roberto., 2010, QUANTITATIVE NARRATI
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Hammersley M., 2002, Systematic or unsystematic: Is that the question? Some reflections on the science, art, and politics of reviewing research evidence
   Higgins JPT., 2008, COCHRANE HDB SYSTEMA, DOI DOI 10.1002/9780470712184
   Jorgensen M., 2005, 11 IEEE INT SOFTWARE, P8
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara., 2010, P 2010 ACM IEEE INT, P1
   Lipsey M., 2001, PRACTICAL METAANALYS
   Long A.F., 2004, INT J SOC RES METHOD, V7, P181, DOI [10.1080/1364557032000045302, DOI 10.1080/1364557032000045302]
   Mays N., 2005, Journal of Health Service Research Policy, V10, P6, DOI DOI 10.1258/1355819054308576
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Mulrow C., 1998, SYSTEMATIC REV SYNTH
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Olbrich SM, 2010, PROC IEEE INT CONF S
   Paterson B.L., 2001, Meta-study of qualitative health research: A practical guide to meta-analysis and meta-synthesis
   Pawson Ray, 2005, J Health Serv Res Policy, V10 Suppl 1, P21, DOI 10.1258/1355819054308530
   Pope C., 2007, Synthesizing qualitative and quantitative health research: A guide to methods
   Ragin C.C., 1987, The comparative method: moving beyond qualitative and quantitative strategies
   Robson C., 2002, Real world research
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sandelowski M, 1997, RES NURS HEALTH, V20, P365, DOI 10.1002/(SICI)1098-240X(199708)20:4<365::AID-NUR9>3.0.CO;2-E
   Sandelowski M., 2006, Handbook for Synthesizing Qualitative Research
   Schwandt Thomas., 1996, QUAL INQ, V2, P58
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Spencer L., 2004, QUALITY QUALITATIVE, V2nd
   Walsh D, 2006, MIDWIFERY, V22, P108, DOI 10.1016/j.midw.2005.05.004
   YIN RK, 1975, ADMIN SCI QUART, V20, P371, DOI 10.2307/2391997
NR 56
TC 189
Z9 198
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 440
EP 455
DI 10.1016/j.infsof.2011.01.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900003
DA 2024-07-18
ER

PT J
AU Al Dallal, J
   Briand, LC
AF Al Dallal, Jehad
   Briand, Lionel C.
TI An object-oriented high-level design-based class cohesion metric
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented software quality; Object-oriented design; Class
   cohesion; Fault prediction
ID QUALITY; SUITE
AB Context: Class cohesion is an important object-oriented software quality attribute. Assessing class cohesion during the object-oriented design phase is one important way to obtain more comprehensible and maintainable software. In practice, assessing and controlling cohesion in large systems implies measuring it automatically. One issue with the few existing cohesion metrics targeted at the high-level design phase is that they are not based on realistic assumptions and do not fulfill expected mathematical properties.
   Objective: This paper proposes a High-Level Design (HLD) class cohesion metric, which is based on realistic assumptions, complies with expected mathematical properties, and can be used to automatically assess design quality at early stages using UML diagrams.
   Method: The notion of similarity between pairs of methods and pairs of attribute types in a class is introduced and used as a basis to introduce a novel high-level design class cohesion metric. The metric considers method-method, attribute-attribute, and attribute-method direct and transitive interactions. We validate this Similarity-based Class Cohesion (SCC) metric theoretically and empirically. The former includes a careful study of the mathematical properties of the metric whereas the latter investigates, using four open source software systems and 10 cohesion metrics, whether SCC is based on realistic assumptions and whether it better explains the presence of faults, from a statistical standpoint, than other comparable cohesion metrics, considered individually or in combination.
   Results: Results confirm that SCC is based on clearly justified theoretical principles, relies on realistic assumptions, and is an early indicator of quality (fault occurrences).
   Conclusion: It is concluded that SCC is both theoretically valid and supported by empirical evidence. It is a better alternative to measure class cohesion than existing HLD class cohesion metrics. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Al Dallal, Jehad] Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
   [Briand, Lionel C.] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Briand, Lionel C.] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 Kuwait University; University of Oslo
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM jehad@cfw.kuniv.edu; briand@simula.no
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI03/07]
FX The authors would like to acknowledge the support of this work by Kuwait
   University Research Grant WI03/07. In addition, the authors would like
   to thank Professor Steve Counsell for his insightful comments that
   helped improve the paper, Walid Bahsow for developing the class cohesion
   measuring tool and Manal Al-Khousi, Saqiba Sulman, Sharefa Al-Kandari,
   Methayell Al-Mitrik, Maryam Al-Hasawi, and Amina Bin Ali for collecting
   the cohesion results.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   [Anonymous], J SYSTEMS S IN PRESS
   [Anonymous], ILLUSION
   [Anonymous], OPENBRAVO
   [Anonymous], ADDISON WESLEY OBJEC
   [Anonymous], P COMP SCI ITS APPL
   [Anonymous], INT J INFORM TECHNOL
   [Anonymous], 9 PANH C INF THESS G
   [Anonymous], JABREF
   [Anonymous], 1989, QUANTITATIVE APPL SO
   [Anonymous], GANTTPROJECT
   [Anonymous], IEEE T SOFT IN PRESS
   [Anonymous], UML UML RES PAG
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   [Anonymous], 2006, INT J INF THEOR APPL
   [Anonymous], ACM T SOFTW IN PRESS
   [Anonymous], P 1995 S SOFTW REUS
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Barnett V., 1984, OUTLIERS STAT DATA
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2002, PROG COMPREHEN, P33, DOI 10.1109/WPC.2002.1021308
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Emerson T. J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P294
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Jolliffe J., 1986, Principal component analysis
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   LAKHOTIA A, 1993, PROC INT CONF SOFTW, P35, DOI 10.1109/ICSE.1993.346057
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   PILONE D, 2005, UML 2 0 NUTSHELL, P234
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Snedecor GW, 1983, Statistical Methods, V6th
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Yourdon E., 1979, STRUCTURED DESIGN
NR 62
TC 58
Z9 60
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1346
EP 1361
DI 10.1016/j.infsof.2010.08.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200007
DA 2024-07-18
ER

PT J
AU Gorla, N
   Lin, SC
AF Gorla, Narasimhaiah
   Lin, Shang-Che
TI Determinants of software quality: A survey of information systems
   project managers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Factor analysis; Information systems projects; Software quality;
   Reliability; Maintainability; Usefulness
ID ORGANIZATIONAL CONTEXT; USER INVOLVEMENT; MCLEAN MODEL; SUCCESS;
   PERFORMANCE; VALIDATION; METRICS; DELONE; IMPACT; USAGE
AB Software quality is important for the success of any information systems (IS). In this research, we find the determinants of software quality. We used five attributes for software quality: system reliability, maintainability, ease of use, usefulness, and relevance. By surveying 112 IS project managers, we collected data about their perceptions on the software quality attributes and their determinants. We arrived at six factors through exploratory factor analysis. We determined the individual factors that impacted the software quality attributes; for example, reliability is associated with responsiveness of IS department; ease of use is influenced by the capabilities of users and attitude of management; and usefulness is impacted by capabilities of IS department and responsiveness of IS department. We show that organizational factors are more important than technical factors in impacting software quality in IS projects. We provide implications of our research to practice and to future research. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Gorla, Narasimhaiah] Amer Univ Sharjah, Dept MIS, Sharjah, U Arab Emirates.
   [Lin, Shang-Che] Cleveland State Univ, Dept Comp Informat Syst, Cleveland, OH 44115 USA.
C3 American University of Sharjah; University System of Ohio; Cleveland
   State University
RP Gorla, N (corresponding author), Amer Univ Sharjah, Dept MIS, POB 26666, Sharjah, U Arab Emirates.
EM ngorla@aus.edu
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 1995, Software Engineering
   [Anonymous], IEEE SOFTWARE MAR
   [Anonymous], 1989, Modern structured analysis
   BARKI H, 1994, MIS QUART, V18, P59, DOI 10.2307/249610
   BAROUDI JJ, 1986, COMMUN ACM, V29, P232, DOI 10.1145/5666.5669
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beaver J.M., 2006, SIGSOFT SOFTW ENG NO, V31, P1, DOI DOI 10.1145/1127878.1127882
   Belardo S., 1982, P 3 INT C INFORM SYS, P93
   BERMAN O, 1993, IEEE T SOFTWARE ENG, V19, P1119, DOI 10.1109/32.256858
   BLAYLOCK BK, 1984, DECISION SCI, V15, P74, DOI 10.1111/j.1540-5915.1984.tb01197.x
   BOEGH J, 1999, IEEE SOFTWARE    MAR, P69
   Boehm B, 2000, COMPUTER, V33, P94, DOI 10.1109/2.868706
   Boehm B., 1975, Practical Strategies for Developing Large Software Systems
   Bowerman BL., 1990, Linear statistical models: An applied approach
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   CERULLO MJ, 1980, J SYST MANAGE, V31, P10
   Chau PYK, 1997, MIS QUART, V21, P1, DOI 10.2307/249740
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DELONE WH, 1988, MIS QUART, V12, P51, DOI 10.2307/248803
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   EINDOR P, 1978, MANAGE SCI, V24, P1064, DOI 10.1287/mnsc.24.10.1064
   FRANZ CR, 1986, DECISION SCI, V17, P329, DOI 10.1111/j.1540-5915.1986.tb00230.x
   Glass RL, 1998, IEEE SOFTWARE, V15, P103, DOI 10.1109/52.676973
   Gopal A, 2005, IEEE T SOFTWARE ENG, V31, P679, DOI 10.1109/TSE.2005.95
   Gorla N, 1997, J SYST SOFTWARE, V36, P191, DOI 10.1016/0164-1212(95)00202-2
   GORLA N, 1991, INFORM SOFTWARE TECH, V33, P65, DOI 10.1016/0950-5849(91)90025-7
   *ISOIEC, 2001, 9126 ISOIEC
   IVES B, 1980, MANAGE SCI, V26, P910, DOI 10.1287/mnsc.26.9.910
   IVES B, 1983, COMMUN ACM, V26, P785, DOI 10.1145/358413.358430
   JAIN H, 1998, MIS Q, P1
   Kerlinger F.N., 1973, Foundations of behavioral research
   King W. R., 1996, Journal of Management Information Systems, V12, P35
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   LAUESEN S, 1998, IEEE SOFTWARE    JUL, P69
   LUCAS HC, 1975, MANAGE SCI B-APPL, V21, P908, DOI 10.1287/mnsc.21.8.908
   Luftman J, 2008, MIS Q EXEC, V7, P99
   Menard S., 1995, APPL LOGISTIC REGRES
   MILLER J, 1987, MIS QUART, V11, P107, DOI 10.2307/248832
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   MORGAN SP, 1988, J MARRIAGE FAM, V50, P929, DOI 10.2307/352104
   NICOLAOU AI, 1993, THESIS SO ILLINOIS U
   Nunally J.C., 1967, PSYCHOMETRIC THEORY
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   RAJESWARI KS, 2003, SIGMIS C APR, P34
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Roberts TL, 1998, IEEE T SOFTWARE ENG, V24, P640, DOI 10.1109/32.707699
   RUMBAUGH M, 1991, OBJECT ORIENTED MODE
   Seddon PB, 1997, INFORM SYST RES, V8, P240, DOI 10.1287/isre.8.3.240
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   SLEVIN DP, 1991, INFORM MANAGE, V21, P161, DOI 10.1016/0378-7206(91)90062-7
   SWANSON EB, 1974, MANAGE SCI B-APPL, V21, P178, DOI 10.1287/mnsc.21.2.178
   Tian J, 2004, IEEE SOFTWARE, V21, P84, DOI 10.1109/MS.2004.1293078
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Voas J., 2004, IT Professional, V6, P46, DOI 10.1109/MITP.2004.45
   WHITE KB, 1986, MIS QUART, V10, P215, DOI 10.2307/249253
NR 62
TC 42
Z9 48
U1 1
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 602
EP 610
DI 10.1016/j.infsof.2009.11.012
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 602PE
UT WOS:000278150500002
DA 2024-07-18
ER

PT J
AU Cuadrado-Gallego, JJ
   Buglione, L
   Domínguez-Alda, MJ
   de Sevilla, MF
   de Mesa, JAG
   Demirors, O
AF Cuadrado-Gallego, Juan J.
   Buglione, Luigi
   Dominguez-Alda, Maria J.
   Fernandez de Sevilla, Marian
   Antonio Gutierrez de Mesa, J.
   Demirors, Onur
TI An experimental study on the conversion between IFPUG and COSMIC
   functional size measurement units
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Functional size measurement (FSM); IFPUG; COSMIC;
   International Software Benchmarking Standards Group (ISBSG); Repository
AB The adoption of functional size measurement (FSM) methods in software organizations is growing. In particular, special attention is being paid to the COSMIC method, because of its novelties against 1st generation FSM methods such as IFPUG FPA. One of the main problems facing organizations wanting to use COSMIC is how to properly convert the software functional size of the projects in their portfolio measured by the previously adopted FSM method to the size measured by the new method.
   The objective of this paper is to find a sound mathematical basis for converting an IFPUG measurement to a COSMIC measurement.
   In the light of previously published researches, parallel measurements were performed to establish three new datasets (respectively composed by 21, 14 and 35 data points) and verified by an expert measurer, certified on both techniques. In order to obtain a more precise solution, the search for a mathematical relationship has been run using new nonlinear equation types.
   Results from the analysis confirmed an approximated conversion factor of 1:1. within a range between 0.9 and 1.1, but moving from a larger number of data points analyzed then in past studies.
   These results can be very useful for those companies starting to use their benchmarking databases populated in IFPUG FP units to projects measured in COSMIC FP. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Buglione, Luigi] Nexen Engn Grp, I-00148 Rome, Italy.
   [Cuadrado-Gallego, Juan J.; Dominguez-Alda, Maria J.; Fernandez de Sevilla, Marian; Antonio Gutierrez de Mesa, J.] Univ Alcala de Henares, Dept Ciencias Computac, Madrid 28805, Spain.
   [Cuadrado-Gallego, Juan J.; Buglione, Luigi] Univ Quebec, ETS, Montreal, PQ H3C 1K3, Canada.
   [Demirors, Onur] Middle E Tech Univ, Inst Informat, Dept Informat Syst, TR-06531 Ankara, Turkey.
C3 Universidad de Alcala; University of Quebec; Ecole de Technologie
   Superieure - Canada; University of Quebec Montreal; Middle East
   Technical University
RP Buglione, L (corresponding author), Nexen Engn Grp, Via R Morandi 32, I-00148 Rome, Italy.
EM luigi.buglione@computer.org
RI Buglione, Luigi/KFQ-4612-2024; Gutierrez-de-Mesa,
   Jose-Antonio/F-7640-2011
OI Demirors, Onur/0000-0001-6601-3937; Gutierrez-de-Mesa,
   Jose-Antonio/0000-0002-3073-4369
CR ABRAN A, 2005, P 15 INT WORKSH SOFT, P227
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], COMP STUDY CASE COSM
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 209262003 ISOIEC
   [Anonymous], 247502005 ISOIEC
   [Anonymous], 2009, COSMIC MEAS MAN VERS
   BUNDSHUH M, 2008, IT MEASUREMENT COMPE
   *COMM SOFTW MEAS I, 1999, COSMIC FFP MEAS MAN
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2008, J SYST SOFTWARE, V81, P661, DOI 10.1016/j.jss.2007.07.042
   Cuadrado-Gallego JJ, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P427, DOI 10.1109/SEAA.2008.75
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   DESHARNAIS JM, 2007, P 17 INT WORKSH SOFT, P130
   FETCKE T, 1999, 199920 U QUEB MONTR
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   IEEE, 1998, 8301998 IEEE
   *INT FUNCT POINT U, 1988, FUNCT POINT COUNT PR
   *INT FUNCT POINT U, 2004, FUNCT POINTS COUNT P
   *INT SOFTW BENCHM, 2005, REP REL 8
   *INT SOFTW BENCHM, 2009, REP REL 11
   *INT SOFTW BENCHM, 2007, REP REL 10
   *ISO IEC, 2002, 209682002 ISOIEC
   *ISO IEC, 2008, 298812008 ISOIEC
   ISO/IEC, 2007, ISO/IEC 14143-1:2007 Information technology-Software measurement-Functional size measurement
   *ISO IEC, 2003, 197612003 ISOIEC
   KHELIFI A, 2008, C REGISTRATION SYSTE
   SYMONS C, 1999, CONVERSION IFPUG V4
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   VOGELEZANG F, 2003, P 13 INT WORKSH SOFT, P232
NR 31
TC 25
Z9 25
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 347
EP 357
DI 10.1016/j.infsof.2009.12.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900007
DA 2024-07-18
ER

PT J
AU Anda, B
   Hansen, K
   Sand, G
AF Anda, Bente
   Hansen, Kai
   Sand, Gunhild
TI An investigation of use case quality in a large safety-critical software
   development project
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use case modelling; Software quality; Case study
ID STRUCTURED ABSTRACTS; KNOWLEDGE; TEXT
AB Use case modelling is a much-Used technique for eliciting and documenting functional requirements The. quality of the use cases may have an important impact on the development project and on the resulting software product. This paper presents an empirical study of the changes that were made to the use case models in a large software project during the analysis phase The results show (a) which were the most difficult aspects of use case modelling in this project and (b) how the qualify of the functional requirements, in particular correctness, completeness. and clarity, was improved through the use case modelling process. (C) 2009 Elsevier B.V All rights reserved.
C1 [Anda, Bente; Sand, Gunhild] Univ Oslo, NO-0316 Oslo, Norway.
   [Hansen, Kai] ABB Corp Res, NO-1375 Billingstad, Norway.
C3 University of Oslo; ABB
RP Anda, B (corresponding author), Univ Oslo, POB 1080, NO-0316 Oslo, Norway.
FU Norwegian Research Council
FX We acknowledge Ingolf Gullesen for his help with the data collection.
   This research was funded by the Norwegian Research Council through the
   project EVISOFT (EVidence based Improvement of SOFTware engineering).
CR *ABB GAT MOD PROD, 2001, 9AAD102113ABBGPPMI A
   Achour CB, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/ISRE.1999.777983
   Anda B., 2006, P 2006 ACM IEEE INT, P124, DOI [10.1145/1159733.1159754, DOI 10.1145/1159733.1159754]
   ANDA B, 2001, P 4 INT C UN MOD LAN
   Anda B., 2002, SEKE 02, P127
   ANDA B, 2001, P 15 EUR C OBJ OR PR, P402
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], P BEG BORR STEAL WOR
   [Anonymous], 2002, Use Case Modeling
   Armour F., 2000, ADV USE CASE MODELIN
   BENACHOUR C, 1999, INFORM MODELLING KNO, P152
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Caillies S, 2002, EUR J COGN PSYCHOL, V14, P267, DOI 10.1080/09541440143000069
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Hartley J, 1998, BRIT J EDUC PSYCHOL, V68, P443, DOI 10.1111/j.2044-8279.1998.tb01303.x
   Hartley J., 1997, Journal of Research in Reading, V20, P122, DOI DOI 10.1111/1467-9817.00025
   HORN RE, 1998, INSTRUCTIONAL DEV ST, P998
   Kitchenham BA, 2008, IET SOFTW, V2, P37, DOI 10.1049/iet-sen:20070044
   Kulak D., 2003, USE CASES REQUIREMEN, V2 nd
   Lilly S., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P174, DOI 10.1109/TOOLS.1999.787547
   McNamara DS, 1996, COGNITION INSTRUCT, V14, P1, DOI 10.1207/s1532690xci1401_1
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P69, DOI 10.1007/s11219-006-9006-z
   SAND G, 2006, RECOMMENDATIONS EVAL
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   TORNER F, 2006, P ACM IEEE INT S EMP, P115
   Yin R.K., 2011, Qualitative research from start to finish
NR 29
TC 22
Z9 22
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1699
EP 1711
DI 10.1016/j.infsof.2009.04.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 510ZR
UT WOS:000271133600006
DA 2024-07-18
ER

PT J
AU Mohagheghi, P
   Dehlen, V
   Neple, T
AF Mohagheghi, Parastoo
   Dehlen, Vegard
   Neple, Tor
TI Definitions and approaches to model quality in model-based software
   development - A review of literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic review; Modelling; Model quality; Model-driven development;
   UML
AB More attention is paid to the quality of models along with the growing importance of modelling in software development. We performed a systematic review of studies discussing model quality published since 2000 to identify what model quality means and how it can be improved. From forty studies covered in the review, six model quality goals were identified; i.e., correctness, completeness, consistency, comprehensibility, confinement and changeability. We further present six practices proposed for developing high-quality models together with examples of empirical evidence. The contributions of the article are identifying and classifying definitions of model quality and identifying gaps for future research. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Mohagheghi, Parastoo; Dehlen, Vegard; Neple, Tor] SINTEF, N-0314 Oslo, Norway.
C3 SINTEF
RP Mohagheghi, P (corresponding author), SINTEF, POB 124, N-0314 Oslo, Norway.
EM mohagheghi@sintef.no
FU Quality in Model-Driven Engineering; European Commission [034081]
FX This work has been funded by the Quality in Model-Driven Engineering
   project (cf. http://quality-mde.org/) at SINTEF and the European
   Commission within the 6th Framework Programme project MODELPLEX Contract
   Number 034081 (cf. http://www.modelplex.org). We thank Dr. Marcela
   Fabiana Genero Bocco and Dr. Michel Chaudron for their valuable comments
   arid suggestions.
CR Atkinson Colin., 2002, COMPONENT BASED PROD
   CONRADI R, 2003, LNCS, V2749, P483
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Harel D., 2000, Tech. rep. MCS00-16
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kelly S., 2008, Domain-Specific Modeling
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   MacDonald A, 2005, 2005 Australian Software Engineering Conference, Proceedings, P14, DOI 10.1109/ASWEC.2005.32
   MOHAGHEGHI P, 2007, LNCS, V5002, P275
   MOHAGHEGHI P, 2008, P 3 WORKSH QUAL MOD
   Mohagheghi P., 2007, INT WORKSH MOD SOFTW
   MOHAGHEGHI P, 2008, P NORD WORKSH MOD DR, P51
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   NETO AD, 2008, IEEE SOFTWARE, V23, P10
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P383, DOI 10.1007/s11219-007-9023-6
   RECH J, 2007, D 4 1 QUALITY DEFECT
   Rumbaugh James, 1999, The unified modeling language reference manual
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   WATSON A, 2008, EUROPEAN J INFORM PR, V9
   Yin R.K., 2011, Qualitative research from start to finish
NR 20
TC 71
Z9 75
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1646
EP 1669
DI 10.1016/j.infsof.2009.04.004
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Krishnamoorthi, R
   Mary, SASA
AF Krishnamoorthi, R.
   Mary, S. A. Sahaaya Arul
TI Factor oriented requirement coverage based system test case
   prioritization of new and regression test cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case prioritization; System testing; Regression testing; Severe
   faults; Customer satisfaction
AB Test case prioritization involves scheduling test cases in an order that increases the effectiveness in achieving some performance goals. One of the most important performance goals is the rate of fault detection. Test cases should run in an order that increases the possibility of fault detection and also that detects the most severe faults at the earliest in its testing life cycle. In this paper, we propose to put forth a model for system level test case prioritization (TCP) from software requirement specification to improve user satisfaction with quality software that can also be cost effective and to improve the rate of severe fault detection. The proposed model prioritizes the system test cases based on the six factors: customer priority, changes in requirement, implementation complexity, completeness, traceability and fault impact. The proposed prioritization technique is validated with two different validation techniques and is experimented in three phases with student projects and two sets of industrial projects and the results show convincingly that the proposed prioritization technique improves the rate of severe fault detection. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Krishnamoorthi, R.; Mary, S. A. Sahaaya Arul] Bharathidasan Inst Technol, Dept Informat Technol, Tiruchirappalli 24, Tamil Nadu, India.
RP Krishnamoorthi, R (corresponding author), Bharathidasan Inst Technol, Dept Informat Technol, Tiruchirappalli 24, Tamil Nadu, India.
EM samjessi@gmail.com
RI SAM, S.A.SahaayaArulMary/H-3129-2011
OI SAM, S.A.SahaayaArulMary/0000-0001-8509-4808; Ramasamy,
   Krishnamoorthy/0000-0003-1823-5855
CR [Anonymous], 1990, Software testing techniques {
   [Anonymous], STUD RES FOR 12 ACM
   [Anonymous], DOCT S INT C SOFTW E
   [Anonymous], INT C SOFTW ENG FUT
   [Anonymous], ACM INT S SOFTW TEST
   BAI WTX, 2001, IEEE T SOFTWARE ENG, P496
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   Boehm B.W., 2003, SIGSOFT Software Engineering Notes, V28, P1
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   El Bardai S, 2001, CLIN EXP HYPERTENS, V23, P329, DOI 10.1081/CEH-100102671
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   EMMA VR, 2005, FREE JAVA CODE COVER
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   HEINDL M, 2005, FDN SOFTWARE ENG, P60
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
NR 25
TC 47
Z9 51
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 799
EP 808
DI 10.1016/j.infsof.2008.08.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600009
DA 2024-07-18
ER

PT J
AU Staples, M
   Niazi, M
AF Staples, Mark
   Niazi, Mahmood
TI Systematic review of organizational motivations for adopting CMM-based
   SPI
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE CMM; CMMI; capability maturity model; software process improvement
ID SOFTWARE PROCESS IMPROVEMENT; PRACTITIONERS VIEWS
AB Background: Software Process Improvement (SPI) is intended to improve software engineering, but can only be effective if used. To improve SPI's uptake, we should understand why organizations adopt SPI. CMM-based SPI approaches are widely known and studied. Objective: We investigated why organizations adopt CMM-based SPI approaches, and how these motivations relate to organizations' size. Method: We performed a systematic review, examining reasons reported in more than forty primary studies. Results: Reasons usually related to product quality and project performance, and less commonly, to process. Organizations reported customer reasons infrequently and employee reasons very rarely. We could not show that reasons related to size. Conclusion: Despite its origins in helping to address customer-related issues for the USAF, CMM-based SPI has mostly been adopted to help organizations improve project performance and product quality issues. This reinforces a view that the goal of SPI is not to improve process per se, but instead to provide business benefits. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Staples, Mark] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
   [Staples, Mark] Natl ICT Australia, Eveleigh, NSW 1430, Australia.
   [Niazi, Mahmood] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
C3 University of New South Wales Sydney; NICTA; Keele University
RP Staples, M (corresponding author), Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
EM Mark.Staples@nicta.com.au; mkniazi@cs.keele.ac.uk
RI Niazi, Mahmood/C-8873-2015
OI Niazi, Mahmood/0000-0001-7318-7644
CR Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BASKERVILLE R, 1999, KNOWLEDGE CAPABILITY, V30, P26
   Boldyreff C, 1997, SOFTWARE QUAL J, V6, P99, DOI 10.1023/A:1018547615730
   CARTER L, 2002, CMUSEI2002TR007
   Casey V., 2004, Software Process Improvement and Practice, V9, P123, DOI 10.1002/spip.201
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Ebert C., 1998, Software Process Improvement and Practice, V4, P21, DOI 10.1002/(SICI)1099-1670(199803)4:1<21::AID-SPIP92>3.0.CO;2-Q
   Ebert C, 1999, J SYST SOFTWARE, V46, P25, DOI 10.1016/S0164-1212(98)10086-9
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   JUNG HW, 2001, SOFTWARE PROCESS IMP, V6, P205
   Kitchenham B., 2004, ARXIV
   McGuire E. G., 1996, Proceedings of the Twenty-Ninth Hawaii International Conference on System Sciences, P713, DOI 10.1109/HICSS.1996.495525
   Moore JW, 1996, COMMUN ACM, V39, P17, DOI 10.1145/232014.232020
   NELSON KM, 2001, P 34 HAW INT C SYST, P8047
   NIAZI M, 2005, PA005957 NAT ICT
   NIAZI N, 2004, THESIS U TECHNOLOGY
   O'Hara F., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P635, DOI 10.1109/ICSE.2000.870457
   Paulk M.C., 1998, JOIN 1998 P PACIFIC, P350
   PAULK MC, 1999, ASQ SOFTWARE QUALITY, V1, P19
   STAPLES M, 2007, IN PRESS J SYST SOFT
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Trienekens JJM, 2005, INFORM SOFTWARE TECH, V47, P67, DOI 10.1016/j.infsof.2004.06.003
NR 23
TC 76
Z9 91
U1 1
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 605
EP 620
DI 10.1016/j.infsof.2007.07.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000001
DA 2024-07-18
ER

PT J
AU Bechini, A
   Cimino, MGCA
   Marcelloni, F
   Tomasi, A
AF Bechini, Alessio
   Cimino, Mario G. C. A.
   Marcelloni, Francesco
   Tomasi, Andrea
TI Patterns and technologies for enabling supply chain traceability through
   collaborative e-business
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE traceability; inter-organizational systems; e-business; information
   systems; service oriented architecture; ebXML; Web Services
ID INFORMATION; SYSTEMS
AB Industrial traceability systems are designed to operate over complex supply chains, with a large and dynamic group of participants. These systems need to agree on processing and marketing of goods, information management, responsibility, and identification. In addition, they should guarantee context independence, scalability, and interoperability. In this paper, we first discuss the main issues emerging at different abstraction levels in developing traceability systems. Second, we introduce a data model for traceability and a set of suitable patterns to encode generic traceability semantics. Then, we discuss suitable technological standards to define, register, and enable business collaborations. Finally, we show a practical implementation of a traceability system through a real world experience on food supply chains. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Bechini, Alessio; Cimino, Mario G. C. A.; Marcelloni, Francesco; Tomasi, Andrea] Univ Pisa, Dipartimento Ingegneria Informazione Elettron I, I-56122 Pisa, Italy.
C3 University of Pisa
RP Bechini, A (corresponding author), Univ Pisa, Dipartimento Ingegneria Informazione Elettron I, Via Diotisalvi 2, I-56122 Pisa, Italy.
EM a.bechini@iet.unipi.it; m.cimino@iet.unipi.it;
   f.marcelloni@iet.unipi.it; a.tomasi@iet.unipi.it
RI tomasi, andrea/F-3733-2017; Bechini, Alessio/B-9356-2012; Cimino, Mario
   G. C. A./K-3669-2012; Bechini, Alessio/ABD-1212-2020; Marcelloni,
   Francesco/AAA-4495-2021; Bechini, Alessio/AGD-7668-2022
OI Bechini, Alessio/0000-0002-5951-1265; Cimino, Mario G. C.
   A./0000-0002-1031-1959; Bechini, Alessio/0000-0002-5951-1265;
   Marcelloni, Francesco/0000-0002-5895-876X; Bechini,
   Alessio/0000-0002-5951-1265
CR BINSTOCK C, 2003, XML SCHEMA COMPLETE
   Choudhury V, 1997, INFORM SYST RES, V8, P1, DOI 10.1287/isre.8.1.1
   DECASTRO M, 2003, P EFITA C DEBR HUNG, P607
   DEMELLO M, 2000, EFFECTS TRACEABILITY
   *EBXML, 2006, BUS PROC SPEC SCHEM
   Food Standards Agency UK, 2002, TRAC FOOD CHAIN PREL
   Gibbs B., 2002, EBXML CONCEPTS APPL
   Green PF, 2005, IEEE T KNOWL DATA EN, V17, P713, DOI 10.1109/TKDE.2005.79
   Gunasekaran A, 2004, EUR J OPER RES, V159, P269, DOI 10.1016/j.ejor.2003.08.016
   Hagel J., 2005, ONLY SUSTAINABLE EDG
   Hagel J.Arthur G. Armstrong., 1997, Net Gain: Expanding Markets through Virtual Communities
   Halevy AY, 2005, VLDB J, V14, P68, DOI 10.1007/s00778-003-0116-y
   HECKEL R, 2003, P WORKSH MOD DRIV AR, P115
   *HERM, 2006, MESS SERV HANDL
   Hofreiter B, 2002, PR GR LAK SYMP VLSI, P7, DOI 10.1109/RIDE.2002.995093
   HOGG K, 2004, P 27 C AUSTR COMP SC, V26, P331
   HORNBY RM, 1999, P IEE C RFID TECHN L
   *ISO, 2006, 8601 ISO
   *ISO, 2006, OFF WEBS
   Jansen-Vullers MH, 2003, INT J INFORM MANAGE, V23, P395, DOI 10.1016/S0268-4012(03)00066-5
   JENZ DE, 2002, EBXML WEB SERVICES F
   Jones S, 2005, IEEE SOFTWARE, V22, P87, DOI 10.1109/MS.2005.80
   Kim H. M., 1995, Proceedings of the Fourth Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises. WET ICE '95 (Cat. No.95TB8030), P105, DOI 10.1109/ENABL.1995.484554
   KOHLHOFF C, 2003, P WORLD WID WEB C WW
   Kotok Alan, 2001, ebXML: The New Global Standard for Doing Business over the Internet
   MALONE TW, 1987, COMMUN ACM, V30, P484, DOI 10.1145/214762.214766
   Meng B, 2004, INT C COMP SUPP COOP, P597, DOI 10.1109/CACWD.2004.1349094
   Ministry of Agriculture Forestry and Fisheries of Japan, 2003, GUID INTR FOOD TRAC
   *OASIS, 2006, UN DESCR DISC INT
   *OASIS, 2006, ORG ADV STRUCT INF S
   OPARA LU, 2004, EUR J OPER RES, V159, P269
   *ORACLE9I APPL SER, 2001, WEB SERV STRAT
   PAPE WR, 2004, DATA COLLECTION 1 MI, P14
   PAPE WR, 2003, SELECTING MOST APPRO, P21
   PAPE WR, 2004, LETS GET ANIMAL TRAC, P14
   Pham TT, 2003, IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE, P136, DOI 10.1109/COEC.2003.1210243
   Roberts B, 2005, INT FED INFO PROC, V186, P17
   Roussos G, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.88
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sahai A, 2005, NETW SYST MANAG, P1, DOI 10.1007/0-387-27597-5
   SILVA JP, 2003, BUSINESS EXCELLENCE, P706
   *SUN SERV REG, 2006, SERV OR ARCH
   *UBL, 2006, UBL SPEC V 1 0
   *UN CEFACT, 2006, UN CTR TRAD FAC EL B
   *UN EDIFACT, 2006, UN DIR EL DAT INT A
   Van Dorp C.A., 2003, P EFITA C DEBR HUNG, P601
   *XML, 2006, EXT MARK LANG
NR 47
TC 137
Z9 155
U1 1
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 342
EP 359
DI 10.1016/j.infsof.2007.02.017
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261UL
UT WOS:000253105400006
DA 2024-07-18
ER

PT J
AU Fortino, G
   Garro, A
   Russo, W
AF Fortino, Giancarlo
   Garro, Alfredo
   Russo, Wilma
TI Achieving Mobile Agent Systems interoperability through software
   layering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Parallel and Distributed Computing
   Systems
CY SEP 15-17, 2004
CL San Francisco, CA
SP Int Soc Comp & Their Applicat
DE Mobile Agent Systems; interoperability; agent models; proxy-based
   communication; frameworks; software layering
ID DESIGN
AB Interoperability is a key issue for a wider adoption of mobile agent systems (MASS) in heterogeneous and open distributed environments where agents, in order to fulfill their tasks, must interact with non-homogeneous agents and traverse different agent platforms to access remote resources. To date, while several approaches have been proposed to deal with different aspects of MAS interoperability, they all lack the necessary flexibility to provide an adequate degree of interoperability among the currently available MASS. In this paper, we propose an application-level approach grounded in the software layering concept, which enables execution, migration and communication interoperability between Java-based mobile agent systems, thus overcoming major setbacks affecting the other approaches currently proposed for supporting MAS interoperability. In particular, we define a Java-based framework, named JIMAF, which relies on an event-driven, proxy-based mobile agent model and supports interoperable mobile agents which can be easily coded and adapted to existing MASS without any modifications of the MAS infrastructures. Results from the performance evaluation of MAS interoperability was carried by using JIMAF atop Aglets, Ajanta, Grasshopper, and Voyager, demonstrating that the high-level JIMAF approach offers high efficacy while maintaining overhead at acceptable levels for target computing environments. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Fortino, Giancarlo; Garro, Alfredo; Russo, Wilma] Univ Calabria, Dipartimento Elettron Informat & Sistemist, I-87036 Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Fortino, G (corresponding author), Univ Calabria, Dipartimento Elettron Informat & Sistemist, Via P Bucci, I-87036 Arcavacata Di Rende, Italy.
EM g.fortino@unical.it; garro@unical.it; w.russo@unical.it
RI Russo, Wilma/M-1831-2015; Garro, Alfredo/M-4267-2015; Fortino,
   Giancarlo/J-2950-2017
OI Russo, Wilma/0000-0003-1452-5695; Garro, Alfredo/0000-0003-0351-0869;
   Fortino, Giancarlo/0000-0002-4039-891X
CR *AGL MOB AG SYST, 2002, DOC SOFTW
   *AJ MOB AG SYST, 2003, DOC SOFTW
   Bellavista P, 2000, DOA'00: INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS AND APPL ICATIONS, PROCEEDINGS, P283, DOI 10.1109/DOA.2000.874200
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   Braun P, 2004, LECT NOTES COMPUT SC, V3284, P127
   Braun P., 2005, MOBILE AGENTS BASIC
   BRAUN P, 2005, LNCS, V3744, P17
   Dikaiakos M., 2001, LECT NOTES COMPUTER, V2240, P244
   *FDN INT PHYS AG, 2004, DOC SPEC
   Fortino G, 2004, INFORM SOFTWARE TECH, V46, P907, DOI 10.1016/j.infsof.2004.04.005
   FORTINO G, 2002, P IEEE IPDPS 02 WORK, P1
   *GRASSH MOB AG SYS, 2003, IKV GMBH DOC SOFTW
   Gray RS, 2002, SOFTWARE PRACT EXPER, V32, P543, DOI 10.1002/spe.449
   GRAY RS, 2000, TR2000365 DARTM COLL
   Grimstrup A, 2002, LECT NOTES COMPUT SC, V2535, P106
   GSCHWIND T, 2000, P 6 ECOOP WORKSH MOB
   *JIMAF, 2006, JAV BAS INT MOB AG F
   Karnik NM, 1998, IEEE CONCURR, V6, P52, DOI 10.1109/4434.708256
   LABROU Y, 1999, P IEEE HAW INT C SYS
   Lakos J., 1996, LARGE SCALE C SOFTWA
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   LENTINI RP, 1998, P AAAI WORKSH SOFTW, P133
   Magnin L., 2002, P S APPL COMP SAC 02, P107
   *MASIF, 1998, MOB AG SYST INT FAC
   Milojicic D., 1999, PERSONAL TECHNOLOGIE, V2, P117
   Misikangas P., 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P4, DOI 10.1109/ICDCS.2000.840901
   *OBJ VOYAG, 2003, DOC SOFTW
   Picco GP, 2001, MICROPROCESS MICROSY, V25, P65, DOI 10.1016/S0141-9331(01)00099-0
   Pinsdorf U, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P238, DOI 10.1109/ECBS.2002.999845
   Silva AR, 2001, AUTON AGENT MULTI-AG, V4, P187, DOI 10.1023/A:1011443827037
   Suri N, 2000, LECT NOTES COMPUT SC, V1882, P2
   TJUNG D, 1999, P 1 INT WORKSH MOB A, P179
   Tripathi AR, 2002, J SYST SOFTWARE, V62, P123, DOI 10.1016/S0164-1212(01)00129-7
NR 33
TC 22
Z9 22
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 322
EP 341
DI 10.1016/j.infsof.2007.02.016
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 261UL
UT WOS:000253105400005
DA 2024-07-18
ER

PT J
AU Yates, DF
   Malevris, N
AF Yates, D. F.
   Malevris, N.
TI An objective comparison of the cost effectiveness of three testing
   methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE branch testing; JJ-path testing; JJ-pair testing; white box testing;
   collateral coverage; cost-effectiveness; structural testing
ID PROGRAM PATHS; RELIABILITY
AB Branch testing is a well established method for exercising software. JJ-path testing, whilst employed by some practitioners, is less popular, and the testing of JJ-pairs finds few adherents. In this paper an objective, practical study of the cost-effectiveness of these three testing methods is reported. Tile effectiveness of each method is assessed, in tile presence of infeasible paths, not only oil its ability to cover the specific structural element of code that it targets, but also on its ability to cover the structural elements targeted by the other two methods - the collateral coverage it achieves. The assessment is based on the results derived from experiments in which each of tile three methods is applied to 35 units of program code. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Athens Econ & Business, Dept Informat, Athens, Greece.
   Athens Univ Econ Bus, Dept Informat, Informat Syst & Databases Lab, Athens, Greece.
C3 Athens University of Economics & Business; Athens University of
   Economics & Business
RP Malevris, N (corresponding author), Univ Athens Econ & Business, Dept Informat, Athens, Greece.
EM ngm@aueb.gr
CR [Anonymous], 2001, STAND SOFTW COMP TES
   Bellman R., 1962, Applied Dynamic Programming
   Bertolino A, 1996, J SYST SOFTWARE, V35, P95, DOI 10.1016/0164-1212(95)00089-5
   BOEHM BW, 1997, COCOMO 2 MODEL DEFIN, V2
   BOFFEY TB, 1982, GRAPH THEORY RES
   BROWN JR, 1972, TRW557205 TRW SYST
   DREYFUS SE, 1969, OPER RES, V17, P395, DOI 10.1287/opre.17.3.395
   ESA, 1991, PSS050 ESA
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P962, DOI 10.1109/32.245738
   Gabow H. N., 1976, IEEE Transactions on Software Engineering, VSE-2, P227, DOI 10.1109/TSE.1976.233819
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Koutsikas C, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P466, DOI 10.1109/AICCSA.2001.934045
   Malaiya YK, 2002, IEEE T RELIAB, V51, P420, DOI 10.1109/TR.2002.804489
   MALEVRIS N, 1990, INFORM SOFTWARE TECH, V32, P115, DOI 10.1016/0950-5849(90)90110-D
   MALEVRIS N, 3 INT C REL QUAL SAF, P32
   *MIN DEF, 1997, 0055 MIN DEF
   NTAFOS SC, 1988, IEEE T SOFTWARE ENG, V14, P868, DOI 10.1109/32.6165
   PAIGE MR, 1977, IEEE T SOFTWARE ENG, V3, P386, DOI 10.1109/TSE.1977.231171
   PUTNAM L, 1997, IND STRENGTH SOFTWAR
   Shier D. R., 1976, Networks, V6, P205, DOI 10.1002/net.3230060303
   Sze SKS, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P327, DOI 10.1109/ISSRE.2000.885883
   White L., 1987, Advances in Computers, P26
   WOODWARD MR, 1984, TSI-TECH SCI INF, V3, P273
   WOODWARD MR, 1980, IEEE T SOFTWARE ENG, V6, P278, DOI 10.1109/TSE.1980.230473
   YATES DF, 1989, ACM SIGSOFT, V14, P48, DOI 10.1145/75309.75315
   YATES DF, 1995, SOFTWARE QUAL J, V4, P227, DOI 10.1007/BF01351925
   YATES DF, 1985, P 11 WORKSH GRAPH TH, P421
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 29
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 1045
EP 1060
DI 10.1016/j.infsof.2006.10.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100007
DA 2024-07-18
ER

PT J
AU Sinnema, M
   Deelstra, S
AF Sinnema, Marco
   Deelstra, Sybren
TI Classifying variability modeling techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE classification; software product family; variability management;
   variability modeling
ID SOFTWARE PRODUCT FAMILIES; FRAMEWORK
AB Variability modeling is important for managing variability in software product families, especially during product derivation. In the past few years, several variability modeling techniques have been developed, each using its own concepts to model the variability provided by a product family. The publications regarding these techniques were written from different viewpoints, use different examples, and rely on a different technical background. This paper sheds light on the similarities and differences between six variability modeling techniques, by exemplifying the techniques with one running example, and classifying them using a framework of key characteristics for variability modeling. It furthermore discusses the relation between differences among those techniques, and the scope, size, and application domain of product families. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
C3 University of Groningen
RP Sinnema, M (corresponding author), Univ Groningen, Dept Math & Comp Sci, POB 800, NL-9700 AV Groningen, Netherlands.
EM mail@msinnema.nl; mail@sybrendeelstra.nl
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Asikainen T, 2004, LECT NOTES COMPUT SC, V3014, P225
   ASIKAINEN T, 2004, MODELLING METHODS MA
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   BACHMANN F, 2001, P S SOFTW REUS SSR 0
   BASSETT PG, 1987, IEEE SOFTWARE, V4, P9, DOI 10.1109/MS.1987.231057
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   BECKER M, 2003, P 1 WORKSH SOFTW VAR
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   BONTEMPS Y, 2004, P WORKSH SOFTW VAR M
   BOSCH J, 2001, P 4 INT WORKSH PROD, P11
   BROWNSWORD L, 1996, CMUSEI96TR016
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Dashofy E., 2001, P WORK IEEE IFIP C S
   Deelstra S, 2004, LECT NOTES COMPUT SC, V3154, P165
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   GOMAA H, 2004, P HAW INT C SYST SCI
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   HALMANS G, 2003, SOFTWARE SYSTEMS MOD, V2, P15
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   JACOBSON I, 1997, ARCHITECTURE PROCESS
   Kang K.C., 1990, CMUSEI90TR021
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   KICZALES G., 1997, P ECOOP 1997
   Krueger C. W., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P37
   LICHTER H, 2003, VERGLEICH ANSATZEN F
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MYLLARNIEMI V, 2005, P CONF WORKSH IJCAI
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Riebisch M, 2003, LECT NOTES COMPUT SC, V3013, P165
   Schmid K, 2005, PROC INT CONF SOFTW, P544
   Schobbens P., 2006, P 14 IEEE INT REQ EN
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   SINNEMA M, 2006, P 13 ANN IEEE INT C
   Svahnberg M., 2005, SOFTWARE PRACTICE EX, V35, P1
   TRIGAUX JC, 2003, MODELLING VARIABILIT
   van der Hoek A, 2004, SCI COMPUT PROGRAM, V53, P285, DOI 10.1016/j.scico.2003.04.003
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   von der Massen T, 2004, LECT NOTES COMPUT SC, V3014, P168
   VONDERMASSEN T, 2002, P INT WORKSH REQ ENG
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   *WORLD WID WEB CON, XML PATH LANG XPATH
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 47
TC 91
Z9 98
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 717
EP 739
DI 10.1016/j.infsof.2006.08.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900002
DA 2024-07-18
ER

PT J
AU Nielson, SJ
   Knutson, CD
AF Nielson, Seth James
   Knutson, Charles D.
TI Design dysphasia and the pattern maintenance cycle
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE dysphasia; pattern maintenance cycle; multiparadigm
AB Software developers utilize design methods that enable them to manipulate conceptual structures that correlate to programming language features. However, programming languages and the programming paradigms they embody co-evolve over time. Within industrial and academic circles, for example, object-oriented programming has evolved and effectively replaced imperative programming. More recently, many object-oriented languages have assimilated features from other programming paradigms, evolving into multiparadigm languages we refer to as 'object-oriented plus-plus' or OO+ +. This language evolution may weaken the interface between design and implementation, introducing what we call 'design dysphasia'-a partial disability in the use of a programming language because of incongruous design methods. Software design patterns capture elements of reusable design within a specific context. When the programming languages that are part of pattern context evolve, patterns must adapt to the language change or they may reinforce design dysphasia in the practitioner. We assert that the current 'capture/recapture' pattern maintenance model is suboptimal for adapting patterns to language evolution and propose a new 'capture/modify/recapture' maintenance cycle as a more effective approach. We then suggest a concrete 'modify' phase for current patterns to be adapted to object-oriented based multiparadigm language trends. We present an OO+ + Iterator pattern as an example throughout. (c) 2005 Elsevier B.V. All rights reserved.
C1 Rice Univ, Comp Sci Dept, Houston, TX 77005 USA.
   Brigham Young Univ, Comp Sci Dept, Provo, UT 84601 USA.
C3 Rice University; Brigham Young University
RP Nielson, SJ (corresponding author), Rice Univ, Comp Sci Dept, Houston, TX 77005 USA.
EM sethn@cs.rice.edu; knutson@cs.byu.edu
CR AMBLER AL, 1992, IEEE COMPUT, V25, P28
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1995, DESIGN PATTERN ELEME
   Chen YF, 2005, IEEE SOFTWARE, V22, P72, DOI 10.1109/MS.2005.55
   DVORAK J, 1994, COMPUTER, V27, P59, DOI 10.1109/2.294856
   GABRIEL R, 1996, PATTERN LANGUAGES PR
   Goldfedder Brandon, 2002, JOY PATTERNS USING P
   HELM R, 1995, P C OBJ OR PROGR SYS, P337
   KNUTSON CD, 1998, THESIS OREGON STATE
   KNUTSON CD, 1996, 966014 OR STAT U
   KNUTSON CD, P 3 ANN C PATT LANG
   Mitchell W., 2001, JCSC, V16, P94
   NIELSON S, 2004, P WORKSH MULT PROGR, P337
   Pickett J.H., 2000, The American Heritage Dictionary of the English Language, VFourth
   RISING L, 1998, PATTERN HDB TECHNIQU
   *RMA, 1984, THESIS SARDAR PATEL
   Smaragdakis Y, 2002, SOFTWARE PRACT EXPER, V32, P1015, DOI 10.1002/spe.473
   SMARAGDAKIS Y, LOGIC PROGRAMMING CP
   [No title captured]
NR 19
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 660
EP 675
DI 10.1016/j.infsof.2005.07.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700003
DA 2024-07-18
ER

PT J
AU Kruck, SE
AF Kruck, SE
TI Testing spreadsheet accuracy theory
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE theory testing; spreadsheet accuracy; spreadsheet development
ID USERS
AB Electronic spreadsheets are used extensively to support financial analysis and problem solving processes; however, research has revealed that experienced professionals and students make many errors when developing spreadsheets. Practitioners recognize the importance of accuracy and have published many techniques for improving the accuracy of their spreadsheets. Their prescriptions and results of research are consistent and together these works form the basis for spreadsheet accuracy theory. Three propositions describe how the three constructs influence spreadsheet accuracy in a laboratory experiment. The results of this study indicate that the Spreadsheet Accuracy Theory developed three aids that significantly improve development of accurate spreadsheets. (c) 2005 Elsevier B.V. All rights reserved.
C1 James Madison Univ, Coll Business, Comp Informat Syst Dept, Harrisonburg, VA 22807 USA.
C3 James Madison University
RP Kruck, SE (corresponding author), James Madison Univ, Coll Business, Comp Informat Syst Dept, MSC0202, Harrisonburg, VA 22807 USA.
EM kruckse@jmu.edu
CR Anderson K., 1988, Journal of Accounting and EDP, V3, P42
   [Anonymous], 1991, Design and Analysis: A Researchers Handbook
   [Anonymous], SPSS GUIDE DATA ANAL
   BEWIG PL, 2003, J ACCOUNTANCY, V196, P68
   BROWN PS, 1987, ACM T INFORM SYST, V5, P258, DOI 10.1145/27641.28058
   BUTLER RJ, 2000, P 33 HAW INT C SYST
   CALLAHAN T, 2002, ACCOUNTANCY ACCOUNTI, V194, P59
   CONNORS S, 1983, MANAGE ACCOUNTING, P62
   CONNORS S, 1984, MANAGE ACCOUNTING, P16
   CRAGG PB, 1993, J OPER RES SOC, V44, P743, DOI 10.1057/jors.1993.133
   CREETH R, 1985, J ACCOUNTANCY, V159, P90
   CUSTOMS HM, 2001, CUSTOMS EXCISE COMPU
   Davis N., 1987, AUSTR ACCOUNTANT DEC, P54
   DAVIS P, 1997, TECHNOLOGICAL HORIZO, P74
   EDGE WR, 1990, INTERNAL AUDITOR, P35
   HAIR JF, 1995, MULTIVARIATE DATA AN
   HASSINEN K, 1988, EXPT STUDY SPREADSHE
   Heagy C., 1988, ISSUES ACCOUNTING ED, V88, P96
   Heagy C.D., 1994, Journal of Accounting Education, V12, P205
   HICKS L, 1995, CAPITAL BUDGETING SP
   Janvrin D., 1996, Proceedings of the Twenty-Ninth Hawaii International Conference on System Sciences, P346, DOI 10.1109/HICSS.1996.495418
   KLOBAS J, 2004, J INFORMATION SYSTEM, P427
   Kruck Susan E, 2001, J INFORM SYSTEMS ED, V12, P93, DOI 10.4018/joeuc.2014010103
   KRULL A, 1989, EDPACS, V16, P10
   LEE DMS, 1986, MIS QUART, V10, P313, DOI 10.2307/249183
   MINGERS J, 1991, J OPER RES SOC, V42, P375, DOI 10.1038/sj/jors/0420504
   Morrison M., 2002, Journal of End User Computing, V14, P51, DOI 10.4018/joeuc.2002070104
   PANKO R., 1995, INFORMATION WEEK MAY, P100
   Panko R. R., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P4, DOI 10.1109/HICSS.1994.323505
   Panko R. R., 1996, P 29 HAW INT C SYST, P356, DOI 10. 1109/ HICSS. 1996. 495419
   Panko RR, 1998, DECIS SUPPORT SYST, V22, P337, DOI 10.1016/S0167-9236(97)00038-9
   Panko RR, 1999, J MANAGE INFORM SYST, V16, P159, DOI 10.1080/07421222.1999.11518250
   PANKO RR, 1997, OFFICE SYSTEMS RES J, P15
   SCHULTHEIS R, 1994, J END USER COMPUTING, V6, P1
   Simkin M. G., 2004, J ACCOUNTANCY, V197, P62
   SIMKIN MG, 1987, J ACCOUNTANCY, V164, P130
   Teo T.S. H., 1999, Accounting, Management, and Information Technologies, V9, P141, DOI DOI 10.1016/S0959-8022(99)00006-5
   Teo TSH, 2001, OMEGA-INT J MANAGE S, V29, P445, DOI 10.1016/S0305-0483(01)00037-8
   Tukiainen M, 2001, INTERACT COMPUT, V13, P427, DOI 10.1016/S0953-5438(00)00048-5
   Waller T., 1985, Journal of Accounting Education, V3, P31, DOI [DOI 10.1016/0748-5751(85)90004-1, 10.1016/0748-5751(85)90004-1]
   WATT P, 1985, GOVT FINANCE REV, P32
   YOON Y, 1995, FINANCIAL PRACTICE E, P143
   Zhao JJ, 1997, J COMPUT INFORM SYST, V37, P24
   1984, BUSINESS WEEK   0924, P94
NR 44
TC 18
Z9 21
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 204
EP 213
DI 10.1016/j.infsof.2005.04.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027SZ
UT WOS:000236437200006
DA 2024-07-18
ER

PT J
AU Folmer, E
   van Welie, M
   Bosch, J
AF Folmer, E
   van Welie, M
   Bosch, J
TI Bridging patterns: An approach to bridge gaps between SE and HCI
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineering; HCI; interaction design patterns; software
   architecture
AB Adding usability improving solutions during late stage development is to some extent restricted by the software architecture. However, few software engineers and human-computer interaction engineers are aware of this important constraint and as a result avoidable rework is frequently necessary. In this paper we present a new type of pattern called a bridging pattern. Bridging patterns extend interaction design patterns by adding information on how to generally implement this pattern. Bridging patterns can be used for architectural analysis: when the generic implementation is known, software architects can assess what it means in their context and can decide whether they need to modify the software architecture to support these patterns. This may prevent part of the high costs incurred by adaptive maintenance activities once the system has been implemented and leads to architectures with better support for usability. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
   Vrije Univ Amsterdam, Fac Sci, Dept Comp Sci, Amsterdam, Netherlands.
   Satama Interact, Amsterdam, Netherlands.
C3 University of Groningen; Vrije Universiteit Amsterdam
RP Univ Groningen, Dept Math & Comp Sci, POB 800, NL-9700 AV Groningen, Netherlands.
EM mail@eelke.com; email@eelke.com; jan.bosch@cs.rug.nl
CR ABOWD GD, 1992, INTERACT COMPUT, V4, P317, DOI 10.1016/0953-5438(92)90021-7
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   BASS L, 2001, CMUSEI2001TR005
   Berlage T.A., 1994, ACM Transactions on Computer-Human Interaction, V1, P269
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BUSCHMANN F, 1995, DESIGN PATTERNS ELEM
   CARROLL JM, 1994, INT J HUM-COMPUT ST, V41, P243, DOI 10.1006/ijhc.1994.1058
   CONSTANTINE LL, 2003, P ICSE WORKSH BRIDG
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   DUYNE DKV, 2002, DESIGN SITES PATTERN
   FERRE X, 2003, P ICSE WORKSH BRIDG
   Folmer E., 2003, Software Process Improvement and Practice, V8, P67, DOI 10.1002/spip.171
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   FOLMER E, 2005, 14 INT C INF SYST DE
   Folmer E., 2004, P 9 IFIP WORK C ENG, P321
   FOWLER M, WHO NEEDS ARCHITECT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma E., 1994, ANAL PATTERNS REUSAB
   GRANLUND A, 2001, P 9 INT C HUM COMP I
   IEEE Architecture Working Group, 1998, P1471D41 IEEE
   JEZIERSKI E, USER INTERFACE PROCE
   Laakso SariA., 2003, User Interface Design Patterns
   *LANC U, POINTER PATT INT COL
   Landauer T.K., 1996, TROUBLE COMPUTERS US
   MERCAY J, BOOST STRUTS XSLT XM
   MILEWSKI A, 2003, P ICSE WORKSH BRIDG
   Perzel K., 1999, P PATT LANG PROGR C
   *POINT, POINTER INT COLL
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   RAUSCHENBERGER J, SECURE YOUR WEB SITE
   RESSEL M, 1999, P ACM C SUPP GROUP W, P131
   SESHADRI G, JAVASERVER PAGES MOD
   SUN C, 2000, P ACM C COMP SUPP CO, P191
   Tidwell J., Common ground: A pattern language for human-computer interface design
   Tidwell J., 1998, P C PATT LANG PROGR
   TRAETTEBERG H, 2000, P WORKSH US INT DES
   *UK US GROUP U BRI, BRIGHT US PATT COLL
   van der Aalst W.M.P., WORKFLOW PATTERNS
   WALENSTEIN A, 2003, P ICSE 2003 WORKSH B, P92
   WELIE M, GUI DESIGN PATTERNS
   Welie M., 2000, P 7 C PATT LANG PROG
   WILLSHIRE M, 2003, P ICSE WORKSH BRIDG
   ZHOU C, 1997, P IFIP TC13 INT C HU, P252
NR 43
TC 32
Z9 40
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2006
VL 48
IS 2
BP 69
EP 89
DI 10.1016/j.infsof.2005.02.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OD
UT WOS:000234398100001
DA 2024-07-18
ER

PT J
AU Gremme, G
   Brendel, V
   Sparks, ME
   Kurtz, S
AF Gremme, G
   Brendel, V
   Sparks, ME
   Kurtz, S
TI Engineering a software tool for gene structure prediction in higher
   organisms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE computational biology; genome annotation; similarity-based gene
   structure prediction; intron cutout technique; incremental updates
ID SPLICED ALIGNMENT; MESSENGER-RNA; CDNA; PROGRAM
AB The research area now commonly called 'bioinformatics' has brought together biologists, computer scientists, statisticians, and scientists of many other fields of expertise to work on computational solutions to biological problems. A large number of algorithms and software packages are freely available for many specific tasks, such as sequence alignment, molecular phylogeny reconstruction, or protein structure determination. Rapidly changing needs and demands on data handling capacity challenge the application providers to consistently keep pace. In practice, this has led to many incremental advances and re-writing of code that present the user community with confusing options and a large overhead from nonstandardized implementations that need to be integrated into existing work flows. This situation gives much scope for contributions by software engineers. In this article, we describe an example of engineering a software tool for a specific bioinformatics task known as spliced alignment. The problem was motivated by disabling limitations in an original, ad hoc, and yet widely popular implementation by one of the authors. The present collaboration has led to a robust, highly versatile, and extensible tool (named GenomeThreader) that not only overcomes the limitations of the earlier implementation but greatly improves space and time requirements. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Hamburg, Zentrum Bioinformat, D-20146 Hamburg, Germany.
   Iowa State Univ, Dept Stat, Ames, IA 50011 USA.
   Iowa State Univ, Dept Genet Dev & Cell Biol, Ames, IA 50011 USA.
C3 University of Hamburg; Iowa State University; Iowa State University
RP Univ Hamburg, Zentrum Bioinformat, Bundesstr 43, D-20146 Hamburg, Germany.
EM kurtz@zbh.uni-hamburg.de
OI Sparks, Michael/0000-0001-6251-8559
CR Abouelhoda M. I., 2004, Journal of Discrete Algorithms, V2, P53, DOI 10.1016/S1570-8667(03)00065-0
   Alberts B., 2002, MOL BIOL CELL
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Bentley JL, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P360
   Birney E, 2004, GENOME RES, V14, P988, DOI 10.1101/gr.1865504
   Brendel V, 2004, BIOINFORMATICS, V20, P1157, DOI 10.1093/bioinformatics/bth058
   Collins FS, 2004, NATURE, V431, P931, DOI 10.1038/nature03001
   Cormen T.H., 1990, Introduction to Algorithms
   Feingold EA, 2004, SCIENCE, V306, P636, DOI 10.1126/science.1105136
   Florea L, 1998, GENOME RES, V8, P967, DOI 10.1101/gr.8.9.967
   Haas BJ, 2003, NUCLEIC ACIDS RES, V31, P5654, DOI 10.1093/nar/gkg770
   Kanz C, 2005, NUCLEIC ACIDS RES, V33, pD29, DOI 10.1093/nar/25.1.7
   Kent WJ, 2002, GENOME RES, V12, P656, DOI [10.1101/gr.229202, 10.1101/gr.229202. Article published online before March 2002]
   Kurtz S, 2001, NUCLEIC ACIDS RES, V29, P4633, DOI 10.1093/nar/29.22.4633
   Lewin B., 2004, GENES-BASEL
   Powell DR, 1999, INFORM PROCESS LETT, V70, P127, DOI 10.1016/S0020-0190(99)00053-8
   Shibuya T, 2003, LECT N BIOINFORMAT, V2812, P462
   Sparks ME, 2005, BIOINFORMATICS, V21, P20, DOI 10.1093/bioinformatics/bti1205
   Stein LD, 2002, GENOME RES, V12, P1599, DOI 10.1101/gr.403602
   Usuka J, 2000, BIOINFORMATICS, V16, P203, DOI 10.1093/bioinformatics/16.3.203
   Wheelan SJ, 2001, GENOME RES, V11, P1952, DOI 10.1101/gr.195301
   Wheeler DL, 2005, NUCLEIC ACIDS RES, V33, pD39, DOI 10.1093/nar/gki062
   Wu TD, 2005, BIOINFORMATICS, V21, P1859, DOI 10.1093/bioinformatics/bti310
NR 23
TC 205
Z9 226
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 965
EP 978
DI 10.1016/j.infsof.2005.09.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 998MH
UT WOS:000234322400003
DA 2024-07-18
ER

PT J
AU Shull, F
   Cruzes, D
   Basili, V
   Mendonça, M
AF Shull, F
   Cruzes, D
   Basili, V
   Mendonça, M
TI Simulating families of studies to build confidence in defect hypotheses
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SOFTWARE; VISUALIZATION
AB While it is clear that there are many sources of variation from one development context to another, it is not clear a priori what specific variables will influence the effectiveness of a process in a given context. For this reason, we argue that knowledge about software process must be built from families of studies, in which related studies are run within similar contexts as well as very different ones. Previous papers have discussed how to design related studies so as to document as precisely as possible the values of likely context variables and be able to compare with those observed in new studies. While such a planned approach is important, we argue that an opportunistic approach is also practical. The approach would combine results from multiple individual studies after the fact, enabling recommendations to be made about process effectiveness in context.
   In this paper, we describe two processes with which we have been working to build empirical knowledge about software development processes: one is a manual and informal approach, which relies on identifying common beliefs or 'folklore' to identify useful hypotheses and a manual analysis of the information in papers to investigate whether there is support for those hypotheses; the other is a formal approach based around encoding the information in papers into a structured hypothesis base that can then be searched to organize hypotheses and their associated support. We test these processes by applying them to build knowledge in the area of defect folklore (i.e. commonly accepted heuristics about software defects and their behavior). We show that the formal methodology can produce useful and feasible results, especially when it is compared to the results output from the more manual, expert-based approach. The formalized approach, by relying on a reusable hypothesis base, is repeatable and also capable of producing a more thorough basis of support for hypotheses, including results from papers or articles that may have been overlooked or not considered by the experts. (c) 2005 Elsevier B.V. All rights reserved.
C1 Fraunhofer Ctr Maryland, College Pk, MD 20740 USA.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Univ Salvador, UNIFACS, Comp Networks Res Grp, NUPERC, BR-41950275 Salvador, BA, Brazil.
C3 University System of Maryland; University of Maryland College Park;
   Universidade Salvador (UNIFACS)
RP Fraunhofer Ctr Maryland, 4321 Hartwick Rd,Suite 500, College Pk, MD 20740 USA.
EM fshull@fc-md.umd.edu; daniela@unifacs.br; basili@cs.umd.edu;
   mgmn@unifacs.br
RI Shull, Forrest/GZK-6750-2022; Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665
CR ASGARI S, 2005, P WORKSH SOFTW ENG H
   BASILI RV, 1981, P 5 INT C SOFTW ENG, P314
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BELL SM, 1976, LANCET, V2, P61
   BRIAN M, 1990, UIUCDCSR901651 U ILL
   Brooks A., 1996, ISERN9610 U STRATHCL
   DNIESTROWSKI A, 1978, P 3 INT C SOFTW ENG, P124
   Endres Albert., 1975, Proceedings: International Conference on Reliable Software, P327
   GAY LR, 1996, ED RES COMPETENCIES, P61
   GLASS L, 1981, IEEE T SOFTWARE ENG
   *IEEE, 1987, SOFTW ENG STAND
   Keim DA, 2002, IEEE T VIS COMPUT GR, V8, P1, DOI 10.1109/2945.981847
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KLEIN M, 2003, WORKSH ONT INF SHAR
   LIPOW AM, 1979, J SYST SOFTWARE, V19, P71
   Mashiko Y, 1997, J SYST SOFTWARE, V36, P17, DOI 10.1016/0164-1212(95)00194-8
   MILLER J, 2005, IST, V47, P204
   NOY FN, 2005, ONTOLOGY ALINMENT AN
   OLIVEIRA MCF, 2003, IEEE T VISUALIZATION, V9, P378, DOI DOI 10.1109/TVCG.2003.1207445
   OSTRAND TJ, 1984, J SYST SOFTWARE, V4, P289, DOI 10.1016/0164-1212(84)90028-1
   POTIER D, 1982, P 6 INT C SOFTW ENG, P94
   ROMBACH HD, 1987, C SOFTW MAINT AUST T
   RUBEY JR, 1975, SIGPLAN NOTICES, V10, P246
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   SELBY WR, 1988, P C SOFTW MAINT PHOE
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   SHNEIDERMAN B, 1992, ACM T GRAPHIC, V11, P92, DOI 10.1145/102377.115768
   SHNEIDERMAN B, 1991, P IEEE INFORM VISUAL, P275
   VISSER RS, 1997, AAAI 1997 SPRING S O
   WEISS DM, 1985, IEEE T SOFTWARE ENG, V11, P157, DOI 10.1109/TSE.1985.232190
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
NR 33
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 1019
EP 1032
DI 10.1016/j.infsof.2005.09.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 998MH
UT WOS:000234322400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nelson, MA
   Nelson, T
   Alencar, P
   Cowan, D
AF Nelson, MA
   Nelson, T
   Alencar, P
   Cowan, D
TI An approach to formal automated analysis of problem-frame concerns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE problem frames; formal analysis; concerns; composition; alloy
AB We present an approach to performing automated formal analysis of the concerns found in descriptions that follow the problem-frames technique. The descriptions of the problem domains, machine and requirements are written in a formal language. The approach is explained through a case study using the Alloy language. We show that an evaluation of results and counter-examples provided by a model checker can reveal useful information that can help remove inconsistencies as well as composition errors. (c) 2005 Elsevier B.V. All rights reserved.
C1 Aspectos Consulting, Belo Horizonte, MG, Brazil.
   Pontificia Univ Catolica Minas Gerais, Inst Informat, Belo Horizonte, MG, Brazil.
   Univ Waterloo, Comp Syst Grp, Waterloo, ON, Canada.
C3 Pontificia Universidade Catolica de Minas Gerais; University of Waterloo
RP Nelson, T (corresponding author), Aspectos Consulting, Belo Horizonte, MG, Brazil.
EM guta@pucminas.br; tpnelson@gmail.com; palencar@csg.uwaterloo.ca;
   dcowan@csg.uwaterloo.ca
CR [Anonymous], 2000, PROBLEM FRAMES ANAL
   Bjorner D, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P263, DOI 10.1109/ICFEM.1997.630433
   *CTRL GROUP, 1993, RAISE SPEC LANG
   HALL JG, 2002, P IEEE JOINT INT C R
   Hoare CAR., 1985, Communicating Sequential Processes
   Holzmann G J., 1990, Design and Validation of Protocols
   HOLZMANN GJ, 1994, BASIC SPIN MANUAL TE
   Jackson D., 2002, Micromodels of Software: Lightweight Modelling and Analysis with Alloy
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   LI Z, 2004, P 1 INT WORKSH APPL, P49
   NELSON MAV, 2003, THESIS U WATERLOO WA
   NELSON TP, 2003, THESIS U WATERLOO WA
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Zave P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P379, DOI 10.1145/158431.158438
NR 14
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2005
VL 47
IS 14
BP 913
EP 927
DI 10.1016/j.infsof.2005.08.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 995CB
UT WOS:000234076400003
DA 2024-07-18
ER

PT J
AU Baudry, B
   Le Traon, Y
AF Baudry, B
   Le Traon, Y
TI Measuring design testability of a UML class diagram
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented software measurement; UML; object-oriented testing;
   software design quality; testability; anti-patterns
ID SOFTWARE; FRAMEWORK
AB Design-for-testability is a very important issue in software engineering. It becomes crucial in the case of OO designs where control flows are generally not hierarchical, but are diffuse and distributed over the whole architecture. In this paper, we concentrate on detecting, pinpointing and suppressing potential testability weaknesses of a UML class diagram. The attribute significant from design testability is called 'class interaction' and is generalized in the notion of testability anti-pattern: it appears when potentially concurrent client/supplier relationships between classes exist in the system. These interactions point out parts of the design that need to be improved, driving structural modifications or constraints specifications, to reduce the final testing effort. In this paper, the testability measurement we propose counts the number and the complexity of interactions that must be covered during testing. The approach is illustrated on application examples. (c) 2005 Elsevier B.V. All rights reserved.
C1 France Telecom R&D, F-22307 Lannion, France.
   IRISA, F-35042 Rennes, France.
C3 Orange SA; Universite de Rennes
RP France Telecom R&D, 2 Ave Pierre Marzin, F-22307 Lannion, France.
EM benoit.baudry@irisa.fr; yves.letraon@rd.francetelecom.com
RI LE TRAON, Yves/T-2911-2019
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   AKIF K, 2001, P ECOOP 01 EUR C OBJ, P381
   Alexander RT, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2000.885857
   [Anonymous], PERFORMING DATA FLOW
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Baudry B, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P272, DOI 10.1109/METRIC.2001.915535
   BIEMAN JM, 1989, ACM SIGSOFT, V14, P179, DOI 10.1145/75309.75329
   BINDER RV, 1994, COMMUN ACM, V37, P87, DOI 10.1145/182987.184077
   Briand LC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ISSRE.2001.989482
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Correa AL, 2000, LECT NOTES COMPUT SC, V1844, P336
   FENTON NE, 1986, COMPUT J, V29, P330, DOI 10.1093/comjnl/29.4.330
   Fowler M, 2001, IEEE SOFTWARE, V18, P102, DOI 10.1109/MS.2001.936226
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jézéquel JM, 2001, IEEE SOFTWARE, V18, P76, DOI 10.1109/MS.2001.936221
   JEZEQUEL JM, 1999, DESIGN PATTERNS CONT, P348
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Le Traon Y, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P162, DOI 10.1109/ISSRE.2000.885869
   LeTraon Y, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P91, DOI 10.1109/METRIC.1997.637169
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   SHEPPERD M, 1993, DERIVATION VALIDATIO, P167
   SHEPPERD M, OBJECT ORIENTED METR
   SHYAM SR, 1994, IEEE T SOFTWARE ENG, V20, P476
   VOAS JM, 1993, J SYST SOFTWARE, V20, P207, DOI 10.1016/0164-1212(93)90064-5
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Weide BW, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P62, DOI 10.1109/ICSR.1996.496114
NR 32
TC 19
Z9 26
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2005
VL 47
IS 13
BP 859
EP 879
DI 10.1016/j.infsof.2005.01.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 974GF
UT WOS:000232578600003
DA 2024-07-18
ER

PT J
AU Kim, SD
   Her, JS
   Chang, SH
AF Kim, SD
   Her, JS
   Chang, SH
TI A theoretical foundation of variability in component-based development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE component-based development; variability; theoretical foundation
AB Component-Based Development (CBD) is revolutionizing the process of building applications by assembling pre-built reusable components. Components should be designed more for inter-organizational reuse, rather than intra-organization reuse through domain analysis which captures the commonality of the target domain. Moreover, the minor variations within the commonality should also be modeled and reflected in the design of components so that family members can effectively customize the components for their own purpose. To carry out domain analysis effectively and design widely reusable components, precise definitions of variability-related terms and a classification of variability types must be made. In this paper, we identify the fundamental difference between conventional variability and component variability, and present five types of variability and three kinds of variability scopes. Each type of variability is precisely defined for its applicable situations and guidelines. Having a formal view on variability, not only the domain analysis but also component customization can be effectively carried out in a precise manner. (C) 2004 Elsevier B.V. All rights reserved.
C1 Soongsil Univ, Dept Comp Sci, Seoul 156743, South Korea.
C3 Soongsil University
RP Kim, SD (corresponding author), Soongsil Univ, Dept Comp Sci, Seoul 156743, South Korea.
EM sdkim@comp.ssu.ac.kr; jsher@otlab.ssu.ac.kr; shchang@otlab.ssu.ac.kr
RI Chang, Shun-Hsyung/AAL-4870-2021
OI Chang, Shun-Hsyung/0000-0002-9836-3234
CR [Anonymous], 1992, AM HERITAGE DICT ENG, V3rd
   Atkinson C., 2001, COMPONENT BASED PROD
   BACHMANN F, 2001, MANAGING VARIABILITY
   BECKER M, 2002, LECT NOTES COMPUTER, V2290
   COPLIEN J, 1998, IEEE SOFTWARE    NOV
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   GEYER L, 2002, LECT NOTES COMPUTER, V2379
   GRISS M, 2001, COMPONENT BASED SOFT, pCH22
   Jacobson Ivar., 1997, SOFTWARE REUSE
   Kang Kyo C, 1990, Technical Report
   KIM S, 2003, P IASTED INT C SOFTW
   KIM S, 2002, COMMUNICATIONS ACM, V45
   LEE S, 1999, P AS PAC SOFTW ENG C
   MUTHIG D, 2002, LECT NOTES COMPUTER, V2379
   *OBJ MAN GROUP, 2002, CORBA COMP VERS 3 0
   Sharp D. C., 2000, P 1 SOFTW PROD LIN C
   *SUN MICR, 2002, ENT JAVABEANS SPEC V
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
NR 18
TC 26
Z9 27
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2005
VL 47
IS 10
BP 663
EP 673
DI 10.1016/j.infsof.2004.11.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 948IL
UT WOS:000230709200003
DA 2024-07-18
ER

PT J
AU Sakthivel, S
AF Sakthivel, S
TI Virtual workgroups in offshore systems development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE offshore systems development; global software development; global
   outsourcing; virtual work
ID TEMPORAL COORDINATION; SOFTWARE; INFORMATION; COMMUNICATION;
   REQUIREMENTS; CONFLICT; ACQUISITION; PERFORMANCE; EXPERIENCE; DEMOGRAPHY
AB The market for offshore systems development, motivated by lower costs in developing countries, is expected to increase and reach about $15 billion in the year 2007. Virtual workgroups supported by computer and communication technologies enable offshore systems development. This article discusses the limitations of using virtual work in offshore systems development, and describes development processes and management procedures amenable to virtual work in offshore development projects. It also describes a framework to use virtual work selectively, while offshore developing various types of information systems. (c) 2004 Elsevier B.V. All rights reserved.
C1 Bowling Green State Univ, Dept Accounting, Bowling Green, OH 43403 USA.
   Bowling Green State Univ, Coll Business Adm, MIS, Bowling Green, OH 43403 USA.
C3 University System of Ohio; Bowling Green State University; University
   System of Ohio; Bowling Green State University
RP Bowling Green State Univ, Dept Accounting, Bowling Green, OH 43403 USA.
EM ssakthi@cba.bgsu.edu
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   Alder N., 1991, International dimensions of organizational behavior, V2nd
   ANG S, 1988, MIS Q, V12, P535
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], 1989, Software risk management tutorial
   APPLEGATE LM, 1999, CORPORATE INFORMATIO
   Ayoko OB, 2002, INT J CONFL MANAGE, V13, P165, DOI 10.1108/eb022873
   Bal J, 2000, INT J PROD RES, V38, P4019, DOI 10.1080/00207540050204885
   Barthélemy J, 2001, MIT SLOAN MANAGE REV, V42, P60
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   BENEDIKTSSON O, 2004, PROJECT MANAGEME JUN, P5
   BIANCHI A, 2003, INT WORKSH GLOB SOFT, P48
   Bordia P., 1997, J BUSINESS COMMUNICA, V34, P99, DOI DOI 10.1177/002194369703400106
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cascio WF, 2000, ACAD MANAGE EXEC, V14, P81, DOI 10.5465/AME.2000.4468068
   Chesbrough HW, 2002, HARVARD BUS REV, V80, P127
   Conner DS, 2003, J OCCUP ORGAN PSYCH, V76, P133, DOI 10.1348/096317903321208925
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Damian D, 2002, P INT WORKSHOP GLOBA, P5
   DAMIAN DE, 2003, INT WORKSH GLOB SOFT, P7
   DAMIAN DE, 20021 U TECHN DEP SO
   DeSanctis G, 1999, TR ORG BEHAV, V6, P81
   DiStefano JJ, 2000, ORGAN DYN, V29, P45, DOI 10.1016/S0090-2616(00)00012-7
   DOWN A, 1994, RISK MANAGEMENT SOFT
   ESPINOSA JA, 2003, INT WORKSH GLOB SOFT, P64
   FIELD T, 2002, MAN MIDDLE
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Garaventa Eugene., 2001, REV BUS, V22, P28
   Goffman E., 1961, Encounters: Two Studies in the Sociology of Interaction
   GROVER V, 1994, INFORM MANAGE, V27, P33, DOI 10.1016/0378-7206(94)90100-7
   Gupta P, 2001, COMMUN ACM, V44, P40, DOI 10.1145/379300.379308
   Harrison GL, 2000, J INT BUS STUD, V31, P489, DOI 10.1057/palgrave.jibs.8490918
   Heeks RB, 1999, COMMUN ACM, V42, P15, DOI 10.1145/303849.303853
   HENBERG H, 2002, INT WORKSH GLOB SOFT, P14
   Highsmith J., 2002, Agile software development ecosystems
   HOFFMAN T, 2002, NEXT OFFSHORE FRONTI
   HOLTZBLATT K, 1995, COMMUN ACM, V38, P30
   Hughes JA, 2001, NEW TECH WORK EMPLOY, V16, P49, DOI 10.1111/1468-005X.00076
   *ICSE, 2002, INT WORKSH GLOB SOFT
   *ICSE, 2003, INT WORKSH GLOB SOFT
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Jehn KA, 1999, ADMIN SCI QUART, V44, P741, DOI 10.2307/2667054
   JONES C, 1996, SOFTWARE DEV, V4, P49
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   KARALOK DW, 1998, IEEE COMPUTER SOC
   Kayworth TR, 2001, J MANAGE INFORM SYST, V18, P7, DOI 10.1080/07421222.2002.11045697
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Keil M, 2002, INFORM SYST J, V12, P103, DOI 10.1046/j.1365-2575.2002.00121.x
   Kern T, 2002, EUR J INFORM SYST, V11, P3, DOI 10.1057/palgrave/ejis/3000415
   KEYES J, 2003, SOFTWARE ENG HDB
   Kiel L., 2003, International Workshop on Global Software Development at ICSE, P44
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kurland NB, 1999, ORGAN DYN, V28, P53
   Kurland NB, 1999, ORGAN SCI, V10, P500, DOI 10.1287/orsc.10.4.500
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   Massey AP, 2003, J MANAGE INFORM SYST, V19, P129
   McDonough EF, 2001, J PROD INNOVAT MANAG, V18, P110, DOI 10.1016/S0737-6782(00)00073-4
   Montoya-Weiss MM, 2001, ACAD MANAGE J, V44, P1251, DOI 10.5465/3069399
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   Naumann JD, 1982, MIS QUART, V6, P29, DOI 10.2307/248654
   OCKER R, 1996, J MANAGEMENT INFORMA, V97, P127
   OLLE TW, 1994, METHODS ASS TOOLS IN
   OLSON MH, 1991, INT J MAN MACH STUD, V34, P211, DOI 10.1016/0020-7373(91)90042-6
   OREILLY CA, 1989, ADMIN SCI QUART, V34, P21, DOI 10.2307/2392984
   ORIAIIN S, 1999, GLOBAL ETHNOGRAPHY
   PAULK M, 1995, SOFTWARE PROCESS, V1, P3
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   Perlow LeslieA., 1997, Finding Time: How Corporations, Individuals, and Families Can Benefit from New Work Practices
   Prikladnicki R., 2003, INT WORKSH GLOB SOFT, P53
   Raghuram S, 2001, J MANAGE, V27, P383, DOI 10.1016/S0149-2063(01)00097-6
   Ramesh V., 2002, P 35 ANN HAW INT C S
   Robey D, 2000, TECH COMMUN, V47, P51, DOI 10.1109/47.826416
   ROBEY D, 2003, INFORMATION ORG, V13, P11
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Saunders C.S., 2000, Framing the Domain of IT Management: Projecting the future through the past
   Smith J. Y., 1990, Journal of Management Information Systems, V7, P71
   Straus SG, 1996, SMALL GR RES, V27, P115, DOI 10.1177/1046496496271006
   TANG JC, 1991, INT J MAN MACH STUD, V34, P143, DOI 10.1016/0020-7373(91)90039-A
   Townsend A.M., 1998, Academy of Management Executive, V12, P17, DOI [10.1088/2043-6262/7/3/035017, DOI 10.1088/2043-6262/7/3/035017, 10.5465/ame.1998.1109047, DOI 10.5465/AME.1998.1109047]
   Townsend AM, 2001, INFORM SYST J, V11, P213, DOI 10.1046/j.1365-2575.2001.00103.x
   TSUI AS, 1992, ADMIN SCI QUART, V37, P549, DOI 10.2307/2393472
   VIJAYAN P, 2003, COMPANIES EXPECTED B
   VONHIPPEL E, 1994, MANAGE SCI, V40, P429, DOI 10.1287/mnsc.40.4.429
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Wang ETG, 2002, INFORM SYST J, V12, P153, DOI 10.1046/j.1365-2575.2002.00120.x
   WILLCOCLS LP, 1997, STRATEGIC SOURCING I
   ZOWGHI D, 2002, INT WORKSH GLOB SOFT, P53
   2004, WALL STREET J   0628, pA3
NR 91
TC 31
Z9 35
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 31
PY 2005
VL 47
IS 5
BP 305
EP 318
DI 10.1016/j.infsof.2004.09.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 911VW
UT WOS:000228035400002
DA 2024-07-18
ER

PT J
AU Thirunarayan, K
   Berkovich, A
   Sokol, DZ
AF Thirunarayan, K
   Berkovich, A
   Sokol, DZ
TI An information extraction approach to reorganizing and summarizing
   specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE knowledge management; knowledge engineering; information extraction;
   heterogeneous documents
AB Materials and Process Specifications are complex semi-structured documents containing numeric data, text, and images. This article describes a coarse-grain extraction technique to automatically reorganize and summarize spec content. Specifically, a strategy for semantic-markup, to capture content within a semantic ontology, relevant to semi-automatic extraction, has been developed and experimented with. The working prototypes' were built in the context of Cohesia's existing software infrastructure, and use techniques from Information Extraction, XML technology, etc. (C) 2004 Elsevier B.V. All rights reserved.
C1 Wright State Univ, Dept Comp Sci & Engn, Russ Engn Ctr, Dayton, OH 45435 USA.
   Cohesia Corp, Mason, OH 45040 USA.
   Renaissance Serv, Springfield, OH 45502 USA.
C3 University System of Ohio; Wright State University Dayton
RP Wright State Univ, Dept Comp Sci & Engn, Russ Engn Ctr, 3640,Col Glenn Hwy, Dayton, OH 45435 USA.
EM tkprasad@cs.wright.edu
CR ASHISH N, 1997, P 2 IFCIS INT C COOP
   Baumgartner Robert, 2001, 27 INT C VER LARG DA, P119
   Berners-Lee T., 2001, Scientific American May
   CALIFF M, 1998, P AAAI SPRING S APPL, P6
   Crescenzi V., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P109
   CRESPO A, 2000, INFORMATION SYSTEMS
   Daconta M.C., 2003, SEMANTIC WEB GUIDE F
   DuCharme B., 2001, XSLT QUICKLY
   Embley D. W., 1998, Proceedings of the 1998 ACM CIKM International Conference on Information and Knowledge Management, P52, DOI 10.1145/288627.288641
   Fensel D., 2003, Spinning the Semantic Web: Bringing the World Wide Web to Its Full Potential
   Fensel D., 2002, 7 INT WORKSH APPL NA
   FENSEL D, 1999, P WORLD C WWW INT WE
   FISHER D, 1996, P MUC 6, P221
   Freitag D, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P517
   Friedl JEF, 2002, MASTERING REGULAR EX
   Fujii A, 2001, COMPUT HUMANITIES, V35, P389, DOI 10.1023/A:1011856202986
   GRISHMAN R, 1997, INFORMATION EXTRACTI
   GRISHMAN R, 1995, P 6 MESS UND C MUC6
   Gruber T., 1993, INT WORKSH FORM ONT
   HAMMER J, 1997, P WORKSH MAN SEM DAT
   HOBBS J, 1996, FASTUS EXTRACTING IN
   Hull DA, 1996, J AM SOC INFORM SCI, V47, P70, DOI 10.1002/(SICI)1097-4571(199601)47:1<70::AID-ASI7>3.0.CO;2-#
   JONES KS, 1997, READINGS INFORMATION
   Laender AHF, 2002, SIGMOD REC, V31, P84
   LEHNERT WG, 1994, J INTEGRATED COMPUTE, V1, P453
   MCCARTHY J, 78 U MASS
   Muslea I, 2001, AUTON AGENT MULTI-AG, V4, P93, DOI 10.1023/A:1010022931168
   MUSLEA I, 1999, P AAAI 99 WORKSH MAC
   OBRST L, 1996, P 9 S EXH IND APPL P
   OBRST L, 1997, RES COMMERCAL APPL M, P57
   Paice C. D., 1990, SIGIR Forum, V24, P56, DOI 10.1145/101306.101310
   PAICE CD, 1996, P 15 ACM SIGIR C, P42
   PORTER MF, 1990, PROGRAM, V14, P130
   Ribeiro-Neto B, 1999, PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON INFORMATION KNOWLEDGE MANAGEMENT, CIKM'99, P94, DOI 10.1145/319950.319962
   RILOFF E, 1993, PROCEEDINGS OF THE ELEVENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P811
   Soderland S, 1999, MACH LEARN, V34, P233, DOI 10.1023/A:1007562322031
   SODERLAND SG, 43 CIIR U MASS AMH
   SOKOL DZ, 1994, 4 ANN C MAN TECHN
   SOKOL DZ, 2002, COMPUTER ASSISTED DO
   SOKOL DZ, CALS 95 INT EXPO
   SOUNDARAPANDIAN P, 2002, THESIS WRIGHT STATE
   THIRUNARAYAN K, 2002, SIMULATION SERIES, V34, P73
   THIRUNARAYAN K, 2002, LNCS LNAI
   THIRUNARAYAN K, 2003, LNI, P242
   Tidwell D., 2001, XSLT
   VAHARMELEN F, 1999, P WORKSH INT INF INT
   YANGARBER R, 1998, P MUC 7
   1993, P 5 MESS UND C
   ONTOWEB ONTOLOGY BAS
   1991, P 3 MESS UND C
   1992, P 4 MESS UND C
   1997, 7 MESS UND C
   1996, 6 MSS UND C
NR 53
TC 7
Z9 7
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2005
VL 47
IS 4
BP 215
EP 232
DI 10.1016/j.infsof.2004.08.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 899JS
UT WOS:000227141300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Iheagwara, C
   Blyth, A
   Kevin, T
   Kinn, D
AF Iheagwara, C
   Blyth, A
   Kevin, T
   Kinn, D
TI Cost effective management frameworks: the impact of IDS deployment
   technique on threat mitigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE intrusion detection; risk assessment; intrusion detection system design
AB In this paper we measure the financial benefit of an intrusion detection system (IDS) deployment. To this end, we use a standard risk analysis framework and extend it by introducing the Cascading Threat Multiplier (CTM). The idea behind the CTM is that a security compromise incurs two types of costs: (a) The direct cost of lost integrity/confidentiality/availability, and (b) the indirect cost, of the compromised component serving as a potential stepping stone for future attacks. The CTM tries to capture the second type of costs, which are typically ignored in the classic risk analysis framework. We propose new risk analysis formulas that tie the CTM concept into accurate calculation of Return on Investment (ROI), otherwise commonly known as Return on Security Investment. Finally, through a case study we demonstrate the effect of IDS deployment techniques on threat mitigation and the ROI. The result of the case can be used to support effective decision-making about which techniques are appropriate for the cost effective management of the IDS in a given environment. (C) 2003 Elsevier B.V. All rights reserved.
C1 Una Telecommun Inc, IT Secur, Lanham, MD 20706 USA.
   Univ Glamorgan, Sch Comp, Pontypridd CF37 1DL, M Glam, Wales.
   Netsolve Inc, Austin, TX 78734 USA.
C3 University of South Wales
RP Una Telecommun Inc, IT Secur, 4640 Forbes Blvd,Suite 200, Lanham, MD 20706 USA.
EM iheagwarac@aol.com; ajcblyth@glam.ac.uk; timmk@netsolve.com;
   kinnd@netsolve.net
CR BREWER D, 2002, RISK SECURITY TRUST
   BREWER D, 2002, IAAC WORKSH LOND JUL
   CHANGDUK J, 1999, RISK ANAL ELECT COMM
   CLARKE R, 1995, INFORMATION INFRASTR, V4
   CRAFT R, 2002, 21 NAT INF SYST SEC
   GILBERT IE, 2002, NIST SPECIAL PUBLICA
   GORDON LA, 2002, STRATEGIC FINANC NOV
   HARRIS S, 2001, CISSP CERTIFICATION, P72
   Iheagwara C, 2002, COMPUT NETW, V39, P93, DOI 10.1016/S1389-1286(01)00301-2
   Iheagwara C., 2003, J COMPUTER SECURITY, V11
   KEVIN T, 2002, TECHNICAL ARTICLE
   LABUSCHAGNE L, 2002, RISK ANAL GENERATION
   Richards K, 1999, COMPUT SECUR, V18, P671, DOI 10.1016/S0167-4048(99)80131-X
   VENTER HS, 1999, REAL TIME RISK ANAL
   WEI F, 2001, P CSI 28 ANN COMP SE
NR 15
TC 4
Z9 5
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2004
VL 46
IS 10
BP 651
EP 664
DI 10.1016/j.infsof.2003.11.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DF
UT WOS:000221589200002
DA 2024-07-18
ER

PT J
AU Dittrich, Y
   Lindeberg, O
AF Dittrich, Y
   Lindeberg, O
TI How use-oriented development can take place
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process models; usability; user participation; participatory
   design
AB Usability is still a problem for software development. As the introduced software changes the use context, use qualities cannot be fully anticipated. Close co-operation between users and developers during development has been proposed as a remedy. Others fear such involvement of users as it might jeopardize planning and control. Based on the observation of an industrial project, we show how user participation and control can be achieved at the same time. The present article discusses the specific measures that allowed for co-operation between users and developers in an industrial context. It indicates measures to improve software development by focusing on use-orientation, i.e. allowing for user-developer co-operation. (C) 2003 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Dept Software Engn & Comp Sci, Softctr, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Dept Software Engn & Comp Sci, Softctr, S-37225 Ronneby, Sweden.
EM yvonne.dittrich@bth.se; olle.lindeberg@bth.se
OI Dittrich, Yvonne/0000-0003-4757-3394
CR [Anonymous], 1984, Wittgenstein's Nachlass. The Bergen Electronic Edition, Ms-142
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   Bjerknes G., 1995, Scandinavian Journal of Information Systems, V7, P73
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Hansson C., 2003, IRIS, V26, P9
   Kensing F., 1998, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V7, P167, DOI 10.1023/A:1008689307411
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Norbjerg J, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P205
   Star S. L., 1989, DISTRIBUTED ARTIFICI, P37, DOI DOI 10.1016/B978-1-55860-092-8.50006-X
   [No title captured]
   [No title captured]
   [No title captured]
NR 12
TC 14
Z9 14
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2004
VL 46
IS 9
BP 603
EP 617
DI 10.1016/j.infsof.2003.11.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DD
UT WOS:000221589000004
DA 2024-07-18
ER

PT J
AU Seo, C
   Lee, SW
   Kim, HJ
AF Seo, C
   Lee, SW
   Kim, HJ
TI An efficient inverted index technique for XML documents using RDBMS
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE inverted index; XML; query processing
AB The inverted index is widely used in the existing information retrieval field. In order to support containment queries for structured documents such as XML, it needs to be extended. Previous work suggested an extension in storing the inverted index for XML documents and processing containment queries, and compared two implementation options: using an RDBMS and using an Information Retrieval (IR) engine. However, the previous work has two drawbacks in extending the inverted index. One is that the RDBMS implementation is generally much worse in the performance than the IR engine implementation. The other is that when a containment query is processed in an RDBMS, the number of join operations increases in proportion to the number of containment relationships in the query and a join operation always occurs between large relations. In order to solve these problems, we propose in this paper a novel approach to extend the inverted index for containment query processing, and show its effectiveness through experimental results. In particular, our performance study shows that (1) our RDBMS approach almost always outperforms the previous RDBMS and IR approaches, (2) our RDBMS approach is not far behind our IR approach with respect to performance, and (3) our approach is scalable to the number of containment relationships in queries. Therefore, our results suggest that, without having to make any modifications on the RDBMS engine, a native implementation using an RDBMS can support containment queries as efficiently as an IR implementation. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Seoul Natl Univ, Sch Engn & Comp Sci, Gwanak Ku, Seoul 151742, South Korea.
   Sungkyunkwan Univ, Sch Informat & Commun Engn, Suwon, South Korea.
C3 Seoul National University (SNU); Sungkyunkwan University (SKKU)
RP Seo, C (corresponding author), Seoul Natl Univ, Sch Engn & Comp Sci, Gwanak Ku, Sinlim Dong, Seoul 151742, South Korea.
EM cyseo@oopsla.snu.ac.kr; wonlee@ece.skku.ac.kr; hjk@oopsla.snu.ac.kr
RI Iqbal, Muhaammad Munwar/D-2402-2012
OI Iqbal, Muhaammad Munwar/0000-0001-7212-1408
CR [Anonymous], 1999, MODERN INFORM RETRIE
   ARNOLDMOORE T, 1995, P AUSTR DAT C
   BAEZAYATES R, 1996, ACM SIGMOD RECORD, V25, P67
   BAYER R, 2001, XML DATABASE MODELLI
   BLAKE GE, 1994, P INT C APPL DAT
   BRAY T, 1998, EXTENSIBLE MARKUP LA
   Chamberlin D., 2001, XQUERY QUERY LANGUAG
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   CLARKE CLA, 1995, COMPUT J, V38, P43, DOI 10.1093/comjnl/38.1.43
   CLARKE CLA, 1995, 4 ANN S DOC AN INF
   COOPER B, 2001, P C VER LARG DAT BAS
   DAO T, 1996, P AUSTR DAT C
   DESSLOCH S, 1997, P C VER LARG DAT BAS
   DEUTSCH A, 1998, XMLQL QUERY LANGUAGE
   DEUTSCH A, 1999, P ACM SIGMOD INT C M
   FIEBIG T, 2000, INT WORKSH WEB DAT
   FLORESCU D, 2000, P 9 INT WORLD WID WE
   Florescu D., 1999, B TECHNICAL COMMITTE, V22, P27
   GOLDMAN R, 1997, P C VER LARG DAT BAS
   *IBM, DB2 TEXT EXT
   *ISO, 1986, 8879 ISOIEC
   KHA DD, 2001, IEEE INT C DAT ENG
   KLETTKE M, 2000, INT WORKSH WEB DAT
   LI Q, 2001, P C VER LARG DAT BAS
   McHugh J., 1997, SIGMOD Record, V26, P54, DOI 10.1145/262762.262770
   McHugh J., 1998, INDEXING SEMISTRUCTU
   MEUSS H, 1998, PODDP 98
   MEUSS H, 1999, IRSG 99
   MILO T, 1999, P INT C DAT THEOR
   *OR, OR INT TEXT REF REL
   ROBIE J, XML QUERY LANG XQL
   SACKSDAVIS R, 1994, P INT S ADV DAT TECH
   SCHANMUGASUNDAR.J, 1999, P C VER LARG DAT BAS
   SCHANMUGASUNDAR.J, 2000, P C VER LARG DAT BAS
   SCHMIDT AR, 2000, INT WORKSH WEB DAT
   SHIMURA T, 1999, STORAGE RETRIEVAL XM
   *SLEEP SOFTW, BERK DAT
   SURJANTO B, 2000, P INT C WEB INF SYST
   WHALEN R, IMPLEMENTING FULL TE
   YAN TW, 1994, P C VER LARG DAT BAS
   Yoshikawa Masatoshi., 2001, ACM T INTERNET TECHN, V1, P110, DOI DOI 10.1145/383034.383038
   ZHANG C, 2001, P ACM SIGMOD INT C M
NR 42
TC 17
Z9 29
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 11
EP 22
AR PII S0950-5849(02)00157-X
DI 10.1016/S0950-5849(02)00157-X
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500003
DA 2024-07-18
ER

PT J
AU Alhefdhi, A
   Dam, HK
   Ghose, A
AF Alhefdhi, Abdulaziz
   Dam, Hoa Khanh
   Ghose, Aditya
TI Towards automating self-admitted technical debt repayment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-admitted technical debt; Software quality; Software maintenance;
   Software analytics; Deep learning; Technical debt repayment
AB Context: Self-Admitted Technical Debt (SATD) refers to the technical debt in software that is explicitly flagged, typically by the source code comment. The SATD literature has mainly focused on comprehending, describing, detecting, and recommending SATD. Most recently, there have been efforts to study the state of the code before and after removing the SATD comment. While these efforts serve as a preliminary step towards the repayment of SATD, actual attempts towards automating SATD repayment, to the best of our knowledge, are yet to be made.Objective: In this paper, we propose the first attempt towards direct, complete, and automated SATD repayment by providing two main contributions. The first contribution is an empirical study of how the SATD comment relates to repaying the debt. The second contribution is DLRepay, our deep learning approach for SATD repayment.Method: We developed a SATD Repayment dataset, namely SATD-R, and established a taxonomy based on the relationship and helpfulness of the SATD comment to/in repaying the debt. In addition, we developed DLRepay which takes as an input a pair of SATD comment and code, and generates a new, TD-free code. Results: We found that there are five different categories in which the SATD comment relates to Technical Debt repayment. We also identify when the SATD comment has a positive and logical connection to repaying the debt, both generally and in every category. Furthermore, we illustrate the results of our SATD repayment approach across two datasets, three input types, two output types, and two neural networks.Conclusion: The resulting taxonomy of our empirical study paves the way for research to tackle further in-depth questions concerning SATD repayment comprehension, identification, and automation. In addition, the various experimental setups we conduct provide multiple insights regarding the applicability of our SATD repayment approach.
C1 [Alhefdhi, Abdulaziz; Dam, Hoa Khanh; Ghose, Aditya] Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW, Australia.
   [Alhefdhi, Abdulaziz] Prince Sattam Bin Abdulaziz Univ, Comp & Informat Engn Dept, Riyadh, Saudi Arabia.
C3 University of Wollongong; Prince Sattam Bin Abdulaziz University
RP Alhefdhi, A (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW, Australia.; Alhefdhi, A (corresponding author), Prince Sattam Bin Abdulaziz Univ, Comp & Informat Engn Dept, Riyadh, Saudi Arabia.
EM a.alhefdhi@psau.edu.sa; hoa@uow.edu.au; aditya@uow.edu.au
CR Abadi, 2015, TENSORFLOW LARGE SCA
   Alhefdhi A., 2023, SATD-repay, DOI [10.5281/zenodo.7866099,GitHub.https://github.com/Abdulaziz-Alhefdhi/SATD-repay, DOI 10.5281/ZENODO.7866099,GITHUB.HTTPS://GITHUB.COM/ABDULAZIZ-ALHEFDHI/SATD-REPAY]
   Alhefdhi A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00364-8
   Apache, 2023, Apache hadoop
   Apache, 2023, Apache camel
   Apache, 2022, Apache log4j1
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   BRENNAN RL, 1981, EDUC PSYCHOL MEAS, V41, P687, DOI 10.1177/001316448104100307
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Chollet F., 2017, A ten-minute introduction to sequence-to-sequence learning in Keras
   Chollet F, 2015, KERAS
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Cunningham W., 2014, A personal page
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Freitag M, 2017, Arxiv, DOI arXiv:1702.01806
   Gal Y, 2016, ADV NEUR IN, V29
   Gerrit, 2023, Gerrit code review
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Iammarino M, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110976
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Luong MT, 2015, Arxiv, DOI arXiv:1508.04025
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Russell S., 2002, Artificial Intelligence: A Modern Approach, P125
   Sierra G., 2019, Ph.D. thesis
   Sutskever I, 2014, ADV NEUR IN, V27
   TensorFlow, 2022, Word embeddings
   Vaswani A, 2017, ADV NEUR IN, V30
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Yan M., 2018, IEEE Trans. Softw. Eng.
   Yoav G., 2017, Neural Network Methods in Natural Language Processing, P227
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 47
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107376
DI 10.1016/j.infsof.2023.107376
EA DEC 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB9C1
UT WOS:001143396600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Iftikhar, U
   Bin Ali, N
   Börstler, J
   Usman, M
AF Iftikhar, Umar
   Bin Ali, Nauman
   Borstler, Juergen
   Usman, Muhammad
TI A tertiary study on links between source code metrics and external
   quality attributes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product quality; Quality models; Code quality; Evidence; Tertiary study;
   Tertiary review
ID SOFTWARE CHANGE PREDICTION; MAINTAINABILITY PREDICTION; FAULT
   PREDICTION; MODEL; RELIABILITY; VALIDITY; REVIEWS; SYSTEMS
AB Context: Several secondary studies have investigated the relationship between internal quality attributes, source code metrics and external quality attributes. Sometimes they have contradictory results.Objective: We synthesize evidence of the link between internal quality attributes, source code metrics and external quality attributes along with the efficacy of the prediction models used. Method: We conducted a tertiary review to identify, evaluate and synthesize secondary studies. We used several characteristics of secondary studies as indicators for the strength of evidence and considered them when synthesizing the results.Results: From 711 secondary studies, we identified 15 secondary studies that have investigated the link between source code and external quality. Our results show : (1) primarily, the focus has been on object -oriented systems, (2) maintainability and reliability are most often linked to internal quality attributes and source code metrics, with only one secondary study reporting evidence for security, (3) only a small set of complexity, coupling, and size-related source code metrics report a consistent positive link with maintainability and reliability, and (4) group method of data handling (GMDH) based prediction models have performed better than other prediction models for maintainability prediction. Conclusions: Based on our results, lines of code, coupling, complexity and the cohesion metrics from Chidamber & Kemerer (CK) metrics are good indicators of maintainability with consistent evidence from high and moderate-quality secondary studies. Similarly, four CK metrics related to coupling, complexity and cohesion are good indicators of reliability, while inheritance and certain cohesion metrics show no consistent evidence of links to maintainability and reliability. Further empirical studies are needed to explore the link between internal quality attributes, source code metrics and other external quality attributes, including functionality, portability, and usability. The results will help researchers and practitioners understand the body of knowledge on the subject and identify future research directions.
C1 [Iftikhar, Umar; Bin Ali, Nauman; Borstler, Juergen; Usman, Muhammad] Blekinge Inst Technol, Dept Software Engn, Karlskrona SE-371 79, Sweden.
C3 Blekinge Institute Technology
RP Iftikhar, U (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona SE-371 79, Sweden.
EM umar.iftikhar@bth.se; nauman.ali@bth.se; jurgen.borstler@bth.se;
   muhammad.usman@bth.se
RI Ali, Nauman bin/J-4293-2015
OI Ali, Nauman bin/0000-0001-7266-5632; Usman,
   Muhammad/0000-0002-8132-0107; Iftikhar, Umar/0000-0003-3177-6138
FU ELLIIT; Swedish Government; Knowledge Foundation in Sweden [20190081]
FX This work has been supported by ELLIIT, a Strategic Area within IT and
   Mobile Communications, funded by the Swedish Government. The work has
   also been supported by research grant for the OSIR project (reference
   number 20190081) from the Knowledge Foundation in Sweden.
CR Abilio R., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P130, DOI 10.1109/SBCARS.2012.15
   Abreu F.B., 1994, Proceedings of the 4th international conference on software quality, V186, P1, DOI DOI 10.5281/ZENODO.1217609
   Al-Jamimi H. A., 2012, Proceedings of the 2012 IEEE 3rd International Conference on Software Engineering and Service Science (ICSESS), P702, DOI 10.1109/ICSESS.2012.6269563
   Ali N.b., 2022, e-Inform. Softw. Eng. J.
   Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   Almugrin S, 2014, P INT COMP SOFTW APP, P364, DOI 10.1109/COMPSAC.2014.59
   [Anonymous], 2006, 1074-2006-IEEE
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2012, Standard CISQ-TR 2012-01
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arvanitou EM, 2017, J SYST SOFTWARE, V127, P52, DOI 10.1016/j.jss.2017.01.026
   Baldassarre MT, 2019, EUROMICRO CONF PROC, P252, DOI 10.1109/SEAA.2019.00047
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Barros-Justo JL, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.011
   bin Ali N, 2019, INFORM SOFTWARE TECH, V112, P48, DOI 10.1016/j.infsof.2019.04.006
   Bin Ali N, 2018, INFORM SOFTWARE TECH, V99, P133, DOI 10.1016/j.infsof.2018.02.002
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Börstler J, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107174
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Burrows R, 2010, COMM COM INF SC, V69, P277
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chen L., 2010, 14 INT C EV ASS SOFT
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Colakoglu FN, 2021, IEEE ACCESS, V9, P44647, DOI 10.1109/ACCESS.2021.3054730
   Concas G., 2010, P 2010 ICSE WORKSH E, P24
   Curcio K, 2019, COMPUT STAND INTER, V64, P61, DOI 10.1016/j.csi.2018.12.003
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   El Emam K., 1999, Empirical Software Engineering, V4, P113, DOI 10.1023/A:1009820201126
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Elish MO, 2011, ADV ENG SOFTW, V42, P852, DOI 10.1016/j.advengsoft.2011.06.001
   Elmidaoui S, 2019, E-INFORMATICA, V13, P141, DOI 10.5277/e-Inf190105
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fregnan E, 2019, INFORM SOFTWARE TECH, V107, P159, DOI 10.1016/j.infsof.2018.11.008
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Harrison R, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/STEP.1997.615494
   Henry S., 1981, Performance Evaluation Review, V10, P81, DOI 10.1145/1010627.807911
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It, P125
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   ISO, 2001, IEC 9126-1, V21
   Isong B, 2013, INT J SOFTW ENG KNOW, V23, P1513, DOI 10.1142/S0218194013500484
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jorgensen M., 2007, 1 INT WORKSHOP SOFTW
   Khan YA, 2012, LECT NOTES COMPUT SC, V7336, P258, DOI 10.1007/978-3-642-31128-4_19
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Malhotra R, 2020, SOFT COMPUT, V24, P16655, DOI 10.1007/s00500-020-05005-4
   Malhotra R, 2019, E-INFORMATICA, V13, P227, DOI 10.5277/e-Inf190107
   Malhotra R, 2016, INT J COMPUT APPL T, V54, P240, DOI 10.1504/IJCAT.2016.080487
   Malhotra R, 2016, INT J SOFTW ENG KNOW, V26, P1221, DOI 10.1142/S0218194016500431
   Mamun M.A.A., 2017, P 27 INT WORKSHOP SO, P255, DOI [10.1145/3143434.3143445, DOI 10.1145/3143434.3143445]
   Mayer T, 1999, TOOLS, V29, P108, DOI 10.1109/TOOLS.1999.779004
   Mayr A., 2012, 2012 IEEE 23 INT S S, P10
   McCall J.A., 1977, US Rome Air Development Center Reports, VI
   Miguel JP., 2014, Int. J. Softw. Eng. Appl, V5, P31, DOI [DOI 10.5121/IJSEA.2014.5603, 10.5121/ijsea.2014, DOI 10.5121/IJSEA.2014]
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Mordal-Manet K, 2009, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2009.5306381
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Murillo-Morera J., 2015, CIBSE 2015 18 IBERO, P446
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Nagappan N, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/ISSRE.2007.18
   Nagappan N, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2005.35
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Nur S., 2020, J. Comput. Sci., V16, P1558, DOI [10.3844/jcssp.2020.1558.1569, DOI 10.3844/JCSSP.2020.1558.1569.[9]Y]
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Organizacion Internacional de Normalizacion, 2011, ISO-IEC 25010: 2011 Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality Models
   Organizacion Internacional de Normalizacion, 2016, ISO-IEC 25023: 2016
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rashidi H., 2018, Journal of Electrical and Computer Engineering Innovations, V6, P59, DOI [DOI 10.22061/JECEI.2019.1076, 10.22061/JECEI.2019, DOI 10.22061/JECEI.2019]
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Romanovsky A., 2011, 16 ADA EUROPE INT C, V6652
   Saraiva Juliana, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P253, DOI 10.1049/ic.2012.0033
   Saraiva J, 2013, INT WORKS EMERG TREN, P84, DOI 10.1109/WETSoM.2013.6619342
   Saxena P., 2011, Int. J. Comput. Appl., V22, P41, DOI 10.5120/2600-3626
   Soto M, 2009, INT SYMP EMP SOFTWAR, P499
   Spray J, 2022, IEEE T SOFTWARE ENG, V48, P4397, DOI 10.1109/TSE.2021.3119012
   Sreeji K., 2015, Int. J. Appl. Eng. Res., V10, P39696
   Tahir A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P326, DOI 10.1109/ICSM.2012.6405289
   Tiwari S, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172878
   Tran HKV, 2022, E-INFORMATICA, V16, DOI 10.37190/e-Inf220103
   Turner M., 2010, Digital Libraries and Search Engines for Software Engineering Research: an Overview
   Usman M, 2023, E-INFORMATICA, V17, DOI 10.37190/e-Inf230105
   Yan M, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9608-3
   Yan M, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P63, DOI 10.1109/SATE.2017.16
NR 100
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107348
DI 10.1016/j.infsof.2023.107348
EA OCT 2023
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y0OU7
UT WOS:001102357100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wang, WW
   Wu, SM
   Li, Z
   Zhao, RL
AF Wang, Weiwei
   Wu, Shumei
   Li, Zheng
   Zhao, Ruilian
TI Parallel evolutionary test case generation for web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web applications; Test case generation; Parallelization; Evolutionary
   algorithms
ID VULNERABILITIES; SEARCH; PATHS
AB Context: Web applications follow a client-server schema, so it is more appropriate for evolutionary test case generation considering both client and server. However, test cases from the client-side are composed of event sequences, which are quite time-consuming when executed due to the interaction with the browser. Furthermore, premature convergence is a problem for evolutionary algorithms because of the decline of population diversity. These problems restrict the applicability of evolutionary algorithms in test case generation for web applications.Objective: Parallelization has been proven helpful in optimizing test case generation. So, to improve the efficiency and effectiveness of test generation for web applications, this paper proposes a parallel evolutionary test case generation approach where test cases are generated from the client-side behavior model to cover the sensitive paths of server-side code by using a parallel genetic algorithm based on the island model.Method: A parallel execution strategy is presented to drive multi-individuals to execute on multi-browsers simultaneously to shorten the execution time of populations during evolution. And an island model with a corresponding migration mechanism and subpopulation evolution strategy is well-designed to increase population diversity during evolution. Meanwhile, the server-side code triggered by parallel individuals is identified to guide the evolution process.Results: Experiments are conducted on six widely-used web applications, and the results show that compared with the sequential evolutionary test case generation, our approach decreases the iterations and evolution time required by 33.43% and 63.10% on average, respectively. The efficiency of test generation has been greatly enhanced.Conclusion: This paper provides a parallel evolutionary test case generation for web applications, where the parallel execution strategy is presented to shorten the execution time of populations during evolution, increasing test generation efficiency. Moreover, the island model with a migration mechanism is introduced to increase population diversity during evolution, improving the test generation effectiveness.
C1 [Wang, Weiwei; Wu, Shumei; Li, Zheng; Zhao, Ruilian] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
C3 Beijing University of Chemical Technology
RP Zhao, RL (corresponding author), Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
EM rlzhao@mail.buct.edu.cn
RI Li, Zheng/L-8594-2015
OI Wang, Weiwei/0000-0003-4860-1553
FU National Natu-ral Science Foundation of China;  [61702029];  [61872026];
    [62077003]
FX Acknowledgment The work describes in this paper is supported by the
   National Natu-ral Science Foundation of China under Grant No. 61702029,
   61872026 and 62077003.
CR Ahmad T, 2019, COMPUT SCI REV, V33, P98, DOI 10.1016/j.cosrev.2019.07.001
   Ahmed MA, 2016, J SYST ARCHITECT, V64, P50, DOI 10.1016/j.sysarc.2015.11.001
   Alakeel A.M, 2022, IAENG INT J COMPUT S, V49
   Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bader V, 2019, IEEE INT CONF SOFTW, P37, DOI 10.1109/ICST.2019.00014
   Biagiola M., 2019, CORR
   Biagiola M, 2020, IEEE INT CONF SOFTW, P175, DOI 10.1109/ICST46399.2020.00027
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Biagiola M, 2017, LECT NOTES COMPUT SC, V10452, P18, DOI 10.1007/978-3-319-66299-2_2
   Di Geronimo L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P785, DOI 10.1109/ICST.2012.177
   Elyasov A, 2018, PROC INT SYMP SOFTW, P88, DOI 10.1109/ISSRE.2018.00020
   Ferrucci F, 2018, EVOL COMPUT, V26, P535, DOI [10.1162/EVCO_a_00213, 10.1162/evco_a_00213]
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Gong DW, 2012, J SYST SOFTWARE, V85, P2531, DOI 10.1016/j.jss.2012.05.071
   Gong DW, 2011, J SYST SOFTWARE, V84, P2222, DOI 10.1016/j.jss.2011.06.028
   Harada T, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3400031
   Jan S, 2019, EMPIR SOFTW ENG, V24, P3696, DOI 10.1007/s10664-019-09707-8
   Jan S, 2019, IEEE T SOFTWARE ENG, V45, P335, DOI 10.1109/TSE.2017.2778711
   Javed Hasan, 2016, Journal of Software, V11, P347, DOI 10.17706/jsw.11.4.347-361
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kwon JH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P468, DOI 10.1145/3180155.3180244
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Medeiros I, 2016, IEEE T RELIAB, V65, P54, DOI 10.1109/TR.2015.2457411
   Mehta Bhavdeep, 2015, 2015 International Conference on Communication, Information & Computing Technology (ICCICT), P1, DOI 10.1109/ICCICT.2015.7045706
   Mirshokraie Shabnam, 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), DOI 10.1109/ICST.2015.7102595
   Nugroho ED, 2017, 2017 3RD INTERNATIONAL CONFERENCE ON SCIENCE AND TECHNOLOGY - COMPUTER (ICST), P136, DOI 10.1109/ICSTC.2017.8011867
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Parry O., 2021, ACM T SOFTW ENG METH, V31, P1
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   Qi RZ, 2016, J COMPUT SCI TECH-CH, V31, P417, DOI 10.1007/s11390-016-1635-5
   Schur M, 2015, IEEE T SOFTWARE ENG, V41, P1184, DOI 10.1109/TSE.2015.2461542
   Thome J., 2014, P 7 INT WORKSH SEARC, P5, DOI DOI 10.1145/2593833.2593835
   Turgut MS, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106170
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang WW, 2021, TSINGHUA SCI TECHNOL, V26, P112, DOI 10.26599/TST.2019.9010043
   Wang WW, 2019, PROC INT SYMP SOFTW, P206, DOI 10.1109/ISSRE.2019.00029
   Wang WW, 2018, P INT COMP SOFTW APP, P12, DOI 10.1109/COMPSAC.2018.00011
   Wasef A., 2017, INT J ADV COMPUT SC, V8
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Whitley D., 1999, Journal of Computing and Information Technology - CIT, V7, P33
   Zhao RL, 2020, IEEE T RELIAB, V69, P611, DOI 10.1109/TR.2020.2971095
   Zhou XF, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P925, DOI 10.1109/ICSESS.2014.6933716
NR 45
TC 3
Z9 3
U1 5
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107113
DI 10.1016/j.infsof.2022.107113
EA NOV 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200012
DA 2024-07-18
ER

PT J
AU Yan, DP
   Liu, K
   Niu, YQ
   Li, L
   Liu, Z
   Liu, ZM
   Klein, J
   Bissyandé, TF
AF Yan, Dapeng
   Liu, Kui
   Niu, Yuqing
   Li, Li
   Liu, Zhe
   Liu, Zhiming
   Klein, Jacques
   Bissyande, Tegawende F.
TI CREX: Predicting patch correctness in automated repair of C programs
   through transfer learning of execution semantics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program repair; Patch correctness; Semantic feature; Transfer learning
AB A significant body of automated program repair literature relies on test suites to assess the validity of generated patches. Because such oracles are weak, state-of-the-art repair tools can validate some patches that overfit the test cases but are actually incorrect. This situation has become a prime concern in APR, hindering its adoption by the industry. This work investigates execution semantic features based on micro-traces, a form of under-constrained dynamic traces. We build on transfer learning to explore function code representations that are amenable to semantic similarity computation and can therefore be leveraged for classifying patch correctness. Our CREX prototype implementation is based on the TREX framework. Experimental results on patches generated by the CoCoNut APR tool on CodeFlaws programs indicate that our approach can yield high accuracy in predicting patch correctness. The learned embeddings were proven to capture semantic similarities between functions, which was instrumental in training a classifier that identifies patch correctness by learning to discriminate between correctly patched code and incorrectly patched code based on their semantic similarity with the buggy function.
C1 [Yan, Dapeng; Niu, Yuqing; Liu, Zhe] Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.
   [Liu, Kui] Huawei Software Engn Applicat Technol Lab, Hangzhou, Peoples R China.
   [Li, Li] Monash Univ, Melbourne, Vic, Australia.
   [Liu, Zhiming] Northwestern Polytech Univ, Xian, Peoples R China.
   [Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, Luxembourg, Luxembourg.
C3 Nanjing University of Aeronautics & Astronautics; Monash University;
   Northwestern Polytechnical University; University of Luxembourg
RP Liu, K (corresponding author), Huawei Software Engn Applicat Technol Lab, Hangzhou, Peoples R China.
EM dapeng.yan@nuaa.edu.cn; brucekuiliu@gmail.com; 977012358@qq.com;
   li.li@monash.edu; zhe.liu@nuaa.edu.cn; zliu@nwpu.edu.cn;
   jacques.klein@uni.lu; tegawende.bissyande@uni.lu
RI ZHANG, XUCHEN/KBB-7989-2024; Yan, Dapeng/A-2677-2015; LIU,
   zhe/HGD-6875-2022
OI LIU, Kui/0000-0003-0145-615X
FU National Natural Science Foundation of China [62172214]; National Key
   R&D Program of China [2020AAA0107704]; Natural Science Foundation of
   Jiangsu Province, China [BK20210279]; Open Project Program of the State
   Key Laboratory of Mathematical Engineering and Advanced Computing
   [2020A06]
FX This work was supported by the National Natural Science Foundation of
   China (Grant No. 62172214) , the National Key R&D Program of China (No.
   2020AAA0107704) , the Natural Science Foundation of Jiangsu Province,
   China (Grant No. BK20210279) , and the Open Project Program of the State
   Key Laboratory of Mathematical Engineering and Advanced Computing (No.
   2020A06) .
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Chen J., 2017, DAGSTUHL REPORTS, V7, P50, DOI DOI 10.4230/DAGREP.7.12.50
   Csuvik V, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P18, DOI [10.1109/ibf50092.2020.9034714, 10.1109/IBF50092.2020.9034714]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Godefroid P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P539, DOI 10.11455/2568225.2568273
   Harris D., 2010, DIGITAL DESIGN COMPU
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Le Goues C, 2021, IEEE SOFTWARE, V38, P22, DOI 10.1109/MS.2021.3072577
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Liu Kui, 2019, 2019 IEEE ACM 41 INT, P1
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   McKee D, 2020, Arxiv, DOI arXiv:1906.02928
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Pei K., 2020, arXiv
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tian H., 2021, ARXIV
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tsimpourlas F, 2023, Arxiv, DOI arXiv:2001.02444
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
NR 46
TC 3
Z9 3
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107043
DI 10.1016/j.infsof.2022.107043
EA AUG 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A3AF
UT WOS:000862761900001
OA Green Published
DA 2024-07-18
ER

PT J
AU de Oliveira, RP
   Neto, PADS
   Chen, QH
   de Almeida, ES
   Ahmed, I
AF de Oliveira, Raphael Pereira
   da Mota Silveira Neto, Paulo Anselmo
   Chen, Qi Hong
   de Almeida, Eduardo Santana
   Ahmed, Iftekhar
TI Different, Really! A comparison of Highly-Configurable Systems and
   Single Systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Highly -Configurable Systems (HCS); Mining software repository (MSR);
   Survey; Single System (SS)
ID SOFTWARE; VARIABILITY
AB Context: The development of systems that handle configuration options according to a specific environment is considered a hard activity. These kind of systems, Highly-Configurable Systems (HCS) are perceived by researchers and developers as complex and difficult to maintain due to the necessity of handling variation points. Although this perception is reported in the literature, no prior study investigated the differences between HCS and Single Systems (SS).Objective: This study investigated similarities and differences between HCS and SS using well known metrics from the literature according to three different perspectives: product perspective (bug-proneness, complexity, and change size); process perspective (number of contributors, number of core developers, and accidental contributors); and people perspective (contributor retention and number of paid contributors).Method: To perform this comparison, we collected data from two surveys and from a mining study (within 15,769 releases of 124 GitHub projects written in C).Results: In general, we identified that for the majority of the metrics, the perception of practitioners and researchers about HCS and SS is different from our mining results.Conclusion: The identification of similarities and differences of HCS and SS will help to initiate a discussion and further research in this direction.
C1 [de Oliveira, Raphael Pereira] Univ Fed Sergipe, Dept Informat Syst, Sao Cristovao, SE, Brazil.
   [da Mota Silveira Neto, Paulo Anselmo] Univ Fed Rural Pernambuco, Comp Sci Dept, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Fed Univ Bahia IC UFBA, Inst Comp, Salvador, BA, Brazil.
   [Chen, Qi Hong; Ahmed, Iftekhar] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
C3 Universidade Federal de Sergipe; Universidade Federal Rural de
   Pernambuco (UFRPE); University of California System; University of
   California Irvine
RP de Oliveira, RP (corresponding author), Univ Fed Sergipe, Dept Informat Syst, Sao Cristovao, SE, Brazil.
EM raphael.oliveira@academico.ufs.br
RI Chen, Qi/GVU-3024-2022; de Almeida, Eduardo/JJC-2493-2023; Chen,
   QH/GXH-3158-2022; chen, qian/HKE-2403-2023
OI Chen, Qi/0000-0002-6568-7267; Ahmed, Iftekhar/0000-0001-8221-5352;
   Almeida, Eduardo/0000-0002-9312-6715; Pereira de Oliveira,
   Raphael/0000-0003-4046-5198
FU INES; CNPq [465614/2014-0]; FACEPE [APQ-0399-1.03/17]; PRONEX
   [APQ/0388-1.03/14]
FX This work is partially supported by INES ( www.ines.org.br) , CNPq grant
   465614/2014-0, FACEPE grants APQ-0399-1.03/17 and PRONEX
   APQ/0388-1.03/14. In addition, we would like to thank all the partic-
   ipants in the survey.
CR Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Bigonha MAS, 2019, INFORM SOFTWARE TECH, V115, P79, DOI 10.1016/j.infsof.2019.08.005
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Casalnuovo C, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P396, DOI 10.1145/3092703.3098230
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   El-Sharkawy S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P25, DOI 10.1145/3307630.3342384
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Goedicke M, 2002, LECT NOTES COMPUT SC, V2425, P384
   Gopal A., 2002, Communications of the ACM, V45, P193
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kang Kyo C, 1990, Technical Report
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Majumder S., 2022, PREPRINT
   Medeiros F., 2015, LIPICS, V37, P495
   Medeiros F, 2018, IEEE T SOFTWARE ENG, V44, P453, DOI 10.1109/TSE.2017.2688333
   Medeiros F, 2014, ACM SIGPLAN NOTICES, V49, P75, DOI [10.1145/2637365.2517221, 10.1145/2517208.2517221]
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L., 2012, 4 INT WORKSHOP FEATU, P62, DOI [10.1145/2377816.2377825, DOI 10.1145/2377816.2377825]
   Passos L., 2015, P 14 INT C MODULARIT, P81
   Passos L, 2021, IEEE T SOFTWARE ENG, V47, P146, DOI 10.1109/TSE.2018.2884911
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ribeiro M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Schulze S, 2014, ACM SIGPLAN NOTICES, V49, P65, DOI [10.1145/2517208.2517215, 10.1145/2637365.2517215]
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Soares LR, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P40, DOI 10.1145/3278122.3278127
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Woolson R.F., 2007, WILEY ENCY CLIN TRIA, P1, DOI DOI 10.1002/9780471462422.EOCT979
   Zhang B, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P45, DOI 10.1109/PLEASE.2013.6608664
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 59
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107035
DI 10.1016/j.infsof.2022.107035
EA AUG 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300008
DA 2024-07-18
ER

PT J
AU Jahanshahi, H
   Cevik, M
AF Jahanshahi, Hadi
   Cevik, Mucahit
TI S-DABT: Schedule and Dependency-aware Bug Triage in open-source bug
   tracking systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug triage; Optimization; Bug dependency graph; Repository mining; Issue
   tracking system; Software quality
AB Context: In software engineering practice, fixing bugs in a timely manner lowers various potential costs in software maintenance. However, manual bug fixing scheduling can be time-consuming, cumbersome, and error-prone.
   Objective: In this paper, we propose the Schedule and Dependency-aware Bug Triage (S-DABT), a bug triaging method that utilizes integer programming and machine learning techniques to assign bugs to suitable developers.
   Methods: Unlike prior works that largely focus on a single component of the bug reports, our approach takes into account the textual data, bug fixing costs, and bug dependencies. We further incorporate the schedule of developers in our formulation to have a more comprehensive model for this multifaceted problem. As a result, this complete formulation considers developers' schedules and the blocking effects of the bugs while covering the most significant aspects of the previously proposed methods.
   Results: Our numerical study on four open-source software systems, namely, ECLIPSEJDT, LIBREOFFICE, GCC, and MOZILLA, shows that taking into account the schedules of the developers decreases the average bug fixing times. We find that S-DABT leads to a high level of developer utilization by a fair distribution of the tasks among the developers and efficient use of the free spots in their schedules. Via the simulation of the issue tracking system, we also show how incorporating the schedule in the model formulation reduces the bug fixing time, improves the assignment accuracy, and utilizes the capability of each developer without much comprising in the model run times.
   Conclusion: We find that S-DABT decreases the complexity of the bug dependency graph by prioritizing blocking bugs and effectively reduces the infeasible assignment ratio due to bug dependencies. Consequently, we recommend considering developers' schedules while automating bug triage.
C1 [Jahanshahi, Hadi; Cevik, Mucahit] Ryerson Univ, Data Sci Lab, Toronto, ON, Canada.
C3 Toronto Metropolitan University
RP Jahanshahi, H (corresponding author), Ryerson Univ, Data Sci Lab, Toronto, ON, Canada.
EM hadi.jahanshahi@ryerson.ca
OI Jahanshahi, Hadi/0000-0001-7248-6263
CR Akbarinasaji S, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110518
   Akbarinasaji S, 2017, INT WORKS EMERG TREN, P36, DOI 10.1109/WETSoM.2017.7
   Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Ge X, 2020, MATH PROBL ENG, V2020, DOI 10.1155/2020/5102897
   Guo SK, 2020, NEURAL PROCESS LETT, V51, P2589, DOI 10.1007/s11063-020-10213-y
   Gupta V, 2019, ADV INTELL SYST, V731, P585, DOI 10.1007/978-981-10-8848-3_56
   Jahanshahi H, 2022, J SYST SOFTWARE, V189, DOI 10.1016/j.jss.2022.111308
   Jahanshahi H, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P221, DOI 10.1145/3463274.3463342
   Kashiwa Y, 2020, IEICE T INF SYST, VE103D, P348, DOI 10.1587/transinf.2019EDP7152
   Kumar C, 2017, INT J SYST ASSUR ENG, V8, P2109, DOI 10.1007/s13198-014-0326-2
   Kumari M, 2019, ENTROPY-SWITZ, V21, DOI 10.3390/e21010091
   Lee DG, 2020, HUM-CENT COMPUT INFO, V10, DOI 10.1186/s13673-020-00229-7
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Liu J, 2016, INT J SOFTW ENG KNOW, V26, P1593, DOI 10.1142/S0218194016710030
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Park JW, 2016, KNOWL INF SYST, V48, P679, DOI 10.1007/s10115-015-0893-9
   Ren H, 2020, INT C PROGRAM COMPRE, P72, DOI 10.1145/3387904.3389267
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Sung I, 2016, EUR J OPER RES, V252, P623, DOI 10.1016/j.ejor.2016.01.028
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xuan JF, 2017, Arxiv, DOI arXiv:1704.04769
   Yang G., 2017, P S APPL COMP SAC 17, P1280, DOI DOI 10.1145/3019612.3019788
   Zaidi SFA, 2022, IEEE ACCESS, V10, P20677, DOI 10.1109/ACCESS.2022.3153075
   Zaidi SFA, 2020, IEEE ACCESS, V8, P213729, DOI 10.1109/ACCESS.2020.3040065
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang W, 2020, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME46990.2020.00082
NR 32
TC 6
Z9 7
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107025
DI 10.1016/j.infsof.2022.107025
EA AUG 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rainer, A
   Wohlin, C
AF Rainer, Austen
   Wohlin, Claes
TI Recruiting credible participants for field studies in software
   engineering research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Credibility; Validity; Reliability; Data collection; Sampling; Subjects;
   Participants; Recruitment
ID EMPIRICAL-RESEARCH; GENDER
AB Context: Software practitioners are a primary provider of information for field studies in software engineering. Research typically recruits practitioners through some kind of sampling. But sampling may not in itself recruit the "right" participants.
   Objective: To assess existing guidance on participant recruitment, and to propose and illustrate a framework for recruiting professional practitioners as credible participants in field studies of software engineering.
   Methods: We review existing guidelines, checklists and other advisory sources on recruiting participants for field studies. We develop a framework, partly based on our prior research and on the research of others. We search for and select three exemplar studies (a case study, an interview study and a survey study) and use those to illustrate the framework.
   Results: Whilst existing guidance recognises the importance of recruiting participants, there is limited guidance on how to recruit the "right" participants. The framework suggests the conceptualisation of participants as "research instruments" or, alternatively, as a sampling frame for items of interest. The exemplars suggest that at least some members of the research community are aware of the need to carefully recruit the "right" participants.
   Conclusions: The framework is intended to encourage researchers to think differently about the involvement of practitioners in field studies of software engineering. Also, the framework identifies a number of characteristics not explicitly addressed by existing guidelines.
C1 [Rainer, Austen] Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, Antrim, North Ireland.
   [Wohlin, Claes] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Queens University Belfast; Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM claes.wohlin@bth.se
OI Rainer, Austen/0000-0001-8868-263X; Wohlin, Claes/0000-0003-0460-5253
CR Baltes S, 2021, Arxiv, DOI arXiv:2002.07764
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   BERNARD HR, 1984, ANNU REV ANTHROPOL, V13, P495, DOI 10.1146/annurev.an.13.100184.002431
   Bouraffa Abir, 2020, P IEEE ACM 42 INT C, P71
   Carver JC, 2019, IEEE SOFTWARE, V36, P76, DOI 10.1109/MS.2019.2934584
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Freimut B, 2005, IEEE T SOFTWARE ENG, V31, P1074, DOI 10.1109/TSE.2005.136
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kronenfeld David B., 1972, Institutions, V70, P38
   Lenarduzzi V., 2021, Proceedings of the 15th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P1, DOI [10.1145/3475716.3484273, DOI 10.1145/3475716.3484273]
   Marshall MN, 1996, FAM PRACT, V13, P92, DOI 10.1093/fampra/13.1.92
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Molléri JS, 2019, INFORM SOFTWARE TECH, V105, P117, DOI 10.1016/j.infsof.2018.08.008
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Ralph P., 2021, ACM SIGSOFT Software Engineering Notes, V46, P19, DOI DOI 10.1145/3437479.3437483
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Salleh N, 2018, INFORM SOFTWARE TECH, V98, P161, DOI 10.1016/j.infsof.2017.12.001
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stake, 1995, The Art of Case Study Research, DOI DOI 10.1108/EB024859
   Strauss P, 2019, 2019 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2019.8870192
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Vredenburg K., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P471, DOI 10.1145/503376.503460
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Zhang H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P659, DOI 10.1145/3338906.3338976
NR 38
TC 4
Z9 7
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107002
DI 10.1016/j.infsof.2022.107002
EA JUL 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100003
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Liu, P
   Li, YH
AF Liu, Pan
   Li, Yihao
TI Response time evaluation of mobile applications combining network
   protocol analysis and information fusion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Response time evaluation; Network protocol analysis; Information fusion;
   Mobile app
ID PERFORMANCE; CHALLENGES; FRAMEWORK
AB The response time of a mobile application (app), especially a mobile stock trading app, is an important factor that affects customer satisfaction. However, it is considerably difficult to accurately evaluate the performance of mobile apps owing to numerous real-world settings such as operating systems, hardware, and test environments. This paper presents a novel method to evaluate the response time of mobile apps on different mobile phones through combining network protocol analysis and information fusion. To make the data collected from the mobile app more reliable and credible, we recruited some volunteers to collect data on their mobile phones. Then we used the network protocol analysis method to obtain the response time of the mobile app on a mobile phone. Next, we adopted information fusion technology using the rank-score characteristic function to evaluate the response time of mobile apps on different mobile phones. Experiments were conducted to evaluate our approach on three types of mobile apps. The results showed that the proposed method can effectively evaluate the response time of mobile apps with low cost.
C1 [Li, Yihao] Ludong Univ, Sch Informat & Elect Engn, Yantai, Peoples R China.
   [Liu, Pan] Shanghai Business Sch, Fac Business Informat, Shanghai, Peoples R China.
   [Liu, Pan] Shanghai Key Lab Comp Software Testing & Evaluati, Shanghai, Peoples R China.
C3 Ludong University; Shanghai Business School
RP Li, YH (corresponding author), Ludong Univ, Sch Informat & Elect Engn, Yantai, Peoples R China.
EM yihao.li@ldu.edu.cn
RI li, yihao/AAS-2033-2020
OI li, yihao/0000-0001-9874-0338
FU National Social Science Fund General Project of China [18BTQ058];
   National Natural Science Foundation of China [61502299]; Science and
   Technology Key Project of Jiangxi Province [20142BBE50015]
FX This work was supported in part by National Social Science Fund General
   Project of China under Grant 18BTQ058, National Natural Science
   Foundation of China under Grant 61502299, and the Science and Technology
   Key Project of Jiangxi Province under Grant 20142BBE50015.
CR Abbas R, 2017, 2017 INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGIES (COMTECH), P39, DOI 10.1109/COMTECH.2017.8065747
   Al-Ahmad AS, 2014, INT CONF ADV COMPUT, P176, DOI 10.1109/ACSAT.2013.42
   Angelopoulos V., 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P493, DOI 10.1109/COMPSACW.2012.93
   Bano G, 2019, INT CONF INF COMMUN, P129, DOI [10.1109/ICICT47744.2019.9001991, 10.1109/icict47744.2019.9001991]
   Bezemer C.-.P., 2018, ARXIV PREPRINT ARXIV
   Chappell L.J.L.C.U., 2017, Wireshark 101: Essential Skills for Network Analysis-Wireshark Solution Series
   Chen X, 2019, FRONT COMPUT SCI-CHI, V13, P943, DOI 10.1007/s11704-018-7308-5
   Daswani N., 2014, GOOGLE PATENTS
   DESOUZA LS, 2014, P 2 INT C COMP SCI E, P45, DOI DOI 10.5121/CSIT.2014.4405
   Dey S., 2013, PROC INT WORKSHOP MO, P3, DOI DOI 10.1145/2492348.2492359
   Draheim D, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P168, DOI 10.1109/CSMR.2005.4
   Draheim D., 2005, FORM ORIENTED ANAL N
   Draheim D, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P55
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Fei Wang, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P683, DOI 10.1109/ICIS.2012.21
   Gao F, 2013, ADV INTEL SYS RES, V68, P278
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Gautam A, 2017, IEEE WORK CONF MIN S, P495, DOI 10.1109/MSR.2017.38
   Haiqi Feng, 2009, Proceedings of the 2009 IEEE International Conference on Grey Systems and Intelligent Services (GSIS 2009), P1353, DOI 10.1109/GSIS.2009.5408123
   Hao R, 2019, PROC INT CONF SOFTW, P900, DOI 10.1109/ICSE.2019.00096
   Hegde V.P., 2014, INT J SCI ENG RES, V2, P67
   Horng-Jinh Chang, 2008, International Journal on Information and Management Sciences, V19, P153
   Hsu DF, 2010, LECT NOTES ARTIF INT, V6334, P42, DOI 10.1007/978-3-642-15314-3_5
   Hsu DF, 2005, INFORM RETRIEVAL, V8, P449, DOI 10.1007/s10791-005-6994-4
   Hsu FH, 2016, APPL SCI-BASEL, V6, DOI 10.3390/app6110358
   Hu H, 2007, P INT COMP SOFTW APP, P237
   Huy N. P., 2012, P 10 INT C ADV MOB C, P25, DOI DOI 10.1145/2428955.2428968
   Islam M.R, 2018, INT J PHYS MATH SCI, V1, P37
   Jan S.R., 2016, INT J SCI RES SCIE E, V1990
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kac M., 2018, STAT INDEPENDENCE PR
   Khalid H., 2014, THESIS QUEENS U
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kochhar P. S., 2015, ICST'15, P1
   Kruglov VM, 2011, STOCH ANAL APPL, V29, P674, DOI 10.1080/07362994.2011.581099
   Li SS, 2019, INTERACT COMPUT, V31, P1, DOI 10.1093/iwc/iwz001
   Lian Yu, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P181, DOI 10.1109/SOSE.2010.36
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1290, DOI 10.1109/TSE.2020.3017514
   Liu DD, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P1147, DOI 10.1109/HPCC/SmartCity/DSS.2018.00192
   Liu ZF, 2009, PROCEEDINGS OF 2009 8TH INTERNATIONAL CONFERENCE ON RELIABILITY, MAINTAINABILITY AND SAFETY, VOLS I AND II, P765, DOI 10.1109/ICRMS.2009.5270087
   Loh F, 2019, PROCEEDINGS OF THE 10TH ACM MULTIMEDIA SYSTEMS CONFERENCE (ACM MMSYS'19), P267, DOI 10.1145/3304109.3325819
   Lutteroth C, 2008, IEEE INT ENTERP DIST, P149, DOI 10.1109/EDOC.2008.40
   Melo SM, 2019, INFORM SOFTWARE TECH, V105, P226, DOI 10.1016/j.infsof.2018.08.017
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Miranskyy A, 2016, IEEE SOFTWARE, V33, P52, DOI 10.1109/MS.2016.33
   Morgado IC, 2015, IEEE INT CONF AUTOM, P876, DOI 10.1109/ASE.2015.96
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Parizi RM, 2007, ICCSA 2007: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND APPLICATIONS, P78, DOI 10.1109/ICCSA.2007.67
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Patel B., 2014, INT J CURR ENG TECHN, V4, P3642
   Peng Yang Hongyu Sheng J. X., 2019, INT J PERFORMABILITY, V15, P2944
   Portillo-Dominguez AO, 2017, SOFTWARE PRACT EXPER, V47, P1837, DOI 10.1002/spe.2500
   Portillo-Dominguez AO, 2014, IEEE ICST WORKSHOP, P370, DOI 10.1109/ICSTW.2014.46
   Rojas I.K.V., 2016, P 1 BRAZ S SYST AUT, P1
   ROSENBLATT M, 1956, P NATL ACAD SCI USA, V42, P43, DOI 10.1073/pnas.42.1.43
   Seth P, 2017, 2017 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND CONTROL SYSTEMS (ICICCS), P181, DOI 10.1109/ICCONS.2017.8250706
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Shenoy S, 2014, IEEE INT CONF SERV, P314, DOI 10.1109/SOCA.2014.36
   Tahir Y, 2018, IEEE T MOBILE COMPUT, V17, P29, DOI 10.1109/TMC.2017.2705680
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   Tyagi R.S., 2013, INT J ADV RES COMPUT, V3, P1300
   Wang J., 2018, CROWDTESTING IS PART
   Wang XG, 2013, J CHIN INST ENG, V36, P74, DOI 10.1080/02533839.2012.726028
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhou JZ, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P644, DOI 10.1109/COMPSACW.2014.108
NR 67
TC 4
Z9 4
U1 3
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106838
DI 10.1016/j.infsof.2022.106838
EA JAN 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ4XL
UT WOS:000744536600001
DA 2024-07-18
ER

PT J
AU Soliman, M
   Avgeriou, P
   Li, YK
AF Soliman, Mohamed
   Avgeriou, Paris
   Li, Yikun
TI Architectural design decisions that incur technical debt - An industrial
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Architectural design decisions; Architectural knowledge;
   Architectural technical debt
AB Context: During software development, some architectural design decisions incur technical debt, either deliberately or inadvertently. These have serious impact on the quality of a software system, and can cost significant time and effort to be changed. While current research efforts have explored general concepts of architectural design decisions and technical debt separately, debt-incurring architectural design decisions have not been specifically explored in practice.
   Objective: In this case study, we explore debt-incurring architectural design decisions (DADDs) in practice. Specifically, we explore the main types of DADDs, why and how they are incurred in a software system, and how practitioners deal with these types of design decisions.
   Method: We performed interviews and a focus group with practitioners working in embedded and enterprise software companies, discussing their concrete experience with such architectural design decisions.
   Results: We provide the following contributions: 1) A categorization for the types of DADDs, which extend a current ontology on architectural design decisions. 2) A process on how deliberate DADDs are made in practice. 3) A conceptual model which shows the relationships between the causes and triggers of inadvertent DADDs. 4) The main factors that influence the way of dealing with DADDs.
   Conclusion: The results can support the development of new approaches and tools for Architecture Technical Debt management from the perspective of Design Decisions. Moreover, they support future research to capture architecture knowledge related to DADDs.
C1 [Soliman, Mohamed; Avgeriou, Paris; Li, Yikun] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Groningen, Netherlands.
C3 University of Groningen
RP Soliman, M (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Groningen, Netherlands.
EM m.a.m.soliman@rug.nl; p.avgeriou@rug.nl; yikun.li@rug.nl
OI Li, Yikun/0000-0002-1566-725X; Soliman, Mohamed/0000-0002-6638-3732;
   Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3, Netherlands [17038 VIS-DOM]; RV, Netherlands [17038 VIS-DOM]
FX The authors declare that they have no known competing finan-cial
   interests or personal relationships that could have appeared to
   influence the work reported in this paper. We would like to thank ITEA3,
   The Netherlands and RV, The Netherlands for their support under grant
   agreement No. 17038 VIS-DOM (https://visdom-project.github.io/website) .
   Moreover, we would like to thank the practitioners who volunteered to
   participate in our study.
CR Abad ZSH, 2015, INT REQUIR ENG CONF, P230, DOI 10.1109/RE.2015.7320428
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2009, Proceedings of the 2009 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists
   [Anonymous], 1993, Educational Researcher, DOI DOI 10.3102/0013189X022004016
   Avgeriou P., 2016, SIGSOFT SOFTW ENG NO, V41, P38, DOI [10.1145/2894784.2894800, DOI 10.1145/2894784.2894800]
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Bhat M, 2017, LECT NOTES COMPUT SC, V10475, P138, DOI 10.1007/978-3-319-65831-5_10
   Cai YF, 2019, IEEE T SOFTWARE ENG, V45, P657, DOI 10.1109/TSE.2018.2797899
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Daneshgar F, 2013, INFORM SOFTWARE TECH, V55, P1741, DOI 10.1016/j.infsof.2013.03.009
   de Toledo SS, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P78, DOI 10.1109/TechDebt.2019.00026
   El Malki A, 2019, LECT NOTES COMPUT SC, V11681, P3, DOI 10.1007/978-3-030-29983-5_1
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fernández-Sánchez C, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P69, DOI 10.1109/MTD.2015.7332628
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   LENARDUZZI V, 2019, INT S EMP SOFTW ENG, V2019, DOI [DOI 10.1109/ESEM.2019.8870159, DOI 10.1109/esem.2019.8870159]
   Li ZY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P65, DOI 10.1109/WICSA.2015.19
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lytra Ioanna, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P224, DOI 10.1007/978-3-642-39031-9_20
   Malakuti S, 2018, LECT NOTES COMPUT SC, V11048, P103, DOI 10.1007/978-3-030-00761-4_7
   Manjunath A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P52, DOI 10.1109/ICSA-C.2018.00022
   Manteuffel C, 2018, J SYST SOFTWARE, V144, P60, DOI 10.1016/j.jss.2018.05.064
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   Razavian M, 2019, J SYST SOFTWARE, V149, P360, DOI 10.1016/j.jss.2018.12.003
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Runeson P., 2012, CASE STUDY RES SOFTW, P237
   Schröder S, 2018, J SYST SOFTWARE, V145, P79, DOI 10.1016/j.jss.2018.08.025
   Seidman I., 2006, Interviewing as Qualitative Research: A Guide for Researchers in Education and the Social Sciences
   Shahbazian A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P95, DOI 10.1109/ICSA.2018.00019
   Smrithi Rekha V., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P185, DOI 10.1109/WICSA.2014.15
   Soliman M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P89, DOI 10.1109/ICSA.2017.31
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Soliman M, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P135, DOI 10.1109/WICSA.2015.14
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Tang A, 2018, J SYST SOFTWARE, V144, P22, DOI 10.1016/j.jss.2018.05.019
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tofan D, 2016, INFORM SOFTWARE TECH, V72, P31, DOI 10.1016/j.infsof.2015.12.002
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   Verdecchia R, 2020, LECT NOTES COMPUT SC, V12292, P202, DOI 10.1007/978-3-030-58923-3_14
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yang C, 2017, J SYST SOFTWARE, V134, P190, DOI 10.1016/j.jss.2017.09.007
   Zalewski A, 2017, LECT NOTES COMPUT SC, V10475, P123, DOI 10.1007/978-3-319-65831-5_9
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 58
TC 5
Z9 5
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106669
DI 10.1016/j.infsof.2021.106669
EA JUN 2021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300014
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bekiroglu, B
   Korel, B
AF Bekiroglu, Berk
   Korel, Bogdan
TI Source Code Transformations for Improving Security of Time-bounded
   K-variant Systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE K-variant architecture; System security; Multiple variant architecture;
   Source code transformation; Memory exploitation attacks
AB Context: Source code transformation techniques can improve the security of systems against memory exploitation attacks. As such, the chance of exploitation of security vulnerabilities can be decreased by using different controlled source code transformation techniques. In K-variant architecture, multiple variants of a program are generated through a controlled source code transformation to improve the security of systems.
   Objective: To investigate the effectiveness and practicality of source code program transformations in improving the security of time-bounded K-variant systems for memory exploitation attacks.
   Method: The effectiveness of program transformations in improving the security of time-bounded K-variant systems is experimentally investigated for different memory attacks.
   Results: The results suggest that generating multiple variants using the presented transformations significantly improves the survivability of time-bounded K-variant systems under memory exploitation attacks.
   Conclusion: We conclude that generating multi-variants in time-bounded K-variant systems in accordance with the presented program transformations may improve the security of time-bounded K-variant systems significantly for memory exploitation attacks with a reasonable cost and overhead.
C1 [Bekiroglu, Berk; Korel, Bogdan] IIT, Chicago, IL 60616 USA.
C3 Illinois Institute of Technology
RP Bekiroglu, B (corresponding author), IIT, Chicago, IL 60616 USA.
EM bbekirog@iit.edu
RI BEKIROGLU, BERK/JDM-8338-2023
CR Abadi M, 2005, P 12 ACM C COMP COMM, DOI [10.1145/1102120.1102165, DOI 10.1145/1102120.1102165]
   Abatchy.com, 2020, ABATCHYS BLOG EXPLOI
   Aciicmez Onur, 2009, CRYPTOGRAPHIC ENG, P475, DOI [DOI 10.1007/978-0-387-71817-0_18, 10.1007/978-0-387-71817-0_18, 10.1007/978-0-387-71817, DOI 10.1007/978-0-387-71817]
   An Zhiyuan, 2010, Proceedings 2010 International Forum on Information Technology and Applications (IFITA 2010), P347, DOI 10.1109/IFITA.2010.304
   [Anonymous], 2010, P 6 ANN WORKSHOP CYB
   [Anonymous], 2012, Windows Internals
   [Anonymous], 2002, Proceedings of the 9th ACM conference on Computer and communications security, DOI DOI 10.1145/586110.586130
   ARNOLD RS, 1989, P IEEE, V77, P607, DOI 10.1109/5.24146
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Balasubramanian A, 2017, OPER SYST REV, V51, P94, DOI 10.1145/3139645.3139660
   Bekiroglu B, 2021, IEEE T DEPEND SECURE, V18, P1868, DOI 10.1109/TDSC.2019.2941686
   Bhatkar S, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P255
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   Bletsch Tyler., 2011, CODE REUSE ATTACKS N
   Brandolese C, 2004, DESIGNERS' FORUM: DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, P306, DOI 10.1109/DATE.2004.1269255
   Butler R.W., 2008, PRIMER ARCHITECTURAL
   Carlini N, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P161
   Chen L., 1978, FTCS-8. The Eighth Annual International Conference on Fault-Tolerant Computing, P3
   Chung EY, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P153, DOI 10.1109/ISSS.2001.957931
   Co M., 2016, P 11 ANN CYBER INFOR, P1
   Coker Z., 2012, Proceedings of the 3rd annual conference on Systems, programming, and applications: software for humanity, P103, DOI 10.1145/2384716.2384759
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Cowan C, 1998, PROCEEDINGS OF THE SEVENTH USENIX SECURITY SYMPOSIUM, P63
   Cox B, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P105
   Crane S, 2015, P IEEE S SECUR PRIV, P763, DOI 10.1109/SP.2015.52
   Dailey L, 2004, COMPUTER, V37, P28
   Davi L, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23262
   de Winter J, 2013, PRACTICAL ASSESSMENT, V18, P12, DOI DOI 10.7275/E4R6-DJ05
   Dimitroulakos G., 2012, Proceedings of the 2012 Conference on Design and Architectures for Signal and Image Processing, P1
   FARVARDIN N, 1986, IEEE T INFORM THEORY, V32, P839, DOI 10.1109/TIT.1986.1057235
   Forrest S, 1997, SIXTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P67, DOI 10.1109/HOTOS.1997.595185
   G. Tech, 2020, MISS CRIT SYST WHY Y
   Gearhart AS, 2018, I C DEPENDABLE SYST, P79, DOI 10.1109/DSN-W.2018.00039
   Gillen M, 2006, DESIGNING FAULT TOLE
   Gionta Jason., 2015, Proceedings of the 5th ACM Conference on Data and Application Security and Privacy. CODASPY '15, P325
   Graves Kimberly., 2007, CEHOFFICIAL CERTIFIE
   Guo XP, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P151, DOI 10.1109/SCAM.2003.1238041
   Guri M, 2020, ASLR WHAT IT IS WHAT
   Hafiz M., 2008, Proceedings of the 2nd Workshop on Refactoring Tools, P1
   Hafiz M., 2009, Proceedings of the 5th Annual Workshop on Cyber Security and Information Intelligence Research: Cyber Security and Information Intelligence Challenges and Strategies, P1, DOI 10.1145/1558607.1558622
   Hafiz M, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P61, DOI 10.1109/IWSESS.2009.5068460
   Hafiz Munawar., 2008, 23 ACM SIGPLAN C OBJ, P927, DOI [10.1145/1449814.1449912, DOI 10.1145/1449814.1449912]
   Herbold S, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P104, DOI 10.1109/VALID.2009.12
   Hulette G. C., 2011, 2011 IEEE/WIC/ACM International Joint Conferences on Web Intelligence (WI) and Intelligent Agent Technologies, P261, DOI 10.1109/WI-IAT.2011.89
   Itsykson V., 2011, 2011 7th Central and Eastern European Software Engineering Conference (CEE-SECR), P1, DOI DOI 10.1109/CEESECR.2011.6188463
   Joseph M. K., 1988, Proceedings of the 1988 IEEE Symposium on Security and Privacy (Cat. No.88CH2558-5), P52, DOI 10.1109/SECPRI.1988.8097
   Karger PA, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P127, DOI 10.1109/CSAC.2002.1176286
   Kocher P, 2019, P IEEE S SECUR PRIV, P1, DOI 10.1109/SP.2019.00002
   Korel B., 2011, Proceedings of the 4th International Conference on Security of Information and Networks, P183, DOI [10.1145/2070425.2070454, DOI 10.1145/2070425.2070454]
   LANDWEHR CE, 1994, ACM COMPUT SURV, V26, P211, DOI 10.1145/185403.185412
   Larsen P., 2018, The Continuing Arms Race: Code-Reuse Attacks and Defenses
   Larsen P, 2014, P IEEE S SECUR PRIV, P276, DOI 10.1109/SP.2014.25
   Lipp M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P973
   MAHMOOD A, 1988, IEEE T COMPUT, V37, P160, DOI 10.1109/12.2145
   Marco-Gisbert Hector, 2013, 2013 IEEE 12th International Symposium on Network Computing and Applications (NCA), P243, DOI 10.1109/NCA.2013.12
   Marco-Gisbert H, 2014, 2014 IEEE 13TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA 2014), P145, DOI 10.1109/NCA.2014.28
   Molnar Ingo, EXEC SHIELD NEW LINU
   Newsham Tim., 2000, Format string attacks
   Peñalba O, 2002, EUROMICRO SYMPOSIUM ON DIGITAL SYSTEM DESIGN, PROCEEDINGS, P324, DOI 10.1109/DSD.2002.1115385
   Ringenburg M.F., 2005, C COMPUTER COMMUNICA, P354, DOI DOI 10.1145/1102120.1102166
   Roemer R, 2012, ACM T INFORM SYST SE, V15, DOI 10.1145/2133375.2133377
   Rudd Robert., 2017, ANN NETW DISTR SYST
   Sakurai Yasuki, 2007, 2007 IEEE Pacific Rim Conference on Communications, Computers and Signal Processing, P485, DOI 10.1109/PACRIM.2007.4313279
   Shaw A, 2014, I C DEPEND SYS NETWO, P124, DOI 10.1109/DSN.2014.25
   Spafford E. H., 1989, Computer Communication Review, V19, P17, DOI 10.1145/66093.66095
   Volckaert S, 2016, IEEE T DEPEND SECURE, V13, P437, DOI 10.1109/TDSC.2015.2411254
   Werner J, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P35, DOI 10.1145/2897845.2897891
   Xu J, 2003, SYM REL DIST SYST, P260
   Zaytsev O., 2006, ROOTKITS SPYWARE ADW ROOTKITS SPYWARE ADW
NR 69
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106601
DI 10.1016/j.infsof.2021.106601
EA MAY 2021
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400004
DA 2024-07-18
ER

PT J
AU Shu, T
   Huang, YC
   Ding, ZH
   Xia, JS
   Jiang, MY
AF Shu, Ting
   Huang, Yechao
   Ding, Zuohua
   Xia, Jinsong
   Jiang, Mingyue
TI Generating feasible protocol test sequences from EFSM models using Monte
   Carlo tree search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE EFSM; Conformance testing; Feasible test sequences; Test generation
ID FINITE-STATE MACHINE; CONTROL-FLOW; CONFORMANCE
AB Context: Feasible test sequences generation is a key step in protocol conformance testing based on the Extended Finite State Machine (EFSM) model. To guarantee the feasibility of generated test sequences, transition executability analysis (TEA) technique is widely applied in automatic test derivation. However, the TEA method often suffers from the famous state explosion problem, which has become a major obstacle to its efficient application.
   Objective: In order to mitigate this issue, this paper proposed a novel heuristic TEA method (MTEA) that uses Monte Carlo tree search (MCTS) to guide the TEA tree expansion for efficiently deriving feasible test sequences.
   Method: The approach first provides a framework to apply the MCTS algorithm based on multiple decision subtrees, in the context of test sequence generation for EFSM-specified systems, to more efficiently expanding the TEA tree with huge state space, and thus alleviating the problem of state explosion. To achieve this, we then design a reward function to calculate the fitness of nodes currently being expanded in the TEA tree and heuristically direct the search towards a near-optimal solution. Next, an adaptive reduction mechanism of search budget is also introduced to accelerate the convergence of the analysis. Finally, a MTEA-based algorithm for automatically generating feasible test sequences is presented under a specific transition coverage criterion.
   Results: A detailed case study on 6 popular EFSMs was carried out to evaluate the effectiveness and efficiency of our method. Experimental results show that the MTEA significantly outperforms Breadth-First-Search based TEA method (BTEA) and the standard MCTS-based method (SMCTS), regarding time and space performance. Compared with the BTEA, SMCTS and random TEA method (RTEA), the success rate of test generation of MTEA (98.14% on average) is approximately 2, 1.85 and 3 times higher, respectively. For successful test derivation, MTEA only needs to explore on average 9.95% of the nodes and consume on average 61.68% of the runtime of the BTEA method.
   Conclusion: The experiments illustrate the promise of our approach for alleviating the state explosion problem in test generation for EFSM-specified systems.
C1 [Shu, Ting; Huang, Yechao; Ding, Zuohua; Xia, Jinsong; Jiang, Mingyue] Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou 310018, Peoples R China.
C3 Zhejiang Sci-Tech University
RP Shu, T (corresponding author), Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou 310018, Peoples R China.
EM shuting@zstu.edu.cn; 1766254653@qq.com; zouhuading@hotmail.com;
   js_xia@126.com; jiang_my@126.com
OI shu, ting/0000-0002-5222-7608
FU Zhejiang Provincial Natural Science Foundation of China [LY17F020033];
   National Natural Science Foundation of China [61101111, 61572441];
   Fundamental Research Funds of Zhejiang SciTech University, China
   [2019Q039]
FX This work was supported by Zhejiang Provincial Natural Science
   Foundation of China under Grant No. LY17F020033, the National Natural
   Science Foundation of China (No. 61101111, 61572441) and the Fundamental
   Research Funds of Zhejiang SciTech University, China (2019Q039) . The
   authors also thank the anonymous referees for their constructive
   comments and helpful suggestions.
CR [Anonymous], 1991, IS9646
   Asoudeh N, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY - COMPANION (QRS-C 2015), P105, DOI 10.1109/QRS-C.2015.26
   Auer P, 2002, MACH LEARN, V47, P235, DOI 10.1023/A:1013689704352
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Balera JM, 2019, INFORM SOFTWARE TECH, V114, P176, DOI 10.1016/j.infsof.2019.06.012
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bochmann GV, 2010, COMPUT NETW, V54, P3197, DOI 10.1016/j.comnet.2010.05.019
   Bourhfir C, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P75
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Cavalli A, 2003, INFORM SOFTWARE TECH, V45, P837, DOI 10.1016/S0950-5849(03)00063-6
   CHANSON ST, 1993, IEEE INFOCOM SER, P106, DOI 10.1109/INFCOM.1993.253243
   Choi YM, 2018, INFORM SOFTWARE TECH, V94, P38, DOI 10.1016/j.infsof.2017.09.013
   COOK D, GOLD PARSER BUILDER
   Derderian K, 2010, AUTOMAT SOFTW ENG, V17, P33, DOI 10.1007/s10515-009-0057-9
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Dssouli R, 2017, ADV COMPUT, V107, P95, DOI 10.1016/bs.adcom.2017.06.002
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   Filieri A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P437, DOI 10.1145/2635868.2635899
   Hierons RM, 2004, THEOR COMPUT SCI, V323, P191, DOI 10.1016/j.tcs.2004.04.002
   Hierons RM, 2004, COMPUT NETW, V44, P681, DOI 10.1016/j.comnet.2003.06.001
   Hierons RM, 2002, P INT COMP SOFTW APP, P334, DOI 10.1109/CMPSAC.2002.1045023
   Huang CM, 1998, COMPUT COMMUN, V21, P1462, DOI 10.1016/S0140-3664(98)00172-8
   Huang CM, 1999, J CHIN INST ENG, V22, P593, DOI 10.1080/02533839.1999.9670497
   Kalaji AS, 2011, INFORM SOFTWARE TECH, V53, P1297, DOI 10.1016/j.infsof.2011.06.004
   Kocsis L., 2006, Univ. Tartu, Estonia, Tech. Rep
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Luckow K, 2018, LECT NOTES COMPUT SC, V10886, P123, DOI 10.1007/978-3-319-92970-5_8
   Orset JM, 2005, LECT NOTES COMPUT SC, V3707, P400
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Petrenko A, 1996, COMPUT NETWORKS ISDN, V29, P81, DOI 10.1016/S0169-7552(96)00019-0
   Poulding S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1359, DOI 10.1145/2739480.2754767
   Shu T, 2016, INFORM SCIENCES, V370, P63, DOI 10.1016/j.ins.2016.07.059
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Spronck P., AIIDE
   URAL H, 1991, IEEE T COMMUN, V39, P514, DOI 10.1109/26.81739
   Wong WE, 2009, INFORM SOFTWARE TECH, V51, P1505, DOI 10.1016/j.infsof.2009.06.005
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Yang GW, 2019, ADV COMPUT, V113, P225, DOI 10.1016/bs.adcom.2018.10.002
   Yang R., 2012, SEKE, P470
   Yang R, 2015, INT J SOFTW ENG KNOW, V25, P633, DOI 10.1142/S0218194015300018
   Yano T., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P164, DOI 10.1109/ICSTW.2011.37
   Zhang J, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P242, DOI 10.1109/SEFM.2004.1347528
   Zhang ZY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0450-5
   Zhao RQ, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON CHILDREN AND YOUTH FITNESS AND HEALTH, VOL 1, P222, DOI 10.1109/ICSTW.2010.44
NR 44
TC 2
Z9 2
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106557
DI 10.1016/j.infsof.2021.106557
EA MAR 2021
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200005
DA 2024-07-18
ER

PT J
AU Gupta, C
   Freire, MM
AF Gupta, Chetna
   Freire, Mario M.
TI A decentralized blockchain oriented framework for automated bug
   assignment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug triaging; Bug assignment; Bug reports; Developer contribution
   assessment; Blockchain technology; Auction
AB Context: In large software projects bug fixing is a time-bound, time-consuming, mind-numbing, and challenging task that requires a collaborative effort with multiple developers, separated geographically.
   Objective: The objective of this paper is to propose a decentralized automated bug assignment approach to improve the quality of bug assignments to minimize backlogs and overall bug fixing time
   Method: To the best of our knowledge, the literature lacks in studies focusing on how to increase software developer?s motivation for efficient bug resolution. It is a novel decentralized blockchain oriented, transparent auction-based bug assignment framework which uses incentive mechanism as reward and penalty backed by blockchain technology using smart contracts for developers motivation. The process allows individual developers to select bug reports, matching their preferences and schedule for which they shall we able to provide robust solutions with reduced overhead in cost and time of bug fixing.
   Results: Results of experimentation and surveys conclude that the proposed method is transparent and effective in bug assignment minimizing overall bug fixing time. The low cost of contract execution demonstrates that it can be used quantitatively and without ambiguity.
   Conclusion: The work presented is novel to improve (i) bug assignment (ii) allow individual developers to choose what they like to provide robust solutions (iii) handles two major issues of differentiating between active and inactive developers and confusion over the assignment of bugs (iv) will further reduce bug-fixing delays and will prevent reassignment problem.
C1 [Gupta, Chetna; Freire, Mario M.] Univ Beira Interior, Covilha, Portugal.
   [Freire, Mario M.] Inst Telecomunicacoes, Aveiro, Portugal.
C3 Universidade da Beira Interior; Universidade de Aveiro
RP Gupta, C (corresponding author), Univ Beira Interior, Covilha, Portugal.
EM chetna.gupta@ubi.pt; mario@di.ubi.pt
RI Freire, Mario M/C-2923-2008
FU Programa Operacional Regional do Centro (CENTRO 2020), through the
   Sistema de Apoio `a Investigacao Cientifica e Tecnologica -Programas
   Integrados de ICDT; FCT/MCTES; EU [UIDB/EEA/50008/2020]; Centro de
   Competencias em Cloud Computing [01-0145-FEDER-000019 -C4]
FX This work is supported by Operacao Centro-01-0145-FEDER-000019 -C4
   -Centro de Competencias em Cloud Computing, co-financed by the Programa
   Operacional Regional do Centro (CENTRO 2020), through the Sistema de
   Apoio `a Investigacao Cientifica e Tecnologica -Programas Integrados de
   IC&DT. This work is also funded by FCT/MCTES through national funds and,
   when applicable, co-funded by EU funds under the project
   UIDB/EEA/50008/2020.
CR Alazzam I, 2020, IEEE T COMPUT SOC SY, V7, P1288, DOI 10.1109/TCSS.2020.3017501
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Gomes L., 2020, INFORM SOFTWARE TECH, V132, DOI [10.1016/j.infsof.2020.106508, DOI 10.1016/J.INFSOF.2020.106508]
   Mason W., 2009, P ACM SIGKDD WORKSH, DOI DOI 10.1145/1600150.1600175
   MCAFEE RP, 1987, J ECON LIT, V25, P699
   Sajedi-Badashian A., 2020, VOCABULARY TIME BASE, DOI [10.1002/spe.2830, DOI 10.1002/SPE.2830]
   Sajedi-Badashian A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2250
   Xi SQ, 2019, J COMPUT SCI TECH-CH, V34, P942, DOI 10.1007/s11390-019-1953-5
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
NR 10
TC 6
Z9 6
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106540
DI 10.1016/j.infsof.2021.106540
EA FEB 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600006
DA 2024-07-18
ER

PT J
AU Shen, WJ
   Li, YH
   Han, YL
   Chen, L
   Wu, D
   Zhou, YM
   Xu, BW
AF Shen, Weijun
   Li, Yanhui
   Han, Yuanlei
   Chen, Lin
   Wu, Di
   Zhou, Yuming
   Xu, Baowen
TI Boundary sampling to boost mutation testing for deep learning models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Deep learning; Mutation testing; Boundary; Neural
   network
ID REGRESSION TEST SELECTION; MUTANT REDUCTION; OPERATORS; NETWORKS
AB Context: The prevalent application of Deep Learning (DL) models has raised concerns about their reliability. Due to the data-driven programming paradigm, the quality of test datasets is extremely important to gain accurate assessment of DL models. Recently, researchers have introduced mutation testing into DL testing, which applies mutation operators to generate mutants from DL models, and observes whether the test data can identify mutants to check the quality of test dataset. However, there still exist many factors (e.g., huge labeling efforts and high running cost) hindering the implementation of mutation testing for DL models.
   Objective: We desire for an approach to selecting a smaller, sensitive, representative and efficient subset of the whole test dataset to promote the current mutation testing (e.g., reduce labeling and running cost) for DL Models.
   Method: We propose boundary sample selection (BSS), which employs the distance of samples to decision boundary of DL models as the indicator to construct the appropriate subset. To evaluate the performance of BSS, we conduct an extensive empirical study with two widely-used datasets, three popular DL models, and 14 up-to-date DL mutation operators. Results
   : We observe that (1) The sizes of our subsets generated by BSS are much smaller (about 3%-20% of the whole test set). (2) Under most mutation operators, our subsets are superior (about 9.94-21.63) than the whole test sets in observing mutation effects. (3) Our subsets could replace the whole test sets to a very high degree (higher than 97%) when considering mutation score. (4) The MRR values of our proposed subsets are clearly better (about 2.28-13.19 times higher) than that of the whole test sets.
   Conclusions: The result shows that BSS can help testers save labelling cost, run mutation testing quickly and identify killed mutants early.
C1 [Shen, Weijun; Li, Yanhui; Han, Yuanlei; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Li, Yanhui; Han, Yuanlei; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
   [Shen, Weijun] Nanjing Univ, Software Inst, Nanjing 210023, Peoples R China.
   [Wu, Di] Momenta, Nantiancheng Rd, Suzhou, Peoples R China.
C3 Nanjing University; Nanjing University; Nanjing University
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.; Li, YH (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM yanhuili@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; su, hang/KEH-2976-2024
OI Xu, Baowen/0000-0001-7743-1296; Li, Yanhui/0000-0003-2282-7175
FU National Key R&D Program of China [2018YFB1003901]; National Natural
   Science Foundation of China [61932012, 61872177, 61832009, 61772263,
   61772259]
FX The work is supported by National Key R&D Program of China (Grant No.
   2018YFB1003901) and the National Natural Science Foundation of China
   (Grant No. 61932012, 61872177, 61832009,61772263, and 61772259). We
   thank the anonymous referees for their helpful comments on this paper.
CR Abdel-Hamid O, 2014, IEEE-ACM T AUDIO SPE, V22, P1533, DOI 10.1109/TASLP.2014.2339736
   AbouTrab MS, 2012, P INT COMP SOFTW APP, P660, DOI 10.1109/COMPSAC.2012.93
   Alberto A, 2017, INFORM SOFTWARE TECH, V81, P131, DOI 10.1016/j.infsof.2016.04.003
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anderson J, 2019, INFORM SOFTWARE TECH, V113, P110, DOI 10.1016/j.infsof.2019.05.008
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], MNIST DATABASE HANDW
   Arcaini P, 2017, INFORM SOFTWARE TECH, V81, P52, DOI 10.1016/j.infsof.2016.01.019
   Arrieta A., 2019, INF SOFTW TECHNOL
   Aziz B, 2018, INFORM SOFTWARE TECH, V100, P183, DOI 10.1016/j.infsof.2018.04.011
   Banias O., 2019, INF SOFTW TECHNOL
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Bures M., 2019, INF SOFTW TECHNOL
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Changbing Ji, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P556, DOI 10.1109/COMPSAC.2009.192
   Chekam T.T., 2017, 2017 IEEE ACM 39 INT
   Chen Zhenyu, 2012, GI JAHRESTAGUNG, V133, P187
   Choi E, 2017, J AM MED INFORM ASSN, V24, P361, DOI 10.1093/jamia/ocw112
   Craswell N., MEAN RECIPROCAL RANK, P1703, DOI [10.1007/978-0-387-39940-9_488., DOI 10.1007/978-0-387-39940-9_488.]
   Dan C.C., 2011, INT JOINT C IJC
   Delamaro ME, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/ISSRE.1996.558719
   Delgado-Perez P., 2018, INF SOFTW TECHNOL, V104
   Delgado-Pérez P, 2017, INFORM SOFTWARE TECH, V81, P169, DOI 10.1016/j.infsof.2016.07.002
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Garousi V, 2018, INFORM SOFTWARE TECH, V103, P40, DOI 10.1016/j.infsof.2018.06.007
   Geiger A., 2012, CVPR
   Girshick R., 2014, PROC CVPR IEEE, DOI [DOI 10.1109/CVPR.2014.81, 10.1109/CVPR.2014.81]
   Gligoric M, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P3, DOI 10.1109/ICSE-NIER.2017.15
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Hamidzadeh J, 2019, APPL INTELL, V49, P2030, DOI 10.1007/s10489-018-1374-0
   Hamidzadeh J, 2015, PATTERN RECOGN, V48, P1878, DOI 10.1016/j.patcog.2014.11.005
   Hauswald J, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P27, DOI 10.1145/2749469.2749472
   Hong S, 2017, INFORM SOFTWARE TECH, V82, P80, DOI 10.1016/j.infsof.2016.10.002
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LESHNO M, 1993, NEURAL NETWORKS, V6, P861, DOI 10.1016/S0893-6080(05)80131-5
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Lindström B, 2017, INFORM SOFTWARE TECH, V81, P112, DOI 10.1016/j.infsof.2016.04.007
   López J, 2018, INFORM SOFTWARE TECH, V103, P138, DOI 10.1016/j.infsof.2018.06.013
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Mittal S, 2019, J SYST ARCHITECT, V99, DOI 10.1016/j.sysarc.2019.101635
   Nair V., THE CIFAR 10 DATASET
   Omar E, 2017, INFORM SOFTWARE TECH, V81, P3, DOI 10.1016/j.infsof.2016.01.016
   OMNRF, 2020, P IFIP C APPROVING S
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Romano S, 2018, INFORM SOFTWARE TECH, V99, P62, DOI 10.1016/j.infsof.2018.03.004
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sánchez AB, 2018, INFORM SOFTWARE TECH, V103, P159, DOI 10.1016/j.infsof.2018.06.015
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Shi Q., 2019, DEEPGINI PRIORITIZIN
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Sun YX, 2018, IEEE GLOB COMM CONF
   Sutskever I., 2014, ADV NEURAL INFORM PR, V4, P3104, DOI DOI 10.5555/2969033.2969173
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Taeihagh A., 2018, GOVERNING AUTONOMOUS, P1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Vincent E, 2008, INT CONF ACOUST SPEE, P109, DOI 10.1109/ICASSP.2008.4517558
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Xiao CW, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3905
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yu XY, 2019, IEEE T NEUR NET LEAR, V30, P2805, DOI 10.1109/TNNLS.2018.2886017
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang JE, 2020, INT REV FINANC, V20, P605, DOI 10.1111/irfi.12234
   Zhang ZY, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P10
   Zhu F, 2014, NEUROCOMPUTING, V123, P166, DOI 10.1016/j.neucom.2013.07.002
NR 82
TC 8
Z9 9
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106413
DI 10.1016/j.infsof.2020.106413
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900011
DA 2024-07-18
ER

PT J
AU Vogel, T
   Tran, C
   Grunske, L
AF Vogel, Thomas
   Tran, Chinh
   Grunske, Lars
TI A comprehensive empirical evaluation of generating test suites for
   mobile applications with diversity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fitness landscape analysis; Diversity; Test generation
ID FITNESS LANDSCAPES; GENETIC ALGORITHM; ANDROID APPS; SEARCH;
   OPTIMIZATION
AB Context: In search-based software engineering we often use popular heuristics with default configurations, which typically lead to suboptimal results, or we perform experiments to identify configurations on a trial-and-error basis, which may lead to better results for a specific problem. We consider the problem of generating test suites for mobile applications (apps) and rely on SAPIENZ, a state-of-the-art approach to this problem that uses a popular heuristic (NSGA-II) with a default configuration. Objective: We want to achieve better results in generating test suites with SAPIENZ while avoiding trial-and-error experiments to identify a more suitable configuration of SAPIENZ. Method: We conducted a fitness landscape analysis of SAPIENZ to analytically understand the search problem, which allowed us to make informed decisions about the heuristic and configuration of SAPIENZ when developing SAPIENZ(DIV). We comprehensively evaluated SAPIENZ(DIV) in a head-to-head comparison with SAPIENZ on 34 apps. Results: Analyzing the fitness landscape of SAPIENZ, we observed a lack of diversity of the evolved test suites and a stagnation of the search after 25 generations. SAPIENZ(DIV) realizes mechanisms that preserve the diversity of the test suites being evolved. The evaluation showed that SAPIENZ(DIV) achieves better or at least similar test results than SAPIENZ concerning coverage and the number of revealed faults. However, SAPIENZ(DIV) typically produces longer test sequences and requires more execution time than SAPIENZ. Conclusions: The understanding of the search problem obtained by the fitness landscape analysis helped us to find a more suitable configuration of SAPIENZ without trial-and-error experiments. By promoting diversity of test suites during the search, improved or at least similar test results in terms of faults and coverage can be achieved.
C1 [Vogel, Thomas; Tran, Chinh; Grunske, Lars] Humboldt Univ, Software Engn Grp, Berlin, Germany.
C3 Humboldt University of Berlin
RP Vogel, T (corresponding author), Humboldt Univ, Software Engn Grp, Berlin, Germany.
EM thomas.vogel@informatik.hu-berlin.de; mail@chinhtran.de;
   grunske@informatik.hu-berlin.de
RI Tran, Christina/JXN-9901-2024; Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745
FU German Science Foundation (DFG) [GR 3634/6-1]; 2018 Facebook Testing and
   Verification research award
FX This work has been developed in the FLASH project (GR 3634/6-1) funded
   by the German Science Foundation (DFG) and has been partially supported
   by the 2018 Facebook Testing and Verification research award. We thank
   the Hasso Plattner Institute for providing us access to the HPI Future
   SOC computing infrastructure to conduct the experiments.
CR Albunian N, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1204, DOI 10.1145/3377930.3390194
   Albunian NM, 2017, LECT NOTES COMPUT SC, V10452, P183, DOI 10.1007/978-3-319-66299-2_17
   Aleti A, 2017, AUTOMAT SOFTW ENG, V24, P603, DOI 10.1007/s10515-016-0197-7
   Aleti A, 2015, IEEE INT C ENG COMP, P11, DOI 10.1109/ICECCS.2015.12
   Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], 2017, UI APPL EXERCISER MO
   [Anonymous], 2002, LECT NOTES PHYS
   [Anonymous], 2017, ABS170906017 CORR
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bachelet V., 1999, THESIS
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Chicano F, 2011, LECT NOTES COMPUT SC, V6956, P48, DOI 10.1007/978-3-642-23716-4_7
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Culberson JC, 1998, EVOL COMPUT, V6, P109, DOI 10.1162/evco.1998.6.2.109
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Feldt R, 2013, PROC INT SYMP SOFTW, P350, DOI 10.1109/ISSRE.2013.6698888
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Guanzhou Lu, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P3, DOI 10.1109/SSBSE.2010.10
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   ISERMANN H, 1977, OPER RES QUART, V28, P711, DOI 10.2307/3008921
   Jabbarvand R, 2019, PROC INT CONF SOFTW, P1119, DOI 10.1109/ICSE.2019.00115
   Jones Terry, 1995, THESIS
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Lefticaru R, 2009, PROCEEDINGS OF THE 10TH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, P201, DOI 10.1109/SYNASC.2008.69
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Liefooghe A, 2014, LECT NOTES COMPUT SC, V8752, P3, DOI 10.1007/978-3-319-11683-9_1
   Maaranen H, 2007, J GLOBAL OPTIM, V37, P405, DOI 10.1007/s10898-006-9056-6
   Machiry A., 2013, P ESEC FSE 2013 ACM, P599
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Malan KM, 2013, INFORM SCIENCES, V241, P148, DOI 10.1016/j.ins.2013.04.015
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Morrison J., 1998, Advances in Artificial Intelligence. 12th Biennial Conference of the Canadian Society for Computational Studies of Intelligence, AI'98. Proceedings, P128
   Moser I, 2017, EVOL COMPUT, V25, P407, DOI [10.1162/evco_a_00177, 10.1162/EVCO_a_00177]
   Neto FGD, 2018, ASIA PAC SOFWR ENG, P149, DOI 10.1109/APSEC.2018.00029
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Oliveira C, 2018, IEEE T RELIAB, V67, P771, DOI 10.1109/TR.2018.2832072
   Olorunda O, 2008, IEEE C EVOL COMPUTAT, P1128, DOI 10.1109/CEC.2008.4630938
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Luis,, 2009, LECT NOTES ECON MATH, V618, P69
   Pitzer E, 2012, STUD COMPUT INTELL, V378, P161
   Purshouse RC, 2007, IEEE T EVOLUT COMPUT, V11, P770, DOI 10.1109/TEVC.2007.910138
   Ronald S, 1998, IEEE C EVOL COMPUTAT, P793, DOI 10.1109/ICEC.1998.700153
   Sell L, 2019, LECT NOTES COMPUT SC, V11812, P123, DOI 10.1007/978-3-030-31280-0_8
   Shi QK, 2016, IEEE T RELIAB, V65, P19, DOI 10.1109/TR.2015.2434953
   Shir OM, 2009, LECT NOTES COMPUT SC, V5467, P95, DOI 10.1007/978-3-642-01020-0_12
   Smith T, 2002, EVOL COMPUT, V10, P1, DOI 10.1162/106365602317301754
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vogel T, 2019, TLS-TIMES LIT SUPPL, P5
   Waeselynck H, 2007, EMPIR SOFTW ENG, V12, P35, DOI 10.1007/s10664-006-7551-5
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yuen SY, 2009, IEEE T EVOLUT COMPUT, V13, P454, DOI 10.1109/TEVC.2008.2003008
NR 63
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106436
DI 10.1016/j.infsof.2020.106436
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gao, CY
   Zeng, JC
   Sarro, F
   Lo, D
   King, I
   Lyu, MR
AF Gao, Cuiyun
   Zeng, Jichuan
   Sarro, Federica
   Lo, David
   King, Irwin
   Lyu, Michael R.
TI Do users care about ad's performance costs? Exploring the effects of the
   performance costs of in-app ads on user experience
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE In-app ads; User reviews; Ad costs; Empirical study
ID MOBILE; IMPACT
AB Context: In-app advertising is the primary source of revenue for many mobile apps. The cost of advertising (ad cost) is non-negligible for app developers to ensure a good user experience and continuous profits. Previous studies mainly focus on addressing the hidden performance costs generated by ads, including consumption of memory, CPU, data traffic, and battery. However, there is no research on analyzing users' perceptions of ads' performance costs to our knowledge. Objective: To fill this gap and better understand the effects of performance costs of in-app ads on user experience, we conduct a study on analyzing user concerns about ads' performance costs. Method: First, we propose RankMiner, an approach to quantify user concerns about specific app issues, including performance costs. Then, based on the usage traces of 20 subject apps, we measure the performance costs of ads. Finally, we conduct correlation analysis on the performance costs and quantified user concerns to explore whether users complain more for higher performance costs. Results: Our findings include the following: (1) RankMiner can quantify users' concerns better than baselines by an improvement of 214% and 2.5% in terms of Pearson correlation coefficient (a metric for computing correlations between two variables) and NDCG score (a metric for computing accuracy in prioritizing issues), respectively. (2) The performance costs of the with-ads versions are statistically significantly larger than those of no-ads versions with negligible effect size; (3) Users are more concerned about the battery costs of ads, and tend to be insensitive to ads' data traffic costs. Conclusion: Our study is complementary to previous work on in-app ads, and can encourage developers to pay more attention to alleviating the most user-concerned performance costs, such as battery cost.
C1 [Gao, Cuiyun] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen, Peoples R China.
   [Gao, Cuiyun; Zeng, Jichuan; King, Irwin; Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Sarro, Federica] UCL, Dept Comp Sci, London, England.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Harbin Institute of Technology; Chinese University of Hong Kong;
   University of London; University College London; Singapore Management
   University
RP Zeng, JC (corresponding author), Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM cygao@cse.cuhk.edu.hk; jczeng@cse.cuhk.edu.hk; f.sarro@ucl.ac.uk;
   davidlo@smu.edu.sg; king@cse.cuhk.edu.hk; lyu@cse.cuhk.edu.hk
RI Lo, David/A-2493-2012; King, Irwin/C-9681-2015
OI Lo, David/0000-0002-4367-7201; King, Irwin/0000-0001-8106-6447; Sarro,
   Federica/0000-0002-9146-442X
FU National Natural Science Foundation of China [62002084]; Research Grants
   Council of the Hong Kong Special Administrative Region, China; CUHK
   [14210717]
FX This work was supported by the National Natural Science Foundation of
   China under project No. 62002084 and the Research Grants Council of the
   Hong Kong Special Administrative Region, China (No. CUHK 14210717 of the
   General Research Fund).
CR Ad survey, 2016, AD SURVEY TOP 7 REAS
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Annoying ad, 2016, ANNOYING AD WHICH AD
   [Anonymous], 2017, 3 FACEBOOK AD REVENU
   [Anonymous], 2012, UNDERSTANDING TODAYS
   [Anonymous], 2017, ARXIV170207681
   [Anonymous], 2017, AD REPORT HANDHELD W
   [Anonymous], 2014, REFRESH RATE TOP MOB
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   [Anonymous], 2016, FACEBOOK REPORTS FIR
   [Anonymous], 2015, APP RATINGS IMPORT A
   [Anonymous], 2015, Trans. Assoc. Comput. Linguist, DOI DOI 10.1162/TACL_A_00135
   App market, 2018, APP MARKET DISTRIBUT
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Brodersen KH, 2015, ANN APPL STAT, V9, P247, DOI 10.1214/14-AOAS788
   Casati L., 2017, P INT C INN MOB INT, P952
   Charness N., 2016, HDB PSYCHOL AGING, V8th, P389
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen T., 2014, 15 WORKSH MOB COMP S
   Chowdhury H.K., 2006, INT J MOB MARK, V1
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Croft W. B., 2010, SEARCH ENGINES INFOR
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Grace M.C., 2012, P 5 ACM C SEC PRIV W, P101, DOI DOI 10.1145/2185448.2185464
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu MS, 2018, INT C WAVEL ANAL PAT, P13, DOI 10.1109/ICWAPR.2018.8521299
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hsu H., 2008, Paired t Test
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jiaping Gui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2016.009
   Kang Y., 2015, PERSISDROID ANDROID
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Lin D, 2009, INT EL DEVICES MEET, P300
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mohan P., 2013, P 8 ACM EUR C COMP S, P267, DOI DOI 10.1145/2465351.2465378
   Mouawi R, 2015, IEEE CONF WIREL MOB, P581, DOI 10.1109/WiMOB.2015.7348014
   Nath S., 2015, P 13 ANN INT C MOB S, P59
   Noei E, 2019, IEEE T SOFTWARE ENG
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI [DOI 10.1098/RSPL.1895.0041, 10.1098/rspl.1895.0041]
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Pujol E, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P93, DOI 10.1145/2815675.2815705
   Rastogi V, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23234
   Retherford R.D. M.K. Choe., 1993, STAT MODELS CAUSAL A
   Ruiz I. Mojica, 2014, IEEE SOFTWARE, VPP, P1
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Saborido R, 2017, INT C PROGRAM COMPRE, P143, DOI 10.1109/ICPC.2017.25
   Seneviratne A., 2013, P 5 INT C COMM SYST
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sheng B, 2016, 2016 ASIA-PACIFIC CONFERENCE ON INTELLIGENT ROBOT SYSTEMS (ACIRS 2016), P21, DOI 10.1109/ACIRS.2016.7556181
   Son S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23407
   Soroa-Koury Sandra, 2010, Telematics and Informatics, V27, P103, DOI 10.1016/j.tele.2009.06.001
   Stevens R., 2017, WORKSH MOB SEC TECHH, V10
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Ullah I, 2014, IEEE CONF COMPUT, P547, DOI 10.1109/INFCOMW.2014.6849290
   Vallina-Rodriguez Narseo, 2012, Proceedings of the 2012 ACM conference on Internet measurement conference, P343
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Yu J.H., 2013, INT J MOB MARK, V8
NR 79
TC 5
Z9 5
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106471
DI 10.1016/j.infsof.2020.106471
EA JAN 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900012
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, Claes
TI Case Study Research in Software Engineering-It is a Case, and it is a
   Study, but is it a Case Study?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Empirical; Misuse; Software engineering
AB Background: Case studies are regularly published in the software engineering literature, and guidelines for conducting case studies are available. Based on a perception that the label "case study'' is assigned to studies that are not case studies, an investigation has been conducted.
   Objective: The aim was to investigate whether or not the label "case study'' is correctly used in software engineering research.
   Method: To address the objective, 100 recent articles found through Scopus when searching for case studies in software engineering have been investigated and classified.
   Results: Unfortunately, the perception of misuse of the label "case study'' is correct. Close to 50% of the articles investigated were judged as not being case studies according to the definition of a case study.
   Conclusions: We either need to ensure correct use of the label "case study'', or we need another label for its definition. Given that "case study'' is a well-established label, it is probably impossible to change the label. Thus, we introduce an alternative definition of case study emphasising its real-life context, and urge researchers to carefully follow the definition of different research methods when presenting their research.
C1 [Wohlin, Claes] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 1994, CASE STUDY RES APPL
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Robson C., 2002, Real World Research, V2nd
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
NR 8
TC 24
Z9 30
U1 6
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106514
DI 10.1016/j.infsof.2021.106514
EA JAN 2021
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kassahun, A
   Tekinerdogan, B
AF Kassahun, Ayalew
   Tekinerdogan, Bedir
TI BITA*: Business-IT alignment framework of multiple collaborating
   organisations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business-IT alignment; Business collaboration; Reference architecture;
   Distributed systems; Business process models; Workflow patterns
ID CHAIN-WIDE TRANSPARENCY; DESIGN SCIENCE RESEARCH; PROCESS MANAGEMENT;
   ARCHITECTURE; PERSPECTIVES; TECHNOLOGY; CHALLENGES
AB Context: Businesses today must collaborate in a coordinated fashion. To collaborate, they must align their business processes and IT by complying to a common reference architecture. The common reference architecture that addresses their specific collaboration requirements is generally an adaptation of an existing generic reference architecture. However, a design framework for adapting reference architectures is lacking.
   Objective: In this paper we propose a design framework for aligning business processes and IT across diverse collaborating organisations in order to derive a more specific reference architecture from a generic one.
   Method: We developed the design framework using the guidelines of ISO/IEC/IEEE standard for modelling design viewpoints and validated it in a real-life business case study.
   Results: We developed an architectural design framework which we call BITA * that is composed of three coherent architectural design viewpoints. The BP2BP alignment viewpoint provides alignment modelling abstractions for business analysts to be used to align business collaboration processes. The IT2IT alignment viewpoint pro vides alignment modelling abstractions for software architects to be used to align distributed IT systems. The BP2IT alignment viewpoint provides alignment modelling abstractions for interdisciplinary teams of business and IT specialists for aligning the mapping of business collaboration processes and the underlying distributed IT. The modelling abstractions are applied in a case study to derive a reference architecture for meat supply chain transparency systems.
   Conclusion: A key challenge in developing the design framework is the difficulty of comparing models of business processes and IT that come from diverse organisations. Our main contribution is the set of modelling abstractions, which enabled us to represent business processes and IT in a uniform and comparable manner, and the systematic approach for applying the modelling abstractions. The framework is applied in the agri-food sector and needs to be evaluated further in multiple case studies from various application domains.
C1 [Kassahun, Ayalew; Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, Hollandseweg 1, NL-6706 KN Wageningen, Netherlands.
C3 Wageningen University & Research
RP Kassahun, A (corresponding author), Wageningen Univ, Informat Technol Grp, Hollandseweg 1, NL-6706 KN Wageningen, Netherlands.
EM ayalew.kassahun@wur.nl
RI Tekinerdogan, Bedir/K-3639-2019; Kassahun, ir. Ayalew/AAA-1724-2021
OI Tekinerdogan, Bedir/0000-0002-8538-7261; Kassahun, ir.
   Ayalew/0000-0003-1066-7127
FU European Community's Horizon 2020 Programme (H2020/2014-2020) within the
   IoF2020 project [731 884]; European Community
FX The research leading to this paper received funding from the European
   Community's Horizon 2020 Programme (H2020/2014-2020) within the IoF2020
   project under grant agreement No. 731 884. We acknowledge the European
   Community for the funding. We would also like to acknowledge Rob Hartog,
   former member of the Information Technology Group of Wageningen
   University, for the careful review of the paper.
CR Alotaibi Y, 2016, J INTELL MANUF, V27, P701, DOI 10.1007/s10845-014-0917-4
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   [Anonymous], 2011, TOGAF VERS 9 1
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2003, Web services and service-oriented architecture
   [Anonymous], 2008, SOA principles of service design
   Antunes Goncalo., 2015, ENTERPRISE MODELLING, P127
   Aversano L, 2016, INFORM SOFTWARE TECH, V72, P171, DOI 10.1016/j.infsof.2015.12.009
   Barmpounakis Sokratis, 2015, Information Processing in Agriculture, V2, P51, DOI 10.1016/j.inpa.2015.04.002
   Bouguettaya A., 2014, RESTFUL WEB SERVICES, P31
   Buschmann Frank, 2007, A Pattern Language for Distributed Computing, V4
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chen D, 2008, COMPUT IND, V59, P647, DOI 10.1016/j.compind.2007.12.016
   Chen HM, 2005, SCI COMPUT PROGRAM, V57, P5, DOI 10.1016/j.scico.2004.10.002
   Chen Hong-Mei., 2008, P 41 ANN HAWAII INT
   Cloutier R, 2010, SYSTEMS ENG, V13, P14, DOI 10.1002/sys.20129
   Crasso M., 2013, INNOVATIONS DATABASE, P107
   Cummins F.A., 2015, HDB BUSINESS PROCESS, P531
   Daclin N, 2016, COMPUT IND, V82, P1, DOI 10.1016/j.compind.2016.04.001
   Davenport TH, 2005, HARVARD BUS REV, V83, P100
   DAVENPORT TH, 1990, SLOAN MANAGE REV, V31, P11
   Demirkan H, 2008, ELECTRON COMMER R A, V7, P356, DOI 10.1016/j.elerap.2008.07.002
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Easterbrook S, 2000, ICSE 00 P C FUT SOFT
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EPCglobal, 2014, EPC INF SERV EPCIS V
   Gandino F, 2009, IEEE T IND ELECTRON, V56, P2357, DOI 10.1109/TIE.2009.2019569
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   GS1, 2014, COR BUS VOC CBV STAN
   HAMMER M, 1990, HARVARD BUS REV, V68, P104
   Harmon Paul., 2016, The State of Business Process Management
   Harrington H.J., 1991, BUSINESS PROCESS IMP
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P23, DOI 10.1007/978-1-4419-5653-8_3
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HI-Tier, 2013, GERK UND INF TIER
   Hinkelmann K, 2016, COMPUT IND, V79, P77, DOI 10.1016/j.compind.2015.07.009
   Hoch R, 2016, P ANN HICSS, P4556, DOI 10.1109/HICSS.2016.566
   ISO, 2013, EN ISO 10993-10:2013, P2013
   ISO/IEC/IEEE, 2011, 42010 ISO IEC IEEE S
   Kaloxylos A, 2013, PROC TECH, V8, P51, DOI 10.1016/j.protcy.2013.11.009
   Kassahun A, 2016, COMPUT ELECTRON AGR, V123, P275, DOI 10.1016/j.compag.2016.03.004
   Kassahun A, 2014, COMPUT ELECTRON AGR, V109, P179, DOI 10.1016/j.compag.2014.10.002
   Kruize JW, 2016, COMPUT ELECTRON AGR, V125, P12, DOI 10.1016/j.compag.2016.04.011
   Kürschner C, 2008, LECT NOTES COMPUT SC, V4952, P19
   Kywe S.M., 2012, ADV INTERNET THINGS, V02, P10
   Laplante PhillipA., 2013, REQUIREMENTS ENG SOF
   Liu CF, 2009, INFORM SYST FRONT, V11, P201, DOI 10.1007/s10796-008-9089-0
   Lorenz M., 2011, DESIGNING DEPLOYING
   Mentzer J.T., 2001, J BUSINESS LOGISTICS, V22, P1, DOI [DOI 10.1002/J.2158-1592.2001.TB00001.X, 10.1002/j.2158-1592.2001.tb00001.x]
   Mitra N, 2007, SOAP VERSION 1 2 PAR
   Moe T, 1998, TRENDS FOOD SCI TECH, V9, P211, DOI 10.1016/S0924-2244(98)00037-5
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Newcomer E., 2004, UNDERSTANDING SOA WE
   OASIS, 2004, UDD VER 302 UDD V3
   OASIS, 2006, OAS STAND 12
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Pradabwong J, 2017, SUPPLY CHAIN MANAG, V22, P107, DOI 10.1108/SCM-01-2017-0008
   Rosemann M., 2015, Handbook on Business Process Management 1: Introduction, Methods, and Information Systems, P105, DOI [DOI 10.1007/978-3-642-45100-3_5, https://doi.org/10.1007/978-3-642-45100-3_5]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russell N., 2006, BPM0622 BPM
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Steinberger G, 2009, COMPUT ELECTRON AGR, V65, P238, DOI 10.1016/j.compag.2008.10.005
   Stirna J, 2015, BUS INFORM SYST ENG+, V57, P79, DOI 10.1007/s12599-014-0358-9
   van der Aalst W.M.P., 2011, WORKFLOW PATTERNS
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Verdouw CN, 2010, COMPUT ELECTRON AGR, V73, P174, DOI 10.1016/j.compag.2010.05.005
   Verdouw C, 2014, ANN SRII GLOB CONF, P106, DOI 10.1109/SRII.2014.24
   W3C, 2007, WEB SERVICES DESCRIP
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Wieringa RJ, 2003, LECT NOTES COMPUT SC, V2681, P209
   Wolfert J, 2010, COMPUT ELECTRON AGR, V70, P389, DOI 10.1016/j.compag.2009.07.015
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zhao XH, 2009, IEEE T SYST MAN CY A, V39, P1152, DOI 10.1109/TSMCA.2009.2027130
NR 78
TC 2
Z9 2
U1 4
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106345
DI 10.1016/j.infsof.2020.106345
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NR0EE
UT WOS:000571236700013
DA 2024-07-18
ER

PT J
AU Zampetti, F
   Di Sorbo, A
   Visaggio, CA
   Canfora, G
   Di Penta, M
AF Zampetti, Fiorella
   Di Sorbo, Andrea
   Visaggio, Corrado Aaron
   Canfora, Gerardo
   Di Penta, Massimiliano
TI Demystifying the adoption of behavior-driven development in open source
   projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Behavior-driven development; Acceptance testing; Empirical study;
   Co-evolution
ID ACCEPTANCE TESTS; REQUIREMENTS; MODELS
AB Context: Behavior-Driven Development (BDD) features the capability, through appropriate domain-specific languages, of specifying acceptance test cases and making them executable. The availability of frameworks such as Cucumber or RSpec makes the application of BDD possible in practice. However, it is unclear to what extent developers use such frameworks, and whether they use them for actually performing BDD, or, instead, for other purposes such as unit testing. Objective: In this paper, we conduct an empirical investigation about the use of BDD tools in open source, and how, when a BDD tool is in place, BDD specifications co-evolve with source code. Method: Our investigation includes three different phases: (i) a large-scale analysis to understand the extent to which BDD frameworks are used in 50,000 popular open-source projects written in five programming languages; (H) a study on the co-evolution of scenarios, fixtures and production code in a sample of 20 Ruby projects, through the Granger's causality test, and (Hi) a survey with 31 developers to understand how they use BDD frameworks. Results: Results of the study indicate that similar or equal to 27% of the sampled projects use BDD frameworks, with a prevalence in Ruby projects (68%). In about 37% of the cases, we found a co-evolution between scenarios/fixtures and production code. Specifically, changes to scenarios and fixtures often happen together or after changes to source code. Moreover, survey respondents indicate that, while they understand the intended purpose of BDD frameworks, most of them write tests while/after coding rather than strictly applying BDD. Conclusions: Even if the BDD frameworks usage is widespread among open source projects, in many cases they are used for different purposes such as unit testing activities. This mainly happens because developers felt BDD remains quite effort-prone, and its application goes beyond the simple adoption of a BDD framework.
C1 [Zampetti, Fiorella; Di Sorbo, Andrea; Visaggio, Corrado Aaron; Canfora, Gerardo; Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
C3 University of Sannio
RP Di Penta, M (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747; Di Sorbo,
   Andrea/0000-0002-3192-739X
CR Akaike H, 1973, 2 INT S INF THEOR, P267, DOI [DOI 10.1007/978-1-4612-1694-0_15, 10.1007/978-1-4612-0919-5_38, DOI 10.1007/978-1-4612-0919-5_38]
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Binamungu LP, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P175, DOI 10.1109/SANER.2018.8330207
   Binamungu LP, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P6, DOI 10.1109/VST.2018.8327149
   Bird C, 2006, CAMB INTRO PHILOS, P13
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Groves R.M., 2009, Survey Methodology, V2nd
   Hamilton J.D., 1994, Time series analysis
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Lucassen G, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P431, DOI 10.1109/REW.2017.84
   Mahalakshmi GS, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON RECENT TRENDS AND CHALLENGES IN COMPUTATIONAL MODELS (ICRTCCM), P309, DOI 10.1109/ICRTCCM.2017.83
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Melnik G, 2004, LECT NOTES COMPUT SC, V3134, P60
   Melnik G, 2007, LECT NOTES COMPUT SC, V4536, P245
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Mugridge R., 2005, FIT DEV SOFTWARE FRA
   North D., SELL BDD BUSINESS
   Orellana G, 2017, IEEE WORK CONF MIN S, P451, DOI 10.1109/MSR.2017.25
   Park S, 2009, LECT NOTES BUS INF P, V31, P23
   Pfaff B, 2008, USE R, P3
   Pfaff B, 2008, J STAT SOFTW, V27, P1
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Rahman M, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P321, DOI 10.1109/SOSE.2015.55
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Robles G., 2005, P 2005 INT WORKSH MI
   Soeken M, 2012, LECT NOTES COMPUT SC, V7304, P269, DOI 10.1007/978-3-642-30561-0_19
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wynne M., 2017, The Cucumber Book: Behaviour-Driven Development for Testers and Developers
   Yang Aidan Z. H., 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P534, DOI 10.1109/MSR.2019.00080
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zampetti F., REPLICATION PACKAGE
   Zeileis A, 2002, R NEWS, V2, P7
NR 45
TC 9
Z9 9
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106311
DI 10.1016/j.infsof.2020.106311
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200008
DA 2024-07-18
ER

PT J
AU Kuutila, M
   Mäntylä, M
   Farooq, U
   Claes, M
AF Kuutila, Miikka
   Mantyla, Mika
   Farooq, Umar
   Claes, Maelick
TI Time pressure in software engineering: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
ID PROCESS-IMPROVEMENT; DECISION-MAKING; JOB DEMANDS; INFORMATION; WORK;
   PERFORMANCE; MODEL; KNOWLEDGE; DYNAMICS; SIMULATION
AB Context Large project overruns and overtime work have been reported in the software industry, resulting in additional expense for companies and personal issues for developers. Experiments and case studies have investigated the relationship between time pressure and software quality and productivity.
   Objective: The present work aims to provide an overview of studies related to time pressure in software engineering; specifically, existing definitions, possible causes, and metrics relevant to time pressure were collected, and a mapping of the studies to software processes and approaches was performed. Moreover, we synthesize results of existing quantitative studies on the effects of time pressure on software development, and offer practical takeaways for practitioners and researchers, based on empirical evidence.
   Method: Our search strategy examined 5414 sources, found through repository searches and snowballing. Applying inclusion and exclusion criteria resulted in the selection of 102 papers, which made relevant contributions related to time pressure in software engineering.
   Results: The majority of high quality studies report increased productivity and decreased quality under time pressure. The most frequent categories of studies focus on quality assurance, cost estimation, and process simulation. It appears that time pressure is usually caused by errors in cost estimation. The effect of time pressure is most often identified during software quality assurance.
   Conclusions: The majority of empirical studies report increased productivity under time pressure, while the most cost estimation and process simulation models assume that compressing the schedule increases the total needed hours. We also find evidence of the mediating effect of knowledge on the effects of time pressure, and that tight deadlines impact tasks with an algorithmic nature more severely. Future research should better contextualize quantitative studies to account for the existing conflicting results and to provide an understanding of situations when time pressure is either beneficial or harmful.
C1 [Kuutila, Miikka; Mantyla, Mika; Farooq, Umar; Claes, Maelick] Univ Oulu, M3S, Pentti Kaiteran Katu 1, Oulu 90014, Finland.
C3 University of Oulu
RP Kuutila, M (corresponding author), Univ Oulu, M3S, Pentti Kaiteran Katu 1, Oulu 90014, Finland.
EM miikka.kuutila@oulu.fi
RI Mäntylä, Mika V/E-7644-2012; Kuutila, Miikka/AAH-2783-2019; Farooq,
   Umar/JFA-0090-2023
OI Kuutila, Miikka/0000-0002-3695-7280; 
FU Academy of Finland [298020]; Kaute-foundation; Academy of Finland (AKA)
   [298020] Funding Source: Academy of Finland (AKA)
FX This work has been supported by Academy of Finland grant 298020. The
   first author has been supported by Kaute-foundation.
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   ABDELHAMID TK, 1990, IEEE SOFTWARE, V7, P97, DOI 10.1109/52.43055
   [Anonymous], 20 AM C INF SYST AMC
   [Anonymous], 20 AM C INF SYST AMC
   [Anonymous], TECHNICAL REPORT
   [Anonymous], EPROCEEDINGS 12 INT
   [Anonymous], AMCIS 2009 P
   [Anonymous], COMP SUPP COOP WORK
   [Anonymous], P 1992 C CTR ADV STU
   [Anonymous], HORRIBLE WORLD VIDEO
   [Anonymous], P 27 INT C SYST DYN
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], P 11 EUR SOFTW CONTR
   [Anonymous], P 5 JOINT INT C ED W
   [Anonymous], P 25 AUSTR C INF SYS
   [Anonymous], 1988, PRINCIPLES SOFTWARE
   [Anonymous], THESIS
   [Anonymous], APPL SOCIAL RES METH
   [Anonymous], COORPORATE OWNERSHIP
   [Anonymous], 2010, ACM T MANAG INF SYST
   [Anonymous], SILICON VALLEYS PRES
   [Anonymous], INT J GREEN COMPUTIN
   [Anonymous], CROSSTALK
   [Anonymous], P 8 INT C INF SYST P
   [Anonymous], SLOAN MANAGE REV
   Ariely D, 2002, PSYCHOL SCI, V13, P219, DOI 10.1111/1467-9280.00441
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Bakker A. B., 2007, J MANAGERIAL PSYCHOL, V22, P309, DOI [10.1108/02683940710733115, DOI 10.1108/02683940710733115]
   Baskerville R, 2001, COMPUTER, V34, P51, DOI 10.1109/2.920612
   Basten D, 2011, INT SYMP EMP SOFTWAR, P235, DOI 10.1109/ESEM.2011.32
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Blackburn J. D., 1996, Integrated Manufacturing Systems, V7, P60, DOI 10.1108/09576069610111918
   Boehm B, 2000, COST ESTIMATION COCO
   Boehm B.W., 1981, Software engineering economics, V197
   Brooks Frederick P., 1995, The mythical man-month
   CAMPION MA, 1982, ORGAN BEHAV HUM PERF, V30, P265, DOI 10.1016/0030-5073(82)90221-5
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cataldo M, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P281
   Chong DSF, 2011, IEEE T ENG MANAGE, V58, P71, DOI 10.1109/TEM.2010.2048914
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Clegg CW, 1996, BEHAV INFORM TECHNOL, V15, P237, DOI 10.1080/014492996120166
   Cooper C.L., 2001, Organizational stress: A review and critique of theory, research, and applications
   Costello S. H., 1984, SIGSOFT Software Engineering Notes, V9, P15, DOI 10.1145/1010941.1010947
   Deak A, 2016, INFORM SOFTWARE TECH, V73, P1, DOI 10.1016/j.infsof.2016.01.002
   Demerouti E, 2001, J APPL PSYCHOL, V86, P499, DOI 10.1037//0021-9010.86.3.499
   Durham CC, 2000, HUM PERFORM, V13, P115, DOI 10.1207/s15327043hup1302_1
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Ferreira S, 2009, J SYST SOFTWARE, V82, P1568, DOI 10.1016/j.jss.2009.03.014
   Fujigaki Y, 1996, IND HEALTH, V34, P71, DOI 10.2486/indhealth.34.71
   Fujigaki Y, 1997, INT J HUM-COMPUT INT, V9, P369, DOI 10.1207/s15327590ijhc0904_3
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Hale DP, 2011, DATA BASE ADV INF SY, V42, P59, DOI 10.1145/1952712.1952716
   Hart S. G., 2006, P HUM FACT ERG SOC A, V50, P904, DOI DOI 10.1177/154193120605000909
   Heitz RP, 2014, FRONT NEUROSCI-SWITZ, V8, DOI 10.3389/fnins.2014.00150
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Hussain S, 2008, COMM COM INF SC, V20, P202
   HWANG MI, 1994, INFORM MANAGE, V27, P197, DOI 10.1016/0378-7206(94)90048-5
   JEFFERY DR, 1987, IEEE T SOFTWARE ENG, V13, P852, DOI 10.1109/TSE.1987.233496
   Jemielniak D, 2009, INFORM ORGAN-UK, V19, P277, DOI 10.1016/j.infoandorg.2009.08.002
   Jones C., 2006, Crosstalk - The Journal of Defense Software Engineering, V19, P4
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   KARASEK RA, 1979, ADMIN SCI QUART, V24, P285, DOI 10.2307/2392498
   Karhu K, 2009, INFORM SOFTWARE TECH, V51, P663, DOI 10.1016/j.infsof.2008.09.001
   KELLY JR, 1985, J PERS SOC PSYCHOL, V49, P395, DOI 10.1037/0022-3514.49.2.395
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   KITCHENHAM BA, 1992, INFORM SOFTWARE TECH, V34, P211, DOI 10.1016/0950-5849(92)90077-3
   Kolakowska A, 2013, C HUM SYST INTERACT, P532, DOI 10.1109/HSI.2013.6577877
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   Kuutila M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P54, DOI 10.1109/SEmotion.2017.11
   Laanti M, 2013, P ANN HICSS, P4761, DOI 10.1109/HICSS.2013.74
   Langer N, 2014, INFORM SYST RES, V25, P364, DOI 10.1287/isre.2014.0523
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Lee JS, 2012, J MANAGE INFORM SYST, V29, P53, DOI 10.2753/MIS0742-1222290102
   Lepine JA, 2005, ACAD MANAGE J, V48, P764, DOI 10.2307/20159696
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lin CY, 1997, J SYST SOFTWARE, V38, P263, DOI 10.1016/S0164-1212(96)00156-2
   MacKenzie IS, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1633
   Madan CR, 2015, J COGN PSYCHOL, V27, P921, DOI 10.1080/20445911.2015.1055274
   Malgonde O., 2014, P 20 AM C INF SYST, P1
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Maruping LM, 2015, ACAD MANAGE J, V58, P1313, DOI 10.5465/amj.2012.0468
   Maule AJ, 2000, ACTA PSYCHOL, V104, P283, DOI 10.1016/S0001-6918(00)00033-0
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   Miranda E, 2008, PROJ MANAG J, V39, P75, DOI 10.1002/pmj.20067
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Mullainathan S., 2013, Scarcity: Why having too little means so much
   Nan N., 2003, INT C INF SYST ICIS, P71
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi Mahmood., 2009, CROSSTALK. The Journal of Defense Software Engineering, V22, P24
   Nugroho Ariadi, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P467
   Park C, 2008, J ASSOC INF SYST, V9, P409, DOI 10.17705/1jais.00163
   Paul S., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P149, DOI 10.1109/HICSS.2012.593
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   Perlow LA, 2002, ACAD MANAGE J, V45, P931, DOI 10.5465/3069323
   Perlow LA, 2001, WORK OCCUPATION, V28, P91, DOI 10.1177/0730888401028001006
   Perlow LA, 1998, ADMIN SCI QUART, V43, P328, DOI 10.2307/2393855
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pfahl D., 2001, An Integrated Approach to Simulation Based Learning in Support of Strategic and Project Management in Software Organizations
   Plonka L, 2012, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2012.6227166
   Powell A, 1999, J SYST SOFTWARE, V46, P151, DOI 10.1016/S0164-1212(99)00008-4
   Procaccino JD, 2006, COMMUN ACM, V49, P79, DOI 10.1145/1145287.1145291
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Qing Hu, 1998, Journal of Management Information Systems, V15, P143
   Rahmandad H, 2009, SYST DYNAM REV, V25, P224, DOI 10.1002/sdr.425
   Ramanujan S, 2000, J SYST SOFTWARE, V54, P137, DOI 10.1016/S0164-1212(00)00033-9
   Reichelt K., 1999, European Management Journal, V17, P135
   Riordan N. O., 2013, BUILDING SUSTAINABLE, P455
   Rosenberg D, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P60, DOI 10.1145/3084100.3084107
   Ruiz M, 2001, J SYST SOFTWARE, V59, P299, DOI 10.1016/S0164-1212(01)00070-X
   Salman I, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P130, DOI 10.1145/3202710.3203148
   Sawyer S, 2002, INFORM SOC, V18, P263, DOI 10.1080/01972240290075110
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Smite D, 2009, LECT NOTES BUS INF P, V32, P87
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Sojer M, 2014, J MANAGE INFORM SYST, V31, P287, DOI 10.1080/07421222.2014.995563
   Sommerville I, 1996, ACM COMPUT SURV, V28, P269, DOI 10.1145/234313.234420
   SPILKER BC, 1995, ACCOUNT REV, V70, P49
   Staudenmayer N, 2002, ORGAN SCI, V13, P583, DOI 10.1287/orsc.13.5.583.7813
   Sutton AJ, 2000, BMJ-BRIT MED J, V320, P1574, DOI 10.1136/bmj.320.7249.1574
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tapia A.H., 2004, INFORM TECHNOLOGY PE, V17, P303, DOI DOI 10.1108/09593840410554201
   Teng CI, 2010, INT J NURS STUD, V47, P1442, DOI 10.1016/j.ijnurstu.2010.04.005
   Topi H, 2005, INT J HUM-COMPUT ST, V62, P349, DOI 10.1016/j.ijhcs.2004.10.003
   Tuomivaara S, 2017, INT J HUM-COMPUT INT, V33, P857, DOI 10.1080/10447318.2017.1294336
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   van Oorschot K, 2010, J PROD INNOVAT MANAG, V27, P828, DOI 10.1111/j.1540-5885.2010.00754.x
   van Oorschot KE, 2013, ACAD MANAGE J, V56, P285, DOI 10.5465/amj.2010.0742
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Waller MJ, 2001, ACAD MANAGE REV, V26, P586, DOI 10.2307/3560243
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P253
   Yerkes RM, 1908, J COMP NEUROL PSYCHO, V18, P459, DOI 10.1002/cne.920180503
   Zhang H., 2006, 2006 Australian Software Engineering Conference
   ZUNG WWK, 1965, ARCH GEN PSYCHIAT, V12, P63, DOI 10.1001/archpsyc.1965.01720310065008
NR 148
TC 25
Z9 26
U1 3
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106257
DI 10.1016/j.infsof.2020.106257
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0NB
UT WOS:000518706200002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Machado, RS
   Almeida, RB
   Pernas, AM
   Yamin, AC
AF Machado, Roger S.
   Almeida, Ricardo B.
   Pernas, Ana Marilza
   Yamin, Adenauer C.
TI State of the art in hybrid strategies for context reasoning: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Context awareness; Reasoning strategy; Hybrid context reasoning;
   Internet of Things
ID MIDDLEWARE; ONTOLOGY; INTERNET; THINGS
AB Context: Several strategies have been used to implement context reasoning, and a strategy that can be applied satisfactorily in different smart systems applications has not yet been found. Because of this, hybrid proposals for context reasoning are gaining prominence. These proposals allow the combination of two or more strategies.
   Objective: This work aims to identify the state of the art in the context awareness field, considering papers that use hybrid strategies for context reasoning.
   Method: A Systematic Literature Review was explored, contributing to the identification of relevant works in the field, as well as the specification of criteria for its selection. In this review, we analyzed papers published between 2004 and 2018.
   Results: During the process, we identified 3241 papers. After applying filtering and conditioning processes, ten papers about hybrid strategies for context reasoning were selected. We described, discussed, and compared the selected papers.
   Conclusion: The Systematic Literature Review showed that some researchers explore hybrid proposals, but these proposals do not offer flexibility regarding the reasoning strategies used. Thus, we noted that research efforts related to the topic are still necessary, mainly focusing on the development of dynamic approaches that allow the applications to choose how they want to use the different resources available.
C1 [Machado, Roger S.; Almeida, Ricardo B.; Pernas, Ana Marilza; Yamin, Adenauer C.] Univ Fed Pelotas, Comp Sci Grad Program, Pelotas, RS, Brazil.
C3 Universidade Federal de Pelotas
RP Machado, RS (corresponding author), Univ Fed Pelotas, Comp Sci Grad Program, Pelotas, RS, Brazil.
EM rdsmachado@inf.ufpel.edu.br; rbalmeida@inf.ufpel.edu.br;
   marilza@inf.ufpel.edu.br; adenauer@inf.ufpel.edu.br
OI Machado, Roger/0000-0001-6354-3481; Pernas, Ana
   Marilza/0000-0001-8142-817X
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior -Brasil
   (CAPES) [001]; Fundacao de Amparo a Pesquisa do Rio Grande do Sul
   (FAPERGS) - PqG
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior -Brasil (CAPES) - Finance Code 001 and
   Fundacao de Amparo a Pesquisa do Rio Grande do Sul (FAPERGS) - PqG.
   Roger da Silva Machado is a FAPERGS/CAPES - BRAZIL Scholarship holder.
CR AAMODT A, 1994, AI COMMUN, V7, P39
   Agostini Alessandra, 2009, International Journal of Web Engineering and Technology, V5, P3, DOI 10.1504/IJWET.2009.025011
   Alegre U, 2016, J SYST SOFTWARE, V117, P55, DOI 10.1016/j.jss.2016.02.010
   [Anonymous], 2016, IMAGE VIDEO MULTIDIM
   Badii A., 2010, 2010 Third International Conference on Advances in Human-Oriented and Personalized Mechanisms, Technologies, and Services (CENTRIC 2010), P105, DOI 10.1109/CENTRIC.2010.29
   Bellavista P, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2333112.2333119
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Bibri SE, 2015, ATL AMB PERVAS INTEL, V10, P19, DOI 10.2991/978-94-6239-142-0_2
   Bikakis A, 2008, COMM COM INF SC, V11, P14, DOI 10.1007/978-3-540-85379-4_3
   Cabrera M. M., 2010, CORR
   Can O, 2017, ENTROPY-SWITZ, V19, DOI 10.3390/e19010030
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dikici A, 2018, INFORM SOFTWARE TECH, V93, P112, DOI 10.1016/j.infsof.2017.09.001
   Gilman E., 2015, THESIS
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guan D, 2007, 2007 INTERNATIONAL CONFERENCE ON INTELLIGENT PERVASIVE COMPUTING, PROCEEDINGS, P184, DOI 10.1109/IPC.2007.102
   Guizzardi G, 2007, FR ART INT, V155, P18
   Heeager LT, 2018, INFORM SOFTWARE TECH, V103, P22, DOI 10.1016/j.infsof.2018.06.004
   Hosseinzadeh S, 2018, INFORM SOFTWARE TECH, V104, P72, DOI 10.1016/j.infsof.2018.07.007
   Khan N, 2017, LECT NOTES ARTIF INT, V10257, P418, DOI 10.1007/978-3-319-57837-8_35
   Khattak AM, 2014, SENSORS-BASEL, V14, P9628, DOI 10.3390/s140609628
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Knappmeyer M, 2013, IEEE COMMUN SURV TUT, V15, P1492, DOI 10.1109/SURV.2013.010413.00207
   Li X, 2017, APPL SCI-BASEL, V7, DOI 10.3390/app7020183
   Li X, 2015, SENSORS-BASEL, V15, P20570, DOI 10.3390/s150820570
   Lopes J., 2012, 38 C LAT INF CLEI, DOI [10.1109/CLEI.2012.6427253, DOI 10.1109/CLEI.2012.6427253]
   Machado R, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1451, DOI 10.1145/3167132.3167405
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pla Albert, 2014, Mining Intelligence and Knowledge Exploration. Second International Conference, MIKE 2014. Proceedings: LNCS 8891, P229, DOI 10.1007/978-3-319-13817-6_23
   Ranganathan A, 2004, IEEE PERVAS COMPUT, V3, P62, DOI 10.1109/MPRV.2004.1316821
   Razzaq MA, 2017, ASIA-PAC NETW OPER M, P403, DOI 10.1109/APNOMS.2017.8094159
   Razzaque MA, 2016, IEEE INTERNET THINGS, V3, P70, DOI 10.1109/JIOT.2015.2498900
   Riboni D, 2011, PERS UBIQUIT COMPUT, V15, P271, DOI 10.1007/s00779-010-0331-7
   Sahu C. G., 2015, INT J ADV RES COMPUT, V4, P650, DOI [10.17148/IJAR-CCE.2015.45138, DOI 10.17148/IJAR-CCE.2015.45138]
   Sezer OB, 2018, IEEE INTERNET THINGS, V5, P1, DOI 10.1109/JIOT.2017.2773600
   Strobbe M, 2012, KNOWL INF SYST, V31, P581, DOI 10.1007/s10115-011-0411-7
   Subbaraj R., 2016, INT J PHARM TECHNOL, V8, P5021
   Xu T., 2011, P WORKSH POST DEM TR, DOI [10.1145/2088960.2088970, DOI 10.1145/2088960.2088970]
   Yan M, 2017, INFORM SOFTWARE TECH, V92, P1, DOI 10.1016/j.infsof.2017.07.003
   Yuan BC, 2014, PERS UBIQUIT COMPUT, V18, P865, DOI 10.1007/s00779-013-0696-5
   Zavala E, 2019, INFORM SOFTWARE TECH, V105, P161, DOI 10.1016/j.infsof.2018.08.013
   2016, J SYST SOFTW, V118, P251, DOI DOI 10.1016/J.JSS.2016.05.024
NR 43
TC 3
Z9 4
U1 6
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 122
EP 130
DI 10.1016/j.infsof.2019.01.010
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600009
DA 2024-07-18
ER

PT J
AU Asplund, F
AF Asplund, Fredrik
TI Exploratory testing: Do contextual factors influence software fault
   identification?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Exploratory testing; Knowledge management; Test management
ID TEAMS
AB Context Exploratory Testing (ET) is a manual approach to software testing in which learning, test design and test execution occurs simultaneously. Still a developing topic of interest to academia, although as yet insufficiently investigated, most studies focus on the skills and experience of the individual tester. However, contextual factors such as project processes, test scope and organisational boundaries are also likely to affect the approach.
   Objective: This study explores contextual differences between teams of testers at a MedTec firm developing safety-critical products to ascertain whether contextual factors can influence the outcomes of ET, and what associated implications can be drawn for test management.
   Method: A development project was studied in two iterations, each consisting of a quantitative phase testing hypotheses concerning when ET would identify faults in comparison to other testing approaches and a qualitative phase involving interviews.
   Results: Influence on ET is traced to how the scope of tests focus learning on different types of knowledge and imply an asymmetry in the strength and number of information flows to test teams.
   Conclusions: While test specialisation can be attractive to software development organisations, results suggest changes to processes and organisational structures might be required to maintain test efficiency throughout projects: the responsibility for test cases might need to be rotated late in projects, and asymmetries in information flows might require management to actively strengthen the presence and connections of test teams throughout the firm. However, further research is needed to investigate whether these results also hold for non safety-critical faults.
C1 [Asplund, Fredrik] KTH Royal Inst Technol, Div Mechatron, Dept Machine Design, Brinellvagen 83, S-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Asplund, F (corresponding author), KTH Royal Inst Technol, Div Mechatron, Dept Machine Design, Brinellvagen 83, S-10044 Stockholm, Sweden.
EM fasplund@kth.se
RI Asplund, Fredrik/AAX-9170-2021
OI Asplund, Fredrik/0000-0001-5704-4504
CR Adams C., 2008, SAGE ENCY QUALITATIV
   Adams C., 2008, The SAGE encyclopedia of qualitative research methods, V2
   Afzal W, 2015, EMPIR SOFTW ENG, V20, P844, DOI 10.1007/s10664-014-9301-4
   Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   Andersson C., 2007, P 1 INT S EMP SOFTW
   [Anonymous], 2009, INTERVIEWS LEARNING
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, RES DESIGN
   [Anonymous], 2014, CHICKEN
   Aral S, 2016, AM J SOCIOL, V121, P1931, DOI 10.1086/686293
   Bach J., 2000, SOFTW TESTING QUAL E, V2
   Baddoo N., 2002, Software Process Improvement and Practice, V7, P17, DOI 10.1002/spip.151
   Balkundi P, 2006, ACAD MANAGE J, V49, P49, DOI [10.2307/20159745, 10.5465/AMJ.2006.20785500]
   Beer A., 2008, P SOFTW ENG ADV APPL
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Bourque P., 2014, SWEBOK V3. 0 Guide to the Software Engineering Body of Knowledge
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   COHEN WM, 1990, ADMIN SCI QUART, V35, P128, DOI 10.2307/2393553
   Creswell J. W., 2014, SELECTION RES DESIGN
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Cruzes D. S., 2016, P 2016 IEEE 11 INT C
   Earl M, 2001, J MANAGE INFORM SYST, V18, P215
   Feys J, 2016, R J, V8, P367
   Flyvbjerg B., 2011, The Sage Handbook of Qualitative Research, V4th, P301, DOI [DOI 10.1016/B978-1-85617-726-9.00005-4, 10.1016/B978-1-85617-726-9.00005-4]
   Frajtak K., 2016, P IT 2016 6 INT C CO
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Gebizli C. S., 2017, 2017 IEEE INT C SOFT
   Ghazi A. N., 2017, P AG PROC SOFTW ENG
   Ghazi AN, 2018, IEEE ACCESS, V6, P26416, DOI 10.1109/ACCESS.2018.2834957
   Golden, 2009, KNOWLEDGE MANAGEMENT
   Graham D., 2008, TEST DESIGN TECHNIQU
   Granovetter Mark, 1983, SOCIOLOGICAL THEORY, V1, P201, DOI [10.2307/202051, DOI 10.2307/202051]
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J., 2011, THESIS
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Itkonen Juha, 2005, 2005 INT S EMP SOFTW
   Kasurinen J, 2012, ADV COMPUT, V85, P1, DOI 10.1016/B978-0-12-396526-4.00001-1
   Keppel G., 2004, DESIGN ANAL, P193
   Lenberg P., 2014, P 7 INT WORKSH COOP
   Leys C, 2010, J EXP SOC PSYCHOL, V46, P684, DOI 10.1016/j.jesp.2010.02.007
   Lyndsay James, 2003, Adventures in Session-Based Testing
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Martin D., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P467, DOI 10.1007/s10606-006-9032-1
   Micalief M., 2016, P 2016 IEEE 9 INT C
   Mitchell SM, 2016, INFORM SOFTWARE TECH, V72, P151, DOI 10.1016/j.infsof.2015.12.007
   Morrison K., 2007, RES METHODS ED
   Nooteboom B., 2000, J MANAG GOV, V4, P69, DOI DOI 10.1023/A:1009941416749
   Raappana P., 2016, P 2016 IEEE 9 INT C
   Ramler R., 2006, P 2006 INT WORKSHOP, P85, DOI DOI 10.1145/1138929.1138946
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Rosenkranz GK, 2010, PHARM STAT, V9, P162, DOI 10.1002/pst.387
   Runeson P., 2012, Case Study Research in Software Engineering, P61, DOI [10.1002/9781118181034.ch5, DOI 10.1002/9781118181034.CH5]
   RUS I, 2001, STATE ART REPORT KNO
   Saldana J., 2009, 2 CYCLE CODING METHO
   Shah S. M. A., 2014, LNBIP, P187, DOI DOI 10.1007/978-3-319-06862-6_13
   Shah SMA, 2016, IEEE ACCESS, V4, P1859, DOI 10.1109/ACCESS.2016.2544951
   Shoaib L., 2009, P IEEE 13 INT MULT C
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Szulanski G, 1996, STRATEGIC MANAGE J, V17, P27, DOI 10.1002/smj.4250171105
   Tashakkori A., 1989, Mixed Methodology: Combining Qualitative and Quantitative Approaches
   Tinkharn A., 2003, P 2003 STAR E C
   TUSHMAN ML, 1977, ADMIN SCI QUART, V22, P587, DOI 10.2307/2392402
   U.S. Department of Health and Human Services Food and Drug Administration, 2002, TECHNICAL REPORT
   Vaga J., 2002, MANAGING HIGH SPEED
   Wood Bill, 2003, Medical Device and Diagnostic Industry, V25, P90
   Yusop N. S. M., 2016, P 20 INT C EV ASS SO
   [No title captured]
NR 68
TC 2
Z9 2
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 101
EP 111
DI 10.1016/j.infsof.2018.11.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HJ0YN
UT WOS:000456889200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Llerena, L
   Rodriguez, N
   Castro, JW
   Acuña, ST
AF Llerena, Lucrecia
   Rodriguez, Nancy
   Castro, John W.
   Acuna, Silvia T.
TI Adapting usability techniques for application in open source Software: A
   multiple case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source software; Usability techniques; User profiles; Personas;
   Direct observation; Post-test information
AB Context: As a result of the growth of non-developer users of OSS applications, usability has over the last ten years begun to attract the interest of the open source software (OSS) community. The OSS community has some special characteristics (such as worldwide geographical distribution of both users and developers and missing resources) which are an obstacle to the direct adoption of many usability techniques as specified in the human-computer interaction (HCI) field.
   Objective: The aim of this research is to adapt and evaluate the feasibility of applying four usability techniques: user profiles, personas, direct observation and post-test information to four OSS projects from the viewpoint of the development team.
   Method: The applied research method was a multiple case study of the following OSS projects: Quite Universal Circuit Simulator, PSeInt, FreeMind and OpenOffice Writer.
   Results: We formalized the application procedure of each of the adapted usability techniques. We found that either there were no procedures for adopting usability techniques in OSS or they were not fully systematized. Additionally, we identified the adverse conditions that are an obstacle to their adoption in OSS and propose the special adaptations required to overcome the obstacles. To avoid some of the adverse conditions, we created web artefacts (online survey, wiki and forum) that are very popular in the OSS field.
   Conclusion: It is necessary to adapt usability techniques for application in OSS projects considering their idiosyncrasy. Additionally, we found that there are obstacles (for example, number of participant users, biased information provided by developers) to the application of the techniques. Despite these obstacles, it is feasible to apply the adapted techniques in OSS projects.
C1 [Llerena, Lucrecia; Rodriguez, Nancy; Acuna, Silvia T.] Univ Autonoma Madrid, Dept Ingn Informat, Calle Francisco Tomas y Valiente 11, E-28049 Madrid, Spain.
   [Castro, John W.] Univ Atacama, Dept Ingn Informat & Ciencias Comp, Ave Copayapu 485, Copiapo 1530000, Chile.
C3 Autonomous University of Madrid; Universidad de Atacama
RP Llerena, L (corresponding author), Univ Autonoma Madrid, Dept Ingn Informat, Calle Francisco Tomas y Valiente 11, E-28049 Madrid, Spain.
EM lucrecia.llerena@estudiante.uam.es; nancy.rodriguez@estudiante.uam.es;
   john.castro@uda.cl; silvia.acunna@uam.es
RI Acuña, Silvia/A-7395-2008; Castro, John W./V-4583-2019; Rodriguez,
   Nancy/HZH-3597-2023
OI Castro, John W./0000-0002-7938-7564; Llerena,
   Lucrecia/0000-0002-4562-6723; Rodriguez, Nancy/0000-0002-0861-4352
FU Secretariat of Higher Education, Science, Technology and Innovation
   (SENESCYT) of the Government of Ecuador; Quevedo State Technical
   University; Spanish Ministry of Education, Culture and Sports
   [TIN2014-52129-R, TIN2014-60490-P]; eMadrid-CM project [S2013/ICE-2715];
   University of Atacama "DIUDA 22316" project
FX This research was funded by the Secretariat of Higher Education,
   Science, Technology and Innovation (SENESCYT) of the Government of
   Ecuador as part of an academic scholarship granted for postgraduate
   training, and Quevedo State Technical University through doctoral
   scholarships for university professors. Also this research was funded by
   the Spanish Ministry of Education, Culture and Sports FLEXOR
   (TIN2014-52129-R) and TIN2014-60490-P projects and the eMadrid-CM
   project (S2013/ICE-2715). Finally, this research received funding from
   the University of Atacama "DIUDA 22316" project.
CR Acuna Silvia T., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P42, DOI 10.1049/ic.2012.0005
   Al-Odan HA, 2015, PROCEEDINGS OF 2015 INTERNATIONAL CONFERENCE ON ELECTRICAL AND INFORMATION TECHNOLOGIES (ICEIT 2015), P369
   [Anonymous], THESIS
   [Anonymous], LINUX J
   [Anonymous], THESIS
   [Anonymous], P 14 INT C ADV MOB C
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], THESIS
   [Anonymous], INTERFACES
   [Anonymous], 2012, PROC 7 NORDIC C HUM, DOI DOI 10.1145/2399016.2399120
   [Anonymous], OPEN SOURCE SOFTW AD
   [Anonymous], P 2015 IEEE 13 INT S
   [Anonymous], HICSS
   [Anonymous], P JORN SISTEDES 2012
   [Anonymous], J COMP EC
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 1 MONDAY
   [Anonymous], CUAD EC DIR EMPRES
   Assal H., 2016, Visualization for Cyber Security (VizSec), 2016 IEEE Symposium on, P1, DOI DOI 10.1109/VIZSEC.2016.7739576
   Benson Calum., 2004, CHI 04, P1083, DOI DOI 10.1145/985921.985991
   Castro Llanos John Wilmar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P131, DOI 10.1007/978-3-642-31063-8_11
   Çetin G, 2008, SITIS 2008: 4TH INTERNATIONAL CONFERENCE ON SIGNAL IMAGE TECHNOLOGY AND INTERNET BASED SYSTEMS, PROCEEDINGS, P585, DOI 10.1109/SITIS.2008.106
   Çetin G, 2007, LECT NOTES COMPUT SC, V4564, P32
   Çetyn G, 2011, COMPUT SYST SCI ENG, V26, P259
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Cooper A, 2007, INVENTING THE INDIGENOUS: LOCAL KNOWLEDGE AND NATURAL HISTORY IN EARLY MODERN EUROPE, P1
   Dubé L, 2003, MIS QUART, V27, P597
   Faily S., 2013, P 5 ACM SIGCHI S ENG, P69, DOI [DOI 10.1145/2494603.2480318, 10.1145/2480296.2480318]
   Ferré X, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.903160
   Gallinger E, 2016, ANN LIBR INF STUD, V63, P261
   Garcia C, 2016, INT J ENG EDUC, V32, P873
   Genero Bocco M., 2014, Metodos de investigacion en ingeniena del software
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Hedberg H., 2007, 1 INT WORKSH EM TREN, P2, DOI [10.1109/FLOSS.2007.2, DOI 10.1109/FLOSS.2007.2]
   Jing X, 2015, J MED INTERNET RES, V17, DOI 10.2196/jmir.4281
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Liu K, 2016, ISPRS INT J GEO-INF, V5, DOI 10.3390/ijgi5020011
   Madey G., 2002, P 8 AMERICAS C INFOR, P1806
   Masson A.L.L., 2017, P CHI C EXT ABSTRACT, P1135, DOI [10.1145/3027063, DOI 10.1145/3027063]
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mueller-Prove M., 2007, INTERFACES, V71, P8
   Nichols D. M., 2006, Software Process Improvement and Practice, V11, P149, DOI 10.1002/spip.256
   Noll J., 2010, Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development, P35, DOI DOI 10.1145/1833272.1833279
   Northrop Erik E., 2014, P 2014 ACM WORKSH SE, P1, DOI [10.1145/2663887.2663903, DOI 10.1145/2663887.2663903]
   O'Mahony S, 2003, RES POLICY, V32, P1179, DOI 10.1016/S0048-7333(03)00048-9
   Pruett J, 2013, LIBR HI TECH, V31, P435, DOI 10.1108/LHT-01-2013-0003
   Rajanen M, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3413, DOI 10.1145/2702123.2702441
   Rajanen M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL ACADEMIC MINDTREK CONFERENCE, P67
   Rajanen M, 2015, IFIP ADV INF COMM TE, V451, P58, DOI 10.1007/978-3-319-17837-0_6
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Raza Arif, 2011, International Journal of Open Source Software & Processes, V3, P1, DOI 10.4018/jossp.2011010101
   Raza A, 2013, 2013 EIGHTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P391, DOI 10.1109/ICDIM.2013.6694005
   Raza A, 2012, COMPUT HUM BEHAV, V28, P1109, DOI 10.1016/j.chb.2012.01.018
   Raza A, 2012, ENG COMPUT-GERMANY, V28, P109, DOI 10.1007/s00366-011-0222-1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   Scacchi W, 2009, LECT NOTES BUS INF P, V14, P467
   Schryen Guido., 2009, SAC '09, P2016
   Terry M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P999
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Blanco NV, 2016, COMPUT METH PROG BIO, V132, P197, DOI 10.1016/j.cmpb.2016.05.005
   Vourvopoulos A, 2016, PROCEEDINGS OF THE 7TH AUGMENTED HUMAN INTERNATIONAL CONFERENCE (AUGMENTED HUMAN 2016), DOI 10.1145/2875194.2875244
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yusop NSM, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915995
NR 65
TC 13
Z9 15
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 48
EP 64
DI 10.1016/j.infsof.2018.10.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HJ0YN
UT WOS:000456889200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Abrahao, S
   De Marco, L
   Ferrucci, F
   Gomez, J
   Gravino, C
   Sarro, F
AF Abrahao, Silvia
   De Marco, Lucia
   Ferrucci, Filomena
   Gomez, Jaime
   Gravino, Carmine
   Sarro, Federica
TI Definition and evaluation of a COSMIC measurement procedure for sizing
   Web applications in a model-driven development environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web applications; Model-driven development; Functional size measurement;
   COSMIC; OO-H method
ID FUNCTIONAL SIZE; CONCEPTUAL MODELS; SYSTEMS; DESIGN
AB Context: Model-driven development approaches facilitate the production of Web applications. Among them, the Object-Oriented Hypermedia method (OO-H) has been successfully used for the development of industrial Web applications. Similarly to other development approaches, it is important also in this context to put measures in place to support project managers in resource allocation, cost and schedule control, and productivity monitoring.
   Objective. This motivated us to define a measurement procedure, named OO-HCFP, specifically conceived for OO-H Web applications based on COSMIC, a second-generation functional size measurement method.
   Method. We present mapping and measurement rules devised to automatically derive size measures from OO-H models. We also carry out an empirical study to evaluate whether our proposed measurement procedure, OO-HCFP, is useful for estimating the effort needed to realise industrial Web applications developed with OO-H.
   Results. The estimates obtained by using OO-HCFP are more accurate than those obtained by using other measurement approaches based on Function Points and design measures.
   Conclusions. The proposed approach can be profitably exploited to size Web applications developed with OO-H. Based on our experience, we also provide some guidelines to support the formulation of COSMIC measurement procedures for other model-driven approaches.
C1 [Abrahao, Silvia] Univ Politecn Valencia, Dept Comp Sci, Valencia, Spain.
   [De Marco, Lucia; Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
   [Gomez, Jaime] Univ Alicante, Dept Languages & Informat Syst, Alicante, Spain.
   [Sarro, Federica] UCL, Dept Comp Sci, CREST, London, England.
C3 Universitat Politecnica de Valencia; University of Salerno; Universitat
   d'Alacant; University of London; University College London
RP Gravino, C (corresponding author), Univ Salerno, Dept Comp Sci, Fisciano, Italy.
EM sabrahao@dsic.upv.es; ldemarco@unisa.it; fferrucci@unisa.it;
   jaime.gomez@ua.es; gravino@unisa.it; f.sarro@ucl.ac.uk
RI Abrahão, Silvia/AAK-6976-2020; Ortega, Jaime Gomez/Z-1214-2019;
   Ferrucci, Filomena/AAG-6799-2020
OI Abrahão, Silvia/0000-0003-3580-2014; Ortega, Jaime
   Gomez/0000-0003-0168-0338; Ferrucci, Filomena/0000-0002-0975-8972;
   Sarro, Federica/0000-0002-9146-442X
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR ABRAHAO S, 2006, SOFTWARE SYSTEM MODE, V5, P48
   Abrahao S, 2007, LECT NOTES COMPUT SC, V4735, P467
   Abrahao S, 2010, INFORM SCIENCES, V180, P3932, DOI 10.1016/j.ins.2010.05.031
   Abrahao S, 2009, J SYST SOFTWARE, V82, P253, DOI 10.1016/j.jss.2008.06.031
   Abraho S., 2003, International Journal of Web Engineering and Technology, V1, P5, DOI 10.1504/IJWET.2003.003265
   Abran A., 2015, COSMIC FUNCTIONAL SI
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], [No title captured]
   [Anonymous], 2002, 141433 ISOIEC
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   Azhar D., 2012, Proceedings ofthe 8th International Conference on Predictive Models in Software Engineering, PROMISE, V12, P49, DOI [10.1145/2365324.2365332, DOI 10.1145/2365324.2365332]
   Barabino G, 2015, J SOFTW-EVOL PROC, V27, P603, DOI 10.1002/smr.1715
   Baresi L, 2000, LECT NOTES COMPUT SC, V1921, P89
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   Brambilla M., 2015, 15 YEARS IND MODEL D
   Brambilla M., 2008, WEB ENG MODELLING IM, P221
   Briand L.C., RESOURCE ESTIMATION, DOI [10.1002/0471028959.sof282, DOI 10.1002/0471028959.SOF282]
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Buglione L., 2010, JOIN INT C SOFTW MEA, P205
   Buglione L, 2008, LECT NOTES COMPUT SC, V5089, P75, DOI 10.1007/978-3-540-69566-0_9
   Ceke D, 2015, J SYST SOFTWARE, V103, P219, DOI 10.1016/j.jss.2015.02.006
   Ceke D, 2013, 2013 36TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P396
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Condori-Fernandez N., 2006, AN WER06 WORKSH ENG, P138
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Corazza A, 2015, LECT NOTES COMPUT SC, V9459, P251, DOI 10.1007/978-3-319-26844-6_19
   Corona E., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P14, DOI 10.1109/WETSoM.2012.6226986
   Corona E, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P15, DOI 10.1109/IWSM-MENSURA.2012.12
   Costagliola G, 2006, J WEB ENG, V5, P93
   De Marco Lucia, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P349, DOI 10.1109/SEAA.2013.41
   De Marco L., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P21, DOI 10.1109/WETSoM.2012.6226988
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P441, DOI 10.1109/SEAA.2008.60
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F., 2010, ENCY EVOLUTIONARY CO, P13
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Ferrucci F, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P306, DOI 10.1109/SEAA.2009.47
   FRATERNALI P, 2006, P C CTR ADV STUD COL, P233, DOI DOI 10.1145/1188966
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   GLASS R. L., 2002, SOFTWARE ENG FACTS F
   Gómez J, 2003, INFORMATION MODELING FOR INTERNET APPLICATIONS, P144
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   IFPUG, 1998, HINTS COUNT WEB SIT
   International Standardization Organization (ISO), 2003, 1414312003 ISOIEC
   International Standardization Organization (ISO), 2002, 1414322003 ISOIEC
   Jacquet J.-P., 1997, INFORM TECHNOLOGY 3
   Jolak R, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P384, DOI 10.1109/SEAA.2017.55
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Koch N., 2002, The Expressive Power of UML-based Web Engineering
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Marín B, 2008, LECT NOTES COMPUT SC, V5089, P215, DOI 10.1007/978-3-540-69566-0_19
   Marín B, 2010, DATA KNOWL ENG, V69, P472, DOI 10.1016/j.datak.2010.01.001
   Marín B, 2008, LECT NOTES COMPUT SC, V5338, P170
   Matos O., 2013, P 17 INT C EV ASS SO, P12, DOI DOI 10.1145/2460999.2461002
   Matos O., 2014, 18 INT C EV ASS SOFT, DOI 10.1145/2601248.2601281
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Mendes E, 2012, PROC INT CONF SOFTW, P1112, DOI 10.1109/ICSE.2012.6227108
   Meyerhoff D., 2002, SOFTWARE QUALITY SOF
   Mills D., 2008, SOFTWARE ENG MODERN
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Morad S., 2010, Pharmacological studies of a novel inhibitor of the mammalian target of rapamycin (mTOR) signaling pathway, P8, DOI [10.1145/1809223.1809225, DOI 10.1145/1809223.1809225]
   Moreno N, 2008, J AM SOC INF SCI TEC, V59, P1073, DOI 10.1002/asi.20811
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Rollo T., 2000, P AUSTR C SOFTW MEAS
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Ruhe M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P30, DOI 10.1109/METRIC.2003.1232453
   Sarro F., 2011, P 12 INT C PROD FOC, P38
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Soubra H., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P76, DOI 10.1109/IWSM-MENSURA.2011.52
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Sunkle Sagar, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P659, DOI 10.1007/978-3-642-33666-9_42
   Turhan B, 2014, EUROMICRO CONF PROC, P285, DOI 10.1109/SEAA.2014.41
   Tversky B, 2011, TOP COGN SCI, V3, P499, DOI 10.1111/j.1756-8765.2010.01113.x
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
NR 97
TC 9
Z9 9
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 144
EP 161
DI 10.1016/j.infsof.2018.07.012
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900010
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Mai, PX
   Goknil, A
   Shar, LK
   Pastore, F
   Briand, LC
   Shaame, S
AF Mai, Phu X.
   Goknil, Arda
   Shar, Lwin Khin
   Pastore, Fabrizio
   Briand, Lionel C.
   Shaame, Shaban
TI Modeling Security and Privacy Requirements: a Use Case-Driven Approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID RISK-ASSESSMENT; LANGUAGE
AB Context Modem internet-based services, ranging from food-delivery to home-caring, leverage the availability of multiple programmable devices to provide handy services tailored to end-user needs. These services are delivered through an ecosystem of device-specific software components and interfaces (e.g., mobile and wearable device applications). Since they often handle private information (e.g., location and health status), their security and privacy requirements are of crucial importance. Defining and analyzing those requirements is a significant challenge due to the multiple types of software components and devices integrated into software ecosystems. Each software component presents peculiarities that often depend on the context and the devices the component interact with, and that must be considered when dealing with security and privacy requirements. Objective: In this paper, we propose, apply, and assess a modeling method that supports the specification of security and privacy requirements in a structured and analyzable form. Our motivation is that, in many contexts, use cases are common practice for the elicitation of functional requirements and should also be adapted for describing security requirements. Method: We integrate an existing approach for modeling security and privacy requirements in terms of security threats, their mitigations, and their relations to use cases in a misuse case diagram. We introduce new security-related templates, i.e., a mitigation template and a misuse case template for specifying mitigation schemes and misuse case specifications in a structured and analyzable manner. Natural language processing can then be used to automatically report inconsistencies among artifacts and between the templates and specifications. Results: We successfully applied our approach to an industrial healthcare project and report lessons learned and results from structured interviews with engineers. Conclusion: Since our approach supports the precise specification and analysis of security threats, threat scenarios and their mitigations, it also supports decision making and the analysis of compliance to standards.
C1 [Mai, Phu X.; Goknil, Arda; Pastore, Fabrizio; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Shaame, Shaban] EverdreamSoft EDS, Geneva, Switzerland.
   [Shar, Lwin Khin] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
C3 University of Luxembourg; Nanyang Technological University
RP Goknil, A (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM xuanphu.mai@uni.lu; arda.goknil@uni.lu; lkshar@ntu.edu.sg;
   fabrizio.pastore@uni.lu; lionel.briand@uni.lu; shaban@everdreamsoft.com
RI Pastore, Fabrizio/ABY-9262-2022; Munshi, Aviva/JDC-3827-2023
OI Pastore, Fabrizio/0000-0003-3541-3641; MAI, Phu X./0000-0001-9956-3687;
   Shar, Lwin Khin/0000-0001-5130-0407; GOKNIL, Arda/0000-0002-2170-2066
FU National Research Fund, Luxembourg [FNR/P10/03, INTER/AAL/15/11213850,
   INTER/DFG/14/11092585]; European Research Council (ERC) under the
   European Union's Horizon 2020 research and innovation programme [694277]
FX This work is supported by the National Research Fund, Luxembourg
   FNR/P10/03, INTER/AAL/15/11213850, and INTER/DFG/14/11092585, and by the
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme (grant agreement No 694277).
CR Alexander I., 2003, Computing & Control Engineering, V14, P40, DOI 10.1049/cce:20030108
   Alexander I, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P61, DOI 10.1109/ICRE.2002.1048506
   Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   [Anonymous], 2006, COMMON CRITERIA INFO
   [Anonymous], 2015, ETSIEG203251
   [Anonymous], 1999, DR DOBBS J
   [Anonymous], 2020, PROC IEEE 3 INT C DI
   Anthonysamy P, 2017, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE-SEIS.2017.3
   Armour F., 2001, ADV USE CASE MODELIN
   Arora C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P962, DOI 10.1145/2786805.2803185
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Asnar Y, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P19
   Asnar Y, 2011, REQUIR ENG, V16, P101, DOI 10.1007/s00766-010-0112-x
   Beckers K, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P574, DOI 10.1109/ARES.2012.29
   Bortz Andrew., 2007, INT C WORLD WIDE WEB, P621, DOI [10.1145/1242572.1242656, DOI 10.1145/1242572.1242656, 10 .1145/1242572.1242656]
   Breaux TD, 2014, REQUIR ENG, V19, P281, DOI 10.1007/s00766-013-0190-7
   Breaux TD, 2013, S VIS LANG HUM CEN C, P14, DOI 10.1109/RE.2013.6636701
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   Cockburn A., 2001, Writing effective use cases
   den Braber F, 2007, BT TECHNOL J, V25, P101, DOI 10.1007/s10550-007-0013-9
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   EDLAH2, ACT ASS LIV PROGR
   El-Attar M, 2014, J SYST SOFTWARE, V87, P104, DOI 10.1016/j.jss.2013.10.017
   El-Attar M, 2012, J SYST SOFTWARE, V85, P323, DOI 10.1016/j.jss.2011.08.023
   Elahi G, 2007, LECT NOTES COMPUT SC, V4801, P375
   Fabian B, 2010, REQUIR ENG, V15, P7, DOI 10.1007/s00766-009-0092-x
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Grossmann J, 2015, LECT NOTES COMPUT SC, V9488, P18, DOI 10.1007/978-3-319-26416-5_2
   Gurses S., 2006, UKDU 06
   GURSES S, 2006, LECT NOTES INFORMATI, P42
   Hajri I., 2017, REFSQ WORKSH
   Hajri I., 2016, SOFTWARE SYSTEMS MOD
   Hajri I., 2018, J SYSTEMS SOFTWARE
   Hajri I, 2017, LECT NOTES COMPUT SC, V10153, P3, DOI 10.1007/978-3-319-54045-0_1
   Hajri I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1008, DOI 10.1145/2950290.2983935
   Hajri I, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P338, DOI 10.1109/MODELS.2015.7338265
   Haley CB, 2004, LECT NOTES COMPUT SC, V2995, P347
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hansen M, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P159, DOI 10.1109/SPW.2015.13
   Hatebur D, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P195, DOI 10.1109/ARES.2008.27
   Hatebur D, 2006, LECT NOTES COMPUT SC, V3995, P238
   Hong J., 2004, C DESIGNING INTERACT, P91, DOI [DOI 10.1145/1013115.1013129, 10.1145/1013115.1013129]
   ISO/IEC, 291002011 ISOIEC
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jacobson I., 2004, OBJECT ORIENTED SOFT
   Jain AK, 2012, IT PROF, V14, P28, DOI 10.1109/MITP.2012.72
   Johnson C., 2003, A Handbook of Accident and Incident Reporting
   Jurjens J., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P187
   Jurjens J., 2003, SECURE SYSTEMS DEV U
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Kim YG, 2012, SECUR COMMUN NETW, V5, P293, DOI 10.1002/sec.321
   Kulak D., 2003, USE CASES REQUIREMEN, V2 nd
   Lannan C., 2002, APPL UML PATTERNS IN
   Lin L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P371
   Lin LC, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P354
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Mai X. P., 2017, RMCM V TOOL CHECKING
   Mayer N, 2007, ENTERPRISE INTEROPERABILITY II: NEW CHALLENGES AND APPROACHES, P15, DOI 10.1007/978-1-84628-858-6_2
   McDermott J., 1999, ACSAC 99
   MCDERMOTT J, 2001, ACSAC 01
   Mead N.R., 2005, SECURITY QUALITY REQ, V30
   Mellado D, 2006, LECT NOTES COMPUT SC, V4189, P192
   Mellado D, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P654, DOI 10.1109/ARES.2006.2
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   OECD, 1980, GUIDELINES PROTECTIO
   Omoronyia I., 2011, PRIMO 11
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Oppenheim A.N., 2005, QUESTIONNAIRE DESIGN
   OWASP, OWASP TOP 10 MOB SEC
   OWASP, OWASP TOP 10 WEB SEC
   Pasquale L, 2016, REQUIR ENG, V21, P481, DOI 10.1007/s00766-015-0229-z
   Pfitzmann A., 2010, TERMINOLOGY TALKING
   Rannenberg Kai, 1999, MULTILATERAL SECURIT, V3, P21
   Rosado DG, 2009, LECT NOTES COMPUT SC, V5833, P126, DOI 10.1007/978-3-642-04947-7_16
   Rostad L., 2006, Proceedings of the Conference on Requirements Engineering: Foundation for Software Quality, Luxembourg, P33
   Salini P, 2012, COMPUT ELECTR ENG, V38, P1785, DOI 10.1016/j.compeleceng.2012.08.008
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G., 2003, REFSQ 03
   Sindre G., 2002, SREIS 02
   Sindre G., 2001, REFSO 01
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Solove DJ, 2006, U PENN LAW REV, V154, P477, DOI 10.2307/40041279
   Song Eunjee., 2005, SACMAT 05, P120
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Swiderski F., 2004, Threat modeling
   Thomas K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P871, DOI 10.1145/2568225.2568240
   Tondel IA, 2008, IEEE SOFTWARE, V25, P20, DOI 10.1109/MS.2008.19
   Türpe S, 2017, INT REQUIR ENG CONF, P122, DOI 10.1109/RE.2017.13
   US Federal Trade Commission, PRIV ONL REP C
   USC Credit Union, SYST PROV HOM BANK
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang CH, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P942, DOI 10.1145/2786805.2803187
   Whittle J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P121, DOI 10.1145/1368088.1368106
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
NR 103
TC 36
Z9 39
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 165
EP 182
DI 10.1016/j.infsof.2018.04.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100011
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Karami, G
   Tian, J
AF Karami, Gity
   Tian, Jeff
TI Maintaining accurate web usage models using updates from activity
   diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usage model; Markov operational profile; Activity diagram; Web
   application; Maintenance and evolution
ID SOFTWARE MAINTENANCE; RELIABILITY; EVOLUTION; INTERNET
AB Context: Markov operational profile (Markov OP) is a type of usage models for large applications involving state transitions. Such usage models not only help us ensure and maximize product reliability, but can also be used to understand user behavior, and fine-tune system performance and usability. Web usage models can be constructed based on actual usage of the application by target users recorded in existing web logs. Such models constructed before maintenance and evolution may not reflect actual usage of the updated application accurately. At this point, the updated web application has not been deployed yet, so that its actual usage data could not be collected to construct a new Markov OP needed to test the newly updated web application.
   Objective: This paper aims at maintaining accurate Markov OP using updates derived from activity diagrams used in web application maintenance and evolution.
   Method: Markov OP shares some common characteristics with activity diagrams which describe the application in terms of user activities. We develop a method to update the initial Markov OP by analyzing its differences with the activity diagrams.
   Results: We have applied our method in a web application to provide an initial validation of its applicability and effectiveness. After the deployment of the updated web application and new usage data became available, a new Markov OP was constructed. We quantified inaccuracies of the initial Markov OP and the updated Markov OP using the new Markov OP as the reference standard, and quantitatively demonstrated that our method improves the accuracy of the initial Markov OP for the updated web application.
   Conclusion: Our new method provides an effective and practical way to maintain accurate Markov OP over web application maintenance and evolution using existing activity diagrams.
C1 [Karami, Gity; Tian, Jeff] Southern Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75275 USA.
   [Tian, Jeff] Northwestern Polytech Univ, Sch Comp Sci, Xian, Shaanxi, Peoples R China.
C3 Southern Methodist University; Northwestern Polytechnical University
RP Tian, J (corresponding author), Southern Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75275 USA.
EM gkarami@smu.edu; tian@smu.edu
FU National Science Foundation (NSF) [1126747]; NSF Net-Centric I/UCRC;
   Direct For Computer & Info Scie & Enginr; Division Of Computer and
   Network Systems [1126747] Funding Source: National Science Foundation
FX This work is supported in part by National Science Foundation (NSF)
   Grant #1126747 and NSF Net-Centric I/UCRC.
CR [Anonymous], 2014, FDN DESIGNING USER C
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Behlendorf B., 1996, RUNNING PERFECT WEB
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Constantine LL, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.991331
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Fan X, 2009, PROCEEDINGS OF THE SECOND INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, VOL II, P244, DOI 10.1109/ISECS.2009.160
   Harrati N, 2016, COMPUT HUM BEHAV, V61, P463, DOI 10.1016/j.chb.2016.03.051
   Hilbert DM, 1998, PROC INT CONF SOFTW, P136, DOI 10.1109/ICSE.1998.671110
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Jaffal W., 2014, P 27 INT C COMP APPL
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Karami G., 2018, STUDIES COMPUTATIONA, P722
   Karami G., 2017, 30 INT C COMP APPL I
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   Oruç ÖE, 2017, COMPUT HUM BEHAV, V66, P232, DOI 10.1016/j.chb.2016.09.059
   Peebles D., 2009, HUM-COMPUT INTERACT, P1154
   Ramesh C., 2011, INT J COMPUT SCI INF, V3
   Sulistyo S., 2009, P 1 WORKSH BEH MOD M
   Tauscher L., 1997, P CHI 97 HUM FACT CO, P399, DOI DOI 10.1145/258549.258816
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Trinh VC, 2013, IEEE T HUM-MACH SYST, V43, P359, DOI 10.1109/TSMC.2013.2262272
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
NR 30
TC 1
Z9 1
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 68
EP 77
DI 10.1016/j.infsof.2017.11.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200005
OA Bronze
DA 2024-07-18
ER

PT J
AU Budgen, D
   Brereton, P
   Drummond, S
   Williams, N
AF Budgen, David
   Brereton, Pearl
   Drummond, Sarah
   Williams, Nikki
TI Reporting systematic reviews: Some lessons from a tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Reporting quality; Provenance of findings
ID SOFTWARE-DEVELOPMENT; SUPPORT; DESIGN; MODELS
AB Context: Many of the systematic reviews published in software engineering are related to research or methodological issues and hence are unlikely to be of direct benefit to practitioners or teachers. Those that are relevant to practice and teaching need to be presented in a form that makes their findings usable with minimum interpretation.
   Objective: We have examined a sample of the many systematic reviews that have been published over a period of six years, in order to assess how well these are reported and identify useful lessons about how this might be done.
   Method: We undertook a tertiary study, performing a systematic review of systematic reviews. Our study found 178 systematic reviews published in a set of major software engineering journals over the period 2010-2015. Of these, 37 provided recommendations or conclusions of relevance to education and/or practice and we used the DARE criteria as well as other attributes related to the systematic review process to analyse how well they were reported.
   Results: We have derived a set of 12 'lessons' that could help authors with reporting the outcomes of a systematic review in software engineering. We also provide an associated checklist for use by journal and conference referees.
   Conclusion: There are several areas where better reporting is needed, including quality assessment, synthesis, and the procedures followed by the reviewers. Researchers, practitioners, teachers and journal referees would all benefit from better reporting of systematic reviews, both for clarity and also for establishing the provenance of any findings.
C1 [Budgen, David; Drummond, Sarah] Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
   [Brereton, Pearl] Keele Univ, Sch Comp & Maths, Keele ST5 5BG, Staffs, England.
   [Williams, Nikki] Cranfield Univ, Ctr Elect Warfare Informat & Cyber, Def Acad United Kingdom, Shrivenham SN6 8LA, Wilts, England.
C3 Durham University; Keele University; Cranfield University
RP Budgen, D (corresponding author), Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
EM david.budgen@durham.ac.uk; o.p.brereton@keele.ac.uk;
   sarah.drummond@durham.ac.uk; nikki.williams@cranfield.ac.uk
RI Williams, Nikki/HZL-1958-2023
OI Williams, Nikki/0000-0002-0771-217X; Budgen, David/0000-0001-7143-0241
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Al-Baik O, 2015, EMPIR SOFTW ENG, V20, P1861, DOI 10.1007/s10664-014-9340-x
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2007, GUIDELINES PERFORMIN
   Ardis M, 2015, COMPUTER, V48, P106, DOI 10.1109/MC.2015.345
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Bano M., 2015, INF SOFTW TECHNOL, V58
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Budgen David, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P263, DOI 10.1109/ESEM.2013.41
   Budgen D., 2017, TERTIARY REV E UNPUB
   Budgen D, 2012, PROC INT CONF SOFTW, P1205, DOI 10.1109/ICSE.2012.6227022
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Ghapanchi AH, 2011, J SYST SOFTWARE, V84, P238, DOI 10.1016/j.jss.2010.09.022
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Khan K, 2011, Systematic reviews to support evidence-based medicine, DOI DOI 10.1201/B13411
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Kitchenham B., 2010, P ICSE 10
   Kitchenham B. A., 2012, P 2 INT WORKSH EV AS, P1, DOI [10.1145/2372233.2372235, DOI 10.1145/2372233.2372235]
   Kitchenham B. A., 2015, NNOVATIONS SOFTWARE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Li Z, 2013, J SYST SOFTWARE, V86, P2371, DOI 10.1016/j.jss.2013.04.021
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Oliver S, 2016, EVID POLICY, V12, P235, DOI 10.1332/174426415X14399963605641
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rafique Y., 2013, IEEE T SOFTW ENG, V39
   Silva F. S., 2015, INF SOFTW TECHNOL, V58
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Steinmacher I., 2015, INF SOFTW TECHNOL, V59
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Tüzün E, 2015, INFORM SOFTWARE TECH, V60, P77, DOI 10.1016/j.infsof.2014.12.007
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Zarour M, 2015, J SYST SOFTWARE, V101, P180, DOI 10.1016/j.jss.2014.11.041
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 56
TC 48
Z9 49
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 62
EP 74
DI 10.1016/j.infsof.2017.10.017
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Choi, YM
   Lim, DJ
AF Choi, Yoo-Min
   Lim, Dong-Jin
TI Automatic feasible transition path generation from UML state chart
   diagrams using grouping genetic algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based algorithm; UML state chart; Feasible transition path;
   Model-driven testing; Automatic test case generation
AB Context Transition coverage testing, a testing technique using state charts of Unified Modeling Language (UML), requires generation of transition paths that cover all transitions. However, if a generated path is infeasible due to internal variables then the transition will not be executed according to the input sequence, resulting in a test failure. Thus, feasible transition paths (FTPs) must be generated to run transition coverage tests.
   Objective: Several automatic transition path generation studies have been conducted using genetic algorithms (GM), but when generating a transition path using a GA, the dependent transition pairs serve as distractions. Furthermore, counter problems that require repeated execution of dependent transitions (for example, to test a failing operation of an automatic teller machine, the password must be incorrect three times) make FFP generation more difficult.
   Method: In this study, to address these issues, an automatic FTP generation method using a grouping GA (GGA) is described. Considering the characteristics of the problem, modification of the original GGA is proposed. A chromosome initialized using information from the state chart, and generating transition coverage, satisfied FTP while adjusting the length of the chromosome.
   Results: An experiment using the 'inres initiator state chart and the 'ATM' state chart generated FTPs successfully. In the case of the inres initiator state chart, the proposed GGA was shown to be capable of generating FTPs with a 100% success rate. In the case of the ATM state chart, the proposed GGA was shown to be capable of generating FTPs with a 100% success rate, by setting the maximum number of generations.
   Conclusion: The proposed GGA can be applied effectively to transition coverage testing using UML state charts, and can generate test paths suitable for testing purposes by setting the genetic parameter value and the maximum number of generations.
C1 [Choi, Yoo-Min; Lim, Dong-Jin] Hanyang Univ, Dept Elect Syst Engn, Sa3 Dong, Ansan, Gyeonggi Do, South Korea.
C3 Hanyang University
RP Lim, DJ (corresponding author), Hanyang Univ, Dept Elect Syst Engn, Sa3 Dong, Ansan, Gyeonggi Do, South Korea.
EM air88317@hanyang.ac.kr; limdj@hanyang.ac.kr
RI Lim, Dong-Jin/K-7244-2017
FU WC300 Technological innovation R&D program of Small and Medium Business
   Administration (SMBA, Korea) [S2341060]; Gyeong-gi Regional Research
   Center [Development of model-driven method for embedded software
   testing] [GRRC-Hanyang-2014-1303]
FX This work was partly supported by the WC300 Technological innovation R&D
   program of Small and Medium Business Administration (SMBA, Korea)
   [S2341060, Development of next generation integrated smart key system
   based on SoC using IT fusion technology] and Gyeong-gi Regional Research
   Center [GRRC-Hanyang-2014-1303, Development of model-driven method for
   embedded software testing].
CR Agustín-Blas LE, 2012, EXPERT SYST APPL, V39, P9695, DOI 10.1016/j.eswa.2012.02.149
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Bacchelli A., 2008, 3 INT C IEEE 2008
   Chen JC, 2012, EXPERT SYST APPL, V39, P10016, DOI 10.1016/j.eswa.2012.01.211
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   Douglass B.P., 2004, REAL TIME UM ADV UML
   Falkenauer E., 1996, Journal of Heuristics, V2, P5, DOI 10.1007/BF00226291
   Falkenauer E., 1998, Genetic algorithms and grouping problems, chichester
   Genero M, 2003, LECT NOTES COMPUT SC, V2814, P118
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3778, P320
   Kalaji A., 2010, SOFTW TEST VER VAL W
   Kalaji AS, 2011, INFORM SOFTWARE TECH, V53, P1297, DOI 10.1016/j.infsof.2011.06.004
   Lewis R, 2005, LECT NOTES COMPUT SC, V3448, P144
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mera S., 2013, MSDN MAGAZINE, V28
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   NAKAJO T, 1991, IEEE T SOFTWARE ENG, V17, P830, DOI 10.1109/32.83917
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Oh J, 2014, SCI WORLD J, DOI 10.1155/2014/126348
   Pankratz G, 2005, OR SPECTRUM, V27, P21, DOI 10.1007/s00291-004-0173-7
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Shirole Mahesh, 2013, Software Engineering Notes, V38, P119, DOI 10.1145/2492248.2492274
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   van Veenendaal E., 2012, BEWAREL MODEL BASED
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
NR 25
TC 6
Z9 9
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 38
EP 58
DI 10.1016/j.infsof.2017.09.013
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000004
DA 2024-07-18
ER

PT J
AU Martini, A
   Sikander, E
   Madlani, N
AF Martini, Antonio
   Sikander, Erik
   Madlani, Niel
TI A semi-automated framework for the identification and estimation of
   Architectural Technical Debt: A comparative case-study on the
   modularization of a software component
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Measurement System; Software management; Refactoring; Estimation;
   Technical Debt; Modularization; Software Architecture
AB Context: Research and industry's attention has been focusing on developing systems that enable fast time to market in the short term, but would assure a sustainable delivery of business value and maintenance operations in the long run. A related phenomenon has been identified in Architectural Technical Debt: if the system architecture is sub-optimal for long-term business goals, it might need to be refactored. A key property of the system assuring long-term goals is its modularity, or else the degree to which components are decoupled: such property allows the product to be evolved without costly changes pervading the whole system. However, understanding the business benefits of refactoring to achieve modularity is not trivial, especially for large refactorings involving substantial architectural changes.
   Objective: The aim of this study was to develop a technique to identify Architectural Technical Debt in the form of a non-modularized component and to quantify the convenience of its repayment.
   Method: We have conducted a single, embedded case study in a large company, comparing a component before and after it was refactored to achieve modularity. We have developed a holistic framework for the semi-automated identification and estimation of Architectural Technical Debt in the form of non-modularized components. We then evaluate the technique reporting a comparative study of the difference in maintenance and development costs in two coexisting systems, one including the refactored component and one including the non-refactored one.
   Results: The main contributions are a measurement system for the identification of the Architectural Technical Debt according to the stakeholders' goals, a mathematical relationship for calculating and quantifying its interest in terms of extra-effort spent in additional development and maintenance, and an overall decision framework to assess the benefit of refactoring. We also report context-specific results that show the estimated benefits of refactoring the specific case of Architectural Technical Debt.
   Conclusion: We found that it is possible to identify this kind of Architectural Technical Debt and to quantify its repayment convenience. Thanks to the developed framework, it was possible to estimate that the Architectural Technical Debt present in the component was causing substantial continuous extra effort, and that the modularization would be repaid in several months of development and maintenance. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Martini, Antonio] Univ Oslo, Dept Informat Programming, Oslo, Norway.
   [Martini, Antonio] Univ Oslo, Software Engn Grp, Oslo, Norway.
   [Sikander, Erik; Madlani, Niel] Chalmers Univ Technol, Software Engn Div Gothenburg, Gothenburg, Sweden.
C3 University of Oslo; University of Oslo; Chalmers University of
   Technology
RP Martini, A (corresponding author), Univ Oslo, Dept Informat Programming, Oslo, Norway.; Martini, A (corresponding author), Univ Oslo, Software Engn Grp, Oslo, Norway.
EM antonio.martini@ifi.uio.no
RI Martini, Antonio/AAA-2683-2019
OI Martini, Antonio/0000-0002-0669-8687
CR [Anonymous], 2007, 159392008 IEEE, P1
   Antinyan V, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P154, DOI 10.1109/CSMR-WCRE.2014.6747165
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Besker T, 2016, EUROMICROCONFERENCE
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A., 2016, SEAA EUR 2016, V2016
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Sered Y, 2006, COMPUT AIDED DESIGN, V38, P405, DOI 10.1016/j.cad.2005.11.005
   SonarQube&TRADE, SONARQUBE EVALUATE Y
   Staron M, 2009, INFORM SOFTWARE TECH, V51, P721, DOI 10.1016/j.infsof.2008.10.001
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
NR 24
TC 15
Z9 17
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 264
EP 279
DI 10.1016/j.infsof.2017.08.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200017
DA 2024-07-18
ER

PT J
AU Jiang, J
   Lo, D
   Ma, XY
   Feng, FL
   Zhang, L
AF Jiang, Jing
   Lo, David
   Ma, Xinyu
   Feng, Fuli
   Zhang, Li
TI Understanding inactive yet available assignees in GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Assignee; Inactive; GitHub
AB Context: In GitHub, an issue or a pull request can be assigned to a specific assignee who is responsible for working on this issue or pull request. Due to the principle of voluntary participation, available assignees may remain inactive in projects. If assignees ever participate in projects, they are active assignees; otherwise, they are inactive yet available assignees (inactive assignees for short).
   Objective: Our objective in this paper is to provide a comprehensive analysis of inactive yet available assignees in GitHub.
   Method: We collect 2,374,474 records of activities in 37 popular projects, and 797,756 records of activities in 687 projects belonging to 8 organizations. We compute the percentage of inactive assignees in projects, and compare projects with and without inactive assignees. Then we analyze datasets to explore why some assignees are inactive. Finally, we send questionnaires to understand impacts of inactive assignees.
   Results: We find that some projects have high percentage of inactive yet available assignees. For example, 66.35% of assignees never participate in the project paperclip. The project paperclip belongs to the organization thoughtbot. In the organization thoughtbot, 84.4% of projects have more than 80% of inactive assignees. We further observe that the main reason for developers being inactive assignees is that developers work for organizations and automatically become available assignees of some projects in the organizations. However, these developers do not work on projects. 37.25% of developers that we have surveyed agree that inactive assignees affect open source software development (i.e., causing unresolved issues or pull requests, and delaying software development).
   Conclusion: Some organizations should improve team management, and carefully select developers to become assignees in projects. Future studies about assignees should be careful to perform data cleaning, since some available assignees are added by virtue of their employment and do not really work on projects. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Jiang, Jing; Ma, Xinyu; Feng, Fuli; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Beihang University; Singapore Management University
RP Zhang, L (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
EM jiangjing@buaa.edu.cn; davidlo@smu.edu.sg; sdxyzlc@126.com;
   fulifeng93@gmail.com; lily@buaa.edu.cn
RI Zhang, Li/AAA-9787-2020; Wang, Jingjing/B-7476-2016; Lo,
   David/A-2493-2012
OI Wang, Jingjing/0000-0003-3170-8952; Lo, David/0000-0002-4367-7201
FU National Natural Science Foundation of China [61300006]; State Key
   Laboratory of Software Development Environment [SKLSDE-2017ZX-06];
   Beijing Natural Science Foundation [4163074]
FX This work is supported by National Natural Science Foundation of China
   under Grant no. 61300006, and the State Key Laboratory of Software
   Development Environment under Grant no. SKLSDE-2017ZX-06, and Beijing
   Natural Science Foundation under Grant no. 4163074.
CR Archambault A., 2012, P CHI AUST US
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barnett J. G., 2016, P MSR AUST US
   Bird C., 2009, P MSR VANC CAN
   Bissyande T. F., 2013, P COMPSAC KYOT JAP
   Bissyande T. F., 2013, P ISSRE WASH DC US
   Borges H., 2016, P PROM CIUD REAL SPA
   Cabot J., 2015, P SANER MONTR CAN
   Casalnuovo C., 2015, P FSE BERG IT
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dabbish L, 2012, P CSCW WASH US
   Foucault M., 2015, P FSE BERG IT
   Gousios G., 2013, P MSR SAN FRANC US
   Gousios G., 2015, P ICSE FLOR IT
   Gousios G., 2014, P ICSE
   Guzman E., 2014, P MSR HYD IND
   Hellendoorn V J., 2015, P MSR FLOR IT
   Herzig K., 2013, P ICSE SAN FRANC US
   Jiang J., 2016, P SEKE SAN FRANC US
   Jiang J., 2013, P WCRE KOBL GERM
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Kikas R., 2015, ISSUE DYNAMICS GITHU
   Kim D, 2014, QUAL QUANT, V48, P2605, DOI 10.1007/s11135-013-9910-9
   Kuhn S, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-400
   Lee J. B., 2013, P APSEC BANGK THAIL
   Lima A., 2014, P AAAI QUB CAN
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Michaud H., 2016, P ICSME RAL US
   NAKAKOJI K, 2002, INT WORKSH PRINC SOF
   Sinha V., 2016, P MSR AUST US
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsay J., 2014, P ICSE HYD IND 2014
   Tsay J., 2015, P ICSE FLOR IT
   van der Veen E., 2015, P MSR FLOR IT
   Vasilescu B., 2015, P FSE BERG IT
   Xavier J., 2014, P SEKE VANC CAN
   Xia X., 2015, P ICSME BREM GERM
   Ye Y., 2003, P ICSE PORTL US
   Yu Y., 2015, P MSR FLOR IT
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zhou M., 2011, P ICSE HON US
   Zhou M., 2012, P ICSE ZUR SWITZ
NR 43
TC 14
Z9 16
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 44
EP 55
DI 10.1016/j.infsof.2017.06.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Banerjee, S
   Syed, Z
   Helmick, J
   Culp, M
   Ryan, K
   Cukic, B
AF Banerjee, Sean
   Syed, Zahid
   Helmick, Jordan
   Culp, Mark
   Ryan, Kenneth
   Cukic, Bojan
TI Automated triaging of very large bug repositories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated triaging; Bug tracking; Big data analytics; Software problem
   repositories
AB Context: Bug tracking systems play an important role in software maintenance. They allow both developers and users to submit problem reports on observed failures. However, by allowing anyone to submit problem reports, it is likely that more than one reporter will report on the same issue. Research in open source repositories has focused on two broad areas: determining the original report associated with each known duplicate, and assigning a developer to fix a particular problem.
   Objective: Limited research has been done in developing a fully automated triager, one that can first ascertain if a problem report is original or duplicate, and then provide a list of 20 potential matches for a duplicate report. We address this limitation by developing an automated triaging system that can be used to assist human triagers in bug tracking systems.
   Method: Our automated triaging system automatically assigns a label of original or duplicate to each incoming problem report, and provides a list of 20 suggestions for reports classified as duplicate. The system uses 24 document similarity measures and associated summary statistics, along with a suite of document property and user metrics. We perform our research on a lifetime of problem reports from the Eclipse, Firefox and Open Office repositories. Results: Our system can be used as a filtration aide, with high original recall exceeding 95% and low duplicate recall, or as a triaging guide, with balanced recall of approximately 70% for both originals and duplicates. Furthermore, the system reduces the workload on the triager by over 90%.
   Conclusions: Our work represents the first full scale effort at automatically triaging problem reports in open source repositories. By utilizing multiple similarity measures, we reduce the potential of false matches caused by the diversity of human language. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Banerjee, Sean] Clarkson Univ, Potsdam, NY 13699 USA.
   [Syed, Zahid] Univ Michigan, Flint, MI 48503 USA.
   [Helmick, Jordan] MedExpress, Morgantown, WV USA.
   [Culp, Mark; Ryan, Kenneth] West Virgina Univ, Morgantown, WV USA.
   [Cukic, Bojan] Univ North Carolina Charlotte, Charlotte, NC USA.
C3 Clarkson University; University of Michigan System; University of
   Michigan; University of Michigan Flint; University of North Carolina;
   University of North Carolina Charlotte
RP Banerjee, S (corresponding author), Clarkson Univ, Potsdam, NY 13699 USA.
EM sbanerje@clarkson.edu; zahsyed@umflint.edu;
   jordan.helmick@medexpress.com; mvculp@mail.wvu.edu; kjryan@mail.wvu.edu;
   bcukic@uncc.edu
RI Cukic, Bojan/B-8287-2009
OI Syed, Zahid/0000-0002-6553-2003; Cukic, Bojan/0000-0001-7130-9054
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2006, THESIS
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Banerjee S., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P74, DOI 10.1109/HASE.2012.38
   Banerjee S, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P37, DOI 10.1109/BIGDSE.2015.16
   Banerjee S, 2015, IEEE HI ASS SYS ENGR, P263, DOI 10.1109/HASE.2015.45
   Banerjee S, 2013, PROC INT SYMP SOFTW, P208, DOI 10.1109/ISSRE.2013.6698920
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   DELONG ER, 1988, BIOMETRICS, V44, P837, DOI 10.2307/2531595
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HIRSCHBERG DS, 1975, COMMUN ACM, V18, P341, DOI 10.1145/360825.360861
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Liang Feng, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P709, DOI 10.1007/978-3-642-37401-2_69
   Prifti Tomi., 2011, P 7 INT C PREDICTIVE, P8
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
NR 23
TC 24
Z9 26
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2017
VL 89
BP 1
EP 13
DI 10.1016/j.infsof.2016.09.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EY3HD
UT WOS:000403861300001
DA 2024-07-18
ER

PT J
AU Krishna, R
   Menzies, T
   Layman, L
AF Krishna, Rahul
   Menzies, Tim
   Layman, Lucas
TI Less is more: Minimizing code reorganization using XTREE
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bad smells; Performance prediction; Decision trees
ID TECHNICAL DEBT; BAD SMELLS; SOFTWARE; MAINTAINABILITY; PREDICTION
AB Context: Developers use bad code smells to guide code reorganization. Yet developers, textbooks, tools, and researchers disagree on which bad smells are important. How can we offer reliable advice to developers about which bad smells to fix?
   Objective: To evaluate the likelihood that a code reorganization to address bad code smells will yield improvement in the defect-proneness of the code.
   Method: We introduce XTREE, a framework that analyzes a historical log of defects seen previously in the code and generates a set of useful code changes. Any bad smell that requires changes outside of that set can be deprioritized (since there is no historical evidence that the bad smell causes any problems). Evaluation: We evaluate XTREE's recommendations for bad smell improvement against recommendations from previous work (Shatnawi, Alves, and Borges) using multiple data sets of code metrics and defect counts.
   Results: Code modules that are changed in response to XTREE's recommendations contain significantly fewer defects than recommendations from previous studies. Further, XTREE endorses changes to very few code metrics, so XTREE requires programmers to do less work. Further, XTREE's recommendations are more responsive to the particulars of different data sets. Finally XTREE's recommendations may be generalized to identify the most crucial factors affecting multiple datasets (see the last figure in paper).
   Conclusion: Before undertaking a code reorganization based on a bad smell report, use a framework like XTREE to check and ignore any such operations that are useless; i.e. ones which lack evidence in the historical record that it is useful to make that change. Note that this use case applies to both manual code reorganizations proposed by developers as well as those conducted by automatic methods. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Krishna, Rahul; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Layman, Lucas] Fraunhofer CESE, College Pk, MD USA.
C3 North Carolina State University
RP Krishna, R (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM i.m.ralk@gmail.com; tim.menzies@gmail.com; llayman@cese.fraunhofer.org
RI Krishna, Rahul/HJG-7915-2022; Krishna, Rahul/AAF-1168-2022; Krishna,
   Rahul/AEX-7754-2022; Menzies, Tim/X-7680-2019
OI Krishna, Rahul/0000-0002-5899-6651; Krishna, Rahul/0000-0002-5899-6651;
   Menzies, Tim/0000-0002-5040-3196; Layman, Lucas/0000-0002-2534-8762
FU NSF [1506586, 1302169]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1302169, 1506586]
   Funding Source: National Science Foundation
FX The work is partially funded by NSF awards #1506586 and #1302169.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], P PROMISE 12 LUND SW
   [Anonymous], 13 INT JOINT C ART I
   [Anonymous], 2014, AUTOM SOFTW ENG, DOI DOI 10.1007/S10515-014-0175-X
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2006, 147642006 ISOIEC
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], ANAL IMPACT BELIEFS
   [Anonymous], INF SOFTW TECH UNPUB
   [Anonymous], CODE SMELLS
   [Anonymous], ASE 16
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Breiman L., 2001, Mach. Learn., V45, P5
   Campbell A., 2015, SonarQube: Open Source Quality Management
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Efron B., 1993, MONO STAT APPL PROBA
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hermans F, 2015, EMPIR SOFTW ENG, V20, P549, DOI 10.1007/s10664-013-9296-2
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kerievsky J., 2005, Refactoring to Patterns
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Krishna R, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P14, DOI 10.1109/ASEW.2015.23
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   McConnell Steve., 2004, Code Complete, V2nd ed
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moghadam IH, 2011, LECT NOTES COMPUT SC, V6956, P70, DOI 10.1007/978-3-642-23716-4_9
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 68
TC 9
Z9 11
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 53
EP 66
DI 10.1016/j.infsof.2017.03.012
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Jokhio, MS
   Sun, J
   Dobbie, G
   Hu, TM
AF Jokhio, M. Shaban
   Sun, Jing
   Dobbie, Gillian
   Hu, Tianming
TI Goal-based testing of semantic web services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal methods; Model checking; Mutation analysis; Web Service Modeling
   Ontology; Semantic web services
AB Context: Recent years have witnessed growing interests in semantic web and its related technologies. While various frameworks have been proposed for designing semantic web services (SWS), few of them aim at testing.
   Objective: This paper investigates into the technologies for automatically deriving test cases from semantic web service descriptions based on the Web Service Modeling Ontology (WSMO) framework.
   Method: WSMO goal specifications were translated into B abstract machines. Test cases were generated via model checking with calculated trap properties from coverage criteria. Furthermore, we employed mutation analysis to evaluate the test suite. In this approach, the model-based test case generation and code-based evaluation techniques are independent of each other, which provides much more accurate measures of the testing results.
   Results: We applied our approach to a real-world case study of the Amazon E-Commerce Service (ECS). The experimental results have validated the effectiveness of the proposed solution.
   Conclusion: It is concluded that our approach is capable of automatically generating an effective set of test cases from the WSMO goal descriptions for SWS testing. The quality of test cases was measured in terms of their abilities to discover the injected faults at the code level. We implemented a tool to automate the steps for the mutation-based evaluation. (C). 2016 Elsevier B.V. All rights reserved.
C1 [Jokhio, M. Shaban; Sun, Jing; Dobbie, Gillian] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Hu, Tianming] Dongguan Univ Technol, Dept Comp Sci, Dongguan, Peoples R China.
C3 University of Auckland; Dongguan University of Technology
RP Sun, J (corresponding author), Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
EM mjok002@aucklanduni.ac.nz; j.sun@cs.auckland.ac.nz;
   gill@cs.auckland.ac.nz; tmhu@ieee.org
OI Sun, Jing/0000-0002-1979-6622
CR Amazon Web Services, 2009, AM ASS WEB DEV GUID
   Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   [Anonymous], 2002, SOFTWARE TESTING CRA
   da Silva Solino A., 2009, P 10 LAT AM TEST WOR, P1
   Dai GL, 2007, P INT COMP SOFTW APP, P517
   Domingue J., 2005, P W3C WORKSH FRAM SE, P9
   Dong WL, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 3, PROCEEDINGS, P521, DOI 10.1109/WCSE.2009.133
   Hong M, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P199
   Huang H, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P300
   Idani A, 2005, ELECTRON NOTES THEOR, V133, P159, DOI 10.1016/j.entcs.2004.08.063
   Jokhio M. Shaban, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P210, DOI 10.1109/ASWEC.2014.13
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Mao CY, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING ( GRC 2009), P440, DOI 10.1109/GRC.2009.5255083
   Miao WK, 2013, IEEE T SERV COMPUT, V6, P536, DOI 10.1109/TSC.2012.22
   Noikajana S, 2009, P INT COMP SOFTW APP, P115, DOI 10.1109/COMPSAC.2009.25
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Shaban Muhammad, 2009, Proceedings of the 2009 Fourth South-East European Workshop on Formal Methods. Formal Methods for Web Services, Formal Methods for Agent-Based Systems (SEEFM 2009), P17, DOI 10.1109/SEEFM.2009.11
   Siblini R., 2005, The 3rd ACS/IEEE International Conference on Computer Systems and Applications, P135, DOI DOI 10.1109/AICCSA.2005.1387124
   Tsai WT, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/HASE.2002.1173120
   Tsai WT, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P171, DOI 10.1109/HASE.2002.1173119
   Wang Y, 2007, EIGHTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/ISADS.2007.54
   Xu Jeff Offutt andWuzhi, 2004, SIGSOFT Softw. Eng. Notes, V29, P1, DOI [10.1145/1022494.1022529, DOI 10.1145/1022494.1022529]
   Xu WZ, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2005.44
   Zhu H, 2012, IEEE T SERV COMPUT, V5, P116, DOI 10.1109/TSC.2010.54
NR 24
TC 5
Z9 6
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 1
EP 13
DI 10.1016/j.infsof.2016.11.011
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Mendonça, DF
   Rodrigues, GN
   Ali, R
   Alves, V
   Baresi, L
AF Mendonca, Danilo Filgueira
   Rodrigues, Genaina Nunes
   Ali, Raian
   Alves, Vander
   Baresi, Luciano
TI GODA: A goal-oriented requirements engineering framework for runtime
   dependability analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Goal modeling; Dependability; Probabilistic model checking; Runtime
   analysis
ID SYSTEMS; TROPOS
AB Context: Many modern software systems must deal with changes and uncertainty. Traditional dependability requirements engineering is not equipped for this since it assumes that the context in which a system operates be stable and deterministic, which often leads to failures and recurrent corrective maintenance. The Contextual Goal Model (CGM), a requirements model that proposes the idea of context dependent goal fulfillment, mitigates the problem by relating alternative strategies for achieving goals to the space of context changes. Additionally, the Runtime Goal Model (RGM) adds behavioral constraints to the fulfillment of goals that may be checked against system execution traces..
   Objective: This paper proposes GODA (Goal-Oriented Dependability Analysis) and its supporting framework as concrete means for reasoning about the dependability requirements of systems that operate in dynamic contexts.
   Method: GODA blends the power of CGM, RGM and probabilistic model checking to provide a formal requirements specification and verification solution. At design time, it can help with design and implementation decisions; at runtime it helps the system self-adapt by analyzing the different alternatives and selecting the one with the highest probability for the system to be dependable. GODA is integrated into TAO4ME, a state-of-the-art tool for goal modeling and analysis.
   Results: GODA has been evaluated against feasibility and scalability on Mobee: a real-life software system that allows people to share live and updated information about public transportation via mobile devices, and on larger goal models. GODA can verify, at runtime, up to two thousand leaf-tasks in less than 35ms, and requires less than 240 KB of memory.
   Conclusion: Presented results show GODA's design-time and runtime verification capabilities, even under limited computational resources, and the scalability of the proposed solution. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Mendonca, Danilo Filgueira; Rodrigues, Genaina Nunes; Alves, Vander] Univ Brasilia, Dept Comp Sci, BR-70910900 Brasilia, DF, Brazil.
   [Ali, Raian] Bournemouth Univ, Fac Sci & Technol, Poole BH12 5BB, Dorset, England.
   [Mendonca, Danilo Filgueira; Baresi, Luciano] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
C3 Universidade de Brasilia; Bournemouth University; Polytechnic University
   of Milan
RP Mendonça, DF (corresponding author), Univ Brasilia, Dept Comp Sci, BR-70910900 Brasilia, DF, Brazil.; Mendonça, DF (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
EM danilo.filgueira@polimi.it; genaina@unb.br; r.ali@bu.ac.uk;
   valves@unb.br; luciano.baresi@polimi.it
RI Ali, Raian/HZI-8249-2023; Rodrigues, Genaina Nunes/N-4215-2019; Ali,
   Raian/AAM-9992-2021; Baresi, Luciano/N-4208-2018
OI Rodrigues, Genaina Nunes/0000-0003-1661-8131; Ali,
   Raian/0000-0002-5285-7829; Alves, Vander/0000-0003-1573-048X; Baresi,
   Luciano/0000-0001-6467-837X
CR Ali R, 2014, SOFTW SYST MODEL, V13, P433, DOI 10.1007/s10270-012-0255-y
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Asnar Y., 2011, LECT NOTES COMPUTER, P152
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C., 2008, REPRESENTATION MIND
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Baresi Luciano, 2010, 2010 IEEE International Conference on Web Services (ICWS), P353, DOI 10.1109/ICWS.2010.60
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   D. of Computing Imperial College London, 2013, LAB TRANS AN TOOL
   Dalpiaz Fabiano., 2013, RES CHALLENGES INFOR, P1, DOI DOI 10.1109/RCIS.2013.6577674
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Grunske L, 2011, INFORM SOFTWARE TECH, V53, P190, DOI 10.1016/j.infsof.2010.10.003
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn E. M., 2011, LNCS, V6617
   Hahn E.M., 2015, PARAM LANGUAGE MANUA
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   Kwiatkowska M, 2012, SOFTWARE SAFETY SECU, V33, P126
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Massacci F, 2007, AUTOMAT SOFTW ENG, V14, P341, DOI 10.1007/s10515-007-0013-5
   Mendonça DF, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P55, DOI 10.1145/2593929.2593947
   Mohammadi N.G., FRAMEWORK COMBINING, P272
   Morandini M, 2008, LECT NOTES COMPUT SC, V4951, P182
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   O.U.C. Laboratory, 2015, PRISM LANG MAN
   O.U.C. Laboratory, 2015, PRISM CAS STUD
   Paja E, 2013, DATA KNOWL ENG, V87, P339, DOI 10.1016/j.datak.2012.12.005
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Rodrigues GN, 2012, J SYST SOFTWARE, V85, P112, DOI 10.1016/j.jss.2011.07.037
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Su GX, 2016, PROC INT CONF SOFTW, P73, DOI 10.1145/2884781.2884814
   Tang S, 2009, LECT NOTES BUS INF P, V29, P313
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Yu E., 1993, PROC 1 IEEE INT S RE, P34
   Yu Eric Siu-Kwong, 1996, UMI Order No. GAXNN-02887
   Yu YJ, 2008, LECT NOTES ARTIF INT, V4994, P1
NR 47
TC 19
Z9 22
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 245
EP 264
DI 10.1016/j.infsof.2016.09.005
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800015
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI A survey on the characteristics of projects with success in delivering
   client benefits
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software projects; Project success factors; Client benefits; Survey
ID SOFTWARE-DEVELOPMENT; FAILURE; AGILE; PERFORMANCE; CONTRACTS; OVERRUNS;
   SIZE
AB Context: A large waste of resources in software development projects currently results from being unable to produce client benefits.
   Objective: The main objective is to better understand the characteristics of successful software projects and contribute to software projects that are more likely to produce the planned client benefits.
   Method: We asked 63 Norwegian software professionals, representing both the client and the provider role, to report information about their last completed project. In a follow-up survey with 64 Norwegian software professionals, we addressed selected findings from the first survey.
   Results: The analysis of the project information showed the following: i) The project management triangle criteria of being on time, on budget, and having the specified functionality are poor correlates of the essential success dimension client benefits. ii) Benefit management planning before the project started and benefit management activities during project execution were connected with success in delivering client benefits. iii) Fixed-price projects and projects in which the selection of providers had a strong focus on low price were less successful in delivering project benefits than other projects. iv) Agile projects were in general more successful than other projects, but agile projects without flexible scope to reflect changed user needs and learning, or without frequent delivery to the client, had less than average success in delivering client benefits.
   Conclusions: The software projects that were successful in delivering client benefits differed from the less successful ones in several ways. In particular, they applied benefit management practices during project execution, they avoided fixed-price contracts, they had less focus on low price in the selection of providers, and they applied the core agile practices - frequent delivery to the client and scope flexibility. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Jorgensen, Magne] Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
RP Jorgensen, M (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM magnej@simula.no
FU Regional Research Funds of Norway
FX This work was supported by the Regional Research Funds of Norway.
CR Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   Ahimbisibwe A, 2015, J ENTERP INF MANAG, V28, P7, DOI 10.1108/JEIM-08-2013-0060
   [Anonymous], 1995, Software World, V26, P3
   [Anonymous], 2004, J ASSOC INF SYST
   Arora A, 2001, RES POLICY, V30, P1267, DOI 10.1016/S0048-7333(00)00148-7
   Bharadwaj A, 2009, J STRATEGIC INF SYST, V18, P66, DOI 10.1016/j.jsis.2009.04.001
   Bloch M., 2012, Delivering Large-Scale IT Projects on Time, on Budget, and on Value, P1, DOI [10.1017/cbo9780511607646.002, DOI 10.1017/CBO9780511607646.002]
   Budzier A., 2014, THESIS
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Conboy K, 2010, EUR J INFORM SYST, V19, P273, DOI 10.1057/ejis.2010.7
   Coombs C. R., 2013, TRANSFORMING FIELD S, P257, DOI [10.1007/978-3-642-44970-3_16, DOI 10.1007/978-3-642-44970-3_16]
   Das Aundhe M, 2009, EUR MANAG J, V27, P418, DOI 10.1016/j.emj.2009.01.004
   Doherty NF, 2012, J INF TECHNOL-UK, V27, P1, DOI 10.1057/jit.2011.8
   Doyle M., 2014, LNBIP, V179, P32, DOI [10.1007/978-3-319-06862-6_3, DOI 10.1007/978-3-319-06862-6_3]
   Dvir D., 2003, International Journal of Project Management, V21, P89, DOI DOI 10.1016/S0263-7863(02)00012-1
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Fabriek M., 2008, ECIS
   Ferreira C., 2008, P 2008 ANN RES C S A
   Fink L, 2013, APPL ECON, V45, P4533, DOI 10.1080/00036846.2013.791021
   Franca A.C.C., 2010, P 2010 ACM IEEE INT
   Gingnell L, 2014, INFORM SYST MANAGE, V31, P21, DOI 10.1080/10580530.2014.854033
   Goldfinch S, 2007, PUBLIC ADMIN REV, V67, P917, DOI 10.1111/j.1540-6210.2007.00778.x
   Gopal A, 2010, DECISION SCI, V41, P491, DOI 10.1111/j.1540-5915.2010.00278.x
   Gotterer M.H., 1969, P MAY 14 16 1969 SPR
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Han HS, 2013, DECIS SUPPORT SYST, V55, P777, DOI 10.1016/j.dss.2013.03.003
   Hashim R., 2013, SCI INF C SAI 2013
   Hashmi M.T., 2009, HIGH IT FAILURE RATE
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   Ika LA, 2009, PROJ MANAG J, V40, P6, DOI 10.1002/pmj.20137
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2013, P 17 INT C EV ASS SO
   Jorgensen M, 2014, J SYST SOFTWARE, V92, P157, DOI 10.1016/j.jss.2014.01.034
   Jorgensen M, 2013, INFORM SOFTWARE TECH, V55, P1640, DOI 10.1016/j.infsof.2013.03.001
   Jorgensen M, 2012, INT J PROJ MANAG, V30, P839, DOI 10.1016/j.ijproman.2012.01.007
   Kappelman LA, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46352.23.4.20060901/95110.4
   Kitchenham B, 2007, IET SOFTW, V1, P161, DOI 10.1049/iet-sen:20060052
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Lacity MC, 2009, J STRATEGIC INF SYST, V18, P130, DOI 10.1016/j.jsis.2009.06.002
   Lacity MC, 1998, MIS QUART, V22, P363, DOI 10.2307/249670
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Liu J, 2011, INT J PROJ MANAG, V29, P923, DOI 10.1016/j.ijproman.2010.11.002
   lLindvall M., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P197
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Molokken-Ostvold K., 2007, AG C AGILE 2007
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Nelson R.R., 2007, MIS Quarterly executive, V6
   Nelson RR, 2009, MIS Q EXEC, V8, P141
   Papke-Shields KE, 2010, INT J PROJ MANAG, V28, P650, DOI 10.1016/j.ijproman.2009.11.002
   Procaccino JD, 2006, J SYST SOFTWARE, V79, P1541, DOI 10.1016/j.jss.2006.01.010
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Serra CEM, 2015, INT J PROJ MANAG, V33, P53, DOI 10.1016/j.ijproman.2014.03.011
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Shenhar A., 1997, PROJ MANAG J, V28, P5
   Shenhar AJ, 2001, LONG RANGE PLANN, V34, P699, DOI 10.1016/S0024-6301(01)00097-8
   Tichy Len., 2008, MORTG BANK, V68, P28
   Tiwana A, 2008, STRATEGIC MANAGE J, V29, P769, DOI 10.1002/smj.673
   Ward J, 2008, MIS Q EXEC, V7, P1
   Whitney KM, 2013, PROCEDIA COMPUT SCI, V20, P325, DOI 10.1016/j.procs.2013.09.280
   Yeo K. T., 2002, International Journal of Project Management, V20, P241, DOI 10.1016/S0263-7863(01)00075-8
NR 67
TC 36
Z9 44
U1 3
U2 45
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 83
EP 94
DI 10.1016/j.infsof.2016.05.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DR0YZ
UT WOS:000379634100005
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Unterkalmsteiner, M
   Borg, M
   Engström, E
AF Bjarnason, Elizabeth
   Unterkalmsteiner, Michael
   Borg, Markus
   Engstrom, Emelie
TI A multi-case study of agile requirements engineering and the use of test
   cases as requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile development; Requirements; Testing; Test-first development;
   Test-driven development; Behaviour-driven development; Acceptance test;
   Case study; Empirical software engineering
ID SOFTWARE; CHALLENGES
AB Context: It is an enigma that agile projects can succeed 'without requirements' when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases.
   Objective: We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies.
   Method: We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups.
   Results: The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements.
   Conclusions: The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Bjarnason, Elizabeth; Borg, Markus; Engstrom, Emelie] Lund Univ, SE-22100 Lund, Sweden.
   [Unterkalmsteiner, Michael] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Bjarnason, E (corresponding author), Lund Univ, SE-22100 Lund, Sweden.
EM elizabeth.bjarnason@cs.lth.se; mun@bth.se; markus.borg@cs.lth.se;
   emelie.engstrom@cs.lth.se
RI Engström, Emelie/AAG-7808-2019; Borg, Markus/F-3609-2010
OI Engström, Emelie/0000-0001-6736-9425; Borg, Markus/0000-0001-7879-4371;
   Unterkalmsteiner, Michael/0000-0003-4118-0952; Bjarnason,
   Elizabeth/0000-0001-9070-0008
CR [Anonymous], 16 INT C REQTS ENG
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2006, PROC COMPANION 21 AC, DOI [10.1145/1176617.1176727, DOI 10.1145/1176617.1176727]
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], MANIFESTO AGILE DEV
   [Anonymous], P 2014 IEEE 1 INT WO
   [Anonymous], 8 INT C SOFTW TEST V
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   [Anonymous], IEEE AG C US
   [Anonymous], BEHAV MODIFICATION E
   [Anonymous], REQUIREMENTS ENG J
   [Anonymous], 19 IEEE INT REQ ENG
   Bjarnason E., 2011, P 1 WORKSH AG REQ EN
   Bjarnason E, 2015, LECT NOTES BUS INF P, V212, P27, DOI 10.1007/978-3-319-18612-2_3
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Davis A., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P141, DOI 10.1109/METRIC.1993.263792
   Dromey RG, 2003, I C SOFTW ENG FORM M, P2, DOI 10.1109/SEFM.2003.1236202
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hsia P, 1997, ANN SOFTW ENG, V3, P291, DOI 10.1023/A:1018938021528
   Janzen DS, 2007, PROC INT CONF SOFTW, P719, DOI 10.1109/ICSE.2007.8
   Latorre R, 2014, EMPIR SOFTW ENG, V19, P753, DOI 10.1007/s10664-013-9281-9
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LAWSON M, 1994, CONCURRENT ENG-RES A, V2, P1, DOI 10.1177/1063293X9400200101
   Layman L, 2006, J SYST ARCHITECT, V52, P654, DOI 10.1016/j.sysarc.2006.06.009
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Melnik G, 2007, LECT NOTES COMPUT SC, V4536, P245
   Miller T, 2012, SOFTW TEST VERIF REL, V22, P33, DOI 10.1002/stvr.431
   Morris J, 2001, COMPUTER, V34, P30, DOI 10.1109/2.947086
   Mugridge R, 2008, IEEE SOFTWARE, V25, P68, DOI 10.1109/MS.2008.11
   Park S, 2010, LECT NOTES BUS INF, V48, P208
   Park S, 2009, LECT NOTES BUS INF P, V31, P23
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Robson C., 2002, Real world research
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Sommerville I, 2005, IEEE SOFTWARE, V22, P16, DOI 10.1109/MS.2005.13
   Stapel K, 2014, EXPERT SYST, V31, P234, DOI 10.1111/exsy.649
   Unterkalmsteiner M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523088
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
NR 50
TC 34
Z9 40
U1 0
U2 46
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 61
EP 79
DI 10.1016/j.infsof.2016.03.008
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Chang, BM
   Choi, K
AF Chang, Byeong-Mo
   Choi, Kwanghoon
TI A review on exception analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Exception analysis; Static analysis; Dynamic analysis; Exception flow;
   Testing; Debugging
ID STATIC ANALYSIS; UNCAUGHT EXCEPTIONS; JAVA; PROGRAMS; SUPPORT; FLOW
AB Context Exception handling has become popular in most major programming languages, including Ada, C++, Java, and ML. Since exception handling was introduced in programming languages, there have been various kinds of exception analyses, which analyze exceptional behavior of programs statically or dynamically. Exception analyses have also been applied to various software engineering tasks such as testing, slicing, verification and visualization.
   Objective: This paper aims at providing a comprehensive view of studies on exception analysis. We conducted a review on exception analysis to identify and classify the studies.
   Method: We referred to the literature review method, and selected a comprehensive set of 87 papers on exception analysis from 515 papers published in journals and conference proceedings. The categorization and classification were done according to the research questions regarding to when they analyze, what they analyze, how to analyze, and applications of exception analysis.
   Results: We first identify three categories of static exception analysis and two categories of dynamic exception analysis together with the main applications of the exception analyses. We also discuss the main concepts, research methods used and major contributions of the studies on exception analysis.
   Conclusion: We have provided the comprehensive review of exception analysis. To the best of our knowledge, this is the first comprehensive review on exception analysis. As a further work, it would be interesting to see how the existing exception analysis techniques reviewed in this paper can be applied to other programming languages with exception handling mechanism, such as C#, Scala, and Eiffel, which have been rarely explored. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Chang, Byeong-Mo] Sookmyung Womens Univ, Seoul, South Korea.
   [Choi, Kwanghoon] Yonsei Univ, Wonju, South Korea.
C3 Sookmyung Women's University; Yonsei University
RP Choi, K (corresponding author), Yonsei Univ, Wonju, South Korea.
EM chang@sookmyung.ac.kr; kwanghoon.choi@yonsei.ac.kr
RI 최, 광훈/JQW-9376-2023
FU Basic Science Research Program through the National Research Foundation
   of Korea - Ministry of Education [NRF-2014R1A1A2053446]
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea funded by the Ministry of
   Education (NRF-2014R1A1A2053446).
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Alekseev S, 2007, Proceedings of the IASTED International Conference on Software Engineering, P177
   Allen M., 2003, SIGPLAN Notices, V38, P284, DOI 10.1145/966049.777394
   Amighi Afshin, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P33, DOI 10.1007/978-3-642-33826-7_3
   Arnold K., 1997, JAVA PROGRAMMING LAN, VSecond
   Artho Cyrille., 2006, P 5 INT C FORM METH, P26
   Ayers A, 2005, ACM SIGPLAN NOTICES, V40, P201, DOI 10.1145/1064978.1065035
   Benton N, 2007, PROCEEDINGS OF THE TLDI 2007: 2007 ACM SIGPLAN INTERNATIONAL WORKSHOP ON TYPES IN LANGUAGES DESIGN AND IMPLEMENTATION, P15, DOI 10.1145/1190315.1190320
   Bravenboer M, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P1
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Candea G, 2003, WIAPP 2003: THIRD IEEE WORKSHOP ON INTERNET APPLICATIONS, PROCEEDINGS, P132, DOI 10.1109/WIAPP.2003.1210298
   Chang B., 2001, AS WORKSH PROGR LANG, P377
   Chang B., 2003, P 7 WORLD MULT SYST, P68
   Chang BM, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P173, DOI 10.1109/SCAM.2002.1134117
   Changbing Ji, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P556, DOI 10.1109/COMPSAC.2009.192
   Chatterjee R, 2001, IEEE T SOFTWARE ENG, V27, P481, DOI 10.1109/32.926173
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   Coelho R, 2011, INFORM SCIENCES, V181, P2700, DOI 10.1016/j.ins.2010.06.002
   Coelho Roberta., 2008, PLOP 08, P1
   Cornu B, 2015, INFORM SOFTWARE TECH, V57, P66, DOI 10.1016/j.infsof.2014.08.004
   Di Bernardo R., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P21, DOI 10.1109/LADCW.2011.12
   Dulaigh Keith O., 2012, 2012 Proceedings of 5th International Workshop on Exception Handling (WEH 2012), P55, DOI 10.1109/WEH.2012.6226602
   Fahndrich M., 1997, Static Analysis. 4th International Symposium, SAS '97 Proceedings, P114, DOI 10.1007/BFb0032737
   Fetzer C, 2004, IEEE T SOFTWARE ENG, V30, P547, DOI 10.1109/TSE.2004.35
   Filho F. S., 2005, P ECOOP WORKSH EXC H, P255
   Fu C, 2005, IEEE T SOFTWARE ENG, V31, P292, DOI 10.1109/TSE.2005.51
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Fu Chen., 2005, ECLIPSE 05, P40
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   Garcia I., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P1, DOI 10.1109/LADCW.2011.18
   Ghosh A. K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P166, DOI 10.1109/ISSRE.1999.809321
   Glynn K, 2002, ACM SIGPLAN NOTICES, V37, P98, DOI 10.1145/583852.581488
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   GOSLING J, 1996, JAVA PROGRAMMING LAN
   Gupta M, 2000, LECT NOTES COMPUT SC, V1850, P422
   GUZMAN JC, 1994, P ACM SIGPLAN WORKSH, P127
   Häubl C, 2014, ACM T ARCHIT CODE OP, V11, DOI 10.1145/2579673
   Harrold M.J., 2008, Proceedings of the 4th International Workshop on Exception Handling, P62, DOI DOI 10.1145/1454268.1454277
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Ichbiah J.D., 1979, SIGPLAN NOTICES, V14, P1, DOI 10.1145/956650.956651
   Jiang SJ, 2007, ACM SIGPLAN NOTICES, V42, P3, DOI 10.1145/1288258.1288259
   Jiang SJ, 2006, ACM SIGPLAN NOTICES, V41, P30, DOI 10.1145/1147214.1147220
   Jiang SJ, 2006, CIC 2006: 15TH INTERNATIONAL CONFERENCE ON COMPUTING, PROCEEDINGS, P277
   Jiang SJ, 2012, INT CONF QUAL SOFTW, P9, DOI 10.1109/QSIC.2012.36
   Jiang SJ, 2005, ACM SIGPLAN NOTICES, V40, P34, DOI 10.1145/1089851.1089858
   Jo JW, 2004, LECT NOTES COMPUT SC, V3043, P106
   Jo JW, 2004, J SYST SOFTWARE, V72, P59, DOI 10.1016/S0164-1212(03)00057-8
   Kaczmarek P. L., 2005, P 6 INT C PAR PROC A, P994
   Kádár I, 2014, ACTA CYBERN, V21, P331, DOI 10.14232/actacyb.21.3.2014.4
   Kastrinis G, 2013, LECT NOTES COMPUT SC, V7791, P41, DOI 10.1007/978-3-642-37051-9_3
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Koenig A., 1990, P USENIX C PLUS PLUS, P149
   Koot R, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P127, DOI 10.1145/2678015.2682542
   Lang J, 1998, ACM T PROGR LANG SYS, V20, P274, DOI 10.1145/276393.276395
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Leroy X, 2000, ACM T PROGR LANG SYS, V22, P340, DOI 10.1145/349214.349230
   Li SL, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P442
   Liang SY, 2014, IEEE INT WORK C SO, P265, DOI 10.1109/SCAM.2014.44
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   LISKOV BH, 1979, IEEE T SOFTWARE ENG, V5, P546, DOI 10.1109/TSE.1979.230191
   Malayeri D., 2005, P ECOOP WORKSH EXC H, P200
   Mao CY, 2005, IEEE INT C ENG COMP, P432
   MARTINS AL, 2014, P IEEE 38 INT COMP S, P626, DOI DOI 10.1109/COMPSACW.2014.105
   Martins AL, 2014, LECT NOTES COMPUT SC, V8579, P671, DOI 10.1007/978-3-319-09144-0_46
   Milner R., 1990, The Definition of Standard ML
   Murphy C, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P173, DOI 10.1145/1352322.1352193
   Nielson F., 1999, Principles of Program Analysis
   Ogasawara T, 2006, ACM T PROGR LANG SYS, V28, P70, DOI 10.1145/1111596.1111598
   Ohe H, 2005, LECT NOTES COMPUT SC, V3475, P71
   Pinter G., 2004, Scientific Engineering of Distributed Java Applications. 4th International Workshop, FIDJI 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3409), P58
   Prabhu P, 2011, LECT NOTES COMPUT SC, V6813, P583, DOI 10.1007/978-3-642-22655-7_27
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   REIMER D, 2003, P ECOOP 2003 WORKSH, P10
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Romano Daniele, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P160, DOI 10.1109/ICST.2011.49
   Ryder BG, 2000, LECT NOTES COMPUT SC, V1781, P67
   Ryu SY, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P23, DOI 10.1109/APAQS.2001.989998
   SCHAEFER CF, 1993, SOFTWARE PRACT EXPER, V23, P1157, DOI 10.1002/spe.4380231007
   Shah H, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P19
   Shujuan Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P393, DOI 10.1109/QSIC.2010.23
   Sinha S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P432, DOI 10.1109/ICSE.1999.841033
   Sinha S, 2004, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE.2004.1317456
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Szegedi A, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P35, DOI 10.1109/SCAM.2005.8
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tomb A., 2007, INT S SOFTWARE TESTI, P97
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   Wang T, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330021
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wu XY, 2011, MICROFLUID NANOFLUID, V11, P11, DOI 10.1007/s10404-011-0768-7
   Yi K, 1998, SCI COMPUT PROGRAM, V31, P147, DOI 10.1016/S0167-6423(96)00044-5
   Yi K, 2002, THEOR COMPUT SCI, V277, P185, DOI 10.1016/S0304-3975(00)00317-0
   Yu L, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P842, DOI 10.1109/IMCCC.2012.203
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
   [No title captured]
NR 102
TC 12
Z9 12
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 1
EP 16
DI 10.1016/j.infsof.2016.05.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000001
DA 2024-07-18
ER

PT J
AU Türker, UC
   Ünlüyurt, T
   Yenigün, H
AF Turker, Uraz Cengiz
   Unluyurt, Tonguc
   Yenigun, Husnu
TI Effective algorithms for constructing minimum cost adaptive
   distinguishing sequences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Finite State Machines; Adaptive distinguishing sequences; Checking
   sequences
ID FINITE-STATE MACHINES; EXPLORING ALTERNATIVES; CHECKING SEQUENCES;
   FORMAL METHODS; LENGTHS; IDENTIFICATION; DESIGN
AB Context: Given a Finite State Machine (FSM), a checking sequence is a test sequence that determines whether the system under test is correct as long as certain standard assumptions hold. Many checking sequence generation methods use an adaptive distinguishing sequence (ADS), which is an experiment that distinguishes the states of the specification machine. Furthermore, it has been shown that the use of shorter ADSs yields shorter checking sequences. It is also known, on the other hand, that constructing a minimum cost ADS is an NP-hard problem and it is NP-hard to approximate. This motivates studying and investigating effective ADS construction methods.
   Objective: The main objective of this paper is to suggest new methods that can compute compact ADSs to be used in the construction of checking sequences.
   Method: We briefly present the existing ADS construction algorithms. We then propose generalizations of these approaches with a set of heuristics. We also conduct experiments to compare the size of the resultant ADSs and the length of the checking sequences constructed using these ADSs.
   Results: The results indicate that when the ADSs are constructed with the proposed methods, the length of the checking sequences may reduce up to 54% (40% on the average).
   Conclusions: In this paper, we present the state of the art ADS construction methods for FSMs and we propose generalizations of these methods. We show that our methods are effective in terms of computation time and ADS quality. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Turker, Uraz Cengiz; Unluyurt, Tonguc; Yenigun, Husnu] Sabanci Univ, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Türker, UC (corresponding author), Sabanci Univ, TR-34956 Istanbul, Turkey.
EM urazc@sabanciuniv.edu; tonguc@sabanciuniv.edu; yenigun@sabanciuniv.edu
RI Turker, Uraz/JDN-0220-2023; Unluyurt, Tonguc/A-9985-2008; Yenigun,
   Husnu/L-3299-2013
OI Turker, Uraz/0000-0001-5976-1945; Unluyurt, Tonguc/0000-0002-3840-0806
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [113E292]
FX This work is supported by the Scientific and Technological Research
   Council of Turkey (TUBITAK) under Grant #113E292.
CR Aho A., 1986, SER ADDISON WESLEY S
   [Anonymous], 1999, REC Z 100 SPEC DESCR
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   BOUTE RT, 1974, IEEE T COMPUT, VC 23, P874, DOI 10.1109/T-C.1974.224043
   Brglez F., 1996, ACM SIGMOD BENCHMARK
   Brinksma Ed., 1988, PROTOCOL SPECIFICATI, VVIII, P63
   Chen J, 2005, LECT NOTES COMPUT SC, V3502, P146
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   CLEVELAND WS, 1979, J AM STAT ASSOC, V74, P829, DOI 10.2307/2286407
   DAHBURA AT, 1990, P IEEE, V78, P1317, DOI 10.1109/5.58319
   Dingttirk M., 2009, THESIS SABANCI U
   Duan LH, 2009, J SYST SOFTWARE, V82, P1388, DOI 10.1016/j.jss.2009.05.019
   Friedman A., 1971, Computer Applications in Electrical Engineering Series
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Harel D., 1998, MODELING REACTIVE SY
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   HENNIE FC, 1968, FINITE STATE MODELS
   Hierons R., 2015, PARALLEL ALGORITHMS
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2002, IEEE T COMPUT, V51, P1111, DOI 10.1109/TC.2002.1032630
   Hierons RM, 2015, COMPUT J, V58, P3089, DOI 10.1093/comjnl/bxv041
   Hierons RM, 2014, LECT NOTES COMPUT SC, V8430, P62, DOI 10.1007/978-3-319-06200-6_5
   Hierons RM, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P157, DOI 10.1109/SEFM.2009.12
   Jourdan GV, 2010, FORM ASP COMPUT, V22, P667, DOI 10.1007/s00165-009-0135-6
   Kapus-Kolar M, 2014, MICROPROCESS MICROSY, V38, P208, DOI 10.1016/j.micpro.2014.01.007
   Kapus-Kolar M, 2012, J SYST SOFTWARE, V85, P1744, DOI 10.1016/j.jss.2012.03.034
   Kogan I., 1973, AVTOMAT TELEMEKH, V2, P354
   Kohavi Z., 1978, Switching and Finite State Automata Theory
   Kushik Natalia, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P33, DOI 10.1007/978-3-642-41707-8_3
   Kushik N., 2016, SOFTWARE VE IN PRESS
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lee D, 1996, IEEE T COMMUN, V44, P631, DOI 10.1109/26.494307
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Low S. H., 1993, Proceedings 1993 International Conference on Network Protocols, P368, DOI 10.1109/ICNP.1993.340890
   Moore E.F., 1956, AUTOMATA STUDIES
   Rystsov I. K., 1976, Cybernetics, V12, P354
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Simao A, 2008, LECT NOTES COMPUT SC, V5047, P153, DOI 10.1007/978-3-540-68524-1_12
   Simao A, 2010, IEEE T COMPUT, V59, P1023, DOI 10.1109/TC.2010.17
   Simao A, 2009, IEEE ICST WORKSHOP, P48, DOI 10.1109/ICSTW.2009.25
   Sokolovskii M. N., 1971, Cybernetics, V7, P988
   Stowell S., 2012, INSTANT R INTRO R ST
   Teetor P., 2011, R COOKBOOK
   Tekle KT, 2005, LECT NOTES COMPUT SC, V3733, P915
   Türker UC, 2014, LECT NOTES COMPUT SC, V8763, P32, DOI 10.1007/978-3-662-44857-1_3
   Türker UC, 2014, FORM METHOD SYST DES, V44, P264, DOI 10.1007/s10703-014-0205-0
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   Ural H, 2006, LECT NOTES COMPUT SC, V3964, P274
   Ural H, 1993, IEEE ACM T NETWORK, V1, P358, DOI 10.1109/90.234857
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Yalcin MC, 2006, LECT NOTES COMPUT SC, V3964, P259
NR 55
TC 6
Z9 6
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 69
EP 85
DI 10.1016/j.infsof.2016.02.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000005
DA 2024-07-18
ER

PT J
AU Yousfi, A
   Bauer, C
   Saidi, R
   Dey, AK
AF Yousfi, Alaaeddine
   Bauer, Christine
   Saidi, Rajaa
   Dey, Anind K.
TI uBPMN: A BPMN extension for modeling ubiquitous business processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modeling; Ubiquitous business process; Ubiquitous
   computing; uBPMN
ID INTEGRATION
AB Context: Business Process Model and Notation (BPMN) is the de facto standard for business process modeling. It was developed by the Object Management Group with support of the major organizations in the fields of software engineering and information systems. Despite its wide use, when it comes to representing ubiquitous business processes, this business process modeling language is lacking.
   Objective: To address BPMN's deficiency in representing ubiquitous business processes, we extend it and present uBPMN (or ubiquitous BPMN).
   Method: First, we analyze the modeling requirements for representing ubiquitous business processes. Based on the requirements, we conservatively extend the Meta-Object Facility meta-model and the XML Schema Definition of BPMN as well as extend the notation. The extension, that we call uBPMN follows the same outline as set by the Object Management Group for BPMN.
   Results: The proposed uBPMN not only allows for modeling ubiquitous business processes but also lays the groundwork for potentially deploying a variety of ubiquitous computing technologies. We illustrate all of uBPMN's capabilities and benefits with real-life examples.
   Conclusion: uBPMN extends BPMN v2.0 with new capabilities to deal with ubiquitous computing technologies. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Yousfi, Alaaeddine; Saidi, Rajaa] Mohammed V Univ, FSR, Res Unit Associated CNRST, LRIT,URAC 29, Rabat, Morocco.
   [Yousfi, Alaaeddine; Dey, Anind K.] Carnegie Mellon Univ, Human Comp Interact Inst, Pittsburgh, PA 15213 USA.
   [Bauer, Christine] Univ Cologne, Dept Informat Syst & Informat Management, D-50931 Cologne, Germany.
   [Saidi, Rajaa] INSEA, Rabat, Morocco.
C3 Mohammed V University in Rabat; Carnegie Mellon University; University
   of Cologne
RP Yousfi, A (corresponding author), Carnegie Mellon Univ, Human Comp Interact Inst, Pittsburgh, PA 15213 USA.
EM aeyousfi@cmu.edu; bauer@wim.uni-koeln.de; r.saidi@insea.ac.ma;
   anind@cs.cmu.edu
RI Saidi, Rajaa/ABC-5121-2020; dey, anind/B-1312-2008; Bauer,
   Christine/J-7323-2019
OI Saidi, Rajaa/0000-0002-8292-3188; Bauer, Christine/0000-0001-5724-1137;
   Yousfi, Alaaeddine/0000-0002-9449-3429
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Ahson SA, 2008, RFID HDB APPL TECHNO
   [Anonymous], 2012, ENABLING FLEXIBILITY
   [Anonymous], SMART THINGS UBIQUIT
   [Anonymous], 2009, Human-Computer Interaction Fundamentals
   [Anonymous], JBPM5 DEV GUIDE
   [Anonymous], HUM COMPUT INTERACT
   [Anonymous], CHI 2008 26 ANN CHI
   [Anonymous], BUILDING METHODOLOGY
   [Anonymous], CHI2009 P 27 ANN
   [Anonymous], P SYST SUPP UB COMP
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2001, M LAB WORKING PAPER
   [Anonymous], BPMN EXTENSION INCLU
   [Anonymous], SCAL COMPUT PRACT EX
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], P 14 IB C SOFTW ENG
   Aoumeur N, 2004, THIRTEENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P147, DOI 10.1109/ENABL.2004.72
   Appel S, 2014, INFORM SYST, V46, P140, DOI 10.1016/j.is.2014.04.002
   Azuma RT, 1997, PRESENCE-VIRTUAL AUG, V6, P355, DOI 10.1162/pres.1997.6.4.355
   Bauer C, 2013, SCALABLE COMPUT-PRAC, V14, P139, DOI 10.12694/scpe.v14i3.856
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Becker J., 2004, Proceedings of the 15th irma international conference, P1
   Bocciarelli P, 2011, SIMUL SERIES, V43, P160
   Braun Richard, 2015, 2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD), P1
   Braun R, 2014, LECT NOTES BUS INF P, V197, P42
   Braun R, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON THE INTERRELATIONS BETWEEN REQUIREMENTS ENGINEERING AND BUSINESS PROCESS MANAGEMENT (REBPM), P39, DOI 10.1109/REBPM.2014.6890734
   Bucchiarone Antonio, 2012, 9th International Conference on Service-Oriented Computing - ICSOC 2011 Workshops, P252, DOI 10.1007/978-3-642-31875-7_35
   Bucchiarone A., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P33, DOI 10.1109/ICWS.2012.56
   Chang James., 2005, Business Process Management Systems: Strategy and Implementation
   Charalabidis Y, 2014, ADV BUS STRATEGY COM, P1, DOI 10.4018/978-1-4666-5142-5
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Das M., 2011, Oracle Business Process Management Suite 11g Handbook
   de Freitas AA, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1602, DOI 10.1145/2675133.2675205
   Friedenstab JP, 2012, P 45 HAW INT C SYST, P4158, DOI DOI 10.1109/HICSS.2012.276
   Friedewald M, 2011, TELEMAT INFORM, V28, P55, DOI 10.1016/j.tele.2010.09.001
   Gagne Denis, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P361, DOI 10.1109/CEC.2009.71
   Giner Pau, 2008, IEEE Latin America Transactions, V6, P347, DOI 10.1109/TLA.2008.4815288
   Jung JY, 2008, IN C IND ENG ENG MAN, P1500, DOI 10.1109/IEEM.2008.4738121
   Kopetz, 2011, REAL-TIME SYST, DOI [10.1007/978-1-4419-8237-7_13, DOI 10.1007/978-1-4419-8237-7, DOI 10.1007/978-1-4419-8237-7_13]
   Lijding M., 2007, I/O Vivat, V22, P35
   Liu T, 1998, IEEE J SEL AREA COMM, V16, P922, DOI 10.1109/49.709453
   Lodhi A., 2011, J. Riga Technical University, V43, P27, DOI [10.2478/v10143-011-0004-7, DOI 10.2478/V10143-011-0004-7]
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Martinho R, 2014, PROC TECH, V16, P737, DOI 10.1016/j.protcy.2014.10.023
   Mattos TD, 2014, COMPUT IND, V65, P1193, DOI 10.1016/j.compind.2014.07.005
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   OMG, 2011, TECHNICAL REPORT
   Pascalau E, 2013, FED CONF COMPUT SCI, P959
   Pillat RM, 2015, INFORM SOFTWARE TECH, V57, P95, DOI 10.1016/j.infsof.2014.09.004
   Preuveneers D, 2004, LECT NOTES COMPUT SC, V3295, P148
   Rademakers Tijs., 2012, Activiti in Action: Executable Business Processes in BPMN 2.0, V1st
   Stroppi LJR, 2011, LECT NOTES BUS INF P, V95, P59
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Rozinat A, 2006, LECT NOTES COMPUT SC, V3812, P163
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Saeedi Kawther, 2010, 2010 IEEE International Conference on Web Services (ICWS), P616, DOI 10.1109/ICWS.2010.116
   Schultz M, 2014, LECT NOTES COMPUT SC, V8659, P184, DOI 10.1007/978-3-319-10172-9_12
   Smith A.D., 2002, INFORM MANAGEMENT CO, V10, P109, DOI DOI 10.1108/09685220210431863
   Sungur C. Timurhan, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P109, DOI 10.1109/CBI.2013.24
   Thacker Ben H, 2004, Technical report
   Tranquillini S, 2012, LECT NOTES COMPUT SC, V7481, P134, DOI 10.1007/978-3-642-32885-5_10
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   WHITE RM, 1987, IEEE T ULTRASON FERR, V34, P124, DOI 10.1109/T-UFFC.1987.26922
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Yousfi A, 2016, IEEE T SERV COMPUT, V9, P621, DOI 10.1109/TSC.2015.2406694
   Yousfi A, 2016, INF SYST E-BUS MANAG, V14, P443, DOI 10.1007/s10257-015-0290-7
   Yousfi A, 2015, COMPUT IND, V70, P13, DOI 10.1016/j.compind.2015.02.003
   Zhu XW, 2014, BUS PROCESS MANAG J, V20, P794, DOI 10.1108/BPMJ-06-2013-0066
NR 72
TC 44
Z9 47
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 55
EP 68
DI 10.1016/j.infsof.2016.02.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000004
DA 2024-07-18
ER

PT J
AU Jurkiewicz, J
   Nawrocki, J
AF Jurkiewicz, J.
   Nawrocki, J.
TI Automated events identification in use cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Use cases; Functional requirements; Natural
   language processing
ID REQUIREMENTS; SCENARIO
AB Context: Use cases are a popular method of expressing functional requirements. One contains a main scenario and a set of extensions, each consisting of an event and an alternative sequence of activities. Events omitted in requirements specification can lead to rework. Unfortunately, as it follows from the previous research, manual identification of events is rather ineffective (less than 1/3 of events are identified) and it is slow.
   Objective: The goal of this paper is to propose an automatic method of identification of events in use cases and evaluate its quality.
   Method: Each step of a main scenario is analyzed by a sequence of NLP tools to identify its performer, activity type and information object. It has been observed that performer, activity type and some attributes of information objects determine types of events that can occur when that activity is performed. That empirical knowledge is represented as a set of axioms and two inference rules have been proposed which allow to identify types of possible events. For each event type an NLG pattern is proposed which allows to generate description of the event type in natural language. The proposed method was compared with two manual approaches to identification of events: ad hoc and HAZOP-based. Also a kind of Turing test was performed to evaluate linguistic quality of generated descriptions.
   Results: Accuracy of the proposed method is about 80% (for manual approaches it is less than 1/3) and its speed is about 11 steps/minute (ad hoc approach is 4 times slower, and HAZOP-based approach is 20 times slower). Understandability of the generated event descriptions was not worse than understandability of the descriptions written by humans.
   Conclusions: The proposed method could be used to enhance contemporary tools for managing use cases. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Jurkiewicz, J.; Nawrocki, J.] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Jurkiewicz, J (corresponding author), Poznan Univ Tech, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM jjurkiewicz@cs.putpoznan.pl; jnawrocki@cs.put.poznan.pl
RI Nawrocki, Jerzy R/I-5690-2012
FU Polish National Science Center at Poznan University of Technology
   [UMO-2011/01/N/ST6/06794]
FX This Project was funded by Polish National Science Center project
   UMO-2011/01/N/ST6/06794 conducted at Poznan University of Technology.
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Albrecht A.J., 1984, IBM CORPORATE INFORM
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   Alexander I, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P991, DOI 10.1109/DEXA.2000.875147
   [Anonymous], 1950, MIND, DOI 10.1093/mind/LIX.236.433
   [Anonymous], 2006, LREC 2006
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Carson Ronald S., 1998, P 8 ANN INT INCOSE S
   Cockburn A., 2001, Writing effective use cases
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gatt A, 2009, P 12 EUROPEAN WORKSH, P90
   Green Spence., 2011, P 2011 C EMP METH NA, P725
   Hui ZH, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P183
   Hurlbut R., 1997, SURVEY APPROACHES DE
   Jacobson I., 1985, CONCEPTS MODELING LA
   Jurafsky D., 2014, Speech and Language Processing
   Jurkiewicz J., EMPIRICAL SOFTWARE E
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   Karl Cox, 2004, J RES PRACT INF TECH, V36
   Leffingwell D., 1997, American Programmer, V10, P13
   Letier E, 2005, PROC INT CONF SOFTW, P382
   Letier E., 2001, Reasoning about agents in goal-oriented requirements engineering
   Makino M, 2008, INT REQUIR ENG CONF, P337, DOI 10.1109/RE.2008.17
   Mar Brian W., 1994, P NCOSE
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Nawrocki J, 2005, LECT NOTES COMPUT SC, V3556, P230
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Ochodek M., INF SOFTW TECHNOL, V53
   Paydar Samad, 2014, INF SOFTW TECHNOL
   Rafferty A.N., 2008, Proceedings of the Workshop on Parsing German, PaGe '08, P40
   Smialek M., 2007, PRACE NAUKOWE
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Sutcliffe Alistair G., 1998, IEEE T SOFTW ENG, V24
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Wiegers Karl E., 2003, P 9 IEEE INT SOFTW M
NR 37
TC 3
Z9 6
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 110
EP 122
DI 10.1016/j.infsof.2014.09.011
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800007
DA 2024-07-18
ER

PT J
AU Heikkilä, VT
   Paasivaara, M
   Rautiainen, K
   Lassenius, C
   Toivola, T
   Järvinen, J
AF Heikkila, Ville T.
   Paasivaara, Maria
   Rautiainen, Kristian
   Lassenius, Casper
   Toivola, Towo
   Jarvinen, Janne
TI Operational release planning in large-scale Scrum with multiple
   stakeholders - A longitudinal case study at F-Secure Corporation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Scrum; Large projects; Release planning;
   Software project management
ID AGILE; REQUIREMENTS; PRINCIPLES; SIZE
AB Context: The analysis and selection of requirements are important parts of any release planning process. Previous studies on release planning have focused on plan-driven optimization models. Unfortunately, solving the release planning problem mechanistically is difficult in an agile development context.
   Objective: We describe how a release planning method was employed in two case projects in F-Secure, a large Finnish software company. We identify the benefits which the projects gained from the method, and analyze challenges in the cases and improvements made to the method during the case projects.
   Method: We observed five release planning events and four retrospectives and we conducted surveys in the first two events. We conducted six post-project interviews. We conjoined the observation notes, survey results and interviews and analyzed them qualitatively and quantitatively.
   Results: The focal point of the method was release planning events where the whole project organization gathered to plan the next release. The planning was conducted by the development teams in close collaboration with each other and with the other stakeholders. We identified ten benefits which included improved communication, transparency, dependency management and decision making. We identified nine challenges which included the lacking preparation and prioritization of requirements, unrealistic schedules, insufficient architectural planning and lacking agile mindset. The biggest improvements to the method were the introduction of frequent status checks and a big visible planning status board.
   Conclusion: The release planning method ameliorated many difficult characteristics of the release planning problem but its efficiency was negatively affected by the performing organization that was in transition from a plan-driven to an agile development mindset. Even in this case the benefits clearly outweighed the challenges and the method enabled the early identification of the issues in the project. (C) 2014 The Authors. Published by Elsevier B.V.
C1 [Heikkila, Ville T.; Paasivaara, Maria; Rautiainen, Kristian; Lassenius, Casper] Aalto Univ, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
   [Toivola, Towo; Jarvinen, Janne] F Secure Oyj, FI-00181 Helsinki, Finland.
C3 Aalto University
RP Heikkilä, VT (corresponding author), Aalto Univ, Dept Comp Sci & Engn, POB 15400, FI-00076 Aalto, Finland.
EM ville.t.heikkila@aalto.fi; maria.paasivaara@aalto.fi;
   kristian.rautiainen@aalto.fi; casper.lassenius@aal-to.fi;
   towo.toivola@f-secure.com; janne.jarvinen@f-secure.com
RI Rautiainen, Kristian T/B-9666-2013; Järvinen, Janne/HJJ-1432-2023;
   Lassenius, Casper/A-4339-2013
OI Jarvinen, Janne/0000-0002-2000-6552; Lassenius,
   Casper/0000-0003-4192-7024; Heikkila, Ville T./0000-0002-1181-1533
FU TEKES as part of the Cloud Software Finland; Need for Speed research
   programs of DIGILE (Finnish Strategic Centre for Science, Technology and
   Innovation
FX This work was supported by TEKES as part of the Cloud Software Finland
   and the Need for Speed research programs of DIGILE (Finnish Strategic
   Centre for Science, Technology and Innovation in the field of ICT and
   digital business).
CR Al-Emran A., 2007, P 10 INT C INT DES P, P191
   Al-Emran A, 2007, LECT NOTES COMPUT SC, V4589, P315
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Benestad HC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P766, DOI 10.1145/1985793.1985901
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohn M., 2005, Agile Estimating and Planning
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Ferrari E., 2008, PRODUCT MANAGEMENT S
   Fogelström ND, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P217, DOI 10.1109/SEAA.2009.66
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Gunyho G, 2011, LECT NOTES BUS INF P, V77, P306
   Heikkila V., 2010, P 43 HAW INT C SYST
   Heikkilä V, 2010, EUROMICRO CONF PROC, P289, DOI 10.1109/SEAA.2010.37
   Heikkilä VT, 2013, LECT NOTES BUS INF P, V149, P195
   Jantunen S, 2011, 5 INT WORKSH SOFTW P, P36, DOI [10.1109/IWSPM.2011.6046202, DOI 10.1109/IWSPM.2011.6046202]
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Kittlaus H.B., 2009, Software Product Management and Pricing
   Larman C., 2009, SCALING LEAN 82 AGIL
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Lindgren M, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P253, DOI 10.1109/WICSA.2008.10
   Logue K, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P437, DOI 10.1109/ECBS.2008.58
   Mingshu Li, 2006, 28th International Conference on Software Engineering Proceedings, P423
   Momoh J., 2006, Software Process Improvement and Practice, V11, P295, DOI 10.1002/spip.273
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Paasivaara M, 2011, INT SYMP EMP SOFTWAR, P363, DOI 10.1109/ESEM.2011.49
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   PRIES K.H., 2011, Scrum Project Management, Parkway
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Rothman J., 2007, MANAGE ITL YOUR GUID
   Ruhe G., 2005, P 38 ANN HAW INT C S
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Schwaber K., 2007, The enterprise and Scrum
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   VersionOne Inc, 2013, 7 ANN STAT AG DEV SU
   Vlaanderen K, 2011, INFORM SOFTWARE TECH, V53, P58, DOI 10.1016/j.infsof.2010.08.004
   Wheelan SA, 2009, SMALL GR RES, V40, P247, DOI 10.1177/1046496408328703
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 51
TC 34
Z9 34
U1 8
U2 60
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 116
EP 140
DI 10.1016/j.infsof.2014.09.005
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500008
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Schall, D
AF Schall, Daniel
TI Who to follow recommendation in large-scale online development
   communities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Online communities; Software development; GitHub; Knowledge management;
   Who-to-follow recommendation; Social resilience
AB Context: Open source development allows a large number of people to reuse and contribute source code to the community. Social networking features open opportunities for information discovery, social collaborations, and improved recommendations of potential collaborators.
   Objective: Online community and development platforms rely on social network features to increase awareness and attention among community members for improved collaborations. The objective of this work is to introduce an approach for recommending relevant users to follow. Follower networks provide means for informal information propagation. The efficiency and effectiveness of such information flows is impacted by the network structure. Here, we aim to understand the resilience of networks against random or strategic node removal.
   Method: Social network features of online software development communities present a new opportunity to enhance online collaboration. Our approach is based on the automatic analysis of user behavior and network structure. The proposed 'who to follow' recommendation algorithm can be parametrized for specific contexts. Link-analysis techniques such as PageRank/HITS provide the basis for a novel 'who to follow' recommendation model.
   Results: We tested the approach using a GitHub-based dataset. Currently, users follow popular community members to get updates regarding their activities instead of maintaining personal relations. Thus, social network features require further improvements to increase reciprocity. The application of our who to follow' recommendation model using the GitHub dataset shows excellent results with respect to context-sensitive following recommendations. The sensitivity of GitHub's follower network to random node removal is comparable with other social networks but more sensitive to follower authority based node removal.
   Conclusion: Link-based algorithm can be used for context-sensitive 'who to follow' recommendations. GitHub is highly sensitive to authority based node removal. Information flow established through follower relations will be strongly impacted if many authorities are removed from the network. This underpins the importance of 'central' users and the validity of focusing the 'who to follow' recommendations on those users. (c) 2013 Elsevier B.V. All rights reserved.
C1 Siemens Corp Technol, A-1211 Vienna, Austria.
C3 Siemens AG
RP Schall, D (corresponding author), Siemens Corp Technol, Siemensstr 90, A-1211 Vienna, Austria.
EM daniel.schall@siemens.com
CR Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   Adger WN, 2000, PROG HUM GEOG, V24, P347, DOI 10.1191/030913200701540465
   Anagnostopoulos Aris, 2012, P WWW, P839, DOI DOI 10.1145/2187836.2187950
   [Anonymous], 2011, P 20 INT C WORLD WID
   [Anonymous], 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339690
   [Anonymous], 2002, P 11 INT C WORLD WID, DOI DOI 10.1145/511446.511513
   [Anonymous], WHO SHOULD I FOLLOW
   [Anonymous], P 6 ACM INT C WEB SE
   Backstrom L., 2006, P 12 ACM SIGKDD INT, P44, DOI DOI 10.1145/1150402.1150412
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Cha M, 2009, WWW 09 P 18 INT WORL, DOI DOI 10.1145/1526709.1526806
   Conradi R., 2001, Software Engineering Notes, V26, P268, DOI 10.1145/503271.503246
   Fisher FranklinM., 1983, IBM and the U.S. Data Processing Industry: An Economic History
   FRITZ T, 2010, P 32 ACM IEEE INT C, V1, P385, DOI DOI 10.1145/1806799.1806856
   Garcia D., 2013, Social Resilience in Online Communities: The Autopsy of Friendster
   *GITH, GITH EV TYP
   GOLDBERG D, 1992, COMMUN ACM, V35, P61, DOI 10.1145/138859.138867
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   GRANOVETTER MS, 1973, AM J SOCIOL, V78, P1360, DOI 10.1086/225469
   Gupta Pankaj, 2013, P 22 INT C WORLD WID, P505, DOI DOI 10.1145/2488388.2488433
   Heller B., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P223
   Jeh Glen, 2003, P 12 INT C WORLD WID, P271, DOI DOI 10.1145/775152.775191
   Jin X., 2005, P 38 ANN HAWAII INT, p198a
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   KOSNER AW, GITHUB IS NEXT BIG S
   Kumar R., 2006, P 12 ACM SIGKDD INT, P611, DOI DOI 10.1007/978-1-4419-6515-8_13
   Kwak HG, 2010, INT CONF ADV COMMUN, P591
   Lappas T, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P467
   Leskovec J., 2008, P 17 INT C WORLD WID, DOI 10.1145/1367497.1367620
   Leskovec J., 2005, P 11 ACM SIGKDD INT, P177
   Madey G, 2002, AM C INF SYST AMCIS2, P1806
   McAuley J., 2012, NIPS 12
   McPherson M, 2001, ANNU REV SOCIOL, V27, P415, DOI 10.1146/annurev.soc.27.1.415
   MILGRAM S, 1967, PSYCHOL TODAY, V1, P61
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   NEVO D, WHO KNOWS WHAT
   Newman MEJ, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.036122
   Page L., 1999, PAGERANK CITATION RA
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Schall D, 2013, J INFORMETR, V7, P730, DOI 10.1016/j.joi.2013.05.003
   Schall D, 2012, DATA KNOWL ENG, V71, P92, DOI 10.1016/j.datak.2011.08.001
   Schall Daniel., 2012, Service-Oriented Crowdsourcing: Architecture, Protocols, and Algorithms
   StanleyWasserman Katherine, 1994, SOCIAL NETWORK ANAL, DOI 10.1017/CBO9780511815478
   Ugander J., CORR
   VALETTO G, 2007, USING SOFTWARE REPOS, P25
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Weng J., 2010, P 3 ACM INT C WEB SE, P261, DOI [10.1145/1718487.1718520, DOI 10.1145/1718487.1718520]
   Zhang J., 2007, P 16 INT C WORLD WID, P221
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   [No title captured]
NR 52
TC 14
Z9 18
U1 1
U2 56
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2014
VL 56
IS 12
SI SI
BP 1543
EP 1555
DI 10.1016/j.infsof.2013.12.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AP2LG
UT WOS:000341903100002
DA 2024-07-18
ER

PT J
AU Yang, Y
   He, ZM
   Mao, K
   Li, Q
   Nguyen, V
   Boehm, B
   Valerdi, R
AF Yang, Ye
   He, Zhimin
   Mao, Ke
   Li, Qi
   Vu Nguyen
   Boehm, Barry
   Valerdi, Ricardo
TI Analyzing and handling local bias for calibrating parametric cost
   estimation models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Parametric model; Effort estimation; Local bias; Weighted sampling;
   Model maintenance; COCOMO II
AB Context: Parametric cost estimation models need to be continuously calibrated and improved to assure more accurate software estimates and reflect changing software development contexts. Local calibration by tuning a subset of model parameters is a frequent practice when software organizations adopt parametric estimation models to increase model usability and accuracy. However, there is a lack of understanding about the cumulative effects of such local calibration practices on the evolution of general parametric models over time.
   Objective: This study aims at quantitatively analyzing and effectively handling local bias associated with historical cross-company data, thus improves the usability of cross-company datasets for calibrating and maintaining parametric estimation models.
   Method: We design and conduct three empirical studies to measure, analyze and address local bias in cross-company dataset, including: (1) defining a method for measuring the local bias associated with individual organization data subset in the overall dataset; (2) analyzing the impacts of local bias on the performance of an estimation model; (3) proposing a weighted sampling approach to handle local bias. The studies are conducted on the latest COCOMO II calibration dataset.
   Results: Our results show that the local bias largely exists in cross company dataset, and the local bias negatively impacts the performance of parametric model. The local bias based weighted sampling technique helps reduce negative impacts of local bias on model performance.
   Conclusion: Local bias in cross-company data does harm model calibration and adds noisy factors to model maintenance. The proposed local bias measure offers a means to quantify degree of local bias associated with a cross-company dataset, and assess its influence on parametric model performance. The local bias based weighted sampling technique can be applied to trade-off and mitigate potential risk of significant local bias, which limits the usability of cross-company data for general parametric model calibration and maintenance. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Yang, Ye; He, Zhimin; Mao, Ke] Chinese Acad Sci, Lab Internet Software Technol, Inst Software, Beijing, Peoples R China.
   [He, Zhimin; Mao, Ke] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Li, Qi; Vu Nguyen; Boehm, Barry] Univ So Calif, Ctr Syst & Software Engn, Los Angeles, CA USA.
   [Valerdi, Ricardo] Univ Arizona, Dept Syst & Ind Engn, Tucson, AZ 85721 USA.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; University
   of Southern California; University of Arizona
RP Yang, Y (corresponding author), Chinese Acad Sci, Lab Internet Software Technol, Inst Software, Beijing, Peoples R China.
EM ye@itechs.iscas.ac.cn
RI yang, yang/HGT-7999-2022; Lang, Ming/HIK-0758-2022; Yang,
   Ye/GZM-4812-2022; Nguyen, Vu/F-9490-2015
OI Nguyen, Vu/0000-0002-0594-4372
FU National Natural Science Foundation of China [60873072, 61073044,
   60903050]; National Science and Technology Major Project; National Basic
   Research Program [2007CB310802]; CAS Innovation Program
FX This work is supported by the National Natural Science Foundation of
   China under Grant Nos. 60873072, 61073044, and 60903050; the National
   Science and Technology Major Project; the National Basic Research
   Program under Grant No. 2007CB310802; CAS Innovation Program. The
   authors would like to thank the anonymous reviewers for their valuable
   feedbacks and suggestions to improve the quality of this paper. The
   authors would also like to thank the helpful discussions and feedback
   from Lang Xie, Tim Menzies and Gregory Gay.
CR [Anonymous], 24 INT FOR COCOMO SY
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P 20 ANN C NEUR INF
   [Anonymous], S HON B BOEHM
   [Anonymous], P 7 INT C PRED MOD S
   [Anonymous], SEER SEM US MAN
   [Anonymous], 19 INT FOR COCOMO SY
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], P INT C PROJ MAN
   [Anonymous], YOUR GUID PRICE S ES
   [Anonymous], IEEE T SOFTWARE ENG
   Boehm BW., 1981, Software Engineering Economics
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   Cuadrado-Gallego JJ, 2007, COMPUT INFORM, V26, P1
   Hastie T., 2003, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Klinkenberg R., 2004, Intelligent Data Analysis, V8, P281
   Leon B, 2008, ADV NEURAL INFORM PR, P161, DOI DOI 10.7751/mitpress/8996.003.0015
   Liu Q, 2005, SOFTWARE QUAL J, V13, P91, DOI 10.1007/s11219-004-5262-y
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2006, IEEE SOFTWARE, V23, P64
   Nguyen V, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P213
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Street WN, 2001, P 7 ACM SIGKDD INT C, P377, DOI DOI 10.1145/502512.502568
   Stutzke R., 2005, Estimating Software-Intensive Systems
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wasserman L, 2003, ALL STAT CONCISE COU
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
NR 34
TC 15
Z9 16
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1496
EP 1511
DI 10.1016/j.infsof.2013.03.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200010
DA 2024-07-18
ER

PT J
AU Jiang, B
   Zhai, K
   Chan, WK
   Tse, TH
   Zhang, ZY
AF Jiang, Bo
   Zhai, Ke
   Chan, W. K.
   Tse, T. H.
   Zhang, Zhenyu
TI On the adoption of MC/DC and control-flow adequacy for a tight
   integration of program testing and statistical fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Testing-debugging integration; Test case prioritization; Fault
   localization; Adequacy criterion; MC/DC
ID TEST-CASE PRIORITIZATION; FAMILY; WELL
AB Context: Testing and debugging consume a significant portion of software development effort. Both processes are usually conducted independently despite their close relationship with each other. Test adequacy is vital for developers to assure that sufficient testing effort has been made, while finding all the faults in a program as soon as possible is equally important. A tight integration between testing and debugging activities is essential.
   Objective: The paper aims at finding whether three factors, namely, the adequacy criterion to gauge a test suite, the size of a prioritized test suite, and the percentage of such a test suite used in fault localization, have significant impacts on integrating test case prioritization techniques with statistical fault localization techniques.
   Method: We conduct a controlled experiment to investigate the effectiveness of applying adequate test suites to locate faults in a benchmark suite of seven Siemens programs and four real-life UNIX utility programs using three adequacy criteria, 16 test case prioritization techniques, and four statistical fault localization techniques. We measure the proportion of code needed to be examined in order to locate a fault as the effectiveness of statistical fault localization techniques. We also investigate the integration of test case prioritization and statistical fault localization with postmortem analysis.
   Result: The main result shows that on average, it is more effective for a statistical fault localization technique to utilize the execution results of a MC/DC-adequate test suite than those of a branch-adequate test suite, and is in turn more effective to utilize the execution results of a branch-adequate test suite than those of a statement-adequate test suite. On the other hand, we find that none of the fault localization techniques studied can be sufficiently effective in suggesting fault-relevant statements that can fit easily into one debug window of a typical IDE.
   Conclusion: We find that the adequacy criterion and the percentage of a prioritized test suite utilized are major factors affecting the effectiveness of statistical fault localization techniques. In our experiment, the adoption of a stronger adequacy criterion can lead to more effective integration of testing and debugging. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Jiang, Bo] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
   [Zhai, Ke; Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
   [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Zhang, Zhenyu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
C3 Beihang University; University of Hong Kong; City University of Hong
   Kong; Chinese Academy of Sciences; Institute of Software, CAS
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Hong Kong, Hong Kong, Peoples R China.
EM jiangbo@buaa.edu.cn; kzhai@cs.hku.hk; wkchan@cityu.edu.hk;
   thtse@cs.hku.hk; zhangzy@ios.ac.cn
RI Tse, T.H./C-6590-2008; Chan, Wah Kheong/AGA-6636-2022; zhang,
   zhenyu/HOA-8440-2023
OI Tse, T.H./0000-0002-0460-8377; Chan, Wah Kheong/0000-0002-9105-5837;
   Chan, Wing Kwong/0000-0001-7726-6235
FU General Research Fund of the Research Grants Council of Hong Kong
   [111410, 717811]; Strategic Research Grant of City University of Hong
   Kong [7002673]; National Natural Science Foundation of China [61003027,
   61202077]; Fundamental Research Fund for Central Universities
   [YWF-12-LXGY-008]
FX This research is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (Project Nos. 111410 and 717811), a
   Strategic Research Grant of City University of Hong Kong (Project No.
   7002673), grants of the National Natural Science Foundation of China
   (Project Nos. 61003027 and 61202077), and the Fundamental Research Fund
   for Central Universities (Project No. YWF-12-LXGY-008). Part of this
   research was conducted when Tse was a visiting distinguished scholar at
   the State Key Laboratory of Computer Science, Institute of Software,
   Chinese Academy of Sciences, Beijing, China.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], EC IMP IN INFR SOFTW
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], 2008, ISSTA
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bo Jiang, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P21, DOI 10.1109/QSIC.2011.37
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P377, DOI 10.1109/QSIC.2010.64
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dupuy A., 2000, 19 DASC 19 DIG AV SY, V1, p1B6/1, DOI [10.1109/DASC.2000.886883, DOI 10.1109/DASC.2000.886883]
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Leon D, 2005, PROC INT CONF SOFTW, P412
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
NR 32
TC 15
Z9 17
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 897
EP 917
DI 10.1016/j.infsof.2012.10.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000008
DA 2024-07-18
ER

PT J
AU Petrenko, M
   Rajlich, V
AF Petrenko, Maksym
   Rajlich, Vaclav
TI Concept location using program dependencies and information retrieval
   (DepIR)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE IR; Dependency search; Concept location
ID SOURCE CODE
AB Context: The functionality of a software system is most often expressed in terms of concepts from its problem or solution domains. The process of finding where these concepts are implemented in the source code is known as concept location and it is a prerequisite of software change.
   Objective: We investigate a static approach to concept location named DepIR that combines program dependency search (DepS) with information retrieval-based search (IR). In this approach, programmers explore the static program dependencies of the source code components retrieved by the IR search engine.
   Method: The paper presents an empirical study that compares DepIR with its constituent techniques. The evaluation is based on an empirical method of reenactment that emulates the steps of concept location for 50 past changes mined from software repositories of five software systems. Results: The results of the study indicate that DepIR significantly outperforms both DepS and IR.
   Conclusion: DepIR allows developers to perform concept location efficiently. It allows finding concepts even with queries that do not rank the relevant software components highly. Since formulating a good query is not always easy, this tolerance of lower-quality queries significantly broadens the usability of DepIR compared to the traditional IR. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Petrenko, Maksym] Univ Maryland, Earth Syst Sci Interdisciplinary Ctr, College Pk, MD 20742 USA.
   [Rajlich, Vaclav] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
C3 University System of Maryland; University of Maryland College Park;
   Wayne State University
RP Petrenko, M (corresponding author), Univ Maryland, Earth Syst Sci Interdisciplinary Ctr, College Pk, MD 20742 USA.
EM maksym@umd.edu; rajlich@wayne.edu
RI Petrenko, Maksym/I-2841-2014
FU National Science Foundation (NSF) [CCF-0820133]
FX We would like to thank Andrian Marcus and Denys Poshyvanyk for their
   extensive input on IR techniques and help with the early versions of
   this paper. This work was partially supported by the Grant CCF-0820133
   from the National Science Foundation (NSF). Any opinions, findings,
   conclusions, or recommendations expressed in this material are those of
   the authors and do not necessarily reflect the views of the NSF.
CR AHO AV, 1980, FORMAL LANGUAGE THEO, P325
   Al-Ekram R, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195, DOI 10.1109/CSMR.2004.1281420
   [Anonymous], J SOFTWARE MAINTENAN
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Biggerstaff T.J., 1994, PROC 15 IEEEACM INT, P482
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Gold NE, 2005, SOFTWARE PRACT EXPER, V35, P977, DOI 10.1002/spe.664
   Gold N, 2006, PROC IEEE INT CONF S, P310
   Hassan AE, 2006, EMPIR SOFTW ENG, V11, P335, DOI 10.1007/s10664-006-9006-4
   Hayashi S., 2010, P 26 IEEE INT C SOFT, P1
   Hayashi S, 2010, ASIA PAC SOFWR ENG, P385, DOI 10.1109/APSEC.2010.51
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Hill E., 2011, 3 INT WORKSH SEARCH
   Jensen C., 2006, SERIES SOFTWARE ENG, V18, P1
   Khun T., 2007, ECLIPSE CORNER ARTIC
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marchionini G., 1997, Information seeking in electronic environments
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   MCKEITHEN KB, 1981, COGNITIVE PSYCHOL, V13, P307, DOI 10.1016/0010-0285(81)90012-8
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Perkins D., 1986, EMPIRICAL STUDIES PR, P213
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Petrenko M, 2008, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2008.14
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2006.32
   Rajlich V., 2011, Software Engineering: The Current Practice
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Rajlich V, 2009, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2009.5090022
   Ratanotayanon S., 2010, ASE, P341
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Shao P., 2009, ANN SE REG C
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Sillito J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P23, DOI 10.1109/ISESE.2005.1541811
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Wilde N., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P200, DOI 10.1109/ICSM.1992.242542
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 45
TC 12
Z9 16
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 651
EP 659
DI 10.1016/j.infsof.2012.09.013
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 111NE
UT WOS:000316527200001
DA 2024-07-18
ER

PT J
AU Buchmann, T
   Dotor, A
   Westfechtel, B
AF Buchmann, Thomas
   Dotor, Alexander
   Westfechtel, Bernhard
TI MOD2-SCM: A model-driven product line for software configuration
   management systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven software engineering; Software product line engineering;
   Software configuration management; Feature models; Executable models;
   Model transformation; Code generation
AB Context: Software Configuration Management (SCM) is the discipline of controlling the evolution of large and complex software systems. Over the years many different SCM systems sharing similar concepts have been implemented from scratch. Since these concepts usually are hard-wired into the respective program code, reuse is hardly possible.
   Objective: Our objective is to create a model-driven product line for SCM systems. By explicitly describing the different concepts using models, reuse can be performed on the modeling level. Since models are executable, the need for manual programming is eliminated. Furthermore, by providing a library of loosely coupled modules, we intend to support flexible composition of SCM systems.
   Method: We developed a method and a tool set for model-driven software product line engineering which we applied to the SCM domain. For domain analysis, we applied the FORM method, resulting in a layered feature model for SCM systems. Furthermore, we developed an executable object-oriented domain model which was annotated with features from the feature model. A specific SCM system is configured by selecting features from the feature model and elements of the domain model realizing these features.
   Results: Due to the orthogonality of both feature model and domain model, a very large number of SCM systems may be configured. We tested our approach by creating instances of the product line which mimic wide-spread systems such as CVS, GIT, Mercurial, and Subversion.
   Conclusion: The experiences gained from this project demonstrate the feasibility of our approach to model-driven software product line engineering. Furthermore, our work advances the state of the art in the domain of SCM systems since it support the modular composition of SCM systems at the model rather than the code level. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Buchmann, Thomas; Dotor, Alexander; Westfechtel, Bernhard] Univ Bayreuth, Lehrstuhl Angew Informat 1, D-95440 Bayreuth, Germany.
C3 University of Bayreuth
RP Buchmann, T (corresponding author), Univ Bayreuth, Lehrstuhl Angew Informat 1, Univ Str 30, D-95440 Bayreuth, Germany.
EM thomas.buchmann@uni-bayreuth.de; alexander.dotor@uni-bayreuth.de;
   bernhard.westfechtel@uni-bayreuth.de
OI Buchmann, Thomas/0000-0002-5675-6339
CR Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Asklund U, 1999, LECT NOTES COMPUT SC, V1675, P100
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BERLINER B, 1990, CVS 2 PARALLELIZING
   Beuche D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P358, DOI 10.1109/SPLC.2008.53
   Bontemps Yves., 2004, Proceedings SPLC 2004 Workshop on Software Variability Management for Product Derivation - Towards Tool Support, P48
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Buchmann T., SOFTWARE SYSTE UNPUB
   Buchmann T., 2009, P 7 INT FUJ DAYS EIN, P20
   Buchmann T., MODEL DRIVEN SOFTWAR
   Buchmann T., 2010, LNI, P339
   Buchmann T, 2009, P 7 INT FUJ DAYS EIN, P59
   Buchmann T., 2010, THESIS U BAYREUTH BA
   Buchmann T., 2009, MDPLE 09, P9
   Buchmann T., LECT NOTES COMPUTER, V7233
   Chacon S., 2009, PROGIT
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   Dotor A., 2011, THESIS U BAYREUTH BA
   Ehrlich D., 2006, VERSION CONTROL CONF
   Estublier J., 1994, CONFIGURATION MANAGE, P99
   Fish S., 2009, BETTER SCM INITIATIV
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Heidenreich F., 2007, P 2 WORKSH ASP OR PR, P38
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kovae J., 2005, THESIS TU KAISERSLAU
   Kovse Jernej., 2005, Model-Driven Development of Versioning Systems: An Evaluation of Different Approaches
   Krueger CW, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P353, DOI 10.1109/SPLC.2008.33
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Sullivan Bryan., 2009, Mercurial: The Definitive Guide
   Object Management Group (OMG), 2010, OMG UN MOD LANG OMG
   OMG, 2010, ACT LANG FDN UML ALF
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rochkind M. J., 1975, T SOFTWARE ENG, V1, P364
   Schneider C., 2007, THESIS U KASSEL KASS
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   van der Lingen R, 2004, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2004.1317479
   van der Lingen R, 2003, LECT NOTES COMPUT SC, V2649, P177
   Vogel O., 2009, SOFTWARE ARCHITEKTUR
   Volter Markus., 2006, Model-Driven Software Development: Technology, Engineering, Management
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
   Westfechtel B., 2003, LECT NOTES COMPUTER, V2649
   White BA, 2003, OBJECT TECHNOLOGY SE
   Whitehead J.E., 2003, LECT NOTES COMPUTER, P70
   Whitehead J.E., 2004, AUTOMATIC GENERATION
   Whitehead J.E., 2002, P 13 ACM C HYP HYP H, P182
   ZELLER A, 1997, ACM T SOFTW ENG METH, V6, P397
   Zfindorf A., 1999, TRRI99211 U PAD
   Zundorf Albert., 2001, Rigorous Object Oriented Software Development
NR 57
TC 11
Z9 13
U1 1
U2 20
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 630
EP 650
DI 10.1016/j.infsof.2012.07.010
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200010
DA 2024-07-18
ER

PT J
AU Hutchesson, S
   McDermid, J
AF Hutchesson, Stuart
   McDermid, John
TI Trusted Product Lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Product Lines; High-integrity software; DO-178B/ED-12B; SPARK;
   Model transformation; GSN
AB Context: The paper addresses the use of a Software Product Line approach in the context of developing software for a high-integrity, regulated domain such as civil aerospace. The success of a Software Product Line approach must be judged on whether useful products can be developed more effectively (lower cost, reduced schedule) than with traditional single-system approaches. When developing products for regulated domains, the usefulness of the product is critically dependent on the ability of the development process to provide approval evidence for scrutiny by the regulating authority.
   Objective: The objective of the work described is to propose a framework for arguing that a product instantiated using a Software Product Line approach can be approved and used within a regulated domain, such that the development cost of that product would be less than if it had been developed in isolation.
   Method: The paper identifies and surveys the issues relating the adoption of Software Product Lines as currently understood (including related technologies such as feature modelling, component-based development and model transformation) when applied to high-integrity software development. We develop an argument framework using Goal Structuring Notation to structure the claims made and the evidence required to support the approval of an instantiated product in such domains. Any unsubstantiated claims or missing/sub-standard evidence is identified, and we propose potential approaches or pose research questions to help address this.
   Results: The paper provides an argument framework supporting the use of a Software Product Line approach within a high-integrity regulated domain. It shows how lifecycle evidence can be collected, managed and used to credibly support a regulatory approval process, and provides a detailed example showing how claims regarding model transformation may be supported. Any attempt to use a Software Product Line approach in a regulated domain will need to provide evidence to support their approach in accordance with the argument outlined in the paper.
   Conclusion: Product Line practices may complicate the generation of convincing evidence for approval of instantiated products, but it is possible to define a credible Trusted Product Line approach. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Hutchesson, Stuart] Aero Engine Controls, Derby DE24 8BJ, England.
   [Hutchesson, Stuart; McDermid, John] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK
RP Hutchesson, S (corresponding author), Aero Engine Controls, POB 31, Derby DE24 8BJ, England.
EM stuarth@cs.york.ac.uk
OI McDermid, John Alexander/0000-0003-4745-4272
CR Amey P, 2004, LECT NOTES COMPUT SC, V3063, P225
   Amey Peter, 2002, CROSSTALK J DEFENSE, V2, P24
   [Anonymous], 1992, DO178BED12B EUROCAE
   [Anonymous], 2004, 3 SOFTW PROD LIN C S
   [Anonymous], P DSN 2004 WORKSH AS
   [Anonymous], CMUSEI2001TR022
   [Anonymous], 2004, AC20 148 RES SOFTW C
   [Anonymous], SPARK 95 SPADE ADA 9
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Clements P., 2002, SOFTWARE PRODUCT FAM, P102
   Croxford M., 1996, Ada in Europe. Second International Eurospace - Ada Europe Symposium. Proceedings, P344, DOI 10.1007/BFb0015506
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Habli I, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLINE.2007.37
   Hutchesson S., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P55, DOI 10.1109/SPLC.2011.32
   HUTCHESSON S, 2006, SPARK US GROUP 2006
   Hutchesson S, 2010, LECT NOTES COMPUT SC, V6351, P389, DOI 10.1007/978-3-642-15651-9_29
   Kang Kyo C, 1990, Technical Report
   Krueger C.W, 2007, COMP 22 ACM SIGPLAN
   Leveson N. G., 2004, Software Engineering Notes, V29, P171, DOI 10.1145/1041685.1029897
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Voelter M., 2009, 13 INT SOFTW PROD LI
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
NR 26
TC 5
Z9 6
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 525
EP 540
DI 10.1016/j.infsof.2012.06.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200004
DA 2024-07-18
ER

PT J
AU Marsan, J
   Paré, G
   Wybo, MD
AF Marsan, Josianne
   Pare, Guy
   Wybo, Michael D.
TI Has open source software been institutionalized in organizations or not?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source software; Diffusion; Organizing vision; Institutionalization
ID INFORMATION-TECHNOLOGY; SYSTEMS; TRANSFORMATION; INNOVATIONS; DIFFUSION;
   DYNAMICS; FIELDS
AB Context: Almost a decade ago, researchers in information systems and analysts of the information technology (IT) industry were predicting a bright future for open source software (OSS). Recent examples appear to lend support to this, but there exist many detractors of OSS and resistance to the transformation it creates. Thus, it is relevant to take a closer look at the institutionalization of OSS.
   Objective: This paper evaluates the extent of OSS institutionalization in organizations. A practice or innovation is said to be institutionalized when it is taken-for-granted and its use becomes the norm.
   Method: Drawing on institutional theory, the underlying concept of organizing vision and the rhetorical theory of diffusion of innovations, we analyze OSS institutionalization through the observation of the evolution of the public discourse about OSS and, simultaneously, the observation of the rate of adoption or diffusion of OSS in organizations.
   Results: OSS has become institutionalized for many back-end applications and is gradually becoming institutionalized for some front-end applications, mainly in small and medium enterprises but also in organizations in the financial, publishing, education, government and public sectors. Using the rhetorical theory of diffusion of innovations in tandem with the concept of organizing vision, we provide a deep understanding of the institutionalization of OSS by showing that it has not only diffused among organizations, but is also taken-for-granted in thought and social action. The positive tone and prominence of the public discourse on OSS have an important role to play in its institutionalization.
   Conclusion: The institutionalization of OSS in organizations cannot be underestimated by IT and business executives as well as key players in the IT industry. Future research efforts should be pursued and directed toward the institutionalization of particular OSS applications in a variety of industries and geographic regions. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Marsan, Josianne] Univ Laval, Fac Business Adm, Dept Management Informat Syst, Quebec City, PQ G1V 0A6, Canada.
   [Pare, Guy; Wybo, Michael D.] HEC Montreal, Dept Informat Technol, Montreal, PQ H3T 2A7, Canada.
C3 Laval University; Universite de Montreal; HEC Montreal
RP Marsan, J (corresponding author), Univ Laval, Fac Business Adm, Dept Management Informat Syst, 2325 Rue Terrasse, Quebec City, PQ G1V 0A6, Canada.
EM josianne.marsan@sio.ulaval.ca; guy.pare@hec.ca; michael.wybo@hec.ca
RI Marsan, Josianne/ABE-7411-2020
OI Marsan, Josianne/0000-0002-3991-0269
FU Quebec Funds for Research on Society and Culture
FX This research was funded by Quebec Funds for Research on Society and
   Culture. The funding source had no involvement in the study design, in
   the data collection, analysis and interpretation, in the writing of the
   report, or in the decision to submit the paper for publication.
CR Adhikari R., 2011, ECT NEWS NETWORK
   Aksulu A, 2010, J ASSOC INF SYST, V11, P576
   [Anonymous], 2003, Diffusion of Innovations
   [Anonymous], 2001, Cinema Journal
   [Anonymous], INFORMATIONWEEK
   [Anonymous], INFORM ORG
   Bitterer A., 2009, OPEN SOURCE BUSINESS, P1
   Boudreau MC, 2008, J DATABASE MANAGE, V19, pI
   Bradner S., 2004, NETWORK WORLD, V21, P32
   Chakraborti D., 2009, HYPE CYCLE ICT INDIA, P1
   Clausen C., 2009, PROS CONS ALL WINDOW, P1
   Crowston K, 2010, J ASSOC INF SYST, V11, pI
   Currie W., 2004, INFORM ORGAN-UK, V14, P237, DOI DOI 10.1016/J.INFOANDORG.2004.07.001
   DeLuca D, 2008, J ASSOC INF SYST, V9, P48
   DIMAGGIO PJ, 1983, AM SOCIOL REV, V48, P147, DOI 10.2307/2095101
   Driver M., 2009, ROUNDUP OPEN SOURCE, P1
   Driver M., 2011, CIOS PERSPECTIVE OPE, P1
   Driver M., 2007, KEY ISSUES OPEN SOUR, P1
   Driver M., 2009, OPEN SOURCE VENDOR S, P1
   Driver M., 2009, CRITERIA EVALUATION, P1
   Driver M., 2009, PHP PRESENT FUTURE, P1
   Feinberg D., 2009, OPEN SOURCE DBMS 200, P1
   Feller J., 2002, Understanding Open Source Software development
   Firth D.R., 2006, Journal of information technology theory and application, V8, P21
   FIRTH DR, 2001, AM C INF SYST BOST M, P834
   Fitzgerald B, 2001, INFORM SYST J, V11, P273
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fontana R.E., 2010, COMPUTER INTERNET LA, V27, P1
   Gassman B., 2009, PREDICTS 2010 BUSINE, P1
   Gilmer B., 2002, BROADCAST ENG, V44, P34
   Green SE, 2004, ACAD MANAGE REV, V29, P653, DOI 10.2307/20159076
   Greenwood R, 2002, ACAD MANAGE J, V45, P58, DOI 10.5465/3069285
   Gwebu KL, 2010, J SYST SOFTWARE, V83, P2287, DOI 10.1016/j.jss.2010.07.011
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   HAYES F, 2002, COMPUTERWORLD   0610, V36, P62
   Hedgebeth Darius, 2007, VINE, V37, P284, DOI 10.1108/03055720710825618
   Igou B., 2009, QUANTIFYING BENEFITS, P1
   Iivari N, 2010, INFORM ORGAN-UK, V20, P111, DOI 10.1016/j.infoandorg.2010.03.002
   Jin LG, 2007, INF RESOUR MANAG J, V20, P68, DOI 10.4018/irmj.2007010105
   Kaganer E, 2010, J ASSOC INF SYST, V11, P1
   Knipp E., 2009, TOP 5 WAYS WEB AD MA, P1
   Lai E., 2007, COMPUTERWORLD, V41, P18
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrence TB, 2001, ACAD MANAGE REV, V26, P624, DOI 10.2307/3560245
   Lerner J., 2010, The comingled code: open source and economic development
   Lowendahl J.-M., 2009, GARTNER HIGHER ED E, P1
   Mears J., 2005, Network World, V22, P9
   Mignerat M, 2009, J INF TECHNOL-UK, V24, P369, DOI 10.1057/jit.2009.13
   Mohamed A., 2008, COMPUTER WEEKLY  APR, V1, P18
   Montalbano E., 2008, COMPUTERWORLD, V42, P10
   Mullins R., 2011, NETWORK COMPUTI 0519
   Munoz-Cornejo G, 2008, INT J HEALTHC INF SY, V3, P16, DOI 10.4018/jhisi.2008070102
   Natis Y.V., 2009, PREDICTS 2010 APPL P, P1
   Natis Y.V., 2010, PREDICTS 2011 OPEN S, P1
   Natis Y.V., 2008, STATE OPEN SOURCE 20, P1
   Natis Y.V., 2009, MAGIC QUADRANT ENTER, P1
   Noyes K., 2010, GET SUPPORT OPEN SOU
   Pezzini M., 2009, TRENDS PLATFORM MIDD, P1
   Prentice B., 2009, COMMUNITY MANAGER NE, P1
   Ramiller NC, 2003, J MANAGE INFORM SYST, V20, P13
   Ramiller NeilC., 2001, Information Organization, V11, P129
   Sallam R.L., 2009, CRITICAL CAPABILITIE, P1
   Schutz A., 1967, COLLECT PAPERS
   Scott W.R., 1995, I ORG, V2
   Shegda K.M., 2009, ALFRESCO LEADS CHARG, P1
   Stallman R., 2010, Free software, free society: Selected essays of Richard Stallman
   Swanson EB, 2010, J STRATEGIC INF SYST, V19, P17, DOI 10.1016/j.jsis.2009.12.001
   Swanson EB, 2004, MIS QUART, V28, P553
   Swanson EB, 1997, ORGAN SCI, V8, P458, DOI 10.1287/orsc.8.5.458
   Thoo E., 2009, PREDICTS 2010 DATA M, P1
   Tolbert P.S., 1996, A handbook of organizational studies, DOI [DOI 10.4135/9781446218556.N6, 10.4135/9781446218556.n6]
   WANG P, 2008, INFORM TECHNOLOGY PE, V21, P323, DOI DOI 10.1108/09593840810919662
   Wang P., 2001, International Conference in Information Systems, P411
   Wang P., 2005, FASHION INFORM TECHN
   Wang P, 2009, MIS QUART, V33, P709
   Wang P, 2009, J ASSOC INF SYST, V10, P1
   WEICK KE, 1993, ADMIN SCI QUART, V38, P628, DOI 10.2307/2393339
   Weiss G.J., 2009, RED HAT VS ORACLE LI, P1
   Wurster L.F., 2009, REPORT HIGHLIGHT DAT, P1
   Zaffar MA, 2011, DECIS SUPPORT SYST, V51, P597, DOI 10.1016/j.dss.2010.11.034
   Zucker LynneG., 1987, ANNU REV SOCIOL, V13, P443
NR 81
TC 9
Z9 12
U1 0
U2 34
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1308
EP 1316
DI 10.1016/j.infsof.2012.07.001
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200002
DA 2024-07-18
ER

PT J
AU Christopoulou, A
   Giakoumakis, EA
   Zafeiris, VE
   Soukara, V
AF Christopoulou, Aikaterini
   Giakoumakis, E. A.
   Zafeiris, Vassilis E.
   Soukara, Vasiliki
TI Automated refactoring to the Strategy design pattern
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Design patterns; Strategy pattern; Polymorphism; Total
   replacement of conditional logic
ID IDENTIFICATION; OPPORTUNITIES
AB Context: The automated identification of code fragments characterized by common design flaws (or "code smells") that can be handled through refactoring, fosters refactoring activities, especially in large code bases where multiple developers are engaged without a detailed view on the whole system. Automated refactoring to design patterns enables significant contributions to design quality even from developers with little experience on the use of the required patterns.
   Objective: This work targets the automated identification of refactoring opportunities to the Strategy design pattern and the elimination through polymorphism of respective "code smells" that are related to extensive use of complex conditional statements.
   Method: An algorithm is introduced for the automated identification of refactoring opportunities to the Strategy design pattern. Suggested refactorings comprise conditional statements that are characterized by analogies to the Strategy design pattern, in terms of the purpose and selection mode of strategies. Moreover, this work specifies the procedure for refactoring to Strategy the identified conditional statements. For special cases of these statements, a technique is proposed for total replacement of conditional logic with method calls of appropriate concrete Strategy instances. The identification algorithm and the refactoring procedure are implemented and integrated in the JDeodorant Eclipse plug-in. The method is evaluated on a set of Java projects, in terms of quality of the suggested refactorings and run-time efficiency. The relevance of the identified refactoring opportunities is verified by expert software engineers.
   Results: The identification algorithm recalled, from the projects used during evaluation, many of the refactoring candidates that were identified by the expert software engineers. Its execution time on projects of varying size confirmed the run-time efficiency of this method.
   Conclusion: The proposed method for automated refactoring to Strategy contributes to simplification of conditional statements. Moreover, it enhances system extensibility through the Strategy design pattern. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Christopoulou, Aikaterini; Giakoumakis, E. A.; Zafeiris, Vassilis E.] Athens Univ Econ & Business, Dept Informat, Athens 10434, Greece.
   [Soukara, Vasiliki] Informat Soc SA, Ymittos 17237, Greece.
C3 Athens University of Economics & Business
RP Giakoumakis, EA (corresponding author), Athens Univ Econ & Business, Dept Informat, 76 Patiss Str, Athens 10434, Greece.
EM katerinaxristopoulou@yahoo.gr; mgia@aueb.gr; bzafiris@aueb.gr;
   vsoukara@ktpae.gr
RI Giakoumakis, Emmanouil/AAJ-2690-2021; Zafeiris, Vassilis/JFS-1742-2023
OI Zafeiris, Vassilis/0000-0003-0751-4509; Giakoumakis,
   Emmanouil/0000-0002-0586-8592
CR Apache Software Foundation, 2012, NUTCH WEB SEARCH SOF
   Apache Software Foundation, 2012, ANT TOOL SOFTW BUILD
   Chatzigeorgiou A., 2011, JDEODORANT ECLIPSE P
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   Demeyer S., 2008, SOFTWARE EVOLUTION, P91
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Freeman E., 2004, Head First Design Patterns: A Brain-Friendly Guide
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Horstmann C.S., 2012, VIOLET OPEN SOURCE U
   IceHockeyManager, 2012, ICE HOCKEY MANAGER G
   Jean S.-U., 2002, P 9 AS PAC SOFTW ENG, P337
   Jebelean C., 2010, P 2010 IEEE INT C AU, P1
   Juillerat N., 7 IEEE INT WORK C SO, P81
   Juillerat N., 2009, THESIS U FRIBOURG SW
   Kerievsky J., 2004, REFACTORING PATTERNS
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   ROOTS research group, 2011, JTRANSFORMER QUER TR
   Shore J., 2007, ART AGILE DEV
   Stavrakas Y, 2004, INFORM SYST, V29, P461, DOI 10.1016/j.is.2003.10.005
   Telecom Italia Lab, 2012, JADE JAV AG DEVELOPM
   Tokuda L., INT S APPL CORP COMP
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Vassis D.E., 2012, IEEE 802 11 WLAN SIM
   Zafeiris V., P HELL DAT MAN S HDM
   Zafeiris VE, 2011, COMPUT NETW, V55, P1114, DOI 10.1016/j.comnet.2010.11.003
NR 28
TC 23
Z9 26
U1 0
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1202
EP 1214
DI 10.1016/j.infsof.2012.05.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500004
DA 2024-07-18
ER

PT J
AU Wedyan, F
   Ghosh, S
AF Wedyan, Fadi
   Ghosh, Sudipto
TI On generating mutants for AspectJ programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE AspectJ; Aspect-oriented programming; Mutation testing; Fault models;
   Test generation; High order mutation
ID MUTATION ANALYSIS; TOOL
AB Context: Mutation analysis has been widely used in research studies to evaluate the effectiveness of test suites and testing techniques. Faulty versions (i.e., mutants) of a program are generated such that each mutant contains one seeded fault. The mutation score provides a measure of effectiveness.
   Objective: We study three problems with the use of mutation analysis for testing AspectJ programs:
   The manual identification and removal of equivalent mutants is difficult and time consuming. We calculate the percentage of equivalent mutants generated for benchmark AspectJ programs using available mutation tools.
   The generated mutants need to cover the various fault types described in the literature on fault models for AspectJ programs. We measure the distribution of the mutants generated using available mutation tools with respect to the AspectJ fault types.
   We measure the difficulty of killing the generated mutants.
   We propose the use of simple analysis of the subject programs to prevent the generation of some equivalent mutants.
   Method: We revised existing AspectJ fault models and presented a fault model that removes the problems in existing fault models, such as overlapping between fault types and missing fault types. We also defined three new fault types that occur due to incorrect data-flow interactions occurring in AspectJ programs. We used three mutation tools: AjMutator, Proteum/AJ, and MuJava on three AspectJ programs. To measure the difficulty of killing the mutants created using a mutation operator, we compared the average number of the mutants killed by 10 test suites that satisfy block coverage criterion.
   Results: A high percentage of the mutants are equivalent. The mutation tools do not cover all the fault types. Only 4 out of 27 operators generated mutants that were easy to kill.
   Conclusions: Our analysis approach removed about 80% of the equivalent mutants. Higher order mutation is needed to cover all the fault types. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Ghosh, Sudipto] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Wedyan, Fadi] Hashemite Univ, Dept Software Engn, Zarka, Jordan.
C3 Colorado State University; Hashemite University
RP Ghosh, S (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM ghosh@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020; Wedyan, Fadi/C-9053-2017
OI Wedyan, Fadi/0000-0003-4464-8688
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   ALEXANDER R, 2004, CS4105 COL STAT U DE
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Bækken JS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P169
   Baldwin D, 1979, 276 YAL U
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Ceccato M., 2005, WTAOP
   Dahm M., 2006, BCEL BYTE CODE ENG L
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   FENTON N, 1999, SOFTWARE METRICS RIG
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Ferrari Fabiano Cutigi., 2010, Proceedings of the 5th Workshop on Automation of Software Test, AST '10, P51
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Kerlinger F.N., 1986, FDN BEHAV RES, V3rd
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Massachusetts Institute of Technology, 2010, RAND 1 2 RAND UN TES
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   The AspectJ Team, 2008, ASPECTJ COMP 1 5 4
   van Deursen A., 2005, SENR0507 DELFT U TEC
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   Wedyan F., 2010, HASE 10
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Xu DX, 2009, INT J SOFTW ENG KNOW, V19, P599, DOI 10.1142/S0218194009004313
   Zhang S, 2007, P INT COMP SOFTW APP, P431
NR 37
TC 13
Z9 13
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 900
EP 914
DI 10.1016/j.infsof.2011.12.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963DB
UT WOS:000305599200008
DA 2024-07-18
ER

PT J
AU Elahi, G
   Yu, E
AF Elahi, Golnaz
   Yu, Eric
TI Comparing alternatives for analyzing requirements trade-offs - In the
   absence of numerical data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-criteria decision analysis; Requirements trade-offs; Qualitative
   and quantitative data; Alternative solutions
AB Context: Choosing a design solution most often involves dealing with trade-offs and conflicts among requirements and design objectives. Making such trade-offs during early stages of requirements and design is challenging because costs and benefits of alternatives are often hard to quantify.
   Objective: The objective of this work is to develop a decision analysis method that assists in making trade-offs in the absence of quantitative data.
   Method: In this method, stakeholders qualitatively compare consequences of alternatives on decision criteria. We propose an algorithm that generates all possible consequences of alternatives on requirements. according to the rough qualitative comparisons that stakeholders made. The possible consequences generated by the algorithm are then analyzed by the Even Swaps Multi-Criteria Decision Analysis method to determine the best solution. The Even Swaps method is a technique developed in management science to assist in multi-criteria decision making when explicit value trade-offs are not available.
   Results and conclusions: Our algorithm teases out the need to accurately measure or estimate costs and benefits of alternative design solutions. The algorithm automates the Even Swap process, and reuses stakeholders' value trade-offs throughout the Even Swaps process. We applied the prototype tool in several case studies to evaluate the utility of the method. The results of case studies provide evidence that our decision aid method selects the optimum solution correctly compared to results of other similar quantitative methods, while our method does not rely on detailed numerical assessment of alternatives and importance weights of criteria. (C) 2012 Published by Elsevier B.V.
C1 [Elahi, Golnaz] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 1A4, Canada.
   [Yu, Eric] Univ Toronto, Fac Informat, Toronto, ON M5S 3G6, Canada.
C3 University of Toronto; University of Toronto
RP Elahi, G (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON M5S 1A4, Canada.
EM gelahi@cs.toronto.edu; eric.yu@utoronto.ca
CR Alexander I, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P61, DOI 10.1109/ICRE.2002.1048506
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2001, Multiple criteria decision analysis
   [Anonymous], 2011, DEC AN TOOL DEM REL
   Asnar Yudistira., 2006, MODELLING RISK IDENT, P55
   Bana E Costa CA, 2005, INT SER OPER RES MAN, V78, P409, DOI 10.1007/0-387-23081-5_10
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Elahi G., 2011, P COMPSAC 1 IN PRESS
   Elahi G., 2011, P CAISE FOR CEUR WOR
   Elahi Golnaz., 2011, P 2011 ACM S APPL CO, P651
   Feather M.S., IEEE SOFTW, V25, P49
   Figueira J, 2005, INT SER OPER RES MAN, V78, P133, DOI 10.1007/0-387-23081-5_4
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Giorgini P., 2003, SELMAS 03
   Hammond JohnS., 2002, SMART CHOICES PRACTI
   Horkoff J., 2009, CAISE FORUM
   Houmb SH, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P190
   In HP, 2002, P INT COMP SOFTW APP, P887, DOI 10.1109/CMPSAC.2002.1045118
   Kaiya H., 2002, Requirements Engineering 2002 Proceedings IEEE Joint International Conference on, P13, DOI DOI 10.1109/ICRE.2002.1048501
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3281, P161
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Wenting,, 2009, LECT NOTES COMPUT SC, V5565, P216
   Microsoft Corporation, 2006, MICR SOL SEC COMPL M
   Mustajoki J, 2007, DECIS SUPPORT SYST, V44, P313, DOI 10.1016/j.dss.2007.04.004
   Mustajoki Jyri., 2005, DECIS ANAL, V2, P110, DOI DOI 10.1287/DECA.1050.0043
   Noppen Joost., 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Roozenburg N.F. M., 1995, PRODUCT DESIGN FUNDA
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   Saaty TL, 2005, INT SER OPER RES MAN, V78, P345, DOI 10.1007/0-387-23081-5_9
   Schneier B, 2007, COMMUN ACM, V50, P128, DOI 10.1145/1230819.1241693
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   von Winterfeldt D., 1986, Decision analysis and behavioral research
   Xie Haihua., 2009, SAC 09, P347
   Yen J, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P87, DOI 10.1109/ISRE.1997.566845
   Yu E., 1995, MODELING STRATEGIC R
NR 39
TC 13
Z9 17
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 517
EP 530
DI 10.1016/j.infsof.2011.10.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100001
DA 2024-07-18
ER

PT J
AU Mesquida, AL
   Mas, A
   Amengual, E
   Calvo-Manzano, JA
AF Lluis Mesquida, Antoni
   Mas, Antonia
   Amengual, Esperanca
   Calvo-Manzano, Jose A.
TI IT Service Management Process Improvement based on ISO/IEC 15504: A
   systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software Process Improvement (SPI); ISO/IEC 15504 (SPICE); IT Service
   Management (ITSM); Systematic review
AB Context: In recent years, many software companies have considered Software Process Improvement (SPI) as essential for successful software development. These companies have also shown special interest in IT Service Management (ITSM). SPI standards have evolved to incorporate ITSM best practices.
   Objective: This paper presents a systematic literature review of ITSM Process Improvement initiatives based on the ISO/IEC 15504 standard for process assessment and improvement.
   Method: A systematic literature review based on the guidelines proposed by Kitchenham and the review protocol template developed by Biolchini et al. is performed.
   Results: Twenty-eight relevant studies related to ITSM Process Improvement have been found. From the analysis of these studies, nine different ITSM Process Improvement initiatives have been detected. Seven of these initiatives use ISO/IEC 15504 conformant process assessment methods.
   Conclusion: During the last decade, in order to satisfy the on-going demand of mature software development companies for assessing and improving ITSM processes, different models which use the measurement framework of ISO/IEC 15504 have been developed. However, it is still necessary to define a method with the necessary guidelines to implement both software development processes and ITSM processes reducing the amount of effort, especially because some processes of both categories are overlapped. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Lluis Mesquida, Antoni; Mas, Antonia; Amengual, Esperanca] Univ Balearic Isl, Dept Math & Comp Sci, Palma de Mallorca 07122, Spain.
   [Calvo-Manzano, Jose A.] Tech Univ Madrid, Fac Comp Sci, Madrid 28660, Spain.
C3 Universitat de les Illes Balears; Universidad Politecnica de Madrid
RP Mesquida, AL (corresponding author), Univ Balearic Isl, Dept Math & Comp Sci, Ctra Valldemossa,Km 7-5, Palma de Mallorca 07122, Spain.
EM antoni.mesquida@uib.es; antonia.mas@uib.es; eamengual@uib.es;
   joseantonio.calvomanzano@upm.es
RI Mesquida, Antoni Lluis/F-6864-2016; Calvo-Manzano, Jose A./K-9426-2013;
   Amengual-Alcover, Esperanca/L-7065-2014; Mas, Antonia/G-2596-2016
OI Mesquida, Antoni Lluis/0000-0002-1191-6220; Calvo-Manzano, Jose
   A./0000-0002-2864-2203; Amengual-Alcover, Esperanca/0000-0002-0699-6684;
   Mas, Antonia/0000-0003-4188-8088
FU CICYT [TIN2010-20057-C03-03]
FX This work is supported by CICYT-TIN2010-20057-C03-03 "Simulacian
   aplicada a la gestion de equipos, procesos y servicios", Sim4Gest.
CR Amengual E., 2007, P EUR SYST SOFTW PRO
   Biolchini J., 2005, RTES67905 COPPEUFRJ
   Calvo-Manzano J.A., 2009, P EUR SOFTW PROC IMP
   Calvo-Manzano J.A., 2009, ACM SIGSOFT SOFTWARE, V34, P1
   Cruzes D, 2007, P INT C CHIL COMPUT, P105, DOI 10.1109/SCCC.2007.11
   International Organisation for Standardization (ISO/IEC), 2007, 155048 ISOIEC NP TR
   International Organisation for Standardization (ISO/IEC), 2007, 200004 ISOIEC CD TR
   ISO/IEC, 2004, 1550412004 ISOIEC
   ISO/IEC, 2005, 2000012005 ISOIEC
   ISO/IEC ISO/IEC, 2005, 2000022005 ISOIEC
   IsoirEc, 2003, 1550422004 ISOIEC
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Mas A., 2005, CALIDAD INGENIERIA S, V1, P7
   Mas A., 2009, P EUR SYST SOFTW PRO
   Mas A., 2004, P 12 INT C SOFTW QUA, P61
   Mesquida AL., 2009, CALIDAD INGENIERIA S, V5, P77
   Office of Government Commerce (OGC), 2007, ITIL VERS 3 SERV DES
   Office of Government Commerce (OGC), 2007, ITIL VERS 3 SERV OP
   Office of Government Commerce (OGC), 2007, ITIL VERS 3 SERV TRA
   Office of Government Commerce (OGC), 2007, ITIL VERS 3 SERV STR
   Office of Government Commerce (OGC), 2007, ITIL VERS 3 CONT SER
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Software Engineering Institute (SEI), 2010, CMMI DEV CMMI DEV CM
   Software Engineering Institute (SEI), 2010, CMMI SVC CMMI SERV C
NR 25
TC 49
Z9 64
U1 1
U2 43
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 239
EP 247
DI 10.1016/j.infsof.2011.11.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300001
DA 2024-07-18
ER

PT J
AU Cui, JF
   Chae, HS
AF Cui, Jian Feng
   Chae, Heung Seok
TI Applying agglomerative hierarchical clustering algorithms to component
   identification for legacy systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component identification; Agglomerative hierarchical clustering
   algorithm; Weighting scheme; Similarity measure; Legacy systems;
   Software reengineering
AB Context: Component identification, the process of evolving legacy system into finely organized component-based software systems, is a critical part of software reengineering. Currently, many component identification approaches have been developed based on agglomerative hierarchical clustering algorithms. However, there is a lack of thorough investigation on which algorithm is appropriate for component identification.
   Objective: This paper focuses on analyzing agglomerative hierarchical clustering algorithms in software reengineering, and then identifying their respective strengths and weaknesses in order to apply them effectively for future practical applications.
   Method: A series of experiments were conducted for 18 clustering strategies combined according to various similarity measures, weighting schemes and linkage methods. Eleven subject systems with different application domains and source code sizes were used in the experiments. The component identification results are evaluated by the proposed size, coupling and cohesion criteria.
   Results: The experimental results suggested that the employed similarity measures, weighting schemes and linkage methods can have various effects on component identification results with respect to the proposed size, coupling and cohesion criteria, so the hierarchical clustering algorithms produced quite different clustering results.
   Conclusions: According to the experimental results, it can be concluded that it is difficult to produce perfectly satisfactory results for a given clustering algorithm. Nevertheless, these algorithms demonstrated varied capabilities to identify components with respect to the proposed size, coupling and cohesion criteria. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Chae, Heung Seok] Pusan Natl Univ, Dept Sci & Engn, Pusan 609735, South Korea.
   [Cui, Jian Feng] Xiamen Univ Technol, Dept Comp Sci & Technol, Xiamen 361024, Peoples R China.
C3 Pusan National University; Xiamen University of Technology
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Sci & Engn, 30 Changjeon Dong, Pusan 609735, South Korea.
EM hschae@pusan.ac.kr
RI cui, jian/IAN-2010-2023
FU Korean Ministry of Education, Science and Technology
FX This work was supported by the Grant of the Korean Ministry of
   Education, Science and Technology (The Regional Core Research
   Program/Institute of Logistics Information Technology).
CR Alghamdi JS, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P190, DOI 10.1109/CSMR.2005.44
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], P ERTS C JAN
   [Anonymous], MEANING LEGACY SYSTE
   [Anonymous], J INFORM PROCESSIN D
   [Anonymous], P 2 WORKSH PROD PERF
   [Anonymous], P 14 WORK C REV ENG
   [Anonymous], P IEEE INT C E BUS E
   [Anonymous], P FUT SOFTW ENG
   [Anonymous], P IEEE INT C SYST MA
   [Anonymous], BORL TOG
   [Anonymous], P IEEE INT C E BUS E
   [Anonymous], P SOFTW MAINT REENG
   [Anonymous], TI293 TECHN U DARMST
   [Anonymous], 2007, P 6 INT WORKSH SOFTW
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L.C., 2004, Empirical Software Engineering, V3, P65
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choi M, 2006, LECT NOTES COMPUT SC, V3983, P966, DOI 10.1007/11751632_104
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Davey J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P268, DOI 10.1109/WCRE.2000.891478
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   JACKSON DA, 1989, AM NAT, V133, P436, DOI 10.1086/284927
   Lee E, 2005, IEICE T INF SYST, VE88D, P1178, DOI 10.1093/ietisy/e88-d.6.1178
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   Luo J, 2004, PROC IEEE INT CONF S, P390
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mirkin B., 1996, Mathematical Classification and Clustering
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   SALTON G, 1991, SCIENCE, V253, P974, DOI 10.1126/science.253.5023.974
   Tzerpos V, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P811, DOI 10.1109/DEXA.1998.707499
   Washizaki H, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/METRIC.2003.1232469
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 35
TC 43
Z9 44
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 601
EP 614
DI 10.1016/j.infsof.2011.01.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900004
DA 2024-07-18
ER

PT J
AU Cocquebert, E
   Trentesaux, D
   Tahon, C
AF Cocquebert, Etienne
   Trentesaux, Damien
   Tahon, Christian
TI WISDOM: A website design method based on reusing design and software
   solutions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Website design; Software reuse; Conceptual reuse; MDE; COTS; Process
   pattern
ID COMPONENTS
AB Context: Websites are increasingly important for advertising and announcing information and they have become virtual business operations support tools. Thus, website designers have to take an increasing number of criteria (cost, delay, quality, security, maintenance) into account during design process to satisfy the needs.
   Objective: The objective of this paper was to present our WISDOM method that: guides the designer through the website design process, proposes design solutions based on already existing solutions for online website design, facilitates the choice of software components to implement specific services, and speeds up website construction.
   Method: The originality of our method is that it links the design process to formalized experience and a software component characterization that allows both functional and non-functional aspects to be considered.
   Results: This method relies on the state-of-the-art strengths in the website design process, modeling dimensions, Model-Driven Engineering and the patterns approach. We propose an implementation of our method as a dedicated website which helps website design and provides a website analysis catalog and a software component analysis catalog.
   Conclusion: Our analysis of the method's use highlights that formalizing the steps of the design process helps designers, especially novice designers, to design a website: our analysis of the tool's use highlights its efficiency for rapid website development and its use of the "website family" concept. The results are so very encouraging for both method and tool: both facilitate website design by reusing existing solutions and components. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Cocquebert, Etienne] Univ Lille Nord France, F-59000 Lille, France.
   UVHC, TEMPO Lab, F-59313 Valenciennes, France.
C3 Universite de Lille; Universite Polytechnique Hauts-de-France
RP Cocquebert, E (corresponding author), Univ Lille Nord France, F-59000 Lille, France.
EM etienne.cocquebert@univ-valenciennes.fr
RI trentesaux, damien/D-2791-2009
OI trentesaux, damien/0000-0003-2489-6203; Cocquebert,
   Etienne/0009-0005-5859-7617
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Andreou AS, 2007, INFORM SOFTWARE TECH, V49, P122, DOI 10.1016/j.infsof.2006.03.007
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Ceri S., 2000, P 9 INT WORLD WID WE
   Clark J, 2004, J SYST SOFTWARE, V73, P323, DOI 10.1016/j.jss.2003.09.019
   COCQUEBERT E, 2008, THESIS U VALENCIENNE
   CONALEN J, 2002, BUILDING WEB APPL UM
   CONTE A, 2002, SYSTEMS MAN CYBERNET
   COUTURIER V, 2003, INTL C ENT INF SYST, P225
   Crnkovic I., 2002, BUILDING RELIABLE CO
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   FAVRE JM, 2006, 2 JOURN ING DIR MOD, P51
   FOWLER RM, 1997, ANAL PATTERNS REUSAB
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GNAHO C, 2001, WEB ENG, V2016, P105
   GOEDEFROY W, 1998, P 1 WORKSH HYP DEV P
   Guerrero LA, 2001, INFORM SOFTWARE TECH, V43, P457, DOI 10.1016/S0950-5849(01)00154-9
   HALIN G, 2005, STICEF, V12
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Jezequel Jean-Marc., 1999, Design Patterns with Contracts
   Koch N., 2000, THESIS LUDWIG MAXIMI
   Lang M., 2002, P INF SCI IT ED C CO, P883
   LE TL, 2001, INFORSID 2001 GEN 29, P87
   Leung KRPH, 2002, INFORM SOFTWARE TECH, V44, P703, DOI 10.1016/S0950-5849(02)00118-0
   Licea G, 2000, INFORM SOFTWARE TECH, V42, P389, DOI 10.1016/S0950-5849(99)00098-1
   Mansour N, 2006, INFORM SOFTWARE TECH, V48, P31, DOI 10.1016/j.infsof.2005.02.007
   Muller Pierre-Alain., 2005, Software and Systems Modeling, V4, P424
   Ramadour P, 2008, MEX INT CONF ARTIF I, P20, DOI 10.1109/ENC.2008.20
   SCHWABE D, 1996, P ACM HYP
   SEIBEL J, 2005, THESIS
NR 31
TC 6
Z9 8
U1 1
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1272
EP 1285
DI 10.1016/j.infsof.2010.07.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200002
DA 2024-07-18
ER

PT J
AU Sun, L
   Mushi, CJ
AF Sun, Lily
   Mushi, Cleopa John
TI Case-based analysis in user requirements modelling for knowledge
   construction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User requirements profiling; Personalised information provision;
   Requirements pattern matching; Case-based requirements reasoning; Norms
ID MANAGEMENT
AB Context: Learning can be regarded as knowledge construction in which prior knowledge and experience serve as basis for the learners to expand their knowledge base. Such a process of knowledge construction has to take place continuously in order to enhance the learners' competence in a competitive working environment. As the information consumers, the individual users demand personalised information provision which meets their own specific purposes, goals, and expectations.
   Objectives: The current methods in requirements engineering are capable of modelling the common user's behaviour in the domain of knowledge construction. The users' requirements can be represented as a case in the defined structure which can be reasoned to enable the requirements analysis. Such analysis needs to be enhanced so that personalised information provision can be tackled and modelled. However, there is a lack of suitable modelling methods to achieve this end. This paper presents a new ontological method for capturing individual user's requirements and transforming the requirements onto personalised information provision specifications. Hence the right information can be provided to the right user for the right purpose.
   Method: An experiment was conducted based on the qualitative method. A medium size of group of users participated to validate the method and its techniques, i.e. articulates, maps, configures, and learning content. The results were used as the feedback for the improvement.
   Result: The research work has produced an ontology model with a set of techniques which support the functions for profiling user's requirements, reasoning requirements patterns, generating workflow from norms, and formulating information provision specifications.
   Conclusion: The current requirements engineering approaches provide the methodical capability for developing solutions. Our research outcome, i.e. the ontology model with the techniques, can further enhance the RE approaches for modelling the individual user's needs and discovering the user's requirements. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Sun, Lily; Mushi, Cleopa John] Univ Reading, Sch Syst Engn, Reading RG6 6AY, Berks, England.
C3 University of Reading
RP Mushi, CJ (corresponding author), Univ Reading, Sch Syst Engn, Reading RG6 6AY, Berks, England.
EM lily.sun@reading.ac.uk; c.j.s.k.mushi@reading.ac.uk
CR AAMODT A, 1994, AI COMMUN, V7, P39
   ALTHOFF KD, 2003, MAKING SOFTWARE ENG
   ALVIS P, 2008, P 8 IEEE INT C ADV L, P260
   [Anonymous], 1923, Psychological types, or the psychology of individuation
   [Anonymous], 1992, To Improve Academy, DOI [DOI 10.1002/J.2334-4822.1992.TB00213.X, 10.1002/j.2334-4822.1992.tb00213.x]
   [Anonymous], 1985, MANUAL GUIDE DEV USE
   Brusilovsky P, 2001, USER MODEL USER-ADAP, V11, P87, DOI 10.1023/A:1011143116306
   Cao J, 2006, INFORM SOFTWARE TECH, V48, P280, DOI 10.1016/j.infsof.2005.04.007
   Estes C.A., 2004, J EXPERIENT EDUC, V27, P141, DOI [DOI 10.1177/105382590402700203, 10.1177/105382590402700203]
   Gomez-Perez A., 2004, ADV INFO KNOW PROC
   Honebein RC., 1993, DESIGNING ENV CONSTR, P87, DOI DOI 10.1007/978-3-642-78069-1_5
   Iiyoshi T, 2005, EDUC MEDIA INT, V42, P281, DOI 10.1080/09523980500161346
   IMS LIP, 2003, LEARN INF PACK SPEC
   JONASSEN DH, 1991, ETR&D-EDUC TECH RES, V39, P5, DOI 10.1007/BF02296434
   Kalervo Jaana, 2002, ACM T INFORM SYSTEM, V20, P422, DOI DOI 10.1145/582415.582418
   Laplante PA, 2009, AUERBACH S APPL SOFT, P1
   Lau A, 2009, KNOWL-BASED SYST, V22, P324, DOI 10.1016/j.knosys.2009.02.014
   Liu K., 2000, SEMIOTICS INFORM SYS
   Liu KC, 2008, INFORM SOFTWARE TECH, V50, P1155, DOI 10.1016/j.infsof.2008.03.008
   LIU Z, 2004, PERSONALIZED WEB VIE, P16
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   MELENDEZ J, 2001, P EUR CONTR C ECC 20, P1600
   Middleton SE, 2004, ACM T INFORM SYST, V22, P54, DOI 10.1145/963770.963773
   Nanjappa A., 2003, Electronic Journal for the Integration of Technology in Education, V2, P38
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pederson S., 2004, J ED MULTIMEDIA HYPE, V13, P283
   Peirce Charles Sanders, 1935, Collected Papers of Charles Sanders Peirce, V6
   Reigeluth C.M., 1999, Instructional-Design Theories and Models: A New Paradigm of Instructional Theory, VII.
   Riecken D, 2000, COMMUN ACM, V43, P27
   Schank R. C., 1982, Dynamic memory: A theory of reminding and learning
   Seely Brown J., 2008, Educause Review, V43, P16
   Sun L, 2001, INFORM SOFTWARE TECH, V43, P247, DOI 10.1016/S0950-5849(00)00164-6
   SUN L, 2009, J INFORM SYSTEMS FRO
   Sun L, 2006, REQUIR ENG, V11, P279, DOI 10.1007/s00766-006-0031-z
   Vakkari P., 2000, P SIGIR 2000 C ATHEN, P2
   Vollrath I, 1998, IEEE INTERNET COMPUT, V2, P47, DOI 10.1109/4236.707690
   WRIGHT IC, 2005, KNOWLEDGE MANAGEMENT, V3, P156
NR 37
TC 5
Z9 5
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 770
EP 777
DI 10.1016/j.infsof.2010.03.010
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Yuan, X
   Memon, AM
AF Yuan, Xun
   Memon, Atif M.
TI Iterative execution-feedback model-directed GUI testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test-case generation; Model-based testing; GUI testing; Event-driven
   software; Event-flow graphs
ID SOFTWARE TEST DATA; TEST DATA GENERATION
AB Current fully automatic model-based test-case generation techniques for GUIs employ a static model Therefore they are unable to leverage certain state-based relationships between GUI events (e g one enables the other, one alters the other's execution) that are revealed at run-time and non-trivial to infer statically. We present ALT - a new technique to generate GUI test cases in batches Because of its "alternating" nature, ALT enhances the next batch by using GUI run-time information from the current batch. An empirical study on four fielded GUI-based applications demonstrated that ALT was able to detect new 4- and 5-way GUI interaction faults; in contrast, previous techniques, due to their requirement of too many test cases, were unable to even test 4- and 5-way GUI interactions (C) 2009 Elsevier B V All tights reserved
C1 [Yuan, Xun; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Memon, AM (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
FU US National Science Foundation under NSF [CCF-0447864]; Office of Naval
   Research [N00014-05-1-0421]
FX This work was partially supported by the US National Science Foundation
   under NSF Grant CCF-0447864 and the Office of Naval Research Grant
   N00014-05-1-0421.
CR [Anonymous], THESIS U PITTSBURGH
   [Anonymous], FATES
   [Anonymous], P 6 ACM SIGSOFT INT
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Dwyer MB, 1997, LECT NOTES COMPUT SC, V1301, P244, DOI 10.1145/267896.267914
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Finsterwalder M., 2001, Proc. of the 2nd Int. Conf. on Extreme Prog, P114
   Gallagher MJ, 1997, IEEE T SOFTWARE ENG, V23, P473, DOI 10.1109/32.624304
   HICINBOTHOM JH, 1993, P HUM FACT ERG SOC 3, V2, P1042
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   *JUNIT, TEST RES EXTR PROGR
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P., 2006, Proceedings of the 2006 international symposium on Software testing and analysis, P13, DOI [10.1145/1146238.1146241, DOI 10.1145/1146238.1146241]
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Memon Atif M., 2003, P 10 WORK C REV ENG
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   PACHECO C, 2007, P 29 INT C SOFTW ENG, P396
   Pasquet M, 2008, INT S COLLAB TECHNOL, P121, DOI 10.1109/CTS.2008.4543921
   ROUNTEV A, 2004, WORKSH PROGR AN SOFT, P14
   Shehady RK, 1997, DIG PAP INT SYMP FAU, P80, DOI 10.1109/FTCS.1997.614080
   White L, 2003, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2003.1235450
   White L, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P54, DOI 10.1109/ISSRE.2001.989458
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   Yuan X, 2007, PROC INT CONF SOFTW, P396
NR 30
TC 20
Z9 27
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 559
EP 575
DI 10.1016/j.infsof.2009.11.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 588XF
UT WOS:000277107200008
DA 2024-07-18
ER

PT J
AU Williams, BJ
   Carver, JC
AF Williams, Byron J.
   Carver, Jeffrey C.
TI Characterizing software architecture changes: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software architecture; Software maintenance; Change characterization;
   Software evolution; Systematic review; Software changes
ID IMPACT ANALYSIS; CHANGE MANAGEMENT; MAINTENANCE; EVOLUTION; SUPPORT;
   MODEL; COMPLEXITY; DESIGN; RISK; LAWS
AB With today's ever increasing demands on software, software developers must produce software that can be changed without the risk of degrading the software architecture. One way to address software changes is to characterize their causes and effects. A software change characterization mechanism allows developers to characterize the effects of a change using different criteria, e.g. the cause of the change, the type of change that needs to be made, and the part of the system where the change must take place. This information then can be used to illustrate the potential impact of the change. This paper presents a systematic literature review of software architecture change characteristics. The results of this systematic review were used to create the Software Architecture Change Characterization Scheme (SACCS). This report addresses key areas involved in making changes to software architecture. SACCS's purpose is to identify the characteristics of a software change that will have an impact on the high-level software architecture. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Williams, Byron J.] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   Mississippi State University
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Box 870290,101 Houser Hall, Tuscaloosa, AL 35487 USA.
EM bjw1@cse.msstate.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR Abdelmoez W, 2005, I C COMP SYST APPLIC
   AJILA S, 1995, SOFTWARE PRACT EXPER, V25, P1155, DOI 10.1002/spe.4380251006
   AMBRIOLA V, 2002, P 14 INT C SOFTW ENG, P275
   [Anonymous], 1998, 10611998 IEEE
   Antoniol G., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P250, DOI 10.1109/METRIC.1999.809746
   Aoyama M, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P110, DOI 10.1109/ISPSE.2000.913228
   Aoyama M., 2002, P INT WORKSHOP PRINC, P103
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   ARTHUR J, 1988, SOFTW EV SOFTW MAINT
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Baragry J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P125, DOI 10.1109/WICSA.2001.948419
   Barais O, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P62
   Barbacci M., 1995, CMUSEI95TR021
   Barry E., 1999, PROCEEDING 20 INT C, P453
   Barry EJ, 2003, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2003.1201192
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   Basili V., 1981, P 5 INT C SOFTWARE E, P314
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bengtsson P, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P139, DOI 10.1109/CSMR.1999.756691
   Biolchini J., 2005, Systematic review in software engineering(05)
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   BOHNER SA, 2000, P INT C SOFTW MAINT, P42
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BOSE P, 1998, P 3 INT WORKSH SOFTW, P5
   BRERETON B, 2005, 0501 TR KEEL U SCH C
   Briand L., 1992, PROCEEDING C SOFTWAR, P328
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Brooks Fred, 1975, The Mythical Man-Month
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Capiluppi A, 2007, PROC INT CONF SOFTW, P511
   Capiluppi A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P21, DOI 10.1109/CSMR.2005.30
   Carrière SJ, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P22, DOI 10.1109/CSMR.1999.756679
   Chapin N, 2000, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2000.883056
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chaumun MA, 2002, SCI COMPUT PROGRAM, V45, P155, DOI 10.1016/S0167-6423(02)00058-8
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   CHESLEY DC, 2005, P INT C SOFTW MAINT, P401
   Chesley OC, 2005, PROC IEEE INT CONF S, P401
   Clarke P, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213, DOI 10.1109/CSMR.2003.1192429
   Clements P., 2003, SEI S SOFTW
   Conradi R, 2000, INT J SOFTW ENG KNOW, V10, P31, DOI 10.1142/S0218194000000043
   Cook S, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P17, DOI 10.1109/IWSE.2005.2
   COOK S, 2005, J SOFTWARE MAINTENAN, V18, P1
   CROCKER RT, 1993, P INT COMP SOFTW APP, P63, DOI 10.1109/CMPSAC.1993.404216
   Dekleva S., 1992, PROCEERDINGS C SOFTW, P10, DOI [DOI 10.1109/ICSM.1992.242564, 10.1109/ICSM.1992.242564]
   DUCHIEN BL, 2005, 31 EUROMICRO C SOFTW, P62
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   FALKNER K, 2004, P 37 ANN HAW INT C S, P268
   Feng T., 2006, 7 ACIS INT C SOFTWAR, P43
   Fiutem R, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P319, DOI 10.1109/ICSM.1996.565035
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   FREDERICKS M, 1998, SP0700984000 DACS
   Fuentetaja E, 2002, PROC IEEE INT CONF S, P226, DOI 10.1109/ICSM.2002.1167769
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Grundy J, 2000, IEEE VISLANG, P5, DOI 10.1109/VL.2000.874344
   Gustafsson J, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P108, DOI 10.1109/CSMR.2002.995795
   Hac A., 1992, IEEE REGION 10 INT C, P307
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Heineman G. T., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P4, DOI 10.1109/CMPSAC.1999.812507
   HERRAIZ I, 2006, P 10 EUR C SOFTW MAI
   Hinley DS, 1996, INFORM SOFTWARE TECH, V38, P723, DOI 10.1016/0950-5849(96)01122-6
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Hsia P, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P4, DOI 10.1109/ICSM.1995.526522
   *IEEE, 1998, 12191998 IEEE
   *ISO IEC, 1998, 912612 ISOIEC FCD
   *ISO IEC, 1999, 14764 ISOIEC FDIS
   Ivkovic I, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Lam W., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P244, DOI 10.1109/EURMIC.1999.794787
   Lam W, 1998, EUROMICRO CONF PROC, P779, DOI 10.1109/EURMIC.1998.708102
   Lassing N., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P238, DOI 10.1109/APSEC.1999.809608
   Lassing N., 1999, P 1 WORKING IFIP C S, P357
   Lee Y, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P191
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   Lehman M.M., 1996, P 10 INT PROCESS SUP, P101
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P2
   Lehman MM, 1998, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSM.1998.738510
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LI JJ, 2000, COMP SOFTW APPL C 20, P413
   Lientz B P., 1980, Software Maintenance Management
   Lin I.-H., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P241, DOI 10.1109/ICSM.1988.10169
   Lindvall M., 1998, Software Process Improvement and Practice, V4, P3, DOI 10.1002/(SICI)1099-1670(199803)4:1<3::AID-SPIP90>3.0.CO;2-R
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   Liu X, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P265
   Madhavji N.H., 1991, P 13 INT C SOFTWARE, P166
   MADHAVJI NH, 1992, IEEE T SOFTWARE ENG, V18, P380, DOI 10.1109/32.135771
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   MAYHEW PJ, 1989, INFORM SOFTWARE TECH, V31, P59, DOI 10.1016/0950-5849(89)90084-0
   McCrickard DS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P59, DOI 10.1109/ICSM.1996.564989
   Mendes E, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P481, DOI 10.1109/ISESE.2005.1541857
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MENS T, 2003, P WORKSH UN SOFTW EV, P1
   Mittermeir R., 2001, P 4 INT WORKSHOP PRI, P114
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOCKUS A, 1999, ITD9936760F NAT I ST
   Mohagheghi P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7
   Nanda V, 2002, PROC IEEE INT CONF S, P452, DOI 10.1109/ICSM.2002.1167802
   Nedstam J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P27
   Nguyen M. N., 1994, Proceedings. Third International Conference on the Software Process. Applying the Software Process (Cat. No.94TH8001), P167, DOI 10.1109/SPCON.1994.344414
   NGUYEN N, 1997, FRAMEWORK APPROACH M
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   O'Neal JS, 2001, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2001.972729
   O'Reilly C, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P59, DOI 10.1109/IWPSE.2003.1231211
   PARNAS DL, 1994, P ICSE, V16, P279
   Phillips N, 2005, IEEE International Workshop on Software Evolvability, Proceedings, P49, DOI 10.1109/IWSE.2005.5
   Port D, 2003, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSM.2003.1235449
   Postma A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P89, DOI 10.1109/WICSA.2004.1310693
   POULIN JS, 1996, JOINT P 2 INT SOFTW, P134
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Ramil JF, 2002, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSM.2002.1167752
   Ratzinger J., 2005, Proceedings of the 2nd International Workshop on Mining Software Repositories (MSR'05), P1, DOI DOI 10.1145/1083142.1083155
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robbins J.E., 1996, JOINT P 2 INT SOFTWA, P90
   ROBBINS JE, 1996, P 2 INT SOFTW ARCH W, P90
   ROBLES F, 2006, P 10 EUR C SOFTW MAI, P8
   ROMBACH HD, 1992, J SYST SOFTWARE, V18, P125, DOI 10.1016/0164-1212(92)90122-Z
   Sadou N, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P65, DOI 10.1109/IWPSE.2005.4
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   Schneidewind NF, 2001, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSM.2001.972723
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sommerville I., 2004, Software Engineering
   Song K, 2005, 2005 INTERNATIONAL WORKSHOP ON THE ANALYSIS ON MULTI-TEMPORAL REMOTE SENSING IMAGES, P39
   Stark GE, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P152, DOI 10.1109/ICSM.1996.565000
   STOERZER M, 2005, DCSTR05566 RUTG U
   Sugden RC, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P457, DOI 10.1109/ECBS.1996.494574
   Svahnberg M, 2005, EMPIR SOFTW ENG, V10, P149, DOI 10.1007/s10664-004-6190-y
   Svahnberg M., 2002, Proceedings of the 14th international conference on Software engineering and knowledge engineering, P819
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tahvildari L., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P10, DOI 10.1109/APSEC.1999.809579
   Tran J.B., 1999, P 1999 C CTR ADV STU, P12
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   TVEDT RT, 2002, P 27 ANN NASA GODD I, P191
   Van Rysselberghe F., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P48, DOI 10.1049/ic:20040475
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Yang Y., 2006, P 2006 INT WORKSHOP, P10
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhao JJ, 2002, J SOFTW MAINT EVOL-R, V14, P317, DOI 10.1002/smr.258
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
NR 163
TC 80
Z9 87
U1 2
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 31
EP 51
DI 10.1016/j.infsof.2009.07.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900003
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Alshayeb, M
AF Alshayeb, Mohammad
TI Empirical investigation of refactoring effect on software quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software metrics; Refactoring; Quality improvement; Empirical study
ID METRICS
AB Developers and designers always strive for quality software. Quality software tends to be robust, reliable and easy to maintain, and thus reduces the cost of software development and maintenance. Several methods have, been applied to improve software quality. Refactoring is one of those methods. The goal of this paper is to validate/invalidate the claims that refactoring improves software quality. We focused this study on different external quality attributes, which are adaptability, maintainability, understandability, reusability, and testability. We found that refactoring does not necessarily improve these quality attributes. (C) 2009 Elsevier B.V. All rights reserved.
C1 King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, POB 1172, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum and Minerals;  [JF-2005/07]
FX The author acknowledges the support of King Fahd University of Petroleum
   and Minerals. This work is done under JF-2005/07. Special thanks to Mr.
   Yaser Shabaan, Mr. Karim Elish and graduate students in ICS 511. The
   author also acknowledges the anonymous reviewers for their valuable
   comments on the earlier versions of this article.
CR [Anonymous], P 5 WORLD MULT SYST
   [Anonymous], INT WORKSH EV LARG S
   [Anonymous], P 9 EUR C SOFTW MAIN
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   [Anonymous], P IEEE INT C SOFTW M
   [Anonymous], 1991, 9126 ISOIEC
   [Anonymous], 61012 IEEE
   [Anonymous], P 11 IEEE INT SOFTW
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Boehm B.W., 1978, Characteristics of Software Quality
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dandashi F., 2002, Proceedings of the 2002 ACM Symposium on Applied Computing, P997
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Wake W.C., 2003, Refactoring Workbook, V1st
   Wilking D., 2007, E-INFORMATICA, V1, P27
NR 23
TC 88
Z9 93
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1319
EP 1326
DI 10.1016/j.infsof.2009.04.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700003
DA 2024-07-18
ER

PT J
AU Wainer, J
   Barsottini, CGN
   Lacerda, D
   de Marco, LRM
AF Wainer, Jacques
   Novoa Barsottini, Claudia G.
   Lacerda, Danilo
   Magalhaes de Marco, Leandro Rodrigues
TI Empirical evaluation in Computer Science research published by ACM
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical evaluation; Research evaluation; Experimentation; Systematic
   review
AB This paper repeats part of the analysis performed in the 1995 paper "Experimental evaluation in Computer Science: a quantitative study" by Tichy and collaborators, for 147 papers randomly selected from the ACM, published in the year 2005. The papers published in 2005 are classified in the following way: 4% theory, 17% empirical, 4.7% hypothesis testing, 3.4% other, and 70% design and modeling (using the 1995 paper categories). Within the design and modeling class, 33% of the papers have no evaluation. The numbers of the 2005 sample are very similar to the original figures for the 1995 sample, which shows that Computer Science research has not increased significantly its empirical or experimental component. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Wainer, Jacques; Lacerda, Danilo; Magalhaes de Marco, Leandro Rodrigues] Univ Estadual Campinas, Comp Inst, BR-13083852 Campinas, SP, Brazil.
   [Novoa Barsottini, Claudia G.] Univ Fed Sao Paulo, Dept Hlth Informat, Sao Paulo, Brazil.
C3 Universidade Estadual de Campinas; Universidade Federal de Sao Paulo
   (UNIFESP)
RP Wainer, J (corresponding author), Univ Estadual Campinas, Comp Inst, Av Albert Einstein 1251, BR-13083852 Campinas, SP, Brazil.
EM wainer@ic.unicamp.br
RI Wainer, Jacques/AAQ-6029-2021; Wainer, Jacques/B-4241-2012; Novoa,
   Claudia Galindo/AAK-8548-2021
OI Wainer, Jacques/0000-0001-5201-1244; Wainer,
   Jacques/0000-0001-5201-1244; Novoa, Claudia Galindo/0000-0002-7861-3216
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Denning PJ, 2007, COMMUN ACM, V50, P13, DOI 10.1145/1272516.1272529
   Denning PJ, 2005, COMMUN ACM, V48, P27, DOI 10.1145/1053291.1053309
   Eden AH, 2007, MIND MACH, V17, P135, DOI 10.1007/s11023-007-9060-8
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   PINELLE D, 2002, P WET ICE 2000 IEEE, P86
   Prechelt L, 1996, NEURAL NETWORKS, V9, P457, DOI 10.1016/0893-6080(95)00123-9
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   WAINER J, 2009, IC0902 U CAMP
   Wainer J., 2007, J BRAZILIAN COMPUTER, V13, P27
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 19
TC 12
Z9 13
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1081
EP 1085
DI 10.1016/j.infsof.2009.01.002
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400009
DA 2024-07-18
ER

PT J
AU Staron, M
   Meding, W
   Nilsson, C
AF Staron, Miroslaw
   Meding, Wilhelm
   Nilsson, Christer
TI A framework for developing measurement systems and its industrial
   evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software metrics; ISO/IEC 15939; Measurement systems
ID SOFTWARE METRICS; PROGRAM
AB As in every engineering discipline, metrics play an important role in software development, with the difference that almost all software projects need the customization of metrics used. In other engineering disciplines, the notion of a measurement system (i.e. a tool used to collect, calculate, and report quantitative data) is well known and defined, whereas it is not as widely used in software engineering. In this paper we present a framework for developing custom measurement systems and its industrial evaluation in a software development unit within Ericsson. The results include the framework for designing measurement systems and its evaluation in real life projects at the company. The results show that with the help of ISCI/IEC standards, measurement systems can be effectively used in software industry and that the presented framework improves the way of working with metrics. This paper contributes with the presentation of how automation of metrics collection and processing can be successfully introduced into a large organization and shows the benefits of it: increased efficiency of metrics collection, increased adoption of metrics in the organization, independence from individuals and standardized nomenclature for metrics in the organization. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Staron, Miroslaw] IT Univ Goteborg, SE-41296 Gothenburg, Sweden.
   [Meding, Wilhelm; Nilsson, Christer] Ericsson SW Res, Ericsson AB, Sweden.
C3 Ericsson
RP Staron, M (corresponding author), IT Univ Goteborg, SE-41296 Gothenburg, Sweden.
EM Miroslaw.Staron@ituniv.se
CR [Anonymous], INT VOC BAS GEN TERM
   Atkins KL, 2003, ACTA ASTRONAUT, V52, P87, DOI 10.1016/S0094-5765(02)00142-X
   Chirinos L, 2005, J SYST SOFTWARE, V74, P207, DOI 10.1016/j.jss.2004.01.019
   De Panfilis S, 1997, INFORM SOFTWARE TECH, V39, P745, DOI 10.1016/S0950-5849(97)00033-5
   *EVENTHELIX, SYST AV REL
   FEIGIN J, 1999, IEEE INT WORKSH MOB, P236
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Foote M, 1999, GEOMORPHOLOGY, V29, P59, DOI 10.1016/S0169-555X(99)00006-9
   García F, 2007, INFORM SCIENCES, V177, P2570, DOI 10.1016/j.ins.2007.01.018
   Goodman P., 1993, Practical Implementation of Software Metrics
   Gopal A, 2005, IEEE T SOFTWARE ENG, V31, P679, DOI 10.1109/TSE.2005.95
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   *GREENL, PROPS PROJ MAN MULT
   Hall T, 1997, IEEE SOFTWARE, V14, P55, DOI 10.1109/52.582975
   Huang ZY, 2002, IEEE T INSTRUM MEAS, V51, P700, DOI 10.1109/TIM.2002.803296
   *INT STAND ORG, 1999, 145981999 INT STAND
   *INT STAND ORG, 2002, 152882002 INT STAND
   *INT STAND ORG INT, 2001, 9126 ISO IEC 1
   Jeffery R., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P28, DOI 10.1109/METRIC.1993.263803
   KAI G, 2007, 8 INT C EL MEAS INST, P176
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   Kolev NP, 2002, IEEE T INSTRUM MEAS, V51, P207, DOI 10.1109/19.997813
   KOLEV NP, 1996, INSTR MEAS TECHN C 1, V2, P881
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   Kunz RF, 2002, NUCL ENG DES, V211, P245, DOI 10.1016/S0029-5493(01)00440-X
   Lawler J, 2003, IEEE SOFTWARE, V20, P68, DOI 10.1109/MS.2003.1196324
   Moller K.-H., 1993, SOFTWARE METRICS PRA
   Niessink F, 2001, INFORM SOFTWARE TECH, V43, P617, DOI 10.1016/S0950-5849(01)00168-9
   NIESSINK F, 1999, 6 INT SOFTW METR S, P31
   Oberkampf WL, 2002, PROG AEROSP SCI, V38, P209, DOI 10.1016/S0376-0421(02)00005-2
   Pfleeger SL, 1997, IEEE SOFTWARE, V14, P33, DOI 10.1109/52.582973
   *PRED LOG, 2008, TYCHOMETRICS
   Robson C., 2002, Real world research
   Schalken J, 2008, J SYST SOFTWARE, V81, P603, DOI 10.1016/j.jss.2007.07.041
   SEHMI AS, 1994, IEE P-SCI MEAS TECH, V141, P215, DOI 10.1049/ip-smt:19949933
   Solingen R. V., 1999, GOAL QUESTION METRIC
   STARON M, 2007, IN EV INT C EMP ASS
   STARON M, 2007, IND CAS STUD INT S S
   STARON M, 2007, PREDICTING WEEKLY DE
   Trochim W.M. K., 2008, The research methods knowledge base, V3rd
   UMARJI M, 2005, 11 IEEE INT S SOFTW, P10
   WISELL D, 2007, INSTR MEAS TECHN C P, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zaborovsky A. N., 2002, IEEE-Siberian Conference on Electron Devices and Materials. SIBEDEM - 2002. Proceedings (Cat. No.02EX529), P53, DOI 10.1109/SIBEDM.2002.998064
   Zuse H, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P75, DOI 10.1109/METRIC.1996.492445
   Zuse Horst., 1998, A framework of software measurement
NR 48
TC 22
Z9 22
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 721
EP 737
DI 10.1016/j.infsof.2008.10.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600004
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, Claes
TI An analysis of the most cited articles in software engineering
   journals-2002
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Citation analysis; Bibliometrics; Scientometrics; Software engineering
AB Citations and related work are crucial in any research to position the work and to build on the work of others. A high citation count is an indication of the influence of specific articles. The importance of citations means that it is interesting to analyze which articles are cited the most. Such an analysis has been conducted using the ISI Web of Science to identify the most cited software engineering journal articles published in 2002. The objective of the analysis is to identify and list the articles that have influenced others the most as measured by citation count. An understanding of which research is viewed by the research community as most valuable to build upon may provide valuable insights into what research to focus on now and in the future. Based on the analysis, a list of the 20 most cited articles is presented here. The intention of the analysis is twofold. First, to identify the most cited articles, and second, to invite the authors of the most cited articles in 2002 to contribute to a special section of Information and Software Technology. Six authors have accepted the invitation and their articles appear in this special section. (C) 2008 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, S-37225 Ronneby, Sweden.
EM Claes.Wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
FU "Blekinge - Engineering Software Qualities (BESQ)"
FX This work was partly funded by The Knowledge Foundation in Sweden under
   a research grant for the project "Blekinge - Engineering Software
   Qualities (BESQ)" (littp://www.bth.se/besq).
CR GLANZEL W, 2002, J IMPACT MEASURES BI, V52, P171
   Jones AW, 2005, INT J LEGAL MED, V119, P59, DOI 10.1007/s00414-004-0512-x
   McBurney MK, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P108, DOI 10.1109/IPCC.2002.1049094
   Tse TH, 2006, J SYST SOFTWARE, V79, P816, DOI 10.1016/j.jss.2005.08.018
   Wohlin C, 2008, INFORM SOFTWARE TECH, V50, P3, DOI 10.1016/j.infsof.2007.10.002
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   Zitt M, 2005, SCIENTOMETRICS, V63, P373, DOI 10.1007/s11192-005-0218-y
NR 7
TC 9
Z9 10
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 2
EP 6
DI 10.1016/j.infsof.2008.09.012
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500002
DA 2024-07-18
ER

PT J
AU Ngo, MN
   Tan, HBK
AF Ngo, Minh Ngoc
   Tan, Hee Beng Kuan
TI Heuristics-based infeasible path detection for dynamic test data
   generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE infeasible path detection; dynamic test data generation; heuristic-based
ID PROGRAM; FEASIBILITY
AB Automated test data generation plays an important part in reducing the cost and increasing the reliability of software testing. However, a challenging problem in path-oriented test data generation is the existence of infeasible program paths, where considerable effort may be wasted in trying to generate input data to traverse the paths. In this paper, we propose a heuristics-based approach to infeasible path detection for dynamic test data generation. Our approach is based on the observation that many infeasible program paths exhibit some common properties. Through realizing these properties in execution traces collected during the test data generation process, infeasible paths can be detected early with high accuracy. Our experiments show that the proposed approach efficiently detects most of the infeasible paths with an average precision of 96.02% and a recall of 100% of all the cases. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Ngo, Minh Ngoc; Tan, Hee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Ngo, MN (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM ngom0002@ntu.edu.sg; ibktan@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR [Anonymous], HTML PARSER
   [Anonymous], P 6 ACM SIGSOFT INT
   BODIK R, 1997, P 1997 ACM SIGPLAM C
   BODIK R, 1997, 6 EUR SOFTW ENG C HE, V22, P361
   Bueno PMS, 2002, INT J SOFTW ENG KNOW, V12, P691, DOI 10.1142/S0218194002001074
   BUENO PMS, 2000, P ASE 2000 15 IEEE I
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   CSALLNER C, 2005, 27 INT C SOFTW ENG I
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Forgacs I., 1997, ESEC FSE 97 6 EUR SO
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   *GFP, PERS FIN MAN SYST
   GOLDBERG A, 1994, 1994 INT S SOFTW TES
   *GRAPHVIZ, DOTT
   GUPTA N, 2000, P ASE 2000 15 IEEE I
   Hedley D., 1985, P 8 INT C SOFTW ENG
   JAYARAMAN G, 2005, FUND APPR SOFTW ENG
   *JHOTDRAW, JAV GUI FRAM
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KOREL B, 1996, P INT S SOFTW TEST A
   MALEVRIS N, 1995, INFORM SOFTWARE TECH, V37, P435, DOI 10.1016/0950-5849(95)98039-I
   MALEVRIS N, 1990, INFORM SOFTWARE TECH, V32, P115, DOI 10.1016/0950-5849(90)90110-D
   McCabe T., 1982, STRUCTURED TESTING S
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Poole J, 1995, A method to determine a basis set of paths to perform program testing
   SEN K, 2006, 18 INT C COMP AID VE
   TONELLA P, 2004, ACM SIGSOFT INT S SO
   Visser W., 2004, ACM SIGSOFT INT S SO
   Watkins A, 2006, SOFTWARE PRACT EXPER, V36, P95, DOI 10.1002/spe.684
   XIE T, 2005, TOOLS ALG CONSTR AN
   YATES DF, 1989, ACM SIGSOFT 89 3 S S
   Zhang J, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P242, DOI 10.1109/SEFM.2004.1347528
   Zhang J, 2001, INT J SOFTW ENG KNOW, V11, P139, DOI 10.1142/S0218194001000487
   ZHAO R, 2003, IEEE 3 INT C QUAL SO
   JMATHLIB LIB MATHEMA
   JLIBSYS LIB MANAGEME
   1974, NUMERICAL METHODS CO
   PMD JAVA SOURCE CODE
   SOURCEFORGE OPEN SOU
   SOOT JAVA BYTECODE O
NR 43
TC 28
Z9 36
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 641
EP 655
DI 10.1016/j.infsof.2007.06.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000003
DA 2024-07-18
ER

PT J
AU Niemelä, E
   Immonen, A
AF Niemela, Eila
   Immonen, Anne
TI Capturing quality requirements of product family architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE quality requirement; software architecture; traceability; software
   product family
AB Software quality is one of the major issues with software intensive systems. Moreover, quality is a critical success factor in software product families exploiting shared architecture and common components in a set of products. Our contribution is the QRF (Quality Requirements of a software Family) method, which explicitly focuses on how quality requirements have to be defined, represented and transformed to architectural models. The method has been applied to two experiments; one in a laboratory environment and the other in industry. The use of the QRF method is exemplified by the Distribution Service Platform (DiSeP), the laboratory experiment. The lessons learned are also based on our experiences of applying the method in industrial settings. (C) 2006 Elsevier B.V. All rights reserved.
C1 VTT Tech Res Ctr Finland, FIN-90571 Oulu, Finland.
C3 VTT Technical Research Center Finland
RP Niemelä, E (corresponding author), VTT Tech Res Ctr Finland, POB 1100, FIN-90571 Oulu, Finland.
EM Eila.Niemela@vtt.fi; Anne.Immonen@vtt.fi
OI Ovaska, Eila/0000-0003-2114-3257
CR America P, 2000, SPRINGER INT SER ENG, V576, P167
   [Anonymous], UML PROF MOD QUAL SE
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Bass Len, 2012, SEI S SOFTW
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CHUNG L, 1999, 1 WORK IFIP C SOFTW
   GRUENBACKER P, 2003, SOFTWARE SYSTEMS MOD, V3, P235
   *IEEE, 2000, STD14172000 IEEE
   *IEEE, 1998, STD10611998 IEEE
   Immonen A., 2006, Research Issues in Software Product-Lines - Engineering and Managemen, P373, DOI DOI 10.1007/978-3-540-33253-4_10
   *ISO IEC, 2001, 912612001 ISO IEC
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Matinlassi M, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P295, DOI 10.1109/WICSA.2004.1310713
   MATINLASSI M, EUR 2003 ANT IEEE CO, P25
   Matinlassi M., 2002, QUALITY DRIVEN ARCHI
   Merilinna J., 2005, Proceedings of the Estonian Academy of Sciences (Engineering), V11, P296
   MILLER J, 2003, OMG MDA GUIDE VERSIO
   Niemelä E, 2005, IEEE T SOFTWARE ENG, V31, P361, DOI 10.1109/TSE.2005.60
   NIEMELA E, 2003, IEC ANN REV COMM, V56, P875
   NIEMELA E, 2001, ACM SIGSOFT SOFTWARE, V26, P118
   Purhonen A, 2004, J SYST SOFTWARE, V69, P57, DOI 10.1016/S0164-1212(03)00050-5
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   SCHMID K, 2004, 3 SOFTW PROD LIN C B
   *TINA, 1997, SERV ARCH SPEC
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
NR 27
TC 24
Z9 27
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1107
EP 1120
DI 10.1016/j.infsof.2006.11.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100003
DA 2024-07-18
ER

PT J
AU Lin, HY
   Huang, PW
   Hsu, KH
AF Lin, Hang-Yi
   Huang, Po-Whei
   Hsu, Kuang-Hua
TI A new indexing method with high storage utilization and retrieval
   efficiency for large spatial databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatial database; KDB-trees; splitting policy; storage utilization
AB Storing and querying high-dimensional data are important problems in designing an information retrieval system. Two crucial issues, time and space efficiencies, must be considered when evaluating the performance of such a system. The KDB-tree and its variants have been reported to have good performance by using them as the index structure for retrieving multidimensional data. However, they all suffer from low storage utilization problem caused by imperfect "splitting policies." Unnecessary splits increase the size of the index structure and deteriorate the performance of the system. In this paper, a new data insertion algorithm with a better splitting policy was proposed, which arranged data entries in the leaf nodes as many as possible. Our new index scheme can increase the storage utilization up to nearly 100% and reduce the index size to a smaller scale. As a result, both time and space efficiencies are significantly improved. Analytical and experimental results show that our indexing method outperforms the traditional KDB-tree and its variants. (c) 2006 Elsevier B.V. All rights reserved.
C1 Natl Tai Chung Inst Technol, Taichung, Taiwan.
   Natl Chung Hsing Univ, Taichung 40227, Taiwan.
   Chaoyang Univ Technol, Taichung, Taiwan.
C3 National Chung Hsing University; Chaoyang University of Technology
RP Lin, HY (corresponding author), Natl Tai Chung Inst Technol, Taichung, Taiwan.
EM linhy@mail.cyut.edu.tw; pwhuang@cs.nchu.edu.tw; khhsu@mail.cyut.edu.tw
CR [Anonymous], 1994, The VLDB Journal, DOI DOI 10.1007/BF01231606
   BECKMANN N, 1990, SIGMOD REC, V19, P322, DOI 10.1145/93605.98741
   CAEDE V, 1998, ACM COMPUT SURV, V30, P170
   FREESTON M, 1995, P ACM SIGMOD INT C M, P80
   Goh CH, 2000, DATA KNOWL ENG, V32, P115, DOI 10.1016/S0169-023X(99)00031-2
   GREENE D, 1989, PROCEEDINGS : FIFTH INTERNATIONAL CONFERENCE ON DATA ENGINEERING, P606, DOI 10.1109/ICDE.1989.47268
   Guttman A., 1984, ACM SIGMOD INT C MAN, P47, DOI DOI 10.1145/602259.602266
   HENRICH A, P 15 VLDB C AMST NET, P45
   NIEVERGELT J, 1984, ACM T DATABASE SYST, V9, P38, DOI 10.1145/348.318586
   Ohsawa Y., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P539
   Orlandic R, 2001, 2001 INTERNATIONAL DATABASE ENGINEERING & APPLICATIONS SYMPOSIUM, PROCEEDINGS, P58, DOI 10.1109/IDEAS.2001.938071
   Ratko OA, 2002, DATA KNOWL ENG, V42, P1, DOI 10.1016/S0169-023X(02)00023-X
   Robinson J. J., 1981, Paper, 32nd Annual Meeting of the European Association for Animal Production
   SEEGER B, 1990, VERY LARGE DATA BASES, P590
   Yu BG, 2003, ITCC 2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: COMPUTERS AND COMMUNICATIONS, PROCEEDINGS, P676, DOI 10.1109/ITCC.2003.1197612
NR 15
TC 7
Z9 8
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 817
EP 826
DI 10.1016/j.infsof.2006.09.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300001
DA 2024-07-18
ER

PT J
AU Zdun, U
   Strembeck, M
   Neumann, G
AF Zdun, Uwe
   Strembeck, Mark
   Neumann, Gustaf
TI Object-based and class-based composition of transitive mixins
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE mixins; mixin classes; software composition; object-oriented composition
AB In object-oriented composition, classes and class inheritance are applied to realize type relationships and reusable building blocks. Unfortunately, these two goals might be contradictory in many situations, leading to classes and inheritance hierarchies that are hard to reuse. Some approaches exist to remedy this problem, such as mixins, aspects, roles, and meta-objects. However, in all these approaches, situations where the mixins, aspects, roles, or meta-objects have complex interdependencies among each other are not well solved yet. In this paper, we propose transitive mixins as an extension of the mixin concept. This approach provides a simple and reusable solution to define "mixins of mixins". Moreover, because mixins can be easily realized on top of aspects, roles, and meta-objects, the same solution can also be applied to those other approaches. (c) 2006 Elsevier B.V. All rights reserved.
C1 Vienna Univ Technol, Distributed Syst Grp, Inst Informat Syst, Vienna, Austria.
   Vienna Univ Econ & BA, New Media Lab, Inst Informat Syst, Vienna, Austria.
C3 Technische Universitat Wien; Vienna University of Economics & Business
RP Zdun, U (corresponding author), Vienna Univ Technol, Distributed Syst Grp, Inst Informat Syst, Vienna, Austria.
EM zdun@infosys.tuwien.ac.at; Mark.Strembeck@wu-wien.ac.at;
   Gustaf.Neumann@wu-wien.ac.at
RI Zdun, Uwe/AFR-2161-2022
CR ALBANO A, 1993, P 19 INT C VER LARG
   [Anonymous], LECT NOTES COMPUTER
   BETTINI L, 2003, P WORKSH OBJ OR DEV, V82
   Bobrow D.G., 1988, ACM SIGPLAN NOTICES, V23
   BOCKISCH C, 2004, P INT C ASP OR SOFTW
   BRACHA G, 1990, P EUR C OBJ OR PROGR
   BRACHA G, 1992, P IEEE INT C COMP LA
   BURKE B, 2006, JBOSS ASPECT ORIENTE
   COOK WR, 1990, P ACM SIGPLAN SIGACT
   DEJONG M, 2006, TCL JAVA PROJECT
   Douence Remi., 2002, A model and a tool for event-based aspect-oriented programming
   FLATT M, 1998, P ACM SIGPLAN SIGACT
   Forman I, 1999, PUTTING METACLASSES
   Gamma Erich., 1994, DESIGN PATTERNS
   GOEDICKE M, 2000, P EUR C PATT LANG PR
   Goldberg A., 1989, Smalltalk-80 : The Language
   GOTTLOB G, 1996, ACM T INFORMATION SY, V14
   HERRMANN S, 2004, IEE P SOFTWARE, V151
   JOHNSON R, 1998, PATTERN LANGUAGE PRO, V3
   KICZALES G, 2001, COMMUNICATIONS ACM, V44
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Koppen C., 2004, P EUR INT WORKSH ASP
   KRISTENSEN B, 1996, P INT C OBJ OR INF S
   KRISTENSEN BB, 1996, THEORY PRACTICE OBJE, V2
   MAES P, 1987, ACM SIGPLAN NOTICES, V22
   MOON DA, 1986, SIGPLAN NOTICES, V21
   NEUMANN G, 2000, P TCL2K 7 USENIX TCL
   NEUMANN G, 2003, P 8 ACM S ACC CONTR
   NEUMANN G, 2001, P 8 ACM C COMP COMM
   OUSTERHOUT JK, 1990, P 1990 WINT USENIX C
   Pernici B., 1990, P C OFF INF SYST
   POPOVICI A, 2003, P INT C ASP OR SOFTW
   Scharli N., 2003, LECT NOTES COMPUTER, V2743
   SMARAGDAKIS Y, 1998, LECT NOTES COMPUTER, V1445
   SMITH B, 1984, P ACM SIGACT SIGPLAN
   STREMBECK M, 2004, ACM T INFORMATION SY, V7
   TARR P, 2006, HYPER J
   UNGAR D, 1987, P C OBJ OR PROGR SYS
   VANHILST M, 1996, P C OBJ OR PROGR SYS
   Wetherall D., 1995, P USENIX TCL TK WORK
   ZDUN U, 2006, FRAG
   ZDUN U, 2006, COMPUTER LANGUAGES S, V32
   ZDUN U, 2004, P EUR C SOFTW MAINT
   ZDUN U, 2004, IEE P SOFTWARE, V151
   ZHAO L, 1999, IEEE SOFTWARE, V16
NR 45
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 871
EP 891
DI 10.1016/j.infsof.2006.10.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300005
DA 2024-07-18
ER

PT J
AU Siau, K
   Wang, Y
AF Siau, Keng
   Wang, Yuan
TI Cognitive evaluation of information modeling methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE methods evaluation; information modeling methods; cognition
ID SYSTEMS-DEVELOPMENT; REPERTORY GRIDS; EXPLORATION
AB In the field of information system engineering, information modeling method is a technique to capture user requirements and to understand system complexity. The importance of information modeling has been recognized by practitioners and researchers, but little has been explored to analyze the available information modeling methods or to evaluate them in terms of their strengths, weaknesses, and effectiveness. This research analyzes six information-modeling methods: use case diagram, rich picture diagram, entity-relationship diagram, Trochim's concept mapping, repertory grid, and causal mapping. These information-modeling methods are analyzed from a cognitive perspective in order to better understand their nature, the assumptions, and the important features associated. The research contributes to the understanding of the information modeling methods and their potential uses and values during IS development. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Nebraska, Dept Management, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Siau, K (corresponding author), Univ Nebraska, Dept Management, CBA 209, Lincoln, NE 68588 USA.
EM ksiau@unl.edu
RI Siau, Keng/AFV-8999-2022
OI SIAU, Keng Leng/0000-0001-8139-4467
CR ACKERMANN F, 1993, COGNITIVE MAPPING GE
   Agarwal R, 1996, INT J HUM-COMPUT ST, V45, P639, DOI 10.1006/ijhc.1996.0072
   [Anonymous], 1983, The Psychology of Human-Computer Interaction
   ARMSTRONG T, 1979, PERS REV, V8, P20, DOI 10.1108/eb055373
   Avison D.E., 1990, MULTIVIEW EXPLORATIO
   Avison DE, 2003, COMMUN ACM, V46, P78, DOI 10.1145/602421.602423
   AVISON DE, 1991, COMPUT J, V34, P98, DOI 10.1093/comjnl/34.2.98
   AVISON DE, 1995, INFORMATION SYSTEMS
   Axelrod R, 1976, Structure of Decision
   BENYON D, 1987, COMPUT J, V30, P2, DOI 10.1093/comjnl/30.1.2
   BJORNANDERSON N, 1984, BEMELMANS
   BOLAND RJ, 1994, ORGAN SCI, V5, P456, DOI 10.1287/orsc.5.3.456
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   CATCHPOLE WM, 1987, THESIS ASTON U BIRM
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   COOK J, 1992, ANN C AM EV ASS SEAT
   COSSETTE P, 1992, J MANAGE STUD, V29, P325, DOI 10.1111/j.1467-6486.1992.tb00668.x
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   EASTERBYSMITH M, 1980, INT J MAN MACH STUD, V13, P3, DOI 10.1016/S0020-7373(80)80032-0
   EDEN C, 1992, J MANAGE STUD, V29, P261, DOI 10.1111/j.1467-6486.1992.tb00664.x
   EDEN C, 1988, EUR J OPER RES, V36, P1, DOI 10.1016/0377-2217(88)90002-1
   EDEN C, 1984, J OPER RES SOC, V35, P779, DOI 10.2307/2582627
   Eden C., 1979, THINKING ORG
   Eden C., 1983, MESSING PROBLEMS
   Fitzgerald G., 1990, Journal of Information Technology, V5, P5, DOI 10.1057/jit.1990.3
   FORD JD, 1984, ACAD MANAGE J, V27, P271, DOI 10.5465/255925
   GALVIN PF, 1989, EVAL PROGRAM PLANN, V12, P53, DOI 10.1016/0149-7189(89)90022-0
   GRAYSON TE, 1993, ANN C AM EV ASS DALL
   Gurowitz W.D., 1988, The Journal of the National Association of Student Personnel Administrators, V25, P226
   HISCHHEIM R, 1989, COMMUN ACM, V32, P1199
   HISCHHEIM R, 1985, INFORMATION SYSTEMS
   Hunter MG, 2000, INFORM SYST RES, V11, P93, DOI 10.1287/isre.11.1.93.11786
   HUTCHINGS AF, 1995, COMMUN ACM, V38, P72, DOI 10.1145/203356.203370
   Iivari J, 1998, INFORM SYST RES, V9, P164, DOI 10.1287/isre.9.2.164
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Jelinek M., 1994, Advances in managerial cognition and organizational information processing, P3
   Kelly G., 1955, Personal construct psychology
   Land F., 1982, Information and Management, V5, P59, DOI 10.1016/0378-7206(82)90039-8
   LANGFIELDSMITH K, 1992, J MANAGE STUD, V29, P350
   LATTA GF, 1992, J AM SOC INFORM SCI, V43, P115, DOI 10.1002/(SICI)1097-4571(199203)43:2<115::AID-ASI2>3.0.CO;2-I
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   LEWIS P, 1994, INFORMATION SYSTEMS
   LINTON R, 1989, EVAL PROGRAM PLANN, V12, P25, DOI 10.1016/0149-7189(89)90018-9
   Moynihan T, 1996, J INFORM TECHNOL, V11, P359, DOI 10.1057/jit.1996.9
   Nelson KM, 2000, MIS QUART, V24, P475, DOI 10.2307/3250971
   PHYTHIAN GJ, 1992, EUR J OPER RES, V56, P15, DOI 10.1016/0377-2217(92)90289-L
   PRATT PJ, 2002, CONCEPTS DATABASE MA
   Ringland G.A., 1988, APPROACHES KNOWLEDGE
   SHAVELSON RJ, 1972, J EDUC PSYCHOL, V63, P225, DOI 10.1037/h0032652
   Siau K, 2005, DATA KNOWL ENG, V55, P343, DOI 10.1016/j.datak.2004.12.006
   Siau K, 2005, IEEE T PROF COMMUN, V48, P269, DOI 10.1109/TPC.2005.853933
   Siau K, 2004, REQUIR ENG, V9, P229, DOI 10.1007/s00766-004-0203-7
   Siau K, 1998, P ANN HICSS, P312
   Siau K., 1999, J DATABASE MANAG, V10, P44, DOI DOI 10.4018/JDM.1999100105
   SIAU K, 2005, COMMUN ASSOC INF SYS, V16, P856
   Sircar S, 2001, MIS QUART, V25, P457, DOI 10.2307/3250991
   STILLINGS NA, 1987, COGNITIVE SCI INTR
   Tan FB, 2002, MIS QUART, V26, P39, DOI 10.2307/4132340
   TOLMAN EC, 1948, PSYCHOL REV, V55, P189, DOI 10.1037/h0061626
   Trochim W., 1993, WORKFORCE COMPETENCI
   Trochim W.M. K., 1996, Mapping Student Views Of The Benefits Of A Course Website
   Trochim W.M. K., 1989, INTRO CONCEPT MAPPIN
   Trochim W.M. K., 1999, RES METHODS KNOWLEDG
   Trochim W.M. K., 1996, An Internet-Based Concept Mapping of Accreditation Standards for Evaluation
   TROCHIM WMK, 1994, J CONSULT CLIN PSYCH, V62, P766, DOI 10.1037/0022-006X.62.4.766
   TROCHIM WMK, ANN C AM EV ASS DALL
   VALENTINE K, 1989, EVAL PROGRAM PLANN, V12, P17, DOI 10.1016/0149-7189(89)90017-7
   Zmud R. W., 1993, Journal of Management Information Systems, V9, P175
NR 70
TC 21
Z9 28
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 455
EP 474
DI 10.1016/j.infsof.2006.07.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 161VS
UT WOS:000246045200003
DA 2024-07-18
ER

PT J
AU Kuhn, A
   Ducasse, S
   Girba, T
AF Kuhn, Adrian
   Ducasse, Stephane
   Girba, Tudor
TI Semantic clustering: Identifying topics in source code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR 12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE reverse engineering; clustering; latent semantic indexing; visualization
ID RECOVERING TRACEABILITY LINKS; INFORMATION; SUPPORT
AB Many of the existing approaches in Software Comprehension focus on program structure or external documentation. However, by analyzing formal information the informal semantics contained in the vocabulary of source code are overlooked. To understand software as a whole, we need to enrich software analysis with the developer knowledge hidden in the code naming. This paper proposes the use of information retrieval to exploit linguistic information found in source code, such as identifier names and comments. We introduce Semantic Clustering, a technique based on Latent Semantic Indexing and clustering to group source artifacts that use similar vocabulary. We call these groups semantic clusters and we interpret them as linguistic topics that reveal the intention of the code. We compare the topics to each other, identify links between them, provide automatically retrieved labels, and use a visualization to illustrate how they are distributed over the system. Our approach is language independent as it works at the level of identifier names. To validate our approach we applied it on several case studies, two of which we present in this paper.
   Note: Some of the visualizations presented make heavy use of colors. Please obtain a color copy of the article for better understanding. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
   Univ Savoie, LISTIC, Language & Software Evolut Grp, F-73011 Chambery, France.
C3 University of Bern; Universite Savoie Mont Blanc
RP Kuhn, A (corresponding author), Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
EM akuhn@iam.unibe.ch; sduca@unv-savoie.fr; girba@iam.unibe.ch
OI Ducasse, Stephane/0000-0001-6070-6599
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], 2018, The Visual Display of Quantitative Information
   [Anonymous], 1953, PHILOS UNTERSUCHUNGE
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   BAEZYATES R, 1999, MODERN INFORM RETRIE
   Berry MW, 1995, SIAM REV, V37, P573, DOI 10.1137/1037127
   Bertin J., 1973, Semiologie graphique. Les diagrammes; Les reseaux Les cartes
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   BIGGERSTAFF TJ, 1993, P 15 INT C SOFTW ENG
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   DUCASSE S, 2005, TOOLS SOFTWARE MAINT, P55
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   DUMAIS ST, 1992, SIGIR 92 : PROCEEDINGS OF THE FIFTEENTH ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P233
   ELUCIA A, 2004, P 20 IEEE INT C SOFT, P306
   Foltz PW, 1999, P ASS ADV COMP ED AA, P939
   Frakes W. B., 1987, SIGIR Forum, V21, P30, DOI 10.1145/24634.24636
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Koskinen J, 2004, J SOFTW MAINT EVOL-R, V16, P187, DOI 10.1002/smr.292
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Kuhn A., 2005, P WORKSHOP PROGRAM C, P48
   KUHN A, 2006, THESIS U BERN
   LANDAUER T, 1991, PSYCHOL REV, V104, P211
   LING RF, 1973, COMMUN ACM, V16, P355, DOI 10.1145/362248.362263
   Lormans M., 2006, P 10 EUR C SOFTW MAI
   Lungu M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Maletic JI, 2000, PROC INT C TOOLS ART, P46, DOI 10.1109/TAI.2000.889845
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Nakov P., 2001, Recent Advances in Natural language processing-RANLP'2001, P187
   NAKOV P, 2001, 7 FUZZ DAYS COMP INT, P834
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   [No title captured]
NR 45
TC 272
Z9 331
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 230
EP 243
DI 10.1016/j.infsof.2006.10.017
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139AA
UT WOS:000244403200003
DA 2024-07-18
ER

PT J
AU He, Z
   Lai, R
   Marquez, A
AF He, Zhen
   Lai, Richard
   Marquez, Alonso
TI On using cache conscious clustering for improving OODBMS performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented databases; clustering; buffer replacement; caching;
   database optimisation
AB The two main techniques of improving I/O performance of Object Oriented Database Management Systems (OODBMS) are clustering and buffer replacement. Clustering is the placement of objects accessed near to each other in time into the same page. Buffer replacement involves the selection of a page to be evicted, when the buffer is full. The page evicted ideally should be the page needed least in the future. These two techniques both influence the likelihood of a requested object being memory resident. We believe an effective way of reducing disk I/O is to take advantage of the synergy that exists between clustering and buffer replacement. Hence, we design a framework, whereby clustering algorithms incorporating buffer replacement cache behaviour can be conveniently employed for enhancing the I/O performance of OODBMS. We call this new type of clustering algorithm, Cache Conscious Clustering (C3). In this paper, we present the C3 framework, and a C3 algorithm that we have developed, namely C3-GP. We have tested C3-GP against three well known clustering algorithms. The results show that C3-GP out performs them by up to 40% when using popular buffer replacement algorithms such as LRU and CLOCK. C3-GP offers the same performance as the best existing clustering algorithm when the buffer size compared to the database size is very small. (C) 2006 Elsevier B.V. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
   Australian Natl Univ, Dept Comp Sci, Canberra, ACT 0200, Australia.
C3 La Trobe University; Australian National University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Melbourne, Vic 3086, Australia.
EM z.he@latrobe.edu.au; lai@cs.latrobe.edu.au; alonso@cs.anu.edu.au
OI He, Zhen/0000-0003-0302-5775
CR Ailamaki A, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P266
   BANERJEE J, 1988, IEEE T SOFTWARE ENG, V14, P1684, DOI 10.1109/32.9055
   BELADY LA, 1966, IBM SYST J, V5, P78, DOI 10.1147/sj.52.0078
   BENZAKEN V, 1990, 5090 ALT
   CAREY M, 1991, P ACM SIGMOD INT C M, P357
   CHILIMBI TRISHULM., 1999, PLDI 99 PROC ACM SIG, P13
   Darmont J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P254
   Darmont J, 1998, LECT NOTES COMPUT SC, V1377, P326
   DENNING PJ, 1968, COMMUN ACM, V11, P323, DOI 10.1145/363095.363141
   DREW P, 1990, VERY LARGE DATA BASES, P135
   FRANKLIN MJ, 1993, P INT C VER LARG DAT, P641
   GERLHOF C, 1993, P INT C FDN DAT ORG, P301
   Gray Jim., 1987, Proceedings of the 1987 ACM SIGMOD international conference on Management of data, P395
   HE Z, 2000, LNCS, V1944, P86
   HE Z, 2001, P 12 INT C DAT EXP S, P815
   Huang XL, 2004, ACM SIGPLAN NOTICES, V39, P69, DOI 10.1145/1035292.1028983
   Johnson T., 1994, P 20 INT C VER LARG, P439
   KNAFLA N, 1999, THESIS U EDINBURGH
   Lee D, 1999, PERFORMANCE EVALUATION REVIEW, SPECIAL ISSUE, VOL 27 NO 1, JUNE 1999, P134, DOI 10.1145/301464.301487
   NICOLA VF, 1992, P 1992 ACM SIGMETRIC, P35
   ONEIL EJ, 1993, P ACM SIGMOD INT C M, P297
   ROBINSON JT, 1990, PERF E R SI, V18, P134, DOI 10.1145/98460.98523
   RUBIN S, 2002, P 29 ACM SIGPLAN SIG, P140
   STAMOS JW, 1984, ACM T COMPUT SYST, V2, P155, DOI 10.1145/190.194
   TSANGARIS EMM, 1992, THESIS U WISCONSIN M
   YUE PC, 1973, J ACM, V20, P624, DOI 10.1145/321784.321790
NR 26
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1073
EP 1082
DI 10.1016/j.infsof.2006.01.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400008
DA 2024-07-18
ER

PT J
AU Kim, S
   Park, H
   Hong, S
AF Kim, Saehwa
   Park, Hyong
   Hong, Seongsoo
TI Scenario-based multitasking for real-time object-oriented models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented real-time system design; embedded software development
   methodology; automated multitasking code synthesis; object-oriented
   modeling tools; unified modeling language (UML)
AB Contemporary embedded systems quite often employ extremely complicated software consisting of a number of interrelated components, and this has made object-oriented design methodologies widely used in practice. To implement an object-oriented model in given target hardware, it is imperative to derive a set of tasks from the designed objects. This process of determining tasks and the events they handle greatly influences the real-time performance of the resultant system including response times and real-time guarantees. However, the innate discrepancies between objects and tasks make this exceedingly difficult, and many developers are forced to find their task sets through trial and error. In this paper, we propose Scenario-based Implementation Synthesis Architecture (SISA), an architecture consisting of a method for deriving a task set from a given object-oriented model and the development tools and run-time system architecture to support the method. A system developed with SISA guarantees the optimal response time for each event while deriving the smallest possible number of tasks. We have fully implemented SISA by extending the RoseRT development tool and applied it to an existing industrial PBX (private branch exchange) system. The experimental results show that SISA outperforms the best known conventional techniques by reducing maximum response times an average of 30.3%. (c) 2005 Elsevier B.V. All rights reserved.
C1 Seoul Natl Univ, Sch Elect Engn & Comp Sci, Real Time Operat Syst Lab, Seoul 151742, South Korea.
C3 Seoul National University (SNU)
RP Kim, S (corresponding author), Seoul Natl Univ, Sch Elect Engn & Comp Sci, Real Time Operat Syst Lab, 052,San 56-1, Seoul 151742, South Korea.
EM ksaehwa@redwood.snu.ac.kr; parkjy@redwood.snu.ac.kr;
   sshong@redwood.snu.ac.kr
CR [Anonymous], P ACM S DES INT SYST
   [Anonymous], 1996, KVINNEFORSKNING
   [Anonymous], 1995, Scenario-based design: Envisioning work and technology in system development
   [Anonymous], 1999, DOING HARD TIME DEV
   *ARTISAN SOFTW TOO, REAL TIM STUD
   Awad Maher., 1996, Object-Oriented Technology for Real-Time Systems, A Practical Approach using OMT and Fusion
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bennett AJ, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P67, DOI 10.1109/MASCOT.2004.1348183
   BURNS A, 1996, REAL TIME SYSTEMS SP, P32
   CARROLL JM, 1994, INT J HUM-COMPUT ST, V41, P243, DOI 10.1006/ijhc.1994.1058
   D'Ambrogio A., 2005, P ACM 5 INT WORKSHOP, P75, DOI DOI 10.1145/1071021.1071029
   DOUGLASS BP, 1999, REAL TIME UML DEV EF
   GALRAN D, 1992, P ACM SIGSOFT S SOFT, P68
   Gaudreau D, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P110, DOI 10.1109/RTTAS.1996.509528
   Gomaa H., 2000, DESIGNING CONCURRENT
   Gu G., 2003, P 2003 C CTR ADV STU, P66
   GULLEKSON G, 1996, DESIGN PATTERNS REAL
   *I LOG INC, RHAPS TOOLS
   *IBM RAT SOFTW COR, 2000, RAT ROS REALTIME US
   *IEEE OP GROUP, 2004, BAS SPEC
   Jin Dongxi, 2002, P 3 INT WORKSH SOFTW, P243
   Kaindl H, 2000, IEEE T SYST MAN CY A, V30, P537, DOI 10.1109/3468.867861
   Karsai G., 1998, Proceedings IEEE ECBS, P226
   KRUGER I, 1999, MSCS STATECHARTS DIS, P61
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   MUKERJI J, 2003, MODEL DRIVEN ARCHITE
   *OBJ MAN GROUP, 2005, UN MOD LANG UML VERS
   *OBJ MAN GROUP, PTC20030901 OMG
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   RUDOLPH E, 1996, P IFIP TC6 WG6 1 INT, P1629
   Saiedian H, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.183
   Saksena M, 1997, REAL TIM SYST SYMP P, P240, DOI 10.1109/REAL.1997.641286
   Saksena M., 2000, Proceedings Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing (ISORC 2000) (Cat. No. PR00607), P360, DOI 10.1109/ISORC.2000.839552
   Saksena M, 2000, EUROMICRO, P101, DOI 10.1109/EMRTS.2000.853997
   Saksena M, 1998, REAL TIM SYST SYMP P, P92, DOI 10.1109/REAL.1998.739734
   Selic B., 1994, REAL TIME OBJECT ORI
   SIMONYI C, 1996, INTENTIONAL PROGRAMM
   Texel P.P., 1997, USE CASES COMBINED B
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Wai Ming Ho, 1999, 14th IEEE International Conference on Automated Software Engineering, P275, DOI 10.1109/ASE.1999.802320
   WANG Y, 1999, P 6 INT C REAL TIM C, P328
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Yau SS, 2002, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P45, DOI 10.1109/WORDS.2002.1000035
   ZALEWSKI J, 1999, P 24 IFAC IFIP WORKS
NR 46
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 820
EP 835
DI 10.1016/j.infsof.2005.10.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500006
DA 2024-07-18
ER

PT J
AU Idani, A
   Ledru, Y
AF Idani, A
   Ledru, Y
TI Dynamic graphical UML views from formal B specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information systems; formal specifications; UML; integrated methods
ID MODEL; DIAGRAMS
AB This paper addresses the graphical representation of the behaviour of B specifications, using state transition diagrams. These diagrams can help understand the specification for stakeholders who are not familiar with the B method, such as customers or certification authorities. The paper first discusses the principles of the graphical representation on a deterministic example, featuring a small set of states. It then discusses the representation of specifications which feature a large or infinite set of states, or which are non-deterministic. Abstraction techniques are used to overcome these difficulties. They result in a variety of possible representations. Finally, three techniques, based on animation and proof, are presented to help construct the diagrams. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Grenoble 1, Lab Logiciels Syst Reseaux, IMAG, F-38402 St Martin Dheres, France.
C3 Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA)
RP Idani, A (corresponding author), Univ Grenoble 1, Lab Logiciels Syst Reseaux, IMAG, BP 72, F-38402 St Martin Dheres, France.
EM akram.idani@imag.fr
OI Idani, Akram/0000-0003-2267-3639
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J-R., 1996, 1 B C
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   Behm P, 1999, LECT NOTES COMPUT SC, V1708, P369
   Bert D, 2000, LECT NOTES COMPUT SC, V1945, P235
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CANSELL D, 2002, LNCS, V1945, P380
   DICK J, 1991, LECT NOTES COMPUT SC, V550, P37
   Dupuy S, 1998, LECT NOTES COMPUT SC, V1493, P347, DOI 10.1007/BFb0056043
   ESSAME D, 2004, TECH SCI INFORM, V23, P929
   Hallerstede S, 2003, LECT NOTES COMPUT SC, V2651, P101
   Hammad A, 2002, LECT NOTES COMPUT SC, V2495, P511
   HAREL D, 1987, SCI COMPUTER PROGRAM, V8
   HUNG LD, 2002, LNCS, V2335, P109
   Idani A., 2003, DOCUMENTATION GRAPHI
   LALEAU R, 2002, LNCS, V2272, P517
   LAMPORT L, 1995, IEEE T SOFTWARE ENG, V21, P768, DOI 10.1109/32.464544
   LANO K, 1996, FORMAL METHODS OBJEC, pCH7
   Larsen P., 1993, LNCS, V670, P268
   LEDRU Y, 2005, MODELING AIRPORT SEC
   Legeard B., 2002, LNCS, V2391
   LEGEARD B, 2002, LNCS, V2272, P309
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Meyer E, 1999, LECT NOTES COMPUT SC, V1708, P875
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pouzancre G, 2003, LECT NOTES COMPUT SC, V2651, P98
   POUZANCRE G, 2003, TECH SCI INFORM, V22, P119
   SATPATHY M, 2001, P IEEE IFIP JOINT WO, P133
   SEKERINSKI E, 1998, LNCS, V1393
   *STAND GROUP, 1998, CHAOS REP
   STOULS N, 2003, RAPPORT DEA
   TATIBOUET B, 2003, ICSSEA 2003 16 INT C
   The Standish Group, 2001, EXTR CHAOS
   van Lamsweerde Axel., 2000, ICSE, P147
   VANAERTRYCK L, 1997, ICFEM 97 1 IEEE INT
   Zimmerman MK, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P33, DOI 10.1109/ICSE.2002.1007954
NR 36
TC 10
Z9 14
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 154
EP 169
DI 10.1016/j.infsof.2005.03.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027SZ
UT WOS:000236437200003
DA 2024-07-18
ER

PT J
AU Kim, WY
   Lee, BS
   Whang, KY
AF Kim, WY
   Lee, BS
   Whang, KY
TI Partial rollback in object-oriented/object-relational database
   management systems with dual buffer
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE transaction rollback; savepoint; dual buffer
AB Partial rollback mechanism has been widely supported by many database management systems (DBMSs). It allows a transaction to be rolled back partially, that is, only back to a certain savepoint set by the user. A partial rollback, however, makes the DBMS buffer management complicated because it requires the DBMS to restore the state of not only the database but also the buffers. There are several literatures addressing such a partial rollback in a relational DBMS (RDBMS), which has page buffer only. However, to our knowledge, there exists no literature addressing it in an object-oriented/relational DBMS (OO/ORDBMS). The RDBMS partial rollback scheme cannot be applied to OO/ORDBMSs directly. The reason is that, unlike RDBMSs, many OO/ORDBMSs use dual buffer which consists of object buffer and page buffer. In this paper, we thoroughly study the partial rollback schemes for OO/ORDBMSs with dual buffer. For this, we propose four different partial rollback schemes which are based on (single) page buffer, (single) object buffer, dual buffer using a soft log, and dual buffer using shadows, respectively. The schemes proposed are practical enough to be implemented in a real OO/ORDBMS. The results of performance evaluations show that the dual buffer-based scheme using shadows achieves the best performance. (c) 2005 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, AITrc, Dept Comp Sci, Taejon, South Korea.
   Univ Vermont, Dept Comp Sci, Burlington, VT USA.
C3 Korea Advanced Institute of Science & Technology (KAIST); University of
   Vermont
RP ETRI, Serv Res Team, Taejon 305350, South Korea.
EM wykim@mozart.kaist.ac.kr; bstee@cem.uvm.edu; kywhang@mozart.kaist.ac.kr
RI Whang, Kyu-Young/C-2009-2011
CR [Anonymous], ACM COMPUTING SURVEY, DOI DOI 10.1145/356842.356847
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   Franklin MJ, 1997, ACM T DATABASE SYST, V22, P315, DOI 10.1145/261124.261125
   FUSSELL D, 1981, P MANAGEMENT DATA AC, P65
   KIM SH, 1909, P 6 INT C DAT SYST A, P303
   Kim W., 1990, INTRO OBJECT ORIENTE
   Loomis M E.S., 1995, Object Databases: The Essentials
   MOHAN C, 1992, ACM T DATABASE SYST, V17, P94, DOI 10.1145/128765.128770
   *OR CORP, 1997, OR CALL INT PROGR GU
   OZSU M, 1994, DISTRIBUTED OBJECT M
   PARK CM, 1998, P 8 INT C WORKSH PER
   RAY J, 1993, T PROCESSING CONCEPT
   Subramanian Muralidhar., 1999, IEEE DATA ENG B, V22, P27
   *UNISQL, 1996, APPL PROGR INT REF M
NR 14
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2006
VL 48
IS 2
BP 121
EP 132
DI 10.1016/j.infsof.2005.03.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OD
UT WOS:000234398100004
DA 2024-07-18
ER

PT J
AU Chen, TY
   Kuo, FC
   Merkel, RG
   Ng, SP
AF Chen, TY
   Kuo, FC
   Merkel, RG
   Ng, SP
TI Mirror adaptive random testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Quality Software (QSIC 2003)
CY SEP 25-26, 2003
CL Beijing, PEOPLES R CHINA
DE mirroring; adaptive random testing; random testing; black-box testing;
   test case selection; software testing
ID PROPORTIONAL SAMPLING STRATEGY; SOFTWARE
AB Recently, adaptive random testing (ART) has been introduced to improve the fault-detection effectiveness of random testing for non-point types of failure patterns. However, ART requires additional computations to ensure an even spread of test cases, which may render ART less cost-effective than random testing. This paper presents a new technique, namely mirror ART, to reduce these computations. It is an integration of the technique of mirroring and ART. Our simulation results clearly show that mirror ART does improve the cost-effectiveness of ART. (C) 2004 Elsevier B.V. All rights reserved.
C1 Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
C3 Swinburne University of Technology
RP Kuo, FC (corresponding author), Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
EM dkuo@it.swin.edu.au
OI Merkel, Robert/0000-0002-0658-9800; Ng, Sebastian/0000-0002-2074-6673;
   Chen, Tsong/0000-0003-3578-0994
CR [Anonymous], 2010, CAMBRIDGE DICT STAT, DOI DOI 10.1017/CBO9780511779633
   [Anonymous], UNPUB
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan KP, 2003, LECT NOTES COMPUT SC, V2655, P368
   Chan KP, 2002, LECT NOTES COMPUT SC, V2349, P321
   CHAN KP, 2004, IN PRESS 28 ANN INT
   Chen TY, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P4, DOI 10.1109/QSIC.2003.1319079
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   COBB RH, 1990, IEEE SOFTWARE, V7, P44, DOI 10.1109/52.60601
   MAK IK, 1997, THESIS U MELBOURNE A
   Miller G. W., 1986, Northern Journal of Applied Forestry, V3, P19
   Myers Glenford J., 2011, The Art of Software Testing
   THAYER R, 1978, SOFTWARE RELIABILITY
   WHITE LJ, 1987, ADV COMPUT, V26, P335, DOI 10.1016/S0065-2458(08)60010-8
NR 14
TC 57
Z9 61
U1 1
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2004
VL 46
IS 15
BP 1001
EP 1010
DI 10.1016/j.infsof.2004.07.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 876GF
UT WOS:000225484000003
DA 2024-07-18
ER

PT J
AU Chhabra, JK
   Aggarwal, KK
   Singh, Y
AF Chhabra, JK
   Aggarwal, KK
   Singh, Y
TI Measurement of object-oriented software spatial complexity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented software; software metrics; understandability; spatial
   complexity; psychological complexity
ID PROGRAM READABILITY; METRICS
AB One of the important activities of the maintenance phase is to understand the source-code first, and then change it. Understandability of the software gets affected by psychological complexity of the source-code and cognitive abilities are needed to understand it. The correlation between the orientation and location of various entities with their processing needs to be established by the programmers, which requires spatial abilities. These spatial abilities play an important role in object-oriented software, in which the use of data as well as the methods of the class needs to be understood in a combined way. This paper presents two measures of spatial complexity of object-oriented software, which are based on definition and usage of classes and objects. The values of proposed measures get affected suitably because of inheritance and polymorphism as well, due to change in the distances. The significance of object-oriented spatial complexity has been demonstrated with the help of 15 object-oriented projects of varied length and results have been validated with the help of reverse engineering data and perfective maintenance data. (C) 2004 Elsevier B.V. All rights reserved.
C1 Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
   GGS Indraprastha Univ, Delhi 110006, India.
   GGS Indraprastha Univ, Sch Informat Technol, Delhi 110006, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Kurukshetra; GGS Indraprastha University; GGS Indraprastha
   University
RP Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
EM jitenderchhabra@rediffmail.com; aggarwal_krishan@hotmail.com;
   ys66@rediffmail.com
RI Chhabra, Jitender Kumar/A-1026-2016
OI Chhabra, Jitender Kumar/0000-0002-2257-0982
CR AGGARWAL KK, 2002, ACM SIGSOFT, V27, P63
   AGGARWAL KK, 2004, INT J MANAGEMENT SYS
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P 1995 S SOFTW REUS
   Baddeley A., 1997, Human Memory: Theory and Practice
   BILOW SC, 1992, APPL GRAPH THEORETIC
   Booch G., 2002, UNIFIED MODELING LAN, V2nd
   Briand L., 1994, Defining and validating high-level design metrics
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chhabra JK, 2003, INFORM SOFTWARE TECH, V45, P539, DOI [10.1016/SO950-5849(03)00033-8, 10.1016/S0950-5849(03)00033-8]
   CHHABRA JK, 2001, SOFTWARE MAINTENANCE, P63
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   DeYoung GerritE., 1982, Proceedings of the 1982 conference on Human factors in computing systems, P223
   Douce Christopher., 1999, Spatial measures of software complexity
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   EMAM EK, 2002, IEEE T SOFTWARE ENG, V28, P494
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   FENTON NF, 2002, SOFTWARE METRICS RIG
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   GORDON RD, 1979, IEEE T SOFTWARE ENG, V5, P121, DOI 10.1109/TSE.1979.234168
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   Hitz M., 1995, PROC INT S APPL CORP
   Laird J. E., 1986, Machine Learning, V1, P11, DOI 10.1007/BF00116249
   LAIRD JE, 1987, ARTIF INTELL, V33, P1, DOI 10.1016/0004-3702(87)90050-6
   LAITNEN K, 1996, ACM SIGSOFT, V21, P81
   LI W, 1995, J OBJECT-ORIENT PROG, V8, P48
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   MCLAUGHLIN H, 1962, J READING, V22, P639
   MOREAU DR, 1989, J SYST SOFTWARE, V10, P23, DOI 10.1016/0164-1212(89)90059-9
   Parikh G., 1983, TUTORIAL SOFTWARE MA
   PFLEEGER SL, 2002, SOFTWARE ENG THEORY
   PFLEEGER SL, 1990, P 1990 INT FUNCT POI, P181
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   SI L, 2001, P 10 INT C INF KNOWL, P512
   SINGH Y, 1998, ACM SIGSOFT, V23, P81
   SOAR RI, 1985, IEEE T PATTERN ANAL, V7, P561
   Tegarden D.P., 1992, Proceedings of the Twenty-Fifth Hawaii International Conference on System Sciences, V4, P359, DOI DOI 10.1109/HICSS.1992.183365
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   WILDE N, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.207232
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
NR 47
TC 16
Z9 16
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2004
VL 46
IS 10
BP 689
EP 699
DI 10.1016/j.infsof.2004.01.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DF
UT WOS:000221589200005
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, M
TI Top-down and bottom-up expert estimation of software development effort
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE expert estimation; top-down estimation; bottom-up estimation
ID COST; IMPACT
AB Expert estimation of software development effort may follow top-down or bottom-up strategies, i.e. the total effort estimate may be based on properties of the project as a whole and distributed over project activities (top-down) or calculated as the sum of the project activity estimates (bottom-up). The explorative study reported in this paper examines differences between these two strategies based on measurement and video recording of the discussions of seven estimation teams. Each estimation team applied a top-down estimation strategy on one project and a bottom-up estimation strategy on another. The main contribution of the study is the observation that the recall of very similar previously completed projects seemed to be a pre-condition for accurate top-down strategy based estimates, i.e. the abilities of the software estimators to transfer estimation experience from less similar projects was poor. This suggests that software companies should apply the bottom-up strategy unless the estimators have experience from, or access to, very similar projects. (C) 2003 Elsevier B.V. All rights reserved.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], EUR J INF SYST
   [Anonymous], P INT C PROJ MAN
   ARMSTRONG JS, 1975, ORGAN BEHAV HUM PERF, V14, P257, DOI 10.1016/0030-5073(75)90028-8
   ATKINSON K, 1994, P EUR SOFTW COST MOD
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Bowden P, 2000, J SYST SOFTWARE, V51, P87, DOI 10.1016/S0164-1212(99)00114-4
   BROWN NR, 1992, MEM COGNITION, V20, P406, DOI 10.3758/BF03210924
   BUEHLER R, 1994, J PERS SOC PSYCHOL, V67, P366, DOI 10.1037/0022-3514.67.3.366
   Campbell DT., 1999, PRIMER REGRESSION AR
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Forsyth D.R., 1999, GROUP DYNAMICS, VThird
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   JORGENSEN M, 2003, IN PRESS J SYSTEMS S
   JORGENSEN M, 1997, P NORW INF C VOSS NO, P7
   JORGENSEN M, 2004, IN PRESS J SYSTEMS S
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   KUSTERS RJ, 1990, INFORM SOFTWARE TECH, V32, P187, DOI 10.1016/0950-5849(90)90176-R
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   MacGregor D. G., 1991, Journal of Behavioral Decision Making, V4, P101, DOI 10.1002/bdm.3960040207
   MACGREGOR DG, 2001, HDB RES PRACTITIONER, P107
   MOLOKKEN K, 2002, THESIS U OSLO
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Paynter J., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P150, DOI 10.1109/SEEP.1996.533994
   PENGELLY A, 1995, SOFTWARE ENG J, V10, P162, DOI 10.1049/sej.1995.0022
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   WALKERDEN F, 1999, J EMPIRICAL SOFTWARE, V4, P135
   Yokoyama Y, 1998, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.1998.671607
NR 35
TC 56
Z9 66
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2004
VL 46
IS 1
BP 3
EP 16
DI 10.1016/S0950-5849(03)00093-4
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762HG
UT WOS:000187965600001
DA 2024-07-18
ER

PT J
AU Barthelmess, P
AF Barthelmess, P
TI Collaboration and coordination in process-centered software development
   environments: a review of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE process-centered software development environments; software development
   support systems; collaborative system development
ID PROCESS MODEL EVOLUTION
AB Process-centered software development environments are systems that provide automated support for software development activities. Such environments mediate the efforts of potentially large groups of developers working on a common project. This mediation is based on runtime support for actual work performance based on formal representations of work.
   In the present work, we survey and assess the contributions of the software process literature under the perspective of support for collaboration and coordination. A broad range of alternative approaches to various aspects of representation and runtime support are identified, based on the analysis of an expressive number of systems. The identified functionality can serve both as a guide for the evaluation and selection of systems of this kind as well as a roadmap for the development of new, improved systems. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Colorado, Boulder, CO 80309 USA.
C3 University of Colorado System; University of Colorado Boulder
RP Univ Colorado, Campus Box 430, Boulder, CO 80309 USA.
EM barthelm@colorado.edu
CR Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   AMBRIOLA V, 1990, ACM SOFTW ENG NOTES, V15, P183
   [Anonymous], P 5 ACM SIGSOFT SOFT
   ARMENISE P, 1992, 4 INT C SOFTW ENG KN, P455
   Arnold J. E., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P107, DOI 10.1109/ISPW.1994.512777
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Bandinelli S., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P50, DOI 10.1109/ISPW.1994.512761
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   Bandinelli S., 1994, SOFTWARE PROCESS MOD, P223
   Bandinelli Sergio, 1993, P WORKSH COMP SUPP C
   BARDRAM J, 1998, CSCW 98, P89
   BARGHOUTI N, 1993, P 4 EUR SOFTW ENG C, P451
   Barghouti N. S., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P70, DOI 10.1109/ISPW.1994.512767
   Barghouti N. S., 1992, SIGSOFT Software Engineering Notes, V17, P21, DOI 10.1145/142882.142907
   BARGHOUTI NS, 1991, COMPUT SURV, V23, P269, DOI 10.1145/116873.116875
   BARGHOUTI NS, 1993, P 4 EUR SOFTW ENG C, P70
   Belkhatir N., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P90, DOI 10.1109/ISPW.1994.512772
   BELKHATIR N, 1994, SOFTWARE PROCESS MOD, P187
   Ben-Shaul I. Z., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P114, DOI 10.1109/ISPW.1994.512779
   BENSHAUL I, 1996, 7 ISR C COMP SYST SO, P140
   BENSHAUL IZ, 1994, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.1994.296777
   BENSHAUL IZ, 1995, THESIS COLUMBIA U
   BOLCER G, 1998, THESIS U CALIFORNIA
   BORGIDA A, 1999, P INT JOINT C WORK A, P59
   BRIAND L, 1995, PROC INT CONF SOFTW, P133, DOI 10.1145/225014.225027
   Bronisz D., 1993, Proceedings 1993 Software Engineering Environments, P24, DOI 10.1109/SEE.1993.388424
   Brooks Frederick P., 1995, The mythical man-month
   Bruynooghe R.F., 1994, SOFTWARE PROCESS MOD, P293
   CAIN BG, 1993, P 2 INT C SOFTW PROC, P125
   Canals G. ALF, 1994, SOFTWARE PROCESS MOD, P153
   Conradi R., 1994, SOFTWARE PROCESS MOD, P9
   Conradi R., 1994, SOFTWARE PROCESS MOD, P33
   Cugola G, 1998, IEEE T SOFTWARE ENG, V24, P982, DOI 10.1109/32.730546
   CUGOLA G, 1999, IEEE 8 INT WORKSH EN, P32
   CUGOLA G, 1995, P 17 INT C SOFTW ENG, P55
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   *DIG EQ CORP, 1999, DEC FUS HOM PAG
   DINITTO E, 1995, 4 EUR WORKSH SOFTW P
   Doppke J. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P1, DOI 10.1145/268411.268415
   ELMAGARMID A, 1992, T MODELS ADV DAT APP
   ENGELS G, 1996, TRENDS SOFTWARE SOFT, P71
   FERNSTROM C, 1993, P 2 INT C SOFTW PROC, P12
   Finkelstein A., 1994, Software process modelling and technology
   FUGGETA A, 1996, TRENDS SOFTWARE SOFT
   GARG P, 1996, TRENDS SOFTWARE SOFT, pCH2
   GERSON EM, 1986, ACM T OFF INF SYST, V4, P257, DOI 10.1145/214427.214431
   Ghezzi C., 1991, Fundamentals of Software Engineering
   GHEZZI C, 1994, P 9 INT SOFTW PROC W, pR7
   Gruhn V., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P37, DOI 10.1109/ISPW.1994.512757
   Grundy J. C., 1998, Automated Software Engineering, V5, P27, DOI 10.1023/A:1008606308460
   HEIMBIGNER D, 1990, P 6 INT SOFTW WORKSH, P99
   HEIMBIGNER D, 1992, P 5 ACM SIGSOFT S SO, P159
   HEINEMAN GT, 1992, IEEE EXPERT, V7, P26, DOI 10.1109/64.180406
   HUFF K, 1996, TRENDS SOFTWARE SOFT, pCH1
   HUFF K, 1988, P ACM SIGSOFT SIGPLA, P97
   JACCHERI ML, 1993, IEEE T SOFTWARE ENG, V19, P1145, DOI 10.1109/32.249660
   Junkermann G., 1994, Software Process Modelling and Technology, P103
   KAISER GE, 1994, TRENDS SOFTWARE, P39
   Kaplan S. M., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P100, DOI 10.1109/ISPW.1994.512775
   KAPLAN SM, 1992, PROC COLL SOFTW P 5
   KLEIN M, 2000, J COLLABORATIVE COMP, V9
   LaMarca A., 1999, ECSCW'99. Proceedings of the Sixth European Conference on Computer Supported Cooperative Work, P1
   LIU C, 1993, P 4 EUR SOFTW ENG C
   LONCHAMP J, 1994, SOFTWARE PROCESS MOD, P335
   Marlin C., 1993, Proceedings 1993 Software Engineering Environments, P35, DOI 10.1109/SEE.1993.388423
   Montangero C., 1994, SOFTWARE PROCESS MOD, P131
   NARAYANASWAMY K, 1992, P 4 INT C COMP SUPP, P257
   NGUYEN M, 1993, WORKSPACE MANAGEMENT
   Nguyen MN, 1997, PROC INT CONF SOFTW, P390, DOI 10.1145/253228.253363
   Nuseibeh B., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P164, DOI 10.1109/IWSSD.1996.501161
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Perry D. E., 1994, Proceedings. Ninth International Software Process Workshop (Cat. NO.94TH8003), P138, DOI 10.1109/ISPW.1994.512786
   Peuschel B., 1992, P 14 INT C SOFTW ENG
   *PRINC CYB WEB, 1998, WEB DICT CYB SYST
   ROBINSON M, 1991, PROCEEDINGS OF THE SECOND EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK : ECSCW 91, P219
   SAASTAMOINEN H, 1995, JYVSKYL STUDIES COMP
   SNOW RC, 1994, REPROD BIOL, P1
   SOKOLSKY MH, 1991, SOFTWARE ENG J, V6, P435, DOI 10.1049/sej.1991.0043
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   *SUN MICR, 1997, TOOLT US GUID
   SUTTON SM, 1990, P 4 ACM SIGSOFT S SO, P206
   TOMBROS D, 1995, 9528 U ZUR
   Warboys BC, 1999, LECT NOTES COMPUT SC, V1687, P75, DOI 10.1145/318774.318787
   WOLF AL, 1993, P 8 INT SOFTW PROC W, P148
   YU E, 1993, P C ORG COMP SYST MI, P258, DOI DOI 10.1145/168555.168584
NR 86
TC 15
Z9 18
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2003
VL 45
IS 13
BP 911
EP 928
DI 10.1016/S0950-5849(03)00091-0
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 725AJ
UT WOS:000185520200003
DA 2024-07-18
ER

PT J
AU Marín, N
   Medina, JM
   Pons, O
   Sánchez, D
   Vila, MA
AF Marín, N
   Medina, JM
   Pons, O
   Sánchez, D
   Vila, MA
TI Complex object comparison in a fuzzy context
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented model; fuzzy database; objects resemblance; inclusion
   degree
ID UNCERTAINTY; IMPRECISION
AB The comparison concept plays a determining role in many problems related to object management in an Object-Oriented Database Model. Object comparison is appropriately managed in a crisp object-oriented context by means of the concepts of identity and value equality. However. when dealing with imprecise or imperfect objects, questions like 'To which extent may two objects be the same one?' or 'How similar are two objects?' have not a clear answer, because the equality concept becomes fuzzy. In this paper we present a set of operators that are useful when comparing objects in a fuzzy environment. In particular, we introduce a generalized resemblance degree between two fuzzy sets of imprecise objects and a generalized resemblance degree to compare complex fuzzy objects within a given class. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Granada, Dept Comp Sci & Artificial Intelligence, Intelligent Databases & Informat Syst Res Grp, E-18071 Granada, Andalucia, Spain.
C3 University of Granada
EM nicm@decsai.ugr.es; medina@decsai.ugr.es; opc@decsai.ugr.es;
   daniel@decsai.ugr.es; vila@decsai.ugr.es
RI Fernandez, Daniel Sanchez/E-1028-2012; Marín Ruiz, Nicolás/C-2399-2012;
   Sanchez, Daniel/HJP-1158-2023; PONS, OLGA/C-6699-2012; Vila Miranda,
   Amparo/B-1840-2012; Medina-Rodriguez, Juan Miguel/C-2430-2012
OI Fernandez, Daniel Sanchez/0000-0002-6048-3994; Marín Ruiz,
   Nicolás/0000-0001-5604-5150; Vila Miranda, Amparo/0000-0002-2773-3306;
   Medina-Rodriguez, Juan Miguel/0000-0002-0964-7324
CR [Anonymous], 1986, FUZZY LOGIC KNOWLEDG
   [Anonymous], 1992, P INT C FUZZ SETS NE
   Berler M., 2000, The Object Data Standard: ODMG 3.0
   Gonzalez A, 1999, INT J APPROX REASON, V21, P233, DOI 10.1016/S0888-613X(99)00024-9
   KOYUNCU M, 2001, P IFSA NAFIPS WORLD
   Lee J, 2001, INT J INTELL SYST, V16, P807, DOI 10.1002/int.1036
   MARIN N, 2001, P IFSA NAFIPS WORLD
   Rossazza JP, 1997, ADV FUZZY SYS: APPL, V13, P21
   SPELL B, 2000, PROFESSIONAL JAVA PR
   STROUSTRUP B, 1988, IEEE SOFTWARE
   Vila MA, 1996, INT J INTELL SYST, V11, P791, DOI 10.1002/(SICI)1098-111X(199610)11:10<791::AID-INT6>3.0.CO;2-U
   Vila MA, 1997, ORDERED WEIGHTED AVERAGING OPERATORS, P258
   VILA MA, 1995, FUZZY LOGIC SOFT COM
   YAGER RR, 1988, IEEE T SYST MAN CYB, V18, P183, DOI 10.1109/21.87068
   YAGER RR, 1993, FUZZY SET SYST, V59, P125, DOI 10.1016/0165-0114(93)90194-M
   ZADEH LA, 1975, INFORM SCIENCES, V9, P43, DOI 10.1016/0020-0255(75)90017-1
   ZADEH LA, 1983, COMPUT MATH APPL, V9, P149, DOI 10.1016/0898-1221(83)90013-5
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   Zwick R., 1987, International Journal of Approximate Reasoning, V1, P221, DOI 10.1016/0888-613X(87)90015-6
NR 19
TC 41
Z9 43
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 431
EP 444
DI 10.1016/S0950-5849(03)00014-4
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500005
DA 2024-07-18
ER

PT J
AU Zein, S
   Salleh, N
   Grundy, J
AF Zein, Samer
   Salleh, Norsaremah
   Grundy, John
TI Systematic reviews in mobile app software engineering: A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mobile app software development; Tertiary study; Systematic reviews;
   Mapping study
AB Context: A number of secondary studies in the form of systematic reviews and systematic mapping studies exist in the area of mobile application software engineering.Objective: The focus of this paper is to provide an overview and analysis of these secondary studies of mobile app software engineering for researchers and practitioners.Method: We conducted a systematic tertiary study following the guidelines by Kitchenham et al. to classify and analyze secondary studies in this area.Results: After going through several filtration steps, we identified 24 secondary studies addressing major software engineering phases, such as initiation, requirements engineering, design, development and testing. The majority of the secondary studies focused on testing and design phases. Specific research topics addressed by the included studies were: usability evaluation, test automation, context-aware testing, cloud-based development, architectural models, effort and size estimation models, defect prediction, and GUI testing. We found that the trend in secondary studies is towards more specific areas of mobile application software engineering such as architectural design models, context-aware testing, testing of non-functional requirements, mobile cloud computing, and intelligent mobile applications. Research directions and some identified practices for practitioners were also identified. Conclusions: Mobile application software engineering is an active research area. The area can benefit from additional research in terms of secondary studies targeting evolution, maintenance, requirements engineering, and cross-platform mobile application development. Additionally, some of the secondary studies identify some useful practices for practitioners.
C1 [Zein, Samer] Birzeit Univ, Dept Comp Sci, POB 14, Birzeit, Palestine.
   [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, POB 10, Kuala Lumpur 50728, Malaysia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Wellington Rd, Clayton, Vic 3800, Australia.
C3 Birzeit University; International Islamic University Malaysia; Monash
   University
RP Zein, S (corresponding author), Birzeit Univ, Dept Comp Sci, POB 14, Birzeit, Palestine.
EM szain@birzeit.edu
RI Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076
FU ARC Laureate Fellowship [FL190100035]
FX Grundy is supported by ARC Laureate Fellowship FL190100035.
CR Ahmad A, 2018, IEEE ACCESS, V6, P17711, DOI 10.1109/ACCESS.2018.2818724
   [Anonymous], 2022, MOB APP DOWNL STAT U
   [Anonymous], 1995, Software Engineering
   Asfour A., 2019, International Journal of Technology in Education and Science (IJTES), V3, P29
   Bernardes TF, 2016, IEEE LAT AM T, V14, P1892, DOI 10.1109/TLA.2016.7483531
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brzan PP, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0564-8
   Corral L, 2015, COMPUTING, V97, P1001, DOI 10.1007/s00607-014-0395-8
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Francese Rita, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P133, DOI 10.1109/MOBILESoft.2017.33
   Galeano I, 2016, P INT C CHIL COMPUT
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kitchenham B., 2007, PROCEDURES PERFORMIN, V33, P28
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kondylakis H, 2020, J MED INTERNET RES, V22, DOI 10.2196/23170
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Norberto M, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P99, DOI 10.1145/3364641.3364653
   Nussbaum R, 2019, ARCH PHYS MED REHAB, V100, P115, DOI 10.1016/j.apmr.2018.07.439
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rochat J, 2022, JMIR PEDIATR PARENT, V5, DOI 10.2196/25540
   Sanchiz E, 2016, PROC LAT AM COMPUT C
   Statista, 2022, NUMB SMARTPH SUBSCR
   Tufail H, 2018, 2018 IEEE 9TH ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P1165, DOI 10.1109/IEMCON.2018.8614821
   Wu Y, 2017, JMIR MHEALTH UHEALTH, V5, DOI 10.2196/mhealth.6522
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhan X, 2022, IEEE T SOFTWARE ENG, V48, P4181, DOI 10.1109/TSE.2021.3114381
   Zohud T., 2021, International Journal of Computing, P46, DOI DOI 10.47839/IJC.20.1.2091
NR 30
TC 0
Z9 0
U1 5
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107323
DI 10.1016/j.infsof.2023.107323
EA SEP 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S6ZR3
UT WOS:001072634100001
DA 2024-07-18
ER

PT J
AU Sangaroonsilp, P
   Dam, HK
   Choetkiertikul, M
   Ragkhitwetsagul, C
   Ghose, A
AF Sangaroonsilp, Pattaraporn
   Dam, Hoa Khanh
   Choetkiertikul, Morakot
   Ragkhitwetsagul, Chaiyong
   Ghose, Aditya
TI A taxonomy for mining and classifying privacy requirements in issue
   reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Privacy requirements engineering; Mining software repositories; Software
   issues; Privacy compliance; Data protection regulations and privacy;
   frameworks; Privacy taxonomy; GDPR; ISO; IEC 29100; Thailand PDPA; APEC
ID AGREEMENT; GOALS
AB Context: Digital and physical trails of user activities are collected over the use of software applications and systems. As software becomes ubiquitous, protecting user privacy has become challenging. With the increase of user privacy awareness and advent of privacy regulations and policies, there is an emerging need to implement software systems that enhance the protection of personal data processing. However, existing data protection and privacy regulations provide key principles in high-level, making it difficult for software engineers to design and implement privacy-aware systems.Objective: In this paper, we develop a taxonomy that provides a comprehensive set of privacy requirements based on four well-established personal data protection regulations and privacy frameworks, the General Data Protection Regulation (GDPR), ISO/IEC 29100, Thailand Personal Data Protection Act (Thailand PDPA) and Asia-Pacific Economic Cooperation (APEC) privacy framework. Methods: These requirements are extracted, refined and classified (using the goal-based requirements analysis method) into a level that can be used to map with issue reports. We have also performed a study on how two large open-source software projects (Google Chrome and Moodle) address the privacy requirements in our taxonomy through mining their issue reports.Results: The paper discusses how the collected issues were classified, and presents the findings and insights generated from our study.Conclusion: Mining and classifying privacy requirements in issue reports can help organisations be aware of their state of compliance by identifying privacy requirements that have not been addressed in their software projects. The taxonomy can also trace back to regulations, standards and frameworks that the software projects have not complied with based on the identified privacy requirements.
C1 [Sangaroonsilp, Pattaraporn; Dam, Hoa Khanh; Ghose, Aditya] Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Northfields Ave, Wollongong, NSW 2500, Australia.
   [Choetkiertikul, Morakot; Ragkhitwetsagul, Chaiyong] Mahidol Univ, Fac Informat & Commun Technol, Phutthamonthon Sai 4 Rd, Nakhon Pathom 73170, Thailand.
C3 University of Wollongong; Mahidol University
RP Sangaroonsilp, P (corresponding author), Univ Wollongong, Fac Engn & Informat Sci, Sch Comp & Informat Technol, Northfields Ave, Wollongong, NSW 2500, Australia.
EM ps642@uowmail.edu.au; hoa@uow.edu.au; morakot.cho@mahidol.ac.th;
   chaiyong.rag@mahidol.ac.th; aditya@uow.edu.au
RI Ragkhitwetsagul, Chaiyong/JOZ-6943-2023; Dam, Hoa Khanh/C-6058-2014
OI Sangaroonsilp, Pattaraporn/0000-0002-3811-9176; Ghose,
   Aditya/0000-0002-6175-8726
CR Aljeraisy A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3450965
   [Anonymous], 2019, CHAMP DAT PROT PRIV
   [Anonymous], 2011, 29100 ISOIEC
   [Anonymous], 2006, P 5 INT C LANGUAGE R
   Anthonysamy P, 2017, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE-SEIS.2017.3
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Antón AI, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/ICRE.2002.1048502
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Asia -Pacific Economic Cooperation (APEC), 2017, APEC PRIV FRAM, P31
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Beckers K, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P574, DOI 10.1109/ARES.2012.29
   Bhatia J, 2019, REQUIR ENG, V24, P291, DOI 10.1007/s00766-019-00315-y
   Birnhack Michael, 2014, Jurimetrics: Journal of Law, Science and Technology, V55, P55
   BPR4GDPR, 2020, BUS PROC REENG FUNCT
   Breaux T.D., 2013, LECT NOTES COMPUTER, V7830, P141
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Carmela Troncoso, 2011, Engineering Privacy by Design
   Choetkiertikul M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09898-5
   Colesky M, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P33, DOI 10.1109/SPW.2016.23
   Data Privacy Manager, 2020, CCPA VS GDPR DIFF SI
   de Carvalho Renata M, 2020, SN COMPUTER SCI, V1, P1
   DEFeND, 2020, WHAT IS DEF PROJ DEF
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   European Commission, 2019, GDPR NUMB 2019 HAPP
   European Parliament and Council of the European Union, 2016, Official Journal of the European Union, V59, P1
   Ferreyra NED, 2020, LECT NOTES COMPUT SC, V12484, P161, DOI 10.1007/978-3-030-66172-4_10
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Ghanavati S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P133, DOI 10.1109/RE.2009.42
   Gharib M, 2017, LECT NOTES COMPUT SC, V10650, P193, DOI 10.1007/978-3-319-69904-2_16
   Gharib M, 2016, INT REQUIR ENG CONF, P256, DOI 10.1109/RE.2016.13
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Guarda P, 2009, INFORM SOFTWARE TECH, V51, P337, DOI 10.1016/j.infsof.2008.04.004
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Laboris I., 2019, IMPACT GDPR OUTSIDE
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Linden T., 2020, PRIVACY POLICY LANDS
   Meis R, 2016, LECT NOTES COMPUT SC, V9830, P79, DOI 10.1007/978-3-319-44341-6_6
   Meis R, 2015, LECT NOTES COMPUT SC, V9264, P195, DOI 10.1007/978-3-319-22906-5_15
   Moodle, 2018, MOODL MOODLEDOCS
   Moodle, 2019, PRIV API
   Moodle, 2021, TRACK INTR
   Moodle, 2017, NEW FEAT ID MOODLEDO
   National Legislative Assembly, 2019, THAIL PERS DAT PROT, P52
   Nickerson RC, 2013, EUR J INFORM SYST, V22, P336, DOI 10.1057/ejis.2012.26
   Nicols A., 2018, GDPR PLUGIN DEV MOOD
   Notario N, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P151, DOI 10.1109/SPW.2015.22
   PAPAYA, 2020, US
   PDP4E, 2020, PDP4E PROJ EUR PROJ
   PECB, 2015, 29100 PECB ISO
   Privacy Affairs, 2020, GDPR FIN LIST FIND A
   Ravenscroft J, 2016, LREC 2016 - TENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P4115
   S. Information, 2017, PROT CONTR SEC INF M, P1
   Sangaroonsilp P, 2022, REPLICATION PACKAGE
   Senarath Awanthika, 2018, P 22 INT C EV ASS SO
   Sheth S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P859, DOI 10.1145/2568225.2568244
   Sleimi A, 2020, INT REQUIR ENG CONF, P158, DOI 10.1109/RE48521.2020.00027
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   SMOOTH, 2020, SMOOTH PLATF GDPR CO
   State of California Department of Justice, 2018, California Consumer Privacy Act (CCPA)
   Statista, 2021, TOT DAT VOL WORLDW 2
   Swinhoe D., 2020, The 14 biggest data breaches of the 21st century
   The Chromium Projects, 2020, US
   Torre D, 2020, INT REQUIR ENG CONF, P136, DOI 10.1109/RE48521.2020.00025
   Tsohou A., 2020, LECT NOTES COMPUT SC, V11980
   UNCTAD, 2020, Data protection and privacy legislation worldwide
   Viera AJ, 2005, FAM MED, V37, P360
   Wild C., 1997, WILCOXON RANK SUM TE, P1
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
NR 71
TC 4
Z9 4
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107162
DI 10.1016/j.infsof.2023.107162
EA FEB 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Q1HZ
UT WOS:000944724400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Madeyski, L
   Lewowski, T
AF Madeyski, Lech
   Lewowski, Tomasz
TI Detecting code smells using industry-relevant data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reproducible research; Software engineering; Machine learning; Code
   smells
ID MACHINE LEARNING TECHNIQUES; THRESHOLDS
AB Context Code smells are patterns in source code associated with an increased defect rate and a higher maintenance effort than usual, but without a clear definition. Code smells are often detected using rules hard -coded in detection tools. Such rules are often set arbitrarily or derived from data sets tagged by reviewers without the necessary industrial know-how. Conclusions from studying such data sets may be unreliable or even harmful, since algorithms may achieve higher values of performance metrics on them than on models tagged by experts, despite not being industrially useful. Objective Our goal is to investigate the performance of various machine learning algorithms for auto-mated code smell detection trained on code smell data set(MLCQ) derived from actively developed and industry-relevant projects and reviews performed by experienced software developers.Method We assign the severity of the smell to the code sample according to a consensus between the severities assigned by the reviewers, use the Matthews Correlation Coefficient (MCC) as our main performance metric to account for the entire confusion matrix, and compare the median value to account for non-normal distributions of performance. We compare 6720 models built using eight machine learning techniques. The entire process is automated and reproducible.Results Performance of compared techniques depends heavily on analyzed smell. The median value of our performance metric for the best algorithm was 0.81 for Long Method, 0.31 for Feature Envy, 0.51 for Blob, and 0.57 for Data Class.Conclusions Random Forest and Flexible Discriminant Analysis performed the best overall, but in most cases the performance difference between them and the median algorithm was no more than 10% of the latter. The performance results were stable over multiple iterations. Although the F-score omits one quadrant of the confusion matrix (and thus may differ from MCC), in code smell detection, the actual differences are minimal.
C1 [Madeyski, Lech; Lewowski, Tomasz] Wroclaw Univ Sci & Technol, Dept Appl Informat, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
   [Madeyski, Lech] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Wroclaw University of Science & Technology; Blekinge Institute
   Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Dept Appl Informat, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
EM lech.madeyski@pwr.edu.pl; tomasz.lewowski@pwr.edu.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Lewowski, Tomasz/0000-0003-4897-1263
FU National Centre for Research and Development (NCBiR)
   [POIR.01.01.01-00-0792/16]
FX This work has been partially carried out as part of the research and
   development project POIR.01.01.01-00-0792/16 supported by the National
   Centre for Research and Development (NCBiR), and the research internship
   of Lech Madeyski at BTH. The authors thank Tomasz Korzeniowski and Marek
   Skrajnowski from code quest sp. z o.o. for all of the support, comments,
   and feedback from the real-world software engineering environment.
CR Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   [Anonymous], 2005, BEST PRACTICES SOFTW, DOI DOI 10.1007/3-540-26734-4_9
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bakota T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P316, DOI 10.1109/ICSM.2012.6405288
   Bán D, 2014, LECT NOTES COMPUT SC, V8583, P337, DOI 10.1007/978-3-319-09156-3_25
   Bischl B, 2016, J MACH LEARN RES, V17
   Boutaib S, 2021, IEEE INT C S Q R S, P574, DOI 10.1109/QRS54544.2021.00068
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Caram FL, 2019, INT J SOFTW ENG KNOW, V29, P285, DOI 10.1142/S021819401950013X
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Cruz D, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P31, DOI 10.1145/3387906.3388618
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Endres A., 1975, IEEE Transactions on Software Engineering, VSE-1, P140, DOI 10.1109/TSE.1975.6312834
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gradisnik M, 2019, 2019 42ND INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1537, DOI [10.23919/MIPRO.2019.8757009, 10.23919/mipro.2019.8757009]
   Grodzicka H., 2020, Data-Centr. Bus. Applicat.: Tow. Softw. Develop, P137, DOI DOI 10.1007/978-3-030-34706-2_8
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hechenbichler K, 2004, WEIGHTED K NEAREST N, DOI [10.5285/ubm/epub.1769, DOI 10.5285/UBM/EPUB.1769]
   Hothorn T, 2015, J MACH LEARN RES, V16, P3905
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   Karatzoglou A., 2004, J STAT SOFTW, V11, P1, DOI DOI 10.18637/JSS.V011.I09
   Kaur A, 2020, NEURAL COMPUT APPL, V32, P7009, DOI 10.1007/s00521-019-04175-z
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kitchenham B, 2020, EMPIR SOFTW ENG, V25, P353, DOI 10.1007/s10664-019-09747-0
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kovacevic A, 2022, EXPERT SYST APPL, V204, DOI 10.1016/j.eswa.2022.117607
   Krasner H., 2021, COST POOR SOFTW QUAL
   Lee SJ, 2016, EXPERT SYST APPL, V45, P185, DOI 10.1016/j.eswa.2015.09.023
   Leisch F., 2020, MDA MIXTURE FLEXIBLE
   Lewowski T, 2022, Code Smells Detection Using Artificial Intelligence Techniques: A Business-Driven Systematic Review, V3, P285, DOI DOI 10.1007/978-3-030-77916-0_12
   Lewowski T, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106783
   Lewowski T, 2020, STUD COMPUT INTELL, V851, P1, DOI 10.1007/978-3-030-26574-8_1
   Li ZD, 2011, EMPIR SOFTW ENG, V16, P667, DOI 10.1007/s10664-011-9155-y
   Lin T., 2021, APPL CRYPTOGRAPHY CO, V1, P171
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Madeyski Lech, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P342, DOI 10.1145/3383219.3383264
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Meyer D., 2021, Misc Functions of the Department of Statistics, Probability Theory Group (Formerly: E1071)
   Mhawish MY, 2020, J COMPUT SCI TECH-CH, V35, P1428, DOI 10.1007/s11390-020-0323-7
   Milborrow Stephen, 2024, CRAN
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Oyetoyan TD, 2013, J SYST SOFTWARE, V86, P3162, DOI 10.1016/j.jss.2013.07.039
   Palomba F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P482, DOI 10.1145/3180155.3182532
   Palomba F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P769, DOI 10.1109/ICSE.2015.244
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Piotrowski P., 2020, DATA CENTRIC BUSINES, V4, P77, DOI 10.1007/978-3-030-34706-2_5
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Sae-Lim N, 2017, PROC IEEE INT CONF S, P484, DOI 10.1109/ICSME.2017.66
   Saika T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P1, DOI 10.1109/SANER.2016.117
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   SciTools, 2022, UND SCITOOLS
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shizhe Fu, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321194
   Soltanifar Behjat, 2016, P 20 INT DATABASE EN, P148
   Soomlek C, 2021, LECT NOTES ARTIF INT, V12986, P19, DOI 10.1007/978-3-030-88942-5_2
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Vidal S, 2015, 2015 34TH INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY (SCCC)
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Yu J, 2021, IEEE INT C S Q R S, P738, DOI 10.1109/QRS54544.2021.00083
   Yuepu Guo, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P167, DOI 10.1145/1810295.1810321
NR 75
TC 7
Z9 7
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107112
DI 10.1016/j.infsof.2022.107112
EA DEC 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200018
DA 2024-07-18
ER

PT J
AU Medeiros, R
   Martinez, J
   Díaz, O
   Falleri, JR
AF Medeiros, Raul
   Martinez, Jabier
   Diaz, Oscar
   Falleri, Jean-Remy
TI Visualizations for the evolution of Variant-Rich Systems: A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variant-rich systems; Software product lines; Visualization; Evolution;
   Maintenance; Mapping study
ID SOFTWARE VISUALIZATION; VARIABILITY; ANALYTICS
AB Context: Variant-Rich Systems (VRSs), such as Software Product Lines or variants created through clone & own, aim at reusing existing assets. The long lifespan of families of variants, and the scale of both the code base and the workforce make VRS maintenance and evolution a challenge. Visualization tools are a needed companion.Objective: We aim at mapping the current state of visualization interventions in the area of VRS evolution. We tackle evolution in both functionality and architecture. Three research questions are posed: What sort of analysis is being conducted to assess VRS evolution? (Analysis perspective); What sort of visualizations are displayed? (Visualization perspective); What is the research maturity of the reported interventions? (Maturity perspective).Methods: We performed a systematic mapping study including automated search in digital libraries, expert knowledge, and snowballing.Results: The study reports on 41 visualization approaches to cope with VRS evolution. Analysis wise, feature identification and location is the most popular scenario, followed by variant integration towards a Software Product Line. As for visualization, nodelink diagram visualization is predominant while researchers have come up with a wealth of ingenious visualization approaches. Finally, maturity wise, almost half of the studies are solution proposals. Most of the studies provide proof-of-concept, some of them also include publicly available tools, yet very few face proof-of-value.Conclusions: This study introduces a comparison framework where to frame future studies. It also points out distinct research gaps worth investigating as well as shortcomings in the evidence about relevance and contextual considerations (e.g., scalability).
C1 [Medeiros, Raul; Diaz, Oscar] Univ Basque Country UPV EHU, San Sebastian, Spain.
   [Martinez, Jabier] Basque Res & Technol Alliance BRTA, Tecnalia, Derio, Spain.
   [Falleri, Jean-Remy] IUF, LaBRI, UMR 5800, F-33400 Talence, France.
C3 University of Basque Country; Centre National de la Recherche
   Scientifique (CNRS); Universite de Bordeaux
RP Medeiros, R (corresponding author), Univ Basque Country UPV EHU, San Sebastian, Spain.
EM raul.medeiros@ehu.eus; jabier.martinez@tecnalia.com; oscar.diaz@ehu.eus;
   falleri@labri.fr
RI Diaz, Oscar/D-2822-2011
OI Medeiros, Raul/0000-0002-2413-9336; Martinez, Jabier/0000-0001-8742-9640
FU Spanish Ministry of Science, Innovation and Universities grant
   [RTI2018-099818-B-I00]; Spanish Ministry of Science and Innovation
   [PRE2019-087324]
FX This work is supported by the Spanish Ministry of Science, Innovation
   and Universities grant number RTI2018-099818-B-I00. RaulMedeiros enjoys
   a doctoral grant from the Spanish Ministry of Science and Innovation
   (PRE2019-087324)
CR Al-Hajjaji M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P226, DOI 10.1145/3233027.3233044
   Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   [Anonymous], 2012, 16 INT SOFTWARE PROD, DOI DOI 10.1145/2362536.2362561
   [Anonymous], 2013, P 17 INT SOFTWARE PR
   [Anonymous], 2013, 2013 1 IEEE WORKING, DOI DOI 10.1109/VISSOFT.2013.6650543
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Anquetil N, 2010, SOFTW SYST MODEL, V9, P427, DOI 10.1007/s10270-009-0120-9
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Basili Victor, 1994, ENCY SOFTW ENG, P528
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Carmo D.H., 2013, 25 INT C SOFTWARE EN, P731
   Chotisarn N, 2020, J VISUAL-JAPAN, V23, P539, DOI 10.1007/s12650-020-00647-w
   Cook K. A., 2005, Illuminating the path: The research and development agenda for visual analytics
   Díaz O, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10101-6
   Díaz O, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P17, DOI 10.1145/3307630.3342386
   Duhoux B., 2019, CEUR WORKSHOP PROC, V2510
   Duszynski S., 2011, 2011 18th Working Conference on Reverse Engineering, P303, DOI 10.1109/WCRE.2011.44
   Duszynski S, 2008, WORK CONF REVERSE EN, P229, DOI 10.1109/WCRE.2008.22
   Entekhabi S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P1, DOI 10.1145/3307630.3342392
   Feichtinger K, 2021, J COMPUT LANG, V63, DOI 10.1016/j.cola.2021.101034
   Fischer Juliane, 2020, 2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS), P269, DOI 10.1109/ICPS48405.2020.9274774
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   GHARIBI G, 2016, P 31 ANN ACM S APPL, P1302, DOI DOI 10.1145/2851613.2851764
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hinterreiter D, 2020, LECT NOTES COMPUT SC, V12045, P300, DOI 10.1007/978-3-030-44429-7_21
   Huysegoms Tom, 2013, PROCESS TECHNOL INT, V9, P189, DOI DOI 10.1016/J.PROTCY.2013.12.021
   Illescas S, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P46, DOI 10.1109/VISSOFT.2016.16
   Johanssen JO, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2169
   Kanda T, 2015, IEICE T INF SYST, VE98D, P1185, DOI 10.1587/transinf.2014EDP7286
   Keim DA, 2008, LECT NOTES COMPUT SC, V4404, P76, DOI 10.1007/978-3-540-71080-6_6
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienle HM, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P2, DOI 10.1109/VISSOF.2007.4290693
   Kiml Y, 2021, IEEE PAC VIS SYMP, P81, DOI 10.1109/PacificVis52677.2021.00018
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kleebaum A, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P33, DOI 10.1109/VISSOFT52517.2021.00013
   Krause A, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P125, DOI 10.1109/VISSOFT52517.2021.00024
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P65, DOI 10.1145/3109729.3109736
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   de Medeiros TFL, 2012, EUROMICRO CONF PROC, P101, DOI 10.1109/SEAA.2012.70
   Lopez-Herrejon RE, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P26, DOI 10.1109/VISSOFT.2016.11
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Ma YX, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09905-9
   Mahdavi-Hezaveh R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09901-z
   Mahmood W, 2021, PROC INT CONF SOFTW, P1658, DOI 10.1109/ICSE43902.2021.00147
   Marques Freire Willian, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P818, DOI 10.1145/3422392.3422498
   Martinez J., 2012, P INT SOFTW PROD LIN, P196, DOI DOI 10.1145/2364412.2364445
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Martinez Jabier, 2016, SPLC, P119
   Mens T., 2008, Software Evolution
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Montalvillo L, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P110, DOI 10.1145/3233027.3233041
   Montalvillo L, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P73, DOI 10.1145/3109729.3109737
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Niu N, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P137
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Prehofer C, 2001, CONCURR COMP-PRACT E, V13, P465, DOI 10.1002/cpe.583
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rabiser R, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P508, DOI 10.1109/SEAA.2009.13
   Reddivari S, 2014, REQUIR ENG, V19, P257, DOI 10.1007/s00766-013-0194-3
   Ribeiro M., 2012, COMPANION VOLUME 11, P23
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schlie A, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P191, DOI 10.1145/3307630.3342408
   Schreiber A, 2019, AEROSP CONF PROC
   Sellier D., 2007, SOFTWARE PRODUCT LIN, P109
   Shahin M, 2014, J SYST SOFTWARE, V94, P161, DOI 10.1016/j.jss.2014.03.071
   Sinkala ZT, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241454
   Sinnema M, 2006, LECT NOTES COMPUT SC, V4039, P101
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Strüber D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P177, DOI 10.1145/3336294.3336302
   Tenev V, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P22, DOI 10.1145/3109729.3109753
   Tërnava X, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P231, DOI 10.1145/3336294.3336311
   Tiwari NM, 2017, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2017.56
   Urli S, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P76, DOI 10.1109/VISSOFT.2015.7332417
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   Yi JS, 2007, IEEE T VIS COMPUT GR, V13, P1224, DOI 10.1109/TVCG.2007.70515
   Zamansky A., 2017, CEUR WORKSHOP PROC, V1954, P25
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 84
TC 3
Z9 3
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107084
DI 10.1016/j.infsof.2022.107084
EA OCT 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6D6JH
UT WOS:000882793900004
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bai, ST
   Liu, L
   Liu, HX
   Zhang, MX
   Meng, CK
   Zhang, P
AF Bai, Shuotong
   Liu, Lei
   Liu, Huaxiao
   Zhang, Mengxi
   Meng, Chenkun
   Zhang, Peng
TI Find potential partners: A GitHub user recommendation method based on
   event data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Like-minded developer recommendation; Event data; Follow; GitHub
ID DEVELOPER RECOMMENDATION; SOFTWARE; TIME
AB Context: GitHub has attracted much popularity among a large number of software developers around the world and introduced the social function follow to strengthen the relationship among developers. Like other social networks, GitHub users usually follow others who are popular in the community, co-workers, or friends in real life. However, according to our investigation, more than half of GitHub users prefer to follow recently like-minded developers other than their traditional networks for communicating with timely feedback, discovering niche repositories, and attracting more active contributors to cooperate, while these users are hard to find.
   Objective: Our objective in this paper is to leverage recent activities-Event Data of GitHub users and conduct a recommendation approach to help them match some recently like-minded developers to follow or reach out.
   Methods: As a first step, we conduct one empirical research-an online survey to investigate and analyze the opinions of GitHub users whether they are willing to follow others with similar recent events and which kind of events they will focus on during the follow process. Regarding the results from our survey, we partition 12 types of events focused by participants into three Event sets of Communication, Exploration, and Cooperation. As a second step, we collect Event Data of 12,713 GitHub users who participated in repositories written in python and build a time-based multi-dimensional recommendation approach based on a calculating vector-similarity method, a clustering approach, and a deep learning model.
   Results and Conclusion: The experimental results show that our approach achieves an improvement of 607.64%, 564.59%, and 599.19% on average compared with two baselines in terms of Precision@N, Recall@N, and F1-Score@N. Such a series of experiments have proved that our method is effective and feasible.
C1 [Liu, Huaxiao] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Changchun 130012, Jilin, Peoples R China.
C3 Jilin University; Jilin University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
RI lei, liu/HTR-5486-2023
OI zhang, mengxi/0000-0003-4380-794X; liu, huaxiao/0000-0002-8151-1413
FU Fundamental Research Funds for the Central Universities; National
   Natural Science Foundation of China (NSFC) [62102160]; Science and
   Technology Research Project of Education Department of JiLin Province of
   China [JJKH20211104KJ]
FX The work is funded by the Fundamental Research Funds for the Central
   Universities, JLU, the National Natural Science Foundation of China
   (NSFC) No. 62102160, and Science and Technology Research Project of
   Education Department of JiLin Province of China (JJKH20211104KJ).
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   [Anonymous], 2017, P 15 C EUROPEAN CHAP
   [Anonymous], 2018, IEEE SPECTRUM
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   Archive G, GITH ARCH
   Arora S, 2019, 5 INT C LEARN REPR I
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Berkani L, 2020, SOFTWARE PRACT EXPER, V50, P1498, DOI 10.1002/spe.2828
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Cohen E, 2006, J ALGORITHMS, V59, P19, DOI 10.1016/j.jalgor.2005.01.006
   da Silva M.C., 2020, 2020 INT JOINT C NEU, P1
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Docs G, GITH DOCS
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Fazayeli H, 2019, PROCEDIA COMPUT SCI, V161, P585, DOI 10.1016/j.procs.2019.11.160
   Gousios G, 2017, PROC IEEE ACM INT C, P501, DOI 10.1109/ICSE-C.2017.164
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guo DY, 2017, NEUROCOMPUTING, V239, P9, DOI 10.1016/j.neucom.2017.01.068
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu DY, 2018, 2018 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND BIG DATA (ICAIBD), P250, DOI 10.1109/ICAIBD.2018.8396204
   Hu Y, 2018, EXPERT SYST APPL, V108, P108, DOI 10.1016/j.eswa.2018.05.002
   Huang SR, 2017, IEEE T MULTIMEDIA, V19, P1314, DOI 10.1109/TMM.2017.2652074
   Jiang J, 2019, INFORM SOFTWARE TECH, V105, P150, DOI 10.1016/j.infsof.2018.08.012
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kobayakawa Naoki, 2019, Knowledge Management and Acquisition for Intelligent Systems. 16th Pacific Rim Knowledge Acquisition Workshop, PKAW 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11669), P173, DOI 10.1007/978-3-030-30639-7_15
   Le Q.V., 2014, ARXIVABS14054053
   Liao ZF, 2020, SOFT COMPUT, V24, P5683, DOI 10.1007/s00500-019-04217-7
   Lima A., 2014, ARXIV ABS14072535
   Liu HX, 2022, SOFTWARE PRACT EXPER, V52, P236, DOI 10.1002/spe.3015
   McCallum A., 1998, AAAI 1998
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Onoue S, 2013, ASIA PAC SOFWR ENG, P7, DOI 10.1109/APSEC.2013.104
   Perlmutter D.D., 2007, J MASS MEDIA ETHICS, V22, P37
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Seker A, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11030920
   Song WP, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P555, DOI 10.1145/3289600.3290989
   Steinbach M., 2004, NEW DIRECTIONS STAT, P273, DOI 10.1007/978-3-662-08968-2_16
   Subercaze J, 2016, WEB INTELL, V14, P17, DOI 10.3233/WEB-160329
   Sun XB, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9419-x
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P32, DOI 10.1145/2627508.2627514
   Wan Y, 2018, WORLD WIDE WEB, V21, P1523, DOI 10.1007/s11280-018-0526-9
   Wang ZB, 2015, IEEE T MOBILE COMPUT, V14, P538, DOI 10.1109/TMC.2014.2322373
   Wiki G, GITH WIK
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yu JL, 2019, IEEE DATA MINING, P768, DOI 10.1109/ICDM.2019.00087
   Zhang MX, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106797
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhang Y, 2019, IEEE DATA MINING, P876, DOI 10.1109/ICDM.2019.00098
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhu JH, 2019, EURASIP J WIREL COMM, DOI 10.1186/s13638-019-1388-2
NR 57
TC 2
Z9 2
U1 4
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106961
DI 10.1016/j.infsof.2022.106961
EA JUN 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100007
DA 2024-07-18
ER

PT J
AU Henrichs, E
   Lesch, V
   Straesser, M
   Kounev, S
   Krupitzer, C
AF Henrichs, Elia
   Lesch, Veronika
   Straesser, Martin
   Kounev, Samuel
   Krupitzer, Christian
TI A literature review on optimization techniques for adaptation planning
   in adaptive systems: State of the art and research directions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Self-adaptive systems; Adaptation planning; Optimization; Survey
ID COALITION-FORMATION; TASK ALLOCATION; MINIMIZATION; FRAMEWORK
AB Context: Recent developments in modern IT systems including internet of things, edge/fog computing, or cyber-physical systems support intelligent and seamless interaction between users and systems. This requires a reaction to changes in their environment or the system. Adaptive systems provide mechanisms for these reactions. Objective: To implement this functionality, several approaches for the planning of adaptations exist that rely on rules, utility functions, or advanced techniques, such as machine learning. As the adaptation space with possible options is often extensively huge, optimization techniques might support efficient determination of the adaptation space and identify the system's optimal configuration. With this paper, we provide a systematic review of adaptation planning as the optimization target. Method: In this paper, we review which optimization techniques are applied for adaptation planning in adaptive systems using a systematic literature review approach. Results: We reviewed 115 paper in detail out of an initial search set of 9,588 papers. Our analysis reveals that learning techniques and genetic algorithms are by far dominant; in total, heuristics (anytime learning) are more frequently applied as exact algorithms. We observed that around 57% of the approaches target multi-objectiveness and around 30% integrate distributed optimization. As last dimension, we focused on situation-awareness, which is only supported by two approaches. Conclusion: In this paper, we provide an overview of the current state of the art of approaches that rely on optimization techniques for planning adaptations in adaptive systems and further derive open research challenges, in particular regarding the integration of distributed optimization and situation-awareness.
C1 [Henrichs, Elia; Krupitzer, Christian] Univ Hohenheim, Dept Food Informat, Stuttgart, Germany.
   [Henrichs, Elia; Krupitzer, Christian] Univ Hohenheim, Computat Sci Lab, Stuttgart, Germany.
   [Lesch, Veronika; Straesser, Martin; Kounev, Samuel] Univ Wurzburg, Software Engn Grp, Wurzburg, Germany.
C3 University Hohenheim; University Hohenheim; University of Wurzburg
RP Krupitzer, C (corresponding author), Univ Hohenheim, Dept Food Informat, Stuttgart, Germany.; Krupitzer, C (corresponding author), Univ Hohenheim, Computat Sci Lab, Stuttgart, Germany.
EM elia.henrichs@uni-hohenheim.de; veronika.lesch@uni-wuerzburg.de;
   martin.straesser@uni-wuerzburg.de; samuel.kounev@uni-wuerzburg.de;
   christian.krupitzer@uni-hohenheim.de
OI Krupitzer, Christian/0000-0002-7275-0738; Henrichs,
   Elia/0000-0002-3905-8037; Lesch, Veronika/0000-0001-7481-4099; Kounev,
   Samuel/0000-0001-9742-2063; Straesser, Martin/0000-0002-0070-7343
FU Vector Stiftung [P2021-0093]
FX Acknowledgments This work is funded by the Vector Stiftung within the
   project ?The smart, digitized food supply chain? (P2021-0093) .
CR Agrawal P, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P1275
   Almeida J., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P84
   An B., 2011, P 10 INT C AUTONOMOU, P609
   Andrade SS, 2013, INT CONF SELF SELF, P61, DOI 10.1109/SASO.2013.42
   Andrade SS, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P101, DOI 10.1109/SBES.2014.17
   Angelidakis A, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P503
   [Anonymous], 1989, LEARNING DELAYED REW
   [Anonymous], 2010, P 9 INT C AUT AG MUL
   [Anonymous], 2007, PROC AAMAS
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Babaoglu O., 2007, PROCEEDING INT C SEL, pix
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Basich Connor., 2020, P INT JOINT C AUT AG, P123
   Benazera E, 2011, AUTON AGENT MULTI-AG, V23, P71, DOI 10.1007/s10458-010-9131-8
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bhola S., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P55
   Bouton M, 2019, AUTON AGENT MULTI-AG, V33, P330, DOI 10.1007/s10458-019-09407-z
   Brownlee J., 2011, Clever Algorithms. Nature-Inspired Programming Recipes, V1st, P436
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Caldas RD, 2020, I W S E ADAP SM SYS, P9, DOI 10.1145/3387939.3391595
   Cardellini V, 2012, IEEE T SOFTWARE ENG, V38, P1138, DOI 10.1109/TSE.2011.68
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Chalkiadakis G., 2004, P 3 INT JOINT C AUT, P1090
   Chalkiadakis G, 2012, AUTON AGENT MULTI-AG, V24, P441, DOI 10.1007/s10458-010-9157-y
   Chen G, 2005, AUTON AGENT MULTI-AG, V10, P273, DOI 10.1007/s10458-004-4344-3
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chmielowiec Anna, 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P154, DOI 10.1109/SASO.2010.14
   Chuang SN, 2008, IEEE T SOFTWARE ENG, V34, P738, DOI 10.1109/TSE.2008.44
   Coker Z, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P168, DOI 10.1109/SEAMS.2015.16
   Cooray D, 2013, IEEE T SOFTWARE ENG, V39, P1714, DOI 10.1109/TSE.2013.36
   D'Angelo M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P13, DOI 10.1109/SEAMS.2019.00012
   de Oca M. A. M., 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P243, DOI 10.1109/SASO.2010.28
   de Weerdt MM, 2012, AUTON AGENT MULTI-AG, V25, P46, DOI 10.1007/s10458-011-9168-3
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Dolgov D.A., 2007, P 6 INT JOINT C AUT, DOI [10.1145/1329125.1329369, DOI 10.1145/1329125.1329369]
   Dusparic I, 2009, INT CONF SELF SELF, P20, DOI 10.1109/SASO.2009.23
   Ennigrou M, 2008, AUTON AGENT MULTI-AG, V17, P270, DOI 10.1007/s10458-008-9031-3
   Escoffier B, 2013, AUTON AGENT MULTI-AG, V26, P184, DOI 10.1007/s10458-011-9188-z
   Esfahani N, 2013, IEEE T SOFTWARE ENG, V39, P1467, DOI 10.1109/TSE.2013.37
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Ferscha A., 2015, UBICOMPISWC ADJUNCT, P893, DOI DOI 10.1145/2800835.2809508
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Flushing EF, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P988
   Fredericks EM, 2019, INT CONF SELF SELF, P1, DOI 10.1109/SASO.2019.00010
   Fredericks EM, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P16, DOI [10.1109/SEAMS.2016.010, 10.1145/2897053.2897059]
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Fritsch S., 2008, P 2008 INT WORKSH SO, P89, DOI [10.1145/1370018.1370035, DOI 10.1145/1370018.1370035]
   Gabor T, 2018, PR INT CONF AUTONOM, P131, DOI 10.1109/ICAC.2018.00023
   Gerostathopoulos I, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P58, DOI 10.1145/3194133.3194152
   Ghanbari Saeed., 2007, Proceedings of the 4th International Conference on Autonomic computing (ICAC'07), P26, DOI 10.1109/ICAC.2007.3
   Ghavamzadeh M, 2006, AUTON AGENT MULTI-AG, V13, P197, DOI 10.1007/s10458-006-7035-4
   Gheibi O, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3469440
   Godoy J, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P1577
   Gounaris A, 2008, ACM T AUTON ADAP SYS, V3, DOI 10.1145/1352789.1352791
   GREFENSTETTE JJ, 1992, MACHINE LEARNING /, P189
   Gueyoung Jung, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P23, DOI 10.1109/ICAC.2008.21
   Habib I, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2451248.2451252
   Haensel J, 2020, I W S E ADAP SM SYS, P45, DOI 10.1145/3387939.3388616
   Hao JY, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2517329
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   He Yuxiong., 2012, Proceedings of the 9th International Conference on Autonomic Computing (ICAC), P105
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Iannucci S, 2016, PR INT CONF AUTONOM, P157, DOI 10.1109/ICAC.2016.12
   Incerto E, 2017, IEEE INT CONF AUTOM, P485, DOI 10.1109/ASE.2017.8115660
   Javed F, 2009, INT CONF SELF SELF, P254, DOI 10.1109/SASO.2009.26
   Jesus AD, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P850, DOI 10.1145/3377930.3390185
   Jian Zhang, 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P43
   Kandasamy N, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P54, DOI 10.1109/ICAC.2004.1301347
   Kang H., 2010, P 7 INT C AUTONOMIC, P119
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khan MA, 2011, AUTON AGENT MULTI-AG, V22, P415, DOI 10.1007/s10458-010-9134-5
   Khare V, 2003, LECT NOTES COMPUT SC, V2632, P376
   Kim D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P76, DOI 10.1109/SEAMS.2009.5069076
   Kinneer C, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P222, DOI 10.1109/ACSOS49614.2020.00045
   Kinneer C, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P40, DOI 10.1145/3194133.3194145
   König L, 2009, INT CONF SELF SELF, P175, DOI 10.1109/SASO.2009.20
   Kounev S., 2017, Self-Aware Computing Systems, P3, DOI [10.1007/978-3-319-47474-8_1, DOI 10.1007/978-3-319-47474-81]
   Kraemer L, 2015, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2668130
   Kramer D., 2012, 2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2012), P39, DOI 10.1109/SASO.2012.26
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krupitzer C, 2018, INT CONF PERVAS COMP, P95
   Krupitzer C, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P209, DOI 10.1109/ICAC.2017.16
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kruskal J. B., 1956, Proceedings of the American Mathematical Society, V7, P48
   Kusic D., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P74
   Laddaga R., 2001, Self-Adaptive Software. First International Workshop, IWSAS 2000. Revised Papers (Lecture Notes in Computer Science Vol.1936), P11
   Lalanda P., 2013, AUTONOMIC COMPUTING
   Lama Palden, 2012, P 9 INT C AUT COMP, DOI DOI 10.1145/2371536.2371547
   Langford MA, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P63, DOI 10.1109/SEAMS.2019.00017
   Lee C, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1636665.1636668
   Lee GJ, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3309539
   Leite JuliusC.B., 2010, PROCEEDING 7 INT C A, P41, DOI 10.1145/1809049.1809056
   Lesch V, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2021), P177, DOI 10.1109/ACSOS52086.2021.00042
   Li J, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P159
   Lightstone S, 2007, Fourth IEEE International Workshop on Engineering of Autonomic & Autonomous Systems, Proceedings, P163, DOI 10.1109/EASE.2007.12
   Macías-Escrivá FD, 2013, EXPERT SYST APPL, V40, P7267, DOI 10.1016/j.eswa.2013.07.033
   Marinescu A, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3070861
   Menascé DA, 2011, IEEE SOFTWARE, V28, P78, DOI 10.1109/MS.2011.22
   Mianyu Wang, 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P165
   Mikic-Rakic M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P114, DOI 10.1109/ICAC.2004.1301354
   Mock W.B.T., 2011, Encyclopedia of Global Justice, P808, DOI DOI 10.1007/978-1-4020-9160-5_341
   Moreno Gabriel A., 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P90, DOI 10.1109/SEAMS.2017.7
   Moreno GA, 2016, PR INT CONF AUTONOM, P147, DOI 10.1109/ICAC.2016.59
   MullerSchloer C, 2011, AUTON SYST, P1
   Nallur V, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P122, DOI [10.1109/SEAMS.2016.022, 10.1145/2897053.2897067]
   Netzer A, 2016, AUTON AGENT MULTI-AG, V30, P364, DOI 10.1007/s10458-015-9291-7
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Palmerino J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P949, DOI 10.1109/ASE.2019.00092
   Panait L, 2005, AUTON AGENT MULTI-AG, V11, P387, DOI 10.1007/s10458-005-2631-2
   Pandey A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P55, DOI 10.1109/ACSOS49614.2020.00026
   Pandey A, 2016, INT CONF SELF SELF, P130, DOI 10.1109/SASO.2016.19
   Pascual GG, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P73, DOI 10.1109/SEAMS.2013.6595494
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pilgerstorfer Peter, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P54, DOI 10.1109/SEAMS.2017.8
   Pournaras E, 2018, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3277668
   Präntare F, 2020, AUTON AGENT MULTI-AG, V34, DOI 10.1007/s10458-020-09450-1
   PRIM RC, 1957, AT&T TECH J, V36, P1389, DOI 10.1002/j.1538-7305.1957.tb01515.x
   Rahwan T., 2010, INT C AUTONOMOUS AGE, P1007
   Ramakrishnan Berbers Arun Kishore., 2013, 10th International Conference on Autonomic Computing ({ICAC} 13), P213
   Ramirez A. J., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P198, DOI 10.1109/SASO.2011.31
   Ramirez AJ, 2010, 7 INT C AUTONOMIC CO, P225, DOI [10.1145/1809049.1809080, DOI 10.1145/1809049.1809080]
   Ramirez AJ, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P97
   Rao J, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P137
   Rao S.S., 2009, ENG OPTIMIZATION THE, DOI DOI 10.1002/9780470549124
   Rogers A., 2012, P P 11ST INT C AUTON, P281
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Saputri TRD, 2020, IEEE ACCESS, V8, P205948, DOI 10.1109/ACCESS.2020.3036037
   Scheerer M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P75, DOI 10.1109/ACSOS49614.2020.00028
   Schmerl Bradley, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P64, DOI 10.1007/978-3-319-74183-3_3
   Service TC, 2011, AUTON AGENT MULTI-AG, V22, P225, DOI 10.1007/s10458-010-9123-8
   Seshasayee B., 2007, 4 INT C AUT COMP ICA, P6, DOI [10.1109/ICAC.2007.14, DOI 10.1109/ICAC.2007.14]
   Shaukat M, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P267
   Shevtsov S, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3328730
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Teacy W.L., 2012, AAMAS, P417
   Tesauro G, 2005, 3RD INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P65
   Tomforde S, 2014, J AMB INTEL SMART EN, V6, P179, DOI 10.3233/AIS-140252
   Tomforde S, 2011, AUTON SYST, P325, DOI 10.1007/978-3-0348-0130-0_21
   Torabi B, 2020, AUTON AGENT MULTI-AG, V34, DOI 10.1007/s10458-019-09434-w
   van Leeuwen CJ, 2017, INT CONF SELF SELF, P71, DOI 10.1109/SASO.2017.16
   Verbeeck K, 2007, AUTON AGENT MULTI-AG, V14, P239, DOI 10.1007/s10458-006-9007-0
   Wang HB, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3058592
   Wang L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1014, DOI 10.1145/3106237.3119871
   Wang L, 2017, PROC IEEE ACM INT C, P465, DOI 10.1109/ICSE-C.2017.21
   Wang YX, 2010, ACM T AUTON ADAP SYS, V5, DOI 10.1145/1671948.1671949
   Webster J, 2002, MIS QUART, V26, pXIII
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Weyns Danny, 2019, Handbook of software engineering, P399, DOI [10.1007/978-3-030-00262-6\_11, 10.1007/978-3-030-00262-6_11, DOI 10.1007/978-3-030-00262-6_11]
   Wildstrom J, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P241
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wong T., 2021, ARXIV210100125
   Wu J., 2007, AAMAS 07, DOI [10.1145/1329125.1329265, DOI 10.1145/1329125.1329265]
   Wu J., 2005, P 4 INT JOINT C AUTO, P331
   Ying YJ, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P21, DOI 10.1109/ICAC.2015.30
   Zacheilas N, 2016, PR INT CONF AUTONOM, P65, DOI 10.1109/ICAC.2016.58
   Zeppenfeld J., 2011, P 8 ACM INT C AUT CO, P3
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zhang K, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2240166.2240171
   Zhang XQ, 2005, AUTON AGENT MULTI-AG, V10, P165, DOI 10.1007/s10458-004-6978-6
   Zhao TQ, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P103, DOI 10.1109/ICAC.2017.47
   Zoghi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P7, DOI 10.1145/2593929.2593935
   Zoghi P, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2822896
NR 169
TC 8
Z9 8
U1 4
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106940
DI 10.1016/j.infsof.2022.106940
EA MAY 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000006
DA 2024-07-18
ER

PT J
AU Wiese, M
   Rachow, P
   Riebisch, M
   Schwarze, J
AF Wiese, Marion
   Rachow, Paula
   Riebisch, Matthias
   Schwarze, Julian
TI Preventing technical debt with the TAP framework for Technical Debt
   Aware Management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical Debt; Project Management; Technical Debt Awareness; Technical
   Debt repayment; Technical Debt prevention; Technical Debt backlog
ID COSTS
AB Context: Technical Debt (TD) is a metaphor for technical problems that are not visible to users and customers but hinder developers in their work, making future changes more difficult. TD is often incurred due to tight project deadlines and can make future changes more costly or impossible. Project Management usually focuses on customer benefits and pays less attention to their IT systems' internal quality. TD prevention should be preferred over TD repayment because subsequent refactoring and re-engineering are expensive. Objective: This paper evaluates a framework focusing on both TD prevention and TD repayment in the context of agile-managed projects. The framework was developed and applied in an IT unit of a publishing house. The unique contribution of this framework is the integration of TD management into project management. Method: The evaluation was performed as a comparative case study based on ticket statistics and two structured surveys. The surveys were conducted in the observed IT unit using the framework and a comparison unit not using the framework. The first survey targeted team members, the second one IT managers. Results: The evaluation shows that in this IT unit the TAP framework led to a raised awareness for the incurrence of TD. Decisions to incur TD are intentional, and TD is repaid timelier. Unintentional TD incurred by unconscious decisions is prevented. Furthermore, better communication and better planning of the project pipeline can be observed. Conclusion: We provide an insight into practitioners' ways to identify, monitor, prevent and repay TD. The presented framework includes a feasible method for TD prevention despite tight timelines by making TD repayment part of project management.
C1 [Wiese, Marion; Rachow, Paula; Riebisch, Matthias] Univ Hamburg, Dept Informat, Vogt Kolln Str 30, D-22527 Hamburg, Germany.
   [Schwarze, Julian] Gruner Jahr GmbH, Informat Technol, Baumwall 11, D-22459 Hamburg, Germany.
C3 University of Hamburg
RP Wiese, M (corresponding author), Univ Hamburg, Dept Informat, Vogt Kolln Str 30, D-22527 Hamburg, Germany.
EM marion.wiese@uni-hamburg.de; paula.rachow@uni-hamburg.de;
   matthias.riebisch@uni-hamburg.de; schwarze.julian@guj.de
RI Riebisch, Matthias/GQH-3056-2022
OI Wiese, Marion/0000-0003-0160-9531; Riebisch,
   Matthias/0000-0001-9956-5949; Rachow, Paula/0000-0002-2981-0483
CR Al Mamun Md Abdullah, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P11, DOI 10.1109/MTD.2014.15
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Apa C., 2020, FUNDAMENTALS SOFTWAR, P61, DOI DOI 10.1007/978-3-030-35983-6_4
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Baars S, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P68, DOI 10.1109/TechDebt.2019.00023
   Bachmann F., 2012, CrossTalk, P20
   Baysal O, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.66
   Besker T, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P21, DOI 10.1145/3387906.3388619
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Besker T, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P13, DOI 10.1109/TechDebt.2019.00010
   Besker T, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P105, DOI 10.1145/3194164.3194178
   Borowa K, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P115, DOI 10.1109/ICSA51549.2021.00019
   Charalampidou S, 2018, EUROMICRO CONF PROC, P421, DOI 10.1109/SEAA.2018.00075
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Almeida RR, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P74, DOI 10.1109/TechDebt52882.2021.00017
   Eliasson U, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P33, DOI 10.1109/MTD.2015.7332622
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Feitosa D, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110618
   Fowler M., 2019, TECHNICAL DEBT
   Freire Savio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P210, DOI 10.1145/3383219.3383241
   Freire S, 2021, 2021 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2021), P21, DOI 10.1109/CHASE52884.2021.00011
   Freire S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1548, DOI 10.1145/3341105.3373912
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Guo YP, 2016, J SYST SOFTWARE, V120, P156, DOI 10.1016/j.jss.2016.07.008
   Gupta RK, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P170, DOI 10.1145/2856636.2856655
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI [10.9734/BJAST/2015/14975, DOI 10.9734/BJAST/2015/14975]
   Kaiser M., 2011, Proceedings of the 2011 Agile Conference, P175, DOI 10.1109/AGILE.2011.50
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lenarduzzi V., 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870169
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Malakuti S, 2020, LECT NOTES COMPUT SC, V12292, P296, DOI 10.1007/978-3-030-58923-3_20
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   McConnell S., 2008, MANAGING TECHNICAL D
   Morgenthaler J.D., 2012, Proc. of the 3rd Int'l Workshop on Managing Technical Debt (MTD), P1, DOI DOI 10.1109/MTD.2012.6225994
   Pearson K, 1901, PHILOS T R SOC LOND, V195, P1
   Pérez B, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106692
   Ramasubbu N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P883, DOI 10.1145/3180155.3182529
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Rocha JC, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P64, DOI 10.1145/3131151.3131164
   Schmid Klaus, 2013, QOSA 13 P 9 INT ACMS, P153, DOI [DOI 10.1145/2465478.2465492, 10.1145/2465478.2465492]
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Soliman M, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106669
   Tonin GS, 2017, LECT NOTES BUS INF P, V283, P84, DOI 10.1007/978-3-319-57633-6_6
   Treude C., 2011, 2010 32nd International Conference on Software Engineering (ICSE), P365, DOI 10.1145/1806799.1806854
   Tsoukalas D, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110777
   Verdecchia R, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110925
   Vogel-Heuser B, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110809
   Yang Y, 2019, PROCEDIA COMPUT SCI, V153, P108, DOI 10.1016/j.procs.2019.05.061
   Yli-Huumo J., 2015, LECT NOTES BUSINESS, V210, P5, DOI [10.1007/978-3-319-19593-3, DOI 10.1007/978-3-319-19593-3]
   Yli-Huumo J, 2016, LECT NOTES COMPUT SC, V10027, P368, DOI 10.1007/978-3-319-49094-6_24
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
NR 56
TC 4
Z9 4
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2022
VL 148
AR 106926
DI 10.1016/j.infsof.2022.106926
EA MAY 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1P7WT
UT WOS:000802216300001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Cortiñas, A
   Fuentes, L
   Luaces, MR
AF Horcas, Jose-Miguel
   Cortinas, Alejandro
   Fuentes, Lidia
   Luaces, Miguel R.
TI Combining multiple granularity variability in a software product line
   approach for web engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Annotations; Composition; Feature models; SPL; Variability; Web
   engineering
ID FRAMEWORK; EVOLUTION; SYSTEMS
AB Context: Web engineering involves managing a high diversity of artifacts implemented in different languages and with different levels of granularity. Technological companies usually implement variable artifacts of Software Product Lines (SPLs) using annotations, being reluctant to adopt hybrid, often complex, approaches combining composition and annotations despite their benefits. Objective: This paper proposes a combined approach to support fine and coarse-grained variability for web artifacts. The proposal allows web developers to continue using annotations to handle fine-grained variability for those artifacts whose variability is very difficult to implement with a composition-based approach, but obtaining the advantages of the composition-based approach for the coarse-grained variable artifacts. Methods: A combined approach based on feature modeling that integrates annotations into a generic composition-based approach. We propose the definition of compositional and annotative variation points with custom-defined semantics, which is resolved by a scaffolding-based derivation engine. The approach is evaluated on a real-world web-based SPL by applying a set of variability metrics, as well as discussing its quality criteria in comparison with annotations, compositional, and combined existing approaches. Results: Our approach effectively handles both fine and coarse-grained variability. The mapping between the feature model and the web artifacts promotes the traceability of the features and the uniformity of the variation points regardless of the granularity of the web artifacts. Conclusions: Using well-known techniques of SPLs from an architectural point of view, such as feature modeling, can improve the design and maintenance of variable web artifacts without the need of introducing complex approaches for implementing the underlying variability.
C1 [Horcas, Jose-Miguel; Fuentes, Lidia] Univ Malaga, Andalucia Tech, Malaga, Spain.
   [Cortinas, Alejandro; Luaces, Miguel R.] Univ A Coruna, CITIC, Fac Informat, Database Lab, Elvina 15071, A Coruna, Spain.
C3 Universidad de Malaga; Universidade da Coruna
RP Horcas, JM (corresponding author), Univ Malaga, Andalucia Tech, Malaga, Spain.
EM horcas@lcc.uma.es; alejandro.cortinas@udc.es; lff@lcc.uma.es;
   miguel.luaces@udc.es
RI Luaces, Miguel R./HTP-5849-2023; Horcas Aguilera, José
   Miguel/R-3564-2018
OI Luaces, Miguel R./0000-0003-0549-2000; Horcas Aguilera, José
   Miguel/0000-0002-7771-0575
FU projects Magic [P12-TIC1814]; FEDER funds [RTI2018-099213-B-I00];
   MCI/AEI/FEDER, UE [P18-FR-1081]; LEIA [UMA18-FEDERIA-157]; TASOVA
   [MCIU-AEI TIN2017-90644-REDT]; European Union [DAEMON 101017109];
   MCIN/AEI [PID2020-114635 RB-I00, PID2019-105221RB-C41];
   NextGenerationEU/PRTR; FLATCITY-POC [PDC2021-121239-C31]; GAIN/Xunta de
   Galicia/ERDF CEDCOVID [COV20/00604]; Xunta de Galicia/FEDER-UE GRC
   [ED431C 2021/53]; MICIU/FEDER-UE BIZDEVOPSGLOBAL [RTI-2018-098309-B-C32]
FX The work of the authors from the Universidad de Malaga is supported by
   the projects Magic P12-TIC1814 (post-doctoral research grant), MEDEA
   RTI2018-099213-B-I00 (co-financed by FEDER funds), Rhea P18-FR-1081
   (MCI/AEI/FEDER, UE), LEIA UMA18-FEDERIA-157, TASOVA MCIU-AEI
   TIN2017-90644-REDT and, European Union's H2020 research and innovation
   program under grant agreement DAEMON 101017109. The work of the authors
   from the Universidade da Coruna has been funded by
   MCIN/AEI/10.13039/501100011033, NextGenerationEU/PRTR, FLATCITY-POC:
   PDC2021-121239-C31; MCIN/AEI/10.13039/501100011033 EXTRACompact:
   PID2020-114635 RB-I00; GAIN/Xunta de Galicia/ERDF CEDCOVID: COV20/00604;
   Xunta de Galicia/FEDER-UE GRC: ED431C 2021/53; MICIU/FEDER-UE
   BIZDEVOPSGLOBAL: RTI-2018-098309-B-C32; MCIN/AEI/10.13039/50110 0011033
   MAGIST: PID2019-105221RB-C41.
CR Anastasopoulos M., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/379377.375269
   [Anonymous], 2014, ACM SIGPLAN INT C GE
   [Anonymous], 2005, SOFTW DEV J
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Balzerani L., 2005, PROC ACM S APPL COMP, P1689, DOI DOI 10.1145/1066677.1067059
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory Don, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P291
   Batory D.S., 2013, P 5 INT WORKSH FEAT, P9, DOI [10.1145/2528265.2528269, DOI 10.1145/2528265.2528269]
   Batory D, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P182, DOI 10.1145/3307630.3342406
   Behringer B., 2016, SAC, P1504, DOI [10.1145/2851613.2851791, DOI 10.1145/2851613.2851791]
   Behringer B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P775, DOI 10.1145/2635868.2666605
   Berger T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P174, DOI 10.1145/3307630.3342403
   Beuche D., 2016, SPLC 16, P333
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Coady Y., 2001, Software Engineering Notes, V26, P88, DOI 10.1145/503271.503223
   CORTIAS A, 2017, P 21 INT SYST SOFTW, V1, P190, DOI DOI 10.1145/3106195.3106222
   Corti┬u┬as A., P 21 INT SYSTEMS SOF
   El-Sharkawy S, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377031
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Harrington A, 2011, INT CONF PERVAS COMP, P172, DOI 10.1109/PERCOM.2011.5767582
   HAUGEN B, 2008, SOFTWARE PRODUCT LIN, P139, DOI DOI 10.1109/SPLC.2008.25
   Haugen O, 2014, LECT NOTES COMPUT SC, V8769, P1, DOI 10.1007/978-3-319-11743-0_1
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   HORCAS J, 2019, 23 INT SYST SOFTW PR, VA
   Horcas JM, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P196, DOI 10.1145/3233027.3233049
   Horcas JM, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P32, DOI 10.1145/3109729.3109749
   Horcas JM, 2016, IEEE INT ENTERP DIST, P99
   Horcas JM, 2016, J SYST SOFTWARE, V112, P78, DOI 10.1016/j.jss.2015.11.005
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI [10.9734/BJAST/2015/14975, DOI 10.9734/BJAST/2015/14975]
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2008, Proc. of GPCE'08, P35
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Koscielny Jonathan, 2014, P 2014 INT C PRINC P, P63
   Krueger C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P1, DOI 10.1145/3236405.3236409
   Krüger J, 2018, SOFTWARE PRACT EXPER, V48, P402, DOI 10.1002/spe.2525
   Krüger J, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P74, DOI 10.1145/3001867.3001876
   KSTNER C, 2008, PROC INT CONF SOFTW, P311
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Laguna MA, 2009, LECT NOTES COMPUT SC, V5648, P205, DOI 10.1007/978-3-642-02818-2_16
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Lence R., 2011, P 5 EUR C SOFTW ARCH, DOI [10.1145/2031759.2031768, DOI 10.1145/2031759.2031768]
   Loughran N, 2008, LECT NOTES COMPUT SC, V4954, P36
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Naily MA, 2018, LECT NOTES COMPUT SC, V10729, P246, DOI 10.1007/978-3-319-74781-1_18
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Sánchez VR, 2020, IEEE ACCESS, V8, P94594, DOI 10.1109/ACCESS.2020.2993248
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vale G, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P427, DOI 10.1109/ITNG.2015.75
   Walkingshaw E, 2013, ACM SIGPLAN NOTICES, V48, P132, DOI 10.1145/2480361.2371421
NR 57
TC 2
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2022
VL 148
AR 106910
DI 10.1016/j.infsof.2022.106910
EA APR 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D2RE
UT WOS:000793652100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Li, ZS
   Werner, C
   Ernst, N
   Damian, D
AF Li, Ze Shi
   Werner, Colin
   Ernst, Neil
   Damian, Daniela
TI Towards privacy compliance: A design science study in a small
   organization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Continuous software engineering; Privacy;
   GDPR; Design science
ID REQUIREMENTS; CHALLENGES; SECURITY; INTERNET
AB Context: Complying with privacy regulations has taken on new importance with the introduction of the EU's General Data Protection Regulation (GDPR) and other privacy regulations. Privacy measures are becoming a paramount requirement demanding software organizations' attention as recent privacy breaches such as the Capital One data breach affected millions of customers. Software organizations, however, struggle with achieving privacy compliance. In particular, there is a lack of research into the organizational practices and challenges involved in compliance, particularly for small and medium enterprises (SMEs), which represent a sizeable portion of organizations. Many SMEs use a continuous software engineering (CSE) approach, which introduces additional adoption and application challenges. For example, the fast pace of CSE makes it harder for SMEs that are already more resource constrained to prioritize non-functional requirements such as privacy.Objective: This paper aims to fill a gap in the under-researched area of continuous compliance with privacy requirements in practice, by investigating how a continuous practicing SME dealt with GDPR compliance.Method: Using design science, we conducted an in-depth ethnographically informed study over the span of 16 months and iteratively developed two artifacts to help address the organization's challenges in addressing GDPR compliance.Results: We identified 3 main challenges that our collaborating organization experienced when trying to comply with the GDPR. To help mitigate the challenges, we developed two design science artifacts, which include a list of privacy requirements that operationalized the GDPR principles for automated verification, and an automated testing tool that helps to verify these privacy requirements. We validated these artifacts through close collaboration with our partner organization and applying our artifacts to the partner organization's system.Conclusions: We conclude with a discussion of opportunities and obstacles in leveraging CSE to achieve continuous compliance with the GDPR. We also highlight the importance of building a shared understanding of privacy non-functional requirements and how risk management plays an important role in an organization's GDPR compliance.
C1 [Li, Ze Shi; Werner, Colin; Ernst, Neil; Damian, Daniela] Univ Victoria, Victoria, BC, Canada.
C3 University of Victoria
RP Li, ZS (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM lize@uvic.ca
OI Werner, Colin/0000-0002-4541-7796
FU Mitacs [IT12220]
FX Acknowledgments We thank our collaborating organization for their
   support and time. Our research was supported by Mitacs Ref: IT12220.
CR Altorbaq A, 2017, INT CONF INTERNET, P305, DOI 10.23919/ICITST.2017.8356406
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   Aranda J, 2007, INT REQUIR ENG CONF, P39, DOI 10.1109/RE.2007.54
   Ataei M, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7110442
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Borg A., 2003, Proceedings of the 3rd Conference on Software Engineering Research and Practice in Sweden (SERPS'03), P1
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Brodin M., 2019, European Journal for Security Research, V4, P243, DOI DOI 10.1007/S41125-019-00042-Z
   Caracciolo A, 2014, LECT NOTES COMPUT SC, V8627, P374, DOI 10.1007/978-3-319-09970-5_32
   Cavoukian A, 2010, Identity in the Information Society, V3, P363, DOI DOI 10.1007/S12394-010-0054-Y
   Cavoukian A., 2009, Identity in the Information Society, V3, P247, DOI DOI 10.1007/S12394-010-0062-Y
   Chantzos I.., 2019, GDPR TURNS 1 MANY CO
   CloudSploit, TECHN AN CAP ON HACK
   Cool A, 2019, SOC STUD SCI, V49, P503, DOI 10.1177/0306312719846557
   De Hert P, 2018, COMPUT LAW SECUR REV, V34, P193, DOI 10.1016/j.clsr.2017.10.003
   DeMontety C., 2019, IFIPTM 2019 IAICT, P1, DOI DOI 10.1007/978-3-030-33716-21
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Elga A, 2007, NOUS, V41, P478, DOI 10.1111/j.1468-0068.2007.00656.x
   Ernst N., ENABLING INCREMENTAL, P35
   European Commission, 2019, DAT PROT EU
   Farley D.., 2019, DAVE FARLEYS WEBLOG
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, Continuous integration
   Glinz M., 2005, 3 WORLD C SOFTW QUAL
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Greenstein S.M., 1997, IND CORP CHANGE, V6, P247, DOI DOI 10.1093/ICC/6.2.247
   Grundstrom C.., MAKING SENSE GEN DAT, P10
   Guerriero M, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P172, DOI 10.1145/3194133.3194140
   Gurses Seda, 2011, COMPUT PRIV DATA PRO, V14, P25
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hjerppe K., 2019, ARXIV190707498CS
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Huth D.., 2019, AMCIS 2019 P
   ICO, 2020, ACC GOV
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lindqvist J, 2018, INT J LAW INFORM TEC, V26, P45, DOI 10.1093/ijlit/eax024
   Fernández-Alemán JL, 2013, J BIOMED INFORM, V46, P541, DOI 10.1016/j.jbi.2012.12.003
   Massey Aaron K., 2008, 2008 Requirements Engineering and Law. RELAW'08, P1, DOI 10.1109/RELAW.2008.1
   Massey AK, 2010, REQUIR ENG, V15, P119, DOI 10.1007/s00766-009-0089-5
   Morrison P, 2013, INT WORK SOFTW, P46, DOI 10.1109/SEHC.2013.6602477
   Narendra M.., 2019, ALMOST 3 EU FIRMS ST
   Palmirani M, 2018, FRONT ARTIF INTEL AP, V313, P91, DOI 10.3233/978-1-61499-935-5-91
   Poort Eltjo R., 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P37, DOI 10.1007/978-3-642-28714-5_4
   Poritskiy N.., 2019, DIGIT POLICY REGUL G
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Sandra DR, 2018, LECT NOTES COMPUT SC, V11230, P258, DOI 10.1007/978-3-030-02671-4_15
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Sedlmair M, 2012, IEEE T VIS COMPUT GR, V18, P2431, DOI 10.1109/TVCG.2012.213
   Sirur S.., 2018, ARXIV180807338CS
   Smith O, 2018, Forbes
   Spiekermann S, 2012, COMMUN ACM, V55, P38, DOI 10.1145/2209249.2209263
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Steffens A., DATA DRIVEN CONTINUO, V7
   Taipale O, 2011, INT J SYST ASSUR ENG, V2, P114, DOI 10.1007/s13198-011-0065-6
   Tamburri DA, 2020, INFORM SYST, V91, DOI 10.1016/j.is.2019.101469
   Tikkinen-Piri C, 2018, COMPUT LAW SECUR REV, V34, P134, DOI 10.1016/j.clsr.2017.05.015
   Torre D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P1, DOI 10.1109/MODELS.2019.00-20
   Urquhart L, 2018, PERS UBIQUIT COMPUT, V22, P317, DOI 10.1007/s00779-017-1069-2
   Werner C., 2021, IEEE T SOFTWARE ENG, V1, DOI 10.1109/TSE.2021.3066330
   Werner C, 2020, INT REQUIR ENG CONF, P90, DOI 10.1109/RE48521.2020.00021
   Yu L, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106199
NR 67
TC 8
Z9 8
U1 4
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106868
DI 10.1016/j.infsof.2022.106868
EA FEB 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700001
DA 2024-07-18
ER

PT J
AU Hosseini, MB
   Breaux, TD
   Slavin, R
   Niu, JW
   Wang, XY
AF Hosseini, Mitra Bokaei
   Breaux, Travis D.
   Slavin, Rocky
   Niu, Jianwei
   Wang, Xiaoyin
TI Analyzing privacy policies through syntax-driven semantic analysis of
   information types
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Privacy policy; Ambiguity; Generality; Ontology
ID REQUIREMENTS; FRAMEWORK; AMBIGUITY; LANGUAGE
AB Context: Several government laws and app markets, such as Google Play, require the disclosure of app data practices to users. These data practices constitute critical privacy requirements statements, since they underpin the app's functionality while describing how various personal information types are collected, used, and with whom they are shared.
   Objective: Abstract and ambiguous terminology in requirements statements concerning information types (e.g., "we collect your device information"), can reduce shared understanding among app developers, policy writers, and users.
   Method: To address this challenge, we propose a syntax-driven method that first parses a given information type phrase (e.g. mobile device identifier) into its constituents using a context-free grammar and second infers semantic relationships between constituents using semantic rules. The inferred semantic relationships between a given phrase and its constituents generate a hierarchy that models the generality and ambiguity of phrases. Through this method, we infer relations from a lexicon consisting of a set of information type phrases to populate a partial ontology. The resulting ontology is a knowledge graph that can be used to guide requirements authors in the selection of the most appropriate information type terms.
   Results: We evaluate the method's performance using two criteria: (1) expert assessment of relations between information types; and (2) non-expert preferences for relations between information types. The results suggest performance improvement when compared to a previously proposed method. We also evaluate the reliability of the method considering the information types extracted from different data practices (e.g., collection, usage, sharing, etc.) in privacy policies for mobile or web-based apps in various app domains.
   Contributions: The method achieves average of 89% precision and 87% recall considering information types from various app domains and data practices. Due to these results, we conclude that the method can be generalized reliably in inferring relations and reducing the ambiguity and abstraction in privacy policies.
C1 [Hosseini, Mitra Bokaei] St Marys Univ, 1 Camino Santa Maria, San Antonio, TX 78228 USA.
   [Breaux, Travis D.] Carnegie Mellon Univ, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
   [Slavin, Rocky; Niu, Jianwei; Wang, Xiaoyin] Univ Texas San Antonio, 1 UTSA Circle, San Antonio, TX USA.
C3 Carnegie Mellon University; University of Texas System; University of
   Texas at San Antonio (UTSA)
RP Hosseini, MB (corresponding author), St Marys Univ, 1 Camino Santa Maria, San Antonio, TX 78228 USA.
EM mbokaeihossein@stmarytx.edu; breaux@cs.cmu.edu; Rocky.Slavin@utsa.edu;
   Jianwei.Niu@utsa.edu; xiaoyin.wang@utsa.edu
OI Slavin, Rocky/0000-0003-1283-2595
FU NSF, United State [1736209, 1748109, 2007718, 1453139, 1948244]; Direct
   For Computer & Info Scie & Enginr; Division Of Computer and Network
   Systems [1948244, 1748109] Funding Source: National Science Foundation
FX We thank Xue Qin for her participation as an expert in experiment
   E<INF>1.2</INF>. This research was supported by NSF, United State awards
   #1736209, #1748109, #2007718, #1453139, and #1948244.
CR [Anonymous], 2017, NDSS
   [Anonymous], 2018, ANAL QUALITATIVE DAT
   [Anonymous], 1998, COURSE GEN LINGUISTI
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bach E., 1976, An extension of classical transformational grammar
   Barendregt H.P., 1985, STUDIES LOGIC FDN MA, V103
   Berry DM, 2004, SPRING INT SER ENG C, V753, P7
   Bhatia J, 2016, INT REQUIR ENG CONF, P26, DOI 10.1109/RE.2016.20
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Bhatia J, 2015, 8TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW 2015), P19, DOI 10.1109/RELAW.2015.7330207
   Bokaei Hosseini Mitra, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P97, DOI 10.1007/978-3-030-44429-7_7
   Boyd S, 2007, LECT NOTES COMPUT SC, V4542, P203
   Breaux TD, 2014, REQUIR ENG, V19, P281, DOI 10.1007/s00766-013-0190-7
   Breaux TD, 2011, COMPUT SECUR, V30, P178, DOI 10.1016/j.cose.2010.11.003
   Breaux TD, 2009, COMPUT SECUR, V28, P8, DOI 10.1016/j.cose.2008.08.001
   Breitman KK, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P309
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Creswell J.W., 2014, Fourth Edition. Research design: Qualitative, quantitative
   Dermeval D, 2016, REQUIR ENG, V21, P405, DOI 10.1007/s00766-015-0222-6
   Evans MC, 2017, INT REQUIR ENG CONF, P312, DOI 10.1109/RE.2017.87
   Federal Trade Commission, 2019, FTCS 5 BILL FAC SETT
   Fensel D, 2001, IEEE INTELL SYST APP, V16, P8, DOI 10.1109/MIS.2001.1183337
   Ferrari A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P191, DOI 10.1109/RE.2012.6345803
   Ferrari A, 2016, REQUIR ENG, V21, P333, DOI 10.1007/s00766-016-0249-3
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FREGE G, 1892, BEGRIFF GEGENSTAND
   Gervasi V, 2010, LECT NOTES COMPUT SC, V6182, P248, DOI 10.1007/978-3-642-14192-8_22
   Gleich B, 2010, LECT NOTES COMPUT SC, V6182, P218, DOI 10.1007/978-3-642-14192-8_20
   Gordon D. G., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P91, DOI 10.1109/RE.2012.6345843
   Harkous H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P531
   Harris Kamala D., 2013, Privacy on the Go: Recommendations for the Mobile Ecosystem
   Harwell R., 1993, Proceedings of the Third Annual International Symposium, National Council of Systems Engineers (NCOSE), P17
   Hookway C, 2010, PEIRCE ARG PHILOS
   Hosseini M.B., 2016, P AAAI FALL S SERIES
   Hosseini M. Bokaei, 2020, MENDELEY DATA, DOI [10.17632/46r2vd7jnv.1, DOI 10.17632/46R2VD7JNV.1]
   Hosseini MB, 2018, LECT NOTES COMPUT SC, V10753, P39, DOI 10.1007/978-3-319-77243-1_3
   Hui Yang, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P25, DOI 10.1109/RE.2010.14
   Humphreys L., 2020, ARTIF INTELL LAW, P1, DOI DOI 10.1007/s10506-020-09271-3
   IEEE recommended practice for software requirements specifications, 1998, IEEE COMPUTER SOC SO, V830
   Jackson M., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P2, DOI 10.1109/ISRE.1995.512540
   Janssen T. M., 1997, Handbook of Logic and Language, P417
   Jurafsky D., 2014, SPEECH LANGUAGE PROC, V3
   Kamsties E., 2000, P 13 INT C SOFTW SYS
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   LAMI G., 2004, AUTOMATIC TOOL ANAL
   Massey AK, 2017, LECT NOTES COMPUT SC, V10650, P231, DOI 10.1007/978-3-319-69904-2_19
   Massey AK, 2014, INT REQUIR ENG CONF, P83, DOI 10.1109/RE.2014.6912250
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   Mich Luisa, 2000, INT C SOFTW THEOR PR
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nigam A., 2012, INT J COMPUTER SCI I, V9, P350
   Oltramari A, 2018, SEMANT WEB, V9, P185, DOI 10.3233/SW-170283
   Petronella Gabriele., 2014, Analyzing privacy of android applications
   Reidenberg JR, 2016, J LEGAL STUD, V45, pS163, DOI 10.1086/688669
   Saldana J., 2015, The coding manual for qualitative researchers
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Slavin R, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P299, DOI [10.1109/MobileSoft.2016.069, 10.1145/2897073.2897720]
   SLOVIC P, 1995, AM PSYCHOL, V50, P364, DOI 10.1037/0003-066X.50.5.364
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P37, DOI 10.1145/3180155.3180196
   Wilson S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1330
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Zhao L., 2020, ARXIV PREPRINT ARXIV
   Zimmeck S, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1
NR 64
TC 7
Z9 7
U1 3
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106608
DI 10.1016/j.infsof.2021.106608
EA MAY 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TI1GV
UT WOS:000672531500013
OA Bronze
DA 2024-07-18
ER

PT J
AU Zhang, H
   Mao, RF
   Huang, H
   Dai, QM
   Zhou, X
   Shen, HF
   Rong, GP
AF Zhang, He
   Mao, Runfeng
   Huang, Huang
   Dai, Qiming
   Zhou, Xin
   Shen, Haifeng
   Rong, Guoping
TI Processes, challenges and recommendations of Gray Literature Review: An
   experience report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Gray literature review; Evidence-based software engineering; DevSecOps
ID SYSTEMATIC LITERATURE-REVIEWS; GREY LITERATURE; GUIDELINES
AB Context: Systematic Literature Review (SLR), as a tool of Evidence-Based Software Engineering (EBSE), has been widely used in Software Engineering (SE). However, for certain topics in SE, especially those that are trendy or industry driven, academic literature is generally scarce and consequently Gray Literature (GL) becomes a major source of evidence. In recent years, the adoption of Gray Literature Review (GLR) or Multivocal Literature Review (MLR) is rising steadily to provide the state-of-the-practice of a specific topic where SLR is not a viable option.
   Objective: Although some SLR guidelines recommend the use of GL and several MLR guidelines have already been proposed in SE, researchers still have conflicting views on the value of GL and commonly accepted GLR or MLR studies are generally lacking in terms of publication. This experience report aims to shed some light on GLR through a case study that uses SLR and MLR guidelines to conduct a GLR on an emerging topic in SE to specifically answer the questions related to the reasons of using GL, the processes of conducting GL, and the impacts of GL on review results.
   Method: We retrospect the review process of conducting a GLR on the topic of DevSecOps with reference to Kitchenham's SLR and Garousi's MLR guidelines. We specifically reflect on the processes we had to adapt in order to tackle the challenges we faced. We also compare and contrast our GLR with existing MLRs or GLRs in SE to contextualize our reflections.
   Results: We distill ten challenges in nine activities of a GLR process. We provide reasons for these challenges and further suggest ways to tackle them during a GLR process. We also discuss the decision process of selecting a suitable review methodology among SLR, MLR and GLR and elaborate the impacts of GL on our review results.
   Conclusion: Although our experience on GLR is mainly derived from a specific case study on DevSecOps, we conjecture that it is relevant and would be beneficial to other GLR or MLR studies. We also expect our experience would contribute to future GLR or MLR guidelines, in a way similar to how SLR guidelines learned from the SLR experience report a dozen years ago. In addition, other researchers may find our decision making process useful before they conduct their own reviews.
C1 [Zhang, He; Mao, Runfeng; Huang, Huang; Dai, Qiming; Zhou, Xin; Rong, Guoping] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, HilstLab, Peter Faber Business Sch, Sydney, NSW, Australia.
C3 Nanjing University; Australian Catholic University
RP Rong, GP (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM ronggp@nju.edu.cn
RI Shen, Haifeng/HDN-6446-2022; Rong, Guoping/CAF-0529-2022; Rong,
   Guoping/CAH-6145-2022; huang, huang/ISA-4927-2023
OI Shen, Haifeng/0000-0002-8221-981X; Huang, Huang/0000-0002-1296-4363
FU National Key Research and Development Program of China [2019YFE0105500];
   Research Council of Norway [309494]; National Natural Science Foundation
   of China [62072227, 61802173]; Intergovernmental Bilateral Innovation
   Project of Jiangsu Province [BZ2020017]
FX This work is jointly supported by the National Key Research and
   Development Program of China (No.2019YFE0105500) and the Research
   Council of Norway (No.309494), as well as the National Natural Science
   Foundation of China (Grants No.62072227, 61802173), Intergovernmental
   Bilateral Innovation Project of Jiangsu Province (BZ2020017).
CR Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2019, BUILDING SECURITY MA
   [Anonymous], 2011, QUALITATIVE INTERVIE
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Benzies KM, 2006, WORLDV EVID-BASED NU, V3, P55, DOI 10.1111/j.1741-6787.2006.00051.x
   Warncke AB, 2022, J MATERN-FETAL NEO M, V35, P116, DOI 10.1080/14767058.2020.1712708
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Chicoski B., 2018, ORCHESTRATING DEVSEC
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Conn VS, 2003, NURS RES, V52, P256, DOI 10.1097/00006199-200307000-00008
   Díaz J, 2019, IEEE ACCESS, V7, P100283, DOI 10.1109/ACCESS.2019.2930000
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fowler Jr F.J, 2013, Survey Research Methods
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Haynes R.B., 1997, Canadian Medical Association. Journal, V157, P788
   Hove S.E., 2005, P 11 IEEE INT SOFTW, P1
   Islam C, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3305268
   Kerravala Z., 2015, SHIFT DEVOPS REQUIRE
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   Low JF, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND ENGINEERING MANAGEMENT (IEEM), P1193, DOI 10.1109/IEEM.2015.7385836
   MacDonald N., 2016, DevSecOps: How to seamlessly integrate security into DevOps
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Mallett Sue, 2002, P 4 S SYSTEMATIC REV, P2
   Mao RF, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P450, DOI 10.1109/QRS51102.2020.00064
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Miller M., 2018, DEVOPS SECURITY BEST
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Neto GTG, 2019, INT SYMP EMP SOFTWAR, P1
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petrosino A., 2000, Evaluation and Research in Education, V14, P206
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Putta A, 2018, LECT NOTES COMPUT SC, V11271, P334, DOI 10.1007/978-3-030-03673-7_24
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Raulamo-Jurvanen P., 2017, P 21 INT C EV ASS SO, P21, DOI DOI 10.1145/3084226.3084252
   Rong GP, 2020, SOFTWARE PRACT EXPER, V50, P210, DOI 10.1002/spe.2770
   Sari A, 2019, J SYST SOFTWARE, V153, P200, DOI 10.1016/j.jss.2019.04.027
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Tomas N., 2019, P 2019 INT C CYBER S
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Tyndall J, 2008, AACODS checklist
   Vehent J., 2015, CONTINUOUS SECURITY
   Williams A., 2019, THESIS U CANTERBURY
   Zaharia M., 2012, 9 USENIX S NETWORKED
   Zhang H, 2020, PROC INT CONF SOFTW, P1422, DOI 10.1145/3377811.3380336
   Zhang H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P659, DOI 10.1145/3338906.3338976
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 67
TC 2
Z9 2
U1 3
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106607
DI 10.1016/j.infsof.2021.106607
EA MAY 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400009
DA 2024-07-18
ER

PT J
AU Ibias, A
   Núñez, M
   Hierons, RM
AF Ibias, Alfredo
   Nunez, Manuel
   Hierons, Robert M.
TI Using mutual information to test from Finite State Machines: Test suite
   selection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal approaches to testing; Information Theory; Mutual information;
   Finite State Machines
AB Context: Mutual Information is an information theoretic measure designed to quantify the amount of similarity between two random variables ranging over two sets. In this paper, we adapt this concept and show how it can be used to select a good test suite to test from a Finite State Machine (FSM) based on a maximise diversity approach. Objective: The main goal of this paper is to use Mutual Information in order to select test suites to test from FSMs and evaluate whether we obtain better results, concerning the quality of the selected test suite, than current state-of-the-art measures. Method: First, we defined our scenario. We considered the case where we receive two (or more) test suites and we have to choose between them. We were interested in this scenario because it is a recurrent case in regression testing. Second, we defined our notion based on Mutual Information: Biased Mutual Information. Finally, we carried out experiments in order to evaluate the measure. Results: We obtained experimental evidence that demonstrates the potential value of the measure. We also showed that the time needed to compute the measure is negligible when compare to the time needed to apply extra testing. We compared our measure with a state-of-the-art test selection measure and showed that our proposal outperforms it. Finally, we have compared our measure with a notion of transition coverage. Our experiments showed that our measure is slightly worse than transition coverage, as expected, but its computation is 10 times faster. Conclusion: Our experiments showed that Biased Mutual Information is a good measure for selecting test suites, outperforming the current state-of-the-art measure, and having a (negative) correlation to fault coverage. Therefore, we can conclude that our new measure can be used to select the test suite that is likely to find more faults. As a result, it has the potential to be used to automate test generation.
C1 [Ibias, Alfredo; Nunez, Manuel] Univ Complutense Madrid, Inst Tecnol Conocimiento, Madrid, Spain.
   [Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.
C3 Complutense University of Madrid; University of Sheffield
RP Ibias, A (corresponding author), Univ Complutense Madrid, Inst Tecnol Conocimiento, Madrid, Spain.
EM aibias@ucm.es; mn@sip.ucm.es; r.hierons@sheffield.ac.uk
RI Núñez, Manuel/B-6889-2008; Ibias, Alfredo/AAJ-6625-2020
OI Núñez, Manuel/0000-0001-9808-6401; Ibias, Alfredo/0000-0002-3122-4272;
   Hierons, Robert/0000-0002-4771-1446
FU Spanish MINECO/FEDER [RTI2018-093608-B-C31]; Region of Madrid, Spain
   [S2018/TCS-4314]; EIE Funds of the European Union; Region of Madrid -
   Complutense University of Madrid, Spain [PR65/19-22452]; UK EPSRC
   [EP/P006116/2]
FX This work has been supported by the Spanish MINECO/FEDER (grant FAME,
   RTI2018-093608-B-C31); the Region of Madrid, Spain (grant FORTE-CM,
   S2018/TCS-4314) co-funded by EIE Funds of the European Union; the Region
   of Madrid -Complutense University of Madrid, Spain (grant
   PR65/19-22452); and the UK EPSRC (grant InfoTestSS, EP/P006116/2).
CR AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   Allauzen C, 2007, LECT NOTES COMPUT SC, V4783, P11
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrés C, 2009, INT CONF QUAL SOFTW, P145, DOI 10.1109/QSIC.2009.27
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 1996, 10Q8ISOIECJTCISC21WG
   ARRIETA A, 2020, 22 ANN C GEN EV COMP, P1222, DOI DOI 10.1145/3377930.3389810
   Benharref A, 2007, LECT NOTES COMPUT SC, V4581, P13
   Bin Noor T, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P13, DOI 10.1109/SWAN.2015.7070482
   Blundell JK, 1997, ANN SOFTW ENG, V4, P235, DOI 10.1023/A:1018914711050
   Bogdanov K, 2006, FORM ASP COMPUT, V18, P3, DOI 10.1007/s00165-005-0085-6
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Cilibrasi R, 2005, IEEE T INFORM THEORY, V51, P1523, DOI 10.1109/TIT.2005.844059
   Clark D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P599, DOI 10.1109/ICSE.2015.202
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Cover Thomas M, 1999, Elements of information theory
   Derderian K, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1081
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gómez-Abajo P, 2021, SOFTW SYST MODEL, V20, P767, DOI 10.1007/s10270-020-00827-0
   GOMEZABAJO P, 2018, INFORM SOFTWARE TECH, V163, P85, DOI DOI 10.1016/j.scico.2018.01.008
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2019, SCI COMPUT PROGRAM, V177, P1, DOI 10.1016/j.scico.2019.03.004
   Hierons RM, 2018, IEEE T RELIAB, V67, P522, DOI 10.1109/TR.2018.2800093
   Hierons RM, 2017, J SYST SOFTWARE, V132, P319, DOI 10.1016/j.jss.2017.03.011
   Hierons RM, 2009, J LOGIC ALGEBR PROGR, V78, P98, DOI 10.1016/j.jlap.2008.06.001
   Hierons RM, 2017, IEEE T SOFTWARE ENG, V43, P1033, DOI 10.1109/TSE.2017.2652457
   Huang WL, 2017, FORM ASP COMPUT, V29, P335, DOI 10.1007/s00165-016-0402-2
   Hubner F, 2019, SOFTW SYST MODEL, V18, P423, DOI 10.1007/s10270-017-0595-8
   Hwang I, 2010, COMPUT NETW, V54, P1108, DOI 10.1016/j.comnet.2009.10.014
   Ibias A, 2019, INFORM SOFTWARE TECH, V112, P132, DOI 10.1016/j.infsof.2019.04.012
   Ipate F, 2010, THEOR COMPUT SCI, V411, P1770, DOI 10.1016/j.tcs.2010.01.030
   Isberner M, 2015, LECT NOTES COMPUT SC, V9206, P487, DOI 10.1007/978-3-319-21690-4_32
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Larsen K.G., MODELS MINDSETS META, P390
   Li M., 2019, An Introduction to Kolmogorov Complexity and Its Application
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   López N, 2006, THEOR COMPUT SCI, V353, P228, DOI 10.1016/j.tcs.2005.10.047
   MERAYO MG, 2018, MATH COMPUT SCI ENG, V31, P327, DOI DOI 10.1007/s00446-017-0308-0
   MERAYO MG, 2018, DISTRIB COMPUT, V104, P162, DOI DOI 10.1016/j.infsof.2018.07.013
   Miranskyy AV, 2012, INFORM SCIENCES, V203, P59, DOI 10.1016/j.ins.2012.03.017
   Moore E.F., 1956, AUTOMATA STUDIES
   Myers Glenford J., 2011, The Art of Software Testing
   Pattipati K. R., 1991, IEEE Aerospace and Electronics Systems Magazine, V6, P13, DOI 10.1109/62.64988
   PATTIPATI KR, 1990, IEEE T SYST MAN CYB, V20, P872, DOI 10.1109/21.105086
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Pomeranz I, 1997, IEEE T COMPUT, V46, P783, DOI 10.1109/12.599899
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Sagarna R, 2007, IEEE C EVOL COMPUTAT, P438, DOI 10.1109/CEC.2007.4424504
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Simao A, 2012, SOFTW TEST VERIF REL, V22, P435, DOI 10.1002/stvr.452
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Turlea A, 2017, INT SYMP SYMB NUMERI, P153, DOI 10.1109/SYNASC.2017.00034
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
NR 68
TC 5
Z9 5
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106498
DI 10.1016/j.infsof.2020.106498
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nguyen, V
   Le, B
AF Nguyen, Vu
   Le, Bach
TI RLTCP: A reinforcement learning approach to prioritizing automated user
   interface tests
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Coverage graph; Test prioritization; Reinforcement learning; Automation
   testing
ID REGRESSION TEST SELECTION; MINIMIZATION
AB Context: User interface testing validates the correctness of an application through visual cues and interactive events emitted in real-world usages. Performing user interface tests is a time-consuming process, and thus, many studies have focused on prioritizing test cases to help maintain the effectiveness of testing while reducing the need for full execution.
   Objective: This paper describes a novel test prioritization method called RLTCP whose goal is to maximize the number of test faults detected while reducing the amount of test.
   Methods: We define a weighted coverage graph to model the underlying association among test cases for the user interface testing. Our method combines Reinforcement Learning (RL) and the coverage graph to prioritize test cases. While RL is found to be suitable for rapidly changing projects with abundant historical data, the coverage graph considers in-depth the event-based aspects of user interface testing and provides a fine-grained level at which the RL system can gain more insights into individual test cases.
   Results: We experiment and assess the proposed method using nine data sets obtained from two mature web applications, finding that the method outperforms the six, including the state-of-the-art, methods.
   Conclusions: The use of both reinforcement learning and the underlying structure of user interface tests modeled via the coverage has the potential to improve the performance of test prioritization methods. Our study also shows the benefit of using the coverage graph to gain insights into test cases, their relationship and execution history.
C1 [Nguyen, Vu; Le, Bach] Univ Sci, Fac Informat Technol, Ho Chi Minh City, Vietnam.
   [Nguyen, Vu; Le, Bach] Vietnam Natl Univ, Ho Chi Minh City, Vietnam.
C3 Vietnam National University Hochiminh City
RP Nguyen, V (corresponding author), Vietnam Natl Univ, Ho Chi Minh City, Vietnam.
EM nvu@fit.hcmus.edu.vn; ldbach@apcs.vn
RI Nguyen, Vu/F-9490-2015
OI Nguyen, Vu/0000-0002-0594-4372
FU Vietnam's National Foundation for Science and Technology Development
   (NAFOSTED) [NCUD.022019.72]
FX This research is funded by Vietnam's National Foundation for Science and
   Technology Development (NAFOSTED) under grant number NCUD.022019.72. We
   thank the students at the Faculty of Information Technology, University
   of Science, Ho Chi Minh city, Vietnam for their time and effort to
   participate in the experiments.
CR Nguyen A, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P56, DOI 10.1145/3345629.3345636
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2016, SOFTW TEST VERIF REL, DOI DOI 10.1002/STVR.1609
   [Anonymous], 2014, EMPIR SOFTW ENG, DOI DOI 10.1007/S10664-012-9219-7
   [Anonymous], 2015, INFORM SOFTWARE TECH, DOI DOI 10.1016/J.INFSOF.2015.08.008
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Leotta M, 2015, IEEE ICST WORKSHOP
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Myers G.J., 2004, ART SOFTWARE TESTING, V2
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
NR 43
TC 4
Z9 4
U1 6
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106574
DI 10.1016/j.infsof.2021.106574
EA MAR 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900001
DA 2024-07-18
ER

PT J
AU Dalpiaz, F
   Gieske, P
   Sturm, A
AF Dalpiaz, Fabiano
   Gieske, Patrizia
   Sturm, Arnon
TI On deriving conceptual models from user requirements: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 26th International Working Conference on Requirements Engineering
   Foundation for Software Quality (REFSQ)
CY MAR 24-27, 2020
CL Pisa, ITALY
DE Requirements engineering; Conceptual modeling; Use cases; User stories;
   Derivation process
ID INFORMATION-SYSTEMS; SECURITY
AB Context: There are numerous textual notations and techniques that can be used in requirements engineering. Currently, practitioners make a choice without having scientific evidence regarding their suitability for given tasks. This uninformed choice may affect task performance. Objective: In this research, we investigate the adequacy of two well-known notations: use cases and user stories, as a starting point for the manual derivation of a structural conceptual model that represents the domain of the system. We also examine other factors that may affect the performance of this task. Methods: This work relies on two experiments. The first is a controlled classroom experiment. The second one is a quasi-experiment, conducted over multiple weeks, that aims at evaluating the quality of the derived conceptual model in light of the notation used, the adopted derivation process, and the complexity of the system to be. We measure quality in terms of validity and completeness of the conceptual model. Results: The results of the controlled experiment indicate that, for deriving conceptual models, user stories fit better than use cases. Yet, the second experiment indicates that the quality of the derived conceptual models is affected mainly by the derivation process and by the complexity of the case rather than the notation used. Contribution: We present evidence that the task of deriving a conceptual model is affected significantly by additional factors other than requirements notations. Furthermore, we propose implications and hypotheses that pave the way for further studies that compare alternative notations for the same task as well as for other tasks. Practitioners may use our findings to analyze the factors that affect the quality of the conceptual model when choosing a requirements notation and an elicitation technique that best fit their needs.
C1 [Dalpiaz, Fabiano; Gieske, Patrizia] Univ Utrecht, Utrecht, Netherlands.
   [Sturm, Arnon] Ben Gurion Univ Negev, Beer Sheva, Israel.
C3 Utrecht University; Ben Gurion University
RP Dalpiaz, F (corresponding author), Univ Utrecht, Utrecht, Netherlands.
EM f.dalpiaz@uu.nl
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
FU  [S-20339];  [SISE-2019-05]
FX The two experiments obtained research ethics approval from the relevant
   committees at Ben-Gurion University of the Negev and at Utrecht
   University, respectively. At Ben-Gurion University the research was
   approved by the Software and Information Systems Department Ethics
   Committee and the project approval identifier is SISE-2019-05. At
   Utrecht University, the research was approved by the Science-Geosciences
   Ethics Review Board and the research project identifier is Beta S-20339.
   We would like to thank all the students who voluntarily decided to share
   their produced empirical data for research purposes. Also, we are
   grateful to Sergio Espaa and Sjaak Brinkkemper for their terminological
   assistance.
CR Abrial J., 1974, DATA SEMANTICS
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Arora C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293454
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Bano M, 2018, INT REQUIR ENG CONF, P182, DOI 10.1109/RE.2018.00027
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Bradie J, 2015, BIOL INVASIONS, V17, P3455, DOI 10.1007/s10530-015-0970-8
   Cardoso E, 2016, LECT NOTES COMPUT SC, V9974, P347, DOI 10.1007/978-3-319-46397-1_27
   Ciancarini P, 1997, ANN SOFTW ENG, V3, P189, DOI 10.1023/A:1018965316985
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cziharz T, 2015, Handbook of Requirements Modeling IREB Standard
   Dalpiaz F., 2020, EXTRACTION CONCEPTUA
   Dalpiaz F., 2019, INFORM SOFTWARE TECH
   Dalpiaz F., 2018, **DATA OBJECT**, V1, DOI [10.17632/7zbk8zsd8y.1, DOI 10.17632/7ZBK8ZSD8Y.1]
   Dalpiaz F, 2020, LECT NOTES COMPUT SC, V12045, P221, DOI 10.1007/978-3-030-44429-7_16
   Dalpiaz F, 2018, IEEE SOFTWARE, V35, P115, DOI 10.1109/MS.2018.3571242
   Espana Sergio., 2012, 2012 Sixth International Conference on Research Challenges in Information Science (RCIS), P1
   Ferrari A., 2019, SAPEER APPROACH TRAI
   Fortuna MH, 2008, INT REQUIR ENG CONF, P81, DOI 10.1109/RE.2008.43
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Glinz M, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P11, DOI 10.1109/IWSSD.2000.891122
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Hoisl B., 2014, P INT C QUAL INF COM
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Kassab M, 2014, EUROMICRO CONF PROC, P254, DOI 10.1109/SEAA.2014.77
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Maciaszek L., 2001, REQUIREMENTS ANAL SY
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Maiden NAM, 2004, BIOMED SCI INSTRUM, V3084, P368
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mich L., 1996, Natural Language Engineering, V2, P161, DOI 10.1017/S1351324996001337
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Neto FGD, 2020, LECT NOTES COMPUT SC, V12045, P257, DOI 10.1007/978-3-030-44429-7_18
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Saeki M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P64, DOI 10.1145/74587.74594
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sturm A., 2020, USER STORIES VS USE, DOI 10.23644/uu.c.4815591.v1
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Wautelet Y, 2018, LECT NOTES COMPUT SC, V10753, P209, DOI 10.1007/978-3-319-77243-1_13
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 65
TC 10
Z9 11
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106484
DI 10.1016/j.infsof.2020.106484
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA QB6LB
UT WOS:000614250000008
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, SS
   Zhang, H
   Jia, ZJ
   Zhong, CX
   Zhang, C
   Shan, ZH
   Shen, JF
   Babar, MA
AF Li, Shanshan
   Zhang, He
   Jia, Zijia
   Zhong, Chenxing
   Zhang, Cheng
   Shan, Zhihao
   Shen, Jinfeng
   Babar, Muhammad Ali
TI Understanding and addressing quality attributes of microservices
   architecture: A Systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Microservices; Monolith; Quality attributes; Systematic literature
   review
ID SOFTWARE SYSTEMS; IMPLEMENTATION; OPTIMIZATION; MIGRATION; DESIGN
AB Context: As a rapidly adopted architectural style in software engineering, Microservices Architecture (MSA) advocates implementing small-scale and independently distributed services, rather than binding all functions into one monolith. Although many initiatives have contributed to the quality improvement of microservicesbased systems, there is still a lack of a systematic understanding of the Quality Attributes (QAs) associated with MSA.
   Objective: This study aims to investigate the evidence-based state-of-the-art of QAs of microservices-based systems. Method: We carried out a Systematic Literature Review (SLR) to identify and synthesize the relevant studies that report evidence related to QAs of MSA.
   Results: Based on the data extracted from the 72 selected primary studies, we portray an overview of the six identified QAs most concerned in MSA, scalability, performance, availability, monitorability, security, and testability. We identify 19 tactics that architecturally address the critical QAs in MSA, including two tactics for scalability, four for performance, four for availability, four for monitorability, three for security, and two for testability.
   Conclusion: This SLR concludes that for MSA-based systems: 1) Although scalability is the commonly acknowledged benefit of MSA, it is still an indispensable concern among the identified QAs, especially when trading-off with other QAs, e.g., performance. Apart from the six identified QAs in this study, other QAs for MSA like maintainability need more attention for effective improvement and evaluation in the future. 3) Practitioners need to carefully make the decision of migrating to MSA based on the return on investment, since this architectural style additionally cause some pains in practice.
C1 [Li, Shanshan; Zhang, He; Jia, Zijia; Zhong, Chenxing; Shen, Jinfeng] Nanjing Univ, State Key Lab Novel Software Technol, Software Inst, Nanjing, Jiangsu, Peoples R China.
   [Zhang, Cheng] Anhui Univ, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
   [Shan, Zhihao] Tencent Technol Co Ltd, Shenzhen, Peoples R China.
   [Babar, Muhammad Ali] Univ Adelaide, CREST, Adelaide, SA, Australia.
C3 Nanjing University; Anhui University; Tencent; University of Adelaide
RP Zhang, H (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Software Inst, Nanjing, Jiangsu, Peoples R China.
EM dr.hezhang@gmail.com
RI Yang, Jing/JFK-4046-2023; Li, Shanshan/HLH-7747-2023
OI Yang, Jing/0009-0004-8274-9863; 
FU National Key Research and Development Program of China [2019YFE0105500]
FX This work is supported by the National Key Research and Development
   Program of China (No. 2019YFE0105500)
CR Abad CL, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P101, DOI 10.1145/3185768.3186294
   Abbott Martin L, 2009, The art of scalability: Scalable web architecture, processes
   Ahmadvand M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P68, DOI [10.1109/REW.2016.026, 10.1109/REW.2016.14]
   Alipour H, 2017, IEEE INT CONF BIG DA, P2433, DOI 10.1109/BigData.2017.8258201
   Alshtmaytm N., P 2016 LITE 9 INT SE, VII, P44
   Amaral M, 2015, 2015 IEEE 14TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P27, DOI 10.1109/NCA.2015.49
   [Anonymous], P INT C INF SYST ARC
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bhamare Deval, 2017, 2017 IEEE INT C COMM, P1, DOI DOI 10.1109/ICC.2017.7996729
   Bogner J, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P125, DOI 10.1145/3194164.3194166
   Celesti A, 2017, 2017 IEEE 5TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2017), P372, DOI 10.1109/FiCloud.2017.57
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Crecana CC, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1087, DOI 10.1145/3167132.3167248
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eski S., 2018, 19th International Conference on Agile Software Development: Companion, Porto, Portugal, P1
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Fetzer C., 2017, P 12 INT C AV REL SE, P39
   Filip ID, 2018, IEEE INTERNET THINGS, V5, P2672, DOI 10.1109/JIOT.2018.2792940
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Gan Y, 2018, IEEE COMPUT ARCHIT L, V17, P155, DOI 10.1109/LCA.2018.2839189
   Garcés L, 2017, INFORM SOFTWARE TECH, V82, P121, DOI 10.1016/j.infsof.2016.10.005
   Gotin M, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P157, DOI 10.1145/3184407.3184430
   Gribaudo M, 2018, ELECTRON NOTES THEOR, V337, P45, DOI 10.1016/j.entcs.2018.03.033
   Guerrero C, 2018, J SUPERCOMPUT, V74, P2956, DOI 10.1007/s11227-018-2345-2
   Guerrero C, 2018, J GRID COMPUT, V16, P113, DOI 10.1007/s10723-017-9419-x
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Haselböck S, 2017, PROCEEDINGS OF THE FIFTH EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS (ECBS 2017), DOI 10.1145/3123779.3123804
   Haselböck S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P54, DOI 10.1109/ICSAW.2017.31
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Hassan S, 2016, P IEEE I C SERV COMP, P813, DOI 10.1109/SCC.2016.113
   Hasselbring Wilhelm, 2017, 2017 IEEE International Conference on Software Architecture: Workshops (ICSAW), P243, DOI 10.1109/ICSAW.2017.11
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Jander K, 2018, PROCEDIA COMPUT SCI, V130, P456, DOI 10.1016/j.procs.2018.04.047
   John Wolfgang, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P1127, DOI 10.23919/INM.2017.7987445
   Kakivaya G, 2018, P 13 EUROSYS C, P33
   Kalra S., 2018, P NETWORK DISTRIBUTE, P12
   Kang H, 2016, INT CONF CLOUD ENG, P202, DOI 10.1109/IC2E.2016.26
   Kargar MJ, 2018, 2018 4TH INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P133, DOI 10.1109/ICWR.2018.8387249
   Khazaei H, 2016, INT CONF CLOUD COMP, P261, DOI [10.1109/CloudCom.2016.48, 10.1109/CloudCom.2016.0051]
   Kitajima S, 2017, LECT NOTES COMPUT SC, V10601, P229, DOI 10.1007/978-3-319-69035-3_16
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Klinaku F, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P93, DOI 10.1145/3185768.3186296
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Konara L, 2018, 2018 MORATUWA ENGINEERING RESEARCH CONFERENCE (MERCON) 4TH INTERNATIONAL MULTIDISCIPLINARY ENGINEERING RESEARCH CONFERENCE, P78, DOI 10.1109/MERCon.2018.8421966
   Kookarinrat P, 2016, INT JOINT CONF COMP, P183
   Kratzke N., 2016, P 6 INT C CLOUD COMP, P187
   Krylovskiy A, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P25, DOI 10.1109/FiCloud.2015.55
   Lehva J, 2017, INT C WEB ENG, P75
   Lewis James, 2014, Microservices
   Lin JCW, 2017, INT J FUZZY SYST, V19, P1032, DOI [10.1007/s40815-016-0246-1, 10.1109/IEDM.2016.7838541]
   Liu HZ, 2021, IEEE T BIG DATA, V7, P341, DOI 10.1109/TBDATA.2018.2867485
   Liu XD, 2018, LECT NOTES COMPUT SC, V10969, P176, DOI 10.1007/978-3-319-94376-3_12
   Lloyd W, 2017, INT CONF CLOUD ENG, P159, DOI 10.1109/IC2E.2017.29
   López MR, 2017, COMPANION PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC'17 COMPANION), P35, DOI 10.1145/3147234.3148111
   Ma SP, 2018, P INT COMP SOFTW APP, P81, DOI 10.1109/COMPSAC.2018.10207
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Mayer B, 2018, IEEE INT SYMP SERV O, P21, DOI 10.1109/SOSE.2018.00012
   Mayer B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P66, DOI 10.1109/ICSAW.2017.44
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mei X, 2018, 2018 5TH INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND APPLICATIONS (ICIEA), P79, DOI 10.1109/IEA.2018.8387074
   Meinke K, 2015, LECT NOTES COMPUT SC, V9509, P3, DOI 10.1007/978-3-662-49224-6_1
   Montesi F, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1733, DOI 10.1145/3167132.3167427
   Moradi F, 2017, MEM STUD GLOB CONST, P57
   Newman S., 2015, BUILDING MICROSERVIC
   Nicol J, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P139, DOI 10.1145/3184407.3184433
   Osborne J.W., 2008, BEST PRACTICES QUANT, DOI 10.4135/9781412995627.d8.
   Otterstad C, 2017, LECT NOTES COMPUT SC, V10465, P49, DOI 10.1007/978-3-319-67262-5_4
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Pardon G., 2018, IEEE CLOUD COMPUTING
   Phipathananunth C, 2018, P INT COMP SOFTW APP, P448, DOI 10.1109/COMPSAC.2018.10274
   Prachitmutita I, 2018, PROCEEDINGS OF 2018 TENTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P583, DOI 10.1109/ICACI.2018.8377525
   Rusek M., 2016, INT C SYST SCI, P142
   Savchenko D., 2015, CEUR WORKSHOP P, V1513
   Savchenko DI, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P235, DOI 10.1109/MIPRO.2015.7160271
   Selimi M, 2017, IEEE ACM INT SYMP, P401, DOI 10.1109/CCGRID.2017.28
   Singh V, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P847, DOI 10.1109/CCAA.2017.8229914
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Stubbs J, 2015, 7TH INTERNATIONAL WORKSHOP ON SCIENCE GATEWAYS - IWSG 2015, P34, DOI 10.1109/IWSG.2015.16
   Sun YQ, 2015, INT CONF CLOUD COMP, P50, DOI 10.1109/CloudCom.2015.93
   Thalheim J, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE'17), P14, DOI 10.1145/3135974.3135977
   Toffetti G, 2017, FUTURE GENER COMP SY, V72, P165, DOI 10.1016/j.future.2016.09.002
   Torkura KA, 2017, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC' 17), P171, DOI 10.1145/3147213.3147229
   Ullah F, 2019, J SYST SOFTWARE, V151, P81, DOI 10.1016/j.jss.2019.01.051
   Walsh K, 2017, COMPANION PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UTILITY AND CLOUD COMPUTING (UCC'17 COMPANION), P59, DOI 10.1145/3147234.3148102
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zheng T., 2017 5 INT C ADV CLO
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 94
TC 37
Z9 39
U1 2
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106449
DI 10.1016/j.infsof.2020.106449
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000010
DA 2024-07-18
ER

PT J
AU Fang, S
   Tan, YS
   Zhang, T
   Liu, YP
AF Fang, Sen
   Tan, You-Shuai
   Zhang, Tao
   Liu, Yepang
TI Self-Attention Networks for Code Search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code search; Self-attention mechanism; Joint embedding
AB Context: Developers tend to search and reuse code snippets from a large-scale codebase when they want to implement some functions that exist in the previous projects, which can enhance the efficiency of software development. Objective: As the first deep learning-based code search model, DeepCS outperforms prior models such as Sourcere and CodeHow. However, it utilizes two separate LSTM to represent code snippets and natural language descriptions respectively, which ignores semantic relations between code snippets and their descriptions. Consequently, the performance of DeepCS falls into the bottleneck, and thus our objective is to break this bottleneck. Method: We propose a self-attention joint representation learning model, named SAN-CS (Self -Attention Network for Code Search). Comparing with DeepCS, we directly utilize the self-attention network to construct our code search model. By a weighted average operation, self-attention networks can fully capture the contextual information of code snippets and their descriptions. We first utilize two individual self-attention networks to represent code snippets and their descriptions, respectively, and then we utilize the self-attention network to conduct an extra joint representation network for code snippets and their descriptions, which can build semantic relationships between code snippets and their descriptions. Therefore, SAN-CS can break the performance bottleneck of DeepCS.
   Results: We evaluate SAN-CS on the dataset shared by Gu et al. and choose two baseline models, DeepCS and CARLCS-CNN. Experimental results demonstrate that SAN-CS achieves significantly better performance than DeepCS and CARLCS-CNN. In addition, SAN-CS has better execution efficiency than DeepCS at the training and testing phase.
   Conclusion: This paper proposes a code search model, SAN-CS. It utilizes the self-attention network to perform the joint attention representations for code snippets and their descriptions, respectively. Experimental results verify the effectiveness and efficiency of SAN-CS.
C1 [Fang, Sen; Tan, You-Shuai; Zhang, Tao] Macau Univ Sci & Technol, Macau, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Shenzhen, Peoples R China.
C3 Macau University of Science & Technology; Southern University of Science
   & Technology
RP Zhang, T (corresponding author), Macau Univ Sci & Technol, Macau, Peoples R China.
EM tazhang@must.edu.mo; liuyp1@sustech.edu.cn
RI Zhang, Tao/E-5634-2012; Liu, Yepang/G-6183-2018
OI Zhang, Tao/0000-0002-6272-4069; Fang, Sen/0000-0002-9918-7180
FU Science and Technology Development Fund of Macau, Macau SAR
   [0047/2020/A1]; China Postdoctoral Science Foundation, China
   [2017M621247]; Faculty Research Grant Projects of MUST, Macau SAR
   [FRG-20-008-FI]
FX Many thanks for all reviewers' valuable suggestions and comments. This
   work is supported by the Science and Technology Development Fund of
   Macau, Macau SAR (No. 0047/2020/A1), the China Postdoctoral Science
   Foundation, China (No. 2017M621247), and Faculty Research Grant Projects
   of MUST, Macau SAR (No. FRG-20-008-FI).
CR Al-Maskari Azzah, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P773, DOI 10.1145/1277741.1277902
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Carion Nicolas, 2020, EUR C COMP VIS ECCV, DOI DOI 10.1007/978-3-030-58452-8_13
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chung Junyoung, 2014, ARXIV14123555
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Devlin J., 2019, P 2019 C N AM CHAPTE, P4171
   Frome Andrea, 2013, DEVISE DEEP VISUAL S, P1, DOI DOI 10.5555/2999792.2999849
   Gehring J., 2016, arXiv
   Gehring J., 2017, P MACHINE LEARNING R, P1243
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hochreiter S, 1997, ADV NEUR IN, V9, P473
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Jiang H, 2019, IEEE T SERV COMPUT, V12, P34, DOI 10.1109/TSC.2016.2592909
   Kanoulas Evangelos., 2009, Proceedings of the 18th ACM conference on Information and knowledge management, P611, DOI DOI 10.1145/1645953.1646032
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kevic K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P468, DOI 10.1145/2591062.2591117
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kingma D. P., 2014, arXiv
   Kiros R., 2015, ADV NEURAL INFORM PR, P3294, DOI DOI 10.48550/ARXIV.1506.06726
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Lau JH, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P355, DOI 10.18653/v1/P17-1033
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Li W, 2020, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME46990.2020.00021
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Lin Y, 2017, IEEE INT CONF AUTOM, P394, DOI 10.1109/ASE.2017.8115652
   Lin Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P520, DOI 10.1145/2786805.2786871
   Lin Zhouhan, 2017, A structured self-attentive sentence embedding
   Ling CY, 2020, INT C PROGRAM COMPRE, P48, DOI 10.1145/3387904.3389278
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu C.H., 2020, ARXIV PREPRINT ARXIV
   Liu Juncheng., 2017, P IEEE C COMPUTER VI, P792, DOI DOI 10.1109/CVPR.2017.391
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Montana D. J., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P762
   Montúfar GF, 2015, SIAM J DISCRETE MATH, V29, P321, DOI 10.1137/140957081
   Morin F, 2005, P AISTATS, V5, P246
   Nair V., 2010, P 27 INT C MACHINE L, P807
   Nguyen T, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1027, DOI 10.1145/3368089.3409690
   Palangi H., 2015, DEEP SENTENCE EMB US
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rush Alexander M., 2015, P 2015 C EMPIRICAL M, P379, DOI [10.48550/arXiv.1509.00685, DOI 10.18653/V1/D15-1044]
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sahlgren M, 2008, ITAL J LINGUIST, V20, P33
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Shi X., 2015, ADV NEURAL INFORM PR, DOI DOI 10.48550/ARXIV.1506.04214
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic Petar, 2017, ARXIV171010903, DOI DOI 10.48550/ARXIV.1710.10903
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang WL, 2018, PR MACH LEARN RES, V84
   Wang Y., 2013, C LEARN THEOR, P25, DOI DOI 10.3969/J.ISSN.1007-7545.2013.11.09
   Wu Yonghui., 2016, arXiv preprint arXiv:1609.08144, P1, DOI DOI 10.1109/ICASI.2016.7539822
   Xu K, 2015, PR MACH LEARN RES, V37, P2048
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/SANER48275.2020.9054840, 10.1109/saner48275.2020.9054840]
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yu Adams Wei, 2018, INT C LEARNING REPRE
   Zhang H, 2019, PR MACH LEARN RES, V97
NR 77
TC 26
Z9 29
U1 5
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106542
DI 10.1016/j.infsof.2021.106542
EA FEB 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600003
DA 2024-07-18
ER

PT J
AU Liu, SY
   Li, HH
   Jiang, ZX
   Li, XR
   Liu, F
   Zhong, Y
AF Liu, Shaoying
   Li, Honghui
   Jiang, Zhouxian
   Li, Xiuru
   Liu, Feng
   Zhong, Yan
TI Rigorous code review by reverse engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile method; Reverse engineering; Formal specification; Bug detection
AB Context: Agile software development methods advocate the importance of producing working software without comprehensive documentation. While this approach seems to suit the evolutionary nature of realistic software development for many applications, even including safety-critical systems, it faces two major challenges. One is the lack of a comprehensible specification for code evolution and future maintenance, and the other is the potentially huge cost in code verification.
   Objective: To address this problem, we believe that supporting the efficient production of system specification by reversing the program constructed as the result of an agile development will be a useful solution. The reverse engineering of specifications from programs will not only help us produce the necessary specification for future program evolution, but more importantly can help us rigorously review the program to detect bugs for the enhancement of program quality.
   Method: In this paper, we put forward a novel method for rigorously reviewing code by reversing it into a comprehensible, formal specification. We elaborate on the principle of translating code into a specification and discuss how the translation process helps detect bugs in programs. We demonstrate how the proposed method works in practice with examples. We also present an experiment to evaluate the performance of the method by comparing it with existing checklist-based inspection.
   Conclusions: How to utilize reverse engineering of formal specifications from programs as a means to review the program for bug detection is an almost unexplored topic in software engineering. In this paper, we have described a specific method called RCRRE to reverse engineering of SOFL formal specifications from code and discussed how the reverse engineering process can be taken as an effective means to review the program for bug detection. The principle of converting code to a SOFL specification is reflected by a set of translation patterns and a two-step approach to construct a SOFL specification is established. To evaluate the performance, we have carried out an experiment on the effectiveness of our RCRRE method by comparing it with the CBI approach. The result of the experiment indicates that using our RCRRE method can effectively help the reviewer scrutinize the code and therefore find more bugs than the CBI when the reviewer is rather familiar with the SOFL specification language and skills. In the meanwhile, it also shows that the effectiveness of our RCRRE method may be affected in the situation where the reviewer lacks sufficient understanding and experience of SOFL, and using our RCRRE method may in general take a little longer time than the CBI.
C1 [Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima, Japan.
   [Liu, Shaoying] Hiroshima Univ, Sch Informat & Data Sci, Hiroshima, Japan.
   [Li, Honghui; Jiang, Zhouxian; Li, Xiuru; Liu, Feng] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing, Peoples R China.
   [Zhong, Yan] Beijing Jiaotong Univ, Sch Transportat, Beijing, Peoples R China.
C3 Hiroshima University; Hiroshima University; Beijing Jiaotong University;
   Beijing Jiaotong University
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima, Japan.; Liu, SY (corresponding author), Hiroshima Univ, Sch Informat & Data Sci, Hiroshima, Japan.
EM sliu@hiroshima-u.ac.jp
RI Liu, Shaoying/AAS-2407-2021; Liu, Feng/ABB-1886-2021
OI Liu, Feng/0000-0002-5289-5761; Jiang, Zhouxian/0000-0003-2388-4147
FU JSPS KAKENHI [26240008]; Beijing Jiaotong University on a Distinguished
   Scholar Project
FX We thank all of our students who have contributed either to the
   experiment or the development of the supporting tool for our method.
   Especially, our gratitude goes to Shiori Araki, Yuhang Duan, Meng Zhang,
   Ziwen Xie, Dihao Liu, Yan Zhang, Meiyi Lu, Leming Xu, and Run Ran. This
   work was supported in part by JSPS KAKENHI Grant Number 26240008 and
   Beijing Jiaotong University on a Distinguished Scholar Project.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Agrawal A, 2016, PROCEDIA COMPUT SCI, V78, P291, DOI 10.1016/j.procs.2016.02.056
   [Anonymous], 2014, AGILE GOOD HYPE UGLY, DOI DOI 10.1007/978-3-319-05155-0_11
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   [Anonymous], 2001, Manifesto for Agile Software Development
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   BOWEN JP, 1993, INFORM SOFTWARE TECH, V35, P679, DOI 10.1016/0950-5849(93)90083-F
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Canfora G., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P366, DOI 10.1109/ICSM.1992.242522
   Cheng B.H.C., 1999, P 6 WORK C REV ENG
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Almeida JR, 2003, IEEE SOFTWARE, V20, P56, DOI 10.1109/MS.2003.1196322
   Douglass B.P., 2012, IBM SOFTWARE THOUGHT, P1
   ELEFTHERAKIS G, 2003, P 1 S E EUR WORKSH F
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Gannod G. C., 1996, Automated Software Engineering, V3, P139, DOI 10.1007/BF00126962
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Handigund S., 2011, INT J COMPUT APPL, V16, P7
   Ho-Stuart C, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P52, DOI 10.1109/APSEC.1997.640161
   Hoare C. A. R., 1973, Acta Informatica, V2, P335, DOI 10.1007/BF00289504
   Howden W. E., 1996, Proceedings. 1996 Asia-Pacific Software Engineering Conference, P166, DOI 10.1109/APSEC.1996.566751
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Jones M.P., 2000, FUNDAMENTALS OBJECT
   Kanagwa B., 2018, 44 EUR C SOFTW ENG A
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Keschenau Martin., 2004, Companion to the 19th annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, OOPSLA'04, P326
   Lano K., 1994, Software Testing, Verification and Reliability, V4, P155, DOI 10.1002/stvr.4370040304
   Liu S, 1998, IEEE T SOFTWARE ENG, V24, P24, DOI 10.1109/32.663996
   Liu S., 2018, P 2018 SOFTW S JAP S
   Liu S., 2018, P 2018 CENTR E EUR S, P64
   Liu SY, 2007, J SYST SOFTWARE, V80, P1271, DOI 10.1016/j.jss.2006.12.540
   Liu Shaoying., 2004, Formal Engineering for Industrial Software Development
   Luo J., 2016, LNCS, V10189, P160
   Mousavi M.R., 2006, P 13 WORK C REV ENG
   Nagowah L, 2013, 2013 INTERNATIONAL CONFERENCE OF INFORMATION AND COMMUNICATION TECHNOLOGY (ICOICT), P381, DOI 10.1109/ICoICT.2013.6574606
   PARNAS DL, 1991, NUCL SAFETY, V32, P189
   Porter A.A., 1997, IEEE T SOFTWARE ENG, V23
   Schneider S., 2001, B METHOD
   Schooenderwoert N.V., 2007, AGILE METHODS SAFETY
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Sutton A., 2005, P 12 WORK C REV ENG
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Tonella P, 2003, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSM.2003.1235418
   Varoy E, 2016, IEEE INT C ENG COMP, P181, DOI [10.1109/ICECCS.2016.19, 10.1109/ICECCS.2016.030]
   Villavicencio G, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/WCRE.2001.957808
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 51
TC 2
Z9 2
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106503
DI 10.1016/j.infsof.2020.106503
EA JAN 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900008
DA 2024-07-18
ER

PT J
AU Abid, C
   Kessentini, M
   Wang, HZ
AF Abid, Chaima
   Kessentini, Marouane
   Wang, Hanzhang
TI Early prediction of quality of service using interface-level metrics,
   code-level metrics, and antipatterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality of service; Web services; Interface metrics; Code quality;
   Performance prediction; Anti-patterns
ID WEB-SERVICES; DISCOVERY
AB Context: With the current high trends of deploying and using web services in practice, effective techniques for maintaining high quality of Service are becoming critical for both service providers and subscribers/users. Service providers want to predict the quality of service during early stages of development before releasing them to customers. Service clients consider the quality of service when selecting the best one satisfying their preferences in terms of price/budget and quality between the services offering the same features. The majority of existing studies for the prediction of quality of service are based on clustering algorithms to classify a set of services based on their collected quality attributes. Then, the user can select the best service based on his expectations both in terms of quality and features. However, this assumption requires the deployment of the services before being able to make the prediction and it can be time-consuming to collect the required data of running web services during a period of time. Furthermore, the clustering is only based on well-known quality attributes related to the services performance after deployment. Objective: In this paper, we start from the hypothesis that the quality of the source code and interface design can be used as indicators to predict the quality of service attributes without the need to deploy or run the services by the subscribers. Method: We collected training data of 707 web services and we used machine learning to generate association rules that predict the quality of service based on the interface and code quality metrics, and antipatterns. Results: The empirical validation of our prediction techniques shows that the generated association rules have strong support and high confidence which confirms our hypothesis that source code and interface quality metrics/antipatterns are correlated with web service quality attributes which are response time, availability, throughput, successability, reliability, compliance, best practices, latency, and documentation. Conclusion: To the best of our knowledge, this paper represents the first study to validate the correlation between interface metrics, source code metrics, antipatterns and quality of service. Another contribution of our work consists of generating association rules between the code/interface metrics and quality of service that can be used for prediction purposes before deploying new releases.
C1 [Abid, Chaima; Kessentini, Marouane] Univ Michigan, Ann Arbor, MI 48109 USA.
   [Wang, Hanzhang] eBay Inc, San Jose, CA 95125 USA.
C3 University of Michigan System; University of Michigan; eBay Inc.
RP Kessentini, M (corresponding author), Univ Michigan, Ann Arbor, MI 48109 USA.
EM cabid@umich.edu; marouane@umich.edu; hanzwang@ebay.com
CR Adams PD, 1997, P NATL ACAD SCI USA, V94, P5018, DOI 10.1073/pnas.94.10.5018
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Al-Masri E., 2008, THE QWS DATASET
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Bin Tariq M, 2008, ACM SIGCOMM COMP COM, V38, P99, DOI 10.1145/1402946.1402971
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cardellini V, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Chen SY, 2009, IEEE INFOCOM SER, P2258, DOI 10.1109/INFCOM.2009.5062151
   Dudney B., 2003, J2EE_AntiPatterns
   El Haddad Joyce, 2008, 2008 IEEE International Conference on Web Services (ICWS), P653, DOI 10.1109/ICWS.2008.116
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fokaefs M., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P49, DOI 10.1109/ICWS.2011.114
   Francavilla MA, 2011, IEEE ANTENNAS PROP, P3196
   Gao SM, 2019, PROCEEDINGS OF THE ASME 14TH INTERNATIONAL MANUFACTURING SCIENCE AND ENGINEERING CONFERENCE, 2019, VOL 1
   Ge J., 2010, 2010 9th IEEE International Conference on Cognitive Informatics (ICCI), P109, DOI 10.1109/COGINF.2010.5599757
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Ilayaraja M, 2013, 2013 INTERNATIONAL CONFERENCE ON PATTERN RECOGNITION, INFORMATICS AND MEDICAL ENGINEERING (PRIME)
   Jung J., 2017, P 50 HAW INT C SYST
   Kalogeras AP, 2004, WFCS 2004: IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS, PROCEEDINGS, P187
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Král J, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P271, DOI 10.1109/ComputationWorld.2009.80
   Kral Jaroslav., 2007, ICSEA 07, P29
   Li W., 2001, ICDM 2004
   Li Zhichun, 2010, NSDI, V10, P143
   Liang Chen, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P727, DOI 10.1109/SCC.2011.46
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Rodriguez JM, 2010, IFIP ADV INF COMM TE, V341, P139
   Mateos C., 2016, 42 LAT AM COMP C CLE, P1
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Mateos C, 2011, INT J WEB GRID SERV, V7, P357, DOI 10.1504/IJWGS.2011.044710
   Meng Zhang, 2012, 2012 IEEE International Conference on Services Computing (SCC), P138, DOI 10.1109/SCC.2012.24
   Methaila A., 2014, P COMP SCI INF TECHN, V28, P53
   Mohan N., 2012, POWER ELECT 1 COURSE, VFirst, P1
   Mohanty R, 2010, EXPERT SYST APPL, V37, P5484, DOI 10.1016/j.eswa.2010.02.063
   Nasridinov A, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P799, DOI 10.1109/CGC.2012.123
   Coscia JLO, 2014, SCI COMPUT PROGRAM, V89, P374, DOI 10.1016/j.scico.2014.03.015
   Coscia JLO, 2013, INT J WEB GRID SERV, V9, P107, DOI 10.1504/IJWGS.2013.054108
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Palma F, 2014, LECT NOTES COMPUT SC, V8627, P58, DOI 10.1007/978-3-319-09970-5_6
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Qiong Zhang, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P195, DOI 10.1109/ICWS.2011.61
   Ransohoff DF, 2004, NAT REV CANCER, V4, P309, DOI 10.1038/nrc1322
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Romano D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P392, DOI 10.1109/ICWS.2012.29
   Sathyadevan S, 2014, 2014 FIRST INTERNATIONAL CONFERENCE ON NETWORKS & SOFT COMPUTING (ICNSC), P406, DOI 10.1109/CNSC.2014.6906719
   Savasere A., 1995, TECHNICAL REPORT
   Shao LS, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P439
   Silic M., 2014, IEEE T SERV COMPUT, V8, P425
   Silic M, 2014, IEEE T SERV COMPUT, V7, P252, DOI 10.1109/TSC.2013.3
   Toivonen H, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P134
   Tomovic S., 2011, CECI IS 2011
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P352, DOI 10.1007/978-3-319-46295-0_22
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P282, DOI 10.1007/978-3-319-46295-0_18
   Wang J, 2008, ALPIT 2008: SEVENTH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, PROCEEDINGS, P145, DOI 10.1109/ALPIT.2008.109
   Xi Chen, 2010, 2010 IEEE International Conference on Web Services (ICWS), P9, DOI 10.1109/ICWS.2010.27
   Xie Q, 2010, LECT NOTES ARTIF INT, V6441, P368, DOI 10.1007/978-3-642-17313-4_36
   Yechun Jiang, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P211, DOI 10.1109/ICWS.2011.38
   Zaki MJ, 1997, DATA MIN KNOWL DISC, V1, P343, DOI 10.1023/A:1009773317876
   Zheng ZB, 2011, IEEE T SERV COMPUT, V4, P140, DOI 10.1109/TSC.2010.52
   Zheng ZB, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P437, DOI 10.1109/ICWS.2009.30
   Zhu J, 2012, P 15 IEEE INT S OBJ, P93, DOI DOI 10.1109/ISORCW.2012.27
   Zhu JM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P17, DOI 10.1109/ICWS.2017.10
NR 71
TC 7
Z9 7
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106313
DI 10.1016/j.infsof.2020.106313
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800014
DA 2024-07-18
ER

PT J
AU Kim, M
   Lee, E
AF Kim, Misoo
   Lee, Eunseok
TI ManQ: Many-objective optimization-based automatic query reduction for
   IR-based bug localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug report; Information retrieval-based bug localization; Automatic
   query reduction; Many-objective optimization
AB Context: An information retrieval-based bug localization (IRBL) method is proposed to localize buggy files using a bug report as a query. The performance of this method strongly depends on the quality of the query. However, these queries contain noise terms that hinder their use for IRBL. To improve the quality of a query, an automatic query reduction (AQR) technique that removes noise words from the query is needed.
   Objective: Our objective is to develop an AQR method for IRBL. Most existing AQR techniques are based on single objective optimization, which presents issues in terms of biased and limited performance. To solve these issues, it is necessary to find a subquery that comprehensively satisfies all of their objectives.
   Method: We propose an AQR technique called ManQ, which is a many-objective optimization-based AQR method for IRBL. We design 15 objective functions to (1) maintain the query quality properties, (2) maintain the important terms, (3) maintain the initial information, and (4) minimize the query length. ManQ finds a final subquery that maximize the return values of these objective functions.
   Results: The experimental results show that ManQ improves the quality of poor queries. We also show that if we select the best query among the candidates generated by ManQ, we can increase the number of improved queries by more than 53.4% of all queries.
   Conclusion: ManQ improves the performance of IRBL by improving the quality of queries through a many-objective optimization approach.
C1 [Kim, Misoo; Lee, Eunseok] Sungkyunkwan Univ, Suwon, South Korea.
C3 Sungkyunkwan University (SKKU)
RP Kim, M; Lee, E (corresponding author), Sungkyunkwan Univ, Suwon, South Korea.
EM misoo12@skku.edu; leees@skku.edu
OI Kim, Misoo/0000-0002-8274-5457; Lee, Eunseok/0000-0002-6557-8087
FU National Research Foundation of Korea - Korea government (MSIT)
   [2016R1D1A1B03934610, 2017M3C4A7068179, 2018R1D1A1B07050073,
   2019R1A2C2006411]
FX This work was supported by the National Research Foundation of Korea
   grant funded by the Korea government (MSIT) (2016R1D1A1B03934610,
   2017M3C4A7068179, 2018R1D1A1B07050073, 2019R1A2C2006411). We are
   grateful to Rahman et al. for access to their datasets and tools on
   their web sites.
CR Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Dilshener T, 2018, AUTOMAT SOFTW ENG, V25, P383, DOI 10.1007/s10515-017-0226-1
   Kumaran G, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P564, DOI 10.1145/1571941.1572038
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
NR 8
TC 9
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106334
DI 10.1016/j.infsof.2020.106334
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100007
DA 2024-07-18
ER

PT J
AU Mourao, E
   Pimentel, JF
   Murta, L
   Kalinowski, M
   Mendes, E
   Wohlin, C
AF Mourao, Erica
   Pimentel, Joao Felipe
   Murta, Leonardo
   Kalinowski, Marcos
   Mendes, Emilia
   Wohlin, Claes
TI On the performance of hybrid search strategies for systematic literature
   reviews in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Search Strategy; Database Search;
   Snowballing; Software Engineering
AB Context: When conducing a Systematic Literature Review (SLR), researchers usually face the challenge of designing a search strategy that appropriately balances result quality and review effort. Using digital library (or database) searches or snowballing alone may not be enough to achieve high-quality results. On the other hand, using both digital library searches and snowballing together may increase the overall review effort.
   Objective: The goal of this research is to propose and evaluate hybrid search strategies that selectively combine database searches with snowballing.
   Method: We propose four hybrid search strategies combining database searches in digital libraries with iterative, parallel, or sequential backward and forward snowballing. We simulated the strategies over three existing SLRs in SE that adopted both database searches and snowballing. We compared the outcome of digital library searches, snowballing, and hybrid strategies using precision, recall, and F-measure to investigate the performance of each strategy.
   Results: Our results show that, for the analyzed SLRs, combining database searches from the Scopus digital library with parallel or sequential snowballing achieved the most appropriate balance of precision and recall.
   Conclusion: We put forward that, depending on the goals of the SLR and the available resources, using a hybrid search strategy involving a representative digital library and parallel or sequential snowballing tends to represent an appropriate alternative to be used when searching for evidence in SLRs.
C1 [Mourao, Erica; Pimentel, Joao Felipe; Murta, Leonardo] Fluminense Fed Univ, Niteroi, RJ, Brazil.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, RJ, Brazil.
   [Mendes, Emilia; Wohlin, Claes] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Universidade Federal Fluminense; Pontificia Universidade Catolica do Rio
   de Janeiro; Blekinge Institute Technology
RP Kalinowski, M (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, RJ, Brazil.
EM ericamourao@id.uff.br; kalinowski@inf.puc-rio.br
RI Mendes, Maria E/B-4207-2015
OI Wohlin, Claes/0000-0003-0460-5253; Pimentel, Joao
   Felipe/0000-0001-6680-7470; Kalinowski, Marcos/0000-0003-1445-3425;
   Mendes, Emilia/0000-0003-0449-5322; Mourao, Erica/0000-0001-7916-0143
FU Brazilian Research Council (CNPq); CAPES
FX We thank the Brazilian Research Council (CNPq) and CAPES for financial
   support.
CR [Anonymous], 2009, REFERENCE BASED SEAR
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Calderón A, 2015, COMPUT EDUC, V87, P396, DOI 10.1016/j.compedu.2015.07.011
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Felizardo KR, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P184, DOI 10.1145/3266237.3266240
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kitchenham B., 2007, Joint Report
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Mendes E, 2019, EUROMICRO CONF PROC, P355, DOI 10.1109/SEAA.2019.00061
   Mendi Engin, 2014, 2014 IEEE International Symposium on Medical Measurements and Applications (MeMeA), P1, DOI 10.1109/MeMeA.2014.6860020
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Singh P., 2017, 21 INT C EVALUATION, P236, DOI DOI 10.1145/3084226.3084275
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Tarhan A., 2017, P 21 INT C EVALUATIO, VF1286, P2, DOI 10.1145/3084226.3084261
   Vasconcellos FJS, 2017, J SYST SOFTWARE, V123, P45, DOI 10.1016/j.jss.2016.09.030
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wohlin P., 2012, Experimentation in Software Engineering
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
NR 28
TC 73
Z9 77
U1 5
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106294
DI 10.1016/j.infsof.2020.106294
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alkhazi, B
   Abid, C
   Kessentini, M
   Wimmer, M
AF Alkhazi, Bader
   Abid, Chaima
   Kessentini, Marouane
   Wimmer, Manuel
TI On the value of quality attributes for refactoring ATL model
   transformations: A multi-objective approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search based software engineering; Model transformations; Quality
   attributes; Refactoring
ID CHALLENGES; ALGORITHM; SMELLS
AB Context: Model transformations play a fundamental role in Model-Driven Engineering (MDE) as they are used to manipulate models and to transform them between source and target metamodels. However, model transformation programs lack significant support to maintain good quality which is in contrast to established programming paradigms such as object-oriented programming. In order to improve the quality of model transformations, the majority of existing studies suggest manual support for the developers to execute a number of refactoring types on model transformation programs. Other recent studies aimed to automate the refactoring of model transformation programs, mostly focusing on the ATLAS Transformation Language (ATL), by improving mainly few quality metrics using a number of refactoring types.
   Objective: In this paper, we propose a novel set of quality attributes to evaluate refactored An programs based on the hierarchical quality model QMOOD.
   Method: We used the proposed quality attributes to guide the selection of the best refactorings to improve ATL programs using multi-objective search.
   Results: We validate our approach on a comprehensive dataset of model transformations. The statistical analysis of our experiments on 30 runs shows that our automated approach recommended useful refactorings based on a benchmark of An transformations and compared to random search, mono-objective search formulation, a previous work based on a different formulation of multi-objective search with few quality metrics, and a semi-automated refactoring approach not based on heuristic search.
   Conclusion: All these existing studies did not use our QMOOD adaptation for An which confirms the relevance of our quality attributes to guide the search for good refactoring suggestions.
C1 [Alkhazi, Bader; Abid, Chaima; Kessentini, Marouane] Univ Michigan, Ann Arbor, MI 48109 USA.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, CDL Mint, Linz, Austria.
C3 University of Michigan System; University of Michigan; Johannes Kepler
   University Linz
RP Kessentini, M (corresponding author), Univ Michigan, Ann Arbor, MI 48109 USA.
EM balkhazi@umich.edu; cabid@umich.edu; marouane@umich.edu;
   manuel.wimmer@jku.at
OI Alkhazi, Bader/0000-0002-4132-1578
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Alkhazi B, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P295, DOI 10.1145/2976767.2976782
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], [No title captured]
   [Anonymous], 2012, J OBJECT TECHNOL
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Tolosa JB, 2011, SOFTWARE PRACT EXPER, V41, P789, DOI 10.1002/spe.1033
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Bonet N., 2013, COMPUT SCI ED, V28
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Bryant BR, 2011, COMPUT SCI INF SYST, V8, P225, DOI 10.2298/CSIS110114012B
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Faunes M, 2013, LECT NOTES COMPUT SC, V8107, P187, DOI 10.1007/978-3-642-41533-3_12
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fowler M., 1999, AW OBJ TECHNOL S
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Gomez Juan Jose Cadavid, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P131, DOI 10.1109/ICST.2012.93
   Gyapay S., 2004, Electronic Notes in Theoretical Computer Science, V109, P137
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jilani AA, 2014, LECT NOTES COMPUT SC, V8568, P17
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kapová L, 2010, LECT NOTES COMPUT SC, V6093, P151, DOI 10.1007/978-3-642-13821-8_12
   Kessentini M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1453
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2011, LECT NOTES COMPUT SC, V6603, P401, DOI 10.1007/978-3-642-19811-3_28
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   Kessentini M, 2010, LECT NOTES COMPUT SC, V6138, P156, DOI 10.1007/978-3-642-13595-8_14
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   Kessentini Marouane., 2010, Proceedings of the Second InternationalWorkshop on Behaviour Modelling: Foundation and Applications, P2
   Kunioshi CT, 2004, SURFACES AND INTERFACES IN NANOSTRUCTURED MATERIALS AND TRENDS IN LIGA, MINIATURIZATION, AND NANOSCALE MATERIALS, P173
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Kusel A., 2013, Amt@ models, P1
   Lano K, 2018, LECT NOTES COMPUT SC, V10888, P127, DOI 10.1007/978-3-319-93317-7_6
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Mansoor U., 2015, SOFTW QUAL J, V25
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Mens T., 2009, SOFTWARE APPL CONCEP, P3455
   Mens T., 2007, 1 WORKSH REF TOOLS W, P25
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mkaouer MW, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P61, DOI 10.1109/CMSBSE.2013.6605712
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moghadam IH, 2011, LECT NOTES COMPUT SC, V6956, P70, DOI 10.1007/978-3-642-23716-4_9
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5002, P275
   Mohamed M, 2009, J OBJECT TECHNOL, V8, P143, DOI 10.5381/jot.2009.8.6.a3
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Rachmawati L, 2009, IEEE T EVOLUT COMPUT, V13, P810, DOI 10.1109/TEVC.2009.2017515
   Rahimi S. Kolahdouz, 2011, 2011 CSI International Symposium on Computer Science and Software Engineering (CSSE 2011), P129, DOI 10.1109/CSICSSE.2011.5964000
   Reimann J., 2012, Proceedings of the 12th Workshop on OCL and Textual Modelling, P7
   Rose LM, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P16, DOI 10.1109/CMSBSE.2013.6604431
   Saada H, 2013, IEEE INT CONF AUTOM, P688, DOI 10.1109/ASE.2013.6693134
   Saeki M., 2007, P CAISE FOR
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selim GMK, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P34, DOI 10.1109/MODELS.2017.20
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Strüber D, 2016, LECT NOTES COMPUT SC, V9633, P122, DOI 10.1007/978-3-662-49665-7_8
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Syriani E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P929, DOI 10.1109/ICST.2012.198
   Taentzer G., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P41
   Tichy M., 2013, P 2 WORKSH AN MOD TR
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   van Amstel Marcel F., 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P108, DOI 10.1007/978-3-642-21732-6_8
   van Amstel M.F., 2011, P 3 INT WORKSH MOD T, P20
   van Amstel M. F., 2010, P 2 INT WORKSH MOD T
   van Amstel M.M., 2012, THESIS
   van Amstel MF, 2009, LECT NOTES COMPUT SC, V5563, P239, DOI 10.1007/978-3-642-02408-5_17
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   Vieira A, 2014, LECT NOTES COMPUT SC, V8892, P254, DOI 10.1007/978-3-319-13835-0_18
   Vignaga A, 2009, TECHNICAL REPORT
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wang W., 2013, MDEBE@MoDELS, P42
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang J, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P199, DOI 10.1007/3-540-28554-7_9
NR 96
TC 7
Z9 8
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106243
DI 10.1016/j.infsof.2019.106243
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM6FK
UT WOS:000514233800005
DA 2024-07-18
ER

PT J
AU Teixeira, E
   Fonseca, L
   Cartaxo, B
   Soares, S
AF Teixeira, Eudis
   Fonseca, Liliane
   Cartaxo, Bruno
   Soares, Sergio
TI PrioriTTVs: A process aimed at supporting researchers to prioritize
   threats to validity and their mitigation actions when planning
   controlled experiments in SE
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical studies; Threats to validity; Controlled experiment
AB Context Researchers argue that a critical component of any empirical study in Software Engineering (SE) is to identify, analyze, and mitigate threats to validity.
   Objective: We propose PrioriTTVs, a process to support researchers in identifying and prioritizing threats to validity and their corresponding mitigation actions when planning controlled experiments in SE. We also introduce a tool to support the entire process.
   Method: Empirical studies were conducted with six experts and 20 postgraduate students to evaluate the ease of use, learning, and perceptions of satisfaction regarding PrioriTTVs.
   Results: So far, participants have considered PrioriTTVs to be useful (83%), significantly contributing to learning (90%), and satisfaction (75%).
   Conclusions: We believe both novice and expert users can benefit from the process we propose for addressing threats to validity when conducting SE experiments. We also intend to extend our approach to manage threats specific to different SE experiment contexts.
C1 [Teixeira, Eudis; Fonseca, Liliane; Soares, Sergio] Fed Univ Pernambuco UFPE, Recife, PE, Brazil.
   [Cartaxo, Bruno] Fed Inst Pernambuco IFPE, Paulista, PE, Brazil.
   [Soares, Sergio] Senai Innovat Inst ICT ISI TICs Recife, Recife, PE, Brazil.
   [Teixeira, Eudis] Fed Inst Sertao Pernambucano IF Sertao PE, Petrolina, PE, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Pernambuco
   (IFPE)
RP Teixeira, E (corresponding author), IF Sertao PE, Comp, Maria Luiza de Araujo Gomes Cabral S-N, BR-56316686 Petrolina, PE, Brazil.
EM eot@cin.ufpe.br; lss4@cin.ufpe.br; email@brunocartaxo.com;
   scbs@cin.ufpe.br
RI Soares, Sergio/K-3712-2012; Fonseca, Liliane/AAH-2020-2020; Teixeira,
   Eudis/HZK-9091-2023
OI Soares, Sergio/0000-0002-4428-2535; Teixeira, Eudis/0000-0001-5667-3923
FU INES 2.0; FACEPE [APQ-0399-1.03/17]; CAPES [88887.136410/2017-00,
   88887.351815/2019-00]; CNPQ [465614/2014-0, 141705/2015-9,
   304499/2016-1]
FX In this paper, we propose a process to support researchers in their
   managing of TTVs when planning controlled experiments in SE.
   Additionally, we report preliminary results of empirical studies we have
   conducted with six ESE experts and 20 postgraduate students aiming to
   assess our approach. We believe our approach might positively impact
   research in SE, contributing to enhancing controlled experiments quality
   by improving their validity. This research was partially funded by INES
   2.0, FACEPE grant APQ-0399-1.03/17, CAPES grants 88887.136410/2017-00,
   and 88887.351815/2019-00, CNPQ grants 465614/2014-0, 141705/2015-9, and
   304499/2016-1.
CR [Anonymous], 1998, AIR FORCE J LOGIST
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Fonseca L., 2016, THESIS
   Fonseca L, 2017, 8 BRAZ C SOFTW THEOR, P97
   Henderson VC, 2013, PLOS MED, V10, DOI 10.1371/journal.pmed.1001489
   Neto AmadeuAnderlin., 2013, P 17 INT C EVALUATIO, p82. isbn, DOI [10.1145/2460999.2461011, DOI 10.1145/2460999.2461011]
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   Singh R, 2007, J RURAL HEALTH, V23, P173, DOI 10.1111/j.1748-0361.2007.00086.x
   Teixeira E, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P52, DOI 10.1145/3266237.3266264
   Wohlin C., 2012, Experimentation in Software Engineering
NR 10
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 20
EP 22
DI 10.1016/j.infsof.2019.07.008
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700003
DA 2024-07-18
ER

PT J
AU Khabou, N
   Rodriguez, IB
   Jmaiel, M
AF Khabou, Nesrine
   Rodriguez, Ismael Bouassida
   Jmaiel, Mohamed
TI An overview of a novel analysis approach for enhancing context awareness
   in smart environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ubiquitous computing; Context-aware applications; Analysis task;
   Analysis module; Smart building; Water consumption
ID WIRELESS SENSOR; SYSTEM
AB Context: This work is part of context aware applications design and development, and smart environments in which context changes frequently.
   Objective: The objective of the work is to facilitate the design and the development of context aware applications able to detect context changes and to predict context.
   Method: In the paper, two analysis tasks are proposed. An analysis task for detection aiming at supporting application designers to conceive easily context aware applications able to detect context changes and an analysis task for prediction aiming at helping the application designers to conceive context aware applications able to predict context. The paper details also an analysis module that implements the functionalities of the analysis tasks. The analysis module helps the application developers to develop context aware applications. Finally, the paper introduces a case study related to smart buildings in order to show the usefulness of the analysis tasks.
   Results: The paper shows an application scenario related to smart buildings and particularly water consumption prediction. Also the paper presents experiments related to memory consumption introduced by the use of our analysis module.
   Conclusions: The application scenario illustrates the usefulness of the analysis approach. The overhead introduced by the analysis module is negligeable.
C1 [Khabou, Nesrine; Rodriguez, Ismael Bouassida; Jmaiel, Mohamed] Univ Sfax, ReDCAD Lab, Natl Sch Engineers Sfax, BP 1173, Sfax 3038, Tunisia.
   [Rodriguez, Ismael Bouassida; Jmaiel, Mohamed] Digital Res Ctr Sfax, BP 275, Sfax 3021, Tunisia.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS); Centre
   de Recherche en Numerique de Sfax (CRNS); Universite de Sfax
RP Khabou, N (corresponding author), Univ Sfax, ReDCAD Lab, Natl Sch Engineers Sfax, BP 1173, Sfax 3038, Tunisia.
EM nesrine.khabou@redcad.org; bouassida@redcad.org;
   mohamed.jmaiel@enis.rnu.tn
CR Abdennadher I, 2015, INT CONF INTELL SYST, P122, DOI 10.1109/ISDA.2015.7489212
   Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Ahmed F, 2014, WINT SIMUL C PROC, P1038, DOI 10.1109/WSC.2014.7019963
   [Anonymous], 2014 IEEE PES INN SM
   [Anonymous], 3 ACM WORKSH AG
   [Anonymous], THE ARIMA PROCEDURE
   [Anonymous], TECHNICAL REPORT
   Bacon J, 2000, COMPUTER, V33, P68, DOI 10.1109/2.825698
   Bai YW, 2008, IEEE T CONSUM ELECTR, V54, P1173, DOI 10.1109/TCE.2008.4637603
   Birje M. N., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P456, DOI 10.1109/ICECTECH.2011.5941834
   Bouassida MS, 2009, ITST: 2009 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORT SYSTEMS TELECOMMUNICATIONS, P526, DOI 10.1109/ITST.2009.5399299
   Cioara T, 2010, 9TH ROEDUNET IEEE INTERNATIONAL CONFERENCE, P374
   Crnkovic I, 2011, IEEE SOFTWARE, V28, P22, DOI 10.1109/MS.2011.62
   de Farias C, 2014, T EMERG TELECOMMUN T, V25, P120, DOI 10.1002/ett.2791
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Edwards W.K., 2001, UBICOMP 2001 UBIQUIT, DOI [DOI 10.1007/3-540-45427-6, 10.1007/3-540-45427-6_22, DOI 10.1007/3-540-45427-6_22]
   Esposito A, 2010, PROC IEEE INT SYMP, P2791, DOI 10.1109/ISIE.2010.5636862
   Gilman E, 2013, J AMB INTEL SMART EN, V5, P5, DOI 10.3233/AIS-120189
   Khabou N, 2016, INT CON ADV INFO NET, P116, DOI 10.1109/AINA.2016.77
   Lahyani I., 2012, Proceedings of the 2012 11th International Symposium on Parallel and Distributed Computing (ISPDC 2012), P19, DOI 10.1109/ISPDC.2012.11
   Lampkin Valerie., 2012, Building Smarter Planet Solutions with MQTT and IBM WebSphere MQ Telemetry
   Marian CC, 2013, I C CONTR SYS COMP S, P605, DOI 10.1109/CSCS.2013.66
   Meier R, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P585, DOI 10.1109/ICDCSW.2002.1030833
   Miao X, 2011, IEEE INFOCOM SER, P1548, DOI 10.1109/INFCOM.2011.5934945
   Mohamed A, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P394, DOI 10.1109/UIC-ATC.2012.150
   Morvaj B., 2011, P 2011 3 INT YOUTH C, P1
   Raudys A, 2013, COMM COM INF SC, V403, P34
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Sciuto D, 2014, 2014 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (EUC 2014), P205, DOI 10.1109/EUC.2014.37
   Seng HS, 2013, 2013 INTERNATIONAL CONFERENCE ON NEW MEDIA STUDIES (CONMEDIA)
   Yeh LW, 2010, IEEE SENS J, V10, P1029, DOI 10.1109/JSEN.2010.2042442
NR 31
TC 3
Z9 3
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 131
EP 143
DI 10.1016/j.infsof.2018.11.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600010
DA 2024-07-18
ER

PT J
AU Duran, MB
   Mussbacher, G
AF Duran, Mustafa Berk
   Mussbacher, Gunter
TI Reusability in goal modeling: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Goal model; Reuse; Context; Requirements reuse; Model-driven
   requirements engineering; Systematic literature review
ID CAPABILITY-DRIVEN DEVELOPMENT; TOOL SUPPORT; REQUIREMENTS; REUSE;
   CONTEXT; PRODUCTIVITY; VARIABILITY; ADAPTATION; MANAGEMENT; LANGUAGES
AB Context: Goal modeling is an important instrument for the elicitation, specification, analysis, and validation of early requirements. Goal models capture hierarchical representations of stakeholder objectives, requirements, possible solutions, and their relationships to help requirements engineers understand stakeholder goals and explore solutions based on their impact on these goals. To reuse a goal model and benefit from the strengths of goal modeling, we argue that it is necessary (i) to make sure that analysis and validation of goal models is possible through reuse hierarchies, (ii) to provide the means to delay decision making to a later point in the reuse hierarchy, (iii) to take constraints imposed by other modeling notations into account during analysis, (iv) to allow context dependent information to be modeled so that the goal model can be used in various reuse contexts, and (v) to provide an interface for reuse.
   Objective: In this two-part systematic literature review, we (i) evaluate how well existing goal modeling approaches support reusability with our five desired characteristics of contextual and reusable goal models, (ii) categorize these approaches based on language constructs for context modeling and connection to other modeling formalisms, and then (iii) draw our conclusions on future research themes.
   Method: Following guidelines by Kitchenham, the review is conducted on seven major academic search engines. Research questions, inclusion criteria, and categorization criteria are specified, and threats to validity are discussed. A final list of 146 publications and 34 comparisons/assessments of goal modeling approaches is discussed in more detail.
   Results: Five major research themes are derived to realize reusable goal models with context dependent information.
   Conclusion: The results indicate that existing goal modeling approaches do not fully address the required capabilities for reusability in different contexts and that further research is needed to fill this gap in the landscape of goal modeling approaches.
C1 [Duran, Mustafa Berk; Mussbacher, Gunter] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 McGill University
RP Duran, MB (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM berk.duran@mail.mcgill.ca; gunter.mussbacher@mcgill.ca
FU NSERC Canada Discovery Grants
FX Supported by NSERC Canada Discovery Grants.
CR a Pimentel J., 2014, 29th Annual ACM Symposium on Applied Computing, P995
   Abeywickrama DB, 2017, SERV ORIENTED COMPUT, V11, P1, DOI 10.1007/s11761-016-0203-8
   Akhigbe O, 2019, REQUIR ENG, V24, P459, DOI 10.1007/s00766-018-0294-1
   Akiki  P., 2014, THESIS
   Al-Subaie H. S., 2006, 4 INT WORKSH COMP EV, P8, DOI DOI 10.1109/CERE.2006.3
   Alam  O., 2016, THESIS
   Alam O, 2013, LECT NOTES COMPUT SC, V8107, P604, DOI 10.1007/978-3-642-41533-3_37
   Alegre U, 2016, J SYST SOFTWARE, V117, P55, DOI 10.1016/j.jss.2016.02.010
   Alencar F, 2008, LECT NOTES ARTIF INT, V4898, P183
   Alexandre  R., 2015, P 2 MODELS 2015 DEM
   Ali Raian, 2009, 2009 Third International Workshop on Software Product Management (IWSPM 2009), P31, DOI 10.1109/IWSPM.2009.8
   Ali R., 2009, Proceedings of the Forum at the CAiSE 2009 Conference, Amsterdam, The Netherlands, 8-12 June 2009, P453
   Ali  R., 2009, P 3 INT WORKSH DYN S
   Ali  R., 2010, THESIS
   Ali  R., 2010, DISI10029 U TRENT
   Ali  R., 2009, DISI09019 U TRENT
   Ali  R., 2010, DISI10020 U TRENT
   Ali R, 2014, SOFTW SYST MODEL, V13, P433, DOI 10.1007/s10270-012-0255-y
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2011, LECT NOTES BUS INF P, V81, P372
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Ali R, 2009, LECT NOTES BUS INF P, V29, P326
   Amyot D., 2008, Workshop on ITU System Design Languages 2008, P15
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2013, THESIS
   [Anonymous], GAX9735409 UMI
   Aradea, 2017, ADV INTELL SYST, V549, P233, DOI 10.1007/978-3-319-51281-5_24
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Baresi L., 2010, WORKSH SOFTW ENG AD, P114, DOI [10.1145/1808984.1808997, DOI 10.1145/1808984.1808997]
   Baresi L, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P161, DOI 10.1007/978-3-642-21001-3_10
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Behnam Saeed Ahmadi, 2013, International Journal of Electronic Business, V10, P254
   Behnam S. A., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P35, DOI 10.1109/RePa.2012.6359976
   Behnam Saeed Ahmadi, 2010, Proceedings 8th ACIS International Conference on Software Engineering Research, Management and Applications (SERA 2010), P137, DOI 10.1109/SERA.2010.27
   Behnam S. A., 2012, THESIS
   Bencomo N, 2012, IEEE INT C ENG COMP, P157, DOI 10.1109/ICECCS.2012.34
   Bencomo Nelly., 2013, Generative and Transformational Techniques in Software Engineering IV: International Summer School, GTTSE 2011, Braga, Portugal, July 3-9, 2011, P271, DOI DOI 10.1007/978-3-642-35992-7_7
   Bensoussan C, 2016, LECT NOTES COMPUT SC, V9764, P121, DOI 10.1007/978-3-319-42061-5_8
   Berzisa S, 2015, BUS INFORM SYST ENG+, V57, P15, DOI 10.1007/s12599-014-0362-0
   Bombonatti D, 2017, SOFTWARE PRACT EXPER, V47, P943, DOI 10.1002/spe.2416
   Botangen K. A., 2018, P AUSTR COMP SCI WEE, DOI 10.1145/3167918.3167945
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Bulusu Sravani Teja, 2018, Information Technology - New Generations. 15th International Conference on Information Technology. Advances in Intelligent Systems and Computing (AISC 738), P517, DOI 10.1007/978-3-319-77028-4_67
   Castro J, 2012, J SYST SOFTWARE, V85, P463, DOI 10.1016/j.jss.2011.05.047
   Castro J, 2009, LECT NOTES COMPUT SC, V5600, P335, DOI 10.1007/978-3-642-02463-4_18
   Chatzikonstantinou  G., 2013, P 6 INT I WORKSH VAL, P103
   Cheah W., 2010, Principles and Practice of Multi-Agent Systems, P459, DOI [DOI 10.1007/978-3-642-25920-3_33, 10.1007/978-3-642-25920-3_33]
   Chung L., 1999, INT SERIES SOFTWARE, V5
   Chung L, 2006, IRI 2006: PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P539
   Colomer  D., 2011, CEUR WORKSHOP P, P178
   Combemale B, 2018, COMPUT LANG SYST STR, V54, P139, DOI 10.1016/j.cl.2018.05.004
   d Silva L.F., 2013, Aspect-Oriented Requirements Engineering, P101, DOI DOI 10.1007/978-3-642-38640-4_6
   da Silva L.F., 2005, IEEE International Conference on Requirements Engineering, Doctoral Consortium, P24
   Danny Weyns, 2017, Chapter in Handbook of Software Engineering, P2
   Daramola O., 2012, P INT C RES CHALLENG, P1
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Darimont R, 1997, PROC INT CONF SOFTW, P612, DOI 10.1145/253228.253499
   Darimont R, 2017, INT REQUIR ENG CONF, P456, DOI 10.1109/RE.2017.44
   de Jesus Souza M. L., 2015, P 5 INT WORKSH PROD, P19
   Souza MLD, 2016, P BRAZ SYMP SOFTW, P1, DOI 10.1109/SBCARS.2016.15
   Diaconescu  A., 2017, ORGANIC COMPUTING TE, P223
   Diaconescu A, 2016, INT CONF SELF SELF, P100, DOI 10.1109/SASO.2016.16
   Diaconescu Ada, 2017, P SELF AWARE COMPUTI, P191
   Dounas  L., 2015, P 12 ACS IEEE INT C
   Dounas  L., 2015, P INT C SOFTW SYST E
   Duarte B. B., 2017, APPL ONTOL, P1
   Duran MB, 2018, LECT NOTES COMPUT SC, V10826, P76, DOI 10.1007/978-3-319-90421-4_5
   Duran MB, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P6, DOI 10.1109/REW.2017.66
   Duran MB, 2017, INT REQUIR ENG CONF, P532, DOI 10.1109/RE.2017.34
   Duran MB, 2016, INFORM SYST FRONT, V18, P855, DOI 10.1007/s10796-016-9657-7
   Duran MB, 2015, IEEE INT WORKSH MODE, P53
   Duran MB, 2015, LECT NOTES COMPUT SC, V9369, P141, DOI 10.1007/978-3-319-24912-4_11
   El-Maddah I, 2003, FIRST ACM AND IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CO-DESIGN, PROCEEDINGS, P45, DOI 10.1109/MEMCOD.2003.1210085
   El-Maddah IAM, 2004, LECT NOTES COMPUT SC, V3107, P318
   Elgedawy I., 2004, Proceedings of the 2nd international conference on Service oriented computing, P143, DOI [10.1145/1035167.1035189, DOI 10.1145/1035167.1035189]
   Erl T, 2005, SERVICE ORIENTED ARC
   Espana  S., 2018, CAPABILITY MANAGEMEN, P311, DOI [10.1007/978-3-319-90424-5_16, DOI 10.1007/978-3-319-90424-5_16]
   España S, 2015, LECT NOTES BUS INF P, V215, P40, DOI 10.1007/978-3-319-19243-7_4
   Farida S, 2009, INT CONF RES CHAL, P237, DOI 10.1109/RCIS.2009.5089287
   Fastnacht C, 2016, LECT NOTES BUS INF P, V249, P29, DOI 10.1007/978-3-319-39564-7_3
   Franch X, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P177, DOI 10.1007/978-3-642-12544-7_10
   Gharib  M., 2016, ARXIV161110097
   Gil A. T. V., 2008, THESIS
   Gil A, 2009, EA'09: EARLY ASPECT WORKSHOP, P31
   Gonçalves E, 2019, REQUIR ENG, V24, P55, DOI 10.1007/s00766-018-0302-5
   Gonçalves E, 2018, J SYST SOFTWARE, V137, P1, DOI 10.1016/j.jss.2017.11.023
   Gonzalez-Baixauli B., 2007, VaMoS, P101
   Grabis  J., 2018, CAPABILITY MANAGEMEN, P175
   Grabis  J., 2018, CAPABILITY MANAGEMEN, P139, DOI [10.1007/978-3-319-90424-58, DOI 10.1007/978-3-319-90424-5_8]
   Grabis J., 2018, CAPABILITY MANAGEMEN, P59, DOI [10.1007/978-3-319-90424-5_4, DOI 10.1007/978-3-319-90424-5_4]
   Guedes G, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P134, DOI 10.1145/3131151.3131162
   Guedes G, 2015, P BRAZ SYMP SOFTW, P90, DOI 10.1109/SBCARS.2015.20
   Guimaraes FP, 2017, DATA KNOWL ENG, V109, P25, DOI 10.1016/j.datak.2017.03.003
   Guimaraes FP, 2015, LECT NOTES COMPUT SC, V9381, P50, DOI 10.1007/978-3-319-25264-3_4
   Henkel M, 2016, LECT NOTES BUS INF P, V249, P40, DOI 10.1007/978-3-319-39564-7_4
   Hermoye L.A., 2006, Attack Patterns for Security Requirements Engineering
   Horkoff J, 2019, REQUIR ENG, V24, P133, DOI 10.1007/s00766-017-0280-z
   International Telecommunication Union (ITU-T), US REQ NOT URN LANG
   Jureta I. J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P115, DOI 10.1109/RE.2010.24
   Katz S, 2010, LECT NOTES COMPUT SC, V6210, P1, DOI 10.1007/978-3-642-16086-8
   Kienzle J, 2017, ACM SIGPLAN NOTICES, V52, P93, DOI [10.1145/2993236.2993246, 10.1145/3093335.2993246]
   Kienzle J, 2016, LECT NOTES COMPUT SC, V9679, P122, DOI 10.1007/978-3-319-35122-3_9
   Kim JS, 2006, IND MANAGE DATA SYST, V106, P540, DOI 10.1108/02635570610661615
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Klös V, 2018, J SYST SOFTWARE, V144, P314, DOI 10.1016/j.jss.2018.06.076
   Koc H., 2017, P PRACT ENT MOD 10 I, P126, DOI DOI 10.1007/978-3-319-70241-4_9
   Koc  H., 2017, CSIMQ, V10, P53, DOI [10.7250/csimq.2017-10.04, DOI 10.7250/CSIMQ.2017-10.04]
   Koç H, 2018, INT J INF SYST SERV, V10, P64, DOI 10.4018/IJISSS.2018070104
   Koç H, 2016, INTEL SYST REF LIBR, V111, P151, DOI 10.1007/978-3-319-40564-3_9
   Koç H, 2016, LECT NOTES BUS INF P, V249, P15, DOI 10.1007/978-3-319-39564-7_2
   Kolos-Mazuryk L., 2006, A Survey of Requirements Engineering Methods for Pervasive Services
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Krupitzer C., 2018, A survey on engineering approaches for self-adaptive systems (extended version)
   Lapouchnian  A., 2011, THESIS
   Lapouchnian A., 2011, Proceedings of the 5th International i* Workshop 2011, Trento, Italy, August 28-29, 2011, V766, P96
   Lapouchnian A, 2016, CONF BUS INFORM, P45, DOI 10.1109/CBI.2016.14
   Lapouchnian A, 2009, LECT NOTES COMPUT SC, V5829, P115, DOI 10.1007/978-3-642-04840-1_11
   Lei YW, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (FSKD), P2242, DOI 10.1109/FSKD.2015.7382301
   Leite JCSD, 2005, LECT NOTES COMPUT SC, V3520, P535
   Li T., 2016, THESIS
   Li  T., 2014, P 7 INT I WORKSH COL, V1157
   Li  T., 2014, INTEGRATING SECURITY, P208, DOI [10.1007/978-3-662-45501-2_15, DOI 10.1007/978-3-662-45501-2_15]
   Li T, 2018, SOFTW SYST MODEL, V17, P1253, DOI 10.1007/s10270-016-0560-y
   Li T, 2015, LECT NOTES COMPUT SC, V9013, P115, DOI 10.1007/978-3-319-16101-3_8
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Liu W., 2012, Context-based Requirement Modeling for Self-adaptive Service Software
   Liu W, 2012, COMM COM INF SC, V345, P156
   Liu W, 2012, ADV MATER RES-SWITZ, V433-440, P4798, DOI 10.4028/www.scientific.net/AMR.433-440.4798
   Matulevicius R, 2007, LECT NOTES COMPUT SC, V4542, P18
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Menghi  C., 2012, THESIS
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Morandini  M., 2011, THESIS
   Munoz J., 2018, 2018 10 INT C VIRT W, P1
   Murukannaiah P. K., 2016, THESIS
   Murukannaiah PK, 2014, AAMAS'14: PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P309
   Mussbacher  G., 2007, REQ ENG VIS 2007 REV, DOI [10.1109/REV.2007.11.1-1, DOI 10.1109/REV.2007.11.1-1]
   Mussbacher  G., 2008, P AOSD WORKSH EARL A, DOI 10.1145/1404946.1404948
   Mussbacher G, 2008, LECT NOTES COMPUT SC, V5002, P305
   Mussbacher G, 2013, S VIS LANG HUM CEN C, P238, DOI 10.1109/RE.2013.6636724
   Mussbacher G, 2009, LECT NOTES COMPUT SC, V5719, P115, DOI 10.1007/978-3-642-04554-7_8
   Mussbacher Gunter., 2013, ASPECT ORIENTED REQU, P77, DOI DOI 10.1007/978-3-642-38640-4_5
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   NATO, 1994, TECHNICAL REPORT
   Niu N, 2009, LECT NOTES COMPUT SC, V5560, P83, DOI 10.1007/978-3-642-03764-1_3
   Paja  E., 2016, LECT NOTES COMPUTER, V9974
   Palmieri A, 2015, LECT NOTES COMPUT SC, V9097, P181, DOI 10.1007/978-3-319-19069-3_12
   Park E., 2017, THESIS
   Pasquale  L., 2012, P 20 ACM SIGSOFT S F, P19, DOI 10.1145/2393596.2393618
   Peng X, 2009, J COMPUT SCI TECH-CH, V24, P319, DOI 10.1007/s11390-009-9227-2
   Pérez J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P221, DOI 10.1109/WICSA.2009.5290808
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pimentel J, 2012, REQUIR ENG, V17, P259, DOI 10.1007/s00766-011-0126-z
   Piras L, 2017, LECT NOTES COMPUT SC, V10650, P223, DOI 10.1007/978-3-319-69904-2_18
   Piras L, 2017, INT CONF RES CHAL, P255, DOI 10.1109/RCIS.2017.7956544
   Piras L, 2016, INT REQUIR ENG CONF, P365, DOI 10.1109/RE.2016.43
   Poels G., 2005, Measuring the Perceived Semantic Quality of Information Models, P376, DOI DOI 10.1007/11568346_41
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pourshahid  A., 2014, THESIS
   Pourshahid A, 2012, BUSINESS ENTERPRISE, PROCESS, AND TECHNOLOGY MANAGEMENT: MODELS AND APPLICATIONS, P165, DOI 10.4018/978-1-4666-0249-6.ch009
   Qureshi Nauman A., 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P263, DOI 10.1007/978-3-642-28714-5_24
   Qureshi N. A., 2011, THESIS
   Qureshi N. A., 2011, TECHNICAL REPORT
   Roy  J.-F., 2007, THESIS
   Sabatucci Luca, 2017, Journal of Reliable Intelligent Environments, V3, P159, DOI 10.1007/s40860-017-0047-9
   Salama M, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P249, DOI 10.1016/B978-0-12-802855-1.00011-3
   Saller K, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P106
   Sandkuhl  K., 2017, LECT NOTES BUSINESS, P341
   Sandkuhl  K., 2018, CAPABILITY MANAGEMEN, P209, DOI [10.1007/978-3-319-90424-5_12, DOI 10.1007/978-3-319-90424-5_12]
   Semmak F., 2008, MoDISE-EUS, V341, P22
   Silva Souza V. E., 2012, THESIS
   Soares LR, 2018, INFORM SOFTWARE TECH, V98, P44, DOI 10.1016/j.infsof.2018.01.016
   Soares M, 2016, ADV INTELL SYST COMP, V444, P609, DOI 10.1007/978-3-319-31232-3_57
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Souza V.E. S., 2011, System Identification for Adaptive Software Systems: A Requirements Engineering Perspective, P346, DOI DOI 10.1007/978-3-642-24606-7_26
   Souza VES, 2009, LECT NOTES COMPUT SC, V5829, P84, DOI 10.1007/978-3-642-04840-1_9
   Spoletini P, 2014, IEEE INT WORKSH MODE, P17, DOI 10.1109/MoDRE.2014.6890822
   Stirna  J., 2017, POEM, P251
   Stirna J., 2012, Capability Driven Development - An Approach to Support Evolving Organizations, P117, DOI DOI 10.1007/978-3-642-34549-4_9
   Stirna J, 2017, LECT NOTES BUS INF P, V286, P27, DOI 10.1007/978-3-319-60048-2_3
   Stirna J, 2016, LECT NOTES BUS INF P, V267, P257, DOI 10.1007/978-3-319-48393-1_18
   Stirna J, 2016, LECT NOTES BUS INF P, V261, P262, DOI 10.1007/978-3-319-45321-7_19
   Stirna J, 2016, LECT NOTES COMPUT SC, V9974, P396, DOI 10.1007/978-3-319-46397-1_30
   Strohmaier M, 2008, LECT NOTES COMPUT SC, V5025, P153, DOI 10.1007/978-3-540-69062-7_16
   Supriana  I., 2018, TELKOMNIKA, V16
   Supriana  I., 2016, P INT C ADV INF CONC, P1
   Surendro K, 2016, J INF COMMUN TECHNOL, V15, P1
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Tong Li, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549303
   Tonisson R, 2016, LECT NOTES BUS INF P, V261, P80, DOI 10.1007/978-3-319-45321-7_6
   van der Storm T, 2004, LECT NOTES COMPUT SC, V3107, P157
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Vialon A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P233, DOI 10.1109/ICAC.2017.25
   Vrbaski M., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P335, DOI 10.1109/RE.2012.6345832
   Vrbaski  M., 2012, THESIS
   Vrbaski Mira., 2012, P 7 WORKSHOP MODELS, P3, DOI DOI 10.1145/2422518.2422520
   Weber  W., 1998, UNIFIED MODELING LAN, P190
   Welsh K, 2014, LECT NOTES COMPUT SC, V8780, P122, DOI 10.1007/978-3-662-44871-7_5
   Xiao L, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P135, DOI [10.1109/REW.2016.036, 10.1109/REW.2016.12]
   Yang  Z., 2017, THEMATIC STUDY REQUI
   Yang  Z., 2017, ACHIEVING ADAPTATION
   Yang  Z., 2017, MODEL BASED FUZZY CO
   Yang Z., 2014, Requirements Engineering, P105, DOI DOI 10.1007/978-3-662-43610-3_9
   Yang  Z., 2017, ARXIV170400421
   Yang  Z., 2017, ARXIV170400873
   Yiwei Lei, 2015, 2015 7th International Conference on Intelligent Human-Machine Systems and Cybernetics (IHMSC). Proceedings, P533, DOI 10.1109/IHMSC.2015.65
   Yu Eric Siu-Kwong, 1996, UMI Order No. GAXNN-02887
   ZDRAVKOVIC J., 2017, COMPLEX SYST INFORM, V10, P1, DOI DOI 10.7250/CSIMQ.2017-10.01
   Zhao T., 2014, 6th Asia-Pacific Symposium on Internetware on Internetware, P25
   Ziyan Xu, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P13, DOI 10.1109/COMPSACW.2012.13
NR 210
TC 5
Z9 6
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 156
EP 173
DI 10.1016/j.infsof.2019.03.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100012
DA 2024-07-18
ER

PT J
AU Fregnan, E
   Baum, T
   Palomba, F
   Bacchelli, A
AF Fregnan, Enrico
   Baum, Tobias
   Palomba, Fabio
   Bacchelli, Alberto
TI A survey on software coupling relations and tools
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Coupling relations; Software metrics
ID COHESION METRICS; MAINTAINABILITY; MODELS; IMPACT; SUITE; COMPLEXITY;
   FRAMEWORK; SMELLS
AB Context: Coupling relations reflect the dependencies between software entities and can be used to assess the quality of a program. For this reason, a vast amount of them has been developed, together with tools to compute their related metrics. However, this makes the coupling measures suitable for a given application challenging to find.
   Goals: The first objective of this work is to provide a classification of the different kinds of coupling relations, together with the metrics to measure them. The second consists in presenting an overview of the tools proposed until now by the software engineering academic community to extract these metrics.
   Method: This work constitutes a systematic literature review in software engineering. To retrieve the referenced publications, publicly available scientific research databases were used. These sources were queried using keywords inherent to software coupling. We included publications from the period 2002 to 2017 and highly cited earlier publications. A snowballing technique was used to retrieve further related material.
   Results: Four groups of coupling relations were found: structural, dynamic, semantic and logical. A fifth set of coupling relations includes approaches too recent to be considered an independent group and measures developed for specific environments. The investigation also retrieved tools that extract the metrics belonging to each coupling group.
   Conclusion: This study shows the directions followed by the research on software coupling: e.g., developing metrics for specific environments. Concerning the metric tools, three trends have emerged in recent years: use of visualization techniques, extensibility and scalability. Finally, some coupling metrics applications were presented (e.g., code smell detection), indicating possible future research directions. Public preprint [https://doi.org/10.5281/zenodo.2002001].
C1 [Fregnan, Enrico; Palomba, Fabio; Bacchelli, Alberto] Univ Zurich, Zurich, Switzerland.
   [Baum, Tobias] Leibniz Univ Hannover, Hannover, Germany.
C3 University of Zurich; Leibniz University Hannover
RP Fregnan, E (corresponding author), Univ Zurich, Zurich, Switzerland.
EM fregnan@ifi.uzh.ch; tobias.baum@inf.uni-hannover.de; palomba@ifi.uzh.ch;
   bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Palomba,
   Fabio/0000-0001-9337-5116
FU Swiss National Science Foundation through the SNF [PP00P2_170529]
FX E. Fregnan, F. Palomba, and A. Bacchelli gratefully acknowledge the
   support of the Swiss National Science Foundation through the SNF Project
   No. PP00P2_170529.
CR Abreau F., 1994, P 4 INT C SOFTW QUAL
   ABREU F, 1995, P 5 INT C SOFTW QUAL
   Abualese Hasan, 2017, 2017 8th International Conference on Information Technology (ICIT). Proceedings, P469, DOI 10.1109/ICITECH.2017.8080044
   Ahmed M., 2011, J AM SCI, V7, P222
   Alahmari S., 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P512, DOI 10.1109/SCC.2011.98
   Alali A, 2013, IEEE WORK CONF MIN S, P169, DOI 10.1109/MSR.2013.6624024
   Alenezi Mamdouh, 2014, International Journal of Computers and Applications, V36, P34, DOI 10.2316/Journal.202.2014.1.202-3902
   AlGhamdi J, 2002, INFORM SCIENCES, V140, P217, DOI 10.1016/S0020-0255(01)00172-4
   Alghamdi J., 2007, P 6 WSEAS INT C SOFT, P6
   Alghamdi JS, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P190, DOI 10.1109/CSMR.2005.44
   Allen E.B., 2001, Proceedings Seventh International Software Metrics Symposium, IEEE, P124
   Allen EB, 2007, SOFTWARE QUAL J, V15, P179, DOI 10.1007/s11219-006-9010-3
   Almugrin S, 2016, J SYST SOFTWARE, V121, P298, DOI 10.1016/j.jss.2016.02.024
   Aloysius A., 2012, International Journal of Information Technology and Computer Science, V4, P29, DOI 10.5815/ijitcs.2012.09.04
   Alshammari Bandar, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P55, DOI 10.1109/ASWEC.2010.34
   Alshammari B, 2012, NATL WORKSHOP INFORM, P1
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], P 3 INT S PRINC PRAC
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 1994, TECHNICAL REPORT
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   [Anonymous], 2017, PROC SOUTHEASTCON
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arisholm E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P33, DOI 10.1109/METRIC.2002.1011323
   Aryani A., 2011, 2011 18th Working Conference on Reverse Engineering, P55, DOI 10.1109/WCRE.2011.17
   Aryani A., 2010, PROC 71 IEEE VEH TEC, P1
   Bantelay F, 2013, WORK CONF REVERSE EN, P311, DOI 10.1109/WCRE.2013.6671306
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Bartolomei T.T., 2006, 3 INT WORKSHOP SOFTW, P46
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bennett B., 2016, IEEE SOUTHEASTCON, P1
   Bernardi M. L., 2010, P WETSOM
   Bidve Vijay S., 2016, INT J ENG TECHNOLOGY, V8, P812
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Burrows R., 2010, Proceedings of the 2010 ICSE Workshop on Emerging Trends in Software Metrics, P53
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Ceccato M., 2004, EL P 1 WORKSH ASP RE
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Cleland-Huang J, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P212
   COLEMAN D, 1995, J SYST SOFTWARE, V29, P3, DOI 10.1016/0164-1212(94)00125-7
   D'Ambros M, 2006, WORK CONF REVERSE EN, P189
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   D'Ambros Marco., 2006, MINING SOFTWARE REPO, P26, DOI DOI 10.1145/1137983.1137992
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Dixit V., 2014, WIR OPT COMM NETW WO, P1
   Dogra AK, 2017, INT WORKS EMERG TREN, P43, DOI 10.1109/WETSoM.2017.8
   Eichberg M., 2006, P C SOFTW MAINT REEN
   Elhag Arafat Abdulgader Mohammed, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P154, DOI 10.1109/MySec.2014.6986006
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   English Michael, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P295
   English M, 2012, COMPUT LANG SYST STR, V38, P300, DOI 10.1016/j.cl.2012.06.002
   Erl T., 2007, SOA Principles of Service Design
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Figueiredo E., 2005, P 9 ECOOP WORKSH QUA
   Figueiredo E., 2006, P EUR C OBJ OR PROGR
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Garcia Juan, 2011, Proceedings of the 2011 International Conference on Information & Knowledge Engineering (IKE 2011), P22
   Garcia J, 2010, LECT NOTES BUS INF P, V62, P90
   García J, 2010, LECT NOTES ARTIF INT, V6097, P12, DOI 10.1007/978-3-642-13025-0_2
   Geetika Rani, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2579281.2579296
   Gethers M., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P144, DOI 10.1109/SCAM.2012.27
   Girgis MR, 2009, 2009 INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING AND SYSTEMS (ICCES 2009), P423, DOI 10.1109/ICCES.2009.5383226
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gui G, 2008, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE FOR YOUNG COMPUTER SCIENTISTS, VOLS 1-5, P1181, DOI 10.1109/ICYCS.2008.270
   Gunnalan R., 2005, P 3 ACS IEEE INT C C, P117, DOI [10.1109/AICCSA.2005.1387106, DOI 10.1109/AICCSA.2005.1387106]
   Hanakawa N, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/ASPEC.2007.36
   Harrison R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P150, DOI 10.1109/METRIC.1998.731240
   Hassoun Y, 2005, IEE P-SOFTW, V152, P273, DOI 10.1049/ip-sen:20045067
   Hassoun Y, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P339, DOI 10.1109/CSMR.2004.1281436
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Husein S, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTER TECHNOLOGY AND DEVELOPMENT, VOL 1, P421, DOI 10.1109/ICCTD.2009.209
   Jordan H., 2010, P INT WORKSH PROGR M, P63
   Joshi P., 2006, 10th European Conference on Software Maintenance and Reengineering
   Jrjens J., 2010, Secure Systems Development with UML
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kamble S, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P9, DOI [10.1109/SE4Science.2017.10, 10.1109/SE4Science.2017..10]
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karhikeyan T., 2012, Proceedings of the 2012 International Conference on Recent Advances in Computing and Software Systems (RACSS), P254, DOI 10.1109/RACSS.2012.6212677
   Kayarvizhy N., AUTOMATED TOOL COMPU, P69
   Kazemi Ali, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P504, DOI 10.1109/SCC.2011.23
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kirbas S, 2017, SCI COMPUT PROGRAM, V135, P4, DOI 10.1016/j.scico.2016.10.003
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham B., 2004, ARXIV
   Kramer S, 2004, ACM T SOFTW ENG METH, V13, P332, DOI 10.1145/1027092.1027094
   Kumar A., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1, DOI DOI 10.1145/1527202.1527209
   LEE YS, 1995, P INT C SOFTW QUAL
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li H, 2008, 2008 IEEE INTERNATIONAL SYMPOSIUM ON KNOWLEDGE ACQUISITION AND MODELING WORKSHOP PROCEEDINGS, VOLS 1 AND 2, P609, DOI 10.1109/KAMW.2008.4810562
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu Y., 2006, P C CTR ADV STUD COL, DOI [10.1145/1188966.1188980, DOI 10.1145/1188966.1188980]
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Martin R., 1994, WORKSH PROGM THEOR D
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Mitchell A., 2005, P ACM S APPL COMP SA, P1452
   Myers Glenford J., 1975, Reliable Software through Composite Design
   Nicolaescu A, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P48, DOI 10.1109/SAM.2015.14
   Núñez-Varela AS, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION - CONISOFT 2016, P27, DOI 10.1109/CONISOFT.2016.13
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   Offutt J, 2008, SOFTWARE QUAL J, V16, P489, DOI 10.1007/s11219-008-9051-x
   Orme AN, 2006, IEEE SOFTWARE, V23, P102, DOI 10.1109/MS.2006.46
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pascarella L., 2018, P ACM HUM COMP INT C, V2
   Pautasso Cesare., 2009, P 18 INT C WORLD WID
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Qian Kai., 2006, 5th IEEE/ACIS International Conference on Computer and Information Science and 1st IEEE/ACIS International Workshop on Component-Based Software Engineering, Software Architecture and Reuse (ICIS-COMSAR'06), P44, DOI DOI 10.1109/ICIS-COMSAR.2006
   Quynh P., 2009, INT J COMPUT ELECT A, V3, P795
   Rahman MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1265, DOI 10.1109/ICSE.2013.6606694
   Rajaraman C., 1992, Technology of Object-Oriented Languages and Systems TOOLS 8. Proceedings of the Eighth International Conference, P225
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rilling J, 2004, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2004.1357874
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Rosner P, 2008, IEEE INT CONF INF VI, P575, DOI 10.1109/IV.2008.96
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Sarimbekov A, 2014, SCI COMPUT PROGRAM, V79, P146, DOI 10.1016/j.scico.2011.11.003
   Sarvari S, 2015, ASIA PAC SOFWR ENG, P127, DOI 10.1109/APSEC.2015.21
   Schach S.R., 2011, Object-oriented and classical software engineering
   Scotto M., 2004, P 2004 WORKSH QUANT, P76, DOI [10.1145/1151433.1151444, DOI 10.1145/1151433.1151444]
   Scotto M, 2006, J SYST ARCHITECT, V52, P668, DOI 10.1016/j.sysarc.2006.06.010
   Scotto Marco., 2004, SAC 04 P 2004 ACM S, P1536, DOI [10.1145/967900.968207, DOI 10.1145/967900.968207]
   Shen H., 2007, SJTUCSETR0704
   Shen HH, 2008, TASE 2008: SECOND IFIP/IEEE INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P233
   Sindhgatta R., MEASURING QUALITY SE, P485
   Singh P., 2008, ACM SIGSOFT SOFTW EN, V33, P1
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Tahir A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P326, DOI 10.1109/ICSM.2012.6405289
   Tempero E, 2016, ASIA PAC SOFWR ENG, P145, DOI [10.1109/APSEC.2016.030, 10.1109/APSEC.2016.22]
   Tripathi A., 2015, CSI Transactions on ICT, V2, P217, DOI DOI 10.1007/S40012-015-0061-0
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Washizaki H, 2006, ASPEC 2006: 13th Asia-Pacific Software Engineering Conference, Proceedings, P79
   Weissgerber P., 2005, P OOPSLA WORKSH ECL, P31
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Wilhelm M, 2005, 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis, Proceeedings, P125
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
   Yang H.Y., 2007, Assessment of Contemporary Modularization Techniques, ICSE Workshops ACoM 07, P20, DOI DOI 10.1109/ACOM.2007.5
   Yang HY, 2005, 2005 Australian Software Engineering Conference, Proceedings, P212
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zaidman A., 2004, P 4 INT WORKSH OO RE
   Zanoni M., 2017, IEEE T SOFTW ENG
   Zhao BM, 2009, IN C IND ENG ENG MAN, P1, DOI 10.1109/ICIEEM.2009.5344648
   Zhao J, 2004, P 10 INT SOFTW METR, P14
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T., 2005, P OOPSLA COMP
   Zou LJ, 2007, INT C PROGRAM COMPRE, P135
NR 167
TC 17
Z9 19
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 159
EP 178
DI 10.1016/j.infsof.2018.11.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200012
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Theisen, C
   Munaiah, N
   Al-Zyoud, M
   Carver, JC
   Meneely, A
   Williams, L
AF Theisen, Christopher
   Munaiah, Nuthan
   Al-Zyoud, Mahran
   Carver, Jeffrey C.
   Meneely, Andrew
   Williams, Laurie
TI Attack surface definitions: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Attack surface; Vulnerabilities; Software engineering; Systematic
   literature review
ID FRAMEWORK; RISK
AB Context: Michael Howard conceptualized the attack surface of a software system as a metaphor for risk assessment during the development and maintenance of software. While the phrase attack surface is used in a variety of contexts in cybersecurity, professionals have different conceptions of what the phrase means.
   Objective: The goal of this systematic literature review is to aid researchers and practitioners in reasoning about security in terms of attack surface by exploring various definitions of the phrase attack surface.
   Method: We reviewed 644 works from prior literature, including research papers, magazine articles, and technical reports, that use the phrase attack surface and categorized them into those that provided their own definition; cited another definition; or expected the reader to intuitively understand the phrase.
   Results: In our study, 71% of the papers used the phrase without defining it or citing another paper. Additionally, we found six themes of definitions for the phrase attack surface.
   Conclusion: Based on our analysis, we recommend practitioners choose a definition of attack surface appropriate for their domain based on the six themes we identified in our study.
C1 [Theisen, Christopher; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
   [Munaiah, Nuthan; Meneely, Andrew] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Al-Zyoud, Mahran; Carver, Jeffrey C.] Univ Alabama, Tuscaloosa, AL USA.
C3 North Carolina State University; Rochester Institute of Technology;
   University of Alabama System; University of Alabama Tuscaloosa
RP Theisen, C (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM crtheise@ncsu.edu
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020; Al-Zyoud,
   Mahran/IAS-0780-2023; Munaiah, Nuthan/AAR-6905-2021
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; Al-Zyoud, Mahran/0000-0002-9236-7242;
   Meneely, Andy/0000-0002-4850-1408
FU U.S. National Security Agency Science of Security Lablet at North
   Carolina State University [H98230-14-C-0139]; Direct For Education and
   Human Resources; Division Of Graduate Education [1433736] Funding
   Source: National Science Foundation
FX This research was sponsored by the U.S. National Security Agency Science
   of Security Lablet at North Carolina State University under grant
   H98230-14-C-0139. The views and conclusions contained in this document
   are those of the authors and should not be interpreted as representing
   the official policies, either expressed or implied, of any sponsoring
   institution, the U.S. government or any other entity.
CR [Anonymous], CMUCS07146
   [Anonymous], 2003, P WORKSH ADV DEV SOF
   [Anonymous], 2011, PROC INT C MOBILE SY
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Bellovin SM, 2016, IEEE SECUR PRIV, V14, P88, DOI 10.1109/MSP.2016.55
   Bird J., 2015, ATTACK SURFACE ANAL
   Bodeau D, 2015, MTR140499R1 MITRE CO
   Bouard A., AUTOMOTIVE PROXY BAS, P62, DOI [10.1007/978-3-642-36660-45, DOI 10.1007/978-3-642-36660-45]
   Brenneman D., 2012, TECHNICAL REPORT
   Bryant W., CYBERSPACE RESILIENC, P1, DOI [10.1007/978-3-319-23585-1_1, DOI 10.1007/978-3-319-23585-1_1]
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cortes AC., 1972, US patent, Patent No. [3,693,735, 3693735]
   Fiondella L., 2012, CROSSTALK, V9
   Fleet U. T., 2015, TECHNICAL REPORT
   Ford B., BEWARE SOOTHSAYER AT, P35, DOI [10.1007/978-3-319-25594-1_3, DOI 10.1007/978-3-319-25594-1_3]
   Gruschka N., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P276, DOI 10.1109/CLOUD.2010.23
   Hahn A, 2011, IEEE T SMART GRID, V2, P835, DOI 10.1109/TSG.2011.2163829
   Han Z., MEASURING COMP PROTE, P642, DOI [10.1007/978-3-642-38631-2_51, DOI 10.1007/978-3-642-38631-2_51]
   Heelan S, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P199
   Howard M., 2004, MSDN MAGAZINE, V2004
   Howard M., 2006, The security development lifecycle, V8
   Howard M., MEASURING RELATIVE A, P109, DOI DOI 10.1007/0-387-24006-3_8
   Howard M., 2003, BEST PRACTICES SERIE
   Howard Michael., 2003, FENDING FUTURE ATTAC
   Huang Y., INTRO DIVERSITY UNCE, P131, DOI [10.1007/978-1-4614-0977-9_8, DOI 10.1007/978-1-4614-0977-9_8]
   Kar D., 2015, 4 ANN AD LEARN AG WO
   Kar D, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P1381
   Kasten J., CAGE TAMING CERTIFIC, P329, DOI [10.1007/978-3-642-39884-1_28, DOI 10.1007/978-3-642-39884-1_28]
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knapp ED, 2013, APPLIED CYBER SECURITY AND THE SMART GRID: IMPLEMENTING SECURITY CONTROLS INTO THE MODERN POWER INFRASTRUCTURE, P1
   Kurmus A., QUANTIFIABLE RUN TIM, P212, DOI [10.1007/978-3-319-08509-8_12, DOI 10.1007/978-3-319-08509-8_12]
   Lipner S., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P2
   Manadhata P., 2008, THESIS
   MANADHATA P, 2004, CMUCS04102
   Manadhata P., 2005, CMUCS05155
   Manadhata P. K., 2006, P 1 WORKSH SEC METR
   Manadhata P. K., FORMAL MODEL SYSTEMS, P1, DOI [10.1007/978-1-4614-0977-91, DOI 10.1007/978-1-4614-0977-91]
   Manadhata P. K., 2007, CMUCS07144
   Manadhata P. K., REPORT MEASURING ATT, P91, DOI [10.1007/978-3-642-00199-48, DOI 10.1007/978-3-642-00199-48]
   Manadhata P. K., 2008, CMUCS08134
   Manadhata Pratyusa., 2006, Proceedings of the Workshop on Quality of Protection, P3
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Martin Bob, 2014, COMMON WEAKNESS SCOR
   Munaiah N, 2016, SPRO'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON SOFTWARE PROTECTION, P3, DOI 10.1145/2995306.2995311
   Neumann T., 2010, SICHERHEIT, P305
   Northcutt S., 2011, The attack surface problem
   Osterweil E, 2014, I C NETWORK PROTOCOL, P636, DOI 10.1109/ICNP.2014.101
   Ouchani S, 2013, INT CONF SOFTW SECUR, P227, DOI 10.1109/SERE.2013.11
   Parrend P, 2009, SOFTWARE PRACT EXPER, V39, P471, DOI 10.1002/spe.906
   Peng W, 2014, IEEE ICC, P804, DOI 10.1109/ICC.2014.6883418
   Serrano J., INCREASING AUTOMATED, P278, DOI [10.1007/978-3-642-38033-4_20, DOI 10.1007/978-3-642-38033-4_20]
   Theisen C., 2017, SOFTW ENG SOFTW ENG, V2017, P273
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Ucedavelez T, 2015, RISK CENTRIC THREAT MODELING: PROCESS FOR ATTACK SIMULATION AND THREAT ANALYSIS, P1, DOI 10.1002/9781118988374
   Wang L., K ZERO DAY SAFETY ME, P573, DOI [10.1007/978-3-642-15497-335, DOI 10.1007/978-3-642-15497-335]
   Wheatley S, 2016, EUR PHYS J B, V89, DOI 10.1140/epjb/e2015-60754-4
   Younis A.A., 2012, Proceedings on the International Conference on Internet Computing (ICOMP), P1
   Younis AA, 2014, 2014 IEEE EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C 2014), P13, DOI 10.1109/SERE-C.2014.17
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhu Q., 2013, P INT C DEC GAM THEO, P246, DOI [10.1007/978-3-319-02786-9_15, DOI 10.1007/978-3-319-02786-9_15]
NR 62
TC 19
Z9 25
U1 1
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 94
EP 103
DI 10.1016/j.infsof.2018.07.008
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900006
DA 2024-07-18
ER

PT J
AU Munir, H
   Runeson, P
   Wnuk, K
AF Munir, Hussan
   Runeson, Per
   Wnuk, Krzysztof
TI A theory of openness for software engineering tools in software
   organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open Innovation; Open Source Software; OSS tools; Openness; Theory
   creation
ID OPEN INNOVATION; COMMUNITIES; FIRMS; KNOWLEDGE; COMPANIES; FUTURE
AB Context The increased use of Open Source Software (OSS) affects how software-intensive product development organizations (SIPDO) innovate and compete, moving them towards Open Innovation (OI). Specifically, software engineering tools have the potential for OI, but require better understanding regarding what to develop internally and what to acquire from outside the organization, and how to cooperate with potential competitors.
   Aim This paper aims at synthesizing a theory of openness for software engineering tools in SIPDOs, that can be utilized by managers in defining more efficient strategies towards OSS communities.
   Method: We synthesize empirical evidence from a systematic mapping study, a case study, and a survey, using a narrative method. The synthesis method entails four steps: (1) Developing a preliminary synthesis, (2) Exploring the relationship between studies, (3) Assessing the validity of the synthesis, and (4) Theory formation.
   Result We present a theory of openness for OSS tools in software engineering in relation to four constructs: (1) Strategy, (2) Triggers, (3) Outcomes, and (4) Level of openness.
   Conclusion: The theory reasons that openness provides opportunities to reduce the development cost and development time. Furthermore, OI positively impacts on the process and product innovation, but it requires investment by organizations in OSS communities. By betting on openness, organizations may be able to significantly increase their competitiveness.
C1 [Munir, Hussan; Runeson, Per] Lund Univ, Dept Comp Sci, POB 118, SE-22100 Lund, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Munir, H (corresponding author), Lund Univ, Dept Comp Sci, POB 118, SE-22100 Lund, Sweden.
EM hussan.munir@cs.lth.se; per.runeson@cs.lth.se; krzysztof.wnuk@bth.se
RI Runeson, Per/H-5113-2019; Munir, Hussan/HKV-4509-2023
OI Runeson, Per/0000-0003-2795-4851; Munir, Hussan/0000-0001-9376-9844
FU Swedish National Science Foundation [621-2012-5354]
FX This work is funded by the Swedish National Science Foundation Framework
   Grant for Strategic Research in Information and Communication
   Technology, project Synergies (Synthesis of a Software Engineering
   Framework for Open Innovation through Empirical Research), grant
   621-2012-5354.
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], GUIDANCE CONDUCT NAR, DOI DOI 10.13140/2.1.1018.4643
   [Anonymous], 2014, NEW FRONTIERS OPEN I
   [Anonymous], 2016, REAL WORLD RES
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Bosch J, 2013, COMPUTER, V46, P34, DOI 10.1109/MC.2013.295
   Brad S, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON AUTOMATION, QUALITY AND TESTING, ROBOTICS (AQTR 2008), THETA 16TH EDITION, VOL III, PROCEEDINGS, P224, DOI 10.1109/AQTR.2008.4588916
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Carroll JM, 2000, EUR J INFORM SYST, V9, P235, DOI 10.1057/palgrave/ejis/3000374
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Cruzes D.S., 2014, Empirical Software Engineering, P1
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2010, RES POLICY, V39, P699, DOI 10.1016/j.respol.2010.01.013
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   Di Gangi PM, 2009, DECIS SUPPORT SYST, V48, P303, DOI 10.1016/j.dss.2009.04.004
   Ebner W, 2009, R&D MANAGE, V39, P342, DOI 10.1111/j.1467-9310.2009.00564.x
   Edison H, 2013, J SYST SOFTWARE, V86, P1390, DOI 10.1016/j.jss.2013.01.013
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Enkel E, 2009, R&D MANAGE, V39, P311, DOI 10.1111/j.1467-9310.2009.00570.x
   Erickson F., 1986, Handbook of research on teaching, P119
   Gassmann Oliver., 2004, THEORY OPEN INNOVATI
   HENKEL J, 2013, RES POLICY
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Herbsleb J. D., 2003, Software Engineering Notes, V28, P138, DOI 10.1145/949952.940091
   Hüsig S, 2011, COMPUT IND, V62, P407, DOI 10.1016/j.compind.2010.12.003
   Huizingh EKRE, 2011, TECHNOVATION, V31, P2, DOI 10.1016/j.technovation.2010.10.002
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Laine MOJ, 2012, LECT NOTES BUS INF P, V114, P70
   Lichtenthaler U, 2009, R&D MANAGE, V39, P38, DOI 10.1111/j.1467-9310.2008.00522.x
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Merriam S.B., 1995, PAACE J LIFELONG LEA, V4, P50
   Merton R.K., 1968, SOCIAL STRUCTURE SOC
   Morgan L, 2010, DATA BASE ADV INF SY, V41, P76
   Munir H., 2015, 6 INT C SOFTW BUS IC
   Munir H., 2017, EMPIR SOFTW ENG, P1
   Munir H, 2015, PROC ICSSP, P187
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Rohrbeck R, 2009, R&D MANAGE, V39, P420, DOI 10.1111/j.1467-9310.2009.00568.x
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   SINGER L, 2011, SSE, P00001
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Stol KJ, 2016, INFORM SOFTWARE TECH, V70, P176, DOI 10.1016/j.infsof.2015.07.010
   Stuermer M, 2009, R&D MANAGE, V39, P170, DOI 10.1111/j.1467-9310.2009.00548.x
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   von Krogh G., 2003, RES POLICY, V32
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Whitehurst J, 2015, The open organization
   Wnuk K, 2012, INT SYMP EMP SOFTWAR, P271, DOI 10.1145/2372251.2372301
   Yin R., 2003, Case Study Research: Design and Methods
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 61
TC 16
Z9 17
U1 1
U2 18
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 26
EP 45
DI 10.1016/j.infsof.2017.12.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GA0MR
UT WOS:000428008600003
OA Green Published
DA 2024-07-18
ER

PT J
AU Hassine, J
   Hamou-Lhadj, A
   Alawneh, L
AF Hassine, Jameleddine
   Hamou-Lhadj, Abdelwahab
   Alawneh, Luay
TI A framework for the recovery and visualization of system availability
   scenarios from execution traces
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional requirements; Dynamic analysis; Availability; Use case
   maps; Log filtering; Log segmentation
ID SEQUENCE
AB Context: Dynamic analysis is typically concerned with the analysis of system functional aspects at run time. However, less work has been devoted to the dynamic analysis of software quality attributes. The recovery of availability scenarios from system execution traces is particularly important for critical systems to verify that the running implementation supports and complies with availability requirements, especially if the source code is not available (e.g., in legacy systems) and after the system has undergone several ad-hoc maintenance tasks.
   Objective: Propose a dynamic analysis approach, along with tool support, to recover availability scenarios, from system execution traces running high availability features.
   Method: Native execution traces, collected from systems running high availability features, are pre-processed, filtered, merged, and segmented into execution phases. The segmented scenarios are then visualized, at a high level of abstraction, using the ITU-T standard Use Case Maps (UCM) language extended with availability annotations.
   Results: The applicability of our proposed approach has been demonstrated by implementing it as a prototype feature within the jUCMNav tool and by applying it to four real-world systems running high availability features. Furthermore, we have conducted an empirical study to prove that resulting UCM models improve the under-standability of log files that contain high availability features.
   Conclusion: We have proposed a framework to filter, merge, segment, and visualize native log traces. The framework presents the following benefits: (1) it offers analysts the flexibility to specify what to include/exclude from an execution trace, (2) it provides a log segmentation method based on the type of information reported in the execution trace, (3) it uses the UCM language to visually describe availability scenarios at a high level of abstraction, and (4) it offers a scalable solution for the visualization problem through the use of the UCM stub-plug-in concept.
C1 [Hassine, Jameleddine] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Elect & Comp Engn Dept, Montreal, PQ, Canada.
   [Alawneh, Luay] Jordan Univ Sci & Technol, Dept Software Engn, Irbid, Jordan.
C3 King Fahd University of Petroleum & Minerals; Concordia University -
   Canada; Jordan University of Science & Technology
RP Hassine, J (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
EM jhassine@kfupm.edu.sa; abdelw@ece.concordia.ca; Imalawneh@just.edu.jo
RI Alawneh, Luay/GPC-8269-2022; Hassine, Jameleddine/E-5940-2015
OI Alawneh, Luay/0000-0002-5152-8636; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
FU King Fahd University of Petroleum & Minerals (KFUPM) [IN131031]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals (KFUPM) for funding this work through project No. IN131031.
CR Andrews J. H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P105, DOI 10.1109/ICSE.2000.870402
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 1998, 2281 RFC
   [Anonymous], 1994, Fault Tolerance in Distributed Systems
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], SPSS SOFTW
   [Anonymous], 2014, JUCMNAV V7 0 0 JUCMN
   [Anonymous], 2008, E800 ITUT
   ANSI/IEEE, 1991, STD7291991 ANSIIEEE
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Braun E, 2015, LECT NOTES COMPUT SC, V9369, P177, DOI 10.1007/978-3-319-24912-4_13
   Chan A, 2003, PROG COMPREHEN, P237
   Cho SB, 2002, IEEE T SYST MAN CY C, V32, P154, DOI 10.1109/TSMCC.2002.801356
   Cisco Systems, 2006, HOT STANDB ROUT PROT
   Cisco Systems, 2004, CISCO PRESS NETW TEC
   Cisco Systems, 2012, SYSL MESS
   Cisco Systems, 2016, HIGH AV RED OP
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Deal R., 2009, CISCO ASA CONFIGURAT, VI
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   Dugerdil P., 2007, PROC 2007 C CTR ADV, P306, DOI DOI 10.1145/1321211.1321254
   GNS3 Technologies Inc, 2016, GRAPH NETW SIM
   Greevy O., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P47, DOI [10.1145/1148493.1148501, DOI 10.1145/1148493.1148501]
   Hamou-Lhadj A, 2005, PROG COMPREHEN, P157, DOI 10.1109/WPC.2005.30
   Hamou-Lhadj A, 2005, IEEE INT C ENG COMP, P559
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hamou-Lhadj A., 2005, Proceedings of the 1st International Workshop on Program Comprehension through Dynamic Analysis, P43
   Hamou-Lhadj A., 2003, Proc. of the Int'l Conf. on Software Engineering Workshop on Dynamic Analysis, P33
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hassine Jameleddine, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P54, DOI 10.1007/978-3-642-38911-5_4
   Hassine Jameleddine, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P36, DOI 10.1007/978-3-642-38911-5_3
   Hassine Jameleddine, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P54, DOI 10.1007/978-3-642-25264-8_6
   Hassine J., 2011, EARLY AVAILABILITY R, P754
   Hassine J, 2015, SOFTW SYST MODEL, V14, P1455, DOI 10.1007/s10270-013-0382-0
   Hassine J, 2014, LECT NOTES COMPUT SC, V8769, P48, DOI 10.1007/978-3-319-11743-0_4
   ISO/ IEC, 2010, TECHNICAL REPORT
   ITU-T, 2012, Z151 ITUT
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Pirzadeh H, 2013, SCI COMPUT PROGRAM, V78, P1099, DOI 10.1016/j.scico.2012.11.002
   Shieh SP, 1997, IEEE T KNOWL DATA EN, V9, P661, DOI 10.1109/69.617059
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
NR 50
TC 5
Z9 5
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 78
EP 93
DI 10.1016/j.infsof.2017.11.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200006
DA 2024-07-18
ER

PT J
AU Sierra, JM
   Vizcaíno, A
   Genero, M
   Piattini, M
AF Maria Sierra, Jose
   Vizcaino, Aurora
   Genero, Marcela
   Piattini, Mario
TI A systematic mapping study about socio-technical congruence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Socio-technical congruence; Social-technical dependencies; Coordination;
   Tools; Systematic Mapping Study
ID COORDINATION
AB Context Lack of coordination may create significant problems between work teams, this problem is even most critical when team workers are geographically distributed as it results in cost increases and delays in the projects. There exists a technique called Socio-Technical Congruence (STC) that aims at helping to measure and control the coordination level existing in an organization at their different levels.
   Objective: The objective of this paper is to carry out a systematic mapping of the field of socio-technical congruence. The aspects of particular interest for this article are: Socio-Technical Congruence definition, different ways to measure it, available tools to measure or that can help to measure it, the areas of application, its benefits and the case studies that analyze the effects Socio-Technical Congruence has on the organization as regards the products quality and the improvements in performance in the long term development, in an attempt to characterize the state of the art of this field identifying gaps and opportunities for further research. Therefore, companies could use this work as a starting point to apply STC measures in their work teams.
   Results: This paper presents the results of a systematic mapping of Literature about Socio-Technical Congruence (STC) in order to investigate and classify the existing articles and conferences about the subject, as well as summarizing the most important aspects in regards to provide a general overview about the existing studies.
   Conclusions: After analyzing the 40 papers found, we can conclude that there is no one standard measure of socio-technical congruence, although most take the proposal by Kwan et al. applying adaptations and improvements on it as regards the environment that it will be focused on. In general, most case studies talk about the benefits of STC control in organizations. However, only one paper focus on global software development where the problems of communication, coordination and control are an important risk. Moreover, there are only a few papers that explore the risks of excessively overloading users with coordination iterations when controlling STC. In fact, no case study to examine these risks and their effect on developers' productivity has been found. The small number of studies found on STC, together with the research gaps we have pointed out, suggest that further investigation on socio-technical congruence is required.
C1 [Maria Sierra, Jose; Vizcaino, Aurora; Genero, Marcela; Piattini, Mario] Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, Inst Technol & Informat Syst, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Vizcaíno, A (corresponding author), Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, Inst Technol & Informat Syst, Ciudad Real, Spain.
EM jose.sierra@uclm.es; aurora.vizcaino@uchn.es; marcela.genero@udm.es;
   mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Vizcaino, Aurora/D-4452-2011; GENERO,
   MARCELA/L-6480-2014
OI Piattini, Mario/0000-0002-7212-8279; Vizcaino,
   Aurora/0000-0002-2072-5581; GENERO, MARCELA/0000-0002-6868-7465
FU project LPS-BIGGER: Linea de productos Software para BiG Data a partir
   de aplicaciones innovadores en entomos reales [UCTR150175]; Centro para
   el Desarrollo Tecnologico Industrial (CDTI); Fondo Europeo de Desarrollo
   Regional (FEDER); TEAM SPACE (Desarrollo y Automatizacion de la
   Plataforma Tecnologica de Gestion de Equipos Globales basada en Cloud
   Computing); company STEELMOOD - CDTI (Centro para el Desarrollo
   Tecnologico del Ministerio de Economia y Competitividad); GINSENG
   project (Ministerio de Economia y Competitividad and Fondo Europeo de
   Desarrollo Regional FEDER) [TIN2015-70259-C2-1-R]; GLOBALIA
   [PEII11-0291-5274]; G3Soft; Consejeria de Educacion y Ciencia, Junta de
   Comunidades de Castilla La Mancha; Fondo Europeo de Desarrollo Regional
   FEDER; GEODAS-BC project (Ministerio de Economia y Competitividad and
   Fondo Europeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01]
FX This work has been funded by the project LPS-BIGGER: Linea de productos
   Software para BiG Data a partir de aplicaciones innovadores en entomos
   reales (Ref.: UCTR150175), is framed under the Strategic Program CIEN,
   and itisco-funded by Centro para el Desarrollo Tecnologico Industrial
   (CDTI), and "Fondo Europeo de Desarrollo Regional (FEDER). Moreover,
   this work is also funded by the TEAM SPACE (Desarrollo y Automatizacion
   de la Plataforma Tecnologica de Gestion de Equipos Globales basada en
   Cloud Computing), company STEELMOOD, supported by CDTI (Centro para el
   Desarrollo Tecnologico del Ministerio de Economia y Competitividad and
   by the GINSENG project (Ministerio de Economia y Competitividad and
   Fondo Europeo de Desarrollo Regional FEDER, TIN2015-70259-C2-1-R). It is
   additionally supported by GLOBALIA (PEII11-0291-5274) and G3Soft,
   Consejeria de Educacion y Ciencia, Junta de Comunidades de Castilla La
   Mancha and Fondo Europeo de Desarrollo Regional FEDER. GEODAS-BC project
   (Ministerio de Economia y Competitividad and Fondo Europeo de Desarrollo
   Regional FEDER, TIN2012-37493-C03-01).
CR Al-Ani B., 2008, Proc. Int'l Workshop Cooperative and Human Aspects of Software Eng. (CHASE 08), P1, DOI DOI 10.1145/1370114.1370115
   Al-Ani B, 2009, IEEE SOFTWARE, V26, P35, DOI 10.1109/MS.2009.192
   [Anonymous], 1992, INT J INTERCULT REL, DOI DOI 10.1016/0147-1767(92)90033-Q
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Begel A, 2009, PROC INT CONF SOFTW, P263, DOI 10.1109/ICSE-COMPANION.2009.5070997
   Betz Stefanie, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P15, DOI 10.1109/RESER.2013.8
   Bird C., 2011, P ACM 2011 C COMP SU, P143, DOI DOI 10.1145/1958824.1958846
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Bolici F., 2009, Coordination without Discussion? Socio-Technical Congruence and Stigmergy in Free and Open Source Software Projects
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   CONWAY ME, 1968, DATAMATION, V14, P28
   Costa JAF, 2010, P 2009 MIND CONT DIV, P1
   de Souza CRB, 2007, LECT NOTES COMPUT SC, V4716, P182
   de Souza CRB, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P147
   Ehrlich K., 2008, P INT C SOFTW ENG LE
   Fonseca SB, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/ICGSE.2006.261241
   Georgas JC, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P61
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kwan I., 2009, P WORKSH SOCIOTECHNI
   Kwan I., 2011, Proc. 4th Int'l Workshop Social Software Engineering (SSE 11), P23
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Li J, 2012, PROCEEDINGS OF 2012 INTERNATIONAL SYMPOSIUM - WOMEN'S HUMAN RESOURCES DEVELOPMENT & MANAGEMENT, FEMALE SURVIVAL & DEVELOPMENT, P160, DOI 10.1109/ICSSP.2012.6225961
   MacKellar BK, 2013, CONF SOFTW ENG EDUC, P279, DOI 10.1109/CSEET.2013.6595261
   Marczak S., 2009, Proceedings of the Collaboration and Intercultural Issues on Requirements: Communication, Understanding and Softskills, P15
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Portillo-Rodriguez J., 2013, AGENT ARCHITECTURE W
   Portillo-Rodríguez J, 2014, INFORM SCIENCES, V264, P230, DOI 10.1016/j.ins.2014.01.009
   Sarma A., 2008, TECHNICAL REPORT
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Smite Darja, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P190, DOI 10.1007/978-3-642-31063-8_15
   Syeed M., 2014, J SOFTW, V9, P2014
   Syeed M., 2014, ACM INT S OP COLL, P1
   Syeed M., 2015, SOCIOTECHNICAL DEPEN
   Syeed M.M., 2013, P 9 INT C OP SOURC S, P109
   Trainer E., 2005, OOPSLA Workshop on Eclipse Technology Exchange, P26, DOI [10.1145/1117696.1117702, DOI 10.1145/1117696.1117702]
   Trainer E, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P78, DOI 10.1109/VLHCC.2008.4639062
   Valetto G., 2008, P INT C SOFTW ENG IC
   Valetto G., 2007, P IEEE 4 INT WORKSH, P25
   Wagstrom P., 2010, Academy of Management Annual Meeting Proceedings, P1, DOI [DOI 10.5465/AMBPP.2010.54500789, 10.5465/AMBPP.2010.54500789]
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xiang P.F., 2008, P 2008 INT WORKSH RE, P1
NR 45
TC 11
Z9 11
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 111
EP 129
DI 10.1016/j.infsof.2017.10.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000007
DA 2024-07-18
ER

PT J
AU Cao, BQ
   Liu, XQ
   Liu, JX
   Tang, MD
AF Cao, Buqing
   Liu, Xiaoqing (Frank)
   Liu, Jianxun
   Tang, Mingdong
TI Domain-aware Mashup service clustering based on LDA topic model from
   multiple data sources
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mashup service; LDA; Multiple data sources; Domain feature selection and
   reduction; Service clustering
ID WEB SERVICES; SELECTION
AB Context: Mashup is emerging as a promising software development method for allowing software developers to compose. existing Web APIs to create new or value-added composite Web services. However, the rapid growth in the number of available Mashup services makes it difficult for software developers to select a suitable Mashup service to satisfy their requirements. Even though clustering based Mashup discovery technique shows a promise of improving the quality of Mashup service discovery, Mashup service clustering with high accuracy and good efficiency is still a challenge problem.
   Objective: This paper proposes a novel domain-aware Mashup service clustering method with high accuracy and good efficiency by exploiting LDA topic model built from multiple data sources, to improve the quality of Mashup service discovery.
   Method: The proposed method firstly designs a domain-aware Mashup service feature selection and reduction process by refining characterization of their domains to consolidate domain relevance. Then, it presents an extended LDA topic model built from multiple data sources (include Mashup description text, Web APIs and tags) to infer topic probability distribution of Mashup services, which serves as a basis of Mashup service similarity computation. Finally, K-means and Agnes algorithm are used to perform Mashup service clustering in terms of their similarities.
   Results: Compared with other existing Mashup service clustering methods, experimental results show that the proposed method achieves a significant improvement in terms of precision, recall, F-measure, purity and entropy.
   Conclusion: The results of the proposed method help software developers to improve the quality of Mashup service discovery and Mashup-based software development. In the future, there will be a need to extend the method by considering heterogeneous network information among Mashup, Web APIs, tags, users, and applying it to Mashup discovery for software developers. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Cao, Buqing; Liu, Jianxun] Hunan Univ Sci & Technol, Sch Comp Sci & Engn, Xiangtan, Peoples R China.
   [Cao, Buqing] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.
   [Cao, Buqing; Liu, Xiaoqing (Frank)] Univ Arkansas, Comp Sci & Comp Engn Dept, Fayetteville, AR 72701 USA.
   [Tang, Mingdong] Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou, Guangdong, Peoples R China.
C3 Hunan University of Science & Technology; Beijing University of Posts &
   Telecommunications; University of Arkansas System; University of
   Arkansas Fayetteville; Guangdong University of Foreign Studies
RP Cao, BQ (corresponding author), Hunan Univ Sci & Technol, Sch Comp Sci & Engn, Xiangtan, Peoples R China.; Cao, BQ (corresponding author), Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.; Cao, BQ (corresponding author), Univ Arkansas, Comp Sci & Comp Engn Dept, Fayetteville, AR 72701 USA.
EM buqingcao@gmail.com
FU National Natural Science Foundation of China [61402168, 61402167,
   61572186, 61572187]; Hunan Provincial Natural Science Foundation of
   China [2017JJ2098]; State Key Laboratory of Software Engineering (SKLSE)
   of China (Wuhan University) [SKLSE2014-10-10]; Open Foundation of State
   Key Laboratory of Networking and Switching Technology (Beijing
   University of Posts and Telecommunications) [SKLNST-2016-2-26]
FX The work was supported by the National Natural Science Foundation of
   China under grant No. 61402168, 61402167, 61572186, 61572187, Hunan
   Provincial Natural Science Foundation of China under grant No.
   2017JJ2098, State Key Laboratory of Software Engineering (SKLSE) of
   China (Wuhan University) under grant No. SKLSE2014-10-10. Open
   Foundation of State Key Laboratory of Networking and Switching
   Technology (Beijing University of Posts and Telecommunications) under
   grant No. SKLNST-2016-2-26. We also express our thanks to MD Mahfuzer
   Rahman at the University of Arkansas for his work which partly improves
   the representation of this paper.
CR Aznag M, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P153, DOI 10.1109/ICWS.2014.33
   Bianchini D, 2006, INFORM SYST, V31, P361, DOI 10.1016/j.is.2005.02.010
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Buqing Cao, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P99, DOI 10.1109/ICWS.2013.23
   Cao BQ, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P212, DOI 10.1109/ICWS.2016.35
   Cao BQ, 2015, LECT NOTES COMPUT SC, V9464, P165, DOI 10.1007/978-3-319-26979-5_12
   Cao BQ, 2013, INT J WEB SERV RES, V10, P82, DOI 10.4018/ijwsr.2013100104
   Cassar G., 2010, P SMRR, P4
   Cassar G, 2014, IEEE T SERV COMPUT, V7, P654, DOI 10.1109/TSC.2013.28
   Chen FX, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P583, DOI 10.1109/ICWS.2015.83
   Chen L, 2013, LECT NOTES COMPUT SC, V8274, P162, DOI 10.1007/978-3-642-45005-1_12
   Chune Li, 2013, 2013 IEEE International Conference on Services Computing (SCC), P49, DOI 10.1109/SCC.2013.107
   Dasgupta Sourish, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P363, DOI 10.1109/ICWS.2011.112
   Dhillon I. S., 2003, Journal of Machine Learning Research, V3, P1265, DOI 10.1162/153244303322753661
   Dou WC, 2015, IEEE T PARALL DISTR, V26, P455, DOI 10.1109/TPDS.2013.246
   Elgazzar Khalid, 2010, 2010 IEEE International Conference on Web Services (ICWS), P147, DOI 10.1109/ICWS.2010.31
   Fletcher KK, 2015, ACM T WEB, V9, DOI 10.1145/2697389
   Gao W, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P260, DOI 10.1109/ICWS.2016.41
   Gao W, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P432, DOI 10.1109/ICWS.2015.64
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Kang G., 2015, IEEE T SERV COMPUT
   Kumara BTGS, 2016, P IEEE I C SERV COMP, P348, DOI 10.1109/SCC.2016.52
   Liang TT, 2014, IEEE INT CONF SERV, P215, DOI 10.1109/SOCA.2014.27
   Liu JX, 2015, INT J SOFTW ENG KNOW, V25, P1365, DOI 10.1142/S021819401550028X
   Liu W, 2008, LECT NOTES COMPUT SC, V5006, P69, DOI 10.1007/978-3-540-79968-9_6
   Liu XZ, 2014, SCI CHINA INFORM SCI, V57, DOI 10.1007/s11432-013-4782-0
   Liu XM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P185, DOI 10.1109/ICWS.2015.34
   Magnini B., 2002, Natural Language Engineering, V8, P359, DOI 10.1017/S1351324902003029
   Nayak R, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P555, DOI 10.1109/WI.2007.82
   Pan S. J., 2010, Cross-domain sentiment classi fication via spectral feature alignment, P751, DOI DOI 10.1145/1772690.1772767
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Platzer C, 2009, ACM T INTERNET TECHN, V9, DOI 10.1145/1552291.1552294
   Pop CB, 2010, STUD COMP INTELL, V315, P23
   Qi Yu, 2010, 2010 IEEE International Conference on Web Services (ICWS), P283, DOI 10.1109/ICWS.2010.47
   Skoutas D, 2010, IEEE T SERV COMPUT, V3, P163, DOI 10.1109/TSC.2010.14
   [田刚 Tian Gang], 2015, [电子学报, Acta Electronica Sinica], V43, P1266
   Wei Liu, 2009, International Journal of Agent-Oriented Software Engineering, V3, P6, DOI 10.1504/IJAOSE.2009.022944
   Wu J., 2012, P 21 INT C COMPANION, P441
   Wu J, 2014, KNOWL INF SYST, V38, P207, DOI 10.1007/s10115-013-0623-0
   Xia BF, 2015, IEEE T SERV COMPUT, V8, P674, DOI 10.1109/TSC.2014.2379251
   Xu Y., INT J WEB GRID SERV, V12
   Xumin Liu, 2016, 2016 IEEE International Conference on Web Services (ICWS), P49, DOI 10.1109/ICWS.2016.16
   Yao L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P217, DOI 10.1109/ICWS.2015.38
   Yu Q, 2014, WORLD WIDE WEB, V17, P33, DOI 10.1007/s11280-012-0186-0
   Zhang J, 2012, INT J WEB SERV RES, V9, P43, DOI 10.4018/jwsr.2012070103
   Zhang L, 2012, SERVICES COMPUTING
   Zhang LJ, 2012, IEEE T SYST MAN CY A, V42, P102, DOI 10.1109/TSMCA.2011.2157127
   Zhou Y, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P257, DOI 10.1109/ICWS.2015.43
   Zhou ZB, 2013, IEEE T AUTOM SCI ENG, V10, P1131, DOI 10.1109/TASE.2012.2237551
   [No title captured]
NR 50
TC 49
Z9 57
U1 0
U2 51
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 40
EP 54
DI 10.1016/j.infsof.2017.05.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400003
DA 2024-07-18
ER

PT J
AU Finkelstein, A
   Harman, M
   Jia, Y
   Martin, W
   Sarro, F
   Zhang, YY
AF Finkelstein, Anthony
   Harman, Mark
   Jia, Yue
   Martin, William
   Sarro, Federica
   Zhang, Yuanyuan
TI Investigating the relationship between price, rating, and popularity in
   the Blackberry World App Store
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE App store analysis; App features; Mobile apps; Data mining; Natural
   language processing
AB Context: App stores provide a software development space and a market place that are both different from those to which we have become accustomed for traditional software development: The granularity is finer and there is a far greater source of information available for research and analysis. Information is available on price, customer rating and, through the data mining approach presented in this paper, the features claimed by app developers. These attributes make app stores ideal for empirical software engineering analysis.
   Objective: This paper(1) exploits App Store Analysis to understand the rich interplay between app customers and their developers.
   Method: We use data mining to extract app descriptions, price, rating, and popularity information from the Blackberry World App Store, and natural language processing to elicit each apps' claimed features from its description.
   Results: The findings reveal that there are strong correlations between customer rating and popularity (rank of app downloads). We found evidence for a mild correlation between app price and the number of features claimed for the app and also found that higher priced features tended to be lower rated by their users. We also found that free apps have significantly (p-value < 0.001) higher ratings than non free apps, with a moderately high effect size (<(A)over cap>(12) = 0.68). All data from our experiments and analysis are made available on-line to support further investigations. (C) 2017 The Authors. Published by Elsevier B.V.
C1 [Finkelstein, Anthony; Harman, Mark; Jia, Yue; Martin, William; Sarro, Federica; Zhang, Yuanyuan] UCL, Dept Comp Sci, London, England.
C3 University of London; University College London
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London, England.
EM a.finkelstein@ucl.ac.uk; mark.harman@ucl.ac.uk; yue.jia@ucl.ac.uk;
   w.martin@ucl.ac.uk; f.sarro@ucl.ac.uk; yuanyuan.zhang@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X
FU EPSRC CREST platform grant [EP/G060525]; DAASE programme grant
   [EP/J017515]; EPSRC [EP/J017515/1] Funding Source: UKRI
FX The research is funded by the EPSRC CREST platform grant (EP/G060525)
   and DAASE programme grant (EP/J017515).
CR Al-Subaihin A., 2015, P 3 INT WORKSH SOFTW, P1, DOI DOI 10.1145/2804345.2804346
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   [Anonymous], 6 INT C PRED MOD SOF
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], 1995, FDN SOFTWARE MEASURE
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Dienst S., 2012, TECHNICAL REPORT
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Finkelstein A., 2014, TECHNICAL REPORT
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Harman M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P243, DOI 10.1109/MobileSoft.2016.051
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kim J, 2014, SERV BUS, V8, P1, DOI 10.1007/s11628-013-0184-z
   Klein E., 2009, NATURAL LANGUAGE PRO
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Loper Edward, 2002, COLING ACL INT PRES, P69
   Lulu David., 2013, International Conference on Intelligent User Interfaces, P297
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S., 2015, EMPIR SOFTW ENG, P1
   Menzies T., 2013, P 2 INT NSF SPONS WO
   Minelli R., 2013, P 17 EUR C SOFTW MAI
   Nagappan M., 2013, C CTR ADV STUD COLL, P378
   Nayebi M., 2015, PEERJ PREPRINTS
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   Preuss T., 2012, IFPUG GUIDE IT SOFTW, P408
   Preuss T., 2013, INT COST ESTIMATION
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Ruiz I. J. M., 2014, RELATIONSHIP NUMBER
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Saborido R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P438, DOI 10.1109/SANER.2016.64
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Sethumadhavan G., 2011, 6 IFPUG INT SOFTW ME
   Shang WY, 2012, J SYST SOFTWARE, V85, P2195, DOI 10.1016/j.jss.2011.07.034
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Syer MD, 2015, SOFTWARE QUAL J, V23, P485, DOI 10.1007/s11219-014-9238-2
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Taba S.E.S., 2014, INT C WEB ENG ICWE 2
   van Angeren J, 2013, I C DIGIT ECOSYST TE, P37, DOI 10.1109/DEST.2013.6611326
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Yang Y., 2014, APPIC FINDING HIDDEN
NR 55
TC 33
Z9 39
U1 1
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 119
EP 139
DI 10.1016/j.infsof.2017.03.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300009
OA Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hall, JG
   Rapanotti, L
AF Hall, Jon G.
   Rapanotti, Lucia
TI A design theory for software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Design theory; General engineering; Problem
   orientation; Problem solving
ID ALLOCATION
AB Context: Software Engineering is a discipline that has been shaped by over 50 years of practice. Many have argued that its theoretical basis has been slow to develop and that, in fact, a substantial theory of Software Engineering is still lacking.
   Objective: We propose a design theory for Software Engineering as a contribution to the debate. Having done this, we extend it to a design theory for socio-technical systems.
   Method: We elaborate our theory based on Gregor's influential 'meta-theoretical' exploration of the structural nature of a theory in the discipline of Information Systems, with particular attention to ontological and epistemological arguments.
   Results: We argue how, from an ontological perspective, our theory embodies a view of Software Engineering as the practice of framing, representing and transforming Software Engineering problems. As such, theory statements concern the characterisation of individual problems and how problems relate and transform to other problems as part of an iterative, potentially backtracking, problem solving process, accounting for the way Software Engineering transforms the physical world to meet a recognised need. From an epistemological perspective, we argue how the theory has developed through research cycles including both theory-then-(empirical-)research and (empirical-)research-then-theory strategies spanning over a decade; both theoretical statements and related empirical evidence are included.
   Conclusion: The resulting theory provides descriptions and explanations for many phenomena observed in Software Engineering and in the combination of software with other technologies, and embodies analytic, explanatory and predictive properties. There are however acknowledged limitations and current research to overcome them is outlined. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hall, Jon G.; Rapanotti, Lucia] Open Univ, Sch Comp & Commun, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Hall, JG (corresponding author), Open Univ, Sch Comp & Commun, Milton Keynes MK7 6AA, Bucks, England.
EM jon.hall@open.ac.uk; lucia.rapanotti@open.ac.uk
CR Adolph S, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P47, DOI 10.1109/GTSE.2013.6613870
   [Anonymous], 200505 OP U DEP COMP
   [Anonymous], P BUSTECH 2015
   [Anonymous], 1998, From Brouwer to Hilbert. The Debate on the Foundations of Mathematics in the 1920s
   [Anonymous], P 3 SEMAT WORKSH GEN
   [Anonymous], 4 SEMAT WORKSH GEN T
   [Anonymous], THESIS
   [Anonymous], ELECT GLOBALIZED BUS
   [Anonymous], THESIS
   [Anonymous], P 4 INT C INT WEB AP
   [Anonymous], RATIONAL UNIFIED PRO
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], P 37 IEEE INT C SOFT
   [Anonymous], P 2 I ENG TECHN C SY
   [Anonymous], TR200807 OP U
   [Anonymous], REQ ENG 2000 P 4 INT
   [Anonymous], HUMAN COMPUTER INTER
   [Anonymous], P 4 SEMAT WORKSH GEN
   [Anonymous], 2003, DS 31
   [Anonymous], P 15 INT C KNOWL CUL
   [Anonymous], THESIS
   [Anonymous], P SAF CRIT SYST S 20
   [Anonymous], 1972, PLANNING CRISIS SYST
   [Anonymous], P DES RES SOC C 2008
   [Anonymous], 420102011 ISO IECIEE
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BEST E, 1992, LECT NOTES COMPUT SC, V609, P21
   Bloomfield R., 1998, Technical report
   Boehm BarryJo Ann Lane., 2014, INCREMENTAL COMMITME, V1rst
   Cass A. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P754, DOI 10.1109/ICSE.2000.870488
   CHAOCHEN Z, 1991, INFORM PROCESS LETT, V40, P269, DOI 10.1016/0020-0190(91)90122-X
   Dearden A, 2000, INT J HUM-COMPUT ST, V52, P289, DOI 10.1006/ijhc.1999.0290
   FITTS PM, 1962, AEROSPACE ENG, V21, P34
   Glennan S, 2002, PHILOS SCI, V69, pS342, DOI 10.1086/341857
   Gregor S, 2006, MIS QUART, V30, P611
   Hall J.G., 2005, SOFTW SYST MODEL, V4, P189
   Hall J.G., 2009, INT J ADV SYSTEMS ME, V2, P119
   Hall JG, 2008, IEEE T SOFTWARE ENG, V34, P226, DOI 10.1109/TSE.2007.70769
   Hall JG, 2012, INNOV SYST SOFTW ENG, V8, P175, DOI 10.1007/s11334-011-0171-2
   Hall Jon G., 2007, 10 IEEE INT S HIGH A
   Hatchuel A, 2009, RES ENG DES, V19, P181, DOI 10.1007/s00163-008-0043-4
   Hintikka J, 1997, SYNTH LIBR, V258, P67
   Hoare CAR., 1985, Communicating Sequential Processes
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JOHNSON BW, 1984, IEEE MICRO, V4, P6, DOI 10.1109/MM.1984.291277
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Johnson P, 2015, 2015 IEEE/ACM 4TH SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P15, DOI 10.1109/GTSE.2015.9
   Kauffman S., 1976, TOPICS PHILOS BIOL, P245
   Kleene S.C., 1964, INTRO METAMATHEMATIC
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   Krutetskii V.A., 1976, The psychology of mathematical abilities in schoolchildren
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   Li Z, 2007, THESIS
   Mannering D, 2007, LECT NOTES COMPUT SC, V4680, P252
   Mannering D, 2007, LECT NOTES COMPUT SC, V4422, P398
   Markov Georgi., 2016, POE: Towards an engineering framework for solving change problems
   Martin A. P., 1996, Formal Aspects of Computing, V8, P479, DOI 10.1007/BF01213535
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   McDowell R, 2000, THEOR COMPUT SCI, V232, P91, DOI 10.1016/S0304-3975(99)00171-1
   Milner R., 1989, Communication and concurrency
   Nkwocha A, 2013, SOFTW SYST MODEL, V12, P825, DOI 10.1007/s10270-011-0223-y
   Normand E, 1996, IEEE T NUCL SCI, V43, P2742, DOI 10.1109/23.556861
   Overton J, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P208, DOI 10.1109/ComputationWorld.2009.57
   Polya G., 1957, How to Solve It. A New Aspect of Mathematical Method, V2, DOI DOI 10.1515/9781400828678
   PRICE HE, 1985, HUM FACTORS, V27, P33, DOI 10.1177/001872088502700104
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Ralph P, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P35, DOI 10.1109/GTSE.2013.6613868
   Rapanotti L, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P80
   Rogers GFC., 1983, The nature of engineering: a philosophy of technology
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Smolander K, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P27, DOI 10.1109/GTSE.2013.6613867
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Stol KJ, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P5, DOI 10.1109/GTSE.2013.6613863
   Suh NP, 1998, RES ENG DES, V10, P189, DOI 10.1007/s001639870001
   SUTTON RI, 1995, ADMIN SCI QUART, V40, P371, DOI 10.2307/2393788
   Szabo M. E., 1969, The collected papers of Gerhard Gentzen
   TAKEDA H, 1990, AI MAG, V11, P37
   Tijms H. C., 2003, 1 COURSE STOCHASTIC
   Turner M, 2003, COMPUTER, V36, P38, DOI 10.1109/MC.2003.1236470
   Turski W.M., 1986, INFORM PROCESSING, V86, P1077
   Ur B., 2014, CHI, DOI 10.1145/2556288.2557420
   Weick K., 1995, SENSEMAKING ORG
   Wieringa R., 2009, P 4 INT C DES SCI RE, P8
   Wieringa R, 2011, INT SYMP EMP SOFTWAR, P295, DOI 10.1109/ESEM.2011.38
   Yoshikawa H., 1981, General Design Theory and a CAD System, in Man Machine Communication in CAD/CAM
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 90
TC 5
Z9 8
U1 2
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 46
EP 61
DI 10.1016/j.infsof.2017.01.010
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zou, J
   Xu, L
   Yang, MN
   Zhang, XH
   Yang, D
AF Zou, Jie
   Xu, Ling
   Yang, Mengning
   Zhang, Xiaohong
   Yang, Dan
TI Towards comprehending the non-functional requirements through
   Developers' eyes: An exploration of Stack Overflow using topic analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional requirements (NFRs); Topic model; Latent Dirichlet
   allocation (LDA); Stack Overflow
ID LATENT; CLASSIFICATION; DISTRIBUTIONS
AB Context: As a vital role for the quality of software, non-functional requirements (NFRs) are attracting greater attention from developers. The programming question and answer (Q&A) websites like Stack Overflow gathered the knowledge and expertise of developers worldwide which reflects some insight into the development activities (e.g., NFRs), but the NFR5 in the Q&A site are rarely investigated.
   Objective: Our research aims to aid comprehension on the actual thoughts and needs of the developers by analyzing the NFRs on Stack Overflow.
   Method: We extracted the textual content of Stack Overflow discussions, and then we applied the topic modeling technique called latent Dirichlet allocation (LDA) helping us to discover the main topics of the corpus. Next, we labelled the topics with NFR5 by the wordlists to analyze the hot, unresolved, difficult NFRs, and the evolutionary trends which involves the trends of the NFR5 focus and NFRs difficulty.
   Results: Our findings show that (1) The developers mostly discuss usability and reliability while discussing less on maintainability and efficiency. (2) The most unresolved problems also occurred in usability and reliability. (3) The visualization of the NFR evolutions over time shows the functionality and reliability attract more and more attention from developers and usability remains hot. (4) The NFRs investigation in specific technologies indicates the quality is a similar concern among different technologies and some NFRs are of more interest as time progresses. (5) The research on NFRs difficulty in specific technologies shows the maintainability is the most difficult NFR In addition, the trends of the NFRs difficulty over time in the seven categories signal that we should focus more on usability to address them.
   Conclusion: We present an empirical study on 21.7 million posts and 32.5 million comments of Stack Overflow, and our research provides some guide to understand the NFR5 through developers' eyes. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Xu, Ling] Chongqing Univ, Minist Educ, Key Lab Dependable Serv Comp Cyber Phys Soc, Chongqing 400044, Peoples R China.
   [Zou, Jie; Xu, Ling; Yang, Mengning; Zhang, Xiaohong; Yang, Dan] Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
C3 Chongqing University; Chongqing University
RP Xu, L (corresponding author), Chongqing Univ, Minist Educ, Key Lab Dependable Serv Comp Cyber Phys Soc, Chongqing 400044, Peoples R China.; Xu, L (corresponding author), Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
EM xuling@cqu.edu.cn
RI YANG, Dan/HHD-2733-2022; Zhang, Xiaohong/A-3060-2015
FU Chongqing University Postgraduates' Innovation Project [CYS15022];
   National Natural Science Foundation of China [91118005, 61173131];
   Changjiang Scholars and Innovative Research Team in University [IRT1196]
FX The work described in this paper was partially supported by Chongqing
   University Postgraduates' Innovation Project (Grant No. CYS15022), the
   National Natural Science Foundation of China (Grant Nos. 91118005,
   61173131), and Changjiang Scholars and Innovative Research Team in
   University (Grant No. IRT1196).
CR Ahmad M, 2015, J SYST SOFTWARE, V107, P50, DOI 10.1016/j.jss.2015.05.028
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2015, EMPIR SOFTW ENG
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Baegh J, 2008, IEEE SOFTWARE, V25, P57, DOI 10.1109/MS.2008.30
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Borg A., 2003, The bad conscience of requirements engineering: an investigation in real-world treatment of nonfunctional requirements
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   Chung L., 2012, SPRINGER SCI BUS MED, V5
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Damm Werner., 2005, P FDN INTERFACE TECH
   Doerr J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/RE.2005.47
   Eckhardt J., 2015, 2015 ACM IEEE INT S, P1
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Galster M, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P345, DOI 10.1109/SERVICES-1.2008.51
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Goderie J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P414, DOI 10.1109/MSR.2015.52
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hindle A., 2010, WHATS NAME AUTOMATED
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P243, DOI 10.1109/ICSM.2012.6405278
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Honsel V, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P438, DOI 10.1109/MSR.2015.58
   I. Iso, 2001, 9126 I ISOIEC
   Jin Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P434, DOI 10.1109/MSR.2015.57
   Kugele S, 2008, COMM COM INF SC, V17, P400
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Marder A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P450, DOI 10.1109/MSR.2015.61
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   McCallum A.K., 2002, MALLET MACHINE LEARN
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Olds EG, 1938, ANN MATH STAT, V9, P133, DOI 10.1214/aoms/1177732332
   Parnin C, 2012, 11 GEORG I TECHN
   Schwab F, 2012, SPINE, V37, P1077, DOI 10.1097/BRS.0b013e31823e15e2
   Slag R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P458, DOI 10.1109/MSR.2015.63
   Thomas S.W., 2012, MINING UNSTRUCTURED
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Umar M., 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P675, DOI 10.1109/ICSESS.2011.5982328
   Vassileva J, 2008, IEEE T LEARN TECHNOL, V1, P199, DOI 10.1109/TLT.2009.4
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Ying AnnieT. T., 2015, The 12th Working Conference on Mining Software Repositories
   Zou J., AUTOMATED DUPLICATE
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 65
TC 28
Z9 31
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2017
VL 84
BP 19
EP 32
DI 10.1016/j.infsof.2016.12.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ5IV
UT WOS:000393252400002
DA 2024-07-18
ER

PT J
AU Gassen, JB
   Mendling, J
   Bouzeghoub, A
   Thom, LH
   de Oliveira, JPM
AF Gassen, Jonas Bulegon
   Mendling, Jan
   Bouzeghoub, Amel
   Thom, Lucineia Heloisa
   de Oliveira, Jose Palazzo M.
TI An experiment on an ontology-based support approach for process modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modeling; Process of process modeling; Ontologies;
   Activity labels; Cognitive load
ID WORKING-MEMORY; USER RESISTANCE; BUSINESS; FRAMEWORK; KNOWLEDGE; STYLES;
   DRIVEN
AB Objective: In this paper, we investigate to which degree ontology-based support potentially increases the effort of modeling. We develop a theoretical perspective grounded in cognitive psychology, which leads us to the definition of three design principles for appropriate ontology-based support. The objective is to evaluate the design principles through empirical experimentation.
   Method: We tested the effect of presenting relevant content from the ontology to the modeler by means of a quantitative analysis. We performed controlled experiments using a prototype, which generates a simplified and context-aware visual representation of the ontology. It logs every action of the process modeler for analysis. The experiment refers to novice modelers and was performed as between-subject design with vs. without ontology-based support. It was carried out with two different samples.
   Results: Part of the effort-related variables we measured showed significant statistical difference between the group with and without ontology-based support. Overall, for the collected data, the ontology support achieved good results.
   Conclusion: We conclude that it is feasible to provide ontology-based support to the modeler in order to improve process modeling without strongly compromising time consumption and cognitive effort. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gassen, Jonas Bulegon; Thom, Lucineia Heloisa; de Oliveira, Jose Palazzo M.] Univ Fed Rio Grande do Sul, PPGC, Porto Alegre, RS, Brazil.
   [Gassen, Jonas Bulegon; Mendling, Jan] Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
   [Bouzeghoub, Amel] Telecom SudParis, Evry, France.
C3 Universidade Federal do Rio Grande do Sul; Vienna University of
   Economics & Business; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom SudParis
RP Gassen, JB (corresponding author), Univ Fed Rio Grande do Sul, PPGC, Porto Alegre, RS, Brazil.; Gassen, JB (corresponding author), Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
EM jbgassen@gmail.com
RI de Oliveira, José Palazzo Moreira/K-3957-2012; Thom, Lucineia
   Heloisa/I-7561-2017
OI de Oliveira, José Palazzo Moreira/0000-0002-9166-8801; Thom, Lucineia
   Heloisa/0000-0002-0620-9302
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq);
   Coordenacao de Aperfeicoamento de Pessoal (CAPES), Brazil
FX This work has been partially supported by Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq) and Coordenacao de
   Aperfeicoamento de Pessoal (CAPES), Brazil.
CR Allen G, 2010, INFORM SYST RES, V21, P56, DOI 10.1287/isre.1080.0189
   [Anonymous], SAC 14
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], LNCS SUBLIBRARY INFO
   [Anonymous], P 25 INT C WORLD WID
   [Anonymous], I SEMANTICS 10
   [Anonymous], CONC ENT ICE 2011 17
   [Anonymous], 2008, P KONVENS 2008
   [Anonymous], J AIS
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], EMISA FORUM
   [Anonymous], HUM FACT ERG SOC ANN
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], CAISE WORKSH
   [Anonymous], SIGDOC 2014
   [Anonymous], 2005, P 10 INT WORKSH EMMS
   [Anonymous], 2012, INT J ADV LIFE SCI
   [Anonymous], SYNTHESIS LECT HUMAN
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2002, BOUNDED RATIONALITY
   Aranda J, 2005, ACM SIGSOFT SOFTWARE, P346, DOI [DOI 10.1145/1095430.1081761, 10.1145/1081706.1081761]
   Cherfi SSS, 2013, J DATA SEMANT, V2, P75, DOI 10.1007/s13740-013-0022-4
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   Cowan N., 2005, WORKING MEMORY CAPAC, DOI [10.4324/9780203342398, DOI 10.4324/9780203342398]
   Cowan N, 2014, EDUC PSYCHOL REV, V26, P197, DOI 10.1007/s10648-013-9246-y
   Daneman M, 1996, PSYCHON B REV, V3, P422, DOI 10.3758/BF03214546
   Davenport T.H., 2002, ATTENTION EC UNDERST
   Del Corro Luciano, 2013, P 22 INT C WORLD WID, P355, DOI DOI 10.1145/2488388.2488420
   Dewar MT, 2007, CORTEX, V43, P616, DOI 10.1016/S0010-9452(08)70492-1
   Di Francescomarino C, 2014, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2014.33
   Fellmann M, 2011, LECT NOTES BUS INF P, V87, P62
   Fettke P., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P197, DOI 10.1109/HICSS.2012.290
   Fillies C, 2003, COMPUT NETW, V42, P599, DOI 10.1016/S1389-1286(03)00223-8
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gailly F, 2013, LECT NOTES COMPUT SC, V8217, P487, DOI 10.1007/978-3-642-41924-9_42
   Ghidini C, 2012, IEEE T SYST MAN CY C, V42, P25, DOI 10.1109/TSMCC.2011.2138133
   Golestani N, 2006, NEUROPSYCHOLOGIA, V44, P1029, DOI 10.1016/j.neuropsychologia.2005.11.009
   Jacko JA, 1996, PERCEPT MOTOR SKILL, V82, P1187, DOI 10.2466/pms.1996.82.3c.1187
   Jiang JJ, 2000, INFORM MANAGE, V37, P25, DOI 10.1016/S0378-7206(99)00032-4
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Kim HW, 2009, MIS QUART, V33, P567
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Larson K., 1998, CHI 98. Human Factors in Computing Systems. CHI 98 Conference Proceedings, P25, DOI 10.1145/274644.274649
   Leopold H, 2014, INFORM SYST, V39, P134, DOI 10.1016/j.is.2013.06.007
   Leopold H, 2013, DECIS SUPPORT SYST, V56, P310, DOI 10.1016/j.dss.2013.06.014
   Leopold H, 2012, LECT NOTES COMPUT SC, V7481, P319, DOI 10.1007/978-3-642-32885-5_25
   Leopold H, 2011, ENTERP MODELLING INF, V6, P16
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Lin Y, 2007, LECT NOTES COMPUT SC, V4495, P355
   Lin Y, 2006, LECT NOTES COMPUT SC, V4001, P433, DOI 10.1007/11767138_29
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J., 2015, Int J Inf Syst Softw Eng Big Companies, V1, P78
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Miller D. P., 1981, Proceedings of the Human Factors Society 25th Annual Meeting, P296
   Miller George., 1956, The magical number seven plus or minus two: Some limits on our capacity for processing information
   Miron-Shatz T, 2009, EMOTION, V9, P885, DOI 10.1037/a0017823
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moser-Mercer B., 2010, Translation and Cognition, P263, DOI [10.1075/ata.xv.15mos, DOI 10.1075/ATA.XV.15MOS]
   Mylopoulos J., Conceptual Modelling and Telos, DOI 10.1.1.83.3647
   Nigmatullina Y, 2015, CEREB CORTEX, V25, P554, DOI 10.1093/cercor/bht266
   Norman Don, 2013, The design of everyday things
   Norton B, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P481, DOI 10.1109/ICIW.2009.77
   Peters N, 2011, ENTERP MODELLING INF, V6, P30
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Pinggera J, 2010, LECT NOTES COMPUT SC, V6412, P445, DOI 10.1007/978-3-642-16373-9_33
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Recker J., 2012, Scientific research in information systems: a beginner's guide
   Recker J, 2011, COMMUN ASSOC INF SYS, V28, P65
   Ricker TJ, 2014, J EXP PSYCHOL LEARN, V40, P417, DOI 10.1037/a0034301
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Silega N, 2014, IEEE LAT AM T, V12, P292, DOI 10.1109/TLA.2014.6749551
   Simon A.H., 1971, COMPUTERS COMMUNICAT, P37
   Simon H.A., 1957, MODELS MAN SOCIAL RA
   SNOWBERRY K, 1983, ERGONOMICS, V26, P699, DOI 10.1080/00140138308963390
   Sweller J., 1994, Learning and instruction, P295, DOI DOI 10.1016/0959-4752(94)90003-5
   Sweller J, 2011, EXPLOR LEARN SCI, P3, DOI 10.1007/978-1-4419-8126-4
   Thomas O, 2009, BUS INFORM SYST ENG+, V1, P438, DOI 10.1007/s12599-009-0078-8
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   WIEGMANN DA, 1992, CONTEMP EDUC PSYCHOL, V17, P136, DOI 10.1016/0361-476X(92)90055-4
   Ying Huang, 2013, 2013 IEEE International Conference on Services Computing (SCC), P296, DOI 10.1109/SCC.2013.59
   Zhao Le, 2010, P 19 ACM C INF KNOWL, P259, DOI DOI 10.1145/1871437.1871474
NR 87
TC 4
Z9 5
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 94
EP 115
DI 10.1016/j.infsof.2016.11.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EJ1YO
UT WOS:000393006700006
DA 2024-07-18
ER

PT J
AU Zafeiris, VE
   Poulias, SH
   Diamantidis, NA
   Giakoumakis, EA
AF Zafeiris, Vassilis E.
   Poulias, Sotiris H.
   Diamantidis, N. A.
   Giakoumakis, E. A.
TI Automated refactoring of super-class method invocations to the Template
   Method design pattern
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Call Super; Implementation inheritance; Interface inheritance;
   Refactoring; Template Method design pattern
AB Context: Implementation inheritance, i.e., overriding of concrete method implementations through subtyping, is prone to potential class contract violations. Call Super is a code pattern that employs implementation inheritance for extending a method's behaviour. In Call Super the overriding method includes in its body an invocation to the overridden method. TEMPLATE METHOD is a design pattern that enables extensions to a multi-step procedure without overriding its concrete implementation. Instead, subclasses provide different variants of the template method's behaviour through implementation of abstract method definitions (interface inheritance).
   Objective: This work studies the automated refactoring of Call Super to TEMPLATE METHOD, contributing, thus, to replacement of implementation inheritance with interface inheritance.
   Method: We introduce an algorithm for the discovery of refactoring candidates that is based on an extensive set of refactoring preconditions. Moreover, we specify the source code transformation for refactoring a Call Super instance to TEMPLATE METHOD. An implementation of the proposed approach is evaluated on a set of open source Java projects.
   Results: The evaluation results highlight (a) the frequent occurrence of the Call Super pattern among method overridings, (b) the potential provided by our method for discovery and elimination of several non-trivial Call Super instances and (c) the resulting code improvement, as reflected by the Specialization Index metric and the alignment of refactored code with the programmer's intent. The application of all refactorings identified on a set of benchmark projects and the successful execution of their test suites provide empirical evidence on the soundness of the refactoring procedure. Runtime performance results support the scalability of the proposed method.
   Conclusion: The proposed method automates the replacement of implementation inheritance with interface inheritance through refactoring Call Super instances to TEMPLATE METHOD. The empirical evaluation of the method supports its applicability, soundness and runtime efficiency. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Zafeiris, Vassilis E.; Poulias, Sotiris H.; Diamantidis, N. A.; Giakoumakis, E. A.] Athens Univ Econ & Business, Dept Informat, 76 Patission Str, Athens 10434, Greece.
C3 Athens University of Economics & Business
RP Giakoumakis, EA (corresponding author), Athens Univ Econ & Business, Dept Informat, 76 Patission Str, Athens 10434, Greece.
EM bzafiris@aueb.gr; str.poulias@gmail.com; nad@aueb.gr; mgia@aueb.gr
RI Zafeiris, Vassilis/JFS-1742-2023; Giakoumakis, Emmanouil/AAJ-2690-2021
OI Zafeiris, Vassilis/0000-0003-0751-4509; Giakoumakis,
   Emmanouil/0000-0002-0586-8592
CR [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Object-oriented software construction
   Bloch J., 2008, THE JAVA SERIES, V2
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Chatzigeorgiou A., 2013, JDEODORANT ECLIPSE P
   Christopoulou A, 2012, INFORM SOFTWARE TECH, V54, P1202, DOI 10.1016/j.infsof.2012.05.004
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2005, CALL SUPER
   Gaitani MAG, 2015, INFORM SOFTWARE TECH, V59, P33, DOI 10.1016/j.infsof.2014.10.010
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hotta K., 2012, 16 EUR C SOTW MAINT
   Italia T., 2015, JADE JAVA AGENT DEV
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Jebelean C., 2010, P 2010 IEEE INT C AU, P1
   Jeon SU, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P337, DOI 10.1109/APSEC.2002.1183003
   Juillerat N, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P81, DOI 10.1109/SCAM.2007.11
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kerievsky J., 2004, REFACTORING PATTERNS
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Liskov B.H., 1999, CMUCS99156
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Parnin C, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P77
   Rajesh J., 2004, PPDP 04, P227
   ROOTS research group, 2011, JTRANSFORMER QUER TR
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tokuda L., 1995, INT S APPL CORP COMP
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tsantalis N., 2010, THESIS
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 47
TC 11
Z9 13
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 19
EP 35
DI 10.1016/j.infsof.2016.09.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000002
DA 2024-07-18
ER

PT J
AU Roa, J
   Chiotti, O
   Villarreal, P
AF Roa, J.
   Chiotti, O.
   Villarreal, P.
TI Specification of behavioral anti-patterns for the verification of
   block-structured Collaborative Business Processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Anti-patterns; Collaborative Business Processes; Verification; Formal
   methods; Control flow; Behavior; Cross-organizational collaborations
ID PROCESS MODELS; WORKFLOW NETS; SOUNDNESS; MANAGEMENT
AB Context: The verification of the control flow of a Collaborative Business Process (CBP) is important when developing cross-organizational systems, since the control flow defines the behavior of the cross organizational collaboration. Behavioral anti-patterns have been proposed to improve the performance of formal verification methods. However, a systematic approach for the discovery and specification of behavioral anti-patterns of CBPs has not been proposed so far.
   Objective: The aim of this work is an approach to systematically discover and specify the behavioral anti patterns of block-structured CBP models.
   Method: The approach proposes using the metamodel of a CBP language to discover all possible combinations of constructs leading to a problem in the behavior of block-structured CBPs. Each combination is called minimal CBP. The set of all minimal CBPs with behavioral problems defines the unsoundness profile of a CBP language, from which is possible specifying the behavioral anti-patterns of such language.
   Results: The approach for specification of behavioral anti-patterns was applied to the UP-ColBPIP language. Twelve behavioral anti-patterns were defined, including support to complex control flow such as advanced synchronization, cancellation and exception management, and multiple instances. Anti-patterns were evaluated on a repository of block-structured CBP models and compared with a formal verification method. Results show that the verification based on anti-patterns is as accurate as the formal method, but it clearly improves the performance of the latter.
   Conclusion: By using the proposed approach, it is possible to systematically specify behavioral anti patterns for block-structured CBP languages. During the discovery of anti-patterns different formalisms can be used. With this approach, the specification of anti-patterns provides the exact combination of elements that can cause a problem, making error correction and result interpretation easier. Although the proposed approach was defined for the context of CBPs, it could be applied to the context of intraorganizational processes. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Roa, J.; Villarreal, P.] UTN FRSF CONICET, Lavaisse 610, Santa Fe, Argentina.
   [Chiotti, O.] INGAR CONICET, Avellaneda 3657, Santa Fe, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Roa, J (corresponding author), UTN FRSF CONICET, Lavaisse 610, Santa Fe, Argentina.
EM jorgemarceloroa@gmail.com; chiotti@santafe-conicet.gov.ar;
   pvillarr@frsf.utn.edu.ar
OI Chiotti, Omar/0000-0003-2499-8998
FU Universidad Tecnologica Nacional (UTN); Consejo Nacional de
   Investigaciones Cientificas y Tecnicas (CONICET); Agencia Nacional de
   Promocion Cientifica y Tecnologica (ANPCyT)
FX The authors are grateful to "Universidad Tecnologica Nacional (UTN)",
   "Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)",
   and "Agencia Nacional de Promocion Cientifica y Tecnologica (ANPCyT)"
   for their financial support.
CR [Anonymous], 2007, Web Services Business Process Execution Language
   Awad A, 2008, LECT NOTES BUS INF P, V7, P239
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Camarinha-Matos LM, 2009, COMPUT IND ENG, V57, P46, DOI 10.1016/j.cie.2008.11.024
   Decker G., 2009, THESIS U POTSDAM
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Fahland D, 2009, LECT NOTES COMPUT SC, V5701, P278, DOI 10.1007/978-3-642-03848-8_19
   Gruhn V, 2009, LECT NOTES BUS INF P, V34, P28
   HAN ZG, 2013, P IEEE 37 ANN COMP S, P433, DOI DOI 10.1109/COMPSACW.2013.111
   Huemer C., 2008, P 10 INT C EL COMM I, P36
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Koehler J., 2007, TECHNICAL REPORT
   Kopp O, 2009, ENTERP MODELLING INF, V4, P3
   Kühne S, 2010, J SOFTW MAINT EVOL-R, V22, P547, DOI 10.1002/smr.517
   Laue R., 2010, ELECT COMMUN EASST, V25, P385
   Li Q, 2010, COMPUT IND, V61, P127, DOI 10.1016/j.compind.2009.10.009
   Liu CF, 2009, INFORM SYST FRONT, V11, P201, DOI 10.1007/s10796-008-9089-0
   Liu R, 2005, LECT NOTES COMPUT SC, V3649, P268, DOI 10.1007/11538394_18
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Norta A, 2010, INFORM SYST FRONT, V12, P457, DOI 10.1007/s10796-009-9164-1
   Onoda S., 1999, Proceedings of the 32nd Annual Hawaii International Conference on Systems Sciences. 1999. HICSS-32. Abstracts and CD-ROM of Full Papers, DOI 10.1109/HICSS.1999.772966
   Polyvyanyy A, 2011, ACTA INFORM, V48, P213, DOI 10.1007/s00236-011-0137-8
   Roa J, 2012, J UNIVERS COMPUT SCI, V18, P2383
   Roa J, 2012, LECT NOTES BUS INF P, V99, P293
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Stuit M, 2009, INT J COOP INF SYST, V18, P423, DOI 10.1142/S0218843009002063
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   van der Aalst W, 2000, INFORM MANAGE, V37, P67, DOI 10.1016/S0378-7206(99)00038-5
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van der Aalst W, 2012, LECT NOTES BUS INF P, V116, P39
   van der Aalst WMP, 2010, COMPUT J, V53, P90, DOI 10.1093/comjnl/bxn064
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van Dongen BF, 2006, IEEE INT ENTERP DIST, P116
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Villarreal P., 2007, ENTERPRISE MODELING, P13
   Villarreal P., 2006, MDA BASED DEV PROCES, VWP06, P17
   Villarreal PD, 2010, LECT NOTES BUS INF P, V43, P318
   Weidlich M., 2012, Appl. Theor. Petri Nets, P148
   WS-CDL, 2005, WS CDL WEB SERVICES
   Wynn MT, 2009, BUS PROCESS MANAG J, V15, P74, DOI 10.1108/14637150910931479
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 45
TC 7
Z9 7
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 148
EP 170
DI 10.1016/j.infsof.2016.01.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100011
DA 2024-07-18
ER

PT J
AU Yan, M
   Zhang, XH
   Yang, D
   Xu, L
   Kymer, JD
AF Yan, Meng
   Zhang, Xiaohong
   Yang, Dan
   Xu, Ling
   Kymer, Jeffrey D.
TI A component recommender for bug reports using Discriminative Probability
   Latent Semantic Analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug reports; Discriminative topic model; Component recommendation; Bug
   triage
AB Context: The component field in a bug report provides important location information required by developers during bug fixes. Research has shown that incorrect component assignment for a bug report often causes problems and delays in bug fixes. A topic model technique, Latent Dirichlet Allocation (LDA), has been developed to create a component recommender for bug reports.
   Objective: We seek to investigate a better way to use topic modeling in creating a component recommender.
   Method: This paper presents a component recommender by using the proposed Discriminative Probability Latent Semantic Analysis (DPLSA) model and Jensen-Shannon divergence (DPLSA-JS). The proposed DPLSA model provides a novel method to initialize the word distributions for different topics. It uses the past assigned bug reports from the same component in the model training step. This results in a correlation between the learned topics and the components.
   Results: We evaluate the proposed approach over five open source projects, Mylyn, Gcc, Platform, Bugzilla and Firefox. The results show that the proposed approach on average outperforms the LDA-KL method by 30.08%, 19.60% and 14.13% for recall @1, recall @3 and recall @5, outperforms the LDA-SVM method by 31.56%, 17.80% and 8.78% for recall @1, recall @3 and recall @5, respectively.
   Conclusion: Our method discovers that using comments in the DPLSA-JS recommender does not always make a contribution to the performance. The vocabulary size does matter in DPLSA-JS. Different projects need to adaptively set the vocabulary size according to an experimental method. In addition, the correspondence between the learned topics and components in DPLSA increases the discriminative power of the topics which is useful for the recommendation task. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Zhang, Xiaohong] State Key Lab Coal Mine Disaster Dynam & Control, Chongqing 400044, Peoples R China.
   [Yan, Meng; Zhang, Xiaohong; Yang, Dan; Xu, Ling; Kymer, Jeffrey D.] Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
   [Zhang, Xiaohong] Soc Minist Educ, Key Lab Dependable Serv Comp Cyber Phys, Chongqing 400044, Peoples R China.
C3 Chongqing University
RP Zhang, XH (corresponding author), Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
EM xhongz@cqu.edu.cn
RI Zhang, Xiaohong/A-3060-2015; YANG, Dan/HHD-2733-2022; Yan,
   Meng/AAH-6762-2019
OI Yan, Meng/0000-0002-9538-9121
FU National Natural Science Foundation of China [91118005, 61173131];
   Changjiang Scholars and Innovative Research Team in University
   [IRT1196]; Chongqing Graduate Student Research Innovation Project
   [CYS15022]; Fundamental Research Funds for the Central Universities
   [CDJZR12098801, CDJZR11095501]
FX The work described in this paper was partially supported by the National
   Natural Science Foundation of China (Grant nos. 91118005, 61173131),
   Changjiang Scholars and Innovative Research Team in University (Grant
   no. IRT1196), Chongqing Graduate Student Research Innovation Project
   (Grant no. CYS15022), and the Fundamental Research Funds for the Central
   Universities (Grant nos. CDJZR12098801 and CDJZR11095501).
CR Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   [Anonymous], 2013, 2013 11 INT C ICT KN
   [Anonymous], 2007, Applied nonparametric statistical methods
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2007, ASSISTING BUG REPORT
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bhattacharya P., 2010, Software Main- tenance (ICSM), 2010 IEEE International Conference on, P1
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bortis G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P342, DOI 10.1109/ICSE.2013.6606580
   Chawla I, 2013, INT CONF CONTEMP, P375, DOI 10.1109/IC3.2013.6612223
   Cohen J., 1988, STAT POWER ANAL BEHA
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Cubranie D., 2004, P 16 INT C SOFTW ENG
   de Souza CRB, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P294, DOI 10.1109/ISESE.2003.1237990
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Dit B., 2008, P 1 STSM 08 CIT
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Hiew Lyndon, 2006, Assisted detection of duplicate bug reports
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Li Y., 2014, ELECT THESES DISSERT
   Liguo Chen, 2011, Journal of Software, V6, P421, DOI 10.4304/jsw.6.3.421-427
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Lu Y, 2011, INFORM RETRIEVAL, V14, P178, DOI 10.1007/s10791-010-9141-9
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Majtey AP, 2005, PHYS REV A, V72, DOI 10.1103/PhysRevA.72.052310
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   McAuliffe J. D., 2008, ADV NEURAL INFORM PR, P121, DOI DOI 10.1109/MWSCAS.2011.6026348
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pfleeger S., 1995, ACM SIGSOFT, V20, P14
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sureka A, 2012, LECT NOTES COMPUT SC, V7304, P288, DOI 10.1007/978-3-642-30561-0_20
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Zhang T., 2013, Proceedings of the 28th annual acm symposium on applied computing, P1088, DOI DOI 10.1145/2480362.2480568
NR 55
TC 22
Z9 26
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 37
EP 51
DI 10.1016/j.infsof.2016.01.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400004
DA 2024-07-18
ER

PT J
AU Amanatidis, T
   Chatzigeorgiou, A
AF Amanatidis, Theodoros
   Chatzigeorgiou, Alexander
TI Studying the evolution of PHP web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE PHP; Software evolution; Lehman's laws; Software maintenance; Scripting
   languages; Software repositories
ID OPEN-SOURCE SOFTWARE; REFERENCE MODEL; TECHNICAL DEBT; SMOOTH GROWTH;
   SYSTEMS; MAINTAINABILITY
AB Context: Software evolution analysis can reveal important information concerning maintenance practices. Most of the studies which analyze software evolution focus on desktop applications written in compiled languages, such as Java and C. However, a vast amount of the web content today is powered by web applications written in PHP and thus the evolution of software systems written in such a scripting language deserves a distinct analysis.
   Objective: The aim of this study is to analyze the evolution of open-source PHP projects in an attempt to investigate whether Lehman's laws of software evolution are confirmed in practice for web applications.
   Method: Data (changes and metrics) have been collected for successive versions of 30 PHP projects while statistical tests (primarily trend tests) have been employed to evaluate the validity of each law on the examined web applications.
   Results: We found that Laws: I (Continuing Change), III (Self regulation), IV (Conservation of organizational stability), V (Conservation of familiarity) and VI (Continuing growth) are confirmed. However, only for laws I and VI the results are statistically significant. On the other hand, according to our results laws II (Increasing complexity), and VIII (Feedback system) do not hold in practice. Finally, for the law that claims that quality declines over time (Law VII) the results are inconclusive.
   Conclusions: The examined web applications indeed exhibit the property of constant growth as predicted by Lehman's laws and projects are under continuous maintenance. However, we have not found evidence that quality deteriorates over time, a finding which, if confirmed by other studies, could trigger further research into the reasons for which PHP web applications do not suffer from software ageing. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Amanatidis, Theodoros; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Macedonia
RP Amanatidis, T (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM tamanatidis@uom.gr; achat@uom.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   Ali S, 2009, INT CONF EMERG TECHN, P410, DOI 10.1109/ICET.2009.5353135
   [Anonymous], 2006, SOFTWARE EVOLUTION F
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   BREUSCH TS, 1979, ECONOMETRICA, V47, P1287, DOI 10.2307/1911963
   Businge J., 2010, P WORKSH SOFTW EV EV, P63
   DURBIN J, 1950, BIOMETRIKA, V37, P409, DOI 10.1093/biomet/37.3-4.409
   Fernandez-Ramil J., 2008, Empirical studies of open source evolution Software evolution, P263
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Godfrey Michael, 2001, P INT WORKSH PRINC S, P103, DOI [10.1145/602461.602482, DOI 10.1145/602461.602482]
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Herraiz I, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543595
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kaur T., 2014, International Journal of Computer Applications, V93, P40
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kyriakakis P, 2014, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2014.60
   Lehman M., 1978, P INF STAT ART C WHY
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman M. M., 1974, PROGRAMS CITIES STUD
   Lehman MM, 1998, IEEE SOFTWARE, V15, P40, DOI 10.1109/MS.1998.646878
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Loui RP, 2008, COMPUTER, V41, P22, DOI 10.1109/MC.2008.228
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Neamtiu I, 2013, J SOFTW-EVOL PROC, V25, P193, DOI 10.1002/smr.564
   OMAN P, 1992, P INT C SOFTW MAINT, P337
   Ousterhout JK, 1998, COMPUTER, V31, P23, DOI 10.1109/2.660187
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Prechelt L, 2003, ADV COMPUT, V57, P205, DOI 10.1016/S0065-2458(03)57005-X
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Robles G, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P165, DOI 10.1109/IWPSE.2005.17
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sheskin D. J., 2000, Handbook of Parametric and Nonparametric Statistical Procedures
   Sommerville I., 2010, SOFTWARE ENG
   Theil H., 1992, A Rank-Invariant Method of Linear and Polynomial Regression Analysis, V3, P345, DOI DOI 10.1007/978-94-011-2546-8_20
   Turski WM, 2002, IEEE T SOFTWARE ENG, V28, P814, DOI 10.1109/TSE.2002.1027802
   Turski WM, 1996, IEEE T SOFTWARE ENG, V22, P599, DOI 10.1109/32.536959
   Wohlin C., 2012, Experimentation in Software Engineering
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
NR 47
TC 17
Z9 20
U1 1
U2 49
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 48
EP 67
DI 10.1016/j.infsof.2015.11.009
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500004
DA 2024-07-18
ER

PT J
AU Ma, WWY
   Chen, L
   Yang, YB
   Zhou, YM
   Xu, BW
AF Ma, Wanwangying
   Chen, Lin
   Yang, Yibiao
   Zhou, Yuming
   Xu, Baowen
TI Empirical analysis of network measures for effort-aware fault-proneness
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Network measures; Dependency relationships; Fault-proneness prediction;
   Effort-aware
ID DEFECT PREDICTION; METRICS; CLASSIFICATION; COMPLEXITY; MODELS
AB Context: Recently, network measures have been proposed to predict fault-prone modules. Leveraging the dependency relationships between software entities, network measures describe the structural features of software systems. However, there is no consensus about their effectiveness for fault-proneness prediction. Specifically, the predictive ability of network measures in effort-aware context has not been addressed.
   Objective: We aim to provide a comprehensive evaluation on the predictive effectiveness of network measures with the effort needed to inspect the code taken into consideration.
   Method: We first constructed software source code networks of 11 open-source projects by extracting the data and call dependencies between modules. We then employed univariate logistic regression to investigate how each single network measure was correlated with fault-proneness. Finally, we built multivariate prediction models to examine the usefulness of network measures under three prediction settings: cross-validation, across-release, and inter-project predictions. In particular, we used the effort-aware performance indicators to compare their predictive ability against the commonly used code metrics in both ranking and classification scenarios.
   Results: Based on the 11 open-source software systems, our results show that: (1) most network measures are significantly positively related to fault-proneness; (2) the performance of network measures varies under different prediction settings; (3) network measures have inconsistent effects on various projects.
   Conclusion: Network measures are of practical value in the context of effort-aware fault-proneness prediction, but researchers and practitioners should be careful of choosing whether and when to use network measures in practice. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ma, Wanwangying; Chen, Lin; Yang, Yibiao; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
C3 Nanjing University
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
EM lchen@nju.edu.cn; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; Yang, Yibiao/ABP-4159-2022
OI Xu, Baowen/0000-0001-7743-1296; Yang, Yibiao/0000-0003-1153-2013; Chen,
   Lin/0000-0003-2352-2226
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [61472175,
   61432001, 91318301, 61472178, 61170071]; National Natural Science
   Foundation of Jiangsu Province [BK20130014]
FX The authors would like to thank the editor and anonymous reviewers for
   very helpful suggestions in greatly improving the quality of this paper.
   This work is supported by the National Key Basic Research and
   Development Program of China (2014CB340702), the National Natural
   Science Foundation of China (61472175, 61432001, 91318301, 61472178,
   61170071), and the National Natural Science Foundation of Jiangsu
   Province (BK20130014). All support is gratefully acknowledged.
CR Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bayaga Anass., 2010, Journal of applied quantitative methods, P288
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Freeman EA, 2008, ECOL MODEL, V217, P48, DOI 10.1016/j.ecolmodel.2008.05.015
   Gibbons J.D., 2003, TECHNOMETRICS, P196
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Harrell FE, 1996, STAT MED, V15, P361, DOI 10.1002/(SICI)1097-0258(19960229)15:4<361::AID-SIM168>3.0.CO;2-4
   He P., 2014, EMPIRICAL STUDY SOFT, V59, P170
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hess M., 2004, Annual Meeting of the American Educational Research Association, P1
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kromrey J.D., 1998, Mult. Linear Regres. Viewp., V25, P70
   Kutner M. H., 2004, APPL LINEAR REGRESSI
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Martin R., 1996, Q Eng, V8, P537
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Pan K, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P31
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Prateek S, 2013, ASIA PAC SOFWR ENG, P124, DOI 10.1109/APSEC.2013.27
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tosun A., 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540446
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Wahyudin D., 2011, LECT NOTES COMPUTER, V4980, P261
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 56
TC 42
Z9 48
U1 2
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 50
EP 70
DI 10.1016/j.infsof.2015.09.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100004
DA 2024-07-18
ER

PT J
AU Huang, JL
   Li, YF
   Xie, M
AF Huang, Jianglin
   Li, Yan-Fu
   Xie, Min
TI An empirical analysis of data preprocessing for machine learning-based
   software cost estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Software cost estimation; Data preprocessing; Missing-data treatments;
   Scaling; Feature selection; Case selection
ID SUPPORT VECTOR REGRESSION; MISSING DATA; MUTUAL INFORMATION;
   FEATURE-SELECTION; PREDICTION; MODELS; IMPUTATION; WEIGHTS; SIZE
AB Context: Due to the complex nature of software development process, traditional parametric models and statistical methods often appear to be inadequate to model the increasingly complicated relationship between project development cost and the project features (or cost drivers). Machine learning (ML) methods, with several reported successful applications, have gained popularity for software cost estimation in recent years. Data preprocessing has been claimed by many researchers as a fundamental stage of ML methods; however, very few works have been focused on the effects of data preprocessing techniques.
   Objective: This study aims for an empirical assessment of the effectiveness of data preprocessing techniques on ML methods in the context of software cost estimation.
   Method: In this work, we first conduct a literature survey of the recent publications using data preprocessing techniques, followed by a systematic empirical study to analyze the strengths and weaknesses of individual data preprocessing techniques as well as their combinations.
   Results: Our results indicate that data preprocessing techniques may significantly influence the final prediction. They sometimes might have negative impacts on prediction performance of ML methods.
   Conclusion: In order to reduce prediction errors and improve efficiency, a careful selection is necessary according to the characteristics of machine learning methods, as well as the datasets used for software cost estimation. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Huang, Jianglin; Xie, Min] City Univ Hong Kong, Dept Syst Engn & Engn Management, Hong Kong, Hong Kong, Peoples R China.
   [Li, Yan-Fu] CentraleSupelec, Dept Ind Engn, Paris, France.
C3 City University of Hong Kong; Universite Paris Saclay
RP Huang, JL (corresponding author), City Univ Hong Kong, Dept Syst Engn & Engn Management, Hong Kong, Hong Kong, Peoples R China.
EM jianhuang7-c@my.cityu.edu.hk; yanfu.li@centralesupelec.fr;
   minxie@cityu.edu.hk
RI Xie, Min/A-5552-2011; Li, Yan-Fu/B-6610-2014; Keung,
   Jacky/ABA-7089-2020; Xie, Min/IUQ-1412-2023; Huang, Jianglin/A-5505-2013
OI Xie, Min/0000-0002-8500-8364; Li, Yan-Fu/0000-0001-5755-7115; Huang,
   Jianglin/0000-0002-4256-8214; Huang, Danny/0000-0001-6575-7387
CR Ahmed MA, 2013, INFORM SOFTWARE TECH, V55, P241, DOI 10.1016/j.infsof.2012.08.001
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], 2008, SYST SOFTWARE, DOI DOI 10.1016/J.JSS.2007.12.793
   [Anonymous], 2011, P 7 INT C PRED MOD S
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M., 2011, 7 INT C PRED MOD SOF
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   Azzeh M, 2011, J SYST SOFTWARE, V84, P270, DOI 10.1016/j.jss.2010.09.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Bakir A, 2011, SOFTWARE QUAL J, V19, P537, DOI 10.1007/s11219-010-9112-9
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Bardsiri VK, 2013, SOFTWARE QUAL J, V21, P501, DOI 10.1007/s11219-012-9183-x
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Borges Raymond., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering, PROMISE '12, P11
   Bou A., 2013, J SYST SOFTW, V86, P144
   Bradford A.L., 2010, Pap. SC/62/BRG2 Present. to Sci. Comm. Int. Whal. Comm, P1
   Braga PL, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1788
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   CHEN Z, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A, 2009, INT SYMP EMP SOFTWAR, P191, DOI 10.1109/ESEM.2009.5315991
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Corazza A, 2011, EMPIR SOFTW ENG, V16, P211, DOI 10.1007/s10664-010-9138-4
   Costagliola G., 2006, 6 INT C WEB ENG ICWE, P9
   Das S., 2001, P 18 INT C MACHINE L, P74, DOI DOI 10.5555/645530.658297
   Tronto IFD, 2008, J SYST SOFTWARE, V81, P356, DOI 10.1016/j.jss.2007.05.011
   Di Martino Sergio, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P324
   Fernández-Diego M, 2014, INFORM SOFTWARE TECH, V56, P527, DOI 10.1016/j.infsof.2014.01.003
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Hsu CJ, 2011, SOFTWARE QUAL J, V19, P165, DOI 10.1007/s11219-010-9110-y
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   ISBSG, 2013, ISBSG DEV ENH PROJ D
   Jingzhou Li, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P126
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2003, BCS CONF SERIES, P61
   Kitchenham B. A., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P47, DOI 10.1049/ic:20040398
   Kitchenham Barbara, 2009, P 5 INT C PRED MOD S, P4
   Kocaguneli E., 2012, P INT C PRED MOD SOF, P89
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Kosti M.V., 2012, P 8 INT C PREDICTIVE, P59, DOI DOI 10.1145/2365324.2365333
   Li J., 2007, P 3 INT WORKSH PRED, P6
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Li YF, 2010, J SYST SOFTWARE, V83, P2332, DOI 10.1016/j.jss.2010.07.032
   Liu Q, 2008, SOFTWARE QUAL J, V16, P411, DOI 10.1007/s11219-007-9041-4
   Lopez-Martin C, 2012, EMPIR SOFTW ENG, V17, P738, DOI 10.1007/s10664-011-9192-6
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes Emilia, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P334
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mittas N, 2012, EMPIR SOFTW ENG, V17, P34, DOI 10.1007/s10664-011-9177-5
   Mittas N, 2010, EMPIR SOFTW ENG, V15, P523, DOI 10.1007/s10664-010-9128-6
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Ramasubbu N, 2012, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2012.6227203
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Sentas P, 2006, J SYST SOFTWARE, V79, P404, DOI 10.1016/j.jss.2005.02.026
   Seo YS, 2013, EMPIR SOFTW ENG, V18, P659, DOI 10.1007/s10664-012-9207-y
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Tsunoda M., 2011, 7 INT C PRED MOD SOF, P1
   Twala B, 2010, INTELL DATA ANAL, V14, P299, DOI 10.3233/IDA-2010-0423
   Van Hulse J, 2008, J SYST SOFTWARE, V81, P691, DOI 10.1016/j.jss.2007.07.043
   Van Hulse J, 2014, INFORM SCIENCES, V259, P596, DOI 10.1016/j.ins.2010.12.017
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Zhang SC, 2003, APPL ARTIF INTELL, V17, P375, DOI [10.1080/713827180, 10.1080/08839510390219264]
NR 95
TC 108
Z9 117
U1 2
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 108
EP 127
DI 10.1016/j.infsof.2015.07.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Atkinson, C
   Kühne, T
AF Atkinson, Colin
   Kuehne, Thomas
TI In defence of deep modelling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-level modelling; Deep modelling; Metamodelling; Ontological
   classification; Clabjects
ID LANGUAGE
AB Context: Since multi-level modelling emerged as a strategy for leveraging classification levels in conceptual models, there have been discussions about what it entails and how best to support it. Recently, some authors have claimed that the deep modelling approach to multi-level modelling entails paradoxes and significant weaknesses. By drawing upon concepts from speech act theory and foundational ontologies these authors argue that hitherto accepted principles for deep modelling should be abandoned and an alternative approach be adopted instead (Eriksson et al., 2013).
   Objective: We investigate the validity of these claims and motivate the need to shift the focus of the debate from philosophical arguments to modelling pragmatics.
   Method: We present each of the main objections raised against deep modelling in turn, classify them according to the kinds of arguments put forward, and analyse the cogency of the supporting justification. We furthermore analyse the counter proposal regarding its pragmatic value for modellers.
   Results: Most of the criticisms against deep modelling are based on mismatches between the premisses used in published definitions of deep modelling and those used by the authors as the basis of their challenges. Hence, most of the criticisms levelled at deep modelling do not actually apply to deep modelling as defined in the literature. We also explain how the proposed alternative introduces new problems of its own, and evaluate its merits from a pragmatic modelling perspective. Finally, we show how deep modelling is indeed compatible with, and can be founded on, classic work in linguistics and logic.
   Conclusions: The inappropriate interpretations of the core principles of deep modelling identified in this article indicate that previous descriptions of them have not had sufficient clarity. We therefore provide further clarification and foundational background material to reduce the chance for future misunderstandings and help establish deep modelling as a solid foundation for multi-level modelling. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Atkinson, Colin] Univ Mannheim, D-68131 Mannheim, Germany.
   [Kuehne, Thomas] Victoria Univ Wellington, Wellington 6140, New Zealand.
C3 University of Mannheim; Victoria University Wellington
RP Kühne, T (corresponding author), Univ Mannheim, B6,C2-11, D-68131 Mannheim, Germany.
EM atkinson@informatik.uni-mannheim.de; Thomas.Kuehne@ecs.victoria.ac.nz
RI Kühne, Thomas/E-8867-2016; Kuehne, Thomas/AAH-3220-2020
OI Kühne, Thomas/0000-0002-7674-2209; Kuehne, Thomas/0000-0002-7674-2209;
   Atkinson, Colin/0000-0002-3164-5595
CR Alvarez J., 2001, 4 EUR JOINT C THEOR
   [Anonymous], PROGR INNOVATIONS MO
   [Anonymous], 1987, Lehrbuch Der Konstruktiven Wissenschaftstheorie
   Aschauer T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P490, DOI 10.1109/SEAA.2009.46
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C, 2005, LECT NOTES COMPUT SC, V3713, P398, DOI 10.1007/11557432_30
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   Atkinson C., 2014, P WORKSH MULT MOD CO, V1286
   Atkinson C., SOFTW SYST MODEL, V7, P345
   ATKINSON C, 2001, LNCS, V2185, P19
   Atkinson C, 2012, P 2 INT MAST CLASS M
   Atkinson C, 2007, ADV COMPUT, V70, P105, DOI 10.1016/S0065-2458(06)70003-1
   Austin JohnL., 1969, SPEECH ACTS ESSAY PH, DOI DOI 10.1017/CBO9781139173438
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Eriksson O, 2013, INFORM SOFTWARE TECH, V55, P2099, DOI 10.1016/j.infsof.2013.07.008
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Guarino N., 1992, Data & Knowledge Engineering, V8, P249, DOI 10.1016/0169-023X(92)90025-7
   GUIZZARDI G, 2005, THESIS U TWENTE ENSC
   Henderson-Sellers B., 2012, On the mathematics of modelling, metamodelling, ontologies and modelling languages
   Henderson-Sellers B., 2013, P 25 INT C ADV INF S, P240
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Johnson Ralph, 1997, Pattern Languages of Program Design, V3, P47
   Jordan A., 2012, P MOD PHYS WORLD WOR
   King P., 2000, THEORIA-SPAIN, V66, P195
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kuhne T., 2004, LNI, V45, P121
   Lamo Y, 2012, STUD COMPUT INTELL, V429, P37
   Lyardet F.D., 1997, P C PATT LANG DES
   M. Ltd, 2014, RES NEW SUBSTR MOD D
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Object Management Group, 2000, FORMAL000403 OMG
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Ogden C.K., 1923, The Meaning of Meaning: A Study of the Influence of Language upon Thought and of the Science of Symbolism
   *OMG, 2007, FORMAL070205 OMG
   Rational, 1997, UML SPEC VERS 1 1 AD
   Sowa JF, 2000, LECT NOTES ARTIF INT, V1867, P55
   Volz B., 2010, P SPLASH WORKSH FLEX
   Wand Y., 1993, Journal of Information Systems, P217
NR 42
TC 7
Z9 9
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 36
EP 51
DI 10.1016/j.infsof.2015.03.010
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Panach, JI
   Espana, S
   Dieste, O
   Pastor, O
   Juristo, N
AF Panach, Jose Ignacio
   Espana, Sergio
   Dieste, Oscar
   Pastor, Oscar
   Juristo, Natalia
TI In search of evidence for model-driven development claims: An experiment
   on quality, effort, productivity and satisfaction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automatic programming; Methodologies; Programming paradigms; Quality
   analysis and evaluation
ID SOFTWARE-DEVELOPMENT; STATISTICAL POWER
AB Context: Model-Driven Development (MDD) is a paradigm that prescribes building conceptual models that abstractly represent the system and generating code from these models through transformation rules. The literature is rife with claims about the benefits of MDD, but they are hardly supported by evidences.
   Objective: This experimental investigation aims to verify some of the most cited benefits of MDD.
   Method: We run an experiment on a small set of classes using student subjects to compare the quality, effort, productivity and satisfaction of traditional development and MDD. The experiment participants built two web applications from scratch, one where the developers implement the code by hand and another using an industrial MDD tool that automatically generates the code from a conceptual model.
   Results: Outcomes show that there are no significant differences between both methods with regard to effort, productivity and satisfaction, although quality in MDD is more robust to small variations in problem complexity. We discuss possible explanations for these results.
   Conclusions: For small systems and less programming-experienced subjects, MDD does not always yield better results than a traditional method, even regarding effort and productivity. This contradicts some previous statements about MDD advantages. The benefits of developing a system with MDD appear to depend on certain characteristics of the development context. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Panach, Jose Ignacio] Univ Valencia, Dept Informat, Escola Tecn Super Engn, E-46100 Valencia, Spain.
   [Espana, Sergio; Pastor, Oscar] Univ Politecn Valencia, Ctr Invest Metodos Prod Software ProS, E-46022 Valencia, Spain.
   [Dieste, Oscar; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Boadilla Del Monte 28660, Spain.
C3 University of Valencia; Universitat Politecnica de Valencia; Universidad
   Politecnica de Madrid
RP Panach, JI (corresponding author), Univ Valencia, Dept Informat, Escola Tecn Super Engn, Ave Univ S-N, E-46100 Valencia, Spain.
EM joigpana@uv.es; sergio.espana@pros.upv.es; odieste@fi.upm.es;
   opastor@pros.upv.es; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014; Panach, Jose Ignacio/ABF-2099-2020; España,
   Sergio/B-1171-2010; Pastor Lopez, Oscar/S-4216-2016
OI Dieste, Oscar/0000-0002-3060-7853; Panach, Jose
   Ignacio/0000-0002-7043-6227; España, Sergio/0000-0001-7343-4270; Pastor
   Lopez, Oscar/0000-0002-1320-8471
FU Spanish Ministry of Science and Innovation [TIN2013-42981-P,
   TIN2011-23216]; ERDF; Generalitat Valenciana [PROMETEOII/2014/039,
   UV-INV-PRECOMP13-115032]
FX This work was developed with the support of the Spanish Ministry of
   Science and Innovation project SMART ADAPT (TIN2013-42981-P),
   TIN2011-23216 and was co-financed by ERDF. It also has the support of
   Generalitat Valenciana-funded IDEO project (PROMETEOII/2014/039) and UV
   (UV-INV-PRECOMP13-115032).
CR Acerbis R, 2007, LECT NOTES COMPUT SC, V4607, P501
   Anda B., 2006, P 2006 ACM IEEE INT, P124, DOI [10.1145/1159733.1159754, DOI 10.1145/1159733.1159754]
   [Anonymous], MOD DRIV DEV J2EE UT
   [Anonymous], IEEE COMP
   [Anonymous], P WORKSH EMP STUD MO
   [Anonymous], SIGWEB NEWSL
   [Anonymous], MDA VISION HOLE
   [Anonymous], KEEP YOUR BUS REL MO
   [Anonymous], 2003, INFORM SYST J
   [Anonymous], MODEL DRIVEN SOFTWAR
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 2010, SYSTEMS SOFTWARE ENG, P1, DOI DOI 10.1109/IEEESTD.2010.5733835
   [Anonymous], 8301998 IC SOC
   [Anonymous], UNDERSTANDING QUALIT
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bunse C, 2009, LECT NOTES COMPUT SC, V5421, P66, DOI 10.1007/978-3-642-01648-6_8
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Giachetti G., 2012, Research Challenges in Information Science (RCIS), 2012 Sixth International Conference on, P1
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Jedlitschka A., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kapteijns T., 2009, CODE CENTRIC MODEL C, P22
   Karsai G, 2008, LECT NOTES COMPUT SC, V5287, P46, DOI 10.1007/978-3-540-87785-1_5
   Krogmann K., 2007, LECT NOTES INFORM, V106, P169
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Mellegård N, 2010, LECT NOTES BUS INF P, V50, P234
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Meyers L., 2006, APPL MULTIVARIATE RE
   Olivé A, 2005, LECT NOTES COMPUT SC, V3520, P1
   Papotti Paulo Eduardo, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P321, DOI 10.1007/978-3-642-38709-8_21
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Singh Yashwant, 2009, 2009 IEEE International Advance Computing Conference. IACC 2009, P1644, DOI 10.1109/IADCC.2009.4809264
   Strasser Thomas, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1120, DOI 10.1109/INDIN.2008.4618271
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 46
TC 30
Z9 31
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 164
EP 186
DI 10.1016/j.infsof.2015.02.012
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000009
OA Green Published
DA 2024-07-18
ER

PT J
AU Gonzalez-Hernandez, L
AF Gonzalez-Hernandez, Loreto
TI New bounds for mixed covering arrays in <i>t</i>-way testing with
   uniform strength
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Combinatorial testing; Metaheuristic; Mixed covering array; Parameter
   tuning; Software testing
ID TABU SEARCH; STRATEGY; DESIGN
AB Context: Combinatorial testing (CT) can increase the effectiveness of software testing by ensuring that all t-way input combinations are covered in a test suite. When software components have different input cardinalities, CT uses a mixed covering array (MCA) to represent the test suite. This study proposes a new methodology for constructing MCAs of t is an element of {2 - 6} by using Mixed-Tabu Search (MiTS) as the construction strategy.
   Objective: The objective of this study is to significantly improve the best bounds of MCAs of t is an element of {2 - 6} with uniform strength.
   Method: The proposed solution incorporates a new procedure for efficient parameter tuning where statistical testing is used to identify the setting values that significantly affect the performance of MiTS. For validation purposes, we used a robust benchmark that comprised a set of 35 instances of real cases and a set of 95 academic instances, which represented the best bounds reported previously.
   Result: The experimental results showed that our MiTS-based methodology improved 93 bounds and matched 36 of them. The Wilcoxon signed-rank test demonstrated that our MiTS-based methodology significantly enhanced the best bounds of MCAs compared with those reported previously with 95% confidence.
   Conclusion: MCAs for t-way testing with a good solution quality (in terms of test size), which involves artificial intelligence-based strategies, may be obtained by following a well-established methodology during the construction process. (C) 2014 Elsevier B.V. All rights reserved.
C1 CINVESTAV Tamaulipas, Informat Technol Lab, Cd Victoria Tamps 87130, Mexico.
C3 CINVESTAV - Centro de Investigacion y de Estudios Avanzados del
   Instituto Politecnico Nacional
RP Gonzalez-Hernandez, L (corresponding author), CINVESTAV Tamaulipas, Informat Technol Lab, Km 5-5 Carretera Cd, Cd Victoria Tamps 87130, Mexico.
EM agonzalez@tamps.cinvestav.mx
CR Adenso-Díaz B, 2006, OPER RES, V54, P99, DOI 10.1287/opre.1050.0243
   Ahmed BS, 2012, APPL SOFT COMPUT, V12, P1330, DOI 10.1016/j.asoc.2011.11.029
   Alsewari ARA, 2012, INFORM SOFTWARE TECH, V54, P553, DOI 10.1016/j.infsof.2012.01.002
   Anniprincy B., 2014, J SOFTW ENG SIMUL, V2, P1
   [Anonymous], 2011, P 5 INT C LEARN INT
   [Anonymous], IBM INTELLIGENT TEST
   [Anonymous], 2000, P 8 EUR INT C SOFTW
   Arshem J., TEST GENERATOR VECTO
   Avila-George H., 2012, THESIS U POLITECNICA
   Avila-George H, 2012, LECT NOTES ARTIF INT, V7637, P611, DOI 10.1007/978-3-642-34654-5_62
   Avila-George H, 2012, ADV INTEL SOFT COMPU, V151, P657
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   Calvagna A., SOFTW TEST VERIF REL
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Colorni A., 1996, International Transactions in Operational Research, V3, P1, DOI 10.1111/j.1475-3995.1996.tb00032.x
   Coy SP, 2001, J HEURISTICS, V7, P77, DOI 10.1023/A:1026569813391
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Gage D., 2004, BASELINE MAGAZIN MAR, P4
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Glover F., 1998, Handbook of combinatorial optimization
   Gonzalez-Hernandez L, 2013, STUDIES COMPUTATIONA, V427, P371
   Gonzalez-Hernandez L, 2012, DISCRET MATH ALGORIT, V4, DOI 10.1142/S1793830912500334
   Gonzalez-Hernandez L, 2010, LECT NOTES ARTIF INT, V6438, P382
   Gonzalez-Hernandez L, 2010, LECT NOTES COMPUT SC, V6508, P51, DOI 10.1007/978-3-642-17458-2_6
   Jiefeng Xu, 1998, International Transactions in Operational Research, V5, P233, DOI 10.1111/j.1475-3995.1998.tb00117.x
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   LAGUNA M, 1993, MANAGE SCI, V39, P492, DOI 10.1287/mnsc.39.4.492
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Linhares A, 2010, APPL INTELL, V32, P279, DOI 10.1007/s10489-008-0145
   Moreno-Perez J. A., 2007, P 2007 QUINT C ESP N
   N. of America Inc, HEADQ
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   NIST, ADV COMB TEST SYST A
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Stardom J., 2001, THESIS S FRASER U
   Talbi E., 2009, WILEY SERIES PARALLE
   Turban R., 2006, THESIS TEMPE
   Wang JY, 2005, J BIOMOL NMR, V33, P261, DOI 10.1007/s10858-005-4079-8
   Younis M.I., 2011, INT J COMPUT THEORY, V3, P388, DOI DOI 10.7763/IJCTE.2011.V3.337
   Zekaoui L., 2006, THESIS U OTTAWA
NR 45
TC 10
Z9 11
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 17
EP 32
DI 10.1016/j.infsof.2014.10.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200002
DA 2024-07-18
ER

PT J
AU Bertolino, A
   Daoudagh, S
   El Kateb, D
   Henard, C
   Le Traon, Y
   Lonetti, F
   Marchetti, E
   Mouelhi, T
   Papadakis, M
AF Bertolino, Antonia
   Daoudagh, Said
   El Kateb, Donia
   Henard, Christopher
   Le Traon, Yves
   Lonetti, Francesca
   Marchetti, Eda
   Mouelhi, Tejeddine
   Papadakis, Mike
TI Similarity testing for access control
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Similarity; Test prioritization; Security policies
ID TEST-CASE PRIORITIZATION; SELECTION; MUTATION
AB Context: Access control is among the most important security mechanisms, and XACML is the de facto standard for specifying, storing and deploying access control policies. Since it is critical that enforced policies are correct, policy testing must be performed in an effective way to identify potential security flaws and bugs. In practice, exhaustive testing is impossible due to budget constraints. Therefore the tests need to be prioritized so that resources are focused on their most relevant subset.
   Objective: This paper tackles the issue of access control test prioritization. It proposes a new approach for access control test prioritization that relies on similarity.
   Method: The approach has been applied to several policies and the results have been compared to random prioritization (as a baseline). To assess the different prioritization criteria, we use mutation analysis and compute the mutation scores reached by each criterion. This helps assessing the rate of fault detection.
   Results: The empirical results indicate that our proposed approach is effective and its rate of fault detection is higher than that of random prioritization.
   Conclusion: We conclude that prioritization of access control test cases can be usefully based on similarity criteria. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Bertolino, Antonia; Daoudagh, Said; Lonetti, Francesca; Marchetti, Eda] CNR, Ist Sci & Tecnol Informaz A Faedo, I-56124 Pisa, Italy.
   [El Kateb, Donia; Henard, Christopher; Le Traon, Yves; Mouelhi, Tejeddine; Papadakis, Mike] Univ Luxembourg, SnT, Interdisciplinary Res Ctr, Luxembourg, Luxembourg.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Luxembourg
RP Mouelhi, T (corresponding author), Univ Luxembourg, SnT, Interdisciplinary Res Ctr, Luxembourg, Luxembourg.
EM antonia.bertolino@isti.cnr.it; said.daoudagh@isti.cnr.it;
   donia.elkateb@uni.lu; christopher.henard@uni.lu; yves.letraon@uni.lu;
   francesca.lonetti@isti.cnr.it; eda.marchetti@isti.cnr.it;
   tejeddine.mouelhi@uni.lu; mike.papadakis@uni.lu
RI Lonetti, Francesca/AAM-5813-2021; MARCHETTI, EDA/AAW-6509-2020;
   Bertolino, Antonia/ABD-6837-2020; LE TRAON, Yves/T-2911-2019; Daoudagh,
   Said/N-5618-2016
OI Lonetti, Francesca/0000-0002-4864-2219; MARCHETTI,
   EDA/0000-0003-4223-8036; Bertolino, Antonia/0000-0001-8749-1356;
   Daoudagh, Said/0000-0002-3073-6217; LE TRAON, Yves/0000-0002-1045-4861;
   Papadakis, Mike/0000-0003-1852-2547
FU Network of Excellence on Engineering Secure Future Internet Software
   Services and Systems (NESSoS) FP7 [256980]
FX This work has been partially funded by the Network of Excellence on
   Engineering Secure Future Internet Software Services and Systems
   (NESSoS) FP7 Project 256980.
CR Andrews J.H., IEEE T SOFTW ENG, V32
   [Anonymous], 2007, 2 INT WORKSH AUT SOF
   Bertolino A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P842, DOI 10.1109/ICST.2012.185
   Bertolino A, 2013, IEEE ICST WORKSHOP, P28, DOI 10.1109/ICSTW.2013.11
   Bertolino A, 2013, IET SOFTW, V7, P203, DOI 10.1049/iet-sen.2012.0101
   Bertolino A, 2010, EUROMICRO CONF PROC, P3, DOI 10.1109/SEAA.2010.58
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Hwang JH, 2012, IEEE INT CONF AUTOM, P266, DOI 10.1145/2351676.2351719
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kaur A., 2011, International Journal on Computer Science and Engineering, V3, P1839
   Kun Wu, 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P124, DOI 10.1109/IWAST.2012.6228980
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li N., 2008, P TAV WEB, P27, DOI DOI 10.1145/1390832.1390837
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin D, 2013, IEEE T KNOWL DATA EN, V25, P1946, DOI 10.1109/TKDE.2012.174
   Lin D, 2007, SACMAT'07: PROCEEDINGS OF THE 12TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P1
   Maly K., ARCHON A DIGITAL LIB
   Martin E., 2006, P 17 INT S SOFTW R S
   Martin E., P 16 INT C WORLD WID, P667
   Mouelhiv Tejeddine, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P278, DOI 10.1109/ICSTW.2008.2
   *OASIS, 2005, EXT ACC CONTR MARK L
   Pretschner Alexander., 2008, 2008 1 INT C SOFTWAR, P338
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sapna PG, 2010, PROCEEDINGS OF THE FIRST AMRITA ACM-W CELEBRATION OF WOMEN IN COMPUTING IN INDIA (A2WIC)
   Tahat L, 2012, SOFTW TEST VERIF REL, V22, P481, DOI 10.1002/stvr.461
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Yates DF, 2007, INFORM SOFTWARE TECH, V49, P1045, DOI 10.1016/j.infsof.2006.10.009
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang QQ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL WORKSHOP ON DIFFUSE POLLUTION-MANAGEMENT MEASURES AND CONTROL TECHNIQUE, P171, DOI 10.1109/QSIC.2010.16
NR 41
TC 16
Z9 16
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 355
EP 372
DI 10.1016/j.infsof.2014.07.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800021
OA Green Published
DA 2024-07-18
ER

PT J
AU Ruhe, G
   Zhang, YY
AF Ruhe, Guenther
   Zhang, Yuanyuan
TI Introduction to special section on Search Based Software Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
C1 [Ruhe, Guenther] Univ Calgary, Calgary, AB T2N 1N4, Canada.
   [Zhang, Yuanyuan] UCL, London WC1E 6BT, England.
C3 University of Calgary; University of London; University College London
RP Ruhe, G (corresponding author), Univ Calgary, Calgary, AB T2N 1N4, Canada.
EM ruhe@ucalgary.ca; yuanyuan.zhang@ucl.ac.uk
CR Burke E. K., 2014, Search Methodologies, DOI DOI 10.1007/0-387-28356-0_6
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Holland J.H., 1975, ADAPTION NATURAL ART
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Zhang Y., REPOSITORY PUBLICATI
NR 6
TC 1
Z9 1
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 683
EP 683
DI 10.1016/j.infsof.2014.08.005
PG 1
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500038
DA 2024-07-18
ER

PT J
AU Machado, ID
   McGregor, JD
   Cavalcanti, YC
   de Almeida, ES
AF Machado, Ivan do Carmo
   McGregor, John D.
   Cavalcanti, Yguarata Cerqueira
   de Almeida, Eduardo Santana
TI On strategies for testing software product lines: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product lines; Software testing; Software quality; Systematic
   literature review
AB Context: Testing plays an important role in the quality assurance process for software product line engineering. There are many opportunities for economies of scope and scale in the testing activities, but techniques that can take advantage of these opportunities are still needed.
   Objective: The objective of this study is to identify testing strategies that have the potential to achieve these economies, and to provide a synthesis of available research on SPL testing strategies, to be applied towards reaching higher defect detection rates and reduced quality assurance effort.
   Method: We performed a literature review of two hundred seventy-six studies published from the year 1998 up to the 1st semester of 2013. We used several filters to focus the review on the most relevant studies and we give detailed analyses of the core set of studies.
   Results: The analysis of the reported strategies comprised two fundamental aspects for software product line testing: the selection of products for testing, and the actual test of products. Our findings indicate that the literature offers a large number of techniques to cope with such aspects. However, there is a lack of reports on realistic industrial experiences, which limits the inferences that can be drawn.
   Conclusion: This study showed a number of leveraged strategies that can support both the selection of products, and the actual testing of products. Future research should also benefit from the problems and advantages identified in this study. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Machado, Ivan do Carmo; de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [McGregor, John D.] Clemson Univ, Sch Comp, Clemson, SC USA.
   [Cavalcanti, Yguarata Cerqueira] SERPRO, Fed Data Proc Serv, Florianopolis, SC, Brazil.
C3 Universidade Federal da Bahia; Clemson University
RP Machado, ID (corresponding author), Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
EM ivanmachado@dcc.ufba.br; johnmc@cs.clemson.edu; ycc@cin.ufpe.br;
   esa@dcc.ufba.br
RI Machado, Ivan/AAL-8021-2020; Machado, Ivan/AAC-1015-2020; cavalcanti,
   yguarata c./J-6381-2012; Machado, Ivan/E-7228-2013; de Almeida,
   Eduardo/JJC-2493-2023; Machado, Isabel C/I-6935-2012
OI Machado, Ivan/0000-0001-9027-2293; 
FU National Institute of Science and Technology for Software Engineering
   (INES)10 - CNPq; FACEPE [573964/2008- 4, APQ-1037-1.03/08]; CNPq
   [305968/2010-6, 559997/2010-8, 474766/2010-1]; FAPESB
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES)<SUP>10</SUP>, funded by
   CNPq and FACEPE, Grants 573964/2008- 4 and APQ-1037-1.03/08 and CNPq
   Grants 305968/2010-6, 559997/2010-8, 474766/2010-1 and FAPESB.
CR Aguillo IF, 2012, SCIENTOMETRICS, V91, P343, DOI 10.1007/s11192-011-0582-8
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2004, SIGSOFT SOFTWARE ENG
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Charters S., 2007, 2007001 EBSE
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clements P, 2012, BUS HORIZONS, V55, P201, DOI 10.1016/j.bushor.2011.12.001
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dordowsky F., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P241, DOI 10.1109/SPLC.2011.11
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Harzing AW, 2013, SCIENTOMETRICS, V94, P1057, DOI 10.1007/s11192-012-0777-7
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Johansen M. F., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P266, DOI 10.1109/ICSTW.2011.53
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kolb R., 2003, Proceedings of the 7th Conference on Quality Engineering in Software Technology, CONQUEST, P81
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Machado I.C., 2014, P 8 INT WORKSH VAR M
   Naik K., 2008, SOFTWARE TESTING QUA
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrucci GP, 2011, Survey on energy consumption entities on the smartphone platform, P1
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Rincón LF, 2014, ELECTRON NOTES THEOR, V302, P111, DOI 10.1016/j.entcs.2014.01.023
   Salinesi Camille, 2012, Software Product Line-Advanced Topic, DOI [10.5772/35662, DOI 10.5772/35662]
   SCHAEFER I, 2010, P 14 INT C SOFTW PRO, V6287, P77
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Thorn C., 2007, 11 INT C SOFTW PROD, V2, P184
   Tischer C., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P267, DOI 10.1109/SPLC.2011.15
   Webster J, 2002, MIS QUART, V26, pXIII
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 46
TC 85
Z9 89
U1 2
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1183
EP 1199
DI 10.1016/j.infsof.2014.04.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700002
DA 2024-07-18
ER

PT J
AU Holt, NE
   Briand, LC
   Torkar, R
AF Holt, Nina Elisabeth
   Briand, Lionel C.
   Torkar, Richard
TI Empirical evaluations on the cost-effectiveness of state-based testing:
   An industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE State-based testing; UML; Cost effectiveness; Automated testing;
   Empirical evaluation; Industrial case study
ID TEST DATA GENERATION; SERIES
AB Context: Test models describe the expected behavior of the software under test and provide the basis for test case and oracle generation. When test models are expressed as UML state machines, this is typically referred to as state-based testing (SBT). Despite the importance of being systematic while testing, all testing activities are limited by resource constraints. Thus, reducing the cost of testing while ensuring sufficient fault detection is a common goal in software development. No rigorous industrial case studies of SBT have yet been published.
   Objective: In this paper, we evaluate the cost-effectiveness of SBT on actual control software by studying the combined influence of four testing aspects: coverage criterion, test oracle, test model and unspecified behavior (sneak paths).
   Method: An industrial case study was used to investigate the cost-effectiveness of SBT. To enable the evaluation of SBT techniques, a model-based testing tool was configured and used to automatically generate test suites. The test suites were evaluated using 26 real faults collected in a field study.
   Results: Results show that the more detailed and rigorous the test model and oracle, the higher the fault-detection ability of SET. A less precise oracle achieved 67% fault detection, but the overall cost reduction of 13% was not enough to make the loss an acceptable trade-off. Removing details from the test model significantly reduced the cost by 85%. Interestingly, only a 24-37% reduction in fault detection was observed. Testing for sneak paths killed the remaining eleven mutants that could not be killed by the conformance test strategies.
   Conclusions: Each of the studied testing aspects influences cost-effectiveness and must be carefully considered in context when selecting strategies. Regardless of these choices, sneak-path testing is a necessary step in SBT since sneak paths are common while also undetectable by conformance testing. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Holt, Nina Elisabeth] Simula Res Lab, N-1325 Lysaker, Norway.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Torkar, Richard] Chalmers & Univ Gothenburg, Gothenburg, Sweden.
   [Torkar, Richard] Blekinge Inst Technol, Karlskrona, Sweden.
C3 University of Luxembourg; Chalmers University of Technology; Blekinge
   Institute Technology
RP Holt, NE (corresponding author), Simula Res Lab, Martin Linges Vei 17, N-1325 Lysaker, Norway.
EM neh@accedo.no
FU Simula Research Laboratory; Research Council of Norway through the
   industry project EVISOFT (EVidence based Improvement of SOFTware
   engineering); National Research Fund, Luxembourg [FNR/P10/03]; Knowledge
   Foundation (KKS) through the project Testing of Critical System
   Characteristics (TOCSYC) [20130085]
FX Nina E. Holt was funded by Simula Research Laboratory and The Research
   Council of Norway through the industry project EVISOFT (EVidence based
   Improvement of SOFTware engineering). Lionel Briand has been supported
   by the National Research Fund, Luxembourg (FNR/P10/03). Richard Torkar
   was partly funded by The Knowledge Foundation (KKS) through the project
   20130085 Testing of Critical System Characteristics (TOCSYC).
CR ABDURAZIK A, 2000, P 6 IEEE INT C COMPL
   Ali S., 2010, Model Transformations as a Strategy to Automate Model-Based Testing A Tool and Industrial Case Studies (Tech. Rep.)
   Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   Andrews J., 2005, ICSE 05 P 27 INT 27
   Andrews J.H., IEEE T SOFTW ENG, V32
   [Anonymous], 2020, EMPIR SOFTW ENG
   Antoniol G., 2002, P 13 INT S SOFTW REL
   Binder R.V., 2000, AW OBJ TECHNOL S
   Black P., 2000, ASE 2000 15 AUT SOFT
   Bogdanov K, 2001, SOFTW TEST VERIF REL, V11, P39, DOI 10.1002/stvr.217
   Briand L., 2001, P 4 INT C UN MOD LAN
   Briand L. C., 2005, P 16 IEEE INT S SOFT
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Briand L, 2010, SOFTW TEST VERIF REL, V20, P177, DOI 10.1002/stvr.410
   Briand Lionel C., 2004, P 26 INT C SOFTW ENG
   Chevalley P., 2001, P 12 INT S SOFTW REL
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   El-Far IbrahimK., 2002, Encyclopedia of Software Engineering
   Feldstein J., 2005, Model-Based Testing using IBM Rational Functional Tester (Tech. Rep.)
   Fender T., 2003, UML BIBLE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomaa H., 2000, DESIGNING CONCURRENT
   Gurevich Y., 2009, MODEL BASED TESTING
   Hartman A., 2004, INT S SOFTW TEST AN
   Heimdahl M., 2004, 19 IEEE INT C AUT SO
   Holt N., 2009, 200906 UML SIM RES L
   Holt N., 2012, IEEE INT S SOFTW REL
   Holt N.E., 2006, CRITICAL SYSTEMS DEV
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mouchawrab S., 2007, 1 INT S EMP SOFTW EN
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A.Jefferson., 1999, P 5 IEEE INT C ENG C
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   OFFUTT J, 1999, P 2 INT C UN MOD LAN
   Paradkar A., 2004, P INT S SOFTW REL EN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santen T., 2006, P SOFTW ENG LEIPZ
   Staats M., 2011, P 33 INT C SOFTW ENG
   Thevenod-Fosse M., 1996, P 1996 ACM SIGSOFT I
   Utting M., 2006, Practical Model-Based Testing
   Utting M., 2006, WORKING PAPER SERIES
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vieira M., 2008, P 30 INT C SOFTWARE
   Wilcox R.R., 2001, FUNDAMENTALS MODERN
   Wong W., 1995, INT C SOFTW ENG P 17
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yin R.K., 2014, Applications of case study research, V2nd
NR 52
TC 14
Z9 15
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 890
EP 910
DI 10.1016/j.infsof.2014.02.011
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800005
DA 2024-07-18
ER

PT J
AU Carrizo, D
   Dieste, O
   Juristo, N
AF Carrizo, Dante
   Dieste, Oscar
   Juristo, Natalia
TI Systematizing requirements elicitation technique selection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Elicitation techniques; Requirements process; Selecting techniques;
   Requirements elicitation; Context attributes
ID KNOWLEDGE ACQUISITION TECHNIQUES; CUSTOMER; DEVELOPER; EXPERTS; IMPACT
AB Context: This research deals with requirements elicitation technique selection for software product requirements and the overselection of open interviews.
   Objectives: This paper proposes and validates a framework to help requirements engineers select the most adequate elicitation techniques at any time.
   Method: We have explored both the existing underlying theory and the results of empirical research to build the framework. Based on this, we have deduced and put together justified proposals about the framework components. We have also had to add information not found in theoretical or empirical sources. In these cases, we drew on our own experience and expertise.
   Results: A new validated approach for requirements technique selection. This new approach selects techniques other than open interview, offers a wider range of possible techniques and captures more requirements information.
   Conclusions: The framework is easily extensible and changeable. Whenever any theoretical or empirical evidence for an attribute, technique or adequacy value is unearthed, the information can be easily added to the framework. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Carrizo, Dante] Atacama Univ, Copiapo, Chile.
   [Dieste, Oscar; Juristo, Natalia] Tech Univ Madrid, Madrid 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Carrizo, D (corresponding author), Atacama Univ, Avda Copayapu 485, Copiapo, Chile.
EM dante.carrizo@uda.cl; odieste@fi.upm.es; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853
FU Spanish Ministry of Science and Innovation [TIN2008-00555]; University
   of Atacama [DIUDA 221201]
FX This work has been funded by the Spanish Ministry of Science and
   Innovation under Research Grant TIN2008-00555 and University of Atacama
   under Research Grant DIUDA 221201.
CR Abran A., 2004, SWEBOK: Guide to the software engineering Body of Knowledge
   Agarwal R., 1990, Journal of Management Information Systems, V7, P123
   Andrews D.C., 1991, J SYSTEMS MANAGE MAR, P23
   ANDRIOLE SJ, 1994, IEEE SOFTWARE, V11, P85, DOI 10.1109/52.268964
   [Anonymous], P 9 INT C INF SYST
   [Anonymous], COMP VOL P 22 INT C
   [Anonymous], 1984, PROTOCOL ANAL VERBAL
   [Anonymous], 2011, APPL STAT PROBABILIT
   [Anonymous], P HUM FACT SOC 35
   [Anonymous], 1994, Human-Computer Interaction
   BEYER HR, 1995, COMMUN ACM, V38, P45, DOI 10.1145/203356.203365
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Burton A. M., 1990, Knowledge Acquisition, V2, P167, DOI 10.1016/S1042-8143(05)80010-X
   BYRD TA, 1992, MIS QUART, V16, P117, DOI 10.2307/249704
   CHAO CJ, 1995, BEHAV INFORM TECHNOL, V14, P174, DOI 10.1080/01449299508914644
   Chatzoglou PD, 1996, INFORM SYST J, V6, P209, DOI 10.1111/j.1365-2575.1996.tb00014.x
   Christel M., 1992, SEI92TR012
   COOKE NJ, 1994, INT J HUM-COMPUT ST, V41, P801, DOI 10.1006/ijhc.1994.1083
   Davis A., 2002, REQ ENG FDN SOFTW QU
   Davis A., 2006, P 14 IEEE INT C REQ, P11
   Davis A., 2003, P 9 ANN AM C INF SYS
   Davis AB, 2003, NEW YORK REV BOOKS, V50, P36
   DAVIS AM, 1994, IEEE SOFTWARE, V11, P12, DOI 10.1109/52.268949
   De Bono E., 1992, SERIOUS CREATIVITY
   Delbecq A.L., 1970, P ACAD MANAGEMENT, P208
   Denzin N.K., 1994, Introduction: Entering the Field of Qualitative Research
   Dhaliwal J. S., 1990, Knowledge Acquisition, V2, P145, DOI 10.1016/S1042-8143(05)80009-3
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Dillman D.A., 2007, MAIL INTERNET SURVEY
   Easterby-Smith M., 1983, RECENT ADV PERSONAL
   Erdmann M., 1998, P 15 IFIP WORLD COMP, P259
   FAZLOLLAHI B, 1991, INFORM MANAGE, V21, P291, DOI 10.1016/0378-7206(91)90005-M
   Goguen J., 1993, IEEE INT S REQ ENG S, P152
   Gonzalez-Baixauli B., 2005, IEEE LATIN AM T, V3
   Hamilton F., 1999, CUSHING
   Helmer O., 1959, Management Science, V6
   HOFFMAN RR, 1987, AI MAG, V8, P53
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   HOLSAPPLE CW, 1994, EXPERT SYST, V11, P77, DOI 10.1111/j.1468-0394.1994.tb00001.x
   HUGHES JA, 1995, ACM INTERACTIONS, P57
   Jacobson I., 1987, OBJECT ORIENTED DEV
   Jiang L, 2008, REQUIR ENG, V13, P117, DOI 10.1007/s00766-007-0060-2
   Jitnah D., 1995, 9504 MON U PEN SCH C
   Juristo N., 2003, BASICS SOFTWARE ENG
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   Kheirkhah E., 2008, INT S INF TECHN
   Kim J., 1988, Decision Support Systems, V4, P269, DOI 10.1016/0167-9236(88)90016-4
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lewis C., 1993, TASK CENTERED USER I
   Linstone H.A., 1977, DELPHI METHOD
   LIOU YI, 1992, EXPERT SYST APPL, V5, P1, DOI 10.1016/0957-4174(92)90089-B
   Lloyd W.J., 2001, THESIS VIRGINIA TECH
   Luqi, 1993, INT S REQ ENG JAN, P229
   Macaulay LA., 1996, SPRINGER VERLAG SERI
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Maurer D., 2004, Card sorting: A definitive guide
   Morgan DL, 1993, SUCCESSFUL FOCUS GRO, DOI 10.4135/9781483349008
   Osborn A.F., 1953, APPL IMAGINATION
   Pan D., 1997, REQUIREMENTS ENG TEC
   Playle G., 1996, CrossTalk: The Journal of Defense Software Engineering, V9, P19
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Roth M., 1993, J KNOW ENG, V6
   Rugg G, 1995, EXPERT SYST, V12, P339, DOI 10.1111/j.1468-0394.1995.tb00271.x
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Shadbolt N., 1989, ACM SIGART KNOWLEDGE
   Shuttleworth F.K., 1981, J EDUC PSYCHOL, V22, P652
   Wagner WP, 2003, EXPERT SYST APPL, V24, P79, DOI 10.1016/S0957-4174(02)00085-4
   Wohlin C., 2012, Experimentation in Software Engineering
   Wood J., 1989, JOINT APPL DESIGN DE
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 70
TC 50
Z9 57
U1 1
U2 40
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 644
EP 669
DI 10.1016/j.infsof.2014.01.009
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300006
DA 2024-07-18
ER

PT J
AU Wu, YC
   Fan, CF
AF Wu, Yi-Chen
   Fan, Chin-Feng
TI Defining a test coverage criterion for model-level testing of FBD
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE FBD; MC/DC; CCC; Logical function mutation errors; Data-flow programs;
   Test coverage criteria
AB Context: The Programmable Logic Controller (PLC) is being integrated into the automation and control of computer systems in safety-critical domains at an increasing rate. Thoroughly testing such software to ensure safety is crucial. Function Block Diagram (FBD) is a popular data-flow programming language for PLC. Current practice often involves translating an FBD program into an equivalent C program for testing. Little research has been conducted on coverage of direct testing a data-flow program, such as an FBD program, at the model level. There are no commonly accepted structural test coverage criteria for data-flow programs. The objective of this study is to develop effective structural test coverage criterion for testing model-level FBD programs. The proposed testing scheme can be used to detect mutation errors at the logical function level.
   Objective: The purpose of this study is to design a new test coverage criterion that can directly test FBD programs and effectively detect logical function mutation errors.
   Method: A complete test set for each function and function block in an FBD program are defined. Moreover, this method augments the data-flow path concept with a sensitivity check to avoid fault masking and effectively detect logical function mutation errors.
   Results: Preliminary experiments show that this test coverage criterion is comprehensive and effective for error detection.
   Conclusion: The proposed coverage criterion is general and can be applied to real cases to improve the quality of data-flow program design. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Wu, Yi-Chen; Fan, Chin-Feng] Yuan Ze Univ, Comp Engn & Sci Dept, Tao Yuan, Taiwan.
   [Wu, Yi-Chen] Chang Gung Univ, Ctr Gen Educ, Tao Yuan, Taiwan.
C3 Yuan Ze University; Chang Gung University
RP Fan, CF (corresponding author), 135 Far East Rd, Chungli 320, Taiwan.
EM irene@mail.cgu.edu.tw; csfanc@saturn.yzu.edu.tw
FU National Science Council of Taiwan;  [NSC-102-2221-E-155-030]
FX The authors would like to thank anonymous reviewers for valuable
   comments, and acknowledge support from the research grant
   NSC-102-2221-E-155-030 sponsored by the National Science Council of
   Taiwan.
CR [Anonymous], P 1 INT WORKSH AER S
   [Anonymous], EVALUATION STRUCTURA
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], SOFTW UN TEST DIG CO
   [Anonymous], TEST AUTOMATIQUE PRO
   [Anonymous], EXTENSIBLE MARKUP AN
   [Anonymous], 2003, 611313 IEC
   [Anonymous], WATER PUMP CONTROLLE
   [Anonymous], CAST10
   [Anonymous], 1990, IEEE STD 610 12 1990
   [Anonymous], 2001, PRACTICAL TUTORIAL M
   [Anonymous], 6 INT C NUCL THERM H
   Baresi L, 2000, IEEE SYS MAN CYBERN, P2437, DOI 10.1109/ICSMC.2000.884357
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   COWARD PD, 1988, INFORM SOFTWARE TECH, V30, P189, DOI 10.1016/0950-5849(88)90065-1
   Donghwan Shin, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P465, DOI 10.1007/978-3-642-33666-9_30
   HALEY A, 1984, J SYST SOFTWARE, V4, P309, DOI 10.1016/0164-1212(84)90030-X
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jee E, 2005, LECT NOTES COMPUT SC, V3688, P67
   Jee E, 2010, LECT NOTES COMPUT SC, V6351, P223
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Juristo N., 2003, LECT NOTES EMPIRICAL
   Kobayashi N, 2002, INFORM SOFTWARE TECH, V44, P113, DOI 10.1016/S0950-5849(01)00222-1
   Lakehal Abdesselam., 2005, Proceedings of the 10th International Workshop on Formal Methods for Industrial Critical Systems, P35
   Lv T, 2004, INFORM SOFTWARE TECH, V46, P839, DOI 10.1016/j.infsof.2004.02.004
   Mader A., 2000, P 5 INT WORKSH DISCR
   Malevris N, 2006, INFORM SOFTWARE TECH, V48, P676, DOI 10.1016/j.infsof.2005.07.006
   RTCA Inc, 1992, RTCADO178B
   Slamani M., 1994, Proceedings 12th IEEE VLSI Test Symposium (Cat. No.94TH0645-2), P54, DOI 10.1109/VTEST.1994.292334
NR 30
TC 4
Z9 5
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 2013
EP 2027
DI 10.1016/j.infsof.2013.07.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500010
DA 2024-07-18
ER

PT J
AU Otte, WR
   Gokhale, A
   Schmidt, DC
AF Otte, William R.
   Gokhale, Aniruddha
   Schmidt, Douglas C.
TI Efficient and deterministic application deployment in component-based
   enterprise distributed real-time and embedded systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component-based real-time systems; Deterministic deployment; Deployment
   and configuration; Efficient deployment; Parallel deployment; Deployment
   latency
ID MIDDLEWARE; PERFORMANCE; MANAGEMENT; DESIGN
AB Context: Component-based middleware, such as the Lightweight CORBA Component Model, is increasingly used to implement enterprise distributed real-time and embedded (DRE) systems. In addition to supporting the quality-of-service (QoS) requirements of individual DRE systems, component technologies must also support bounded latencies when effecting deployment changes to DRE systems in response to changing environmental conditions and operational requirements.
   Objective: The goals of this paper are to (1) study sources of inefficiencies and non-deterministic performance in deployment capabilities for DRE systems and (2) devise solutions to overcome these performance problems.
   Method: The paper makes two contributions to the study of the deployment and configuration of distributed component based applications. First, we analyze how conventional implementations of the OMG's Deployment and Configuration (D&C) specification for component-based systems can significantly degrade deployment latencies. Second, we describe architectural changes and performance optimizations implemented within the Locality-Enhanced Deployment and Configuration Engine (LE-DAnCE) implementation of the D&C specification to obtain efficient and deterministic deployment latencies.
   Results: We analyze the performance of LE-DAnCE in the context of component deployments on 10 nodes for a representative DRE system consisting of 1000 components and in a cluster environment with up to 100 nodes. Our results show LE-DAnCE's optimizations provide a bounded deployment latency of less than 2 s for the 1000 component scenario with just a 4 percent jitter.
   Conclusion: The improvements contained in the LE-DAnCE infrastructure provide an efficient and scaleable standards-based deployment system for component-based enterprise DRE systems. In particular, deployment time parallelism can improve deployment latency significantly, both during pre-deployment analysis of the deployment plan and during the process of installing and activating components. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Otte, William R.; Gokhale, Aniruddha; Schmidt, Douglas C.] Vanderbilt Univ, Inst Software Integrated Syst, EECS, Nashville, TN 37212 USA.
C3 Vanderbilt University
RP Otte, WR (corresponding author), Vanderbilt Univ, Inst Software Integrated Syst, EECS, 1025 16th Ave S,Suite 102, Nashville, TN 37212 USA.
EM wotte@dre.vanderbilt.edu
OI Gokhale, Aniruddha/0000-0002-7706-7102
FU NSF [0845789]; CNS [0915976]; Northrop Grumman; AFRL GUTS; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [0845789] Funding Source: National Science Foundation
FX This work was supported in part by NSF CAREER 0845789 and CNS 0915976,
   and a contract from Northrop Grumman and AFRL GUTS. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the author(s) and do not necessarily reflect the views of
   the National Science Foundation, AFRL, or NGC. This work was conducted
   in part using the resources of the Advanced Computing Center for
   Research and Education at Vanderbilt University, Nashville, TN.
CR [Anonymous], 2009, MPI 2 2 SPEC
   [Anonymous], 2011, OPENMP 3 1 SPEC
   ARULANTHU AB, 2000, P MIDDL 2000 C ACM I
   Balasubramanian J., 2005, INT S DISTR OBJ APPL
   Ben Halima Riadh, 2008, 2008 IEEE International Conference on Web Services (ICWS), P104, DOI 10.1109/ICWS.2008.113
   Bruneton E., 2006, COMPONENT BASED SOFT, P7
   Deng C, 2005, LECT NOTES COMPUT SC, V3798, P67
   Deng G, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P317, DOI 10.1109/ISORC.2008.58
   Esposito Christian, 2010, International Journal of Adaptive, Resilient and Autonomic Systems, V1, P1, DOI 10.4018/jaras.2010071701
   Flissi A, 2008, IEEE ACM INT SYMP, P177, DOI 10.1109/CCGRID.2008.59
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gill CD, 2005, REAL-TIME SYST, V29, P101, DOI 10.1007/s11241-005-6881-1
   Gokhale Aniruddha., 2002, P OOPSLA 2002 WORKSH
   Hoareau D, 2008, PERS UBIQUIT COMPUT, V12, P167, DOI 10.1007/s00779-006-0110-7
   Lardieri P, 2007, J SYST SOFTWARE, V80, P984, DOI 10.1016/j.jss.2006.09.042
   Molnar I., 2006, LINUX REAL TIME PREE
   Object Management Group, 2008, 20080107 OMG
   Object Management Group, 2008, 20080108 OMG 3
   ObjectWeb Consortium, 2006, CARDAMOM ENT MIDDL B
   *OMG, 2006, 20060402 OMG
   Otte W. R., 2010, P 9 WORKSH AD REFL M
   Otte W.R., 2011, Proceedings of the 14th international ACM Sigsoft symposium on Component based software engineering, CBSE '11, P21
   Otte W.R., 2008, P 8 ANN NASA EARTH S
   Pérez C, 2002, LECT NOTES COMPUT SC, V2536, P88
   Quéma V, 2004, LECT NOTES COMPUT SC, V3083, P50
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Shankaran N., 2006, DEP AD DISTR SYST TR
   Subramonian V, 2004, REAL TIM SYST SYMP P, P252, DOI 10.1109/REAL.2004.53
   Subramonian V, 2007, J SYST SOFTWARE, V80, P668, DOI 10.1016/j.jss.2006.08.023
   Suri D., 2007, P 2007 IEEE AER C BI
   Toure M, 2010, SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS: ICAS 2010, PROCEEDINGS, P78, DOI 10.1109/ICAS.2010.20
   White B, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1060289.1060313
   White J., 2005, ACM SE 43 P 43 ANN S
NR 33
TC 10
Z9 10
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 475
EP 488
DI 10.1016/j.infsof.2012.08.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Choi, Y
   Kim, M
AF Choi, Yunja
   Kim, Moonzoo
TI Controlled composition and abstraction for bottom-up integration and
   verification of abstract components
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Controlled composition; Abstraction; Verification
AB This work proposes a method for improving the scalability of model-checking compositions in the bottom-up construction of abstract components. The approach uses model checking in the model construction process for testing the composite behaviors of components, including process deadlock and inconsistency in inter-component call sequences. Assuming a single processor model, the scalability issue is addressed by introducing operational models for synchronous/asynchronous inter-component message passing, which are designed to reduce spurious behaviors caused by typical parallel compositions. Together with two abstraction techniques, synchronized abstraction and projection abstraction, that hide verified internal communication behavior, this operational model helps to reduce the complexity of composition and verification.
   The approach is supported by the MARMOT development framework, where the soundness of the approach is assured through horizontal verification as well as vertical verification. Application of the approach on a wireless sensor network application shows promising performance improvement with linear growth in memory usage for the vertically incremental verification of abstract components. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Choi, Yunja] Kyungpook Natl Univ, Sch Comp Sci & Engn, Taegu, South Korea.
   [Kim, Moonzoo] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Kyungpook National University; Korea Advanced Institute of Science &
   Technology (KAIST)
RP Choi, Y (corresponding author), Kyungpook Natl Univ, Sch Comp Sci & Engn, Taegu, South Korea.
EM yuchoi76@knu.ac.kr; moonzoo@cs.kaist.ac.kr
RI Kim, Moonzoo/C-1661-2011
FU National Research Foundation of Korea; Korean Government [2010-0017156];
   Engineering Research Center of Excellence of the Korean Ministry of
   Education, Science and Technology(MEST)/National Research
   Foundation(NRF) [2011-0000978]
FX This work was supported by National Research Foundation of Korea Grant
   funded by the Korean Government (2010-0017156) and the Engineering
   Research Center of Excellence Program of the Korean Ministry of
   Education, Science and Technology(MEST)/National Research
   Foundation(NRF) (Grant 2011-0000978).
CR Anand S., 2008, International Journal on Software Tools for Technology Transfer (STTT), P53
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Archer W, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P158, DOI 10.1109/IPSN.2007.4379675
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P228, DOI 10.1109/TSE.2010.39
   Basu A, 2007, Sixth IEEE International Symposium on Network Computing and Applications, Proceedings, P257, DOI 10.1109/NCA.2007.52
   BEYER D, 2007, INT J SOFTWARE TOOLS, V9
   BLIUDZE S, 2008, IEEE T COMPUTERS
   BOBARU MG, 2007, 13 INT C TOOLS ALG C, P292
   BOBARU MG, 2008, 20 INT C COMP AID VE, P135
   Bucur D., 2010, 9 ACM IEEE INT C INF
   BUSTAN D, 2001, P 6 INT WORKSH FMICS, P163
   Canal C, 2008, IEEE T SOFTWARE ENG, V34, P546, DOI 10.1109/TSE.2008.31
   CHIODO M, 1992, P IEEE ACM INT C COM
   Choi Y, 2011, SOFTW SYST MODEL, V10, P91, DOI 10.1007/s10270-010-0147-y
   Clarke E., 2004, 10 INT C TOOLS ALG C
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 2001, FORMAL METHODS SYSTE, V19
   Cobleigh JM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348253
   COLBY C, 1998, ACM SIGPLAN NOTICES
   CORDEIRO L, 2009, INT C EMB SOFTW SYST
   DAHLWEID M, 2008, 31 INT C SOFTW ENG
   DEALFARO L, 2001, P 1 INT WORKSH EMB S
   Gannod GC, 2001, PROG COMPREHEN, P221, DOI 10.1109/WPC.2001.921733
   Gay Daniel., 2003, Composite Materials: Design and Applications, P1
   GIESE H, 2003, P 9 EUR SOFTW ENG C
   GOMES L, 2005, 10 IEEE INT C EM TEC
   Gössler G, 2007, LECT NOTES COMPUT SC, V4362, P295
   Graf S., 1996, Formal Aspects of Computing, V8, P607, DOI 10.1007/BF01211911
   Gupta A, 2008, FORM METHOD SYST DES, V32, P285, DOI 10.1007/s10703-008-0050-0
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hoare CAR., 1985, Communicating Sequential Processes
   Hughes G, 2008, IEEE T SOFTWARE ENG, V34, P614, DOI 10.1109/TSE.2008.72
   IZADI M, 2008, 6 IEEE INT C SOFTW E
   Johnson SD, 2003, COMPUTER, V36, P104, DOI 10.1109/MC.2003.1244539
   KHAN MU, 2006, P 3 INT WORKSH MOD B, P13
   Kim M, 2011, IEEE T SOFTWARE ENG, V37, P146, DOI 10.1109/TSE.2010.68
   KIM MZ, 2008, 15 INT SPIN WORKSH M
   Levis P, 2009, TINYOS PROGRAMMING, P1, DOI 10.1017/CBO9780511626609
   Nam WH, 2008, FORM METHOD SYST DES, V32, P207, DOI 10.1007/s10703-008-0055-8
   NEJARI S, 2007, 29 INT C SOFTW ENG
   Pelliccione P, 2008, J SYST SOFTWARE, V81, P2237, DOI 10.1016/j.jss.2008.05.030
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   PENIX J, 2005, FORMAL METHODS SYSTE, V26
   RIBEIRO OR, 2005, 12 IEEE INT C WORKSH
   VISSER W, 2000, 15 IEEE INT C AUT SO
   Völgyesi P, 2005, SCI COMPUT PROGRAM, V56, P191, DOI 10.1016/j.scico.2004.11.012
   XIE F, 2003, P JOINT C ESEC FSE
   Yao HQ, 2009, IEEE T COMPUT AID D, V28, P433, DOI 10.1109/TCAD.2009.2012531
   ZARAKET F, 2005, P IEEE ACM INT C COM
   ZIADI T, 2004, 26 INT C SOFTW ENG
NR 51
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 119
EP 136
DI 10.1016/j.infsof.2011.08.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500008
DA 2024-07-18
ER

PT J
AU Golfarelli, M
   Rizzi, S
AF Golfarelli, Matteo
   Rizzi, Stefano
TI Data warehouse testing: A prototype-based methodology
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Testing; Business intelligence; Data warehouse; Software engineering
AB Context: Testing is an essential part of the development life-cycle of any software product. While most phases of data warehouse design have received considerable attention in the literature, not much has been written about data warehouse testing.
   Objective: In this paper we propose a comprehensive approach to testing data warehouse systems. Its main features are earliness with respect to the life-cycle, modularity, tight coupling with design, scalability, and measurability through proper metrics.
   Method: We introduce a number of specific testing activities, we classify them in terms of what is tested and how it is tested, and we show how they can be framed within a prototype-based methodology. We apply our approach to a real case study for a large retail company.
   Results: The case study we faced, based on an iterative prototype-based medium-size project, confirmed the validity of our approach. In particular, the main benefits were obtained in terms of project transparency, coordination of the development team, and organization of design activities.
   Conclusion: Though some general-purpose testing techniques can be applied to data warehouse projects, the effectiveness of testing can be largely improved by applying specifically-devised techniques and metrics. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Golfarelli, Matteo; Rizzi, Stefano] DEIS Univ Bologna, Bologna, Italy.
C3 University of Bologna
RP Rizzi, S (corresponding author), DEIS Univ Bologna, Viale Risorgimento 2, Bologna, Italy.
EM matteo.golfarelli@unibo.it; stefano.rizzi@unibo.it
RI Rizzi, Stefano/IUO-7212-2023
OI Rizzi, Stefano/0000-0002-4617-217X
CR [Anonymous], P TEST TEST EXC SPEE
   [Anonymous], P CAISE HEID GERM
   [Anonymous], P ECUMICT GENT BELG
   [Anonymous], 2009, Data warehouse design: modern principles and methodologies
   [Anonymous], INTELLIGENT ENTERPRI
   [Anonymous], 2002, P STAREAST ORL
   [Anonymous], P DMDW INT SWITZ
   [Anonymous], P DMDW
   [Anonymous], ENCY DATABASE SYSTEM
   [Anonymous], P DMDW
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], DATA WAREHOUSE TESTI
   [Anonymous], TESTING DATA WAREHOU
   [Anonymous], 2004, INT C VERY LARGE DAT
   [Anonymous], 1994, SOFTWARE METRICS PRE
   [Anonymous], DATA WAREHOUSE TESTI
   [Anonymous], 2007, P INT C DAT ENG, DOI DOI 10.1109/ICDE.2007.367896
   [Anonymous], P ICEIS
   Chays D., 2000, Software Engineering Notes, V25, P147, DOI 10.1145/347636.348954
   DENNING DE, 1983, COMPUTER, V16, P69, DOI 10.1109/MC.1983.1654444
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Golfarelli Matteo, 2007, International Journal of Data Warehousing and Mining, V3, P51, DOI 10.4018/jdwm.2007100103
   GOLFARELLI M., 1998, Proceedings of the 1st ACM International workshop on Data warehousing and OLAP, P3
   Golfarelli M., 2009, 12 ACM INT WORKSH DA, P17
   GORDON VS, 1995, IEEE SOFTWARE, V12, P85, DOI 10.1109/52.363162
   Herzog P., 2010, OPEN SOURCE SECURITY
   Houkjaer Kenneth, 2006, P 32 INT C VERY LARG, P1243
   Jarke Matthias., 2003, FUNDAMENTALS DATA WA, V2nd
   Katic N, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P300, DOI 10.1109/DEXA.1998.707417
   Kimball R., 1998, The data warehouse lifecycle toolkit: expert methods for designing, developing, and deploying data warehouses
   Lechtenbörger J, 2003, INFORM SYST, V28, P415, DOI 10.1016/S0306-4379(02)00024-8
   Lehner W, 1998, TENTH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT - PROCEEDINGS, P63, DOI 10.1109/SSDM.1998.688112
   Mishra C., 2008, SIGMOD, P499, DOI DOI 10.1145/1376616.1376668
   Ordonez C, 2008, DECIS SUPPORT SYST, V44, P495, DOI 10.1016/j.dss.2007.06.004
   Papastefanatos G, 2008, LECT NOTES COMPUT SC, V5231, P440, DOI 10.1007/978-3-540-87877-3_32
   Prat N, 2006, DECIS SUPPORT SYST, V42, P1449, DOI 10.1016/j.dss.2005.12.001
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Priebe Torsten., 2001, P 20 INT C CONCEPTUA, P311
   Sen A, 2005, COMMUN ACM, V48, P79, DOI 10.1145/1047671.1047673
   Serrano MA, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P327, DOI 10.1109/QSIC.2003.1319118
   Serrano M, 2007, INFORM SOFTWARE TECH, V49, P851, DOI 10.1016/j.infsof.2006.09.008
   Smith D, 2008, TRANS DATA PRIV, V1, P34
   Sommerville I., 2004, Software Engineering
   Stephens J. M.  Jr., 2004, Software Engineering Notes, V29, P104, DOI 10.1145/974043.974060
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
NR 45
TC 13
Z9 16
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1183
EP 1198
DI 10.1016/j.infsof.2011.04.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500002
DA 2024-07-18
ER

PT J
AU Song, IG
   Jeon, SU
   Han, AR
   Bae, DH
AF Song, In-Gwon
   Jeon, Sang-Uk
   Han, Ah-Rim
   Bae, Doo-Hwan
TI An approach to identifying causes of implied scenarios using
   unenforceable orders
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML 2.0; Interaction overview diagram; Sequence diagram; Scenarios;
   Requirements verification; Implied scenarios
AB Context: The implied scenarios are unexpected behaviors in the scenario specifications. Detecting and handling them is essential for the correctness of the scenario specifications. To handle such implied scenarios, identifying the causes of implied scenarios is also essential. Most recent researches focus on detecting those implied scenarios, themselves or limited causes of implied scenarios.
   Objective: The purpose of this research is to provide an approach to detecting the causes of implied scenarios.
   Method: The scenario specification is a set of events and a set of relative orders between the events, and enforces them for its implementation. Among the orders, a set of orders that cannot be inherently enforced is the unenforceable orders. Obviously, existence of unenforceable orders leads the implied scenarios. To obtain the unenforceable orders, we first provide a method to represent each of the specification and its implementation as a set of orders between events, called the causal order graph. Then, the differences between them are the unenforceable orders.
   Results: Because the unenforceable orders consist of events and their order relation that are specified in the scenario specification, they can point out which part of the scenario specification should be considered to handle the implied scenarios. In addition, our approach supports the synchronous, asynchronous, and FIFO communication styles without the state explosion or heavy computational overhead. To validate our approach, we provide two case studies.
   Conclusion: This approach helps a designer to effectively correct the scenario specification by identifying where to be fixed, especially in large cases and under the various communication styles. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Song, In-Gwon; Jeon, Sang-Uk; Han, Ah-Rim; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Song, IG (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, Taejon 305701, South Korea.
EM igsong@gmail.com
FU MKE (Ministry of Knowledge Economy), Korea, under the ITRC (Information
   Technology Research Center) [NIPA-2010-(C1090-1031-0001)]
FX "This research was supported by the MKE (Ministry of Knowledge Economy),
   Korea, under the ITRC (Information Technology Research Center) support
   program supervised by the NIPA (National IT Industry Promotion Agency)"
   (NIPA-2010-(C1090-1031-0001)).
CR Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   ALUR R, LECT NOTES COMPUTER, V2076, P797
   ALUR R, 2003, INFERENCE MESSAGE SE
   Baker P., 2005, P 10 EUR SOFTW ENG C, P50
   BenAbdallah H, 1997, LECT NOTES COMPUT SC, V1217, P259, DOI 10.1007/BFb0035393
   Decker G, 2007, LECT NOTES COMPUT SC, V4714, P305
   Letier E, 2005, PROC INT CONF SOFTW, P382
   Leue S., 1998, SYNTHESIZING ROOM MO
   MUCCINI H, 2003, P INT C FUND APPR SO, P372
   *OMG, 2007, UN MOD LANG SUP VERS
   Sutcliffe A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P320
   Uchitel S., 2001, Software Engineering Notes, V26, P74, DOI 10.1145/503271.503220
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   UCHITEL S, 2001, LTSA MSC TOOL
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Zaha JM, 2008, IEEE T SYST MAN CY C, V38, P302, DOI 10.1109/TSMCC.2008.919193
NR 18
TC 11
Z9 14
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 666
EP 681
DI 10.1016/j.infsof.2010.11.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900011
DA 2024-07-18
ER

PT J
AU Bouktif, S
   Ahmed, F
   Khalil, I
   Antoniol, G
AF Bouktif, Salah
   Ahmed, Faheem
   Khalil, Issa
   Antoniol, Giuliano
TI A novel composite model approach to improve software quality prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality prediction; Fault-proneness; Decision trees; Genetic
   algorithm
AB Context: How can quality of software systems be predicted before deployment? In attempting to answer this question, prediction models are advocated in several studies. The performance of such models drops dramatically, with very low accuracy, when they are used in new software development environments or in new circumstances.
   Objective: The main objective of this work is to circumvent the model generalizability problem. We propose a new approach that substitutes traditional ways of building prediction models which use historical data and machine learning techniques.
   Method: In this paper, existing models are decision trees built to predict module fault-proneness within the NASA Critical Mission Software. A genetic algorithm is developed to combine and adapt expertise extracted from existing models in order to derive a "composite" model that performs accurately in a given context of software development. Experimental evaluation of the approach is carried out in three different software development circumstances.
   Results: The results show that derived prediction models work more accurately not only for a particular state of a software organization but also for evolving and modified ones.
   Conclusion: Our approach is considered suitable for software data nature and at the same time superior to model selection and data combination approaches. It is then concluded that learning from existing software models (i.e., software expertise) has two immediate advantages; circumventing model generalizability and alleviating the lack of data in software-engineering. Crown Copyright (C) 2010 Published by Elsevier B.V. All rights reserved.
C1 [Bouktif, Salah; Ahmed, Faheem; Khalil, Issa] United Arab Emirates Univ, Fac Informat Technol, Al Ain, U Arab Emirates.
   [Bouktif, Salah; Antoniol, Giuliano] Ecole Polytech, Montreal, PQ H3C 3A7, Canada.
C3 United Arab Emirates University; Universite de Montreal; Polytechnique
   Montreal
RP Bouktif, S (corresponding author), United Arab Emirates Univ, Fac Informat Technol, Al Ain, U Arab Emirates.
EM salahb@uaeu.ac.ae; f.ahmed@uaeu.ac.ae; ikhalil@uaeu.ac.ae;
   antoniol@ieee.org
RI Bouktif, Salah/AAD-6537-2021
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], P 5 INT ECOOP WORKSH
   Bouktif S, 2002, PROC IEEE INT CONF S, P385, DOI 10.1109/ICSM.2002.1167795
   BRIAND L, 2002, ADV COMPUTERS
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Cook T. D., 1979, QUASIEXPERIMENTATION
   El-Emam K., 2000, A methodology for validating software product metrics
   Falkenauer E., 1998, Genetic algorithms and grouping problems, chichester
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Goodman P., 1993, Practical Implementation of Software Metrics
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   HARMAN M, 2002, AAAI GEN EV COMP C G, P82
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jacobs RA, 1991, NEURAL COMPUT, V3, P79, DOI 10.1162/neco.1991.3.1.79
   KAI M, 1997, P EUR C MACH LEARN, P250
   Khoshgoftaar TM, 2005, J SYST SOFTWARE, V76, P111, DOI 10.1016/j.jss.2004.04.027
   Khoshgoftaar TM, 2003, PROC INT C TOOLS ART, P374, DOI 10.1109/TAI.2003.1250214
   KHOSHGOFTAAR TM, 1992, IEEE T SOFTWARE ENG, V18, P979, DOI 10.1109/32.177367
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Liu Y, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P56
   LYU MR, 1992, IEEE SOFTWARE, V9, P43, DOI 10.1109/52.143104
   Merz C. J., 1998, THESIS U CALIFORNIA
   MOERLAND P, 1999, DYNABOOST COMBINING
   *NASA, 2008, NASA 4 5 FAC METR DA
   Perrone MP., 1993, ARTIFICIAL NEURAL NE
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   ROBINS A, 1995, REHEARSAL PSEUDOREHE, V7, P123
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Takahashi R, 1997, J SYST SOFTWARE, V38, P61, DOI 10.1016/S0164-1212(97)00060-5
   XING F, 2005, ISSRE 05, P213
   YOUDEN WJ, 1961, MAT RES STANDARDS
   ZHANG D, 1986, SOFTW QUAL J, P87
NR 39
TC 12
Z9 13
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1298
EP 1311
DI 10.1016/j.infsof.2010.07.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200004
DA 2024-07-18
ER

EF